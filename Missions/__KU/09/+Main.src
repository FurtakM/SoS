Every 0$5 do
begin
enable;
     If IsDying(Wojo) then
          begin
          wait(0$5);
          SetLives(Wojo,251);
          end;
     If GetLives(Wojo) < 500 then
          wait(0$5);
          SetLives(Wojo,501);
          end;Starting
begin



end;

Every 0$01 do
var units1,units2,units3,units4,units5,units6,units7,units8,units9,units10,units11,units12,units13,units14,units15,units16,units17,units18,
    un,un1,un2,un3,un4,un5,un6,un7,un8,un9,un10,un11,un12,un13,un14,un15,un16,un17,un18,
    bud1,bud2,bud3,bud4,bud5,bud6,bud7,bud8,bud9,bud10,bud11,bud12,bud13,bud14,bud15,bud16,bud17,bud18,
    b1,b2,b3,b4,b5,b6,b7,b8,b9,b10,b11,b12,b13,b14,b15,b16,b17,b18;
begin
enable;

       bud1 := FilterAllUnits([[f_side, 8], [f_btype, b_barracks]]);
       bud2 := FilterAllUnits([[f_side, 8], [f_btype, b_armoury]]);
       bud3 := FilterAllUnits([[f_side, 8], [f_btype, b_bunker]]);
       bud4 := FilterAllUnits([[f_side, 8], [f_btype, b_turret]]);
       bud5 := FilterAllUnits([[f_side, 8], [f_btype, b_lab]]);
       bud6 := FilterAllUnits([[f_side, 8], [f_btype, b_workshop]]);
       bud7 := FilterAllUnits([[f_side, 8], [f_btype, b_factory]]);
       bud8 := FilterAllUnits([[f_side, 8], [f_btype, b_depot]]);
       bud9 := FilterAllUnits([[f_side, 8], [f_btype, b_warehouse]]);
       bud10 := FilterAllUnits([[f_side, 8], [f_btype, b_lab_basic]]);
       bud11 := FilterAllUnits([[f_side, 8], [f_btype, b_lab_biological]]);
       bud12 := FilterAllUnits([[f_side, 8], [f_btype, b_lab_computer]]);
       bud13 := FilterAllUnits([[f_side, 8], [f_btype, b_lab_full]]);
       bud14 := FilterAllUnits([[f_side, 8], [f_btype, b_lab_half]]);
       bud15 := FilterAllUnits([[f_side, 8], [f_btype, b_lab_opto]]);
       bud16 := FilterAllUnits([[f_side, 8], [f_btype, b_lab_siberium]]);
       bud17 := FilterAllUnits([[f_side, 8], [f_btype, b_lab_spacetime]]);
       bud18 := FilterAllUnits([[f_side, 8], [f_btype, b_lab_weapon]]);




For b1 in bud1 do
begin
     units1 := UnitsInSide(b1);
end;

For b2 in bud2 do
begin
     units2 := UnitsInSide(b2);
end;

For b3 in bud3 do
begin
     units3 := UnitsInSide(b3);
end;

For b4 in bud4 do
begin
     units4 := UnitsInSide(b4);
end;

For b5 in bud5 do
begin
     units5 := UnitsInSide(b5);
end;

For b6 in bud6 do
begin
     units6 := UnitsInSide(b6);
end;

For b7 in bud7 do
begin
     units7 := UnitsInSide(b7);
end;

For b8 in bud8 do
begin
     units8 := UnitsInSide(b8);
end;

For b9 in bud9 do
begin
     units9 := UnitsInSide(b9);
end;

For b10 in bud10 do
begin
     units10 := UnitsInSide(b10);
end;

For b11 in bud11 do
begin
     units11 := UnitsInSide(b11);
end;

For b12 in bud12 do
begin
     units12 := UnitsInSide(b12);
end;

For b13 in bud13 do
begin
     units13 := UnitsInSide(b13);
end;

For b14 in bud14 do
begin
     units14 := UnitsInSide(b14);
end;

For b15 in bud15 do
begin
     units15 := UnitsInSide(b15);
end;

For b16 in bud16 do
begin
     units16 := UnitsInSide(b16);
end;

For b17 in bud17 do
begin
     units17 := UnitsInSide(b17);
end;

For b18 in bud18 do
begin
     units18 := UnitsInSide(b18);
end;

For un1 in units1 do
begin

If GetClass(un1) = 1 then
   AddExperience(un1, skill_combat, 100)
else
   AddExperience(un1, skill_combat, 50);
end;

For un2 in units2 do
begin

If GetClass(un2) = 1 then
   AddExperience(un2, skill_combat, 100)
else
   AddExperience(un2, skill_combat, 50);
end;

For un3 in units3 do
begin

If GetClass(un3) = 1 then
   AddExperience(un3, skill_combat, 100)
else
   AddExperience(un3, skill_combat, 50);
end;

For un4 in units4 do
begin

If GetClass(un4) = 1 then
   AddExperience(un4, skill_combat, 100)
else
   AddExperience(un4, skill_combat, 50);
end;

For un5 in units5 do
begin

If GetClass(un5) = 4 then
   AddExperience(un5, skill_scientistic, 100)
else
   AddExperience(un5, skill_scientistic, 50);
end;

For un6 in units6 do
begin

If GetClass(un6) = 3 then
   AddExperience(un6, skill_mechanical, 100)
else
   AddExperience(un6, skill_mechanical, 50);
end;

For un7 in units7 do
begin

If GetClass(un7) = 3 then
   AddExperience(un7, skill_mechanical, 100)
else
   AddExperience(un7, skill_mechanical, 50);
end;

For un8 in units8 do
begin

If GetClass(un8) = 2 then
   AddExperience(un8, skill_engineering, 100)
else
   AddExperience(un8, skill_engineering, 50);
end;

For un9 in units9 do
begin

If GetClass(un9) = 2 then
   AddExperience(un9, skill_engineering, 100)
else
   AddExperience(un9, skill_engineering, 50);
end;

For un10 in units10 do
begin

If GetClass(un10) = 4 then
   AddExperience(un10, skill_scientistic, 100)
else
   AddExperience(un10, skill_scientistic, 50);
end;

For un11 in units11 do
begin

If GetClass(un11) = 4 then
   AddExperience(un11, skill_scientistic, 100)
else
   AddExperience(un11, skill_scientistic, 50);
end;

For un12 in units12 do
begin

If GetClass(un12) = 4 then
   AddExperience(un12, skill_scientistic, 100)
else
   AddExperience(un12, skill_scientistic, 50);
end;

For un13 in units13 do
begin

If GetClass(un13) = 4 then
   AddExperience(un13, skill_scientistic, 100)
else
   AddExperience(un13, skill_scientistic, 50);
end;

For un14 in units14 do
begin

If GetClass(un14) = 4 then
   AddExperience(un14, skill_scientistic, 100)
else
   AddExperience(un14, skill_scientistic, 50);
end;

For un15 in units15 do
begin

If GetClass(un15) = 4 then
   AddExperience(un15, skill_scientistic, 100)
else
   AddExperience(un15, skill_scientistic, 50);
end;

For un16 in units16 do
begin

If GetClass(un16) = 4 then
   AddExperience(un16, skill_scientistic, 100)
else
   AddExperience(un16, skill_scientistic, 50);
end;

For un17 in units17 do
begin

If GetClass(un17) = 4 then
   AddExperience(un17, skill_scientistic, 100)
else
   AddExperience(un17, skill_scientistic, 50);
end;

For un18 in units18 do
begin

If GetClass(un18) = 4 then
   AddExperience(un18, skill_scientistic, 100)
else
   AddExperience(un18, skill_scientistic, 50);
end;

End;




