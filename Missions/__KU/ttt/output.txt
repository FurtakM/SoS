// on MineDetonated ( unit , x , y ) do begin display_strings := [ unit , x , y ] ;
   0: LD_ADDR_OWVAR 47
   4: PUSH
   5: LD_VAR 0 1
   9: PUSH
  10: LD_VAR 0 2
  14: PUSH
  15: LD_VAR 0 3
  19: PUSH
  20: EMPTY
  21: LIST
  22: LIST
  23: LIST
  24: ST_TO_ADDR
// end ;
  25: PPOPN 3
  27: END
// on MinePlaced ( unit , x , y , type ) do begin display_strings := [ unit , x , y , type ] ;
  28: LD_ADDR_OWVAR 47
  32: PUSH
  33: LD_VAR 0 1
  37: PUSH
  38: LD_VAR 0 2
  42: PUSH
  43: LD_VAR 0 3
  47: PUSH
  48: LD_VAR 0 4
  52: PUSH
  53: EMPTY
  54: LIST
  55: LIST
  56: LIST
  57: LIST
  58: ST_TO_ADDR
// end ;
  59: PPOPN 4
  61: END
// on UpgradeStarted ( unit , from0 , to0 , from1 , to1 , from2 , to2 ) do begin display_strings := [ unit , from0 , to0 , from1 , to1 , from2 , to2 ] ;
  62: LD_ADDR_OWVAR 47
  66: PUSH
  67: LD_VAR 0 1
  71: PUSH
  72: LD_VAR 0 2
  76: PUSH
  77: LD_VAR 0 3
  81: PUSH
  82: LD_VAR 0 4
  86: PUSH
  87: LD_VAR 0 5
  91: PUSH
  92: LD_VAR 0 6
  96: PUSH
  97: LD_VAR 0 7
 101: PUSH
 102: EMPTY
 103: LIST
 104: LIST
 105: LIST
 106: LIST
 107: LIST
 108: LIST
 109: LIST
 110: ST_TO_ADDR
// end ;
 111: PPOPN 7
 113: END
// export function ComAgressiveMoveToUnit ( unit , enemy ) ; var x , y ; begin
 114: LD_INT 0
 116: PPUSH
 117: PPUSH
 118: PPUSH
// if not unit or not enemy then
 119: LD_VAR 0 1
 123: NOT
 124: IFTRUE 133
 126: PUSH
 127: LD_VAR 0 2
 131: NOT
 132: OR
 133: IFFALSE 137
// exit ;
 135: GO 256
// x := GetX ( enemy ) ;
 137: LD_ADDR_VAR 0 4
 141: PUSH
 142: LD_VAR 0 2
 146: PPUSH
 147: CALL_OW 250
 151: ST_TO_ADDR
// y := GetY ( enemy ) ;
 152: LD_ADDR_VAR 0 5
 156: PUSH
 157: LD_VAR 0 2
 161: PPUSH
 162: CALL_OW 251
 166: ST_TO_ADDR
// if ValidHex ( x , y ) then
 167: LD_VAR 0 4
 171: PPUSH
 172: LD_VAR 0 5
 176: PPUSH
 177: CALL_OW 488
 181: IFFALSE 256
// if GetType ( enemy ) = unit_building and See ( GetSide ( unit ) , enemy ) then
 183: LD_VAR 0 2
 187: PPUSH
 188: CALL_OW 247
 192: PUSH
 193: LD_INT 3
 195: EQUAL
 196: IFFALSE 219
 198: PUSH
 199: LD_VAR 0 1
 203: PPUSH
 204: CALL_OW 255
 208: PPUSH
 209: LD_VAR 0 2
 213: PPUSH
 214: CALL_OW 292
 218: AND
 219: IFFALSE 237
// ComAttackUnit ( unit , enemy ) else
 221: LD_VAR 0 1
 225: PPUSH
 226: LD_VAR 0 2
 230: PPUSH
 231: CALL_OW 115
 235: GO 256
// ComAgressiveMove ( unit , x , y ) ;
 237: LD_VAR 0 1
 241: PPUSH
 242: LD_VAR 0 4
 246: PPUSH
 247: LD_VAR 0 5
 251: PPUSH
 252: CALL_OW 114
// end ;
 256: LD_VAR 0 3
 260: RET
