// on MineDetonated ( unit , x , y ) do begin display_strings := [ unit , x , y ] ;
   0: LD_ADDR_OWVAR 47
   4: PUSH
   5: LD_VAR 0 1
   9: PUSH
  10: LD_VAR 0 2
  14: PUSH
  15: LD_VAR 0 3
  19: PUSH
  20: EMPTY
  21: LIST
  22: LIST
  23: LIST
  24: ST_TO_ADDR
// end ;
  25: PPOPN 3
  27: END
// on MinePlaced ( unit , x , y , type ) do begin display_strings := [ unit , x , y , type ] ;
  28: LD_ADDR_OWVAR 47
  32: PUSH
  33: LD_VAR 0 1
  37: PUSH
  38: LD_VAR 0 2
  42: PUSH
  43: LD_VAR 0 3
  47: PUSH
  48: LD_VAR 0 4
  52: PUSH
  53: EMPTY
  54: LIST
  55: LIST
  56: LIST
  57: LIST
  58: ST_TO_ADDR
// end ;
  59: PPOPN 4
  61: END
// on UpgradeStarted ( unit , from0 , to0 , from1 , to1 , from2 , to2 ) do begin display_strings := [ unit , from0 , to0 , from1 , to1 , from2 , to2 ] ;
  62: LD_ADDR_OWVAR 47
  66: PUSH
  67: LD_VAR 0 1
  71: PUSH
  72: LD_VAR 0 2
  76: PUSH
  77: LD_VAR 0 3
  81: PUSH
  82: LD_VAR 0 4
  86: PUSH
  87: LD_VAR 0 5
  91: PUSH
  92: LD_VAR 0 6
  96: PUSH
  97: LD_VAR 0 7
 101: PUSH
 102: EMPTY
 103: LIST
 104: LIST
 105: LIST
 106: LIST
 107: LIST
 108: LIST
 109: LIST
 110: ST_TO_ADDR
// end ;
 111: PPOPN 7
 113: END
// export function ComAgressiveMoveToUnit ( unit , enemy ) ; var x , y ; begin
 114: LD_INT 0
 116: PPUSH
 117: PPUSH
 118: PPUSH
// if not unit or not enemy then
 119: LD_VAR 0 1
 123: NOT
 124: PUSH
 125: LD_VAR 0 2
 129: NOT
 130: OR
 131: IFFALSE 135
// exit ;
 133: GO 252
// x := GetX ( enemy ) ;
 135: LD_ADDR_VAR 0 4
 139: PUSH
 140: LD_VAR 0 2
 144: PPUSH
 145: CALL_OW 250
 149: ST_TO_ADDR
// y := GetY ( enemy ) ;
 150: LD_ADDR_VAR 0 5
 154: PUSH
 155: LD_VAR 0 2
 159: PPUSH
 160: CALL_OW 251
 164: ST_TO_ADDR
// if ValidHex ( x , y ) then
 165: LD_VAR 0 4
 169: PPUSH
 170: LD_VAR 0 5
 174: PPUSH
 175: CALL_OW 488
 179: IFFALSE 252
// if GetType ( enemy ) = unit_building and See ( GetSide ( unit ) , enemy ) then
 181: LD_VAR 0 2
 185: PPUSH
 186: CALL_OW 247
 190: PUSH
 191: LD_INT 3
 193: EQUAL
 194: PUSH
 195: LD_VAR 0 1
 199: PPUSH
 200: CALL_OW 255
 204: PPUSH
 205: LD_VAR 0 2
 209: PPUSH
 210: CALL_OW 292
 214: AND
 215: IFFALSE 233
// ComAttackUnit ( unit , enemy ) else
 217: LD_VAR 0 1
 221: PPUSH
 222: LD_VAR 0 2
 226: PPUSH
 227: CALL_OW 115
 231: GO 252
// ComAgressiveMove ( unit , x , y ) ;
 233: LD_VAR 0 1
 237: PPUSH
 238: LD_VAR 0 4
 242: PPUSH
 243: LD_VAR 0 5
 247: PPUSH
 248: CALL_OW 114
// end ;
 252: LD_VAR 0 3
 256: RET
