Export Heike, Givi, Mike, Ibrahim, Kamil, Kaia, Sophia, Markov, Shariff, Olaf, Omar,
       Kurt, Aviradze, Rolf, arDepot,
       heikeSecondSquad, heikeApes;
Export rolfSquad, omarSquad;
Export Function PrepareArabian;
var i, b, base, hasRadar, hasRemote, hasDrugs, factory, depot, lab, bunkers, tmp;
begin
uc_nation := 2;
uc_side := 5;
Shariff := PrepareUnit('Abdul', false, '');
Omar := PrepareUnit('Omar', false, '');

uc_side := 2;

Heike := PrepareUnit('Heike', (not debug), prefix);
Ibrahim := PrepareUnit('Ibrahim', (not debug), prefix);
Givi := PrepareUnit('Givi', (not debug), prefix);
Kamil := PrepareUnit('Kamil', (not debug), prefix);
Kaia := PrepareUnit('Kaia', (not debug), prefix);
Sophia := PrepareUnit('Sophia', (not debug), prefix);
Markov := PrepareUnit('Markov', (not debug), prefix);
Aviradze := PrepareUnit('Aviradze', (not debug), prefix);
Kurt := PrepareUnit('Kurt', (not debug), prefix);
Mike := PrepareUnit('Mike', (not debug), prefix);
Olaf := PrepareUnit('Olaf', false, '');

heikeSecondSquad := CreateCharacterSet('05_others');
heikeApes := CreateCharacterSet('05_apes');
hasRadar := LoadVariable('05_Radar', debug);
hasRemote := LoadVariable('05_RemoteControl', debug);
hasDrugs := LoadVariable('05_DrugsTested', debug);

if hasDrugs then
   SetTech(tech_StimDrugs, 2, state_researched);

if hasRadar then
   SetTech(tech_radar, 2, state_researched);

if hasRemote then
   SetTech(tech_remCont, 2, state_researched);

// cameras
tmp := AreaToList(camArea, 0);

for i := 1 to tmp[1] do
    if IsEnvironment(tmp[1][i], tmp[2][i]) then
       HiddenCamera(tmp[1][i], tmp[2][i], 2);

// prepare base
base := [ [b_depot, 206, 80, 1],
          [b_bunker, 221, 95, 5, ar_light_gun],
          [b_bunker, 223, 88, 5, ar_double_machine_gun],
          [b_bunker, 202, 64, 2, ar_gatling_gun],
          [b_factory, 203, 91, 1],
          [b_lab_full, 217, 78, 4],
          [b_solar_power, 220, 99, 1],
          [b_solar_power, 220, 103, 1],
          [b_solar_power, 216, 102, 1],
          [b_ext_gun, 203, 94, 0],
          [b_ext_stitch, 200, 88, 2],
          [b_ext_track, 199, 91, 1],
          [b_oil_power, 197, 81, 1],
          [b_oil_power, 197, 78, 3] ];

if hasRadar then
   base := Replace(base, base + 1, [b_ext_radar, 203, 87, 3]);

if hasRemote then
   base := Replace(base, base + 1, [b_ext_radio, 207, 95, 5]);

for i in base do
    begin
    bc_type := i[1];
    bc_level := 3;

    if i[1] = b_lab_full then
       begin
       bc_kind1 := b_lab_weapon;

       if hasRadar then
          bc_kind2 := b_lab_opto
       else
          bc_kind2 := -1;
       end;

    b := CreateAndPlaceBuildingXYD(i[2], i[3], i[4]);

    if i > 4 then
       PlaceWeaponTurret(b, i[5]);

    if i[1] = b_bunker then
       bunkers := Replace(bunkers, bunkers + 1, b);
    end;

depot := HexInfo(206, 80);
factory := HexInfo(203, 91);
lab := HexInfo(217, 78);
arDepot := depot;

SetResourceType(GetBase(depot), mat_cans, [360, 260, 160][Difficulty]);
SetResourceType(GetBase(depot), mat_oil, [200, 170, 130][Difficulty]);

uc_nation := 2;
uc_side := 2;

PrepareVehicle(ar_medium_trike, engine_combustion, control_manual, ar_gun, 33);
PlaceUnitXYD(CreateVehicle, 190, 64, 5, false);

PrepareVehicle(ar_medium_trike, engine_combustion, control_manual, ar_gatling_gun, 22);
PlaceUnitXYD(CreateVehicle, 188, 67, 5, false);

if hasRemote then
   begin
   PrepareVehicle(ar_medium_trike, engine_combustion, control_manual, ar_control_tower, 35);
   PlaceUnitXYD(CreateVehicle, 191, 71, 5, false);

   PrepareVehicle(ar_half_tracked, engine_combustion, control_remote, ar_gun, 55);
   PlaceUnitXYD(CreateVehicle, 199, 67, 0, false);
   end;

PlaceUnitXY(Heike, 213, 87, false);
ComTurnXY(Heike, 214, 87);

if Kaia then
   begin
   PlaceUnitXY(Kaia, 213, 85, false);
   ComTurnXY(Kaia, 215, 87);
   end;

if Olaf and Kaia then
   begin
   PlaceUnitXY(Olaf, 215, 87, false);
   ComTurnXY(Olaf, 213, 85);
   end
else if Olaf then
   PlaceHumanInUnit(Olaf, factory);

if Givi then
   begin
   if Kaia and Olaf then
      begin
      PlaceUnitXY(Givi, 247, 117, false);
      ComTurnXY(Givi, 248, 118);
      end
   else
      begin
      PlaceUnitXY(Givi, 216, 88, false);
      ComTurnUnit(Givi, Heike);
      end;
   end;

if Kurt then
   PlaceHumanInUnit(Kurt, bunkers[2]);

if Mike then
   PlaceHumanInUnit(Mike, bunkers[3]);

if Kamil then
   begin
   if Kaia and Olaf then
      PlaceHumanInUnit(Kamil, depot)
   else
      begin
      PlaceUnitXY(Kamil, 213, 87, false);
      ComTurnUnit(Kamil, Heike);
      end;
   end;

if Sophia then
   PlaceHumanInUnit(Sophia, depot);

if Aviradze then
   PlaceHumanInUnit(Aviradze, lab);

if Ibrahim then
   PlaceHumanInUnit(Ibrahim, lab);

if Markov then
   PlaceHumanInUnit(Markov, factory);

if heikeSecondSquad then
   for i in heikeSecondSquad do
       PlaceUnitXYR(i, 190, 65, 5, false);

if heikeApes then
   for i in heikeApes do
       PlaceUnitXYR(i, 190, 70, 5, false);
End;

Export Function PrepareRolfSquad;
var i, j;
begin
uc_side := 8;
uc_nation := 2;

Rolf := NewCharacter('Bergkamp');
rolfSquad := [ Rolf ];

for i := 1 to 4 do
    begin
    for j := 1 to [5, 0, 3, 1][i] do
        begin
        PrepareHuman(false, i, 5);
        rolfSquad := Join(rolfSquad, CreateHuman);
        end;
    end;

if HexInfo(5, 3) then
   RemoveUnit(HexInfo(5, 3));

for i in rolfSquad do
    begin
    uc_direction := 2;

    if GetClass(i) = class_mechanic then
       begin
       uc_side := 8;
       uc_nation := 2;

       PrepareVehicle(ar_medium_trike, engine_combustion, control_manual, ar_gun, 88);

       PlaceUnitArea(CreateVehicle, northSpawn, false);
       PlaceHumanInUnit(i, HexInfo(5, 3));
       end
    else
       PlaceUnitArea(i, northSpawn, false);

    ComMoveXY(i, 29, 10);

    wait(0$2);
    end;

wait(0$5);
End;

Export Function PrepareRolfBase;
var i, tmp;
begin
tmp := [ [b_armoury, 82, 64, 1], [b_breastwork, 73, 58, 0] ];

for i in tmp do
    AddComBuild(Rolf, i[1], i[2], i[3], i[4]);

ComEnterUnit(rolfSquad[2], HexInfo(63, 42));
ComEnterUnit(rolfSquad[3], HexInfo(94, 63));

repeat
 wait(0$1);
until not HasTask(Rolf);

rolfScriptBase := true;
End;

Every 0$1 trigger rolfScriptBase do
var i, b, p, tmp, sol, sci, mech, enemyInBase, hasVehicle;
begin
enable;

if not rolfSquad then
   exit;

enemyInBase := FilterUnitsInArea(ruRolfBase, [f_enemy, 8]);

sol := UnitFilter(rolfSquad, [f_class, 1]);
mech := UnitFilter(rolfSquad, [f_class, 3]);
sci := UnitFilter(rolfSquad, [f_class, 4]);

if sol then
   for i in sol do
       if not IsInUnit(i) and not HasTask(i) then
          begin
          if GetLives(i) < 500 and GetDistUnitXY(i, 80, 49) > 6 then
             begin
             ComMoveXY(i, 80, 49);
             continue;
             end;

          tmp := FilterAllUnits([[f_side, 8], [f_ok], [f_or, [f_btype, b_armoury], [f_btype, b_barracks], [f_btype, b_bunker], [f_btype, b_breastwork]]]);

          if tmp then
             begin
             for b in tmp do
                 begin
                 case GetBType(b) of
                      b_armoury, b_barracks: p := 6;
                      b_breastwork, b_bunker: p := 1;
                      end;

                 if UnitsInside(b) < p then
                    ComEnterUnit(i, b);
                 end;
             end;
          end;

if sci then
   for i in sci do
       begin
       if GetDistUnitXY(i, 80, 49) > 9 then
          ComMoveXY(i, 80, 49);
       end;

if mech then
   for i in mech do
       begin
       hasVehicle := IsInUnit(i);

       if enemyInBase then
          begin
          if hasVehicle and GetLives(hasVehicle) > 500 then
             ComAttackUnit(hasVehicle, NearestUnitToUnit(enemyInBase, hasVehicle))
          else if GetDistUnitXY(hasVehicle, 86, 49) > 6 then
             ComMoveXY(hasVehicle, 86, 49);
          end
       else
          begin
          if GetDistUnitXY(i, 86, 49) > 6 then
             ComMoveXY(i, 86, 49)
          else if hasVehicle and GetLives(hasVehicle) < 1000 then
             begin
             SetFuel(hasVehicle, 100);
             ComRepairVehicleAndReturn(i);
             end;
          end;
       end;

tmp := FilterUnitsInArea(ruRolfBase, [[f_not, [f_lives, 1000]], [f_type, unit_building]]);

if tmp and IsOk(Rolf) then
   begin
   if IsInUnit(Rolf) then
      ComExitBuilding(Rolf)
   else
      ComRepairBuilding(Rolf, tmp[1]);
   end;

if not tmp then
   if GetLives(Rolf) < 700 then
      ComMoveXY(Rolf, 80, 49)
   else if not IsInUnit(Rolf) then
      ComEnterUnit(Rolf, HexInfo(86, 54));
End;

Export Function PrepareOmarSquad;
var i, j, p;
begin
uc_side := 5;
uc_nation := 2;

omarSquad := [];

for i := 1 to 4 do
    begin
    for j := 1 to [6, 2, 2 + omarVehiclesCounter, 2][i] do
        begin
        PrepareHuman(false, i, 5);
        omarSquad := Join(omarSquad, CreateHuman);
        end;
    end;

if HexInfo(340, 205) then
   RemoveUnit(HexInfo(340, 205));

p := 0;

for i in omarSquad do
    begin
    uc_direction := 4;

    if GetClass(i) = class_mechanic and p < 2 then
       begin
       p := p + 1;
       uc_side := 5;
       uc_nation := 2;

       PrepareVehicle(ar_medium_trike, engine_combustion, control_manual, [ar_rocket_launcher, ar_gun][i mod 2 + 1], 88);

       PlaceUnitArea(CreateVehicle, southSpawn, false);
       PlaceHumanInUnit(i, HexInfo(340, 205));
       end
    else
       PlaceUnitArea(i, southSpawn, false);

    ComMoveXY(i, 333, 210);

    wait(0$2);
    end;

PlaceUnitXY(Omar, 340, 205, false);
ComMoveXY(Omar, 333, 206);

wait(0$2);

ComHold(omarSquad);
ComAgressiveMove(omar union UnitFilter(omarSquad,[f_class, 1]) union FilterAllUnits([[f_side, 5], [f_type, unit_vehicle]]), 315, 214);

//wait(0$2);
//ComPlaceDelayedCharge(UnitFilter(omarSquad, [f_class, 1])[1], 323, 216, 0);
//AddComMoveXY(UnitFilter(omarSquad, [f_class, 1])[1], 329, 212);

wait(0$22);

ComAgressiveMove(omarSquad union Omar, 329, 231);
End;

Every 0$1 trigger omarScriptBase do
var i, j, b, p, tmp, sol, eng, sci, mech, enemyInBase, hasVehicle;
begin
enable;

if not omarSquad then
   exit;

enemyInBase := FilterUnitsInArea(ruOmarBase, [f_enemy, 5]);

sol := UnitFilter(omarSquad, [f_class, 1]);
eng := UnitFilter(omarSquad, [f_class, 2]);
mech := UnitFilter(omarSquad, [f_class, 3]);
sci := UnitFilter(omarSquad, [f_class, 4]);

if sol then
   for i in sol do
       if not HasTask(i) then
          begin
          if not IsInUnit(i) and GetLives(i) < 500 and GetDistUnitXY(i, 333, 234) > 6 then
             begin
             ComMoveXY(i, 333, 234);
             continue;
             end;

          tmp := FilterAllUnits([[f_side, 5], [f_empty], [f_ok], [f_or, [f_btype, b_bunker], [f_btype, b_breastwork]]]);

          if tmp and GetBType(IsInUnit(i)) <> b_breastwork then
             begin
             for j in tmp do
                 if GetTag(j) <> 1 then
                    begin
                    SetTag(j, 1);

                    if IsInUnit(i) then
                       ComExit(i);
      
                    AddComEnterUnit(i, j);
                    end;
             end
          else if not IsInUnit(i) then
             begin
             tmp := FilterAllUnits([[f_side, 5], [f_ok], [f_btype, b_armoury]]);

             if tmp then
                if UnitsInside(tmp[1]) < 6 then
                   ComEnterUnit(i, tmp[1]);
             end;
          end;

if sci then
   for i in sci do
       begin
       if GetDistUnitXY(i, 333, 234) > 9 then
          ComMoveXY(i, 333, 234);
       end;

if mech then
   for i in mech do
       begin
       hasVehicle := IsInUnit(i);

       if enemyInBase then
          begin
          if hasVehicle and GetLives(hasVehicle) > 500 then
             ComAttackUnit(hasVehicle, NearestUnitToUnit(enemyInBase, hasVehicle))
          else if GetDistUnitXY(hasVehicle, 333, 234) > 6 then
             ComMoveXY(hasVehicle, 333, 234);
          end
       else
          begin
          if GetDistUnitXY(i, 333, 234) > 6 then
             ComMoveXY(i, 333, 234)
          else if hasVehicle and GetLives(hasVehicle) < 1000 then
             begin
             SetFuel(hasVehicle, 100);
             ComRepairVehicleAndReturn(i);
             end;
          end;
       end;

tmp := FilterUnitsInArea(ruOmarBase, [[f_not, [f_lives, 1000]], [f_type, unit_building]]);

if tmp and eng then
   begin
   for i in eng do
       if IsInUnit(i) then
          ComExitBuilding(i)
       else if GetLives(i) = 1000 then
          ComRepairBuilding(i, tmp[1])
       else if GetLives(i) < 700 then
          ComMoveXY(i, 333, 234);
   end;

if not tmp and UnitFilter(eng, [f_not, [f_inside]]) then
   for i in UnitFilter(eng, [f_not, [f_inside]]) do
       if GetLives(i) < 1000 then
          ComMoveXY(i, 333, 234)
       else
          ComEnterUnit(i, HexInfo(341, 232));
End;

Every 0$1 trigger GetLives(Omar) < 1000 do
begin
enable;
SetLives(Omar, 1000);
End;

Every 0$1 trigger omarAttack do
var i;
begin
wait(0$20);

ComExitBuilding(UnitFilter(omarSquad, [f_class, 1]));

wait(0$3);

ComAgressiveMove(omarSquad union Omar, 225, 223);
AddComAgressiveMove(FilterAllUnits([[f_side, 5], [f_or, [f_class, 1], [f_type, unit_vehicle]]]), 167, 231);
AddComMoveXY(UnitFilter(omarSquad, [f_class, 4]), 222, 229);

repeat
 wait(0$1);

 for i in omarSquad union FilterAllUnits([[f_side, 5], [f_type, unit_vehicle]]) do
     begin
     if IsDead(i) then
        begin
        omarSquad := omarSquad diff i;
        continue;
        end;

     if GetClass(i) = 1 then
        begin
        if GetLives(i) < 500 and GetTag(i) = 0 then
           begin
           SetTag(i, 1);
           ComMoveXY(i, 222, 229);
           end;

        if GetLives(i) = 1000 and GetTag(i) = 1 then
           SetTag(i, 0);

        if GetTag(i) = 0 and GetLives(i) >= 500 and not HasTask(i) then
           ComAgressiveMove(i, 167, 231);
        end;

     if GetType(i) = unit_vehicle then
        begin
        if GetLives(i) < 500 and GetTag(i) = 0 then
           begin
           SetTag(i, 1);
           ComMoveXY(i, 219, 219);
           end;

        if GetLives(i) < 500 and GetTag(i) = 1 and IsDrivenBy(i) and GetDistUnitXY(i, 219, 219) < 10 then
           ComRepairVehicleAndReturn(i);

        if GetLives(i) = 1000 and GetTag(i) = 1 and IsDrivenBy(i) then
           SetTag(i, 0);

        if GetTag(i) = 0 and GetLives(i) >= 500 and IsDrivenBy(i) and not HasTask(i) then
           ComAgressiveMove(i, 167, 231);
        end;
     end;

until not omarSquad;
End;