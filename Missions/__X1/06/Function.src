// example: PrepareTank(1, 1, us_medium_wheeled, engine_combustion, control_manual, us_machine_gun, 80);
Export Function PrepareTank(side, nation, chassis, engine, control, weapon, fuel);
begin
uc_side := side;
uc_nation := nation;

vc_chassis := chassis;
vc_engine := engine;
vc_control := control;
vc_weapon := weapon;
vc_fuel_battery := fuel;

result := CreateVehicle;
End;


Export Function SayX(units, ident);
var i;
begin
result := false;

if not units then
   exit;

for i in units do
    if IsOk(i) then
       begin
       Say(i, ident);
       result := i;
       break;
       end;
End;

Export Function SpawnApeman(area, amount);
var i;
begin
InitUc;
InitHc;

uc_side := 0;
uc_nation := 0;

for i = 1 to amount do
    begin
    hc_attr := [rand(9, 12), rand(9, 12)];
    hc_agressivity := rand(-1, 1);
    PrepareHuman(false, class_apeman, 1);
    PlaceUnitArea(CreateHuman, area, false);
    end;

InitHc;
End;

Export Function CreateNature(forest, swamp);
var i;
begin
uc_side := 0;
uc_nation := 0;

for i = 1 to 2 do
    begin
    vc_chassis := 31;
    vc_control := control_rider;
    PlaceUnitInArea(CreateVehicle, forest, false);
    end;

for i := 1 to 4 do
    begin
    hc_class := 21;
    hc_gallery := '';
    PlaceUnitArea(CreateHuman, forest, false);
    end;

for i = 1 to 5 do
    begin
    hc_class = class_tiger;
    hc_gallery = '';
    hc_agressivity = Rand(-7, 7);

    PlaceUnitInArea(CreateHuman, forest, false);
    end;

for i := 1 to 4 do
    begin
    hc_class := 18;
    hc_gallery := '';
    PlaceUnitArea(CreateHuman, forest, false);
    end;

for i := 1 to 4 do
    begin
    hc_class := 13;
    hc_gallery := '';
    PlaceUnitArea(CreateHuman, forest, false);
    end;

for i := 1 to 7 do
    begin
    hc_class := class_frog;
    hc_gallery := '';
    PlaceUnitArea(CreateHuman, swamp, false);
    end;
End;

Export Function SeeUnit(observer, unit);
var i, tmp;
begin
if not observer or not unit then
   exit;

if not See(GetSide(observer), unit) then
   exit;


result := GetDistUnits(observer, unit) < 12;
End;

Export Function PlaceUnitHex(un, hex, mode);
begin
if ValidHex(hex[1], hex[2]) and HexInfo(hex[1], hex[2]) = 0 then
   PlaceUnitXY(un, hex[1], hex[2], mode);
End;

Export Function ReverseArray(array);
var i;
begin
// [1, 2, 3, 4] -> [4, 3, 2, 1]
if not array then
   exit;

result := [];

for i := 1 to array do
    result := Insert(result, 1, array[i]);
End;

Export Function RevealFogOnXY(x, y, side, range);
begin
PlaceSeeing(x, y, side, range);
RemoveSeeing(x, y, side);
End;

Export Function SayRandom(units, menDialog, womenDialog);
begin
if not units then
   exit;

result := true;

if not Say(UnitFilter(units, [f_sex, sex_male])[1], menDialog) then
   result := Say(UnitFilter(units, [f_sex, sex_female])[1], womenDialog);
End;

Export Function SeeGroup(side, group);
var i;
begin
if not group then
   exit;

for i in group do
    if See(side, i) then
       begin
       result := true;
       exit;
       end;
End;