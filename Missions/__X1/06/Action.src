Export Function Action;
begin
RevealFogArea(2, revealArea);
Video(true);

CenterNowOnXY(213, 89);

if not debug then
   begin   
   if Kaia and Olaf then
      SceneKaiaWithOlaf;

   if Givi and Kamil then
      SceneWithGiviAndKamil;
   end;

Video(false);

ChangeMissionObjectives('M1');
SaveForQuickRestart;
End;

Export Function SceneKaiaWithOlaf;
begin
ComConstruct(FilterAllUnits([[f_side, 2], [f_btype, b_factory]]), ar_half_tracked, engine_combustion, control_manual, ar_flame_thrower);

wait(0$1);

Say(Kaia, 'DK-06-Mem-1');
Say(Kaia, 'DK-06-Mem-2');
Say(Olaf, 'DO-06-Mem-3');
Say(Kaia, 'DK-06-Mem-4');
Say(Olaf, 'DO-06-Mem-5');

wait(0$2);

SetWorkingProgress(FilterAllUnits([[f_side, 2], [f_btype, b_factory]]), 90);

Say(Olaf, 'DO-06-Mem-6');
Say(Kaia, 'DK-06-Mem-7');

ComTurnUnit(Heike, Kaia);

Say(Heike, 'DH-06-Mem-8');

ComTurnUnit([Kaia, Olaf], Heike);

Say(Olaf, 'DO-06-Mem-9');
Say(Olaf, 'DO-06-Mem-10');
Say(Olaf, 'DO-06-Mem-11');
Say(Olaf, 'DO-06-Mem-12');
Say(Kaia, 'DK-06-Mem-13');
Say(Kaia, 'DK-06-Mem-14');
Say(Kaia, 'DK-06-Mem-15');
Say(Kaia, 'DK-06-Mem-16');
Say(Kaia, 'DK-06-Mem-17');

ComTurnUnit(Olaf, Kaia);

Say(Olaf, 'DO-06-Mem-18');

ComTurnUnit(Kaia, Olaf);

Say(Kaia, 'DK-06-Mem-19');

ComMoveXY(Olaf, 214, 86);
AddComTurnUnit(Olaf, Kaia);

if Givi then
   begin
   ComMoveXY(Givi, 217, 86);
   AddComTurnUnit(Givi, Heike);
   end;

if Kamil then
   begin
   ComExit(Kamil);
   AddComMoveXY(Kamil, 212, 86);
   AddComTurnUnit(Kamil, Heike);
   end;

wait(0$2);

Say(Heike, 'DH-06-Mem-20');

ComMoveXY(Olaf, 215, 87);
AddComTurnUnit(Olaf, Kaia);

Say(Kaia, 'DK-06-Mem-21');

wait(0$2);
End;

Export function SceneWithGiviAndKamil;
begin
if Markov then
   begin
   if IsInUnit(Markov) then
      ComExit(Markov);

   AddComMoveXY(Markov, 212, 88);
   AddComTurnUnit(Markov, Heike);
   end;

Say(Givi, 'DG-06-Obj-1');
Say(Kamil, 'DKam-06-Obj-2');

ComTurnUnit(Heike, Kamil);

Say(Kamil, 'DKam-06-Obj-3');
Say(Markov, 'DMar-06-Obj-4');
Say(Kamil, 'DKam-06-Obj-6');
Say(Kamil, 'DKam-06-Obj-7');
Say(Kamil, 'DKam-06-Obj-8');
Say(Heike, 'DH-06-Obj-9');
Say(Kamil, 'DKam-06-Obj-10');
Say(Kamil, 'DKam-06-Obj-11');
Say(Markov, 'DMar-06-Obj-12');
Say(Markov, 'DMar-06-Obj-13');
Say(Markov, 'DMar-06-Obj-14');
Say(Olaf, 'DO-06-Obj-15');
Say(Olaf, 'DO-06-Obj-16');
Say(Heike, 'DH-06-Obj-17');
Say(Olaf, 'DO-06-Obj-18');
End;

// first mortar constructed
Every 0$2 trigger FilterAllUnits([f_weapon, ar_mortar]) do
var random;
begin
CenterNowOnUnits(FilterAllUnits([f_weapon, ar_mortar]));

DialogueOn;

if Markov then
   begin
   Say(Markov, 'DMar-06-Grn-1');
   Say(Heike, 'DH-06-Grn-2');
   end
else if heikeSecondSquad then
   begin
   random := heikeSecondSquad[rand(1, heikeSecondSquad)];

   case GetSex(random) of
        1: Say(random, 'DArm-06-Grn-1');
        2: Say(random, 'DArf-06-Grn-1');
        end;

   Say(Heike, 'DH-06-Grn-2');
   end;

DialogueOff;

ChangeMissionObjectives('MortarConstructed');
Hint('SelfPropelledMortar');
End;

// Outpost destroyed
Every 0$1 trigger not FilterUnitsInArea(ruOutpostNorth, [[f_side, 3], [f_type, unit_building]]) and not bergkampfArrived do
var random;
begin
outpostDestroyed := true;

if not FilterAllUnits([[f_side, 2], [f_weapon, ar_mortar], [f_distxy, 195, 164, 12]]) then
   exit;

if not IsOk(Givi) or not IsOk(Kaia) then
   exit;

Say(Givi, 'DG-06-Otpst-1-1');
Say(Kaia, 'DK-06-Otpst-1-2');

if IsOk(Markov) then
   begin
   Say(Markov, 'DMar-06-Otpst-1-3');
   Say(Markov, 'DMar-06-Otpst-1-4');
   end
else
   begin
   random := heikeSecondSquad[rand(1, heikeSecondSquad)];

   case GetSex(random) of
        1: Say(random, 'DArm-06-Otpst-1-a-3');
        2: Say(random, 'DArf-06-Otpst-1-a-3');
        end;
   end;

Say(Givi, 'DG-06-Otpst-1-5');
End;