Export Function Action;
begin        
RevealFogArea(2, revealArea);
Video(true);

music_nat := 3;
music_class := music_recon;

CenterNowOnXY(213, 89);

if not debug then
   begin
   if Kaia and Olaf then
      SceneKaiaWithOlaf;

   if Givi and Kamil then
      SceneWithGiviAndKamil;
   end;

Video(false);

ChangeMissionObjectives('M1');

music_nat := music_auto;
music_class := music_auto;

SaveForQuickRestart;
End;

Export Function SceneKaiaWithOlaf;
begin
ComConstruct(FilterAllUnits([[f_side, 2], [f_btype, b_factory]]), ar_half_tracked, engine_combustion, control_manual, ar_flame_thrower);

wait(0$1);

Say(Kaia, 'DK-Mem-1');
Say(Kaia, 'DK-Mem-2');
Say(Olaf, 'DO-Mem-3');
Say(Kaia, 'DK-Mem-4');
Say(Olaf, 'DO-Mem-5');

wait(0$2);

SetWorkingProgress(FilterAllUnits([[f_side, 2], [f_btype, b_factory]]), 90);

Say(Olaf, 'DO-Mem-6');
Say(Kaia, 'DK-Mem-7');

ComTurnUnit(Heike, Kaia);

Say(Heike, 'DH-Mem-8');

ComTurnUnit([Kaia, Olaf], Heike);

Say(Olaf, 'DO-Mem-9');
Say(Olaf, 'DO-Mem-10');
Say(Olaf, 'DO-Mem-11');
Say(Olaf, 'DO-Mem-12');
Say(Kaia, 'DK-Mem-13');
Say(Kaia, 'DK-Mem-14');
Say(Kaia, 'DK-Mem-15');
Say(Kaia, 'DK-Mem-16');
Say(Kaia, 'DK-Mem-17');

ComTurnUnit(Olaf, Kaia);

Say(Olaf, 'DO-Mem-18');

ComTurnUnit(Kaia, Olaf);

Say(Kaia, 'DK-Mem-19');

ComMoveXY(Olaf, 214, 86);
AddComTurnUnit(Olaf, Kaia);

if Givi then
   begin
   ComMoveXY(Givi, 217, 86);
   AddComTurnUnit(Givi, Heike);
   end;

if Kamil then
   begin
   ComExit(Kamil);
   AddComMoveXY(Kamil, 212, 86);
   AddComTurnUnit(Kamil, Heike);
   end;

wait(0$2);

Say(Heike, 'DH-Mem-20');

ComMoveXY(Olaf, 215, 87);
AddComTurnUnit(Olaf, Kaia);

Say(Kaia, 'DK-Mem-21');

wait(0$2);
End;

Export function SceneWithGiviAndKamil;
begin
if Markov then
   begin
   if IsInUnit(Markov) then
      ComExit(Markov);

   AddComMoveXY(Markov, 212, 88);
   AddComTurnUnit(Markov, Heike);
   end;

Say(Givi, 'DG-Obj-1');
Say(Kamil, 'DKam-Obj-2');

ComTurnUnit(Heike, Kamil);

Say(Kamil, 'DKam-Obj-3');
Say(Markov, 'DMar-Obj-4');
Say(Kamil, 'DKam-Obj-6');
Say(Kamil, 'DKam-Obj-7');
Say(Kamil, 'DKam-Obj-8');
Say(Heike, 'DH-Obj-9');
Say(Kamil, 'DKam-Obj-10');
Say(Kamil, 'DKam-Obj-11');
Say(Markov, 'DMar-Obj-12');
Say(Markov, 'DMar-Obj-13');
Say(Markov, 'DMar-Obj-14');
Say(Olaf, 'DO-Obj-15');
Say(Olaf, 'DO-Obj-16');
Say(Heike, 'DH-Obj-17');
Say(Olaf, 'DO-Obj-18');
End;

// first mortar constructed
Every 0$2 trigger FilterAllUnits([f_weapon, ar_mortar]) do
var random;
begin
wait(0$2);
CenterNowOnUnits(FilterAllUnits([f_weapon, ar_mortar]));

DialogueOn;

if Markov then
   begin
   Say(Markov, 'DMar-Grn-1');
   Say(Heike, 'DH-Grn-2');
   end
else if heikeSecondSquad then
   begin
   random := heikeSecondSquad[rand(1, heikeSecondSquad)];

   case GetSex(random) of
        1: Say(random, 'DArm-Grn-1');
        2: Say(random, 'DArf-Grn-1');
        end;

   Say(Heike, 'DH-Grn-2');
   end;

DialogueOff;

ChangeMissionObjectives('MortarConstructed');
Hint('SelfPropelledMortar');

mortarConstructed := true;
End;

// Outpost spotted
Every 0$1 trigger SeeArea(2, ruOutpostNorth) do
begin
PlaceSeeing(200, 162, 2, -6);
RemoveSeeing(200, 162, 2);

CenterOnXY(200, 162);

if not IsOk(Kurt) then
   exit;

Say(Kurt, 'DKs-Otpst-2-1');
Say(Kaia, 'DK-Otpst-2-2');
Say(Kurt, 'DKs-Otpst-2-3');
Say(Kurt, 'DKs-Otpst-2-4');
Say(Kurt, 'DKs-Otpst-2-5');
Say(Kamil, 'DKam-Otpst-2-6');
Say(Kurt, 'DKs-Otpst-2-7');
End;

// Outpost destroyed
Every 0$1 trigger not FilterUnitsInArea(ruOutpostNorth, [[f_side, 3], [f_type, unit_building]]) and not bergkampfArrived do
var random;
begin
outpostDestroyed := true;

if not FilterAllUnits([[f_side, 2], [f_weapon, ar_mortar], [f_distxy, 195, 164, 12]]) then
   exit;

if not IsOk(Givi) or not IsOk(Kaia) then
   exit;

Say(Givi, 'DG-Otpst-1-1');
Say(Kaia, 'DK-Otpst-1-2');

if IsOk(Markov) then
   begin
   Say(Markov, 'DMar-Otpst-1-3');
   Say(Markov, 'DMar-Otpst-1-4');
   end
else
   begin
   random := heikeSecondSquad[rand(1, heikeSecondSquad)];

   case GetSex(random) of
        1: Say(random, 'DArm-Otpst-1-a-3');
        2: Say(random, 'DArf-Otpst-1-a-3');
        end;
   end;

Say(Givi, 'DG-Otpst-1-5');
End;

// Kaia die
Every 0$1 trigger GetLives(Kaia) < 10 do
begin
DialogueOn;

CenterNowOnUnits(Kaia);

ForceSay(Kaia, 'DK-Dead-1');
Say(Heike, 'DH-Dead-2');
ForceSay(Kaia, 'DK-Dead-3');
Say(Heike, 'DH-Dead-4');

if IsOk(Mike) then
   begin
   Say(Mike, 'DM-Dead-5');
   Say(Heike, 'DH-Dead-6');
   end;

DialogueOff;

KillUnit(Kaia);
End;

// Spawn Rolf
Every 0$1 trigger tick >= 10$20 or ruLoseCounter > 5 or FilterAllUnits([[f_side, 2], [f_distxy, 103, 81, 20]]) do
var i, tmp, dep;
begin
PrepareRolfSquad;

dep := HexInfo(86, 54);
SetResourceType(GetBase(dep), mat_cans, 300);
SetResourceType(GetBase(dep), mat_oil, 300);

ComAgressiveMove(rolfSquad, 79, 52);

repeat
 wait(0$1);
until not FilterUnitsInArea(ruRolfBase, [[f_side, 3], [f_type, unit_human]]);

tmp := FilterUnitsInArea(ruRolfBase, [f_type, unit_building]);

for i in tmp do
    SetSide(i, 8);

SetLives(HexInfo(63, 42), 320);

wait(0$10);

DialogueOn;

ChangeSideFog(8, 2);

SetBName(HexInfo(86, 54), 'antwerp');

CenterNowOnUnits(Rolf);

SayRadio(Rolf, 'DRf-rast-1');
Say(Heike, 'DH-rast-2');
SayRadio(Rolf, 'DRf-rast-3');
SayRadio(Rolf, 'DRf-rast-4');
SayRadio(Rolf, 'DRf-rast-5');

if IsOk(Aviradze) then
   begin
   CenterNowOnUnits(Aviradze);

   Say(Aviradze, 'DA-rast-6');
   Say(Heike, 'DH-rast-7');
   Say(Givi, 'DG-rast-8');
   Say(Givi, 'DG-rast-9');
   end;

Say(Heike, 'DH-rast-10');

DialogueOff;

ChangeMissionObjectives('M2');

bergkampfArrived := true;

PrepareRolfBase;
End;

// Spot Rolf
Every 0$1 trigger FilterUnitsInArea(ruRolfBase, [f_side, 2]) and IsOk(Rolf) and canRolfJoin do
var i;
begin
rolfScriptBase := false;

DialogueOn;

CenterNowOnUnits(Rolf);

if rolfSquad >= 10 then
   begin
   linkedWithRolf := 2;

   Say(Rolf, 'DRf-rast-11');
   Say(Heike, 'DH-rast-12');
   Say(Rolf, 'DRf-rast-13');
   Say(Heike, 'DH-rast-14');
   Say(Rolf, 'DRf-rast-15');
   Say(Heike, 'DH-rast-16');

   if IsOk(Mike) then
      begin
      Say(Mike, 'DM-rast-17');
      Say(Heike, 'DH-rast-18');
      Say(Mike, 'DM-rast-19');
      Say(Heike, 'DH-rast-20');
      Say(Mike, 'DM-rast-21');
      Say(Heike, 'DH-rast-22');
      end;

   Say(Heike, 'DH-rast-23');
   end
else
   begin
   linkedWithRolf := 1;

   Say(Rolf, 'DRf-rast-a-11');
   Say(Heike, 'DH-rast-a-12');

   if IsOk(Kurt) then
      begin
      Say(Kurt, 'DKs-rast-a-13');
      Say(Rolf, 'DRf-rast-a-14');
      Say(Rolf, 'DRf-rast-a-15');
      Say(Kurt, 'DKs-rast-a-16');

      if IsOk(Givi) then
         begin
         Say(Givi, 'DG-rast-a-17');
         Say(Givi, 'DG-rast-a-18');
         Say(Kurt, 'DKs-rast-a-19');
         end;
      end;

   Say(Heike, 'DH-rast-a-20');
   end;

Say(Rolf, 'DRf-rast-24');

if IsOk(Aviradze) then
   begin
   Say(Aviradze, 'DA-rast-25');
   Say(Heike, 'DH-rast-26');
   Say(Aviradze, 'DA-rast-27');

   if IsOk(Markov) then
      begin
      Say(Markov, 'DMar-rast-28');
      Say(Markov, 'DMar-rast-29');
      end
   else if IsOk(Sophia) then
      begin
      Say(Sophia, 'DS-rast-28');
      end;
   end
else if IsOk(Sophia) then
   Say(Sophia, 'DS-rast-29');

DialogueOff;

ChangeMissionObjectives('M3');

for i in FilterAllUnits([f_side, 8]) do
    SetSide(i, 2);
End;

// Player not linked with Rolf, Rolf attack when Omar attacks
Every 0$1 trigger omarAttack and not linkedWithRolf and canRolfJoin do
var i;
begin
canRolfJoin := false;
ChangeMissionObjectives('M3');

for i in rolfSquad do
    begin
    ComExit(i);
    AddComAgressiveMove(i, 147, 162);
    AddComWait(i, 0$30);
    AddComAgressiveMove(i, 103, 162);
    end;
End;

// Rolf dies
Every 0$1 trigger bergkampfArrived and GetLives(Rolf) < 400 and not linkedWithRolf and canRolfJoin do
var random;
begin
DialogueOn;

SayRadio(Rolf, 'DRf-rast-f-11');
SayRadio(Rolf, 'DRf-rast-f-12');
SayRadio(Rolf, 'DRf-rast-f-13');

DialogueOff;

KillUnit(Rolf);

wait(0$1);

if not IsOk(Givi) then
   exit;

DialogueOn;

Say(Givi, 'DG-rast-f-14');
Say(Givi, 'DG-rast-f-15');

if IsOk(Kaia) then
   Say(Kaia, 'DK-rast-f-16')
else if heikeSecondSquad then
   begin
   random := heikeSecondSquad[rand(1, heikeSecondSquad)];

   case GetSex(random) of
        1: Say(random, 'DArm-rast-f-a-16');
        2: Say(random, 'DArf-rast-f-a-16');
        end;
   end;

Say(Givi, 'DG-rast-f-17');
Say(Givi, 'DG-rast-f-18');
Say(Givi, 'DG-rast-f-19');
Say(Givi, 'DG-rast-f-20');

DialogueOff;
End;

// lenin spotted
Every 0$1 trigger SeeArea(2, ruMainBase) do
begin
Say(Givi, 'DG-Len-1');
Say(Kurt, 'DKs-Len-2');
Say(Kurt, 'DKs-Len-3');
Say(Heike, 'DH-Len-4');
Say(Kaia, 'DK-Len-5');

leninSpotted := true;
End;

// spawn Omar
Every 0$1 trigger bergkampfArrived and tick > [21$00, 20$00, 19$00, 18$00][Difficulty] do
var i, tmp, inOmarBase;
begin
PrepareOmarSquad;

repeat
 wait(0$1);
until not FilterUnitsInArea(ruOmarBase, [[f_side, 3], [f_or, [f_type, unit_human], [f_occupied]]]);

tmp := FilterUnitsInArea(ruOmarBase, [f_side, 2]);  
inOmarBase := tmp > 0;

if UnitFilter(tmp, [f_type, unit_building]) then
   begin
   Say(Omar, 'DOm-Base-1b');

   for i in UnitFilter(tmp, [f_type, unit_building]) do
       begin
       if UnitsInside(i) then
          ComExitBuilding(UnitsInside(i));

       SetSide(i, 5);
       end;
   end 
else if UnitFilter(tmp, [f_type, unit_vehicle]) then
   Say(Omar, 'DOm-Base-1v')
else
   Say(Omar, 'DOm-Base-1h');

for i in omarSquad do
    if GetLives(i) < 750 then
       SetLives(i, 1000);

for i in FilterUnitsInArea(ruOmarBase, [f_type, unit_building]) do
    SetSide(i, 5);

wait(0$3);

ChangeSideFog(5, 2);

CenterNowOnUnits(Omar);

DialogueOn;

if inOmarBase then
   begin
   Say(Omar, 'DOm-Veh-1a');
   Say(Omar, 'DOm-Veh-2a');
   Say(Omar, 'DOm-Veh-3a');

   if mortarConstructed then
      Say(Omar, 'DOm-Veh-4a');
   end
else
   begin
   SayRadio(Omar, 'DOm-Veh-1');
   SayRadio(Omar, 'DOm-Veh-2');
   SayRadio(Omar, 'DOm-Veh-3');

   if mortarConstructed then
      SayRadio(Omar, 'DOm-Veh-4');
   end;

Say(Heike, 'DH-Veh-5');

if IsOk(Kurt) then
   begin
   Say(Kurt, 'DKs-Veh-6');
   Say(Kurt, 'DKs-Veh-7');
   Say(Givi, 'DG-Veh-8');
   Say(Mike, 'DM-Veh-9');
   end;

DialogueOff;

ChangeMissionObjectives('M4');

ComEnterUnit(Omar, HexInfo(341, 232));

omarArrived := true;
omarScriptBase := true;
omarWantVehicles := true;
End;

Every 0$1 trigger FilterUnitsInArea(ruMainBase, [f_side, 2]) and omarArrived and IsOk(Omar) and not omarAttack do
SayRadio(Omar, 'DOm-Lenin');

Every 0$3 trigger IsOk(Rolf) and linkedWithRolf and omarArrived do
begin
wait(0$20);

CenterNowOnUnits(Rolf);

DialogueOn;

Say(Rolf, 'DRf-Veh-10');
Say(Rolf, 'DRf-Veh-11');
Say(Heike, 'DH-Veh-12');
Say(Heike, 'DH-Veh-13');
Say(Rolf, 'DRf-Veh-14');

DialogueOff;

ChangeMissionObjectives('M5');
rolfWantVehicles := true;
End;

Every 0$1 trigger omarWantVehicles do
var i, tmp, eng, mech, workshop, armoury;
begin
wait(0$3);

Hint('OmarVehicles');
SetAreaMapShow(omarVehiclesArea, 1);

repeat
 wait(0$1);
 omarWaitingForVehiclesTimer := omarWaitingForVehiclesTimer - 0$1;
 
 if omarWaitingForVehiclesTimer <= 0$00 then
    begin
    display_strings := [];
    ChangeMissionObjectives('M4a');
    SetAreaMapShow(omarVehiclesArea, 0);

    DialogueOn;

    SayRadio(Omar, 'DOm-Veh-b-15');
    Say(Heike, 'DH-Veh-b-16');
    SayRadio(Omar, 'DOm-Veh-b-17');
    Say(Kaia, 'DK-Veh-b-18');

    DialogueOff;

    omarAttack := true;
    omarScriptBase := false;
    exit;
    end;

until omarVehiclesCounter <= FilterUnitsInArea(omarVehiclesArea, [[f_side, 2], [f_type, unit_vehicle], [f_control, control_manual], [f_empty]]);

omarWaitingForVehiclesTimer := 0$00;
display_strings := [];

DialogueOn;

SayRadio(Omar, 'DOm-Veh-a-15');
Say(Kaia, 'DK-Veh-a-16');

DialogueOff;

ChangeMissionObjectives('M4a');
SetAreaMapShow(omarVehiclesArea, 0);
omarHasVehicles := true;

wait(1$00);

omarAttack := true;
omarScriptBase := false;

tmp := FilterUnitsInArea(omarVehiclesArea, [[f_side, 2], [f_type, unit_vehicle], [f_control, control_manual], [f_empty]]);

for i in tmp do
    begin
    SetFuel(i, 100);
    SetSide(i, 5);
    end;

eng := UnitFilter(omarSquad, [f_class, 2]);
mech := UnitFilter(omarSquad, [[f_not, [f_driving]], [f_class, 3]]);
workshop := HexInfo(324, 234);
armoury := HexInfo(334, 241);

ComExitBuilding(UnitsInside(armoury));

if eng then
   begin
   if eng + mech <= tmp then
      begin
      ComEnterUnit(eng, workshop);
      AddComChangeProfession(eng, class_mechanic);
      AddComExitBuilding(eng);
      mech := mech union eng;
      end
   else
      begin
      ComEnterUnit(eng, armoury);
      AddComChangeProfession(eng, class_soldier);
      AddComExitBuilding(eng);       
      end;
   end;

for i := 1 to tmp do
    if i <= mech then
       AddComEnterUnit(mech[i], tmp[i]);
End;

Every 0$1 trigger IsOk(Rolf) and rolfWantVehicles do
var i;
begin
repeat
 wait(0$1);
 rolfWaitingForVehiclesTimer := rolfWaitingForVehiclesTimer - 0$1;

 if rolfWaitingForVehiclesTimer <= 0$00 or omarAttack then
    begin
    rolfWaitingForVehiclesTimer := 0$00;
    display_strings := [];

    DialogueOn;
    Say(Rolf, 'DRf-Veh-b-19');
    Say(Rolf, 'DRf-Veh-b-20');
    Say(Heike, 'DH-Veh-b-21');

    if IsOk(Givi) then
       begin
       Say(Givi, 'DG-Veh-b-22');
       Say(Heike, 'DH-Veh-b-23');
       Say(Givi, 'DG-Veh-b-24');
       end;

    DialogueOff;

    ChangeMissionObjectives('M5a');

    for i in rolfSquad do
        begin
        SetSide(i, 8);

        if IsDriver(i) then
           SetSide(IsInUnit(i), 8)
        else if IsInUnit(i) then
           ComExitBuilding(i);
        end;

    wait(0$1);

    ComAgressiveMove(rolfSquad, 229, 154);
    exit;
    end;

 if IsDead(Rolf) then
    begin
    ChangeMissionObjectives('M5a');
    exit;
    end;

until Count(UnitFilter(rolfSquad, [f_driving])) = Count(rolfSquad);

rolfWaitingForVehiclesTimer := 0$00;
display_strings := [];

DialogueOn;

CenterNowOnUnits(Rolf);

Say(Rolf, 'DRf-Veh-a-17');
Say(Heike, 'DH-08-Veh-a-18');
Say(Rolf, 'DRf-Veh-a-19');

DialogueOff;

ChangeMissionObjectives('M5a');
rolfHasVehicles := true;

for i in rolfSquad do
    begin
    SetSide(IsInUnit(i), 8);
    SetSide(i, 8);
    end;

ComAgressiveMove(rolfSquad, 229, 154);
End;

// Morozov call
Every 0$1 trigger leninSpotted do
begin
wait(0$10);

DialogueOn;
Say(Aviradze, 'DA-Transmission-1');
SayRadio(Morozov, 'DMzw-Transmission-2');

if gaidarKilled then
   SayRadio(Morozov, 'DMzw-Transmission-3')
else
   SayRadio(Morozov, 'DMzw-Transmission-a-3');

Say(Heike, 'DH-Transmission-4');
DialogueOff;
End;

// see bazooka
Every 0$1 trigger FilterAllUnits([[f_side, 3], [f_class, class_bazooker], [f_see, 2]]) and IsOk(Heike) do
begin
CenterOnUnits(FilterAllUnits([[f_side, 3], [f_class, class_bazooker], [f_see, 2]])[1]);
Say(Heike, 'DH-Rubazooka-1');
End;

// see attack
Every 0$1 trigger FilterUnitsInArea(attackIncoming, [f_side, 3]) and firstAttack do
begin
CenterOnUnits(FilterUnitsInArea(attackIncoming, [f_side, 3]));
Say(Heike, 'DH-Ruattfirst-1');
Say(Heike, 'DH-Ruattfirst-2');
End;

Every 0$1 trigger FilterUnitsInArea(attackIncoming, [f_side, 3]) and not firstAttack do
begin
CenterOnUnits(FilterUnitsInArea(attackIncoming, [f_side, 3]));
Say(Heike, 'DH-Ruattnext-1');
End;

// non-oil
Every 0$1 trigger GetResourceType(GetBase(arDepot), mat_oil) < 31 and IsOk(Givi) do
begin
DialogueOn;

Say(Heike, 'DH-Fuel-1');
Say(Givi, 'DG-Fuel-2');
Say(Givi, 'DG-Fuel-3');
Say(Givi, 'DG-Fuel-4');

DialogueOff;

Query('QOil');
SetAreaMapShow(oilArea, 1);

GoForOil();
End;

// Shariff calls
Every 0$1 trigger leninSpotted and omarAttack or IsDead(Morozov) do
begin
wait(1$45);

DialogueOn;

SayRadio(Shariff, 'DShar-End-1');
Say(Heike, 'DH-End-2');
SayRadio(Shariff, 'DShar-End-3');
Say(Heike, 'DH-End-4');
SayRadio(Shariff, 'DShar-End-5');
SayRadio(Shariff, 'DShar-End-6');

dwait(0$2);

Say(Heike, 'DH-End-7');

DialogueOff;

ChangeMissionObjectives('M6');
SetAreaMapShow(escapeArea, 1);

escapeAllowed := true;

wait(0$2);

Say(Kurt, 'DKs-End-8');
Say(Kaia, 'DK-End-10');
Say(Kurt, 'DKs-End-9');
Say(Markov, 'DMar-End-11');

if LoadVariable('05_DrugsTested', debug) then
   Say(Mike, 'DM-End-12');

Say(Olaf, 'DO-End-13');

if IsOk(Sophia) then
   begin
   Say(Sophia, 'DS-End-15');
   Say(Kaia, 'DK-End-16');
   end;

Say(Givi, 'DG-End-17');
Say(Givi, 'DG-End-18');
Say(Givi, 'DG-End-19');
End;

Every 0$1 trigger escapeAllowed do
var tmp, outsiders;
begin
enable;

display_strings := ['#X106-2', escapeTimer];
escapeTimer := escapeTimer - 0$1;

outsiders := FilterUnitsExceptArea(escapeArea, [[f_side, 2], [f_type, unit_human], [f_nation, 2]]);

if not outsiders then
   begin
   escapeAllowed := false;
   disable;
   MissionWin;
   exit;
   end;

if escapeTimer <= 0$00 then
   YouLost('TimeOut');
End;
      
// win
Function MissionWin;
var i, tmp, tmp2, cargo;
begin
Say(Heike, 'DH-End-20');

if rolfDied then
   AddMedal('med1', -1)
else if not canRolfJoin then
   AddMedal('med1', -2)
else
   AddMedal('med1', 1);

if omarHasVehicles and rolfHasVehicles then
   AddMedal('med2', 1)
else if omarHasVehicles then
   AddMedal('med2', -1)
else if rolfHasVehicles then
   AddMedal('med2', -2)
else
   AddMedal('med2', -3);

if ruLoseCounter >= [30, 45, 50, 62][Difficulty] and heikeLoseCounter = 0 then
   AddMedal('med3', 1)
else if heikeLoseCounter then
   AddMedal('med3', -2)
else
   AddMedal('med3', -1);

GiveMedals('MAIN');

RewardPeople(FilterAllUnits([[f_side, 2], [f_nation, 2], [f_type, unit_human]]));

SaveCharacters(Heike, '06_Heike');

if Aviradze then
   SaveCharacters(Aviradze, '06_Aviradze');

if Ibrahim  then
   SaveCharacters(Ibrahim, '06_Ibrahim');

if Kamil then
   SaveCharacters(Kamil, '06_Kamil');

if Sophia then
   SaveCharacters(Sophia, '06_Sophia');

if Kaia then
   SaveCharacters(Kaia, '06_Kaia');

if Givi then
   SaveCharacters(Givi, '06_Givi');

if Mike then
   SaveCharacters(Mike, '06_Mike');

if Markov then
   SaveCharacters(Markov, '06_Markov');

if Kurt then
   SaveCharacters(Kurt, '06_Kurt');

if heikeSecondSquad then
   SaveCharacters(heikeSecondSquad, '06_others');

tmp := FilterAllUnits([[f_side, 2], [f_nation, 0]]);

if tmp then
   SaveCharacters(tmp, '06_apes');

if Rolf then
   begin
   SaveCharacters(Rolf, '06_Rolf');
   ToLua('enableBioCharacter(BIO_ROLF)');

   if rolfSquad diff Rolf then
      SaveCharacters(rolfSquad diff Rolf, '06_RolfSquad');
   end;

tmp := FilterUnitsInArea(escapeArea, [f_type, unit_vehicle]);

if tmp then
   begin
   tmp2 := [];

   for i in tmp do
       if GetWeapon(i) in [ar_cargo_bay, us_cargo_bay, ru_cargo_bay] then
          begin
          cargo := [GetCargo(i, mat_cans), GetCargo(i, mat_oil)];
          tmp2 := Replace(tmp2, tmp2 + 1, [GetChassis(i), GetEngine(i), GetControl(i), GetWeapon(i), GetNation(i), GetLives(i), cargo]);
          end
       else
          tmp2 := Replace(tmp2, tmp2 + 1, [GetChassis(i), GetEngine(i), GetControl(i), GetWeapon(i), GetNation(i), GetLives(i), []]);

   SaveVariable(tmp2, '06_Vehicles');
   end;

YouWin;
End;