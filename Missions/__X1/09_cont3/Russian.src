Export function PrepareRussian;
begin
SetTech(tech_Tech1, 3, state_researched);
SetTech(tech_Tech2, 3, state_researched);
SetTech(tech_Tech3, 3, state_researched);
SetTech(tech_Weap1, 3, state_researched);
SetTech(tech_Comp1, 3, state_researched);

if Difficulty >= 2 then
   begin
   SetTech(tech_Weap2, 3, state_researched);
   SetTech(tech_Comp2, 3, state_researched);
   SetTech(tech_ST1, 3, state_researched);
   end;

if Difficulty > 2 then
   begin
   SetTech(tech_Weap3, 3, state_researched);
   SetTech(tech_Comp3, 3, state_researched);
   SetTech(tech_ST2, 3, state_researched);
   end;
End;

Function PrepareRussianAttack(spot, strength);
var i, tmp, un, veh, skill, area, parking, dir, control;
begin
result := [];

skill := [7, 8, 9, 10][Difficulty];
area := [ruSpawn1Area, ruSpawn2Area, ruSpawn3Area][spot];
parking := [ruGatPoint1Area, ruGatPoint2Area, ruGatPoint3Area][spot];
dir := [5, 0, 2][spot];

if FilterUnitsInArea(area, [f_or, [f_side, 0], [f_side, 3]]) then
   for i in FilterUnitsInArea(area, [f_or, [f_side, 0], [f_side, 3]]) do
       RemoveUnit(i);

if FilterUnitsInArea(area, [[f_not, [f_type, unit_human]], [f_side, 2]]) then
   for i in FilterUnitsInArea(area, [[f_not, [f_type, unit_human]], [f_side, 2]]) do
       KillUnit(i);

if FilterUnitsInArea(area, [[f_type, unit_human], [f_side, 2]]) then
   for i in FilterUnitsInArea(area, [[f_type, unit_human], [f_side, 2]]) do
       ComMoveXY(i, 91, 56);

repeat
 wait(0$1);
until not FilterUnitsInArea(area, [f_ok]);

// tanks
for i := 1 to [5, 6, 7, 8][Difficulty] + strength do
    begin
    uc_side := 3;
    uc_nation := nation_russian;

    control := [control_manual, control_computer, control_computer][rand(1,3)];

    PrepareVehicle(
       [ru_medium_tracked, ru_heavy_tracked, ru_heavy_wheeled][i mod 3 + 1],
       [engine_siberite, engine_combustion][rand(1,2)],
       control,
       [ru_rocket_launcher, ru_heavy_gun, ru_gatling_gun][i mod 3 + 1],
       100
    );

    veh := CreateVehicle;
    SetDir(veh, dir);

    PlaceUnitArea(veh, area, false);

    if control = control_manual then
       begin
       uc_side := 3;
       uc_nation := nation_russian;

       PrepareMechanic(false, skill);
       un := CreateHuman;
       PlaceHumanInUnit(un, veh);
       SetTag(un, spot);
       end;

    repeat
     ComMoveToArea(veh, parking);
     wait(0$3);                      
    until not FilterUnitsInArea(area, [f_ok]);

    result := Join(result, veh);
    end;

// infantry
for i := 1 to [2, 2, 3, 3][Difficulty] + strength do
    begin
    uc_side := 3;
    uc_nation := nation_russian;

    PrepareSoldier(false, skill);
    un := CreateHuman;

    if Prob([30, 40, 50, 50][Difficulty]) then
       SetClass(un, class_bazooker);

    SetDir(un, dir);
    SetTag(un, spot);

    PlaceUnitArea(un, area, false);
    ComMoveToArea(un, parking);

    wait(0$1);

    result := Join(result, un);
    end;
End;

Function PrepareRussianExtraInfantry;
var i, un;
begin
result := [];

for i := 1 to [3, 4, 5][Difficulty+1] do
    begin
    uc_side := 3;
    uc_nation := nation_russian;

    PrepareSoldier(false, [7, 8, 9][Difficulty+1]);
    un := CreateHuman;

    if Prob([30, 40, 50, 50][Difficulty]) then
       SetClass(un, class_bazooker);

    PlaceUnitArea(un, extraSpawnAttackArea, false);

    result := Join(result, un);
    end;
End;

Function SendBulldozer;
var un;
begin
uc_side := 3;
uc_nation := nation_russian;

PrepareVehicle(ru_heavy_wheeled, engine_siberite, control_computer, ru_bulldozer, 100);
un := CreateVehicle;
PlaceUnitXYD(un, 7, 8, 1, false);

wait(0$1);

CutTreeInArea(un, cutTreeWArea);
End;

Every 0$3 trigger wave >= [5, 6, 6, 7][Difficulty] do
begin
ChangeSideFog(3, 2);
ruDefeated := true;
End;

Every 3$20 + 4$00 trigger wave < [5, 6, 6, 7][Difficulty] do
var i, e, attackers, extraAttackers, spot, extraSpot, paths, enemy;
begin
enable;
attackers := [];
extraAttackers := [];
paths := [
   [ [176,152], [157,122], [146,89], [125,46] ],
   [ [87,141], [80,120], [66,95], [51,69], [36,40], [47,31], [60,28] ],
   [ [21,17], [35,30], [49,31] ]
];


wave := Inc(wave);
spot := rand(1,3);

if wave mod 2 = 0 then
   strength := Inc(strength);

if Count(ListEnvironmentArea(cutTreeWArea)) then
   SendBulldozer;

attackers := PrepareRussianAttack(spot, strength);

if wave + [2, 2, 3, 3][Difficulty] >= [6, 7, 8, 9][Difficulty] then
   begin
   extraSpot := spot - 1;

   if extraSpot < 1 then
      extraSpot := 3;

   extraAttackers := PrepareRussianAttack(extraSpot, strength);

   if Difficulty > 1 then
      PrepareRussianExtraInfantry;
   end;

repeat
  wait(0$2);
  enemy := FilterAllUnits([f_side, 2]);

  for i in attackers do
      begin
      if not IsOk(i) then
         begin
         attackers := attackers diff i;
         continue;
         end;

      if GetType(i) = unit_vehicle then
         AgressiveMove(i, paths[spot])
      else
         begin
         if GetClass(i) = class_bazooker then
            begin
            if GetDistUnits(i, NearestUnitToUnit(enemy, i)) > 12 then
               ComAttackUnit(i, NearestUnitToUnit(enemy, i))
            else
               begin
               e := NearestUnitToUnit(enemy, i);

               case rand(1,3) of
                    1: ComAttackUnit(i, e);
                    2: ComSpaceShift(i, GetX(e), GetY(e));
                    3: ComTimeShift(i, GetX(e), GetY(e));
                    end;
               end;
            end
         else
            ComAttackUnit(i, NearestUnitToUnit(enemy, i));
         end;
      end;

  if extraAttackers then
     begin
     for i in extraAttackers do
         begin
         if not IsOk(i) then
            begin
            extraAttackers := extraAttackers diff i;
            continue;
            end;

         if GetType(i) = unit_vehicle then
            AgressiveMove(i, paths[extraSpot])
         else
            begin
            if GetClass(i) = class_bazooker then
               begin
               if GetDistUnits(i, NearestUnitToUnit(enemy, i)) > 12 then
                  ComAttackUnit(i, NearestUnitToUnit(enemy, i))
               else
                  begin
                  e := NearestUnitToUnit(enemy, i);

                  case rand(1,3) of
                       1: ComAttackUnit(i, e);
                       2: ComSpaceShift(i, GetX(e), GetY(e));
                       3: ComTimeShift(i, GetX(e), GetY(e));
                       end;
                  end;
               end
            else
               ComAttackUnit(i, NearestUnitToUnit(enemy, i));
            end;
         end;
     end;
until not attackers and not extraAttackers;
End;
