Export function AreInTheSameBuilding(unit1, unit2);
var u1, u2;
begin
u1 := IsInUnit(unit1);
u2 := IsInUnit(unit2);

result := u1 and u1 = u2;
End;

Export function ShowPlace(x, y, time);
begin
RaiseSailEventCustom(showPlaceEvent, x, y, time, 0, 0, 0);
End;

Export function InEntrance(unit, building);
var x, y, d, entrance, btype;
begin
if not IsOk(unit) or not IsOk(building) or UnitsInside(building) = 6 then
   exit;

btype := GetBType(building);

if not btype in [b_depot, b_warehouse, b_armoury, b_barracks, b_factory, b_lab, b_lab_half, b_lab_full] then
   exit;

x := GetX(building);
y := GetY(building);
d := GetDir(building);

entrance := [ShiftX(x, d, 3), ShiftY(y, d, 3)];

if not ValidHex(entrance[1], entrance[2]) then
   exit;

result := GetDistUnitXY(unit, entrance[1], entrance[2]) < 4;
End;

Export function PlaceExplosives(building);
begin
explosivePlantedList := Join(explosivePlantedList, building);
PlaySoundXY(GetX(building), GetY(building), 'PlantBomb');
End;

Export function CreateNature;
var i;
begin
PrepareFrog;

for i := 1 to 3 do
    PlaceUnitArea(CreateHuman, swampArea, false);
End;


Export function MarkBuilding(building, marker);
begin
if marker then
   begin
   PlaceSeeing(GetX(building), GetY(building), 2, -3);
   SetBName(building, 'target');
   end
else
   begin
   RemoveSeeing(GetX(building), GetY(building), 2);
   SetBName(building, '');
   end;
End;
