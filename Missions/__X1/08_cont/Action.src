Export Function Action;
var speaker, i, tmp;
begin  
Video(true);

hasNormalScene := Kaia or Givi;

if hasNormalScene then
   begin
   for i in americanSquad do
       begin
       SetClass(i, class_prison);
       PlaceUnitXYR(i, 78, 16, 5, false);
       ComHold(i);

       //if Prob(60) then
       //   ForceSleep(i, true);
       end;

   tmp := [ Mike, Ibrahim, Kamil, Kaia, Sophia, Markov, Olaf,
            Kurt, Givi, Aviradze ] union heikeSecondSquad;

   SetClass(Heike, class_prison);
   PlaceUnitXYD(Heike, 117, 24, 3, false);
   ComTurnXY(Heike, 123, 39);

   for i in tmp do
       begin
       SetClass(i, class_prison);
       PlaceUnitArea(i, arSpawnArea1, false);
       ComTurnXY(i, 113, 16);
       end;
   end;

CenterNowOnXY(124, 39);

PrepareDeadBodies;
PrepareFirstScene;

PlaceSeeing(152, 65, 2, -70);
RemoveSeeing(152, 65, 2);

PlaceSeeing(122, 40, 2, -8);

CenterNowOnXY(124, 37);

Say(ruCommisar, 'DRum-Execution-1');
Say(ruCommisar, 'DRum-Execution-2');

wait(0$01);

Say(ruCommisar, 'DRum-Execution-3');

wait(0$1);

Say(ruCommisar, 'DRum-Execution-4');

ComAttackUnit(russianKillers[1], HexInfo(122, 39));
ComAttackUnit(russianKillers[2], HexInfo(123, 41));

AddComHold(russianKillers);

wait(0$1);

RemoveSeeing(122, 40, 2);

for i in russianKillers union ruCommisar do
    RemoveUnit(i);

if hasNormalScene then
   ActionNormal
else
   ActionAdditional;
End;

Function ActionNormal;
var i, tmp;
begin
CenterNowOnUnits(Heike);

wait(0$1);

ComMoveXY(Heike, 115, 19);
AddComTurnXY(Heike, 113, 16);

wait(0$2);

Say(Heike, 'DH-Conspiracy-1');
Say(Kaia, 'DK-Conspiracy-2');
Say(Givi, 'DG-Conspiracy-3');
Say(Givi, 'DG-Conspiracy-4');
Say(Heike, 'DH-Conspiracy-5');

if IsOk(Kamil) then
   begin
   hasVodka := true;

   Say(Kamil, 'DKam-Conspiracy-6');
   Say(Kamil, 'DKam-Conspiracy-7');
   Say(Kamil, 'DKam-Conspiracy-8');
   Say(Kamil, 'DKam-Conspiracy-9');
   end;

if IsOk(Sophia) then
   begin
   americanContact := true;
   ChangeMissionObjectives_Silent('M1-american');

   Say(Sophia, 'DS-Conspiracy-10');
   Say(Markov, 'DM-Conspiracy-11');
   Say(Sophia, 'DS-Conspiracy-12');

   ShowPlace(84, 19, 0$3);

   if johnnySaved then
      begin
      Say(Sophia, 'DS-Conspiracy-13');
      Say(Heike, 'DH-Conspiracy-14');
      Say(Sophia, 'DH-Conspiracy-15');
      end
   else
      begin
      Say(Sophia, 'DS-Conspiracy-a-13');
      Say(Heike, 'DH-Conspiracy-a-14');
      Say(Sophia, 'DH-Conspiracy-a-15');
      end;

   if IsOk(Givi) then
      begin
      Say(Givi, 'DG-Conspiracy-a-16');
      Say(Heike, 'DH-Conspiracy-a-17');
      end;
   end;

Say(Heike, 'DH-Conspiracy-16');

if IsOk(Givi) then
   begin
   hasStimDrugs := true;
   ChangeMissionObjectives_Silent('M1-drugs');

   Say(Givi, 'DG-Conspiracy-17');

   SetSide(drugsLab, 2);
   ShowPlace(194, 98, 0$3);
   SetSide(drugsLab, 3);

   Say(Givi, 'DG-Conspiracy-18');
   Say(Givi, 'DG-Conspiracy-19');
   Say(Givi, 'DG-Conspiracy-20');
   Say(Heike, 'DH-Conspiracy-21');

   if IsOk(Kaia) then
      begin
      hasExplosions := true;
      ChangeMissionObjectives_Silent('M1-explosive');
      
      Say(Kaia, 'DK-Conspiracy-22');

      SetSide(barExplosion, 2);
      ShowPlace(170, 104, 0$3);
      SetSide(barExplosion, 3);

      Say(Kaia, 'DK-Conspiracy-23');
      end;

   if IsOk(Olaf) then
      begin
      hasExplosionsInFactory := true;

      Say(Olaf, 'DO-Conspiracy-24');
      ShowPlace(175, 54, 0$2);

      if IsOk(Markov) then
         begin
         Say(Markov, 'DMar-Conspiracy-25');
         Say(Markov, 'DMar-Conspiracy-26');
         end;
      end;
   end;

if IsOk(Kurt) and IsOk(Kaia) then
   begin
   hasWeapons := true;
   hasRevolver := true;
   ChangeMissionObjectives_Silent('M1-weapons');

   Say(Kurt, 'DKs-Conspiracy-27');

   if IsOk(Givi) then
      Say(Givi, 'DG-Conspiracy-28')
   else if not Say(UnitFilter(heikeSecondSquad, [f_sex, sex_male])[1], 'DArm-Conspiracy-a-28') then
           Say(UnitFilter(heikeSecondSquad, [f_sex, sex_female])[1], 'DArf-Conspiracy-a-28');

   Say(Kurt, 'DKs-Conspiracy-29');

   ShowPlace(192, 122, 0$3);

   Say(Kurt, 'DKs-Conspiracy-30');
   Say(Kaia, 'DK-Conspiracy-31');

   if not Say(Markov, 'DMar-Conspiracy-33') and heikeSecondSquad then
      if not Say(UnitFilter(heikeSecondSquad, [f_sex, sex_male])[1], 'DArm-Conspiracy-a-34') then
         Say(UnitFilter(heikeSecondSquad, [f_sex, sex_female])[1], 'DArf-Conspiracy-a-34');

   Say(Kaia, 'DK-Conspiracy-34');
      
   if IsOk(Markov) then
      begin
      hasSniperRifle := true;

      Say(Markov, 'DMar-Conspiracy-35');
      Say(Kaia, 'DK-Conspiracy-36');
      Say(Markov, 'DMar-Conspiracy-37');
      Say(Markov, 'DMar-Conspiracy-38');

      ShowPlace(137, 98, 0$3);

      Say(Markov, 'DMar-Conspiracy-39');
      end
   else if heikeSecondSquad then
      begin
      hasSniperRifle := true;

      ShowPlace(137, 98, 0$3);

      if not Say(UnitFilter(heikeSecondSquad, [f_sex, sex_male])[1], 'DArm-Conspiracy-a-35') then
         Say(UnitFilter(heikeSecondSquad, [f_sex, sex_female])[1], 'DArf-Conspiracy-a-35');
      end;
   end;

Say(Heike, 'DH-Conspiracy-40');

if IsOk(Mike) then
   begin
   hasScout := true;

   Say(Mike, 'DM-Conspiracy-41');
   Say(Mike, 'DM-Conspiracy-42');

   ShowPlace(73, 102, 0$3);

   Say(Mike, 'DM-Conspiracy-43');
   end;

if hasVodka and IsOk(Kaia) and IsOk(Kurt) then
   begin
   hasMethanol := true;

   Say(Kaia, 'DK-Conspiracy-44');
   Say(Kaia, 'DK-Conspiracy-45');
   Say(Kamil, 'DKam-Conspiracy-46');
   end;

Say(Heike, 'DH-Conspiracy-47');

wait(0$1);

your_side := 8;

CenterNowOnXY(1, 1);

for i in FilterAllUnits([[f_or, [f_side, 2], [f_side, 4]], [f_type, unit_human]]) do
    RemoveUnit(i);

wait(0$0.3);

Query('StartInfo1');

wait(0$1);

LoadColorsTXT('colors_night.txt');

Query('StartInfo2');

PrepareGame;

PlaceSeeing(152, 65, 2, -70);
RemoveSeeing(152, 65, 2);

PlaceSeeing(133, 76, 2, -6);

PlaceSeeing(152, 65, 8, -70);
RemoveSeeing(152, 65, 8);

PlaceSeeing(133, 76, 8, -6); 

CenterNowOnUnits(ruOutpost2);

dialogue_skipped := false;

InitRuPatrols;

Say(Heike, 'DH-Escape-1');
Say(Heike, 'DH-Escape-2');

if not debug then
   StartLockerMinigame;

wait(0$1);

Say(Heike, 'DH-Escape-4');

wait(0$3);

your_side := 2;

ComExitBuilding(Heike);

PlaceSeeing(152, 65, 2, -70);
RemoveSeeing(152, 65, 2);
RemoveSeeing(133, 76, 8);

AddComMoveXY(Heike, 128, 64);

repeat
 wait(0$1);
until IsAt(Heike, 128, 64);

ComHold(Heike);

Say(Heike, 'DH-Start-1');

if not americanContact then
   Say(Heike, 'DH-Start-c-2')
else if johnnySaved then
   Say(Heike, 'DH-Start-a-2')
else
   Say(Heike, 'DH-Start-b-2');

Video(false); // gl hf

tick := 0;

ChangeMissionObjectives('M1');

enable(gameStartEvent);

SaveForQuickRestart;
End;


// Scene where Heike is going to die
Function ActionAdditional;
var i, un, tmp;
begin
PlaceSeeing(115, 27, 2, -6);

PlaceHumanInUnit(Heike, HexInfo(115, 27));
SetClass(Heike, 33);

CenterNowOnXY(124, 39);

Say(Heike, 'DH-Fail-1');

RaiseSailEvent(centerCamEvent);

ComExit(Heike);
AddComMoveXY(Heike, 109, 33);
AddComHold(Heike);

RemoveSeeing(115, 27, 2);

wait(0$2);

repeat
 wait(0$1);
until IsAt(Heike, 109, 33);

Say(Heike, 'DH-Fail-2');

ComMoveXY(Heike, 111, 48);

repeat
 wait(0$1);
until GetDistUnitXY(Heike, 111, 48) < 4;

AddComMoveXY(Heike, 106, 72);
AddComMoveXY(Heike, 103, 80);

uc_side := 3;
uc_nation := 3;

PrepareHuman(sex_male, class_soldier, 6);
hc_attr := [12, 12];
un := CreateHuman;

PlaceUnitXYD(un, 134, 52, 4, false);

ComTurnUnit(un, Heike);
ComMoveUnit(un, Heike);

Say(un, 'DRum-Fail-3');

for i := 1 to 3 do
    begin
    PrepareSoldier(false, 10);
    un := CreateHuman;
    tmp := Join(tmp, un);
    PlaceUnitArea(un, failSceneGuardArea, false);
    ComTurnUnit(un, Heike);
    end;

repeat
 wait(0$1);
until UnitFilter(tmp, [f_see, 2]) > 1;

wait(0$1);

DialogueOn;

Say(Heike, 'DH-Fail-4');
Say(Heike, 'DH-Fail-5');
Say(Heike, 'DH-Fail-6');

DialogueOff;

ComAttackUnit(tmp, Heike);

repeat
 wait(0$1);
until IsDying(Heike);

KillUnit(Heike);

wait(0$4);

ResetFog;

DialogueOn;

dwait(0$1);

Heike := PrepareUnit('Heike', (not debug), prefix);
SayNoFace(Heike, 'DH-Fail-7');

DialogueOff;

YouLost('Fail');
End;


// ACTION EVENTS
// east road
Every 0$1 trigger SeeXY(2, 173, 29) and GetDistUnitXY(Heike, 173, 29) < 6 marked gameStartEvent do
Say(Heike, 'DH-EastRoad');

// top hill
Every 0$1 trigger SeeXY(2, 149, 3) and GetDistUnitXY(Heike, 149, 3) < 6 marked gameStartEvent do
Say(Heike, 'DH-EastRoad');

// see eastern part of the base
Every 0$1 trigger SeeXY(2, 217, 120) and GetDistUnitXY(Heike, 217, 120) < 6 marked gameStartEvent do
Say(Heike, 'DH-EastEnd');

// heike on the hill
Every 0$1 trigger IsInArea(Heike, hillArea) marked gameStartEvent do
begin
if not heikeSquad then
   Say(Heike, 'DH-Hill')
else
   Say(Heike, 'DH-Hill-a');
End;

// heike on the border of base
Every 0$1 trigger IsInArea(Heike, baseBorderArea) marked gameStartEvent do
var x, y, v;
begin
DialogueOn;

CenterNowOnUnits(Heike);

x := GetX(Heike);
y := GetY(Heike);

PlaceSeeing(x, y, 2, -12);
RemoveSeeing(x, y, 2);

if FilterAllUnits([[f_see, 2], [f_or, [f_btype, b_bunker], [f_btype, b_turret]]]) then
   v := 3
else
   v := 2;

Say(Heike, 'DH-Outpost-' & rand(1, v));

DialogueOff;
End;

// heike on the border of base #2
Every 0$1 trigger IsInArea(Heike, baseBorder2Area) marked gameStartEvent do
var x, y, v;
begin
DialogueOn;

CenterNowOnUnits(Heike);

x := GetX(Heike);
y := GetY(Heike);

PlaceSeeing(x, y, 2, -12);
RemoveSeeing(x, y, 2);

if FilterAllUnits([[f_see, 2], [f_or, [f_btype, b_bunker], [f_btype, b_turret]]]) then
   v := 3
else
   v := 2;

Say(Heike, 'DH-Outpost-' & rand(1, v));

DialogueOff;
End;

// admin area
Every 0$2 trigger IsInArea(Heike, adminArea) and not adminAreaDiscovered and not hasMuchin marked gameStartEvent do
begin
DialogueOn;
PlaceSeeing(152, 115, 2, -16);
RemoveSeeing(152, 115, 2);

CenterNowOnXY(152, 115);

Say(Heike, 'DH-Stealth-1');
DialogueOff;

adminAreaDiscovered := true;
End;

// spot givi
Every 0$1 trigger See(2, Givi) and GetDistUnits(Heike, Givi) < 6 and not isAlarm and not hasMuchin marked gameStartEvent do
begin
DialogueOn;
CenterNowOnUnits(Givi);

ComTurnUnit(Givi, Heike);
ComTurnUnit(Heike, Givi);

Say(Heike, 'DH-Givi-1');
Say(Givi, 'DG-Givi-2');

DialogueOff;

SetSide(Givi, 2);
heikeSquad := Join(heikeSquad, Givi);
End;

// spot sophia
Every 0$1 trigger See(2, Sophia) and GetDistUnits(Heike, Sophia) < 6 and not isAlarm and not hasMuchin marked gameStartEvent do
begin
DialogueOn;
CenterNowOnUnits(Sophia);

ComTurnUnit(Sophia, Heike);
ComTurnUnit(Heike, Sophia);

Say(Heike, 'DH-Sophia-1');
Say(Sophia, 'DS-Sophia-2');

DialogueOff;

SetSide(Sophia, 2);
heikeSquad := Join(heikeSquad, Sophia);
End;

// spot olaf
Every 0$1 trigger See(2, Olaf) and GetDistUnits(Heike, Olaf) < 6 and not isAlarm and not hasMuchin marked gameStartEvent do
begin
DialogueOn;

CenterNowOnUnits(Olaf);

Say(Heike, 'DH-Olaf-1');
Say(Olaf, 'DO-Olaf-2');

if explosionsTakenByRussians then
   Say(Olaf, 'DO-Olaf-a-3');

DialogueOff;

SetSide(Olaf, 2);
heikeSquad := Join(heikeSquad, Olaf);
End;

// spot mike
Every 0$1 trigger See(2, Mike) and GetDistUnits(Heike, Mike) < 6 and not isAlarm and not hasMuchin marked gameStartEvent do
var i, xy;
begin
DialogueOn;

CenterNowOnUnits(Mike);

xy := AreaToList(escapeRouteArea, 0);

for i := 1 to xy[1] do
    begin
    PlaceSeeing(xy[1][i], xy[2][i], 2, -3);
    RemoveSeeing(xy[1][i], xy[2][i], 2);
    end;

Say(Mike, 'DM-Mike-1');
Say(Heike, 'DH-Mike-2');

CenterOnXY(78, 104);

dwait(0$1);

CenterNowOnUnits(Heike);

DialogueOff;

SetSide(Mike, 2);
heikeSquad := Join(heikeSquad, Mike);
End;

// gave revolver to kaia
Every 0$1 trigger GetDistUnits(Heike, Kaia) < 6 and GetClass(Kaia) = 33 and not isAlarm and IsOk(Kaia) and heikeHasRevolver and Kaia in heikeSquad and GetSide(Kaia) = 2 marked gameStartEvent do
begin
DialogueOn;

Say(Heike, 'DH-Kaia-Revolver-2');
SetClassKaiaRevolver;

DialogueOff;
End;

// ask about Ibrahim/Aviradze
Every 0$3 trigger Ibrahim and Aviradze and GetSide(Aviradze) <> 2 and GetSide(Ibrahim) <> 2 and UnitFilter(heikeSquad, [f_side, 2]) > 5 and not isAlarm and not hasMuchin marked gameStartEvent do
var hasKaia, hasGivi;
begin
DialogueOn;

hasGivi := IsOk(Givi) and Givi in heikeSquad and GetSide(Givi) = 2;

Say(Heike, 'DH-Med-1');

if hasGivi then
   Say(Givi, 'DG-Med-2')
else if not Say(UnitFilter(heikeSquad isect heikeSecondSquad, [[f_side, 2], [f_sex, sex_male]])[1], 'DArm-Med-e-2') then
   Say(UnitFilter(heikeSquad isect heikeSecondSquad, [[f_side, 2], [f_sex, sex_female]])[1], 'DArf-Med-e-2');

ShowPlace(154, 119, 0$2);

Say(Heike, 'DH-Med-3');

if hasGivi then
   Say(Givi, 'DG-Med-4')
else if not Say(UnitFilter(heikeSquad isect heikeSecondSquad, [[f_side, 2], [f_sex, sex_male]])[1], 'DArm-Med-e-4') then
   Say(UnitFilter(heikeSquad isect heikeSecondSquad, [[f_side, 2], [f_sex, sex_female]])[1], 'DArf-Med-e-4');

hasKaia := IsOk(Kaia) and Kaia in heikeSquad and GetSide(Kaia) = 2;

if IsOk(Mike) and Mike in heikeSquad and GetSide(Kaia) = 2 then
   begin
   Say(Mike, 'DM-Med-5');

   if hasKaia then
      Say(Kaia, 'DK-Med-6');
   end;

if hasKaia then
   begin
   PlaceSeeing(175, 123, 2, -8);
   RemoveSeeing(175, 123, 2);

   CenterNowOnXY(175, 123);

   Say(Kaia, 'DK-Med-7');
   Say(Kaia, 'DK-Med-8');

   if IsOk(Markov) and Markov in heikeSquad and GetSide(Markov) = 2 then
      begin
      Say(Markov, 'DMar-Med-9');
      Say(Kaia, 'DK-Med-10');

      if hasGivi then
         Say(Kaia, 'DK-Med-11')
      else
         Say(Kaia, 'DK-Med-a-11');
      end;

   if IsOk(Kamil) and Kamil in heikeSquad and GetSide(Kamil) = 2 then
      begin
      Say(Kamil, 'DKam-Med-12');
      Say(Kamil, 'DKam-Med-13');

      if not hasExplosionCollected then
         Say(Heike, 'DH-Med-d-14');
      end;
   end;

DialogueOff;

adminAreaDiscovered := true;
laundryAllowed := true;
End;

// ask about Aviradze
Every 0$3 trigger not Ibrahim and Aviradze and not Aviradze in heikeSquad and UnitFilter(heikeSquad, [f_side, 2]) > 4 and not isAlarm and not hasMuchin marked gameStartEvent do
var hasGivi, hasKaia;
begin
DialogueOn;

hasGivi := IsOk(Givi) and Givi in heikeSquad and GetSide(Givi) = 2;

Say(Heike, 'DH-Med-a-1');

if hasGivi then
   Say(Givi, 'DG-Med-a-2')
else if not Say(UnitFilter(heikeSquad isect heikeSecondSquad, [[f_side, 2], [f_sex, sex_male]])[1], 'DArm-Med-f-2') then
   Say(UnitFilter(heikeSquad isect heikeSecondSquad, [[f_side, 2], [f_sex, sex_female]])[1], 'DArf-Med-f-2');

ShowPlace(154, 119, 0$2);

Say(Heike, 'DH-Med-a-3');

if hasGivi then
   Say(Givi, 'DG-Med-a-4')
else if not Say(UnitFilter(heikeSquad isect heikeSecondSquad, [[f_side, 2], [f_sex, sex_male]])[1], 'DArm-Med-f-4') then
   Say(UnitFilter(heikeSquad isect heikeSecondSquad, [[f_side, 2], [f_sex, sex_female]])[1], 'DArf-Med-f-4');

hasKaia := IsOk(Kaia) and Kaia in heikeSquad and GetSide(Kaia) = 2;

if IsOk(Mike) and Mike in heikeSquad and GetSide(Mike) = 2 then
   begin
   Say(Mike, 'DM-Med-5');

   if hasKaia then
      Say(Kaia, 'DK-Med-6');
   end;

if hasKaia then
   begin
   PlaceSeeing(175, 123, 2, -8);
   RemoveSeeing(175, 123, 2);

   CenterNowOnXY(175, 123);

   Say(Kaia, 'DK-Med-7');
   Say(Kaia, 'DK-Med-8');

   if IsOk(Markov) and Markov in heikeSquad and GetSide(Markov) = 2 then
      begin
      Say(Markov, 'DMar-Med-9');
      Say(Kaia, 'DK-Med-10');

      if hasGivi then
         Say(Kaia, 'DK-Med-11')
      else
         Say(Kaia, 'DK-Med-a-11');
      end;

   if IsOk(Kamil) and Kamil in heikeSquad and GetSide(Kamil) = 2 then
      begin
      Say(Kamil, 'DKam-Med-12');
      Say(Kamil, 'DKam-Med-13');

      if not hasExplosionCollected then
         Say(Heike, 'DH-Med-d-14');
      end;
   end;

DialogueOff;

adminAreaDiscovered := true;
laundryAllowed := true;
End;

// ask about Ibrahim
Every 0$3 trigger Ibrahim and not Aviradze and not Ibrahim in heikeSquad and UnitFilter(heikeSquad, [f_side, 2]) > 4 and not isAlarm and not hasMuchin marked gameStartEvent do
var hasGivi, hasKaia;
begin
DialogueOn;

hasGivi := IsOk(Givi) and Givi in heikeSquad and GetSide(Givi) = 2;

Say(Heike, 'DH-Med-b-1');

if hasGivi then
   Say(Givi, 'DG-Med-a-2')
else if not Say(UnitFilter(heikeSquad isect heikeSecondSquad, [[f_side, 2], [f_sex, sex_male]])[1], 'DArm-Med-f-2') then
   Say(UnitFilter(heikeSquad isect heikeSecondSquad, [[f_side, 2], [f_sex, sex_female]])[1], 'DArf-Med-f-2');

ShowPlace(154, 119, 0$2);

Say(Heike, 'DH-Med-a-3');

if hasGivi then
   Say(Givi, 'DG-Med-a-4')
else if not Say(UnitFilter(heikeSquad isect heikeSecondSquad, [[f_side, 2], [f_sex, sex_male]])[1], 'DArm-Med-f-4') then
   Say(UnitFilter(heikeSquad isect heikeSecondSquad, [[f_side, 2], [f_sex, sex_female]])[1], 'DArf-Med-f-4');

hasKaia := IsOk(Kaia) and Kaia in heikeSquad and GetSide(Kaia) = 2;

if IsOk(Mike) and Mike in heikeSquad and GetSide(Mike) = 2 then
   begin
   Say(Mike, 'DM-Med-5');

   if hasKaia then
      Say(Kaia, 'DK-Med-6');
   end;

if hasKaia then
   begin
   PlaceSeeing(175, 123, 2, -8);
   RemoveSeeing(175, 123, 2);

   CenterNowOnXY(175, 123);

   Say(Kaia, 'DK-Med-7');
   Say(Kaia, 'DK-Med-8');

   if IsOk(Markov) and Markov in heikeSquad and GetSide(Markov) = 2 then
      begin
      Say(Markov, 'DMar-Med-9');
      Say(Kaia, 'DK-Med-10');

      if hasGivi then
         Say(Kaia, 'DK-Med-11')
      else
         Say(Kaia, 'DK-Med-a-11');
      end;

   if IsOk(Kamil) and Kamil in heikeSquad and GetSide(Kamil) = 2 then
      begin
      Say(Kamil, 'DKam-Med-12');
      Say(Kamil, 'DKam-Med-13');

      if not hasExplosionCollected then
         Say(Heike, 'DH-Med-d-14');
      end;
   end;

DialogueOff;

adminAreaDiscovered := true;
laundryAllowed := true;
End;

Every 0$1 trigger laundryAllowed do
ChangeMissionObjectives('M1-laundry');

// not Aviradze and not Ibrahim
Every 0$3 trigger not Ibrahim and not Aviradze and IsOk(Olaf) and Olaf in heikeSquad and GetSide(Olaf) = 2 and not isAlarm and not hasMuchin marked gameStartEvent do
begin
DialogueOn;

PlaceSeeing(152, 115, 2, -16);
RemoveSeeing(152, 115, 2);

CenterNowOnXY(152, 115);

Say(Olaf, 'DO-Med-c-1');

if not hasExplosionCollected then
   Say(Heike, 'DH-Med-d-14')
else
   begin
   Say(Heike, 'DH-Med-c-2');

   if IsOK(Kaia) and Kaia in heikeSquad and GetSide(Kaia) = 2 then
      Say(Kaia, 'DK-Med-c-3');
   end;

DialogueOff;

adminAreaDiscovered := true;
End;

// Kaia dying
Every 0$1 trigger GetLives(Kaia) < 250 and Kaia in heikeSquad and isAlarm and hasStimDrugsCollected marked gameStartEvent do
begin
DialogueOn;

CenterNowOnUnits(Kaia);

ForceSay(Kaia, 'DK-death-1');
Say(Heike, 'DH-death-2');
ForceSay(Kaia, 'DK-death-3');
ForceSay(Kaia, 'DK-death-4');

SetSide(Kaia, 8);
ComStop(Kaia);

ChangeSideFog(8, 2);

heikeSquad := heikeSquad diff Kaia;

DialogueOff;

Say(Mike, 'DM-death-5');
End;

// Visit Harris
Every 0$2 trigger not contactWithAmerican and not hasMuchin and not Harris in heikeSquad and See(2, Harris) and GetDistUnits(Heike, Harris) < 6 and not isAlarm marked gameStartEvent do
begin
ComTurnUnit(Harris, Heike);
ComTurnUnit(Heike, Harris);

wait(0$0.3);

DialogueOn;

CenterNowOnUnits(Harris);

Say(Heike, 'DH-Deal-1');
Say(Harris, 'DJ-Deal-2');
Say(Heike, 'DH-Deal-3');
Say(Harris, 'DJ-Deal-4');
Say(Harris, 'DJ-Deal-5');
Say(Harris, 'DJ-Deal-6');
Say(Harris, 'DJ-Deal-7');
Say(Heike, 'DH-Deal-8');
Say(Heike, 'DH-Deal-9');
Say(Harris, 'DJ-Deal-10');
                     
DialogueOff;

contactWithAmerican := true;

ChangeMissionObjectives_Silent('M1-american-out');

SetSide(Harris, 2);
heikeSquad := Join(heikeSquad, Harris);
End;

// Visit Harris #2
Every 0$2 trigger contactWithAmerican and not hasMuchin and not Harris in heikeSquad and See(2, Harris) and GetDistUnits(Heike, Harris) < 6 and not isAlarm marked gameStartEvent do
begin
ComTurnUnit(Harris, Heike);
ComTurnUnit(Heike, Harris);

wait(0$0.3);

DialogueOn;

CenterNowOnUnits(Harris);

Say(Harris, 'DJ-Escort-1');
Say(Heike, 'DH-Escort-2');
Say(Harris, 'DJ-Escort-3');

DialogueOff;

SetSide(Harris, 2);
heikeSquad := Join(heikeSquad, Harris);
End;

// Visit Doug
// #check in building inside section

// spot american random
Every 0$2 trigger contactWithAmerican and not hasMuchin and UnitFilter(americanSquad diff heikeSquad, [[f_side, 4], [f_not, [f_tag, tagCaptured]], [f_see, 2]]) and not isAlarm marked gameStartEvent do
var un;
begin
enable;

un := NearestUnitToUnit(UnitFilter(americanSquad diff heikeSquad, [[f_side, 4], [f_dist, Heike, 6], [f_see, 2]]), Heike);

if GetDistUnits(un, Heike) < 6 then
   begin
   DialogueOn;

   CenterNowOnUnits(un);

   Say(Heike, 'DH-USsol-1');

   if GetSex(un) = sex_male then
      Say(un, 'DUSM-USsol-2')
   else
      Say(un, 'DUSF-USsol-2');

   DialogueOff;                        
   
   heikeSquad := Join(heikeSquad, un);
   SetTag(un, tagCaptured);
   SetSide(un, 2);
   end;
End;

// spot arabian randoms
Every 0$2 trigger heikeSecondSquad and not hasMuchin and UnitFilter(heikeSecondSquad diff heikeSquad, [[f_not, [f_tag, tagCaptured]], [f_dist, Heike, 6], [f_see, 2]]) and not isAlarm marked gameStartEvent do
var un;
begin
enable;

un := NearestUnitToUnit(UnitFilter(heikeSecondSquad diff heikeSquad, [[f_side, 5], [f_dist, Heike, 6], [f_see, 2]]), Heike);

if GetDistUnits(un, Heike) < 6 then
   begin
   DialogueOn;

   CenterNowOnUnits(un);

   Say(Heike, 'DH-USsol-1');

   if GetSex(un) = sex_male then
      Say(un, 'DArm-USsol-2')
   else
      Say(un, 'DArf-USsol-3');

   DialogueOff;

   heikeSquad := Join(heikeSquad, un);
   SetTag(un, tagCaptured);
   SetSide(un, 2);
   end;
End;

// alarm when player don't collect americans
Every 0$2 trigger UnitFilter(americanSquad, [f_see, 2]) and UnitFilter(heikeSquad, [f_side, 2]) > 5 and not americanContact and not hasMuchin and not contactWithAmerican and not isAlarm marked gameStartEvent do
var un;
begin
un := UnitFilter(americanSquad, [[f_side, 4], [f_see, 2]])[1];

DialogueOn;

if GetSex(un) = sex_male then
   Say(un, 'DUSm-USsol-a-2')
else
   Say(un, 'DUSf-USsol-a-2');

DialogueOff;

wait(0$2);

isAlarm := true;
End;

// givi in laundry
Every 0$2 trigger not isAlarm and IsOk(Givi) and GetSide(Givi) = 2 and laundryAllowed and not giviAsRussian and not heikeAsRussian and not hasMuchin and InEntrance(Givi, laundry) marked gameStartEvent do
begin
enable;

InGameOn;

SetSide(Givi, 5);
SetSide(laundry, 5);

ComEnterUnit(Givi, laundry);

repeat
 wait(0$1);
until IsInUnit(Givi);

case Query('GiviInLaundry') of
     1: SpawnGiviAsRussian;
     2: ;
     end;

ComExitBuilding(Givi);

SetSide(Givi, 2);
SetSide(laundry, 3);

InGameOff;
End;

// givi in ruLab
Every 0$2 trigger not isAlarm and giviAsRussian and GetSide(Givi) = 2 and GetNation(Givi) = nation_russian and InEntrance(Givi, ruLab) and not hasMuchin marked gameStartEvent do
begin
InGameOn;

SetSide(Givi, 3);         
ComEnterUnit(Givi, ruLab);

wait(0$1);

DialogueOn;
Say(Givi, 'DG-Captive-1');
Say(ruCommisar, 'DCom-Captive-2');
Say(Givi, 'DG-Captive-3');
Say(ruCommisar, 'DCom-Captive-4');

RemoveUnit(ruCommisar);
DialogueOff;

InGameOff;

SetSide(Givi, 2);
ComExitBuilding(Givi);

if Aviradze then
   begin
   heikeSquad := Join(heikeSquad, Aviradze);
   SetSide(Aviradze, 2);
   ComExitBuilding(Aviradze);
   end;

if Ibrahim then
   begin
   heikeSquad := Join(heikeSquad, Ibrahim);
   SetSide(Ibrahim, 2);
   ComExitBuilding(Ibrahim);
   end;
End;

// heike in ruLab
Every 0$2 trigger not isAlarm and heikeAsRussian and GetNation(Heike) = nation_russian and InEntrance(Heike, ruLab) and not hasMuchin marked gameStartEvent do
begin
InGameOn;

SetSide(Heike, 3);
ComEnterUnit(Heike, ruLab);

wait(0$1);

DialogueOn;

if Aviradze and Ibrahim then
   Say(Heike, 'DH-Captive-a-1')
else
   Say(Heike, 'DH-Captive-a-b-1');

Say(ruCommisar, 'DCom-Captive-a-2');
Say(Heike, 'DH-Captive-a-3');
Say(ruCommisar, 'DCom-Captive-a-4');
Say(Heike, 'DH-Captive-a-5');

RemoveUnit(ruCommisar);
DialogueOff;

InGameOff;

SetSide(Heike, 2);
ComExitBuilding(Heike);

if Aviradze then
   begin
   heikeSquad := Join(heikeSquad, Aviradze);
   SetSide(Aviradze, 2);
   ComExitBuilding(Aviradze);
   end;

if Ibrahim then
   begin
   heikeSquad := Join(heikeSquad, Ibrahim);
   SetSide(Ibrahim, 2);
   ComExitBuilding(Ibrahim);
   end;
End;

// weapons get
Every 0$1 trigger FilterAllUnits([f_or, [f_class, class_hunter], [f_class, class_revolver]]) do
ChangeMissionObjectives_Silent('M1-weapons-out');

// spot jerry
Every 0$2 trigger See(2, Jerry) and GetDistUnits(Heike, Jerry) and not contactWithAmerican and not isAlarm and not hasMuchin marked gameStartEvent do
var i, foodDelivered;
begin
DialogueOn;

CenterNowOnUnits(Jerry);

Say(Jerry, 'DJy-Food-1');
Say(Heike, 'DH-Food-2');
Say(Jerry, 'DJy-Food-3');
Say(Jerry, 'DJy-Food-4');
Say(Heike, 'DH-Food-5');
Say(Jerry, 'DJy-Food-6');
Say(Jerry, 'DJy-Food-7');
Say(Jerry, 'DJy-Food-8');
Say(Heike, 'DH-Food-9');
Say(Jerry, 'DJy-Food-10');
Say(Heike, 'DH-Food-11');

DialogueOff;

ChangeMissionObjectives('M3');

CreateCratesXY(5, 215, 117, false);

PlaceSeeing(215, 118, 2, -6);
RemoveSeeing(215, 118, 2);

foodDelivered := false;

repeat
 wait(0$1);

 for i in UnitFilter(heikeSquad union Heike, [[f_dist, Jerry, 6], [f_class, class_prison]]) do
     if Carry(i) then
        begin
        DialogueOn;

        foodDelivered := true;

        case i of
             Heike: Say(Heike, 'DH-Food-12');
             Kaia: Say(Kaia, 'DK-Food-a-12');
             Markov: Say(Markov, 'DMar-Food-a-12');
             Givi: Say(Givi, 'DG-Food-a-14');
             Mike: Say(Mike, 'DM-Food-a-15');
             Kamil: Say(Kamil, 'DKam-Food-a-16');
             // Sophia: Say(Sophia, 'DS-Food-a-17');
             // Kurt: Say(Kurt, 'DKs-Food-a-18');
             end;

        SetCargo(i, mat_cans, 0);

        break;
        end;

until foodDelivered;

givenFood := true;

Say(Jerry, 'DJy-Food-13');

hasVirus := true;

if not americanContact then
   begin
   Say(Heike, 'DH-Food-14');
   Say(Jerry, 'DJy-Food-15');
   Say(Jerry, 'DJy-Food-16');
   Say(Jerry, 'DJy-Food-17');
   end;    

ChangeMissionObjectives('M3-out');

DialogueOff;

SetCargo(Jerry, mat_cans, 10);

ComMoveXY(Jerry, 95, 17);

repeat
 wait(0$1);

 if not HasTask(Jerry) then
    ComMoveXY(Jerry, 95, 17);
until IsAt(Jerry, 95, 17);

SetCargo(Jerry, mat_cans, 0);
americanSquad := Join(americanSquad, Jerry);

for i in FilterAllUnits([[f_side, 4], [f_nation, nation_american]]) do
    SetLives(i, 1000);
End;

// explosive
Every 0$2 trigger hasExplosions marked gameStartEvent do
var un, tmp;
begin
tmp := [];

uc_side := 3;
uc_nation := 3;

PrepareSoldier(sex_male, 8);
un := CreateHuman;

PlaceUnitXY(un, 173, 104, false);
tmp := Join(tmp, un);

un := CreateHuman;
PlaceHumanInUnit(un, barExplosion);
tmp := Join(tmp, un);

repeat
 wait(0$1);
until GetSide(Kaia) = 2 and GetDistUnits(Kaia, barExplosion) < 8 and UnitFilter(tmp, [f_see, 2]);

InGameOn;

PlaceSeeing(GetX(barExplosion), GetY(barExplosion), 2, -9);

CenterOnUnits(barExplosion);

ComTurnUnit(Kaia, barExplosion);

Say(Kaia, 'DK-Plastic-1');
Say(Kaia, 'DK-Plastic-2');

ComMoveUnit(Kaia, barExplosion);

repeat
 wait(0$1);
until GetDistUnits(Kaia, barExplosion) < 6;

ComHold(Kaia);

Say(tmp[1], 'DRum-Plastic-3');
Say(tmp[2], 'DRum2-Plastic-4');
Say(tmp[1], 'DRum-Plastic-5');
Say(tmp[2], 'DRum2-Plastic-6');

Say(Kaia, 'DK-Plastic-7');

InGameOff;

RemoveSeeing(GetX(barExplosion), GetY(barExplosion), 2);

explosionsTakenByRussians := true;

Query('ExplosivesInfo');
End;

// Exp #2
Every 0$1 trigger explosionsTakenByRussians and GetSide(Kaia) = 2 and InEntrance(Kaia, ruFac) and not isAlarm and not hasMuchin do
begin
InGameOn;

CenterNowOnUnits(ruFac);

SetSide(Kaia, 3);
ComEnterUnit(Kaia, ruFac);

wait(0$2);

Say(Kaia, 'DK-Plastic-8');
Say(ruMechanics[1], 'DRuMch-Plastic-9');
Say(Kaia, 'DK-Plastic-10');
Say(ruMechanics[1], 'DRuMch-Plastic-a-11');
Say(Kaia, 'DK-Plastic-a-12');
Say(ruMechanics[1], 'DRuMch-Plastic-a-13');

SetSide(Kaia, 2);
ComExitBuilding(Kaia);

InGameOff;
End;

// Exp #3 
Every 0$1 trigger explosionsTakenByRussians and GetSide(Kaia) = 2 and InEntrance(Kaia, ruWorkshop) and not isAlarm and not hasMuchin do
begin
InGameOn;

CenterNowOnUnits(ruWorkshop);

SetSide(Kaia, 3);
ComEnterUnit(Kaia, ruWorkshop);

wait(0$2);

Say(Kaia, 'DK-Plastic-8');
Say(ruMechanics2[1], 'DRuMch-Plastic-9');
Say(Kaia, 'DK-Plastic-10');
Say(ruMechanics2[1], 'DRuMch-Plastic-11');
Say(Kaia, 'DK-Plastic-12');
Say(Kaia, 'DK-Plastic-13');
Say(ruMechanics2[1], 'DRuMch-Plastic-14');

PlaceUnitXYD(Stiopa, 167, 34, 3, false);
ComEnterUnit(Stiopa, ruWorkshop);

repeat
 wait(0$1);

 if not HasTask(Stiopa) then
    ComEnterUnit(Stiopa, ruWorkshop);
until IsInUnit(Stiopa);

Say(Stiopa, 'DSpn-Plastic-15');
Say(Laura, 'DLr-Plastic-16');
Say(Kaia, 'DK-Plastic-17');

wait(0$0.3);

SetSide(Kaia, 2);
ComExitBuilding(Kaia);

InGameOff;

explosionsTakenByRussians := false;

PlaceSeeing(170, 28, 2, -6);
RemoveSeeing(170, 28, 2);

knowWhereExplosivesAre := true;
End;
       
// Exp final
Every 0$1 trigger knowWhereExplosivesAre and GetSide(Kaia) = 2 and InEntrance(Kaia, ruExpDep) and not isAlarm and not hasMuchin do
begin
InGameOn;

SetSide(Kaia, 3);
ComEnterUnit(Kaia, ruExpDep);

wait(0$1);

Say(Kaia, 'DK-Plastic-18');

Query('ExplosivesInfoUsage');

SetSide(Kaia, 2);
ComExitBuilding(Kaia);

InGameOff;

hasExplosionCollected := true;
ChangeMissionObjectives('M1-explosive-out');
End;

// plant mine
Every 0$1 trigger hasExplosionCollected and not isAlarm and not hasMuchin marked gameStartEvent do
var i, tmp;
begin

for i in importantBuildingsList do
    MarkBuilding(i, true);

repeat
 wait(0$1);

 for i in importantBuildingsList do
     begin
     if UnitFilter(Heike union heikeSquad, [[f_side, 2], [f_type, unit_human], [f_dist, i, 6]]) then
        begin
        CenterNowOnUnits(i);
        PlaceExplosives(i);
        MarkBuilding(i, false);
        importantBuildingsList := importantBuildingsList diff i;
        continue;
        end;
     end;

until not importantBuildingsList;
End;

// run to forest
Every 0$1 trigger UnitFilter(heikeSquad, [[f_side, 2], [f_inarea, baseOutsideBorderArea]]) and IsOk(Heike) and not hasMuchin marked gameStartEvent do
begin
Say(Heike, 'DH-End-1');

if not activeExplosives then
   Explode;
End;

Function SayHEmpty();
begin
case rand(1, 3) of
     1: Say(Heike, 'DH-Empty-1');
     2: Say(Heike, 'DH-Empty-2');
     3: Say(Heike, 'DH-Empty-3');
     end;
End;

Function SayHVisited();
begin
case rand(1, 3) of
     1: Say(Heike, 'DH-Visited-1');
     2: Say(Heike, 'DH-Visited-2');
     3: Say(Heike, 'DH-Visited-3');
     end;
End;

Every 0$2 trigger not isAlarm and entranceAllowedList and GetSide(Heike) = 2 and IsOk(Heike) and IsIdle(Heike) and not hasMuchin marked entranceEvent do
var i;
begin
enable;

for i in entranceAllowedList do
    if InEntrance(Heike, i) then
       begin
       disable(entranceEvent);

       HeikeEnterBuilding(i);

       wait(0$3);

       enable(entranceEvent);
       break;
       end;
End;

Function HeikeEnterBuilding(building);
var tmp;
begin
if not building then
   exit;

if building in entranceVisitedList then
   begin
   SayHVisited();
   exit;
   end;

case Query('EnterBuilding') of
     1: ;
     2: exit;
     end;

entranceVisitedList := Join(entranceVisitedList, building);

InGameOn;

SetSide(Heike, 5);
SetSide(building, 5);

ComEnterUnit(Heike, building);

wait(0$3);

tmp := [laundry, dougBar, usLab, drugsLab, ruFac, ruBarKam, ruOutpost1, ruOutpostBar, ruKaiaBar, ruWeaponsBar];

if not building in tmp then
   SayHEmpty()
else
   case building of
        laundry: begin
                 if laundryAllowed and not heikeAsRussian and not giviAsRussian then
                    begin
                    case Query('HeikeInLaundry') of
                         1: SpawnHeikeAsRussian;
                         2: entranceVisitedList := entranceVisitedList diff building;
                         end;
                    end
                 else
                    begin
                    entranceVisitedList := entranceVisitedList diff building;
                    Say(Heike, 'DH-Locked');
                    end;
                 end;
        dougBar: begin
                 if contactWithAmerican and americanContact then
                    begin
                    Say(Heike, 'DH-Escort-a-1');
                    Say(Doug, 'DCa-Escort-a-2');
                    Say(Doug, 'DCa-Escort-a-3');
                    Say(Heike, 'DH-Escort-a-4');
                    Say(Heike, 'DH-Escort-a-5');
                    end
                 else if contactWithAmerican then
                    begin
                    Say(Heike, 'DH-Escort-b-1');
                    Say(Doug, 'DCa-Escort-b-2');
                    Say(Doug, 'DCa-Escort-b-3');
                    end
                 else
                    begin
                    Say(Doug, 'DCa-Deal-a-1');
                    Say(Doug, 'DCa-Deal-a-2');
                    Say(Heike, 'DH-Deal-a-3');
                    Say(Doug, 'DCa-Deal-a-4');
                    Say(Heike, 'DH-Deal-a-5');
                    Say(Doug, 'DCa-Deal-a-6');
                    Say(Doug, 'DCa-Deal-a-7');
                    Say(Doug, 'DCa-Deal-a-8');
                    Say(Doug, 'DCa-Deal-a-9');
                    Say(Doug, 'DCa-Deal-a-10');
                    Say(Doug, 'DCa-Deal-a-11');

                    wait(0$0.3);

                    Say(Doug, 'DCa-Deal-a-12');
                    Say(Heike, 'DH-Deal-a-13');
                    Say(Heike, 'DH-Deal-a-14');

                    contactWithAmerican := true;

                    ChangeMissionObjectives_Silent('M1-american-out');
                    end;

                 SetSide(Doug, 2);
                 heikeSquad := Join(heikeSquad, Doug);
                 ComExitBuilding(Doug);
                 end;
        usLab: begin
               if hasSniperRifle then
                  begin
                  if IsOK(Kaia) and Kaia in heikeSquad and GetSide(Kaia) = 2 then
                     begin
                     if GetDistUnits(Heike, Kaia) > 10 then
                        begin
                        Query('KaiaDistance');
                        entranceVisitedList := entranceVisitedList diff usLab;
                        end
                     else
                        begin
                        SetSide(Kaia, 5);
                        ComEnterUnit(Kaia, usLab);

                        repeat
                         wait(0$1);
                        until IsInUnit(Kaia);

                        Say(Kaia, 'DK-Sniper-1');
                     
                        if GetClass(Kaia) = class_revolver and Mike in heikeSquad and IsOk(Mike) then
                           begin
                           Say(Kaia, 'DK-Sniper-a-2');
                           SetClass(Mike, class_hunter);
                           end
                        else
                           begin
                           Say(Kaia, 'DK-Sniper-2');
                           SetClass(Kaia, class_hunter);

                           if IsOK(Markov) and Markov in heikeSquad then
                              Say(Markov, 'DMar-Sniper-3');
                           end;

                        ComExitBuilding(Kaia);
                        SetSide(Kaia, 2);
                        end;
                     end
                  else
                     begin                       
                     entranceVisitedList := entranceVisitedList diff usLab;
                     Say(Heike, 'DH-Locked');
                     end;
                  end;
               end;
        drugsLab: begin
                  if hasStimDrugs then
                     begin
                     wait(0$1);

                     if not hasStimDrugsCollected then
                        begin
                        Say(Heike, 'DH-Lab-1');
                        SetTech(tech_stimdrugs, 2, state_researched);

                        hasStimDrugsCollected := true;

                        ChangeMissionObjectives_Silent('M1-drugs-out');
                        end;

                     if not hasExplosionCollected then
                        entranceVisitedList := entranceVisitedList diff drugsLab
                     else
                        begin
                        wait(0$3);

                        Say(Heike, 'DH-Lab-2');

                        ChangeMissionObjectives_Silent('M1-drugsLab-out');

                        PlaceExplosives(drugsLab);
                        end;
                     end
                  else
                     Say(Heike, 'DH-Locked');
               end;
        ruFac: begin
               if IsOk(Markov) and not Markov in heikeSquad then
                  begin
                  Say(Heike, 'DH-Krastyo-1');
                  Say(Markov, 'DMar-Krastyo-2');
                  Say(Markov, 'DMar-Krastyo-3');

                  SetSide(Markov, 2);
                  heikeSquad := Join(heikeSquad, Markov);
                  ComExitBuilding(Markov);
                  end
               else
                  SayHEmpty();
               end;
        ruBarKam: begin
                  if IsOk(Kamil) and not Kamil in heikeSquad then
                     begin
                     Say(Heike, 'DH-Kamil-1');
                     Say(Kamil, 'DKam-Kamil-2');

                     if IsOk(Sophia) then
                        if Sophia in heikeSquad then
                           Say(Kamil, 'DKam-Kamil-a-3')
                        else
                           Say(Kamil, 'DKam-Kamil-3');
                   
                     SetSide(Kamil, 2);
                     heikeSquad := Join(heikeSquad, Kamil);
                     ComExitBuilding(Kamil);
                     end
                  else
                     SayHEmpty();
                  end;
        ruOutpost1: begin
                    if IsOk(Kurt) and not Kurt in heikeSquad then
                       begin
                       if hasMethanol then
                          begin
                          Say(Heike, 'DH-Kurt-1');
                          Say(Kurt, 'DKs-Kurt-2');

                          if GetDistUnits(Givi, ruOutpost1) < 10 and Givi in heikeSquad then
                             begin
                             ComMoveXY(Givi, 100, 37);
                             AddComTurnUnit(Givi, ruOutpost1);

                             repeat
                              wait(0$1);
                             until GetDistUnits(Givi, ruOutpost1) < 7;

                             Say(Givi, 'DG-Kurt-3');
                             ComStop(Givi);
                             end;
                          {else if GetDistUnits(Olaf, ruOutpost1) < 10 and Olaf in heikeSquad then
                             begin
                             ComMoveXY(Olaf, 100, 37);
                             AddComTurnUnit(Olaf, ruOutpost1);

                             repeat
                              wait(0$1);
                             until GetDistUnits(Olaf, ruOutpost1) < 7;

                             Say(Olaf, 'DO-Kurt-a-3');
                             ComStop(Olaf);
                             end;}
                          end
                       else
                          begin
                          Say(Heike, 'DH-Kurt-1');
                          Say(Kurt, 'DKs-Kurt-2');

                          SpawnAdditionalRuGuards;
                          end;

                       SetSide(Kurt, 2);
                       heikeSquad := Join(heikeSquad, Kurt);
                       ComExitBuilding(Kurt);
                       end
                    else
                       SayHEmpty();
                    end;
        ruOutpostBar: begin
                      if not hasGuardPatrolPlan then
                         begin
                         Say(Heike, 'DH-PatrolPlan');
                         hasGuardPatrolPlan := true;
                         ChangeSideFog(6, 2);
                         end
                      else
                         SayHEmpty();
                      end;
        ruKaiaBar: begin
                   if IsOk(Kaia) and not Kaia in heikeSquad then
                      begin
                      Say(Heike, 'DH-Kaia-1');
                      Say(Kaia, 'DK-Kaia-2');

                      if hasSniperRifle then
                         begin
                         if IsOk(Markov) then
                            Say(Kaia, 'DK-Kaia-3')
                         else
                            Say(Kaia, 'DK-Kaia-a-3');

                         Say(Heike, 'DH-Kaia-4');
                         end;

                      SetSide(Kaia, 2);
                      heikeSquad := Join(heikeSquad, Kaia);
                      ComExitBuilding(Kaia);
                      end;
                   end;
        ruWeaponsBar: begin
                      if hasWeapons then
                         begin
                         entranceVisitedList := entranceVisitedList diff ruWeaponsBar; // exception
                         tmp := UnitFilter(heikeSquad, [f_dist, Heike, 8]);

                         if not heikeSquad or not tmp then
                            Say(Heike, 'DH-Weapons-Alone')
                         else
                            begin
                            entranceVisitedList := Join(entranceVisitedList, ruWeaponsBar);

                            Say(Heike, 'DH-Weapons-1');
                            Say(Heike, 'DH-Weapons-2');

                            if hasRevolver and Kaia in tmp then
                               begin
                               SetSide(Kaia, 5);
                               ComEnterUnit(Kaia, ruWeaponsBar);

                               repeat
                                wait(0$1);
                               until IsInUnit(Kaia);

                               Say(Heike, 'DH-Kaia-Revolver-2');

                               SetClassKaiaRevolver;

                               hasRevolver := false;

                               SetSide(Kaia, 2);
                               ComExitBuilding(Kaia);
                               end;

                            if Givi in tmp then
                               begin
                               SetSide(Givi, 5);
                               ComEnterUnit(Givi, ruWeaponsBar);

                               repeat
                                wait(0$1);
                               until IsInUnit(Givi);

                               Say(Givi, 'DG-Weapons-3');
                               Say(Heike, 'DH-Weapons-4');
                               Say(Givi, 'DG-Weapons-5');

                               SetClass(Givi, class_desert_warior);

                               ComExitBuilding(Givi);
                               SetSide(Givi, 2);

                               if hasRevolver then
                                  begin
                                  Say(Heike, 'DH-Kaia-Revolver-1');
                                  heikeHasRevolver := true;
                                  end;
                               end
                            else if Kamil in tmp then
                               begin
                               SetSide(Kamil, 5);
                               ComEnterUnit(Kamil, ruWeaponsBar);

                               repeat
                                wait(0$1);
                               until IsInUnit(Kamil);

                               Say(Kamil, 'DKam-Weapons-a-3');
                               Say(Heike, 'DH-Weapons-a-4');

                               SetClass(Kamil, class_desert_warior);

                               ComExitBuilding(Kamil);
                               SetSide(Kamil, 2);

                               if hasRevolver then
                                  begin
                                  Say(Heike, 'DH-Kaia-Revolver-1');
                                  heikeHasRevolver := true;
                                  end;
                               end
                            else
                               begin
                               Say(Heike, 'DH-Weapons-Alone-2');

                               if hasRevolver then
                                  begin
                                  Say(Heike, 'DH-Kaia-Revolver-1a');
                                  heikeHasRevolver := true;
                                  end;
                               end;
                            end;
                         end
                      else
                         Say(Heike, 'DH-Locked');
                      end;

        end;

ComExitBuilding(Heike);

SetSide(Heike, 2);
SetSide(building, 3);

InGameOff;
End;


// all captured
Every 0$2 trigger not hasMuchin and not isAlarm and FilterAllUnits([[f_side, 5], [f_type, unit_human]]) = 0 and ((FilterAllUnits([[f_side, 4], [f_type, unit_human]]) = 0 and contactWithAmerican) or (not contactWithAmerican)) marked gameStartEvent do
begin
DialogueOn;
Say(Heike, 'DH-Alarm-2');
DialogueOff;

ChangeMissionObjectives('M1-people-out');
End;





