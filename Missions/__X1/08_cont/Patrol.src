Every 0$2 trigger not isAlarm and ruPatrol do
var i, j, points, tag, tmp;
begin
enable;

points := [ [g11, g12, g13, g14],
            [g21, g22, g23, g24, g25, g26, g27, g28, g29],
            [g31, g32, g33, g34],
            [g41, g42, g43, g44, g45, g44, g43, g42, g41] ];

for i in ruPatrol do
    begin
    tmp := FilterAllUnits([[f_side, 2], [f_type, unit_human], [f_dist, i, 7]]);

    if See(2, i) and tmp then
       begin
       if (hasMuchin and GetDistUnits(i, ruDisturb) < 16) or blockPatrolThread then
          continue;

       ComTurnUnit(i, NearestUnitToUnit(tmp, i));
       CaughtByPatrol(i, tmp);
       continue;
       end;  

    if HasTask(i) then
       continue;

    tag := GetTag(i);

    if not tag then
       begin
       ComHold(i);
       continue;
       end;

    for j := 1 to points[tag] do
        begin
        AddComMoveToArea(i, points[tag][j]);
        AddComWait(i, 0$2);
        end;
    end;
End;

Function CaughtByPatrol(guard, units);
var i, alone;
begin
if UnitFilter(units, [f_nation, nation_russian]) or UnitFilter(units, [f_inarea, prisonArea]) then
   exit;

if UnitFilter(units, [[f_or, [f_class, class_soldier], [f_class, class_desert_warior], [f_class, class_revolver], [f_class, class_hunter]]]) then
   begin
   blockPatrolThread := true;

   DialogueOn;

   case GetSex(guard) of
        sex_male: Say(guard, 'DRum-Fail-3');
        sex_female: Say(guard, 'DRuf-Fail-3');
        end;

   DialogueOff;

   wait(0$5);

   if IsOk(guard) then
      isAlarm := true
   else
      blockPatrolThread := false;

   exit;
   end;

DialogueOn;
blockPatrolThread := true;

CenterNowOnUnits(guard);

if not Heike in units then
   begin

   case GetSex(guard) of
        sex_male: Say(guard, 'DRum-Guard-1');
        sex_female: Say(guard, 'DRuf-Guard-1');
        end;

   case Query('SurrenderInfoPeople') of
        1: begin
           Query('CaughtSquadInfo');

           for i in units do
               begin
               if Carry(i) then
                  SetCargo(i, mat_cans, 0);

               SetSide(i, 5);
               ComMoveXY(i, 113, 17);
               end;

           ComMoveXY(guard, 113, 17);

           DialogueOff;
           exit;
           end;
        2: begin
           DialogueOff;

           wait(0$2);

           SetAttitude(6, 2, att_enemy, true);
           ComAttackUnit(guard, units[1]);

           case GetSex(guard) of
                sex_male: Say(guard, 'DRum-Fail-3');
                sex_female: Say(guard, 'DRum-Fail-3');
                end;

           wait(0$5);

           if IsOk(guard) then
              isAlarm := true
           else
              begin
              SetAttitude(6, 2, att_neutral, true);
              SetAttitude(3, 2, att_neutral, true);
              end;
           end; 
        end;
   end;

if Carry(Heike) then
   begin
   case GetSex(guard) of
        sex_male: Say(guard, 'DRum-FoodFail-1');
        sex_female: Say(guard, 'DRuf-FoodFail-2');
        end;

   SetCargo(Heike, mat_cans, 0);
   end
else
   begin
   case GetSex(guard) of
        sex_male: Say(guard, 'DRum-Seen-1');
        sex_female: Say(guard, 'DRuf-Seen-1');
        end;
   end;

alone := (units = 1);

case Query('SurrenderInfo') of
     1: begin  // yes
        CenterNowOnUnits(ruOutpost2);

        RemoveUnit(Heike);
        PlaceHumanInUnit(Heike, ruOutpost2);

        if not alone then
           for i in units diff Heike do
               begin
               RemoveUnit(i);
               PlaceUnitXYR(i, 114, 17, 10, false);
               end;

        wait(0$0.3);

        if alone then
           Query('CaughtInfoAlone')
        else
           Query('CaughtInfo');

        wait(0$1);

        StartLockerMinigame;

        Say(Heike, 'DH-Reset');

        DialogueOff;
        InGameOff;

        ComExitBuilding(Heike);
        ComFree(guard);
        end;
     2: begin  // no
        Say(Heike, 'DH-Guard-2');
        DialogueOff;

        wait(0$2);

        SetAttitude(6, 2, att_enemy, true);
        ComAttackUnit(guard, Heike);

        case GetSex(guard) of
             sex_male: Say(guard, 'DRum-Fail-3');
             sex_female: Say(guard, 'DRum-Fail-3');
             end;

        wait(0$5);

        if IsOk(guard) then
           isAlarm := true
        else
           begin
           SetAttitude(6, 2, att_neutral, true);
           SetAttitude(3, 2, att_neutral, true);
           end;
        end;
     end;

blockPatrolThread := false;
End;

// rejoin
Every 0$3 trigger UnitFilter(heikeSquad, [[f_side, 5], [f_not, [f_see, 6]], [f_distxy, 113, 16, 12], [f_dist, Heike, 6]]) and not hasMuchin marked gameStartEvent do
var i;
begin
enable;

DialogueOn;

Say(Heike, 'DH-Join-' & rand(1, 3));

for i in UnitFilter(heikeSquad, [[f_side, 5], [f_dist, Heike, 10]]) do
    SetSide(i, 2);

DialogueOff;
End;