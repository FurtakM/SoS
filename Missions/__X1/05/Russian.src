Export crossRoadGuard, oilBaseGuard, ruNorthGroup, ruSouthGroup, ruConvoySquad;
Export Function PrepareRussian;
var i, un;
begin
uc_side := 3;
uc_nation := 3;

crossRoadGuard := [];
oilBaseGuard := [];
ruConvoySquad := [];

for i := 1 to 2 do
    begin
    PrepareHuman(false, 1, [3, 4, 5, 6][Difficulty]);
    un := CreateHuman;
    crossRoadGuard := Replace(crossRoadGuard, crossRoadGuard + 1, un);
    PlaceUnitXYR(un, 100, 63, 3, false);

    ComEnterUnit(un, [HexInfo(97, 64), HexInfo(98,58)][i]);
    end;

SetResourceType(GetBase(HexInfo(51, 77)), mat_cans, 120);

// east base group
SetResourceType(GetBase(ruEastBase), mat_oil, 300);

for i := 1 to 2 do
    begin
    PrepareHuman(false, 1, [3, 4, 5, 6][Difficulty]);
    un := CreateHuman;
    oilBaseGuard := Replace(oilBaseGuard, oilBaseGuard + 1, un);
    PlaceHumanInUnit(un, [HexInfo(198, 106), HexInfo(205, 114)][i]);
    end;

for i := 1 to 2 do
    begin
    PrepareHuman(false, 2, 3);
    un := CreateHuman;
    oilBaseGuard := Replace(oilBaseGuard, oilBaseGuard + 1, un);
    PlaceUnitXYR(un, 204, 108, 2, false);
    end;

// north group
for i := 1 to [4, 5, 6, 7][Difficulty] do
    begin
    PrepareHuman(false, [1, 1, 2, 4, 1][rand(1, 5)], [3, 4, 5, 5][Difficulty]);
    un := CreateHuman;

    if PlaceUnitInArea(un, northGroupArea, false) then
       begin
       ruNorthGroup := Replace(ruNorthGroup, ruNorthGroup + 1, un);

       if Prob(50) then
          ForceSleep(un, true);
       end;
    end;

for i := 1 to 3 do
    begin
    PrepareHuman(false, 1, [3, 4, 4, 5][Difficulty]);
    un := CreateHuman;

    if PlaceUnitInArea(un, northGroup2Area, false) then
       ruNorthGroup := Replace(ruNorthGroup, ruNorthGroup + 1, un);
    end;

// south
for i := 1 to [5, 6, 7, 8][Difficulty] do
    begin
    PrepareHuman(false, [1, 1, 2, 4, 1][rand(1, 5)], [3, 4, 5, 5][Difficulty]);
    un := CreateHuman;

    if PlaceUnitInArea(un, southGroupArea, false) then
       begin
       ruSouthGroup := Replace(ruSouthGroup, ruSouthGroup + 1, un);

       if Prob(50) then
          ForceSleep(un, true);
       end;
    end;
End;

Export apeSoldGroup, apeEngGroup;
Export Function PrepareWestBase;
var i, un;
begin
uc_side := 3;
uc_nation := 3;

for i := 1 to 6 do
    begin
    PrepareHuman(false, [1, 4][rand(1, 2)], 0);
    un := CreateHuman;
    PlaceUnitXYR(un, 54, 88, 12, false);
    SetLives(un, 1);
    end;

uc_side := 3;
uc_nation := 0;

apeSoldGroup := [];
apeEngGroup := [];

for i := 1 to [4, 5, 6, 7][Difficulty] do
    begin
    PrepareHuman(false, class_apeman_soldier, [3, 4, 5, 6][Difficulty]);
    un := CreateHuman;
    apeSoldGroup := Replace(apeSoldGroup, apeSoldGroup + 1, un);

    SetDir(un, rand(0, 5));

    PlaceUnitXYR(un, 56, 82, 6, false);
    end;

for i := 1 to 2 do
    begin
    PrepareHuman(false, class_apeman_engineer, 4);
    un := CreateHuman;
    apeEngGroup := Replace(apeEngGroup, apeEngGroup + 1, un);

    PlaceHumanInUnit(un, HexInfo(51, 77));
    end;
End;

Every 0$1 trigger UnitFilter(apeSoldGroup, [[f_not, [f_lives, 600]], [f_not, [f_inside]]]) and IsOk(HexInfo(66, 89)) do
var i;
begin
enable;

for i in UnitFilter(apeSoldGroup, [[f_not, [f_lives, 600]], [f_not, [f_inside]]]) do
    ComEnterUnit(i, HexInfo(66, 89));
End;
                  
Every 0$1 trigger FilterAllUnits([[f_side, 2], [f_distxy, 54, 77, 8]]) do
begin
ComExitBuilding(apeEngGroup);
AddComAttackUnit(apeEngGroup, FilterAllUnits([[f_side, 2], [f_distxy, 54, 77, 8]])[1]);
End;

Export Function PrepareConvoy;
var i, spawnPoint, dir, spawnArea, outerSpawnArea, movePoints, un, tag, enemy;
begin
spawnPoint := rand(1, 3);
spawnArea := [eastNorthSpawnArea, eastSouthSpawnArea, eastSpawnArea][spawnPoint];
movePoints := [
   [ [159,25], [137,37], [123,55], [115,71], [106,88], [97,114], [75,146] ],
   [ [206,135], [184,111], [154,97], [122,80], [109,78], [97,113], [75,147] ],
   [ [185,72], [171,83], [161,99], [125,82], [105,90], [96,116], [75,147] ]
][spawnPoint];
dir := [4, 5, 3][spawnPoint];
outerSpawnArea := [eastNorthOuterSpawnArea, eastSouthOuterSpawnArea, eastOuterSpawnArea][spawnPoint];

for i := 1 to 2 do
    EraseResourceArea(i, outerSpawnArea);

if FilterUnitsInArea(outerSpawnArea, [f_or, [f_type, unit_human], [f_type, unit_vehicle], [f_type, unit_building]]) then
   repeat
    wait(0$1);

    if FilterUnitsInArea(outerSpawnArea, [f_or, [f_type, unit_vehicle], [f_type, unit_building]]) then
       for i in FilterUnitsInArea(outerSpawnArea, [f_or, [f_type, unit_vehicle], [f_type, unit_building]]) do
           RemoveUnit(i);

    if FilterUnitsInArea(outerSpawnArea, [f_type, unit_human]) then
       for i in FilterUnitsInArea(outerSpawnArea, [f_type, unit_human]) do
           ComMoveXY(i, 113, 53);
   until not FilterUnitsInArea(outerSpawnArea, [f_or, [f_type, unit_human], [f_type, unit_vehicle]]);

case convoyCounter of
     1..3: begin
           for i := 1 to [5, 6, 7, 8][Difficulty] - convoyCounter do
               begin
               uc_side := 3;
               uc_nation := 3;

               PrepareHuman(false, [1, 1, 1, 4][rand(1, 4)], [4, 5, 6, 7][Difficulty]);
               un := CreateHuman;
               SetDir(un, dir);

               if PlaceUnitInArea(un, spawnArea, false) then
                  begin
                  ruConvoySquad := Replace(ruConvoySquad, ruConvoySquad + 1, un);

                  SetTag(un, 1);

                  ComMoveXY(un, movePoints[1][1], movePoints[1][2]);

                  wait(0$2);
                  end;
               end;

           for i := 1 to [3, 4, 4, 4][Difficulty] do
               begin
               uc_side := 3;
               uc_nation := 3;

               PrepareTank(3, 3, [ru_medium_wheeled, ru_medium_tracked, ru_heavy_wheeled, ru_heavy_tracked, ru_heavy_tracked, ru_heavy_tracked][rand(Difficulty, Difficulty + 2)], engine_combustion, control_manual, [ru_heavy_machine_gun, ru_gun, ru_gatling_gun, ru_gun, ru_heavy_gun, ru_heavy_gun][rand(1, Difficulty + 2)], 90);
               un := CreateVehicle;
               SetDir(un, dir);

               if PlaceUnitInArea(un, spawnArea, false) then
                  begin
                  ruConvoySquad := Replace(ruConvoySquad, ruConvoySquad + 1, un);

                  PrepareMechanic(false, [3, 4, 5, 6][Difficulty]);
                  un := CreateHuman;
                  PlaceHumanInUnit(un, ruConvoySquad[ruConvoySquad]);
                  ruConvoySquad := Replace(ruConvoySquad, ruConvoySquad + 1, un);

                  SetTag(un, 1);

                  ComMoveXY(un, movePoints[1][1], movePoints[1][2]);

                  wait(0$3);
                  end;
               end;
           end;
     4..7: begin
           for i := 1 to [2, 3, 4, 4][Difficulty] do
               begin
               uc_side := 3;
               uc_nation := 3;

               PrepareHuman(false, 1, [4, 5, 6, 7][Difficulty]);
               un := CreateHuman;
               SetDir(un, dir);

               if PlaceUnitInArea(un, spawnArea, false) then
                  begin
                  ruConvoySquad := Replace(ruConvoySquad, ruConvoySquad + 1, un);

                  SetTag(un, 1);

                  ComMoveXY(un, movePoints[1][1], movePoints[1][2]);

                  wait(0$2);
                  end;

               end;

           for i := 1 to [2, 3, 3, 4][Difficulty] do
               begin
               uc_side := 3;
               uc_nation := 3;

               PrepareTank(3, 3, [ru_medium_wheeled, ru_medium_tracked][rand(1,2)], engine_combustion, control_manual, [ru_heavy_machine_gun, ru_gun, ru_gatling_gun, ru_gun, ru_gun][rand(1, Difficulty + 1)], 90);
               un := CreateVehicle;
               SetDir(un, dir);

               if PlaceUnitInArea(un, spawnArea, false) then
                  begin
                  ruConvoySquad := Replace(ruConvoySquad, ruConvoySquad + 1, un);

                  uc_side := 3;
                  uc_nation := 3;

                  PrepareMechanic(false, [3, 4, 5, 6][Difficulty]);
                  un := CreateHuman;
                  PlaceHumanInUnit(un, ruConvoySquad[ruConvoySquad]);
                  ruConvoySquad := Replace(ruConvoySquad, ruConvoySquad + 1, un);

                  SetTag(un, 1);

                  ComMoveXY(un, movePoints[1][1], movePoints[1][2]);

                  wait(0$2);
                  end;
               end;
           end;
     end;


repeat
 wait(0$1);

 for un in ruConvoySquad do
     begin
     if IsInArea(un, westSouthOutArea) then
        begin
        if GetType(un) = unit_vehicle then
           begin
           ruConvoySquad := ruConvoySquad diff IsDrivenBy(un);
           RemoveUnit(un);
           end;

        convoySavedCounter := convoySavedCounter + 1;
        ruConvoySquad := ruConvoySquad diff un;
        RemoveUnit(un);
        break;
        end;

     if not IsPlaced(un) and not IsInUnit(un) then
        ruConvoySquad := ruConvoySquad diff un;

     if IsOk(un) and not HasTask(un) then
        begin
        tag := GetTag(un);

        if GetDistUnitXY(un, movePoints[tag + 1][1], movePoints[tag + 1][2]) < 6 then
           begin
           SetTag(un, tag + 1);

           if GetType(un) = unit_vehicle or GetClass(un) = 3 then
              begin
              enemy := FilterAllUnits([[f_side, 2], [f_dist, un, 8]]);

              if enemy then
                 ComAttackUnit(un, NearestUnitToUnit(enemy, un))
              else
                 begin
                 AddComWait(un, 0$4);
                 AddComAgressiveMove(un, movePoints[tag + 1][1], movePoints[tag + 1][2]);
                 end;
              end;
           end
        else
           begin             
           if GetClass(un) = 4 then
              begin
              if UnitFilter(ruConvoySquad, [[f_type, unit_human], [f_not, [f_lives, 1000]]]) then
                 ComHeal(un, UnitFilter(ruConvoySquad, [[f_type, unit_human], [f_not, [f_lives, 1000]]])[1])
              else
                 ComMoveUnit(un, NearestUnitToUnit(UnitFilter(ruConvoySquad, [f_not, [f_class, 4]]), un))
              end
           else
              ComAgressiveMove(un, movePoints[tag + 1][1], movePoints[tag + 1][2]);
           end;
        end;
     end;
until not UnitFilter(ruConvoySquad, [[f_placed], [f_type, unit_human]]);
End;

Every 0$50 trigger convoyCounter < rand(3, 5) and not ruConvoySquad and Difficulty > 1 do
var i, tmp, un;
begin
for i := 1 to [2, 3, 4, 5][Difficulty] do
    begin
    uc_side := 3;
    uc_nation := 3;

    PrepareTank(3, 3, [ru_medium_wheeled, ru_medium_tracked, ru_heavy_wheeled, ru_heavy_tracked, ru_heavy_tracked, ru_heavy_tracked][rand(Difficulty, Difficulty + 2)], engine_combustion, control_manual, [ru_heavy_machine_gun, ru_gun, ru_gatling_gun, ru_gun, ru_heavy_gun, ru_heavy_gun][rand(1, Difficulty + 2)], 90);
    un := CreateVehicle;
    SetDir(un, 0);

    if PlaceUnitInArea(un, westSouthSpawnArea, false) then
       begin
       tmp := Replace(tmp, tmp + 1, un);

       uc_side := 3;
       uc_nation := 3;

       PrepareMechanic(false, [3, 4, 5, 6][Difficulty]);
       un := CreateHuman;
       PlaceHumanInUnit(un, tmp[tmp]);        

       ComMoveXY(un, 80, 139);

       wait(0$3);
       end;
    end;

for i in tmp do
    begin
    ComAgressiveMove(i, 101, 102);
    AddComAgressiveMove(i, 110, 78);
    AddComAgressiveMove(i, 75, 101);
    AddComAgressiveMove(i, 57, 83);
    end;
End;

Every 0$1 trigger UnitFilter(ruNorthGroup, [f_not, [f_lives, 1000]]) or UnitFilter(ruSouthGroup, [f_not, [f_lives, 1000]]) do
var i;
begin
enable;

for i in UnitFilter(ruNorthGroup, [f_not, [f_lives, 1000]]) union UnitFilter(ruSouthGroup, [f_not, [f_lives, 1000]]) do
    if IsSleeping(i) then
       ForceSleep(i, false);
End;

Every 0$1 trigger UnitFilter(oilBaseGuard, [f_and, [f_not, [f_inside]], [f_not, [f_inarea, eastBaseArea]]]) do
var i, tmp;
begin
enable;
tmp := UnitFilter(oilBaseGuard, [f_and, [f_not, [f_inside]], [f_not, [f_inarea, eastBaseArea]]]);

for i in tmp do
    ComMoveXY(i, 206, 110);
End; 