
// example: PrepareTank(1, 1, us_medium_wheeled, engine_combustion, control_manual, us_machine_gun, 80);
Export Function PrepareTank(side, nation, chassis, engine, control, weapon, fuel);
begin
uc_side := side;
uc_nation := nation;

vc_chassis := chassis;
vc_engine := engine;
vc_control := control;
vc_weapon := weapon;
vc_fuel_battery := fuel;

result := CreateVehicle;
End;


Export Function SayX(units, ident);
var i;
begin
result := false;

if not units then
   exit;

for i in units do
    if IsOk(i) then
       begin
       Say(i, ident);
       result := i;
       break;
       end;
End;

Export Function SpawnApeman(area, amount);
var i;
begin
InitUc;
InitHc;

uc_side := 0;
uc_nation := 0;

for i = 1 to amount do
    begin
    hc_attr := [rand(9, 12), rand(9, 12)];
    hc_agressivity := rand(-1, 1);
    PrepareHuman(false, class_apeman, 1);
    PlaceUnitArea(CreateHuman, area, false);
    end;

InitHc;
End;

Export Function CreateNature(forest);
var i;
begin
SpawnApeman(forest, [3, 3, 2][Difficulty]);

for i := 1 to 2 do
    begin
    hc_class := 21;
    hc_gallery := '';
    PlaceUnitArea(CreateHuman, forest, false);
    end;

for i := 1 to 2 do
    begin
    hc_class := 18;
    hc_gallery := '';
    PlaceUnitArea(CreateHuman, forest, false);
    end;

for i := 1 to 2 do
    begin
    hc_class := 13;
    hc_gallery := '';
    PlaceUnitArea(CreateHuman, forest, false);
    end;

End;

Export Function SeeUnit(observer, unit);
var i, tmp;
begin
if not observer or not unit then
   exit;

if not See(GetSide(observer), unit) then
   exit;


result := GetDistUnits(observer, unit) < 12;
End;

Export Function PlaceUnitHex(un, hex, mode);
begin
if ValidHex(hex[1], hex[2]) and HexInfo(hex[1], hex[2]) = 0 then
   PlaceUnitXY(un, hex[1], hex[2], mode);
End;

Export Function NearestEmptyBuilding(unit, btype);
var side, tmp, i, places;
begin
if not unit then
   exit;

side := GetSide(unit);
tmp := FilterAllUnits([[f_side, side], [f_btype, btype]]);

if not tmp then
   exit;

tmp := SortByDistanceUnit(unit, tmp, true, true);

places := 1;

if btype in [b_depot, b_warehouse, b_armoury, b_barracks, b_workshop, b_factory, b_lab, b_lab_half, b_lab_full] then
   places := 6;

for i in tmp do
    begin
    if UnitsInside(i) - places <= 0 then
       continue
    else
       begin
       result := i;
       exit;
       end;
    end;
End;