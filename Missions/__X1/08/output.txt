// starting begin ResetFog ;
   0: CALL_OW 335
// Init ;
   4: CALL 30 0 0
// if debug then
   8: LD_EXP 1
  12: IFFALSE 21
// FogOff ( 2 ) ;
  14: LD_INT 2
  16: PPUSH
  17: CALL_OW 344
// PrepareRussian ;
  21: CALL 192 0 0
// Action ;
  25: CALL 200 0 0
// end ;
  29: END
// export debug ; function Init ; begin
  30: LD_INT 0
  32: PPUSH
// debug := true ;
  33: LD_ADDR_EXP 1
  37: PUSH
  38: LD_INT 1
  40: ST_TO_ADDR
// end ; end_of_file
  41: LD_VAR 0 1
  45: RET
// export function PrepareArabian ; var i ; begin
  46: LD_INT 0
  48: PPUSH
  49: PPUSH
// SetBName ( ar_dep , newkabul ) ;
  50: LD_INT 2
  52: PPUSH
  53: LD_STRING newkabul
  55: PPUSH
  56: CALL_OW 500
// for i in FilterAllUnits ( [ [ f_side , 2 ] , [ f_type , unit_building ] ] ) do
  60: LD_ADDR_VAR 0 2
  64: PUSH
  65: LD_INT 22
  67: PUSH
  68: LD_INT 2
  70: PUSH
  71: EMPTY
  72: LIST
  73: LIST
  74: PUSH
  75: LD_INT 21
  77: PUSH
  78: LD_INT 3
  80: PUSH
  81: EMPTY
  82: LIST
  83: LIST
  84: PUSH
  85: EMPTY
  86: LIST
  87: LIST
  88: PPUSH
  89: CALL_OW 69
  93: PUSH
  94: FOR_IN
  95: IFFALSE 185
// begin SetSide ( i , 5 ) ;
  97: LD_VAR 0 2
 101: PPUSH
 102: LD_INT 5
 104: PPUSH
 105: CALL_OW 235
// SetLives ( i , rand ( 120 , 320 ) ) ;
 109: LD_VAR 0 2
 113: PPUSH
 114: LD_INT 120
 116: PPUSH
 117: LD_INT 320
 119: PPUSH
 120: CALL_OW 12
 124: PPUSH
 125: CALL_OW 234
// if GetBType ( i ) = b_bunker then
 129: LD_VAR 0 2
 133: PPUSH
 134: CALL_OW 266
 138: PUSH
 139: LD_INT 32
 141: EQUAL
 142: IFFALSE 183
// PlaceWeaponTurret ( i , [ ar_double_machine_gun , ar_gun , ar_gatling_gun , ar_rocket_launcher ] [ rand ( 1 , 4 ) ] ) ;
 144: LD_VAR 0 2
 148: PPUSH
 149: LD_INT 24
 151: PUSH
 152: LD_INT 27
 154: PUSH
 155: LD_INT 25
 157: PUSH
 158: LD_INT 28
 160: PUSH
 161: EMPTY
 162: LIST
 163: LIST
 164: LIST
 165: LIST
 166: PUSH
 167: LD_INT 1
 169: PPUSH
 170: LD_INT 4
 172: PPUSH
 173: CALL_OW 12
 177: ARRAY
 178: PPUSH
 179: CALL_OW 431
// end ;
 183: GO 94
 185: POP
 186: POP
// end ; end_of_file
 187: LD_VAR 0 1
 191: RET
// export function PrepareRussian ; begin
 192: LD_INT 0
 194: PPUSH
// end ; end_of_file
 195: LD_VAR 0 1
 199: RET
// export function Action ; begin
 200: LD_INT 0
 202: PPUSH
// end ;
 203: LD_VAR 0 1
 207: RET
