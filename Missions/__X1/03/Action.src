Export Function Action;
var hasAll, i, tmp;
begin
hasAll := FilterAllUnits([[f_side, 2], [f_type, unit_human], [f_nation, nation_arabian]]) >= 7;
SaveVariable(hasAll, '03_HasAll');

Video(true);

CenterNowOnUnits(Heike);

wait(0$2);

Say(Farmer, 'DF-1-start');

ComTurnUnit(Heike, Farmer);

Say(Heike, 'DH-1-start');

ComMoveXY(Omar, 92, 21);
ComMoveXY(Aviradze, 94, 23);

ComMoveXY(omarSquad[1], 90, 23);
ComMoveXY(omarSquad[2], 93, 25);

AddComTurnUnit(omarSquad, Omar);
AddComTurnUnit([Omar, Aviradze], Heike);

AddComTurnUnit(Heike, Omar);

repeat
 wait(0$1);
until IsAt(Omar, 92, 21);

Say(Omar, 'DO-1-start');
Say(Heike, 'DH-2-start');

if hasAll then
   begin
   Say(Omar, 'DO-2-start');
   Say(Omar, 'DO-3-start');
   Say(Heike, 'DH-3-start');
   Say(Farmer, 'DF-2-start');

   ComTurnUnit(Omar, Farmer);

   Say(Omar, 'DO-4-start');
   Say(Farmer, 'DF-3-start');
   Say(Omar, 'DO-5-start');
   Say(Farmer, 'DF-4-start');

   ComTurnUnit(Omar, Heike);
   end
else
   begin
   Say(Omar, 'DO-2-start-a');
   Say(Omar, 'DO-3-start-a');
   Say(Heike, 'DH-3-start-a');

   Say(Farmer, 'DF-2-start-a');

   ComTurnUnit(Omar, Farmer);

   Say(Omar, 'DO-4-start-a');
   Say(Farmer, 'DF-3-start-a');

   ComTurnUnit(Omar, Heike);
   end;

wait(0$0.3);

Say(Omar, 'DO-1-mission');
Say(Omar, 'DO-2-mission');

if not hasAll then
   Say(Omar, 'DO-3-mission');

Say(Omar, 'DO-4-mission');
Say(Heike, 'DH-1-mission');
Say(Farmer, 'DF-1-mission');

Say(Omar, 'DO-5-mission');

// give heike some units
if not hasAll then
   begin
   tmp := FilterAllUnits([[f_side, 2], [f_type, unit_human], [f_nation, nation_arabian]]);

   for i := 7 downto tmp do
       begin
       if omarSquad < 3 then
          break;

       SetSide(omarSquad[3], 2);
       heikeSecondSquad := heikeSecondSquad union omarSquad[3];
       omarSquad := Delete(omarSquad, 3);
       end;
   end;

// omar go out
ComMoveXY(Omar ^ omarSquad, 103, 9);

if hasAll and IsOk(Kaia) then
   begin
   wait(0$3);

   ComTurnUnit(Kaia, Farmer);

   Say(Kaia, 'DK-1-side');

   ComTurnUnit(Farmer, Kaia);

   Say(Farmer, 'DF-1-side');
   end;

ComFree(FilterAllUnits([f_side, 2]));

// farmer go build some base
ComMoveXY(Farmer ^ farmerSquad, 108, 62);

gameStarted := true;

wait(0$3);

CenterOnUnits(Heike);

ComTurnUnit(Heike, Aviradze);
ComTurnUnit(FilterAllUnits([f_side, 2]) diff Heike, Heike);

Say(Heike, 'DH-1-explore');

if Givi then
   Say(Givi, 'DG-1-explore')
else if heikeSecondSquad then
   Say(UnitFilter(heikeSecondSquad, [f_sex, sex_male])[1], 'DArm-1-explore');

Say(Aviradze, 'DA-1-explore');

if Sophia then
   begin
   Say(Sophia, 'DS-2-explore');
   Say(Aviradze, 'DA-2-explore');

   ComTurnUnit(Sophia, Aviradze);
   ComTurnUnit(Aviradze, Sophia);

   Say(Sophia, 'DS-3-explore');
   Say(Aviradze, 'DA-3-explore');
   end;

if Mike then
   begin
   Say(Mike, 'DM-1-explore');
   Say(Heike, 'DH-2-explore');
   Say(Mike, 'DM-2-explore');

   if Kaia then
      Say(Kaia, 'DK-1-explore');
   end;

ComFree(FilterAllUnits([f_side, 2]));

Video(false);

ChangeMissionObjectives('BuildBase');
SaveForQuickRestart;
End;

// see hill
Every 0$1 trigger not americanBaseSpoted and not americanBaseCaptured and FilterUnitsInArea(hillArea, [f_side, 2]) and not americanBaseCaptured do
begin
if Mike then
   Say(Mike, 'DM-1-scout')
else
   Say(UnitFilter(heikeSecondSquad, [f_sex, sex_male])[1], 'DArm-1-explore');

PlaceSeeing(54, 35, 2, 1);
RemoveSeeing(54, 35, 2);
End;

// on hill
Every 0$1 trigger FilterUnitsInArea(upHillArea, [f_side, 2]) and not americanBaseCaptured do
var randomMen, randomWomen, speakerOk;
begin
randomMen := UnitFilter(heikeSecondSquad, [f_sex, sex_male]);
randomWomen := UnitFilter(heikeSecondSquad, [f_sex, sex_female]);

DialogueOn;

PlaceSeeing(36, 22, 2, 8);

dwait(0$1);

speakerOk := false;

if Mike then
   speakerOk := Say(Mike, 'DM-1-spot')
else if randomMen then
   speakerOk := Say(randomMen[1], 'DArm-1-spot-a');

if speakerOk then
   begin
   if Givi then
      Say(Givi, 'DG-1-spot')
   else if randomWomen then
      Say(randomWomen[1], 'DArf-1-spot-a');
   end;

if Mike then
   Say(Heike, 'DH-1-spot')
else
   Say(Heike, 'DH-1-spot-a');

RemoveSeeing(36, 22, 2);

DialogueOff;

americanBaseSpoted := true;
End;

// See american base
Every 0$1 trigger not americanBaseSpoted and FilterAllUnits([[f_side, 2], [f_see, 1]]) and not americanBaseCaptured do
var randomMen;
begin
americanBaseSpoted := true;

randomMen := UnitFilter(heikeSecondSquad, [f_sex, sex_male]);

if not randomMen then
   exit;

DialogueOn;
Say(randomMen[1], 'DArm-1-spot-a');
Say(Heike, 'DH-1-spot-a');
DialogueOff;
End;

// american base captured
Every 0$1 trigger GetSide(usDepot) = 2 or
                  FilterUnitsInArea(americanBaseArea, [[f_side, 1], [f_not, [f_ok]], [f_btype, b_breastwork]]) or
                  FilterUnitsInArea(americanBaseArea, [f_side, 2]) > 1 or
                  usForces <= 4 do
var i, p;
begin
wait(0$3);

americanStartRun := true;

if IsOk(usCommander) then
   begin
   usForces := usForces union usCommander;
   Say(usCommander, 'DUsm-1-assault');
   end;

for i in usForces do
    begin
    if IsInUnit(i) then
       ComExitBuilding(i);

    wait(3);

    ComMoveXY(i, 34, 67);
    end;

Say(Heike, 'DH-1-assault');

repeat
 wait(0$1);
 ComMoveXY(i, 34, 67);
until not usForces;

music_nat := 2;
music_class := music_victory;

if not americanHasEscaped then
   begin
   Say(Heike, 'DH-2-assault');
   SetAchievement('ACH_CLEAN');
   end;

wait(0$2);

repeat
 wait(0$1);
until not FilterAllUnits([[f_side, 2], [f_type, unit_human], [f_not, [f_ok]]]);

InGameOn;

if not GetSide(usDepot) = 2 then
   SetSide(usDepot, 2);

CenterOnXY(35, 22);

ComMoveXY(Heike, 35, 22);
AddComTurnXY(Heike, 38, 25);
ComMoveXY(heikeSquad union heikeSecondSquad, 39, 26);
AddComTurnUnit(heikeSquad union heikeSecondSquad, Heike);

p := 0;

repeat
 wait(0$1);
 p := p + 1;
until not HasTask(Heike) or p > 10;

Say(Heike, 'DH-1-capture');

if Markov then
   Say(Markov, 'DMar-1-capture');

if Sophia then
   begin
   Say(Heike, 'DH-2-capture');
   Say(Sophia, 'DS-1-capture');
   end;

InGameOff;

music_nat := music_auto;
music_class := music_auto;

ChangeMissionObjectives('ConstructBase');

for i in FilterAllUnits([[f_side, 1], [f_type, unit_building]]) do
    SetSide(i, 2);

wait(0$3);

americanBaseCaptured := true;
End;

Every 0$1 trigger capturedCargoCounter >= 3 do
SetAchievement('ACH_ENG');

Every 0$1 trigger FilterAllUnits([[f_side, 2], [f_class, class_apeman_soldier]]) >= 4 do
SetAchievement('ACH_APEGEN');

// workshop
Every 0$1 trigger FilterAllUnits([[f_side, 2], [f_btype, b_workshop], [f_not, [f_constructed]]]) do
begin
workshopBuilded := true;

if IsOk(Markov) then
   begin
   Say(Heike, 'DH-1-shop-a');

   if not (GetTech(tech_OilEng, 2) = state_researched and GetTech(tech_SolEng, 2) = state_researched) then
      Say(Markov, 'DMar-1-shop-a');
   end;

repeat
 wait(0$1);
until GetTech(tech_OilEng, 2) = state_researched or GetTech(tech_SolEng, 2) = state_researched;

DialogueOn;

Say(Markov, 'DMar-1-shop');
Say(Heike, 'DH-1-shop');
Say(Markov, 'DMar-2-shop');
Say(Markov, 'DMar-3-shop');
Say(Heike, 'DH-2-shop');
Say(Markov, 'DMar-4-shop');
Say(Heike, 'DH-3-shop');
Say(Markov, 'DMar-5-shop');
Say(Heike, 'DH-4-shop');

DialogueOff;

ChangeMissionObjectives('ConstructVeh');
End;

// all techs
Every 0$1 trigger GetTechNation(2, 2, state_enabled) = 0 do
ChangeMissionObjectives('Techs');

// first balista
Every 0$3 trigger IsOk(Markov) and FilterAllUnits([[f_side, 2], [f_or, [f_weapon, ar_multimissile_ballista], [f_bweapon, ar_multimissile_ballista]]]) do
begin
DialogueOn;
CenterNowOnUnits(FilterAllUnits([[f_side, 2], [f_or, [f_weapon, ar_multimissile_ballista], [f_bweapon, ar_multimissile_ballista]]]));
dwait(0$0.3);

Say(Heike, 'DH-1-bal');
Say(Markov, 'DMar-1-bal');
Say(Heike, 'DH-2-bal');

DialogueOff;
End;

// lab builded
Every 0$1 trigger IsOk(Aviradze) and FilterAllUnits([[f_side, 2], [f_btype, b_lab]]) do
begin
DialogueOn;

Say(Aviradze, 'DA-1-lab');
Say(Heike, 'DH-1-lab');
Say(Aviradze, 'DA-2-lab');
Say(Heike, 'DH-2-lab');

DialogueOff;
End;

// first ape sold
Every 0$1 trigger IsOk(Kaia) and FilterAllUnits([[f_side, 2], [f_class, class_apeman_soldier]]) and not FilterAllUnits([f_enemy, 2]) do
var ape;
begin
ape := FilterAllUnits([[f_side, 2], [f_class, class_apeman_soldier]]);

InGameOn;

CenterNowOnUnits(ape[1]);

ComExitBuilding(ape[1]);

Say(Kaia, 'DK-1-apesol');

AddComMoveXY(ape[1], 35, 28);
AddComMoveXY(ape[1], 36, 17);

DialogueOn;

Say(Aviradze, 'DA-1-apesol');
Say(Kaia, 'DK-2-apesol');
Say(Aviradze, 'DA-2-apesol');
Say(Kaia, 'DK-3-apesol');

DialogueOff;
InGameOff;
End;

// first ape eng
Every 0$1 trigger IsOk(Sophia) and FilterAllUnits([[f_side, 2], [f_class, class_apeman_engineer]]) and not FilterAllUnits([f_enemy, 2]) do
var ape;
begin
ape := FilterAllUnits([[f_side, 2], [f_class, class_apeman_engineer]]);

InGameOn;

CreateCratesXY(5, 35, 22, true);

ComTurnUnit(Sophia, ape[1]);
CenterNowOnUnits(ape[1]);
ComExitBuilding(ape[1]);

wait(0$2);

Say(Sophia, 'DS-1-apeeng');

if IsOk(Kamil) then
   begin
   Say(Kamil, 'DKam-1-apeeng');
   Say(Sophia, 'DS-2-apeeng');
   Say(Kamil, 'DKam-2-apeeng');
   Say(Sophia, 'DS-3-apeeng');

   if not IsOK(Kaia) then
      begin
      InGameOff;
      exit;
      end;

   Say(Kaia, 'DK-1-apeeng');

   if not IsOk(Givi) then
      begin
      Video(false);
      exit;
      end;

   Say(Givi, 'DG-1-apeeng');
   Say(Kaia, 'DK-2-apeeng');
   // Say(Kaia, 'DK-3-apeeng');  // brak dubbingu 21.12
   end;

InGameOff;
End;

// farmer is ready
Every 0$10 trigger farmerBaseReady and FilterAllUnits([[f_side, 2], [f_btype, b_depot]]) do
begin
wait(0$10);

DialogueOn;

CenterNowOnUnits(Farmer);

SayRadio(Farmer, 'DF-1-distribution');
Say(Heike, 'DH-2-distribution');

if IsOk(Kaia) then
   begin
   Say(Kaia, 'DK-1-distribution');
   Say(Heike, 'DH-1-distribution');

   if IsOk(Givi) then
      begin
      Say(Givi, 'DG-1-distribution');
      Say(Heike, 'DH-3-distribution');
      end;
   end;

DialogueOff;
ChangeMissionObjectives('Crates1');

farmerRequestedCrates := 300;

Query('FarmerCrates');
SetAreaMapShow(collectFarmerArea, 1);

CenterNowOnXY(108, 61);
End;

// base constructed
Every 0$1 trigger americanBaseCaptured and FilterAllUnits([[f_side, 2], [f_not, [f_constructed]], [f_or, [f_btype, b_lab], [f_btype, b_lab_half]]]) and FilterAllUnits([[f_side, 2], [f_not, [f_constructed]], [f_btype, b_armoury]]) do
var eng;
begin
wait(0$10);

eng := UnitFilter(heikeSecondSquad, [[f_sex, sex_male], [f_class, 2]]);

Say(Heike, 'DH-1-task');

if IsOk(Sophia) then
   begin
   Say(Sophia, 'DS-1-task');
   Say(Sophia, 'DS-2-task');
   Say(Heike, 'DH-2-task');
   end
else if eng then
   begin
   Say(eng[1], 'DArm-1-task');
   Say(Heike, 'DH-2-task');
   end;

ChangeMissionObjectives('BaseConstructed');
allowConvoys := true;
End;

// see first cargo
Every 0$2 trigger FilterAllUnits([[f_side, 4], [f_weapon, us_cargo_bay]]) do
var cargo, x, y;
begin
wait(0$2);
cargo := FilterAllUnits([[f_side, 4], [f_weapon, us_cargo_bay]]);
x := GetX(cargo[1]);
y := GetY(cargo[1]);

DialogueOn;

CenterNowOnXY(x, y);

PlaceSeeing(x, y, 2, -6);

dwait(0$0.3);

Say(Heike, 'DH-1-seecargo');

RemoveSeeing(x, y, 2);

DialogueOff;
End;

// farmer wants more crates.. #2
Every 0$1 trigger farmerBaseReady and farmerCrates >= 300 do
begin
DialogueOn;

SayRadio(Farmer, 'DF-1-delivery-2');
Say(Heike, 'DH-1-delivery-2');
SayRadio(Farmer, 'DF-2-delivery-2');

DialogueOff;

ChangeMissionObjectives('Crates2');

farmerCratesCounter := 30$00;
farmerRequestedCrates := 600;
End;

// farmer wants more crates.. #3
Every 0$1 trigger farmerBaseReady and farmerCrates >= 600 and Difficulty > 1 do
begin
DialogueOn;

SayRadio(Farmer, 'DF-1-delivery-3');
Say(Heike, 'DH-1-delivery-3');
SayRadio(Farmer, 'DF-2-delivery-3');

if IsOk(Kaia) then
   begin
   Say(Kaia, 'DK-1-delivery-3');
   Say(Heike, 'DH-2-delivery-3');
   Say(Givi, 'DG-1-delivery-3');
   Say(Mike, 'DM-1-delivery-3');
   end;

DialogueOff;

if Difficulty = 2 then
   begin
   ChangeMissionObjectives('Crates3');
   farmerCratesCounter := 30$00;
   farmerRequestedCrates := 900;
   end
else
   begin
   ChangeMissionObjectives('Crates4');
   farmerCratesCounter := 30$00;
   farmerRequestedCrates := 1200;
   end;
End;

// crates collected
Every 0$2 trigger farmerBaseReady and farmerCrates >= [600, 900, 1200][Difficulty] and farmerRequestedCrates <= farmerCratesCounter do
begin
retreatAllowed := true;
display_strings := [];

DialogueOn;
InGameOn;

SayRadio(Omar, 'DO-radio-end');
Say(Heike, 'DH-1-radio-end');

InGameOff;
DialogueOff;

ChangeMissionObjectives('Retreat');
End;

Every 0$1 trigger retreatAllowed do
var tmp, i;
begin
SetAreaMapShow(collectFarmerArea, 0);

tmp := UnitFilter(farmerSquad, [f_class, 2]);

if tmp and HexInfo(102, 69) = 0 then
   begin
   for i in tmp do
       if IsInUnit(i) then
          ComExitBuilding(i);

   AddComBuild(tmp, b_breastwork, 102, 69, 2);

   wait(0$3);
   end;
End;

// farmer depot destroyed
Every 0$1 trigger not retreatAllowed and IsDead(arDepot) do
begin
DialogueOn;
SayRadio(Farmer, 'DF-1-failure');
DialogueOff;
YouLost('FarmerDepot');
End;

// talk with Farmer
Every 0$1 trigger retreatAllowed and GetDistUnits(Heike, Farmer) < 6 and not FilterAllUnits([[f_enemy, 2], [f_type, unit_human]]) do
var i, max, tmp;
begin
allowConvoys := false;

InGameOn;

ComTurnUnit(Heike, Farmer);
ComTurnUnit(Farmer, Heike);

CenterNowOnUnits(Farmer);

Say(Heike, 'DH-1-end');
Say(Farmer, 'DF-1-end');
Say(Farmer, 'DF-2-end');
Say(Heike, 'DH-2-end');
Say(Farmer, 'DF-3-end');
Say(Heike, 'DH-3-end');
Say(Givi, 'DG-1-end');
Say(Heike, 'DH-4-end');
Say(Farmer, 'DF-4-end');
Say(Heike, 'DH-5-end');
Say(Farmer, 'DF-5-end');

InGameOff;

allowCargoEvacuation := true;

max := [4, 3, 2][Difficulty];

if farmerSquad < max then
   max := farmerSquad;

for i := 1 to max do
    begin
    SetSide(farmerSquad[1], 2);
    farmerSquad := Delete(farmerSquad, 1);
    end;

for i in Farmer ^ farmerSquad do
    begin
    if IsInUnit(i) then
       ComExitBuilding(i);
    AddComMoveXY(i, 102, 7);
    end;

for i in FilterAllUnits([[f_side, 5], [f_type, unit_building]]) diff arDepot do
    SetSide(i, 2);

repeat
 wait(0$1);
 tmp := UnitFilter(Farmer ^ farmerSquad, [f_inarea, northRoad]);

 if tmp then
    for i in tmp do
        begin
        farmerSquad := farmerSquad diff i; 
        RemoveUnit(i);
        end;
until farmerSquad = [] and not IsPlaced(Farmer);

if farmerHumanLoseCounter = 0 then
   SetAchievement('ACH_BABY');

wait(1$00);
SendAttack;

for i := 1 to [2, 3, 4][Difficulty] do
    begin
    wait([2$00, 1$40, 1$30][Difficulty]);
    SendAttack;
    end;
End;

Every 2$00 trigger allowCargoEvacuation and omarCargoCounter > 0 do
begin
enable;
CargoEvacuation;
End;

// farmer angry
Every 0$2 trigger farmerCratesCounter <= 9$00 do
begin
DialogueOn;
SayRadio(Farmer, 'DF-1-distribution-a');
Say(Heike, 'DH-1-distribution-a');
SayRadio(Farmer, 'DF-2-distribution-a');
DialogueOff;
End;

// farmer angry
Every 0$2 trigger farmerCratesCounter <= 0$00 do
begin
DialogueOn;
SayRadio(Farmer, 'DF-3-distribution-a');
YouLost('Distribution');
DialogueOff;
End;

Every 0$1 trigger vehCounter >= 2 do
ChangeMissionObjectives('VehConstructed');

// first cargo captured
Every 0$3 trigger FilterAllUnits([[f_side, 2], [f_weapon, us_cargo_bay]]) do
begin
DialogueOn;

Say(Heike, 'DH-1-truck');

if IsOk(Markov) then
   begin
   Say(Markov, 'DMar-1-truck');
   Say(Heike, 'DH-2-truck');
   end;

DialogueOff;
End;

Export Function EmptyCargoDialog;
var randomMen, randomWomen;
begin
if IsOk(Givi) then
   begin
   Say(Givi, 'DG-1-nocargo');
   exit;
   end;

randomMen := UnitFilter(heikeSecondSquad, [f_sex, sex_male]);
randomWomen := UnitFilter(heikeSecondSquad, [f_sex, sex_female]);

if randomMen then
   Say(randomMen[1], 'DArm-1-nocargo')
else if randomWomen then
   Say(randomWomen[1], 'DArf-1-nocargo');
End;

Export Function IncomingAttack;
begin
if attackWave = 1 then
   begin
   DialogueOn;

   SayRadio(Omar, 'DO-1-radio-1');
   Say(Heike, 'DH-1-radio-1-');

   if IsOk(Markov) then
      begin
      Say(Markov, 'DMar-1-radio-1');
      Say(Heike, 'DH-2-radio-1');
      end;

   DialogueOff;
   end
else
   begin
   SayRadio(Omar, 'DO-1-radio-u');
   Say(Heike, 'DH-1-radio-u');
   end;
End;

// remove base squad
Every 0$1 trigger UnitFilter(usForces, [f_inarea, westRoad]) do
var i;
begin
enable;

for i in UnitFilter(usForces, [f_inarea, westRoad]) do
    begin
    usForces := usForces diff i;
    RemoveUnit(i);
    end;

if not americanHasEscaped and attackWave = 1 then
   begin
   americanHasEscaped := true;
   Say(Heike, 'DH-2-assault-a');
   end;
End;

// Farmer under attack
Every 0$1 trigger FilterUnitsInArea(farmerBase, [f_side, 1]) and not retreatAllowed do
SayRadio(Farmer, 'DF-1-attack');

// Farmer depot captured
Every 0$1 trigger GetSide(arDepot) = 2 do
YouLost('Attack');

// ibrahim
Every 0$30 trigger not FilterAllUnits([[f_side, 1], [f_type, unit_human]]) and not FilterAllUnits([f_side, 4]) and not retreatAllowed and farmerCrates > 90 and FilterUnitsInArea(americanBaseArea, [[f_side, 2], [f_type, unit_human]]) and FilterAllUnits([[f_side, 2], [f_ok], [f_btype, b_depot]]) do
var randomMen, randomWomen, speaker, place, depot;
begin
depot := usDepot;

if not depot then
   depot := FilterAllUnits([[f_side, 2], [f_btype, b_depot]])[1];

randomMen := UnitFilter(heikeSecondSquad, [f_sex, sex_male]);
randomWomen := UnitFilter(heikeSecondSquad, [f_sex, sex_female]);

if IsOk(Kaia) then
   speaker := [Kaia, 'DK']
else if randomMen then
   speaker := [randomMen[rand(1, randomMen)], 'DArm']
else if randomWomen then
   speaker := [randomWomen[rand(1, randomWomen)], 'DArf']
else
   exit;

if IsInUnit(speaker[1]) then
   place := IsInUnit(speaker[1])
else
   place := speaker[1];

CenterNowOnUnits(place);
PrepareIbrahim(GetX(place), GetY(place));

wait(0$2);

if not IsPlaced(Ibrahim) then
   exit;

allowConvoys := false;

InGameOn;

wait(0$1);

Say(Ibrahim, 'DI-1-land');

if IsInUnit(speaker[1]) then
   ComExit(speaker[1]);

AddComMoveUnit(speaker[1], Ibrahim);
AddComTurnUnit(speaker[1], Ibrahim);

ComTurnUnit(Ibrahim, speaker[1]);

wait(0$1);

Say(speaker[1], speaker[2] & '-1-land');
Say(Ibrahim, 'DI-2-land');
Say(speaker[1], speaker[2] & '-2-land');

{if IsInUnit(Heike) then
   ComExitBuilding(Heike);

AddComMoveXY(Heike, GetX(speaker[1]), GetY(speaker[1]));
AddComTurnUnit(Heike, speaker[1]);
AddComTurnUnit([Ibrahim, speaker[1]], Heike);

repeat
 wait(0$2);
 CenterOnUnits(speaker[1]);
until GetDistUnits(speaker[1], Heike) < 6; }

Say(speaker[1], speaker[2] & '-3-land');
Say(Heike, 'DH-1-land');

if UnitsInside(depot) = 6 then
   ComExitBuilding(UnitsInside(depot)[1]);

SetSide(Ibrahim, 2);

CenterOnUnits(depot);

ComEnterUnit(Ibrahim, depot);
ComEnterUnit(speaker[1], depot);

repeat
 wait(0$1);
until IsInUnit(Ibrahim) or not IsOk(Ibrahim) or not IsOk(depot);

InGameOff;

if not IsOk(Ibrahim) then
   exit;

if not IsOk(depot) then
   begin
   ComMoveXY(Ibrahim, 30, 1);

   repeat
    wait(0$1);
   until IsAt(Ibrahim, 30, 1) or IsDead(Ibrahim);

   RemoveUnit(Ibrahim);
   exit;
   end;

ibrahimInDepot := true;
allowConvoys := true;

Query('IbrahimInDepot');
End;

Export Function IbrahimQuery;
begin

case Query('IbrahimQuery') of
1: begin // accept
   allowConvoys := false;
   ibrahimInDepot := false;

   InGameOn;

   CenterNowOnUnits(Heike);

   wait(0$1);

   Say(Heike, 'DH-1-interrogation');
   Say(Ibrahim, 'DI-1-interrogation');
   Say(Heike, 'DH-2-interrogation');
   Say(Ibrahim, 'DI-2-interrogation');
   Say(Heike, 'DH-3-interrogation');
   Say(Ibrahim, 'DI-3-interrogation');
   Say(Heike, 'DH-4-interrogation');
   Say(Ibrahim, 'DI-4-interrogation');
   Say(Heike, 'DH-5-interrogation');
   Say(Ibrahim, 'DI-5-interrogation');

   wait(0$1);

   case Query('IbrahimDecisionQuery') of
   1: begin // kill
      Say(Ibrahim, 'DI-1-kill');
      KillUnit(Ibrahim); 
      end;

   2: begin // let him go
      SetSide(Ibrahim, 6);

      ComExitBuilding(Ibrahim);
      AddComMoveXY(Ibrahim, 66, 2);
      AddComHold(Ibrahim);

      ComExitBuilding(Heike);
      end;
   end;

   InGameOff;
   end;
2: exit;
end;

allowConvoys := true;

wait(2$30);

ComMoveXY(Ibrahim, 38, 28);
ibrahimIsFree := true;
End;

Every 0$1 trigger ibrahimIsFree and IsOk(Ibrahim) and See(6, Heike) and not FilterAllUnits([f_side, 4]) and not FilterAllUnits([[f_side, 1], [f_type, unit_human]]) do
var changeClass, b, p, depot, x, y;
begin
allowConvoys := false;

depot := usDepot;

if not usDepot and FilterAllUnits([[f_side, 2], [f_ok], [f_btype, b_depot]]) then
   depot := FilterAllUnits([[f_side, 2], [f_ok], [f_btype, b_depot]])[1];

InGameOn;

CenterNowOnUnits(Ibrahim);

ComTurnUnit(Heike, Ibrahim);
ComTurnUnit(Ibrahim, Heike);

Say(Ibrahim, 'DI-1-free');
Say(Heike, 'DH-1-free');
Say(Ibrahim, 'DI-2-free');

changeClass := 0;

case Query('IbrahimJoinQuery') of
1: begin // accept
   changeClass := 1;
   end;

2: begin // decline
   Say(Heike, 'DH-1-decline');
   Say(Ibrahim, 'DI-1-decline');
   InGameOff;

   ComMoveXY(Ibrahim, 30, 1);

   p := 0;

   repeat
    p := p + 1;
    wait(0$1);
   until IsAt(Ibrahim, 30, 1) or not FilterAllUnits([[f_side, 2], [f_see, 6]]) or p > 10;

   RemoveUnit(Ibrahim);
   SaveVariable(1, '03_IbrahimHasEscaped');
   end;

3: begin // ask Omar
   Say(Heike, 'DH-1-radio-hq');
   SayRadio(Omar, 'DO-1-radio-hq');
   Say(Heike, 'DH-2-radio-hq');
   SayRadio(Omar, 'DO-2-radio-hq');
   Say(Heike, 'DH-3-radio-hq');

   changeClass := 1;
   end;
end;

if changeClass then
   begin
   Say(Heike, 'DH-1-agree');

   if IsOk(Givi) then
      begin
      Say(Givi, 'DG-1-agree');
      Say(Heike, 'DH-2-agree');
      Say(Givi, 'DG-2-agree');
      end;

   if UnitsInside(depot) = 6 then
      ComExitBuilding(UnitsInside(depot)[1]);

   SetSide(Ibrahim, 2);

   x := GetX(Ibrahim);
   y := GetY(Ibrahim);

   if depot then
      begin
      ComEnterUnit(Ibrahim, depot);

      repeat
       wait(0$1);
      until IsInUnit(Ibrahim);

      b := IsInUnit(Ibrahim);
      end;

   RemoveUnit(Ibrahim);

   uc_side := 2;
   Ibrahim := PrepareUnit('Ibrahim', false, '');

   if depot then
      PlaceHumanInUnit(Ibrahim, b)
   else
      PlaceUnitXY(Ibrahim, x, y, false);

   InGameOff;
   allowConvoys := true;
   SetAchievement('ACH_IBRAHIM');
   end;
End;

Every 0$1 trigger GetLives(Kaia) < 3 do
begin
DialogueOn;
CenterNowOnUnits(Kaia);

ForceSay(Kaia, 'DK-keydeath-1');
Say(Heike, 'DH-keydeath-2');
Say(Heike, 'DH-keydeath-3');
DialogueOff;

KillUnit(Kaia);
End;

// end mission
Every 0$1 trigger retreatAllowed and omarCargoCounter < 1 do
begin
ChangeSideFog(1, 2);

repeat
 wait(0$1);
until FilterAllUnits([[f_side, 1], [f_class, 1]]) = 0;

DialogueOn;

Say(Heike, 'DH-1-final');

if tick <= [60$00, 55$00, 50$00][Difficulty] then
   AddMedal('med1', 1)
else
   AddMedal('med1', -1);

if vehCounter >= 2 then
   AddMedal('med2', 1)
else
   AddMedal('med2', -1);

if deadCounter = 0 then
   AddMedal('med3', 1)
else
   AddMedal('med3', -1);

GiveMedals('MAIN');

RewardPeople(FilterAllUnits([[f_side, 2], [f_nation, 2], [f_type, unit_human]]));

SaveCharacters(Heike, '03_Heike');
SaveCharacters(Aviradze, '03_Aviradze');

if Givi then
   SaveCharacters(Givi, '03_Givi');

if Mike then
   SaveCharacters(Mike, '03_Mike');

if Kamil then
   SaveCharacters(Kamil, '03_Kamil');

if Kaia then
   SaveCharacters(Kaia, '03_Kaia');

if Sophia then
   SaveCharacters(Sophia, '03_Sophia');

if Markov then
   SaveCharacters(Markov, '03_Markov');

if Ibrahim and GetSide(Ibrahim) = 2 then
   SaveCharacters(Ibrahim, '03_Ibrahim');

if heikeSecondSquad then
   SaveCharacters(heikeSecondSquad, '03_others');

SaveVariable(deadCounter, '03_DeadCounter');

YouWin;

DialogueOff;
End;

