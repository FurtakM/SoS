Export usForces, usCommander, americanBuildList;
Export Function PrepareAmerican;
var i, un;
begin
usForces := [];
americanBuildList := [
                       [b_lab, 32, 27, 1],
                       [b_armoury, 43, 24, 5],
                       [b_solar_power, 29, 21, 0]
                     ];

SetResourceType(GetBase(usDepot), mat_cans, [150, 120, 100][Difficulty]);

uc_side := 1;
uc_nation := 1;

hc_gallery := '';
hc_name := '';
hc_importance := 0;

PrepareHuman(sex_male, 1, 3);
usCommander := CreateHuman;
PlaceHumanInUnit(usCommander, usDepot);

for i := 1 to [2, 3, 4][Difficulty] do
    begin
    PrepareHuman(false, 1, [1, 2, 3][Difficulty]);
    un := CreateHuman;
    usForces := usForces union un;
    PlaceUnitXYR(un, 39, 24, 4, false);

    if i < 3 then
       ComEnterUnit(un, FilterAllUnits([[f_side, 1], [f_btype, b_breastwork]])[i]);
    end;

for i := 1 to 2 do
    begin
    PrepareHuman(false, 2, 2);
    un := CreateHuman;
    usForces := usForces union un;
    PlaceUnitXYR(un, 39, 24, 4, false);
    end;

PrepareHuman(false, 4, 1);
un := CreateHuman;
usForces := usForces union un;
PlaceUnitXYR(un, 39, 24, 4, false);
End;


// us build script
Every 0$1 trigger usForces and not americanBaseCaptured do
var i, b, eng, sol, sci;
begin
enable;

eng := UnitFilter(usForces, [f_class, 2]);
sol := UnitFilter(usForces, [f_class, 1]);
sci := UnitFilter(usForces, [f_class, 4]);

if eng then
   begin
   b := FilterAllUnits([[f_side, 1], [f_type, unit_building], [f_not, [f_lives, 1000]]]);

   if b then
      begin
      ComExitBuilding(eng);
      AddComRepairBuilding(eng, b[1]);
      end
   else
      begin
      for i in eng do
          if not HasTask(i) then
             begin
             if americanBuildList then
                begin
                if IsInUnit(i) then
                   ComExitBuilding(i);

                AddComBuild(i, americanBuildList[1][1], americanBuildList[1][2], americanBuildList[1][3], americanBuildList[1][4]);
                end
             else if not IsInUnit(i) then
                ComEnterUnit(i, usDepot);
             end;
      end;
   end;
End;

Export Function AmLabResearch(lab);
var tech, i;
begin
tech := [ tech_SolPow, tech_SolEng, tech_Tech1, tech_BasicTools ];

for i in tech do
    AddComResearch(lab, i);
End;