// starting begin ResetFog ;
   0: CALL_OW 335
// AnimateTrees ( true ) ;
   4: LD_INT 1
   6: PPUSH
   7: CALL_OW 573
// PrepareNature ( 4 , 3 , 4 , 5 , 2 , 0 , 3 , natureArea , riverArea ) ;
  11: LD_INT 4
  13: PPUSH
  14: LD_INT 3
  16: PPUSH
  17: LD_INT 4
  19: PPUSH
  20: LD_INT 5
  22: PPUSH
  23: LD_INT 2
  25: PPUSH
  26: LD_INT 0
  28: PPUSH
  29: LD_INT 3
  31: PPUSH
  32: LD_INT 9
  34: PPUSH
  35: LD_INT 8
  37: PPUSH
  38: CALL 43 0 9
// end ; end_of_file
  42: END
// export function PrepareNature ( birds , tigers , apemans , enchidnas , horses , mastodonts , fishes , nat_area , wat_area ) ; var i , animal ; begin
  43: LD_INT 0
  45: PPUSH
  46: PPUSH
  47: PPUSH
// uc_side = 0 ;
  48: LD_ADDR_OWVAR 20
  52: PUSH
  53: LD_INT 0
  55: ST_TO_ADDR
// uc_nation = 0 ;
  56: LD_ADDR_OWVAR 21
  60: PUSH
  61: LD_INT 0
  63: ST_TO_ADDR
// InitHc ;
  64: CALL_OW 19
// InitVc ;
  68: CALL_OW 20
// if mastodonts then
  72: LD_VAR 0 6
  76: IFFALSE 143
// for i = 1 to mastodonts do
  78: LD_ADDR_VAR 0 11
  82: PUSH
  83: DOUBLE
  84: LD_INT 1
  86: DEC
  87: ST_TO_ADDR
  88: LD_VAR 0 6
  92: PUSH
  93: FOR_TO
  94: IFFALSE 141
// begin vc_chassis := 31 ;
  96: LD_ADDR_OWVAR 37
 100: PUSH
 101: LD_INT 31
 103: ST_TO_ADDR
// vc_control := control_rider ;
 104: LD_ADDR_OWVAR 38
 108: PUSH
 109: LD_INT 4
 111: ST_TO_ADDR
// animal := CreateVehicle ;
 112: LD_ADDR_VAR 0 12
 116: PUSH
 117: CALL_OW 45
 121: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
 122: LD_VAR 0 12
 126: PPUSH
 127: LD_VAR 0 8
 131: PPUSH
 132: LD_INT 0
 134: PPUSH
 135: CALL_OW 49
// end ;
 139: GO 93
 141: POP
 142: POP
// if horses then
 143: LD_VAR 0 5
 147: IFFALSE 214
// for i = 1 to horses do
 149: LD_ADDR_VAR 0 11
 153: PUSH
 154: DOUBLE
 155: LD_INT 1
 157: DEC
 158: ST_TO_ADDR
 159: LD_VAR 0 5
 163: PUSH
 164: FOR_TO
 165: IFFALSE 212
// begin hc_class := 21 ;
 167: LD_ADDR_OWVAR 28
 171: PUSH
 172: LD_INT 21
 174: ST_TO_ADDR
// hc_gallery :=  ;
 175: LD_ADDR_OWVAR 33
 179: PUSH
 180: LD_STRING 
 182: ST_TO_ADDR
// animal := CreateHuman ;
 183: LD_ADDR_VAR 0 12
 187: PUSH
 188: CALL_OW 44
 192: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
 193: LD_VAR 0 12
 197: PPUSH
 198: LD_VAR 0 8
 202: PPUSH
 203: LD_INT 0
 205: PPUSH
 206: CALL_OW 49
// end ;
 210: GO 164
 212: POP
 213: POP
// if birds then
 214: LD_VAR 0 1
 218: IFFALSE 285
// for i = 1 to birds do
 220: LD_ADDR_VAR 0 11
 224: PUSH
 225: DOUBLE
 226: LD_INT 1
 228: DEC
 229: ST_TO_ADDR
 230: LD_VAR 0 1
 234: PUSH
 235: FOR_TO
 236: IFFALSE 283
// begin hc_class = 18 ;
 238: LD_ADDR_OWVAR 28
 242: PUSH
 243: LD_INT 18
 245: ST_TO_ADDR
// hc_gallery =  ;
 246: LD_ADDR_OWVAR 33
 250: PUSH
 251: LD_STRING 
 253: ST_TO_ADDR
// animal := CreateHuman ;
 254: LD_ADDR_VAR 0 12
 258: PUSH
 259: CALL_OW 44
 263: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
 264: LD_VAR 0 12
 268: PPUSH
 269: LD_VAR 0 8
 273: PPUSH
 274: LD_INT 0
 276: PPUSH
 277: CALL_OW 49
// end ;
 281: GO 235
 283: POP
 284: POP
// if tigers then
 285: LD_VAR 0 2
 289: IFFALSE 373
// for i = 1 to tigers do
 291: LD_ADDR_VAR 0 11
 295: PUSH
 296: DOUBLE
 297: LD_INT 1
 299: DEC
 300: ST_TO_ADDR
 301: LD_VAR 0 2
 305: PUSH
 306: FOR_TO
 307: IFFALSE 371
// begin hc_class = class_tiger ;
 309: LD_ADDR_OWVAR 28
 313: PUSH
 314: LD_INT 14
 316: ST_TO_ADDR
// hc_gallery =  ;
 317: LD_ADDR_OWVAR 33
 321: PUSH
 322: LD_STRING 
 324: ST_TO_ADDR
// hc_agressivity = Rand ( - 7 , 7 ) ;
 325: LD_ADDR_OWVAR 35
 329: PUSH
 330: LD_INT 7
 332: NEG
 333: PPUSH
 334: LD_INT 7
 336: PPUSH
 337: CALL_OW 12
 341: ST_TO_ADDR
// animal := CreateHuman ;
 342: LD_ADDR_VAR 0 12
 346: PUSH
 347: CALL_OW 44
 351: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
 352: LD_VAR 0 12
 356: PPUSH
 357: LD_VAR 0 8
 361: PPUSH
 362: LD_INT 0
 364: PPUSH
 365: CALL_OW 49
// end ;
 369: GO 306
 371: POP
 372: POP
// if apemans then
 373: LD_VAR 0 3
 377: IFFALSE 500
// for i = 1 to apemans do
 379: LD_ADDR_VAR 0 11
 383: PUSH
 384: DOUBLE
 385: LD_INT 1
 387: DEC
 388: ST_TO_ADDR
 389: LD_VAR 0 3
 393: PUSH
 394: FOR_TO
 395: IFFALSE 498
// begin hc_class = class_apeman ;
 397: LD_ADDR_OWVAR 28
 401: PUSH
 402: LD_INT 12
 404: ST_TO_ADDR
// hc_gallery =  ;
 405: LD_ADDR_OWVAR 33
 409: PUSH
 410: LD_STRING 
 412: ST_TO_ADDR
// hc_agressivity = rand ( - 5 , 5 ) ;
 413: LD_ADDR_OWVAR 35
 417: PUSH
 418: LD_INT 5
 420: NEG
 421: PPUSH
 422: LD_INT 5
 424: PPUSH
 425: CALL_OW 12
 429: ST_TO_ADDR
// hc_skills := [ rand ( 1 , 3 ) , rand ( 1 , 3 ) , 0 , 0 ] ;
 430: LD_ADDR_OWVAR 31
 434: PUSH
 435: LD_INT 1
 437: PPUSH
 438: LD_INT 3
 440: PPUSH
 441: CALL_OW 12
 445: PUSH
 446: LD_INT 1
 448: PPUSH
 449: LD_INT 3
 451: PPUSH
 452: CALL_OW 12
 456: PUSH
 457: LD_INT 0
 459: PUSH
 460: LD_INT 0
 462: PUSH
 463: EMPTY
 464: LIST
 465: LIST
 466: LIST
 467: LIST
 468: ST_TO_ADDR
// animal := CreateHuman ;
 469: LD_ADDR_VAR 0 12
 473: PUSH
 474: CALL_OW 44
 478: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
 479: LD_VAR 0 12
 483: PPUSH
 484: LD_VAR 0 8
 488: PPUSH
 489: LD_INT 0
 491: PPUSH
 492: CALL_OW 49
// end ;
 496: GO 394
 498: POP
 499: POP
// if enchidnas then
 500: LD_VAR 0 4
 504: IFFALSE 571
// for i = 1 to enchidnas do
 506: LD_ADDR_VAR 0 11
 510: PUSH
 511: DOUBLE
 512: LD_INT 1
 514: DEC
 515: ST_TO_ADDR
 516: LD_VAR 0 4
 520: PUSH
 521: FOR_TO
 522: IFFALSE 569
// begin hc_class = 13 ;
 524: LD_ADDR_OWVAR 28
 528: PUSH
 529: LD_INT 13
 531: ST_TO_ADDR
// hc_gallery =  ;
 532: LD_ADDR_OWVAR 33
 536: PUSH
 537: LD_STRING 
 539: ST_TO_ADDR
// animal := CreateHuman ;
 540: LD_ADDR_VAR 0 12
 544: PUSH
 545: CALL_OW 44
 549: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
 550: LD_VAR 0 12
 554: PPUSH
 555: LD_VAR 0 8
 559: PPUSH
 560: LD_INT 0
 562: PPUSH
 563: CALL_OW 49
// end ;
 567: GO 521
 569: POP
 570: POP
// if fishes then
 571: LD_VAR 0 7
 575: IFFALSE 642
// for i = 1 to fishes do
 577: LD_ADDR_VAR 0 11
 581: PUSH
 582: DOUBLE
 583: LD_INT 1
 585: DEC
 586: ST_TO_ADDR
 587: LD_VAR 0 7
 591: PUSH
 592: FOR_TO
 593: IFFALSE 640
// begin hc_class = 20 ;
 595: LD_ADDR_OWVAR 28
 599: PUSH
 600: LD_INT 20
 602: ST_TO_ADDR
// hc_gallery =  ;
 603: LD_ADDR_OWVAR 33
 607: PUSH
 608: LD_STRING 
 610: ST_TO_ADDR
// animal := CreateHuman ;
 611: LD_ADDR_VAR 0 12
 615: PUSH
 616: CALL_OW 44
 620: ST_TO_ADDR
// PlaceUnitArea ( animal , wat_area , false ) ;
 621: LD_VAR 0 12
 625: PPUSH
 626: LD_VAR 0 9
 630: PPUSH
 631: LD_INT 0
 633: PPUSH
 634: CALL_OW 49
// end ;
 638: GO 592
 640: POP
 641: POP
// end ;
 642: LD_VAR 0 10
 646: RET
