// starting begin ResetFog ;
   0: CALL_OW 335
// AnimateTrees ( true ) ;
   4: LD_INT 1
   6: PPUSH
   7: CALL_OW 573
// PrepareNature ( 4 , 3 , 4 , 5 , 2 , 0 , 3 , natureArea , riverArea ) ;
  11: LD_INT 4
  13: PPUSH
  14: LD_INT 3
  16: PPUSH
  17: LD_INT 4
  19: PPUSH
  20: LD_INT 5
  22: PPUSH
  23: LD_INT 2
  25: PPUSH
  26: LD_INT 0
  28: PPUSH
  29: LD_INT 3
  31: PPUSH
  32: LD_INT 7
  34: PPUSH
  35: LD_INT 6
  37: PPUSH
  38: CALL 191 0 9
// InitVariables ;
  42: CALL 63 0 0
// PrepareRussian ;
  46: CALL 1364 0 0
// PrepareArabian ;
  50: CALL 934 0 0
// PrepareHeike ;
  54: CALL 869 0 0
// Action ;
  58: CALL 2626 0 0
// end ;
  62: END
// export missionStarted , debug , meetJohnny , johnnySaved , dogTag , dogTagFound , mercenariesSpotted , olafSpotted , russianSpotted , mercenariesQuestReady , mercenariesQuestDone , lastObjectiveActive , prisonFound ; function InitVariables ; begin
  63: LD_INT 0
  65: PPUSH
// debug := false ;
  66: LD_ADDR_EXP 2
  70: PUSH
  71: LD_INT 0
  73: ST_TO_ADDR
// missionStarted := false ;
  74: LD_ADDR_EXP 1
  78: PUSH
  79: LD_INT 0
  81: ST_TO_ADDR
// meetJohnny := false ;
  82: LD_ADDR_EXP 3
  86: PUSH
  87: LD_INT 0
  89: ST_TO_ADDR
// johnnySaved := false ;
  90: LD_ADDR_EXP 4
  94: PUSH
  95: LD_INT 0
  97: ST_TO_ADDR
// dogTag := [ ] ;
  98: LD_ADDR_EXP 5
 102: PUSH
 103: EMPTY
 104: ST_TO_ADDR
// dogTagFound := false ;
 105: LD_ADDR_EXP 6
 109: PUSH
 110: LD_INT 0
 112: ST_TO_ADDR
// mercenariesSpotted := false ;
 113: LD_ADDR_EXP 7
 117: PUSH
 118: LD_INT 0
 120: ST_TO_ADDR
// olafSpotted := false ;
 121: LD_ADDR_EXP 8
 125: PUSH
 126: LD_INT 0
 128: ST_TO_ADDR
// russianSpotted := false ;
 129: LD_ADDR_EXP 9
 133: PUSH
 134: LD_INT 0
 136: ST_TO_ADDR
// mercenariesQuestReady := false ;
 137: LD_ADDR_EXP 10
 141: PUSH
 142: LD_INT 0
 144: ST_TO_ADDR
// mercenariesQuestDone := false ;
 145: LD_ADDR_EXP 11
 149: PUSH
 150: LD_INT 0
 152: ST_TO_ADDR
// lastObjectiveActive := false ;
 153: LD_ADDR_EXP 12
 157: PUSH
 158: LD_INT 0
 160: ST_TO_ADDR
// prisonFound := false ;
 161: LD_ADDR_EXP 13
 165: PUSH
 166: LD_INT 0
 168: ST_TO_ADDR
// end ;
 169: LD_VAR 0 1
 173: RET
// every 0 0$1 trigger debug do
 174: LD_EXP 2
 178: IFFALSE 190
 180: GO 182
 182: DISABLE
// FogOff ( 2 ) ; end_of_file
 183: LD_INT 2
 185: PPUSH
 186: CALL_OW 344
 190: END
// export function PrepareNature ( birds , tigers , apemans , enchidnas , horses , mastodonts , fishes , nat_area , wat_area ) ; var i , animal ; begin
 191: LD_INT 0
 193: PPUSH
 194: PPUSH
 195: PPUSH
// uc_side = 0 ;
 196: LD_ADDR_OWVAR 20
 200: PUSH
 201: LD_INT 0
 203: ST_TO_ADDR
// uc_nation = 0 ;
 204: LD_ADDR_OWVAR 21
 208: PUSH
 209: LD_INT 0
 211: ST_TO_ADDR
// InitHc ;
 212: CALL_OW 19
// InitVc ;
 216: CALL_OW 20
// if mastodonts then
 220: LD_VAR 0 6
 224: IFFALSE 291
// for i = 1 to mastodonts do
 226: LD_ADDR_VAR 0 11
 230: PUSH
 231: DOUBLE
 232: LD_INT 1
 234: DEC
 235: ST_TO_ADDR
 236: LD_VAR 0 6
 240: PUSH
 241: FOR_TO
 242: IFFALSE 289
// begin vc_chassis := 31 ;
 244: LD_ADDR_OWVAR 37
 248: PUSH
 249: LD_INT 31
 251: ST_TO_ADDR
// vc_control := control_rider ;
 252: LD_ADDR_OWVAR 38
 256: PUSH
 257: LD_INT 4
 259: ST_TO_ADDR
// animal := CreateVehicle ;
 260: LD_ADDR_VAR 0 12
 264: PUSH
 265: CALL_OW 45
 269: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
 270: LD_VAR 0 12
 274: PPUSH
 275: LD_VAR 0 8
 279: PPUSH
 280: LD_INT 0
 282: PPUSH
 283: CALL_OW 49
// end ;
 287: GO 241
 289: POP
 290: POP
// if horses then
 291: LD_VAR 0 5
 295: IFFALSE 362
// for i = 1 to horses do
 297: LD_ADDR_VAR 0 11
 301: PUSH
 302: DOUBLE
 303: LD_INT 1
 305: DEC
 306: ST_TO_ADDR
 307: LD_VAR 0 5
 311: PUSH
 312: FOR_TO
 313: IFFALSE 360
// begin hc_class := 21 ;
 315: LD_ADDR_OWVAR 28
 319: PUSH
 320: LD_INT 21
 322: ST_TO_ADDR
// hc_gallery :=  ;
 323: LD_ADDR_OWVAR 33
 327: PUSH
 328: LD_STRING 
 330: ST_TO_ADDR
// animal := CreateHuman ;
 331: LD_ADDR_VAR 0 12
 335: PUSH
 336: CALL_OW 44
 340: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
 341: LD_VAR 0 12
 345: PPUSH
 346: LD_VAR 0 8
 350: PPUSH
 351: LD_INT 0
 353: PPUSH
 354: CALL_OW 49
// end ;
 358: GO 312
 360: POP
 361: POP
// if birds then
 362: LD_VAR 0 1
 366: IFFALSE 433
// for i = 1 to birds do
 368: LD_ADDR_VAR 0 11
 372: PUSH
 373: DOUBLE
 374: LD_INT 1
 376: DEC
 377: ST_TO_ADDR
 378: LD_VAR 0 1
 382: PUSH
 383: FOR_TO
 384: IFFALSE 431
// begin hc_class = 18 ;
 386: LD_ADDR_OWVAR 28
 390: PUSH
 391: LD_INT 18
 393: ST_TO_ADDR
// hc_gallery =  ;
 394: LD_ADDR_OWVAR 33
 398: PUSH
 399: LD_STRING 
 401: ST_TO_ADDR
// animal := CreateHuman ;
 402: LD_ADDR_VAR 0 12
 406: PUSH
 407: CALL_OW 44
 411: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
 412: LD_VAR 0 12
 416: PPUSH
 417: LD_VAR 0 8
 421: PPUSH
 422: LD_INT 0
 424: PPUSH
 425: CALL_OW 49
// end ;
 429: GO 383
 431: POP
 432: POP
// if tigers then
 433: LD_VAR 0 2
 437: IFFALSE 521
// for i = 1 to tigers do
 439: LD_ADDR_VAR 0 11
 443: PUSH
 444: DOUBLE
 445: LD_INT 1
 447: DEC
 448: ST_TO_ADDR
 449: LD_VAR 0 2
 453: PUSH
 454: FOR_TO
 455: IFFALSE 519
// begin hc_class = class_tiger ;
 457: LD_ADDR_OWVAR 28
 461: PUSH
 462: LD_INT 14
 464: ST_TO_ADDR
// hc_gallery =  ;
 465: LD_ADDR_OWVAR 33
 469: PUSH
 470: LD_STRING 
 472: ST_TO_ADDR
// hc_agressivity = Rand ( - 7 , 7 ) ;
 473: LD_ADDR_OWVAR 35
 477: PUSH
 478: LD_INT 7
 480: NEG
 481: PPUSH
 482: LD_INT 7
 484: PPUSH
 485: CALL_OW 12
 489: ST_TO_ADDR
// animal := CreateHuman ;
 490: LD_ADDR_VAR 0 12
 494: PUSH
 495: CALL_OW 44
 499: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
 500: LD_VAR 0 12
 504: PPUSH
 505: LD_VAR 0 8
 509: PPUSH
 510: LD_INT 0
 512: PPUSH
 513: CALL_OW 49
// end ;
 517: GO 454
 519: POP
 520: POP
// if apemans then
 521: LD_VAR 0 3
 525: IFFALSE 648
// for i = 1 to apemans do
 527: LD_ADDR_VAR 0 11
 531: PUSH
 532: DOUBLE
 533: LD_INT 1
 535: DEC
 536: ST_TO_ADDR
 537: LD_VAR 0 3
 541: PUSH
 542: FOR_TO
 543: IFFALSE 646
// begin hc_class = class_apeman ;
 545: LD_ADDR_OWVAR 28
 549: PUSH
 550: LD_INT 12
 552: ST_TO_ADDR
// hc_gallery =  ;
 553: LD_ADDR_OWVAR 33
 557: PUSH
 558: LD_STRING 
 560: ST_TO_ADDR
// hc_agressivity = rand ( - 5 , 5 ) ;
 561: LD_ADDR_OWVAR 35
 565: PUSH
 566: LD_INT 5
 568: NEG
 569: PPUSH
 570: LD_INT 5
 572: PPUSH
 573: CALL_OW 12
 577: ST_TO_ADDR
// hc_skills := [ rand ( 1 , 3 ) , rand ( 1 , 3 ) , 0 , 0 ] ;
 578: LD_ADDR_OWVAR 31
 582: PUSH
 583: LD_INT 1
 585: PPUSH
 586: LD_INT 3
 588: PPUSH
 589: CALL_OW 12
 593: PUSH
 594: LD_INT 1
 596: PPUSH
 597: LD_INT 3
 599: PPUSH
 600: CALL_OW 12
 604: PUSH
 605: LD_INT 0
 607: PUSH
 608: LD_INT 0
 610: PUSH
 611: EMPTY
 612: LIST
 613: LIST
 614: LIST
 615: LIST
 616: ST_TO_ADDR
// animal := CreateHuman ;
 617: LD_ADDR_VAR 0 12
 621: PUSH
 622: CALL_OW 44
 626: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
 627: LD_VAR 0 12
 631: PPUSH
 632: LD_VAR 0 8
 636: PPUSH
 637: LD_INT 0
 639: PPUSH
 640: CALL_OW 49
// end ;
 644: GO 542
 646: POP
 647: POP
// if enchidnas then
 648: LD_VAR 0 4
 652: IFFALSE 719
// for i = 1 to enchidnas do
 654: LD_ADDR_VAR 0 11
 658: PUSH
 659: DOUBLE
 660: LD_INT 1
 662: DEC
 663: ST_TO_ADDR
 664: LD_VAR 0 4
 668: PUSH
 669: FOR_TO
 670: IFFALSE 717
// begin hc_class = 13 ;
 672: LD_ADDR_OWVAR 28
 676: PUSH
 677: LD_INT 13
 679: ST_TO_ADDR
// hc_gallery =  ;
 680: LD_ADDR_OWVAR 33
 684: PUSH
 685: LD_STRING 
 687: ST_TO_ADDR
// animal := CreateHuman ;
 688: LD_ADDR_VAR 0 12
 692: PUSH
 693: CALL_OW 44
 697: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
 698: LD_VAR 0 12
 702: PPUSH
 703: LD_VAR 0 8
 707: PPUSH
 708: LD_INT 0
 710: PPUSH
 711: CALL_OW 49
// end ;
 715: GO 669
 717: POP
 718: POP
// if fishes then
 719: LD_VAR 0 7
 723: IFFALSE 790
// for i = 1 to fishes do
 725: LD_ADDR_VAR 0 11
 729: PUSH
 730: DOUBLE
 731: LD_INT 1
 733: DEC
 734: ST_TO_ADDR
 735: LD_VAR 0 7
 739: PUSH
 740: FOR_TO
 741: IFFALSE 788
// begin hc_class = 20 ;
 743: LD_ADDR_OWVAR 28
 747: PUSH
 748: LD_INT 20
 750: ST_TO_ADDR
// hc_gallery =  ;
 751: LD_ADDR_OWVAR 33
 755: PUSH
 756: LD_STRING 
 758: ST_TO_ADDR
// animal := CreateHuman ;
 759: LD_ADDR_VAR 0 12
 763: PUSH
 764: CALL_OW 44
 768: ST_TO_ADDR
// PlaceUnitArea ( animal , wat_area , false ) ;
 769: LD_VAR 0 12
 773: PPUSH
 774: LD_VAR 0 9
 778: PPUSH
 779: LD_INT 0
 781: PPUSH
 782: CALL_OW 49
// end ;
 786: GO 740
 788: POP
 789: POP
// end ;
 790: LD_VAR 0 10
 794: RET
// export function SeeUnit ( observer , unit ) ; var i , tmp ; begin
 795: LD_INT 0
 797: PPUSH
 798: PPUSH
 799: PPUSH
// if not observer or not unit then
 800: LD_VAR 0 1
 804: NOT
 805: PUSH
 806: LD_VAR 0 2
 810: NOT
 811: OR
 812: IFFALSE 816
// exit ;
 814: GO 864
// if not See ( GetSide ( observer ) , unit ) then
 816: LD_VAR 0 1
 820: PPUSH
 821: CALL_OW 255
 825: PPUSH
 826: LD_VAR 0 2
 830: PPUSH
 831: CALL_OW 292
 835: NOT
 836: IFFALSE 840
// exit ;
 838: GO 864
// result := GetDistUnits ( observer , unit ) < 12 ;
 840: LD_ADDR_VAR 0 3
 844: PUSH
 845: LD_VAR 0 1
 849: PPUSH
 850: LD_VAR 0 2
 854: PPUSH
 855: CALL_OW 296
 859: PUSH
 860: LD_INT 12
 862: LESS
 863: ST_TO_ADDR
// end ; end_of_file
 864: LD_VAR 0 3
 868: RET
// export Heike , Olaf , Givi , Mike , Kamil ; export function PrepareHeike ; begin
 869: LD_INT 0
 871: PPUSH
// CenterNowOnXY ( 66 , 26 ) ;
 872: LD_INT 66
 874: PPUSH
 875: LD_INT 26
 877: PPUSH
 878: CALL_OW 86
// uc_side := 2 ;
 882: LD_ADDR_OWVAR 20
 886: PUSH
 887: LD_INT 2
 889: ST_TO_ADDR
// uc_nation := 2 ;
 890: LD_ADDR_OWVAR 21
 894: PUSH
 895: LD_INT 2
 897: ST_TO_ADDR
// Heike := NewCharacter ( Heike ) ;
 898: LD_ADDR_EXP 14
 902: PUSH
 903: LD_STRING Heike
 905: PPUSH
 906: CALL_OW 25
 910: ST_TO_ADDR
// PlaceUnitXY ( Heike , 66 , 26 , true ) ;
 911: LD_EXP 14
 915: PPUSH
 916: LD_INT 66
 918: PPUSH
 919: LD_INT 26
 921: PPUSH
 922: LD_INT 1
 924: PPUSH
 925: CALL_OW 48
// end ;
 929: LD_VAR 0 1
 933: RET
// export function PrepareArabian ; begin
 934: LD_INT 0
 936: PPUSH
// uc_side := 5 ;
 937: LD_ADDR_OWVAR 20
 941: PUSH
 942: LD_INT 5
 944: ST_TO_ADDR
// uc_nation := 2 ;
 945: LD_ADDR_OWVAR 21
 949: PUSH
 950: LD_INT 2
 952: ST_TO_ADDR
// Olaf := NewCharacter ( Olaf ) ;
 953: LD_ADDR_EXP 15
 957: PUSH
 958: LD_STRING Olaf
 960: PPUSH
 961: CALL_OW 25
 965: ST_TO_ADDR
// PlaceUnitXY ( Olaf , 39 , 52 , false ) ;
 966: LD_EXP 15
 970: PPUSH
 971: LD_INT 39
 973: PPUSH
 974: LD_INT 52
 976: PPUSH
 977: LD_INT 0
 979: PPUSH
 980: CALL_OW 48
// Givi := NewCharacter ( Maisuradze ) ;
 984: LD_ADDR_EXP 16
 988: PUSH
 989: LD_STRING Maisuradze
 991: PPUSH
 992: CALL_OW 25
 996: ST_TO_ADDR
// PlaceUnitXY ( Givi , 55 , 90 , false ) ;
 997: LD_EXP 16
1001: PPUSH
1002: LD_INT 55
1004: PPUSH
1005: LD_INT 90
1007: PPUSH
1008: LD_INT 0
1010: PPUSH
1011: CALL_OW 48
// ComTurnXY ( Givi , 53 , 89 ) ;
1015: LD_EXP 16
1019: PPUSH
1020: LD_INT 53
1022: PPUSH
1023: LD_INT 89
1025: PPUSH
1026: CALL_OW 118
// Mike := NewCharacter ( Mike ) ;
1030: LD_ADDR_EXP 17
1034: PUSH
1035: LD_STRING Mike
1037: PPUSH
1038: CALL_OW 25
1042: ST_TO_ADDR
// PlaceUnitXY ( Mike , 53 , 87 , false ) ;
1043: LD_EXP 17
1047: PPUSH
1048: LD_INT 53
1050: PPUSH
1051: LD_INT 87
1053: PPUSH
1054: LD_INT 0
1056: PPUSH
1057: CALL_OW 48
// ComTurnXY ( Mike , 53 , 89 ) ;
1061: LD_EXP 17
1065: PPUSH
1066: LD_INT 53
1068: PPUSH
1069: LD_INT 89
1071: PPUSH
1072: CALL_OW 118
// end ;
1076: LD_VAR 0 1
1080: RET
// export function PreparePrison ; begin
1081: LD_INT 0
1083: PPUSH
// uc_side := 5 ;
1084: LD_ADDR_OWVAR 20
1088: PUSH
1089: LD_INT 5
1091: ST_TO_ADDR
// uc_nation := 2 ;
1092: LD_ADDR_OWVAR 21
1096: PUSH
1097: LD_INT 2
1099: ST_TO_ADDR
// Kamil := NewCharacter ( Kamil ) ;
1100: LD_ADDR_EXP 18
1104: PUSH
1105: LD_STRING Kamil
1107: PPUSH
1108: CALL_OW 25
1112: ST_TO_ADDR
// if Difficulty > 1 then
1113: LD_OWVAR 67
1117: PUSH
1118: LD_INT 1
1120: GREATER
1121: IFFALSE 1137
// PlaceHumanInUnit ( Kamil , northDep ) else
1123: LD_EXP 18
1127: PPUSH
1128: LD_INT 2
1130: PPUSH
1131: CALL_OW 52
1135: GO 1149
// PlaceHumanInUnit ( Kamil , southDep ) ;
1137: LD_EXP 18
1141: PPUSH
1142: LD_INT 8
1144: PPUSH
1145: CALL_OW 52
// uc_side := 3 ;
1149: LD_ADDR_OWVAR 20
1153: PUSH
1154: LD_INT 3
1156: ST_TO_ADDR
// uc_nation := 3 ;
1157: LD_ADDR_OWVAR 21
1161: PUSH
1162: LD_INT 3
1164: ST_TO_ADDR
// PrepareHuman ( false , 2 , 1 ) ;
1165: LD_INT 0
1167: PPUSH
1168: LD_INT 2
1170: PPUSH
1171: LD_INT 1
1173: PPUSH
1174: CALL_OW 380
// if Difficulty > 1 then
1178: LD_OWVAR 67
1182: PUSH
1183: LD_INT 1
1185: GREATER
1186: IFFALSE 1202
// PlaceHumanInUnit ( CreateHuman , southDep ) else
1188: CALL_OW 44
1192: PPUSH
1193: LD_INT 8
1195: PPUSH
1196: CALL_OW 52
1200: GO 1214
// PlaceHumanInUnit ( CreateHuman , northDep ) ;
1202: CALL_OW 44
1206: PPUSH
1207: LD_INT 2
1209: PPUSH
1210: CALL_OW 52
// end ; end_of_file
1214: LD_VAR 0 1
1218: RET
// export russianPatrol , russianForestPatrol , russianForces , russianTank ; export function PrepareRussianPatrol ; var i , un ; begin
1219: LD_INT 0
1221: PPUSH
1222: PPUSH
1223: PPUSH
// uc_side := 3 ;
1224: LD_ADDR_OWVAR 20
1228: PUSH
1229: LD_INT 3
1231: ST_TO_ADDR
// uc_nation := 3 ;
1232: LD_ADDR_OWVAR 21
1236: PUSH
1237: LD_INT 3
1239: ST_TO_ADDR
// russianPatrol := [ ] ;
1240: LD_ADDR_EXP 19
1244: PUSH
1245: EMPTY
1246: ST_TO_ADDR
// for i = 1 to 3 do
1247: LD_ADDR_VAR 0 2
1251: PUSH
1252: DOUBLE
1253: LD_INT 1
1255: DEC
1256: ST_TO_ADDR
1257: LD_INT 3
1259: PUSH
1260: FOR_TO
1261: IFFALSE 1357
// begin PrepareHuman ( sex_male , 1 , 0 ) ;
1263: LD_INT 1
1265: PPUSH
1266: LD_INT 1
1268: PPUSH
1269: LD_INT 0
1271: PPUSH
1272: CALL_OW 380
// hc_attr := [ 9 , rand ( 10 , 11 ) ] ;
1276: LD_ADDR_OWVAR 29
1280: PUSH
1281: LD_INT 9
1283: PUSH
1284: LD_INT 10
1286: PPUSH
1287: LD_INT 11
1289: PPUSH
1290: CALL_OW 12
1294: PUSH
1295: EMPTY
1296: LIST
1297: LIST
1298: ST_TO_ADDR
// un := CreateHuman ;
1299: LD_ADDR_VAR 0 3
1303: PUSH
1304: CALL_OW 44
1308: ST_TO_ADDR
// russianPatrol := Replace ( russianPatrol , i , un ) ;
1309: LD_ADDR_EXP 19
1313: PUSH
1314: LD_EXP 19
1318: PPUSH
1319: LD_VAR 0 2
1323: PPUSH
1324: LD_VAR 0 3
1328: PPUSH
1329: CALL_OW 1
1333: ST_TO_ADDR
// PlaceUnitXYR ( un , 26 , 22 , 4 , false ) ;
1334: LD_VAR 0 3
1338: PPUSH
1339: LD_INT 26
1341: PPUSH
1342: LD_INT 22
1344: PPUSH
1345: LD_INT 4
1347: PPUSH
1348: LD_INT 0
1350: PPUSH
1351: CALL_OW 50
// end ;
1355: GO 1260
1357: POP
1358: POP
// end ;
1359: LD_VAR 0 1
1363: RET
// export function PrepareRussian ; var i , un , xy ; begin
1364: LD_INT 0
1366: PPUSH
1367: PPUSH
1368: PPUSH
1369: PPUSH
// uc_side := 3 ;
1370: LD_ADDR_OWVAR 20
1374: PUSH
1375: LD_INT 3
1377: ST_TO_ADDR
// uc_nation := 3 ;
1378: LD_ADDR_OWVAR 21
1382: PUSH
1383: LD_INT 3
1385: ST_TO_ADDR
// russianForces := [ ] ;
1386: LD_ADDR_EXP 21
1390: PUSH
1391: EMPTY
1392: ST_TO_ADDR
// russianForestPatrol := [ ] ;
1393: LD_ADDR_EXP 20
1397: PUSH
1398: EMPTY
1399: ST_TO_ADDR
// xy := AreaToList ( russianForestPatrolArea , 0 ) ;
1400: LD_ADDR_VAR 0 4
1404: PUSH
1405: LD_INT 11
1407: PPUSH
1408: LD_INT 0
1410: PPUSH
1411: CALL_OW 517
1415: ST_TO_ADDR
// for i in FilterAllUnits ( [ f_type , b_depot ] ) do
1416: LD_ADDR_VAR 0 2
1420: PUSH
1421: LD_INT 21
1423: PUSH
1424: LD_INT 0
1426: PUSH
1427: EMPTY
1428: LIST
1429: LIST
1430: PPUSH
1431: CALL_OW 69
1435: PUSH
1436: FOR_IN
1437: IFFALSE 1481
// begin SetResourceType ( GetBase ( i ) , mat_cans , 200 ) ;
1439: LD_VAR 0 2
1443: PPUSH
1444: CALL_OW 274
1448: PPUSH
1449: LD_INT 1
1451: PPUSH
1452: LD_INT 200
1454: PPUSH
1455: CALL_OW 277
// SetResourceType ( GetBase ( i ) , mat_oil , 10 ) ;
1459: LD_VAR 0 2
1463: PPUSH
1464: CALL_OW 274
1468: PPUSH
1469: LD_INT 2
1471: PPUSH
1472: LD_INT 10
1474: PPUSH
1475: CALL_OW 277
// end ;
1479: GO 1436
1481: POP
1482: POP
// for i in FilterAllUnits ( [ f_btype , b_breastwork ] ) do
1483: LD_ADDR_VAR 0 2
1487: PUSH
1488: LD_INT 30
1490: PUSH
1491: LD_INT 31
1493: PUSH
1494: EMPTY
1495: LIST
1496: LIST
1497: PPUSH
1498: CALL_OW 69
1502: PUSH
1503: FOR_IN
1504: IFFALSE 1578
// begin PrepareHuman ( false , 1 , Difficulty - 1 ) ;
1506: LD_INT 0
1508: PPUSH
1509: LD_INT 1
1511: PPUSH
1512: LD_OWVAR 67
1516: PUSH
1517: LD_INT 1
1519: MINUS
1520: PPUSH
1521: CALL_OW 380
// un := CreateHuman ;
1525: LD_ADDR_VAR 0 3
1529: PUSH
1530: CALL_OW 44
1534: ST_TO_ADDR
// SetDir ( un , ( GetDir ( i ) - 3 ) mod 6 ) ;
1535: LD_VAR 0 3
1539: PPUSH
1540: LD_VAR 0 2
1544: PPUSH
1545: CALL_OW 254
1549: PUSH
1550: LD_INT 3
1552: MINUS
1553: PUSH
1554: LD_INT 6
1556: MOD
1557: PPUSH
1558: CALL_OW 233
// PlaceHumanInUnit ( un , i ) ;
1562: LD_VAR 0 3
1566: PPUSH
1567: LD_VAR 0 2
1571: PPUSH
1572: CALL_OW 52
// end ;
1576: GO 1503
1578: POP
1579: POP
// for i = 1 to 5 do
1580: LD_ADDR_VAR 0 2
1584: PUSH
1585: DOUBLE
1586: LD_INT 1
1588: DEC
1589: ST_TO_ADDR
1590: LD_INT 5
1592: PUSH
1593: FOR_TO
1594: IFFALSE 1676
// begin PrepareHuman ( false , 1 , Difficulty ) ;
1596: LD_INT 0
1598: PPUSH
1599: LD_INT 1
1601: PPUSH
1602: LD_OWVAR 67
1606: PPUSH
1607: CALL_OW 380
// un := CreateHuman ;
1611: LD_ADDR_VAR 0 3
1615: PUSH
1616: CALL_OW 44
1620: ST_TO_ADDR
// PlaceUnitArea ( un , russianEastPatrolArea , false ) ;
1621: LD_VAR 0 3
1625: PPUSH
1626: LD_INT 9
1628: PPUSH
1629: LD_INT 0
1631: PPUSH
1632: CALL_OW 49
// ComHold ( un ) ;
1636: LD_VAR 0 3
1640: PPUSH
1641: CALL_OW 140
// russianForces := Replace ( russianForces , russianForces + 1 , un ) ;
1645: LD_ADDR_EXP 21
1649: PUSH
1650: LD_EXP 21
1654: PPUSH
1655: LD_EXP 21
1659: PUSH
1660: LD_INT 1
1662: PLUS
1663: PPUSH
1664: LD_VAR 0 3
1668: PPUSH
1669: CALL_OW 1
1673: ST_TO_ADDR
// end ;
1674: GO 1593
1676: POP
1677: POP
// for i := 1 to Difficulty + 1 do
1678: LD_ADDR_VAR 0 2
1682: PUSH
1683: DOUBLE
1684: LD_INT 1
1686: DEC
1687: ST_TO_ADDR
1688: LD_OWVAR 67
1692: PUSH
1693: LD_INT 1
1695: PLUS
1696: PUSH
1697: FOR_TO
1698: IFFALSE 1798
// begin PrepareHuman ( false , 1 , Difficulty ) ;
1700: LD_INT 0
1702: PPUSH
1703: LD_INT 1
1705: PPUSH
1706: LD_OWVAR 67
1710: PPUSH
1711: CALL_OW 380
// un := CreateHuman ;
1715: LD_ADDR_VAR 0 3
1719: PUSH
1720: CALL_OW 44
1724: ST_TO_ADDR
// PlaceUnitXY ( un , xy [ 1 ] [ i ] , xy [ 2 ] [ i ] , false ) ;
1725: LD_VAR 0 3
1729: PPUSH
1730: LD_VAR 0 4
1734: PUSH
1735: LD_INT 1
1737: ARRAY
1738: PUSH
1739: LD_VAR 0 2
1743: ARRAY
1744: PPUSH
1745: LD_VAR 0 4
1749: PUSH
1750: LD_INT 2
1752: ARRAY
1753: PUSH
1754: LD_VAR 0 2
1758: ARRAY
1759: PPUSH
1760: LD_INT 0
1762: PPUSH
1763: CALL_OW 48
// russianForestPatrol := Replace ( russianForestPatrol , russianForestPatrol + 1 , un ) ;
1767: LD_ADDR_EXP 20
1771: PUSH
1772: LD_EXP 20
1776: PPUSH
1777: LD_EXP 20
1781: PUSH
1782: LD_INT 1
1784: PLUS
1785: PPUSH
1786: LD_VAR 0 3
1790: PPUSH
1791: CALL_OW 1
1795: ST_TO_ADDR
// end ;
1796: GO 1697
1798: POP
1799: POP
// vc_chassis := ru_medium_wheeled ;
1800: LD_ADDR_OWVAR 37
1804: PUSH
1805: LD_INT 21
1807: ST_TO_ADDR
// vc_engine := engine_combustion ;
1808: LD_ADDR_OWVAR 39
1812: PUSH
1813: LD_INT 1
1815: ST_TO_ADDR
// vc_control := control_manual ;
1816: LD_ADDR_OWVAR 38
1820: PUSH
1821: LD_INT 1
1823: ST_TO_ADDR
// vc_weapon := ru_heavy_machine_gun ;
1824: LD_ADDR_OWVAR 40
1828: PUSH
1829: LD_INT 42
1831: ST_TO_ADDR
// russianTank := CreateVehicle ;
1832: LD_ADDR_EXP 22
1836: PUSH
1837: CALL_OW 45
1841: ST_TO_ADDR
// PlaceUnitXY ( russianTank , 121 , 25 , false ) ;
1842: LD_EXP 22
1846: PPUSH
1847: LD_INT 121
1849: PPUSH
1850: LD_INT 25
1852: PPUSH
1853: LD_INT 0
1855: PPUSH
1856: CALL_OW 48
// PrepareHuman ( false , 1 , Difficulty ) ;
1860: LD_INT 0
1862: PPUSH
1863: LD_INT 1
1865: PPUSH
1866: LD_OWVAR 67
1870: PPUSH
1871: CALL_OW 380
// PlaceHumanInUnit ( CreateHuman , russianTank ) ;
1875: CALL_OW 44
1879: PPUSH
1880: LD_EXP 22
1884: PPUSH
1885: CALL_OW 52
// end ;
1889: LD_VAR 0 1
1893: RET
// every 0 0$10 trigger russianForestPatrol do var i , d , l , x , y ;
1894: LD_EXP 20
1898: IFFALSE 2105
1900: GO 1902
1902: DISABLE
1903: LD_INT 0
1905: PPUSH
1906: PPUSH
1907: PPUSH
1908: PPUSH
1909: PPUSH
// begin enable ;
1910: ENABLE
// for i in russianForestPatrol do
1911: LD_ADDR_VAR 0 1
1915: PUSH
1916: LD_EXP 20
1920: PUSH
1921: FOR_IN
1922: IFFALSE 2103
// begin if GetDistUnitXY ( i , 53 , 89 ) < 30 then
1924: LD_VAR 0 1
1928: PPUSH
1929: LD_INT 53
1931: PPUSH
1932: LD_INT 89
1934: PPUSH
1935: CALL_OW 297
1939: PUSH
1940: LD_INT 30
1942: LESS
1943: IFFALSE 1962
// begin ComMoveXY ( i , 114 , 80 ) ;
1945: LD_VAR 0 1
1949: PPUSH
1950: LD_INT 114
1952: PPUSH
1953: LD_INT 80
1955: PPUSH
1956: CALL_OW 111
// continue ;
1960: GO 1921
// end ; if not HasTask ( i ) then
1962: LD_VAR 0 1
1966: PPUSH
1967: CALL_OW 314
1971: NOT
1972: IFFALSE 2101
// begin d := rand ( 0 , 5 ) ;
1974: LD_ADDR_VAR 0 2
1978: PUSH
1979: LD_INT 0
1981: PPUSH
1982: LD_INT 5
1984: PPUSH
1985: CALL_OW 12
1989: ST_TO_ADDR
// l := rand ( 3 , 7 ) ;
1990: LD_ADDR_VAR 0 3
1994: PUSH
1995: LD_INT 3
1997: PPUSH
1998: LD_INT 7
2000: PPUSH
2001: CALL_OW 12
2005: ST_TO_ADDR
// x := ShiftX ( GetX ( i ) , d , l ) ;
2006: LD_ADDR_VAR 0 4
2010: PUSH
2011: LD_VAR 0 1
2015: PPUSH
2016: CALL_OW 250
2020: PPUSH
2021: LD_VAR 0 2
2025: PPUSH
2026: LD_VAR 0 3
2030: PPUSH
2031: CALL_OW 272
2035: ST_TO_ADDR
// y := ShiftY ( GetY ( i ) , d , l ) ;
2036: LD_ADDR_VAR 0 5
2040: PUSH
2041: LD_VAR 0 1
2045: PPUSH
2046: CALL_OW 251
2050: PPUSH
2051: LD_VAR 0 2
2055: PPUSH
2056: LD_VAR 0 3
2060: PPUSH
2061: CALL_OW 273
2065: ST_TO_ADDR
// if ValidHex ( x , y ) then
2066: LD_VAR 0 4
2070: PPUSH
2071: LD_VAR 0 5
2075: PPUSH
2076: CALL_OW 488
2080: IFFALSE 2101
// ComAgressiveMove ( i , x , y ) ;
2082: LD_VAR 0 1
2086: PPUSH
2087: LD_VAR 0 4
2091: PPUSH
2092: LD_VAR 0 5
2096: PPUSH
2097: CALL_OW 114
// end ; end ;
2101: GO 1921
2103: POP
2104: POP
// end ;
2105: PPOPN 5
2107: END
// every 0 0$1 trigger IsOk ( russianTank ) and GetSide ( russianTank ) = 3 do
2108: LD_EXP 22
2112: PPUSH
2113: CALL_OW 302
2117: PUSH
2118: LD_EXP 22
2122: PPUSH
2123: CALL_OW 255
2127: PUSH
2128: LD_INT 3
2130: EQUAL
2131: AND
2132: IFFALSE 2399
2134: GO 2136
2136: DISABLE
// begin enable ;
2137: ENABLE
// if IsAt ( russianTank , 124 , 25 ) then
2138: LD_EXP 22
2142: PPUSH
2143: LD_INT 124
2145: PPUSH
2146: LD_INT 25
2148: PPUSH
2149: CALL_OW 307
2153: IFFALSE 2167
// SetFuel ( russianTank , 100 ) ;
2155: LD_EXP 22
2159: PPUSH
2160: LD_INT 100
2162: PPUSH
2163: CALL_OW 240
// if HasTask ( russianTank ) then
2167: LD_EXP 22
2171: PPUSH
2172: CALL_OW 314
2176: IFFALSE 2180
// exit ;
2178: GO 2399
// AddComAgressiveMove ( russianTank , 121 , 25 ) ;
2180: LD_EXP 22
2184: PPUSH
2185: LD_INT 121
2187: PPUSH
2188: LD_INT 25
2190: PPUSH
2191: CALL_OW 174
// AddComAgressiveMove ( russianTank , 122 , 48 ) ;
2195: LD_EXP 22
2199: PPUSH
2200: LD_INT 122
2202: PPUSH
2203: LD_INT 48
2205: PPUSH
2206: CALL_OW 174
// AddComWait ( russianTank , 0 0$2 ) ;
2210: LD_EXP 22
2214: PPUSH
2215: LD_INT 70
2217: PPUSH
2218: CALL_OW 202
// AddComAgressiveMove ( russianTank , 107 , 57 ) ;
2222: LD_EXP 22
2226: PPUSH
2227: LD_INT 107
2229: PPUSH
2230: LD_INT 57
2232: PPUSH
2233: CALL_OW 174
// AddComWait ( russianTank , 0 0$2 ) ;
2237: LD_EXP 22
2241: PPUSH
2242: LD_INT 70
2244: PPUSH
2245: CALL_OW 202
// AddComAgressiveMove ( russianTank , 100 , 61 ) ;
2249: LD_EXP 22
2253: PPUSH
2254: LD_INT 100
2256: PPUSH
2257: LD_INT 61
2259: PPUSH
2260: CALL_OW 174
// AddComWait ( russianTank , 0 0$2 ) ;
2264: LD_EXP 22
2268: PPUSH
2269: LD_INT 70
2271: PPUSH
2272: CALL_OW 202
// AddComAgressiveMove ( russianTank , 78 , 64 ) ;
2276: LD_EXP 22
2280: PPUSH
2281: LD_INT 78
2283: PPUSH
2284: LD_INT 64
2286: PPUSH
2287: CALL_OW 174
// AddComWait ( russianTank , 0 0$2 ) ;
2291: LD_EXP 22
2295: PPUSH
2296: LD_INT 70
2298: PPUSH
2299: CALL_OW 202
// AddComAgressiveMove ( russianTank , 100 , 61 ) ;
2303: LD_EXP 22
2307: PPUSH
2308: LD_INT 100
2310: PPUSH
2311: LD_INT 61
2313: PPUSH
2314: CALL_OW 174
// AddComWait ( russianTank , 0 0$2 ) ;
2318: LD_EXP 22
2322: PPUSH
2323: LD_INT 70
2325: PPUSH
2326: CALL_OW 202
// AddComAgressiveMove ( russianTank , 107 , 57 ) ;
2330: LD_EXP 22
2334: PPUSH
2335: LD_INT 107
2337: PPUSH
2338: LD_INT 57
2340: PPUSH
2341: CALL_OW 174
// AddComWait ( russianTank , 0 0$2 ) ;
2345: LD_EXP 22
2349: PPUSH
2350: LD_INT 70
2352: PPUSH
2353: CALL_OW 202
// AddComAgressiveMove ( russianTank , 122 , 48 ) ;
2357: LD_EXP 22
2361: PPUSH
2362: LD_INT 122
2364: PPUSH
2365: LD_INT 48
2367: PPUSH
2368: CALL_OW 174
// AddComWait ( russianTank , 0 0$2 ) ;
2372: LD_EXP 22
2376: PPUSH
2377: LD_INT 70
2379: PPUSH
2380: CALL_OW 202
// AddComMoveXY ( russianTank , 124 , 25 ) ;
2384: LD_EXP 22
2388: PPUSH
2389: LD_INT 124
2391: PPUSH
2392: LD_INT 25
2394: PPUSH
2395: CALL_OW 171
// end ; end_of_file
2399: END
// export Johnny ; export function PrepareJohnny ; begin
2400: LD_INT 0
2402: PPUSH
// uc_side := 1 ;
2403: LD_ADDR_OWVAR 20
2407: PUSH
2408: LD_INT 1
2410: ST_TO_ADDR
// uc_nation := 1 ;
2411: LD_ADDR_OWVAR 21
2415: PUSH
2416: LD_INT 1
2418: ST_TO_ADDR
// Johnny := NewCharacter ( Harris ) ;
2419: LD_ADDR_EXP 23
2423: PUSH
2424: LD_STRING Harris
2426: PPUSH
2427: CALL_OW 25
2431: ST_TO_ADDR
// SetDir ( Johnny , 1 ) ;
2432: LD_EXP 23
2436: PPUSH
2437: LD_INT 1
2439: PPUSH
2440: CALL_OW 233
// PlaceUnitArea ( Johnny , johnnySpawn , false ) ;
2444: LD_EXP 23
2448: PPUSH
2449: LD_INT 8
2451: PPUSH
2452: LD_INT 0
2454: PPUSH
2455: CALL_OW 49
// ComCrawl ( Johnny ) ;
2459: LD_EXP 23
2463: PPUSH
2464: CALL_OW 137
// end ;
2468: LD_VAR 0 1
2472: RET
// export function PreparePatrolTank ; var veh , un ; begin
2473: LD_INT 0
2475: PPUSH
2476: PPUSH
2477: PPUSH
// uc_side := 1 ;
2478: LD_ADDR_OWVAR 20
2482: PUSH
2483: LD_INT 1
2485: ST_TO_ADDR
// uc_nation := 1 ;
2486: LD_ADDR_OWVAR 21
2490: PUSH
2491: LD_INT 1
2493: ST_TO_ADDR
// PrepareHuman ( sex_male , 3 , 1 ) ;
2494: LD_INT 1
2496: PPUSH
2497: LD_INT 3
2499: PPUSH
2500: LD_INT 1
2502: PPUSH
2503: CALL_OW 380
// un := CreateHuman ;
2507: LD_ADDR_VAR 0 3
2511: PUSH
2512: CALL_OW 44
2516: ST_TO_ADDR
// vc_chassis := us_light_wheeled ;
2517: LD_ADDR_OWVAR 37
2521: PUSH
2522: LD_INT 1
2524: ST_TO_ADDR
// vc_engine := engine_combustion ;
2525: LD_ADDR_OWVAR 39
2529: PUSH
2530: LD_INT 1
2532: ST_TO_ADDR
// vc_control := control_manual ;
2533: LD_ADDR_OWVAR 38
2537: PUSH
2538: LD_INT 1
2540: ST_TO_ADDR
// vc_weapon := us_machine_gun ;
2541: LD_ADDR_OWVAR 40
2545: PUSH
2546: LD_INT 2
2548: ST_TO_ADDR
// vc_fuel_battery := 22 ;
2549: LD_ADDR_OWVAR 41
2553: PUSH
2554: LD_INT 22
2556: ST_TO_ADDR
// veh := CreateVehicle ;
2557: LD_ADDR_VAR 0 2
2561: PUSH
2562: CALL_OW 45
2566: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
2567: LD_VAR 0 2
2571: PPUSH
2572: LD_INT 1
2574: PPUSH
2575: CALL_OW 233
// PlaceUnitXY ( veh , 31 , 58 , false ) ;
2579: LD_VAR 0 2
2583: PPUSH
2584: LD_INT 31
2586: PPUSH
2587: LD_INT 58
2589: PPUSH
2590: LD_INT 0
2592: PPUSH
2593: CALL_OW 48
// PlaceHumanInUnit ( un , veh ) ;
2597: LD_VAR 0 3
2601: PPUSH
2602: LD_VAR 0 2
2606: PPUSH
2607: CALL_OW 52
// result := un ;
2611: LD_ADDR_VAR 0 1
2615: PUSH
2616: LD_VAR 0 3
2620: ST_TO_ADDR
// end ; end_of_file
2621: LD_VAR 0 1
2625: RET
// export function Action ; begin
2626: LD_INT 0
2628: PPUSH
// InGameOn ;
2629: CALL_OW 8
// wait ( 0 0$4 ) ;
2633: LD_INT 140
2635: PPUSH
2636: CALL_OW 67
// Say ( Heike , DH-start-1 ) ;
2640: LD_EXP 14
2644: PPUSH
2645: LD_STRING DH-start-1
2647: PPUSH
2648: CALL_OW 88
// ComMoveXY ( Heike , 71 , 29 ) ;
2652: LD_EXP 14
2656: PPUSH
2657: LD_INT 71
2659: PPUSH
2660: LD_INT 29
2662: PPUSH
2663: CALL_OW 111
// wait ( 0 0$4 ) ;
2667: LD_INT 140
2669: PPUSH
2670: CALL_OW 67
// ComMoveXY ( Heike , 71 , 33 ) ;
2674: LD_EXP 14
2678: PPUSH
2679: LD_INT 71
2681: PPUSH
2682: LD_INT 33
2684: PPUSH
2685: CALL_OW 111
// AddComTurnXY ( Heike , 71 , 34 ) ;
2689: LD_EXP 14
2693: PPUSH
2694: LD_INT 71
2696: PPUSH
2697: LD_INT 34
2699: PPUSH
2700: CALL_OW 178
// wait ( 0 0$4 ) ;
2704: LD_INT 140
2706: PPUSH
2707: CALL_OW 67
// Say ( Heike , DH-start-2 ) ;
2711: LD_EXP 14
2715: PPUSH
2716: LD_STRING DH-start-2
2718: PPUSH
2719: CALL_OW 88
// wait ( 0 0$4 ) ;
2723: LD_INT 140
2725: PPUSH
2726: CALL_OW 67
// ComMoveXY ( Heike , 65 , 26 ) ;
2730: LD_EXP 14
2734: PPUSH
2735: LD_INT 65
2737: PPUSH
2738: LD_INT 26
2740: PPUSH
2741: CALL_OW 111
// Say ( Heike , DH-start-3 ) ;
2745: LD_EXP 14
2749: PPUSH
2750: LD_STRING DH-start-3
2752: PPUSH
2753: CALL_OW 88
// InGameOff ;
2757: CALL_OW 9
// ChangeMissionObjectives ( O1_cont ) ;
2761: LD_STRING O1_cont
2763: PPUSH
2764: CALL_OW 337
// SaveForQuickRestart ;
2768: CALL_OW 22
// missionStarted := true ;
2772: LD_ADDR_EXP 1
2776: PUSH
2777: LD_INT 1
2779: ST_TO_ADDR
// PrepareJohnny ;
2780: CALL 2400 0 0
// end ;
2784: LD_VAR 0 1
2788: RET
// every 0 0$1 trigger not olafSpotted and not mercenariesSpotted and See ( 2 , Johnny ) and NearestUnitToUnit ( FilterAllUnits ( [ f_side , 1 ] ) , Heike ) = Johnny do
2789: LD_EXP 8
2793: NOT
2794: PUSH
2795: LD_EXP 7
2799: NOT
2800: AND
2801: PUSH
2802: LD_INT 2
2804: PPUSH
2805: LD_EXP 23
2809: PPUSH
2810: CALL_OW 292
2814: AND
2815: PUSH
2816: LD_INT 22
2818: PUSH
2819: LD_INT 1
2821: PUSH
2822: EMPTY
2823: LIST
2824: LIST
2825: PPUSH
2826: CALL_OW 69
2830: PPUSH
2831: LD_EXP 14
2835: PPUSH
2836: CALL_OW 74
2840: PUSH
2841: LD_EXP 23
2845: EQUAL
2846: AND
2847: IFFALSE 3759
2849: GO 2851
2851: DISABLE
// begin InGameOn ;
2852: CALL_OW 8
// CenterNowOnUnits ( Heike ) ;
2856: LD_EXP 14
2860: PPUSH
2861: CALL_OW 87
// Say ( Johnny , DJ-ambush-1 ) ;
2865: LD_EXP 23
2869: PPUSH
2870: LD_STRING DJ-ambush-1
2872: PPUSH
2873: CALL_OW 88
// wait ( 0 0$0.3 ) ;
2877: LD_INT 10
2879: PPUSH
2880: CALL_OW 67
// ComTurnUnit ( Heike , Johnny ) ;
2884: LD_EXP 14
2888: PPUSH
2889: LD_EXP 23
2893: PPUSH
2894: CALL_OW 119
// Say ( Heike , DH-ambush-1 ) ;
2898: LD_EXP 14
2902: PPUSH
2903: LD_STRING DH-ambush-1
2905: PPUSH
2906: CALL_OW 88
// wait ( 0 0$1 ) ;
2910: LD_INT 35
2912: PPUSH
2913: CALL_OW 67
// ComWalk ( Johnny ) ;
2917: LD_EXP 23
2921: PPUSH
2922: CALL_OW 138
// AddComMoveUnit ( Johnny , Heike ) ;
2926: LD_EXP 23
2930: PPUSH
2931: LD_EXP 14
2935: PPUSH
2936: CALL_OW 172
// repeat wait ( 0 0$1 ) ;
2940: LD_INT 35
2942: PPUSH
2943: CALL_OW 67
// until GetDistUnits ( Johnny , Heike ) < 4 ;
2947: LD_EXP 23
2951: PPUSH
2952: LD_EXP 14
2956: PPUSH
2957: CALL_OW 296
2961: PUSH
2962: LD_INT 4
2964: LESS
2965: IFFALSE 2940
// ComTurnUnit ( Johnny , Heike ) ;
2967: LD_EXP 23
2971: PPUSH
2972: LD_EXP 14
2976: PPUSH
2977: CALL_OW 119
// Say ( Johnny , DJ-ambush-2 ) ;
2981: LD_EXP 23
2985: PPUSH
2986: LD_STRING DJ-ambush-2
2988: PPUSH
2989: CALL_OW 88
// Say ( Heike , DH-ambush-2 ) ;
2993: LD_EXP 14
2997: PPUSH
2998: LD_STRING DH-ambush-2
3000: PPUSH
3001: CALL_OW 88
// Say ( Johnny , DJ-ambush-3 ) ;
3005: LD_EXP 23
3009: PPUSH
3010: LD_STRING DJ-ambush-3
3012: PPUSH
3013: CALL_OW 88
// Say ( Heike , DH-ambush-3 ) ;
3017: LD_EXP 14
3021: PPUSH
3022: LD_STRING DH-ambush-3
3024: PPUSH
3025: CALL_OW 88
// Say ( Johnny , DJ-ambush-4 ) ;
3029: LD_EXP 23
3033: PPUSH
3034: LD_STRING DJ-ambush-4
3036: PPUSH
3037: CALL_OW 88
// ComTurnXY ( Heike , 39 , 22 ) ;
3041: LD_EXP 14
3045: PPUSH
3046: LD_INT 39
3048: PPUSH
3049: LD_INT 22
3051: PPUSH
3052: CALL_OW 118
// Say ( Heike , DH-ambush-4 ) ;
3056: LD_EXP 14
3060: PPUSH
3061: LD_STRING DH-ambush-4
3063: PPUSH
3064: CALL_OW 88
// PrepareRussianPatrol ;
3068: CALL 1219 0 0
// PlaceSeeing ( 39 , 22 , 2 , - 12 ) ;
3072: LD_INT 39
3074: PPUSH
3075: LD_INT 22
3077: PPUSH
3078: LD_INT 2
3080: PPUSH
3081: LD_INT 12
3083: NEG
3084: PPUSH
3085: CALL_OW 330
// CenterOnXY ( 39 , 22 ) ;
3089: LD_INT 39
3091: PPUSH
3092: LD_INT 22
3094: PPUSH
3095: CALL_OW 84
// ComMoveXY ( russianPatrol , 39 , 23 ) ;
3099: LD_EXP 19
3103: PPUSH
3104: LD_INT 39
3106: PPUSH
3107: LD_INT 23
3109: PPUSH
3110: CALL_OW 111
// ComMoveXY ( [ Heike , Johnny ] , 39 , 7 ) ;
3114: LD_EXP 14
3118: PUSH
3119: LD_EXP 23
3123: PUSH
3124: EMPTY
3125: LIST
3126: LIST
3127: PPUSH
3128: LD_INT 39
3130: PPUSH
3131: LD_INT 7
3133: PPUSH
3134: CALL_OW 111
// AddComTurnUnit ( [ Heike , Johnny ] , russianPatrol [ 1 ] ) ;
3138: LD_EXP 14
3142: PUSH
3143: LD_EXP 23
3147: PUSH
3148: EMPTY
3149: LIST
3150: LIST
3151: PPUSH
3152: LD_EXP 19
3156: PUSH
3157: LD_INT 1
3159: ARRAY
3160: PPUSH
3161: CALL_OW 179
// Say ( russianPatrol [ 1 ] , DR-ambush-5 ) ;
3165: LD_EXP 19
3169: PUSH
3170: LD_INT 1
3172: ARRAY
3173: PPUSH
3174: LD_STRING DR-ambush-5
3176: PPUSH
3177: CALL_OW 88
// Say ( russianPatrol [ 2 ] , DR1-ambush-5 ) ;
3181: LD_EXP 19
3185: PUSH
3186: LD_INT 2
3188: ARRAY
3189: PPUSH
3190: LD_STRING DR1-ambush-5
3192: PPUSH
3193: CALL_OW 88
// repeat wait ( 0 0$1 ) ;
3197: LD_INT 35
3199: PPUSH
3200: CALL_OW 67
// until GetDistUnitXY ( Heike , 39 , 7 ) < 6 ;
3204: LD_EXP 14
3208: PPUSH
3209: LD_INT 39
3211: PPUSH
3212: LD_INT 7
3214: PPUSH
3215: CALL_OW 297
3219: PUSH
3220: LD_INT 6
3222: LESS
3223: IFFALSE 3197
// AddComTurnUnit ( Heike , russianPatrol [ 1 ] ) ;
3225: LD_EXP 14
3229: PPUSH
3230: LD_EXP 19
3234: PUSH
3235: LD_INT 1
3237: ARRAY
3238: PPUSH
3239: CALL_OW 179
// ComTurnUnit ( Johnny , Heike ) ;
3243: LD_EXP 23
3247: PPUSH
3248: LD_EXP 14
3252: PPUSH
3253: CALL_OW 119
// Say ( Johnny , DJ-ambush-6 ) ;
3257: LD_EXP 23
3261: PPUSH
3262: LD_STRING DJ-ambush-6
3264: PPUSH
3265: CALL_OW 88
// Say ( Heike , DH-ambush-6 ) ;
3269: LD_EXP 14
3273: PPUSH
3274: LD_STRING DH-ambush-6
3276: PPUSH
3277: CALL_OW 88
// InGameOff ;
3281: CALL_OW 9
// meetJohnny := true ;
3285: LD_ADDR_EXP 3
3289: PUSH
3290: LD_INT 1
3292: ST_TO_ADDR
// ComFree ( Johnny ) ;
3293: LD_EXP 23
3297: PPUSH
3298: CALL_OW 139
// ChangeMissionObjectives ( O2_ambush_cont ) ;
3302: LD_STRING O2_ambush_cont
3304: PPUSH
3305: CALL_OW 337
// ComMoveXY ( russianPatrol [ russianPatrol ] , 29 , 15 ) ;
3309: LD_EXP 19
3313: PUSH
3314: LD_EXP 19
3318: ARRAY
3319: PPUSH
3320: LD_INT 29
3322: PPUSH
3323: LD_INT 15
3325: PPUSH
3326: CALL_OW 111
// wait ( 0 0$2 ) ;
3330: LD_INT 70
3332: PPUSH
3333: CALL_OW 67
// if not See ( 3 , Heike ) and not See ( 3 , Johnny ) then
3337: LD_INT 3
3339: PPUSH
3340: LD_EXP 14
3344: PPUSH
3345: CALL_OW 292
3349: NOT
3350: PUSH
3351: LD_INT 3
3353: PPUSH
3354: LD_EXP 23
3358: PPUSH
3359: CALL_OW 292
3363: NOT
3364: AND
3365: IFFALSE 3386
// ComMoveXY ( russianPatrol [ 1 ] , 58 , 32 ) ;
3367: LD_EXP 19
3371: PUSH
3372: LD_INT 1
3374: ARRAY
3375: PPUSH
3376: LD_INT 58
3378: PPUSH
3379: LD_INT 32
3381: PPUSH
3382: CALL_OW 111
// wait ( [ 0 0$50 , 0 0$40 , 0 0$35 ] [ Difficulty ] ) ;
3386: LD_INT 1750
3388: PUSH
3389: LD_INT 1400
3391: PUSH
3392: LD_INT 1225
3394: PUSH
3395: EMPTY
3396: LIST
3397: LIST
3398: LIST
3399: PUSH
3400: LD_OWVAR 67
3404: ARRAY
3405: PPUSH
3406: CALL_OW 67
// ComAgressiveMove ( russianPatrol , 43 , 13 ) ;
3410: LD_EXP 19
3414: PPUSH
3415: LD_INT 43
3417: PPUSH
3418: LD_INT 13
3420: PPUSH
3421: CALL_OW 114
// repeat wait ( 0 0$1 ) ;
3425: LD_INT 35
3427: PPUSH
3428: CALL_OW 67
// until not russianPatrol ;
3432: LD_EXP 19
3436: NOT
3437: IFFALSE 3425
// RemoveSeeing ( 39 , 22 , 2 ) ;
3439: LD_INT 39
3441: PPUSH
3442: LD_INT 22
3444: PPUSH
3445: LD_INT 2
3447: PPUSH
3448: CALL_OW 331
// if GetAttitude ( 1 , 2 ) = att_enemy then
3452: LD_INT 1
3454: PPUSH
3455: LD_INT 2
3457: PPUSH
3458: CALL_OW 81
3462: PUSH
3463: LD_INT 2
3465: EQUAL
3466: IFFALSE 3470
// exit ;
3468: GO 3759
// if not IsOk ( Johnny ) then
3470: LD_EXP 23
3474: PPUSH
3475: CALL_OW 302
3479: NOT
3480: IFFALSE 3491
// begin ChangeMissionObjectives ( O2_ambush_out_cont ) ;
3482: LD_STRING O2_ambush_out_cont
3484: PPUSH
3485: CALL_OW 337
// exit ;
3489: GO 3759
// end ; if GetDistUnits ( Heike , Johnny ) > 10 then
3491: LD_EXP 14
3495: PPUSH
3496: LD_EXP 23
3500: PPUSH
3501: CALL_OW 296
3505: PUSH
3506: LD_INT 10
3508: GREATER
3509: IFFALSE 3552
// begin ComMoveUnit ( Johnny , Heike ) ;
3511: LD_EXP 23
3515: PPUSH
3516: LD_EXP 14
3520: PPUSH
3521: CALL_OW 112
// repeat wait ( 0 0$1 ) ;
3525: LD_INT 35
3527: PPUSH
3528: CALL_OW 67
// until GetDistUnits ( Johnny , Heike ) < 6 ;
3532: LD_EXP 23
3536: PPUSH
3537: LD_EXP 14
3541: PPUSH
3542: CALL_OW 296
3546: PUSH
3547: LD_INT 6
3549: LESS
3550: IFFALSE 3525
// end ; CenterNowOnUnits ( Heike ) ;
3552: LD_EXP 14
3556: PPUSH
3557: CALL_OW 87
// InGameOn ;
3561: CALL_OW 8
// ComTurnUnit ( Heike , Johnny ) ;
3565: LD_EXP 14
3569: PPUSH
3570: LD_EXP 23
3574: PPUSH
3575: CALL_OW 119
// ComTurnUnit ( Johnny , Heike ) ;
3579: LD_EXP 23
3583: PPUSH
3584: LD_EXP 14
3588: PPUSH
3589: CALL_OW 119
// Say ( Johnny , DJ-thanks-1 ) ;
3593: LD_EXP 23
3597: PPUSH
3598: LD_STRING DJ-thanks-1
3600: PPUSH
3601: CALL_OW 88
// Say ( Heike , DH-thanks-1 ) ;
3605: LD_EXP 14
3609: PPUSH
3610: LD_STRING DH-thanks-1
3612: PPUSH
3613: CALL_OW 88
// Say ( Johnny , DJ-thanks-2 ) ;
3617: LD_EXP 23
3621: PPUSH
3622: LD_STRING DJ-thanks-2
3624: PPUSH
3625: CALL_OW 88
// Say ( Heike , DH-thanks-2 ) ;
3629: LD_EXP 14
3633: PPUSH
3634: LD_STRING DH-thanks-2
3636: PPUSH
3637: CALL_OW 88
// ComMoveXY ( Johnny , 4 , 3 ) ;
3641: LD_EXP 23
3645: PPUSH
3646: LD_INT 4
3648: PPUSH
3649: LD_INT 3
3651: PPUSH
3652: CALL_OW 111
// repeat wait ( 0 0$1 ) ;
3656: LD_INT 35
3658: PPUSH
3659: CALL_OW 67
// until not See ( 2 , Johnny ) ;
3663: LD_INT 2
3665: PPUSH
3666: LD_EXP 23
3670: PPUSH
3671: CALL_OW 292
3675: NOT
3676: IFFALSE 3656
// Say ( Heike , DH-thanks-2a ) ;
3678: LD_EXP 14
3682: PPUSH
3683: LD_STRING DH-thanks-2a
3685: PPUSH
3686: CALL_OW 88
// RemoveUnit ( Johnny ) ;
3690: LD_EXP 23
3694: PPUSH
3695: CALL_OW 64
// InGameOff ;
3699: CALL_OW 9
// ChangeMissionObjectives ( O2_ambush_out_cont ) ;
3703: LD_STRING O2_ambush_out_cont
3705: PPUSH
3706: CALL_OW 337
// johnnySaved := true ;
3710: LD_ADDR_EXP 4
3714: PUSH
3715: LD_INT 1
3717: ST_TO_ADDR
// AddExperience ( Heike , 1 , 600 ) ;
3718: LD_EXP 14
3722: PPUSH
3723: LD_INT 1
3725: PPUSH
3726: LD_INT 600
3728: PPUSH
3729: CALL_OW 492
// if IsOk ( Olaf ) then
3733: LD_EXP 15
3737: PPUSH
3738: CALL_OW 302
3742: IFFALSE 3759
// ComMoveXY ( Olaf , 44 , 25 ) ;
3744: LD_EXP 15
3748: PPUSH
3749: LD_INT 44
3751: PPUSH
3752: LD_INT 25
3754: PPUSH
3755: CALL_OW 111
// end ;
3759: END
// every 0 0$1 trigger russianPatrol do var i ;
3760: LD_EXP 19
3764: IFFALSE 3832
3766: GO 3768
3768: DISABLE
3769: LD_INT 0
3771: PPUSH
// begin enable ;
3772: ENABLE
// for i in russianPatrol do
3773: LD_ADDR_VAR 0 1
3777: PUSH
3778: LD_EXP 19
3782: PUSH
3783: FOR_IN
3784: IFFALSE 3830
// if GetLives ( i ) < 1000 and not HasTask ( i ) then
3786: LD_VAR 0 1
3790: PPUSH
3791: CALL_OW 256
3795: PUSH
3796: LD_INT 1000
3798: LESS
3799: PUSH
3800: LD_VAR 0 1
3804: PPUSH
3805: CALL_OW 314
3809: NOT
3810: AND
3811: IFFALSE 3828
// ComAgressiveMove ( i , 42 , 12 ) ;
3813: LD_VAR 0 1
3817: PPUSH
3818: LD_INT 42
3820: PPUSH
3821: LD_INT 12
3823: PPUSH
3824: CALL_OW 114
3828: GO 3783
3830: POP
3831: POP
// end ;
3832: PPOPN 1
3834: END
// every 0 0$1 trigger GetAttitude ( 1 , 2 ) = att_enemy and IsOk ( Johnny ) do
3835: LD_INT 1
3837: PPUSH
3838: LD_INT 2
3840: PPUSH
3841: CALL_OW 81
3845: PUSH
3846: LD_INT 2
3848: EQUAL
3849: PUSH
3850: LD_EXP 23
3854: PPUSH
3855: CALL_OW 302
3859: AND
3860: IFFALSE 3877
3862: GO 3864
3864: DISABLE
// Say ( Johnny , DJ-fire-1 ) ;
3865: LD_EXP 23
3869: PPUSH
3870: LD_STRING DJ-fire-1
3872: PPUSH
3873: CALL_OW 88
3877: END
// every 0 0$1 trigger not mercenariesSpotted and UnitFilter ( russianForces , [ f_see , 2 ] ) do
3878: LD_EXP 7
3882: NOT
3883: PUSH
3884: LD_EXP 21
3888: PPUSH
3889: LD_INT 101
3891: PUSH
3892: LD_INT 2
3894: PUSH
3895: EMPTY
3896: LIST
3897: LIST
3898: PPUSH
3899: CALL_OW 72
3903: AND
3904: IFFALSE 4012
3906: GO 3908
3908: DISABLE
// begin CenterNowOnUnits ( Heike ) ;
3909: LD_EXP 14
3913: PPUSH
3914: CALL_OW 87
// DialogueOn ;
3918: CALL_OW 6
// Say ( Heike , DH-see-enemy-patrol-1 ) ;
3922: LD_EXP 14
3926: PPUSH
3927: LD_STRING DH-see-enemy-patrol-1
3929: PPUSH
3930: CALL_OW 88
// Say ( UnitFilter ( russianForces , [ f_sex , sex_male ] ) [ 1 ] , DR-see-enemy-patrol-1 ) ;
3934: LD_EXP 21
3938: PPUSH
3939: LD_INT 26
3941: PUSH
3942: LD_INT 1
3944: PUSH
3945: EMPTY
3946: LIST
3947: LIST
3948: PPUSH
3949: CALL_OW 72
3953: PUSH
3954: LD_INT 1
3956: ARRAY
3957: PPUSH
3958: LD_STRING DR-see-enemy-patrol-1
3960: PPUSH
3961: CALL_OW 88
// DialogueOff ;
3965: CALL_OW 7
// ComAgressiveMove ( russianForces , 66 , 22 ) ;
3969: LD_EXP 21
3973: PPUSH
3974: LD_INT 66
3976: PPUSH
3977: LD_INT 22
3979: PPUSH
3980: CALL_OW 114
// wait ( 0 0$10 ) ;
3984: LD_INT 350
3986: PPUSH
3987: CALL_OW 67
// ComMoveToArea ( russianForces , russianEastPatrolArea ) ;
3991: LD_EXP 21
3995: PPUSH
3996: LD_INT 9
3998: PPUSH
3999: CALL_OW 113
// AddComHold ( russianForces ) ;
4003: LD_EXP 21
4007: PPUSH
4008: CALL_OW 200
// end ;
4012: END
// every 0 0$2 trigger missionStarted and not olafSpotted and not mercenariesSpotted and GetDistUnits ( Heike , NearestUnitToUnit ( FilterAllUnits ( [ f_class , class_tiger ] ) , Heike ) ) < 6 do
4013: LD_EXP 1
4017: PUSH
4018: LD_EXP 8
4022: NOT
4023: AND
4024: PUSH
4025: LD_EXP 7
4029: NOT
4030: AND
4031: PUSH
4032: LD_EXP 14
4036: PPUSH
4037: LD_INT 25
4039: PUSH
4040: LD_INT 14
4042: PUSH
4043: EMPTY
4044: LIST
4045: LIST
4046: PPUSH
4047: CALL_OW 69
4051: PPUSH
4052: LD_EXP 14
4056: PPUSH
4057: CALL_OW 74
4061: PPUSH
4062: CALL_OW 296
4066: PUSH
4067: LD_INT 6
4069: LESS
4070: AND
4071: IFFALSE 4088
4073: GO 4075
4075: DISABLE
// Say ( Heike , DH-tiger-1 ) ;
4076: LD_EXP 14
4080: PPUSH
4081: LD_STRING DH-tiger-1
4083: PPUSH
4084: CALL_OW 88
4088: END
// every 0 0$2 trigger missionStarted and not olafSpotted and not mercenariesSpotted and GetDistUnits ( Heike , NearestUnitToUnit ( FilterAllUnits ( [ f_class , class_apeman ] ) , Heike ) ) < 6 do
4089: LD_EXP 1
4093: PUSH
4094: LD_EXP 8
4098: NOT
4099: AND
4100: PUSH
4101: LD_EXP 7
4105: NOT
4106: AND
4107: PUSH
4108: LD_EXP 14
4112: PPUSH
4113: LD_INT 25
4115: PUSH
4116: LD_INT 12
4118: PUSH
4119: EMPTY
4120: LIST
4121: LIST
4122: PPUSH
4123: CALL_OW 69
4127: PPUSH
4128: LD_EXP 14
4132: PPUSH
4133: CALL_OW 74
4137: PPUSH
4138: CALL_OW 296
4142: PUSH
4143: LD_INT 6
4145: LESS
4146: AND
4147: IFFALSE 4164
4149: GO 4151
4151: DISABLE
// Say ( Heike , DH-ape-1 ) ;
4152: LD_EXP 14
4156: PPUSH
4157: LD_STRING DH-ape-1
4159: PPUSH
4160: CALL_OW 88
4164: END
// every 0 0$2 trigger missionStarted and not olafSpotted and not mercenariesSpotted and GetDistUnits ( Heike , NearestUnitToUnit ( FilterAllUnits ( [ f_class , class_phororhacos ] ) , Heike ) ) < 6 do
4165: LD_EXP 1
4169: PUSH
4170: LD_EXP 8
4174: NOT
4175: AND
4176: PUSH
4177: LD_EXP 7
4181: NOT
4182: AND
4183: PUSH
4184: LD_EXP 14
4188: PPUSH
4189: LD_INT 25
4191: PUSH
4192: LD_INT 18
4194: PUSH
4195: EMPTY
4196: LIST
4197: LIST
4198: PPUSH
4199: CALL_OW 69
4203: PPUSH
4204: LD_EXP 14
4208: PPUSH
4209: CALL_OW 74
4213: PPUSH
4214: CALL_OW 296
4218: PUSH
4219: LD_INT 6
4221: LESS
4222: AND
4223: IFFALSE 4240
4225: GO 4227
4227: DISABLE
// Say ( Heike , DH-bird-1 ) ;
4228: LD_EXP 14
4232: PPUSH
4233: LD_STRING DH-bird-1
4235: PPUSH
4236: CALL_OW 88
4240: END
// every 0 0$1 trigger FilterAllUnits ( [ [ f_side , 2 ] , [ f_see , 3 ] ] ) do
4241: LD_INT 22
4243: PUSH
4244: LD_INT 2
4246: PUSH
4247: EMPTY
4248: LIST
4249: LIST
4250: PUSH
4251: LD_INT 101
4253: PUSH
4254: LD_INT 3
4256: PUSH
4257: EMPTY
4258: LIST
4259: LIST
4260: PUSH
4261: EMPTY
4262: LIST
4263: LIST
4264: PPUSH
4265: CALL_OW 69
4269: IFFALSE 4282
4271: GO 4273
4273: DISABLE
// russianSpotted := true ;
4274: LD_ADDR_EXP 9
4278: PUSH
4279: LD_INT 1
4281: ST_TO_ADDR
4282: END
// every 0 0$1 trigger GetDistUnits ( Heike , NearestUnitToUnit ( FilterAllUnits ( [ [ f_side , 3 ] , [ f_type , unit_building ] ] ) , Heike ) ) < 8 do
4283: LD_EXP 14
4287: PPUSH
4288: LD_INT 22
4290: PUSH
4291: LD_INT 3
4293: PUSH
4294: EMPTY
4295: LIST
4296: LIST
4297: PUSH
4298: LD_INT 21
4300: PUSH
4301: LD_INT 3
4303: PUSH
4304: EMPTY
4305: LIST
4306: LIST
4307: PUSH
4308: EMPTY
4309: LIST
4310: LIST
4311: PPUSH
4312: CALL_OW 69
4316: PPUSH
4317: LD_EXP 14
4321: PPUSH
4322: CALL_OW 74
4326: PPUSH
4327: CALL_OW 296
4331: PUSH
4332: LD_INT 8
4334: LESS
4335: IFFALSE 4352
4337: GO 4339
4339: DISABLE
// Say ( Heike , DH-enemy-base ) ;
4340: LD_EXP 14
4344: PPUSH
4345: LD_STRING DH-enemy-base
4347: PPUSH
4348: CALL_OW 88
4352: END
// every 0 0$1 trigger not IsPlaced ( Johnny ) and not dogTagFound and dogTag and not mercenariesQuestDone do var i ;
4353: LD_EXP 23
4357: PPUSH
4358: CALL_OW 305
4362: NOT
4363: PUSH
4364: LD_EXP 6
4368: NOT
4369: AND
4370: PUSH
4371: LD_EXP 5
4375: AND
4376: PUSH
4377: LD_EXP 11
4381: NOT
4382: AND
4383: IFFALSE 4534
4385: GO 4387
4387: DISABLE
4388: LD_INT 0
4390: PPUSH
// begin repeat wait ( 0 0$1 ) ;
4391: LD_INT 35
4393: PPUSH
4394: CALL_OW 67
// for i in dogTag do
4398: LD_ADDR_VAR 0 1
4402: PUSH
4403: LD_EXP 5
4407: PUSH
4408: FOR_IN
4409: IFFALSE 4458
// if GetDistUnitXY ( Heike , i [ 1 ] , i [ 2 ] ) < 3 then
4411: LD_EXP 14
4415: PPUSH
4416: LD_VAR 0 1
4420: PUSH
4421: LD_INT 1
4423: ARRAY
4424: PPUSH
4425: LD_VAR 0 1
4429: PUSH
4430: LD_INT 2
4432: ARRAY
4433: PPUSH
4434: CALL_OW 297
4438: PUSH
4439: LD_INT 3
4441: LESS
4442: IFFALSE 4456
// begin dogTagFound := i ;
4444: LD_ADDR_EXP 6
4448: PUSH
4449: LD_VAR 0 1
4453: ST_TO_ADDR
// break ;
4454: GO 4458
// end ;
4456: GO 4408
4458: POP
4459: POP
// until dogTagFound ;
4460: LD_EXP 6
4464: IFFALSE 4391
// CenterNowOnUnits ( Heike ) ;
4466: LD_EXP 14
4470: PPUSH
4471: CALL_OW 87
// ComMoveXY ( Heike , dogTagFound [ 1 ] , dogTagFound [ 2 ] ) ;
4475: LD_EXP 14
4479: PPUSH
4480: LD_EXP 6
4484: PUSH
4485: LD_INT 1
4487: ARRAY
4488: PPUSH
4489: LD_EXP 6
4493: PUSH
4494: LD_INT 2
4496: ARRAY
4497: PPUSH
4498: CALL_OW 111
// if mercenariesQuestReady then
4502: LD_EXP 10
4506: IFFALSE 4522
// Say ( Heike , DH-dogtag-found-quest ) else
4508: LD_EXP 14
4512: PPUSH
4513: LD_STRING DH-dogtag-found-quest
4515: PPUSH
4516: CALL_OW 88
4520: GO 4534
// Say ( Heike , DH-dogtag-found ) ;
4522: LD_EXP 14
4526: PPUSH
4527: LD_STRING DH-dogtag-found
4529: PPUSH
4530: CALL_OW 88
// end ;
4534: PPOPN 1
4536: END
// every 0 0$1 trigger not olafSpotted and not mercenariesSpotted and See ( 5 , Heike ) and GetDistUnits ( Heike , Olaf ) < 8 do
4537: LD_EXP 8
4541: NOT
4542: PUSH
4543: LD_EXP 7
4547: NOT
4548: AND
4549: PUSH
4550: LD_INT 5
4552: PPUSH
4553: LD_EXP 14
4557: PPUSH
4558: CALL_OW 292
4562: AND
4563: PUSH
4564: LD_EXP 14
4568: PPUSH
4569: LD_EXP 15
4573: PPUSH
4574: CALL_OW 296
4578: PUSH
4579: LD_INT 8
4581: LESS
4582: AND
4583: IFFALSE 4944
4585: GO 4587
4587: DISABLE
// begin olafSpotted := true ;
4588: LD_ADDR_EXP 8
4592: PUSH
4593: LD_INT 1
4595: ST_TO_ADDR
// if HasTask ( Olaf ) then
4596: LD_EXP 15
4600: PPUSH
4601: CALL_OW 314
4605: IFFALSE 4616
// ComStop ( Olaf ) ;
4607: LD_EXP 15
4611: PPUSH
4612: CALL_OW 141
// InGameOn ;
4616: CALL_OW 8
// if GetDistUnits ( Olaf , Heike ) > 8 then
4620: LD_EXP 15
4624: PPUSH
4625: LD_EXP 14
4629: PPUSH
4630: CALL_OW 296
4634: PUSH
4635: LD_INT 8
4637: GREATER
4638: IFFALSE 4654
// ComMoveUnit ( Olaf , Heike ) ;
4640: LD_EXP 15
4644: PPUSH
4645: LD_EXP 14
4649: PPUSH
4650: CALL_OW 112
// repeat wait ( 0 0$1 ) ;
4654: LD_INT 35
4656: PPUSH
4657: CALL_OW 67
// until GetDistUnits ( Olaf , Heike ) <= 8 ;
4661: LD_EXP 15
4665: PPUSH
4666: LD_EXP 14
4670: PPUSH
4671: CALL_OW 296
4675: PUSH
4676: LD_INT 8
4678: LESSEQUAL
4679: IFFALSE 4654
// ComTurnUnit ( Heike , Olaf ) ;
4681: LD_EXP 14
4685: PPUSH
4686: LD_EXP 15
4690: PPUSH
4691: CALL_OW 119
// ComTurnUnit ( Olaf , Heike ) ;
4695: LD_EXP 15
4699: PPUSH
4700: LD_EXP 14
4704: PPUSH
4705: CALL_OW 119
// Say ( Olaf , DO-olaf-1 ) ;
4709: LD_EXP 15
4713: PPUSH
4714: LD_STRING DO-olaf-1
4716: PPUSH
4717: CALL_OW 88
// Say ( Heike , DH-olaf-1 ) ;
4721: LD_EXP 14
4725: PPUSH
4726: LD_STRING DH-olaf-1
4728: PPUSH
4729: CALL_OW 88
// Say ( Olaf , DO-olaf-2 ) ;
4733: LD_EXP 15
4737: PPUSH
4738: LD_STRING DO-olaf-2
4740: PPUSH
4741: CALL_OW 88
// Say ( Heike , DH-olaf-2 ) ;
4745: LD_EXP 14
4749: PPUSH
4750: LD_STRING DH-olaf-2
4752: PPUSH
4753: CALL_OW 88
// Say ( Olaf , DO-olaf-3 ) ;
4757: LD_EXP 15
4761: PPUSH
4762: LD_STRING DO-olaf-3
4764: PPUSH
4765: CALL_OW 88
// Say ( Olaf , DO-olaf-4 ) ;
4769: LD_EXP 15
4773: PPUSH
4774: LD_STRING DO-olaf-4
4776: PPUSH
4777: CALL_OW 88
// Say ( Heike , DH-olaf-4 ) ;
4781: LD_EXP 14
4785: PPUSH
4786: LD_STRING DH-olaf-4
4788: PPUSH
4789: CALL_OW 88
// Say ( Olaf , DO-olaf-5 ) ;
4793: LD_EXP 15
4797: PPUSH
4798: LD_STRING DO-olaf-5
4800: PPUSH
4801: CALL_OW 88
// Say ( Heike , DH-olaf-5 ) ;
4805: LD_EXP 14
4809: PPUSH
4810: LD_STRING DH-olaf-5
4812: PPUSH
4813: CALL_OW 88
// Say ( Olaf , DO-olaf-6 ) ;
4817: LD_EXP 15
4821: PPUSH
4822: LD_STRING DO-olaf-6
4824: PPUSH
4825: CALL_OW 88
// if russianSpotted or johnnySaved then
4829: LD_EXP 9
4833: PUSH
4834: LD_EXP 4
4838: OR
4839: IFFALSE 4867
// begin Say ( Heike , DH-olaf-6a ) ;
4841: LD_EXP 14
4845: PPUSH
4846: LD_STRING DH-olaf-6a
4848: PPUSH
4849: CALL_OW 88
// Say ( Olaf , DO-olaf-7a ) ;
4853: LD_EXP 15
4857: PPUSH
4858: LD_STRING DO-olaf-7a
4860: PPUSH
4861: CALL_OW 88
// end else
4865: GO 4891
// begin Say ( Heike , DH-olaf-6b ) ;
4867: LD_EXP 14
4871: PPUSH
4872: LD_STRING DH-olaf-6b
4874: PPUSH
4875: CALL_OW 88
// Say ( Olaf , DO-olaf-7b ) ;
4879: LD_EXP 15
4883: PPUSH
4884: LD_STRING DO-olaf-7b
4886: PPUSH
4887: CALL_OW 88
// end ; Say ( Olaf , DO-olaf-8 ) ;
4891: LD_EXP 15
4895: PPUSH
4896: LD_STRING DO-olaf-8
4898: PPUSH
4899: CALL_OW 88
// InGameOff ;
4903: CALL_OW 9
// ChangeMissionObjectives ( O3_camp_cont ) ;
4907: LD_STRING O3_camp_cont
4909: PPUSH
4910: CALL_OW 337
// ComMoveXY ( Olaf , 52 , 90 ) ;
4914: LD_EXP 15
4918: PPUSH
4919: LD_INT 52
4921: PPUSH
4922: LD_INT 90
4924: PPUSH
4925: CALL_OW 111
// AddComTurnXY ( Olaf , 53 , 89 ) ;
4929: LD_EXP 15
4933: PPUSH
4934: LD_INT 53
4936: PPUSH
4937: LD_INT 89
4939: PPUSH
4940: CALL_OW 178
// end ;
4944: END
// every 0 0$1 trigger not olafSpotted and GetDistUnits ( Heike , Givi ) < 36 do
4945: LD_EXP 8
4949: NOT
4950: PUSH
4951: LD_EXP 14
4955: PPUSH
4956: LD_EXP 16
4960: PPUSH
4961: CALL_OW 296
4965: PUSH
4966: LD_INT 36
4968: LESS
4969: AND
4970: IFFALSE 4990
4972: GO 4974
4974: DISABLE
// ComMoveXY ( Olaf , 39 , 71 ) ;
4975: LD_EXP 15
4979: PPUSH
4980: LD_INT 39
4982: PPUSH
4983: LD_INT 71
4985: PPUSH
4986: CALL_OW 111
4990: END
// every 0 0$1 trigger not mercenariesSpotted and ( See ( 2 , Mike ) or See ( 2 , Givi ) ) do var i , driver , tank ;
4991: LD_EXP 7
4995: NOT
4996: PUSH
4997: LD_INT 2
4999: PPUSH
5000: LD_EXP 17
5004: PPUSH
5005: CALL_OW 292
5009: PUSH
5010: LD_INT 2
5012: PPUSH
5013: LD_EXP 16
5017: PPUSH
5018: CALL_OW 292
5022: OR
5023: AND
5024: IFFALSE 6349
5026: GO 5028
5028: DISABLE
5029: LD_INT 0
5031: PPUSH
5032: PPUSH
5033: PPUSH
// begin if IsLive ( Johnny ) then
5034: LD_EXP 23
5038: PPUSH
5039: CALL_OW 300
5043: IFFALSE 5054
// KillUnit ( Johnny ) ;
5045: LD_EXP 23
5049: PPUSH
5050: CALL_OW 66
// mercenariesSpotted := true ;
5054: LD_ADDR_EXP 7
5058: PUSH
5059: LD_INT 1
5061: ST_TO_ADDR
// ChangeMissionObjectives ( O4_camp_cont ) ;
5062: LD_STRING O4_camp_cont
5064: PPUSH
5065: CALL_OW 337
// InGameOn ;
5069: CALL_OW 8
// CenterNowOnXY ( 53 , 89 ) ;
5073: LD_INT 53
5075: PPUSH
5076: LD_INT 89
5078: PPUSH
5079: CALL_OW 86
// PlaceSeeing ( 53 , 89 , 2 , - 8 ) ;
5083: LD_INT 53
5085: PPUSH
5086: LD_INT 89
5088: PPUSH
5089: LD_INT 2
5091: PPUSH
5092: LD_INT 8
5094: NEG
5095: PPUSH
5096: CALL_OW 330
// if olafSpotted then
5100: LD_EXP 8
5104: IFFALSE 5222
// begin AddComTurnUnit ( Olaf , Heike ) ;
5106: LD_EXP 15
5110: PPUSH
5111: LD_EXP 14
5115: PPUSH
5116: CALL_OW 179
// ComMoveXY ( Heike , 51 , 86 ) ;
5120: LD_EXP 14
5124: PPUSH
5125: LD_INT 51
5127: PPUSH
5128: LD_INT 86
5130: PPUSH
5131: CALL_OW 111
// AddComTurnUnit ( Heike , Olaf ) ;
5135: LD_EXP 14
5139: PPUSH
5140: LD_EXP 15
5144: PPUSH
5145: CALL_OW 179
// Say ( Olaf , DO-camp-1 ) ;
5149: LD_EXP 15
5153: PPUSH
5154: LD_STRING DO-camp-1
5156: PPUSH
5157: CALL_OW 88
// ComTurnUnit ( [ Givi , Mike ] , Heike ) ;
5161: LD_EXP 16
5165: PUSH
5166: LD_EXP 17
5170: PUSH
5171: EMPTY
5172: LIST
5173: LIST
5174: PPUSH
5175: LD_EXP 14
5179: PPUSH
5180: CALL_OW 119
// Say ( Givi , DG-camp-1 ) ;
5184: LD_EXP 16
5188: PPUSH
5189: LD_STRING DG-camp-1
5191: PPUSH
5192: CALL_OW 88
// Say ( Heike , DH-camp-1 ) ;
5196: LD_EXP 14
5200: PPUSH
5201: LD_STRING DH-camp-1
5203: PPUSH
5204: CALL_OW 88
// Say ( Olaf , DO-camp-2 ) ;
5208: LD_EXP 15
5212: PPUSH
5213: LD_STRING DO-camp-2
5215: PPUSH
5216: CALL_OW 88
// end else
5220: GO 5617
// begin ComMoveXY ( Heike , 51 , 86 ) ;
5222: LD_EXP 14
5226: PPUSH
5227: LD_INT 51
5229: PPUSH
5230: LD_INT 86
5232: PPUSH
5233: CALL_OW 111
// AddComTurnUnit ( Heike , Givi ) ;
5237: LD_EXP 14
5241: PPUSH
5242: LD_EXP 16
5246: PPUSH
5247: CALL_OW 179
// ComTurnUnit ( [ Givi , Mike ] , Heike ) ;
5251: LD_EXP 16
5255: PUSH
5256: LD_EXP 17
5260: PUSH
5261: EMPTY
5262: LIST
5263: LIST
5264: PPUSH
5265: LD_EXP 14
5269: PPUSH
5270: CALL_OW 119
// Say ( Givi , DG-camp-1a ) ;
5274: LD_EXP 16
5278: PPUSH
5279: LD_STRING DG-camp-1a
5281: PPUSH
5282: CALL_OW 88
// Say ( Heike , DH-camp-1a ) ;
5286: LD_EXP 14
5290: PPUSH
5291: LD_STRING DH-camp-1a
5293: PPUSH
5294: CALL_OW 88
// wait ( 0 0$0.03 ) ;
5298: LD_INT 1
5300: PPUSH
5301: CALL_OW 67
// ComTurnUnit ( Mike , Olaf ) ;
5305: LD_EXP 17
5309: PPUSH
5310: LD_EXP 15
5314: PPUSH
5315: CALL_OW 119
// Say ( Mike , DM-camp-1a ) ;
5319: LD_EXP 17
5323: PPUSH
5324: LD_STRING DM-camp-1a
5326: PPUSH
5327: CALL_OW 88
// ComMoveXY ( Olaf , 52 , 90 ) ;
5331: LD_EXP 15
5335: PPUSH
5336: LD_INT 52
5338: PPUSH
5339: LD_INT 90
5341: PPUSH
5342: CALL_OW 111
// ComTurnUnit ( Mike , Heike ) ;
5346: LD_EXP 17
5350: PPUSH
5351: LD_EXP 14
5355: PPUSH
5356: CALL_OW 119
// Say ( Givi , DG-camp-2a ) ;
5360: LD_EXP 16
5364: PPUSH
5365: LD_STRING DG-camp-2a
5367: PPUSH
5368: CALL_OW 88
// Say ( Heike , DH-camp-2a ) ;
5372: LD_EXP 14
5376: PPUSH
5377: LD_STRING DH-camp-2a
5379: PPUSH
5380: CALL_OW 88
// Say ( Mike , DM-camp-2a ) ;
5384: LD_EXP 17
5388: PPUSH
5389: LD_STRING DM-camp-2a
5391: PPUSH
5392: CALL_OW 88
// repeat wait ( 0 0$1 ) ;
5396: LD_INT 35
5398: PPUSH
5399: CALL_OW 67
// until GetDistUnits ( Olaf , Heike ) < 10 ;
5403: LD_EXP 15
5407: PPUSH
5408: LD_EXP 14
5412: PPUSH
5413: CALL_OW 296
5417: PUSH
5418: LD_INT 10
5420: LESS
5421: IFFALSE 5396
// AddComTurnUnit ( Olaf , Heike ) ;
5423: LD_EXP 15
5427: PPUSH
5428: LD_EXP 14
5432: PPUSH
5433: CALL_OW 179
// ComTurnUnit ( Mike , Heike ) ;
5437: LD_EXP 17
5441: PPUSH
5442: LD_EXP 14
5446: PPUSH
5447: CALL_OW 119
// Say ( Olaf , DO-camp-2a ) ;
5451: LD_EXP 15
5455: PPUSH
5456: LD_STRING DO-camp-2a
5458: PPUSH
5459: CALL_OW 88
// ComTurnUnit ( Heike , Olaf ) ;
5463: LD_EXP 14
5467: PPUSH
5468: LD_EXP 15
5472: PPUSH
5473: CALL_OW 119
// if russianSpotted then
5477: LD_EXP 9
5481: IFFALSE 5521
// begin Say ( Heike , DH-camp-2aa ) ;
5483: LD_EXP 14
5487: PPUSH
5488: LD_STRING DH-camp-2aa
5490: PPUSH
5491: CALL_OW 88
// Say ( Givi , DG-camp-2aa ) ;
5495: LD_EXP 16
5499: PPUSH
5500: LD_STRING DG-camp-2aa
5502: PPUSH
5503: CALL_OW 88
// Say ( Mike , DM-camp-2aa ) ;
5507: LD_EXP 17
5511: PPUSH
5512: LD_STRING DM-camp-2aa
5514: PPUSH
5515: CALL_OW 88
// end else
5519: GO 5545
// begin Say ( Heike , DH-camp-2ab ) ;
5521: LD_EXP 14
5525: PPUSH
5526: LD_STRING DH-camp-2ab
5528: PPUSH
5529: CALL_OW 88
// Say ( Mike , DM-camp-2ab ) ;
5533: LD_EXP 17
5537: PPUSH
5538: LD_STRING DM-camp-2ab
5540: PPUSH
5541: CALL_OW 88
// end ; Say ( Heike , DH-camp-3a ) ;
5545: LD_EXP 14
5549: PPUSH
5550: LD_STRING DH-camp-3a
5552: PPUSH
5553: CALL_OW 88
// Say ( Olaf , DO-camp-3a ) ;
5557: LD_EXP 15
5561: PPUSH
5562: LD_STRING DO-camp-3a
5564: PPUSH
5565: CALL_OW 88
// Say ( Givi , DG-camp-3a ) ;
5569: LD_EXP 16
5573: PPUSH
5574: LD_STRING DG-camp-3a
5576: PPUSH
5577: CALL_OW 88
// Say ( Heike , DH-camp-4aa ) ;
5581: LD_EXP 14
5585: PPUSH
5586: LD_STRING DH-camp-4aa
5588: PPUSH
5589: CALL_OW 88
// Say ( Mike , DM-camp-4aa ) ;
5593: LD_EXP 17
5597: PPUSH
5598: LD_STRING DM-camp-4aa
5600: PPUSH
5601: CALL_OW 88
// Say ( Olaf , DO-camp-4a ) ;
5605: LD_EXP 15
5609: PPUSH
5610: LD_STRING DO-camp-4a
5612: PPUSH
5613: CALL_OW 88
// end ; Say ( Olaf , DO-camp-3 ) ;
5617: LD_EXP 15
5621: PPUSH
5622: LD_STRING DO-camp-3
5624: PPUSH
5625: CALL_OW 88
// Say ( Olaf , DO-camp-4 ) ;
5629: LD_EXP 15
5633: PPUSH
5634: LD_STRING DO-camp-4
5636: PPUSH
5637: CALL_OW 88
// ComTurnUnit ( Givi , Olaf ) ;
5641: LD_EXP 16
5645: PPUSH
5646: LD_EXP 15
5650: PPUSH
5651: CALL_OW 119
// Say ( Givi , DG-camp-4 ) ;
5655: LD_EXP 16
5659: PPUSH
5660: LD_STRING DG-camp-4
5662: PPUSH
5663: CALL_OW 88
// ComTurnUnit ( Heike , Givi ) ;
5667: LD_EXP 14
5671: PPUSH
5672: LD_EXP 16
5676: PPUSH
5677: CALL_OW 119
// Say ( Heike , DH-camp-4 ) ;
5681: LD_EXP 14
5685: PPUSH
5686: LD_STRING DH-camp-4
5688: PPUSH
5689: CALL_OW 88
// ComTurnUnit ( [ Mike , Olaf , Givi ] , Heike ) ;
5693: LD_EXP 17
5697: PUSH
5698: LD_EXP 15
5702: PUSH
5703: LD_EXP 16
5707: PUSH
5708: EMPTY
5709: LIST
5710: LIST
5711: LIST
5712: PPUSH
5713: LD_EXP 14
5717: PPUSH
5718: CALL_OW 119
// Say ( Givi , DG-camp-5 ) ;
5722: LD_EXP 16
5726: PPUSH
5727: LD_STRING DG-camp-5
5729: PPUSH
5730: CALL_OW 88
// Say ( Givi , DG-camp-6 ) ;
5734: LD_EXP 16
5738: PPUSH
5739: LD_STRING DG-camp-6
5741: PPUSH
5742: CALL_OW 88
// Say ( Heike , DH-camp-6 ) ;
5746: LD_EXP 14
5750: PPUSH
5751: LD_STRING DH-camp-6
5753: PPUSH
5754: CALL_OW 88
// Say ( Givi , DG-camp-7 ) ;
5758: LD_EXP 16
5762: PPUSH
5763: LD_STRING DG-camp-7
5765: PPUSH
5766: CALL_OW 88
// if DogTagFound then
5770: LD_EXP 6
5774: IFFALSE 5814
// begin Say ( Heike , DH-quest-1a ) ;
5776: LD_EXP 14
5780: PPUSH
5781: LD_STRING DH-quest-1a
5783: PPUSH
5784: CALL_OW 88
// Say ( Givi , DG-quest-1a ) ;
5788: LD_EXP 16
5792: PPUSH
5793: LD_STRING DG-quest-1a
5795: PPUSH
5796: CALL_OW 88
// mercenariesQuestDone := true ;
5800: LD_ADDR_EXP 11
5804: PUSH
5805: LD_INT 1
5807: ST_TO_ADDR
// InGameOff ;
5808: CALL_OW 9
// end else
5812: GO 5980
// begin Say ( Heike , DH-camp-7 ) ;
5814: LD_EXP 14
5818: PPUSH
5819: LD_STRING DH-camp-7
5821: PPUSH
5822: CALL_OW 88
// if GetLives ( Heike ) < 1000 then
5826: LD_EXP 14
5830: PPUSH
5831: CALL_OW 256
5835: PUSH
5836: LD_INT 1000
5838: LESS
5839: IFFALSE 5931
// begin Say ( Olaf , DO-heal-1 ) ;
5841: LD_EXP 15
5845: PPUSH
5846: LD_STRING DO-heal-1
5848: PPUSH
5849: CALL_OW 88
// ComMoveXY ( Heike , 51 , 88 ) ;
5853: LD_EXP 14
5857: PPUSH
5858: LD_INT 51
5860: PPUSH
5861: LD_INT 88
5863: PPUSH
5864: CALL_OW 111
// repeat wait ( 0 0$1 ) ;
5868: LD_INT 35
5870: PPUSH
5871: CALL_OW 67
// until GetDistUnits ( Heike , Olaf ) < 4 or IsAt ( Heike , 51 , 88 ) ;
5875: LD_EXP 14
5879: PPUSH
5880: LD_EXP 15
5884: PPUSH
5885: CALL_OW 296
5889: PUSH
5890: LD_INT 4
5892: LESS
5893: PUSH
5894: LD_EXP 14
5898: PPUSH
5899: LD_INT 51
5901: PPUSH
5902: LD_INT 88
5904: PPUSH
5905: CALL_OW 307
5909: OR
5910: IFFALSE 5868
// SetLives ( Heike , 1000 ) ;
5912: LD_EXP 14
5916: PPUSH
5917: LD_INT 1000
5919: PPUSH
5920: CALL_OW 234
// wait ( 0 0$2 ) ;
5924: LD_INT 70
5926: PPUSH
5927: CALL_OW 67
// end ; InGameOff ;
5931: CALL_OW 9
// ComTurnXY ( [ Olaf , Givi , Mike ] , 53 , 89 ) ;
5935: LD_EXP 15
5939: PUSH
5940: LD_EXP 16
5944: PUSH
5945: LD_EXP 17
5949: PUSH
5950: EMPTY
5951: LIST
5952: LIST
5953: LIST
5954: PPUSH
5955: LD_INT 53
5957: PPUSH
5958: LD_INT 89
5960: PPUSH
5961: CALL_OW 118
// ChangeMissionObjectives ( O5_proof_cont ) ;
5965: LD_STRING O5_proof_cont
5967: PPUSH
5968: CALL_OW 337
// mercenariesQuestReady := true ;
5972: LD_ADDR_EXP 10
5976: PUSH
5977: LD_INT 1
5979: ST_TO_ADDR
// end ; if not mercenariesQuestReady then
5980: LD_EXP 10
5984: NOT
5985: IFFALSE 5989
// exit ;
5987: GO 6349
// wait ( 0 0$35 ) ;
5989: LD_INT 1225
5991: PPUSH
5992: CALL_OW 67
// driver := PreparePatrolTank ;
5996: LD_ADDR_VAR 0 2
6000: PUSH
6001: CALL 2473 0 0
6005: ST_TO_ADDR
// if not driver then
6006: LD_VAR 0 2
6010: NOT
6011: IFFALSE 6015
// exit ;
6013: GO 6349
// SetAttitude ( 2 , 1 , att_enemy , true ) ;
6015: LD_INT 2
6017: PPUSH
6018: LD_INT 1
6020: PPUSH
6021: LD_INT 2
6023: PPUSH
6024: LD_INT 1
6026: PPUSH
6027: CALL_OW 80
// tank := IsInUnit ( driver ) ;
6031: LD_ADDR_VAR 0 3
6035: PUSH
6036: LD_VAR 0 2
6040: PPUSH
6041: CALL_OW 310
6045: ST_TO_ADDR
// SetLives ( tank , 500 ) ;
6046: LD_VAR 0 3
6050: PPUSH
6051: LD_INT 500
6053: PPUSH
6054: CALL_OW 234
// SetLives ( driver , 450 ) ;
6058: LD_VAR 0 2
6062: PPUSH
6063: LD_INT 450
6065: PPUSH
6066: CALL_OW 234
// ComMoveXY ( driver , 59 , 60 ) ;
6070: LD_VAR 0 2
6074: PPUSH
6075: LD_INT 59
6077: PPUSH
6078: LD_INT 60
6080: PPUSH
6081: CALL_OW 111
// repeat wait ( 0 0$1 ) ;
6085: LD_INT 35
6087: PPUSH
6088: CALL_OW 67
// until IsAt ( tank , 59 , 60 ) ;
6092: LD_VAR 0 3
6096: PPUSH
6097: LD_INT 59
6099: PPUSH
6100: LD_INT 60
6102: PPUSH
6103: CALL_OW 307
6107: IFFALSE 6085
// if not See ( 1 , Heike ) then
6109: LD_INT 1
6111: PPUSH
6112: LD_EXP 14
6116: PPUSH
6117: CALL_OW 292
6121: NOT
6122: IFFALSE 6246
// begin if Difficulty < 3 then
6124: LD_OWVAR 67
6128: PUSH
6129: LD_INT 3
6131: LESS
6132: IFFALSE 6150
// PlaceSeeing ( 59 , 60 , 2 , 6 ) ;
6134: LD_INT 59
6136: PPUSH
6137: LD_INT 60
6139: PPUSH
6140: LD_INT 2
6142: PPUSH
6143: LD_INT 6
6145: PPUSH
6146: CALL_OW 330
// ComExitVehicle ( driver ) ;
6150: LD_VAR 0 2
6154: PPUSH
6155: CALL_OW 121
// wait ( 0 0$1 ) ;
6159: LD_INT 35
6161: PPUSH
6162: CALL_OW 67
// AddComMoveXY ( driver , 58 , 54 ) ;
6166: LD_VAR 0 2
6170: PPUSH
6171: LD_INT 58
6173: PPUSH
6174: LD_INT 54
6176: PPUSH
6177: CALL_OW 171
// wait ( 0 0$1 ) ;
6181: LD_INT 35
6183: PPUSH
6184: CALL_OW 67
// AddComTurnXY ( driver , 57 , 53 ) ;
6188: LD_VAR 0 2
6192: PPUSH
6193: LD_INT 57
6195: PPUSH
6196: LD_INT 53
6198: PPUSH
6199: CALL_OW 178
// AddComWait ( driver , 0 0$10 ) ;
6203: LD_VAR 0 2
6207: PPUSH
6208: LD_INT 350
6210: PPUSH
6211: CALL_OW 202
// AddComEnterUnit ( driver , tank ) ;
6215: LD_VAR 0 2
6219: PPUSH
6220: LD_VAR 0 3
6224: PPUSH
6225: CALL_OW 180
// AddComMoveXY ( driver , 107 , 118 ) ;
6229: LD_VAR 0 2
6233: PPUSH
6234: LD_INT 107
6236: PPUSH
6237: LD_INT 118
6239: PPUSH
6240: CALL_OW 171
// end else
6244: GO 6261
// begin ComMoveXY ( driver , 107 , 118 ) ;
6246: LD_VAR 0 2
6250: PPUSH
6251: LD_INT 107
6253: PPUSH
6254: LD_INT 118
6256: PPUSH
6257: CALL_OW 111
// end ; repeat wait ( 0 0$1 ) ;
6261: LD_INT 35
6263: PPUSH
6264: CALL_OW 67
// until IsAt ( tank , 107 , 118 ) or IsDead ( driver ) ;
6268: LD_VAR 0 3
6272: PPUSH
6273: LD_INT 107
6275: PPUSH
6276: LD_INT 118
6278: PPUSH
6279: CALL_OW 307
6283: PUSH
6284: LD_VAR 0 2
6288: PPUSH
6289: CALL_OW 301
6293: OR
6294: IFFALSE 6261
// if IsDead ( driver [ 1 ] ) then
6296: LD_VAR 0 2
6300: PUSH
6301: LD_INT 1
6303: ARRAY
6304: PPUSH
6305: CALL_OW 301
6309: IFFALSE 6313
// exit ;
6311: GO 6349
// for i in FilterAllUnits ( [ f_side , 1 ] ) do
6313: LD_ADDR_VAR 0 1
6317: PUSH
6318: LD_INT 22
6320: PUSH
6321: LD_INT 1
6323: PUSH
6324: EMPTY
6325: LIST
6326: LIST
6327: PPUSH
6328: CALL_OW 69
6332: PUSH
6333: FOR_IN
6334: IFFALSE 6347
// RemoveUnit ( i ) ;
6336: LD_VAR 0 1
6340: PPUSH
6341: CALL_OW 64
6345: GO 6333
6347: POP
6348: POP
// end ;
6349: PPOPN 3
6351: END
// every 0 0$1 trigger FilterUnitsInArea ( campArea , [ [ f_side , 2 ] , [ f_type , unit_vehicle ] ] ) do
6352: LD_INT 10
6354: PPUSH
6355: LD_INT 22
6357: PUSH
6358: LD_INT 2
6360: PUSH
6361: EMPTY
6362: LIST
6363: LIST
6364: PUSH
6365: LD_INT 21
6367: PUSH
6368: LD_INT 2
6370: PUSH
6371: EMPTY
6372: LIST
6373: LIST
6374: PUSH
6375: EMPTY
6376: LIST
6377: LIST
6378: PPUSH
6379: CALL_OW 70
6383: IFFALSE 6457
6385: GO 6387
6387: DISABLE
// begin InGameOn ;
6388: CALL_OW 8
// ComTurnUnit ( [ Olaf , Mike , Givi ] , Heike ) ;
6392: LD_EXP 15
6396: PUSH
6397: LD_EXP 17
6401: PUSH
6402: LD_EXP 16
6406: PUSH
6407: EMPTY
6408: LIST
6409: LIST
6410: LIST
6411: PPUSH
6412: LD_EXP 14
6416: PPUSH
6417: CALL_OW 119
// Say ( Mike , DM-quest-1 ) ;
6421: LD_EXP 17
6425: PPUSH
6426: LD_STRING DM-quest-1
6428: PPUSH
6429: CALL_OW 88
// Say ( Givi , DG-quest-1 ) ;
6433: LD_EXP 16
6437: PPUSH
6438: LD_STRING DG-quest-1
6440: PPUSH
6441: CALL_OW 88
// InGameOff ;
6445: CALL_OW 9
// mercenariesQuestDone := true ;
6449: LD_ADDR_EXP 11
6453: PUSH
6454: LD_INT 1
6456: ST_TO_ADDR
// end ;
6457: END
// every 0 0$1 trigger IsInArea ( Heike , campArea ) and dogTagFound and mercenariesQuestReady do
6458: LD_EXP 14
6462: PPUSH
6463: LD_INT 10
6465: PPUSH
6466: CALL_OW 308
6470: PUSH
6471: LD_EXP 6
6475: AND
6476: PUSH
6477: LD_EXP 10
6481: AND
6482: IFFALSE 6612
6484: GO 6486
6486: DISABLE
// begin InGameOn ;
6487: CALL_OW 8
// ComTurnUnit ( [ Olaf , Mike , Givi ] , Heike ) ;
6491: LD_EXP 15
6495: PUSH
6496: LD_EXP 17
6500: PUSH
6501: LD_EXP 16
6505: PUSH
6506: EMPTY
6507: LIST
6508: LIST
6509: LIST
6510: PPUSH
6511: LD_EXP 14
6515: PPUSH
6516: CALL_OW 119
// ComMoveUnit ( Heike , Givi ) ;
6520: LD_EXP 14
6524: PPUSH
6525: LD_EXP 16
6529: PPUSH
6530: CALL_OW 112
// repeat wait ( 0 0$1 ) ;
6534: LD_INT 35
6536: PPUSH
6537: CALL_OW 67
// until GetDistUnits ( Heike , Givi ) < 4 ;
6541: LD_EXP 14
6545: PPUSH
6546: LD_EXP 16
6550: PPUSH
6551: CALL_OW 296
6555: PUSH
6556: LD_INT 4
6558: LESS
6559: IFFALSE 6534
// Say ( Mike , DM-quest-1 ) ;
6561: LD_EXP 17
6565: PPUSH
6566: LD_STRING DM-quest-1
6568: PPUSH
6569: CALL_OW 88
// Say ( Givi , DG-quest-1 ) ;
6573: LD_EXP 16
6577: PPUSH
6578: LD_STRING DG-quest-1
6580: PPUSH
6581: CALL_OW 88
// ComMoveXY ( Heike , 55 , 87 ) ;
6585: LD_EXP 14
6589: PPUSH
6590: LD_INT 55
6592: PPUSH
6593: LD_INT 87
6595: PPUSH
6596: CALL_OW 111
// InGameOff ;
6600: CALL_OW 9
// mercenariesQuestDone := true ;
6604: LD_ADDR_EXP 11
6608: PUSH
6609: LD_INT 1
6611: ST_TO_ADDR
// end ;
6612: END
// every 0 0$1 trigger Heike in FilterAllUnits ( [ f_driving ] ) do
6613: LD_EXP 14
6617: PUSH
6618: LD_INT 55
6620: PUSH
6621: EMPTY
6622: LIST
6623: PPUSH
6624: CALL_OW 69
6628: IN
6629: IFFALSE 6669
6631: GO 6633
6633: DISABLE
// begin if Difficulty < 3 then
6634: LD_OWVAR 67
6638: PUSH
6639: LD_INT 3
6641: LESS
6642: IFFALSE 6657
// RemoveSeeing ( 59 , 60 , 2 ) ;
6644: LD_INT 59
6646: PPUSH
6647: LD_INT 60
6649: PPUSH
6650: LD_INT 2
6652: PPUSH
6653: CALL_OW 331
// Say ( Heike , DH-driver ) ;
6657: LD_EXP 14
6661: PPUSH
6662: LD_STRING DH-driver
6664: PPUSH
6665: CALL_OW 88
// end ;
6669: END
// every 0 0$1 trigger mercenariesQuestDone do
6670: LD_EXP 11
6674: IFFALSE 7045
6676: GO 6678
6678: DISABLE
// begin if mercenariesQuestReady then
6679: LD_EXP 10
6683: IFFALSE 6692
// ChangeMissionObjectives ( O5_proof_cont_out ) ;
6685: LD_STRING O5_proof_cont_out
6687: PPUSH
6688: CALL_OW 337
// InGameOn ;
6692: CALL_OW 8
// if IsInUnit ( Heike ) then
6696: LD_EXP 14
6700: PPUSH
6701: CALL_OW 310
6705: IFFALSE 6716
// ComExitVehicle ( Heike ) ;
6707: LD_EXP 14
6711: PPUSH
6712: CALL_OW 121
// wait ( 3 ) ;
6716: LD_INT 3
6718: PPUSH
6719: CALL_OW 67
// AddComTurnUnit ( Heike , Givi ) ;
6723: LD_EXP 14
6727: PPUSH
6728: LD_EXP 16
6732: PPUSH
6733: CALL_OW 179
// ComTurnUnit ( [ Olaf , Mike , Givi ] , Heike ) ;
6737: LD_EXP 15
6741: PUSH
6742: LD_EXP 17
6746: PUSH
6747: LD_EXP 16
6751: PUSH
6752: EMPTY
6753: LIST
6754: LIST
6755: LIST
6756: PPUSH
6757: LD_EXP 14
6761: PPUSH
6762: CALL_OW 119
// Say ( Heike , DH-quest-done-1 ) ;
6766: LD_EXP 14
6770: PPUSH
6771: LD_STRING DH-quest-done-1
6773: PPUSH
6774: CALL_OW 88
// Say ( Mike , DM-quest-done-1 ) ;
6778: LD_EXP 17
6782: PPUSH
6783: LD_STRING DM-quest-done-1
6785: PPUSH
6786: CALL_OW 88
// ComTurnUnit ( Heike , Olaf ) ;
6790: LD_EXP 14
6794: PPUSH
6795: LD_EXP 15
6799: PPUSH
6800: CALL_OW 119
// Say ( Heike , DH-quest-done-2 ) ;
6804: LD_EXP 14
6808: PPUSH
6809: LD_STRING DH-quest-done-2
6811: PPUSH
6812: CALL_OW 88
// Say ( Olaf , DO-quest-done-2 ) ;
6816: LD_EXP 15
6820: PPUSH
6821: LD_STRING DO-quest-done-2
6823: PPUSH
6824: CALL_OW 88
// Say ( Olaf , DO-quest-done-3 ) ;
6828: LD_EXP 15
6832: PPUSH
6833: LD_STRING DO-quest-done-3
6835: PPUSH
6836: CALL_OW 88
// ComMoveXY ( Givi , 51 , 90 ) ;
6840: LD_EXP 16
6844: PPUSH
6845: LD_INT 51
6847: PPUSH
6848: LD_INT 90
6850: PPUSH
6851: CALL_OW 111
// AddComTurnXY ( Givi , 50 , 89 ) ;
6855: LD_EXP 16
6859: PPUSH
6860: LD_INT 50
6862: PPUSH
6863: LD_INT 89
6865: PPUSH
6866: CALL_OW 178
// ComTurnUnit ( Heike , Givi ) ;
6870: LD_EXP 14
6874: PPUSH
6875: LD_EXP 16
6879: PPUSH
6880: CALL_OW 119
// Say ( Givi , DG-quest-done-4 ) ;
6884: LD_EXP 16
6888: PPUSH
6889: LD_STRING DG-quest-done-4
6891: PPUSH
6892: CALL_OW 88
// ComTurnUnit ( Givi , Heike ) ;
6896: LD_EXP 16
6900: PPUSH
6901: LD_EXP 14
6905: PPUSH
6906: CALL_OW 119
// Say ( Heike , DH-quest-done-4 ) ;
6910: LD_EXP 14
6914: PPUSH
6915: LD_STRING DH-quest-done-4
6917: PPUSH
6918: CALL_OW 88
// Say ( Olaf , DO-quest-done-4 ) ;
6922: LD_EXP 15
6926: PPUSH
6927: LD_STRING DO-quest-done-4
6929: PPUSH
6930: CALL_OW 88
// ComTurnUnit ( Heike , Olaf ) ;
6934: LD_EXP 14
6938: PPUSH
6939: LD_EXP 15
6943: PPUSH
6944: CALL_OW 119
// Say ( Heike , DH-quest-done-5 ) ;
6948: LD_EXP 14
6952: PPUSH
6953: LD_STRING DH-quest-done-5
6955: PPUSH
6956: CALL_OW 88
// InGameOff ;
6960: CALL_OW 9
// ChangeMissionObjectives ( O6_end_cont ) ;
6964: LD_STRING O6_end_cont
6966: PPUSH
6967: CALL_OW 337
// SetSide ( Givi , 2 ) ;
6971: LD_EXP 16
6975: PPUSH
6976: LD_INT 2
6978: PPUSH
6979: CALL_OW 235
// SetSide ( Mike , 2 ) ;
6983: LD_EXP 17
6987: PPUSH
6988: LD_INT 2
6990: PPUSH
6991: CALL_OW 235
// SetTech ( tech_explos , 2 , state_researched ) ;
6995: LD_INT 42
6997: PPUSH
6998: LD_INT 2
7000: PPUSH
7001: LD_INT 2
7003: PPUSH
7004: CALL_OW 322
// ComTurnXY ( Olaf , 53 , 89 ) ;
7008: LD_EXP 15
7012: PPUSH
7013: LD_INT 53
7015: PPUSH
7016: LD_INT 89
7018: PPUSH
7019: CALL_OW 118
// lastObjectiveActive := true ;
7023: LD_ADDR_EXP 12
7027: PUSH
7028: LD_INT 1
7030: ST_TO_ADDR
// SetAreaMapShow ( escapeEast , 1 ) ;
7031: LD_INT 1
7033: PPUSH
7034: LD_INT 1
7036: PPUSH
7037: CALL_OW 424
// PreparePrison ;
7041: CALL 1081 0 0
// end ;
7045: END
// every 0 0$1 trigger FilterAllUnits ( [ [ f_side , 2 ] , [ f_dist , northDep , 10 ] ] ) do var i , tmp ;
7046: LD_INT 22
7048: PUSH
7049: LD_INT 2
7051: PUSH
7052: EMPTY
7053: LIST
7054: LIST
7055: PUSH
7056: LD_INT 91
7058: PUSH
7059: LD_INT 2
7061: PUSH
7062: LD_INT 10
7064: PUSH
7065: EMPTY
7066: LIST
7067: LIST
7068: LIST
7069: PUSH
7070: EMPTY
7071: LIST
7072: LIST
7073: PPUSH
7074: CALL_OW 69
7078: IFFALSE 7222
7080: GO 7082
7082: DISABLE
7083: LD_INT 0
7085: PPUSH
7086: PPUSH
// begin tmp := FilterAllUnits ( [ [ f_side , 3 ] , [ f_class , 1 ] , [ f_inside ] ] ) ;
7087: LD_ADDR_VAR 0 2
7091: PUSH
7092: LD_INT 22
7094: PUSH
7095: LD_INT 3
7097: PUSH
7098: EMPTY
7099: LIST
7100: LIST
7101: PUSH
7102: LD_INT 25
7104: PUSH
7105: LD_INT 1
7107: PUSH
7108: EMPTY
7109: LIST
7110: LIST
7111: PUSH
7112: LD_INT 54
7114: PUSH
7115: EMPTY
7116: LIST
7117: PUSH
7118: EMPTY
7119: LIST
7120: LIST
7121: LIST
7122: PPUSH
7123: CALL_OW 69
7127: ST_TO_ADDR
// if not tmp then
7128: LD_VAR 0 2
7132: NOT
7133: IFFALSE 7137
// exit ;
7135: GO 7222
// for i in tmp do
7137: LD_ADDR_VAR 0 1
7141: PUSH
7142: LD_VAR 0 2
7146: PUSH
7147: FOR_IN
7148: IFFALSE 7176
// begin ComExitBuilding ( i ) ;
7150: LD_VAR 0 1
7154: PPUSH
7155: CALL_OW 122
// AddComAgressiveMove ( i , 121 , 22 ) ;
7159: LD_VAR 0 1
7163: PPUSH
7164: LD_INT 121
7166: PPUSH
7167: LD_INT 22
7169: PPUSH
7170: CALL_OW 174
// end ;
7174: GO 7147
7176: POP
7177: POP
// ComAgressiveMove ( russianForces , 121 , 22 ) ;
7178: LD_EXP 21
7182: PPUSH
7183: LD_INT 121
7185: PPUSH
7186: LD_INT 22
7188: PPUSH
7189: CALL_OW 114
// ComAgressiveMove ( russianTank , 121 , 22 ) ;
7193: LD_EXP 22
7197: PPUSH
7198: LD_INT 121
7200: PPUSH
7201: LD_INT 22
7203: PPUSH
7204: CALL_OW 114
// AddComAttackUnit ( russianTank , Heike ) ;
7208: LD_EXP 22
7212: PPUSH
7213: LD_EXP 14
7217: PPUSH
7218: CALL_OW 175
// end ;
7222: PPOPN 2
7224: END
// every 0 0$1 trigger FilterAllUnits ( [ [ f_side , 2 ] , [ f_dist , southDep , 10 ] ] ) do var i , tmp ;
7225: LD_INT 22
7227: PUSH
7228: LD_INT 2
7230: PUSH
7231: EMPTY
7232: LIST
7233: LIST
7234: PUSH
7235: LD_INT 91
7237: PUSH
7238: LD_INT 8
7240: PUSH
7241: LD_INT 10
7243: PUSH
7244: EMPTY
7245: LIST
7246: LIST
7247: LIST
7248: PUSH
7249: EMPTY
7250: LIST
7251: LIST
7252: PPUSH
7253: CALL_OW 69
7257: IFFALSE 7401
7259: GO 7261
7261: DISABLE
7262: LD_INT 0
7264: PPUSH
7265: PPUSH
// begin tmp := FilterAllUnits ( [ [ f_side , 3 ] , [ f_class , 1 ] , [ f_inside ] ] ) ;
7266: LD_ADDR_VAR 0 2
7270: PUSH
7271: LD_INT 22
7273: PUSH
7274: LD_INT 3
7276: PUSH
7277: EMPTY
7278: LIST
7279: LIST
7280: PUSH
7281: LD_INT 25
7283: PUSH
7284: LD_INT 1
7286: PUSH
7287: EMPTY
7288: LIST
7289: LIST
7290: PUSH
7291: LD_INT 54
7293: PUSH
7294: EMPTY
7295: LIST
7296: PUSH
7297: EMPTY
7298: LIST
7299: LIST
7300: LIST
7301: PPUSH
7302: CALL_OW 69
7306: ST_TO_ADDR
// if not tmp then
7307: LD_VAR 0 2
7311: NOT
7312: IFFALSE 7316
// exit ;
7314: GO 7401
// for i in tmp do
7316: LD_ADDR_VAR 0 1
7320: PUSH
7321: LD_VAR 0 2
7325: PUSH
7326: FOR_IN
7327: IFFALSE 7355
// begin ComExitBuilding ( i ) ;
7329: LD_VAR 0 1
7333: PPUSH
7334: CALL_OW 122
// AddComAgressiveMove ( i , 142 , 71 ) ;
7338: LD_VAR 0 1
7342: PPUSH
7343: LD_INT 142
7345: PPUSH
7346: LD_INT 71
7348: PPUSH
7349: CALL_OW 174
// end ;
7353: GO 7326
7355: POP
7356: POP
// ComAgressiveMove ( russianForces , 142 , 71 ) ;
7357: LD_EXP 21
7361: PPUSH
7362: LD_INT 142
7364: PPUSH
7365: LD_INT 71
7367: PPUSH
7368: CALL_OW 114
// ComAgressiveMove ( russianTank , 142 , 71 ) ;
7372: LD_EXP 22
7376: PPUSH
7377: LD_INT 142
7379: PPUSH
7380: LD_INT 71
7382: PPUSH
7383: CALL_OW 114
// AddComAttackUnit ( russianTank , Heike ) ;
7387: LD_EXP 22
7391: PPUSH
7392: LD_EXP 14
7396: PPUSH
7397: CALL_OW 175
// end ;
7401: PPOPN 2
7403: END
// every 0 0$1 trigger lastObjectiveActive and not IsOk ( northDep ) and Difficulty = 1 and not prisonFound do
7404: LD_EXP 12
7408: PUSH
7409: LD_INT 2
7411: PPUSH
7412: CALL_OW 302
7416: NOT
7417: AND
7418: PUSH
7419: LD_OWVAR 67
7423: PUSH
7424: LD_INT 1
7426: EQUAL
7427: AND
7428: PUSH
7429: LD_EXP 13
7433: NOT
7434: AND
7435: IFFALSE 7452
7437: GO 7439
7439: DISABLE
// begin Say ( Heike , DH-prison-missing ) ;
7440: LD_EXP 14
7444: PPUSH
7445: LD_STRING DH-prison-missing
7447: PPUSH
7448: CALL_OW 88
// end ;
7452: END
// every 0 0$1 trigger lastObjectiveActive and not IsOk ( southDep ) and Difficulty > 1 and not prisonFound do
7453: LD_EXP 12
7457: PUSH
7458: LD_INT 8
7460: PPUSH
7461: CALL_OW 302
7465: NOT
7466: AND
7467: PUSH
7468: LD_OWVAR 67
7472: PUSH
7473: LD_INT 1
7475: GREATER
7476: AND
7477: PUSH
7478: LD_EXP 13
7482: NOT
7483: AND
7484: IFFALSE 7501
7486: GO 7488
7488: DISABLE
// begin Say ( Heike , DH-prison-missing ) ;
7489: LD_EXP 14
7493: PPUSH
7494: LD_STRING DH-prison-missing
7496: PPUSH
7497: CALL_OW 88
// end ;
7501: END
// every 0 0$1 trigger lastObjectiveActive and not IsOk ( workshop ) and not prisonFound do
7502: LD_EXP 12
7506: PUSH
7507: LD_INT 3
7509: PPUSH
7510: CALL_OW 302
7514: NOT
7515: AND
7516: PUSH
7517: LD_EXP 13
7521: NOT
7522: AND
7523: IFFALSE 7540
7525: GO 7527
7527: DISABLE
// begin Say ( Heike , DH-prison-missing-a ) ;
7528: LD_EXP 14
7532: PPUSH
7533: LD_STRING DH-prison-missing-a
7535: PPUSH
7536: CALL_OW 88
// end ;
7540: END
// every 0 0$1 trigger lastObjectiveActive and not IsOk ( lab ) and not prisonFound do
7541: LD_EXP 12
7545: PUSH
7546: LD_INT 10
7548: PPUSH
7549: CALL_OW 302
7553: NOT
7554: AND
7555: PUSH
7556: LD_EXP 13
7560: NOT
7561: AND
7562: IFFALSE 7579
7564: GO 7566
7566: DISABLE
// begin Say ( Heike , DH-prison-missing-a ) ;
7567: LD_EXP 14
7571: PPUSH
7572: LD_STRING DH-prison-missing-a
7574: PPUSH
7575: CALL_OW 88
// end ;
7579: END
// every 0 0$1 trigger not prisonFound and lastObjectiveActive and See ( 2 , Kamil ) do
7580: LD_EXP 13
7584: NOT
7585: PUSH
7586: LD_EXP 12
7590: AND
7591: PUSH
7592: LD_INT 2
7594: PPUSH
7595: LD_EXP 18
7599: PPUSH
7600: CALL_OW 292
7604: AND
7605: IFFALSE 7692
7607: GO 7609
7609: DISABLE
// begin ComTurnUnit ( Kamil , Heike ) ;
7610: LD_EXP 18
7614: PPUSH
7615: LD_EXP 14
7619: PPUSH
7620: CALL_OW 119
// DialogueOn ;
7624: CALL_OW 6
// CenterNowOnUnits ( Kamil ) ;
7628: LD_EXP 18
7632: PPUSH
7633: CALL_OW 87
// Say ( Kamil , DK-prison-found ) ;
7637: LD_EXP 18
7641: PPUSH
7642: LD_STRING DK-prison-found
7644: PPUSH
7645: CALL_OW 88
// Say ( Heike , DH-prison-found ) ;
7649: LD_EXP 14
7653: PPUSH
7654: LD_STRING DH-prison-found
7656: PPUSH
7657: CALL_OW 88
// DialogueOff ;
7661: CALL_OW 7
// SetSide ( Kamil , 2 ) ;
7665: LD_EXP 18
7669: PPUSH
7670: LD_INT 2
7672: PPUSH
7673: CALL_OW 235
// prisonFound := true ;
7677: LD_ADDR_EXP 13
7681: PUSH
7682: LD_INT 1
7684: ST_TO_ADDR
// ChangeMissionObjectives ( O6_prison_out ) ;
7685: LD_STRING O6_prison_out
7687: PPUSH
7688: CALL_OW 337
// end ;
7692: END
// every 0 0$1 trigger lastObjectiveActive and IsOk ( Heike ) and FilterUnitsExceptArea ( escapeEast , [ [ f_type , unit_human ] , [ f_side , 2 ] ] ) = 0 do var tmp ;
7693: LD_EXP 12
7697: PUSH
7698: LD_EXP 14
7702: PPUSH
7703: CALL_OW 302
7707: AND
7708: PUSH
7709: LD_INT 1
7711: PPUSH
7712: LD_INT 21
7714: PUSH
7715: LD_INT 1
7717: PUSH
7718: EMPTY
7719: LIST
7720: LIST
7721: PUSH
7722: LD_INT 22
7724: PUSH
7725: LD_INT 2
7727: PUSH
7728: EMPTY
7729: LIST
7730: LIST
7731: PUSH
7732: EMPTY
7733: LIST
7734: LIST
7735: PPUSH
7736: CALL_OW 71
7740: PUSH
7741: LD_INT 0
7743: EQUAL
7744: AND
7745: IFFALSE 7937
7747: GO 7749
7749: DISABLE
7750: LD_INT 0
7752: PPUSH
// begin tmp := FilterAllUnits ( [ [ f_side , 2 ] , [ f_type , unit_human ] ] ) ;
7753: LD_ADDR_VAR 0 1
7757: PUSH
7758: LD_INT 22
7760: PUSH
7761: LD_INT 2
7763: PUSH
7764: EMPTY
7765: LIST
7766: LIST
7767: PUSH
7768: LD_INT 21
7770: PUSH
7771: LD_INT 1
7773: PUSH
7774: EMPTY
7775: LIST
7776: LIST
7777: PUSH
7778: EMPTY
7779: LIST
7780: LIST
7781: PPUSH
7782: CALL_OW 69
7786: ST_TO_ADDR
// if prisonFound then
7787: LD_EXP 13
7791: IFFALSE 7805
// AddMedal ( med1 , 1 ) else
7793: LD_STRING med1
7795: PPUSH
7796: LD_INT 1
7798: PPUSH
7799: CALL_OW 101
7803: GO 7816
// AddMedal ( med1 , - 1 ) ;
7805: LD_STRING med1
7807: PPUSH
7808: LD_INT 1
7810: NEG
7811: PPUSH
7812: CALL_OW 101
// if ( tmp < 3 and not prisonFound ) or ( tmp < 4 and prisonFound ) then
7816: LD_VAR 0 1
7820: PUSH
7821: LD_INT 3
7823: LESS
7824: PUSH
7825: LD_EXP 13
7829: NOT
7830: AND
7831: PUSH
7832: LD_VAR 0 1
7836: PUSH
7837: LD_INT 4
7839: LESS
7840: PUSH
7841: LD_EXP 13
7845: AND
7846: OR
7847: IFFALSE 7862
// AddMedal ( med2 , - 1 ) else
7849: LD_STRING med2
7851: PPUSH
7852: LD_INT 1
7854: NEG
7855: PPUSH
7856: CALL_OW 101
7860: GO 7872
// AddMedal ( med2 , 1 ) ;
7862: LD_STRING med2
7864: PPUSH
7865: LD_INT 1
7867: PPUSH
7868: CALL_OW 101
// if prisonFound and johnnySaved and tmp >= 4 then
7872: LD_EXP 13
7876: PUSH
7877: LD_EXP 4
7881: AND
7882: PUSH
7883: LD_VAR 0 1
7887: PUSH
7888: LD_INT 4
7890: GREATEREQUAL
7891: AND
7892: IFFALSE 7906
// AddMedal ( med3 , 1 ) else
7894: LD_STRING med3
7896: PPUSH
7897: LD_INT 1
7899: PPUSH
7900: CALL_OW 101
7904: GO 7917
// AddMedal ( med3 , - 1 ) ;
7906: LD_STRING med3
7908: PPUSH
7909: LD_INT 1
7911: NEG
7912: PPUSH
7913: CALL_OW 101
// GiveMedals ( MAIN ) ;
7917: LD_STRING MAIN
7919: PPUSH
7920: CALL_OW 102
// RewardPeople ( tmp ) ;
7924: LD_VAR 0 1
7928: PPUSH
7929: CALL_OW 43
// YouWin ;
7933: CALL_OW 103
// end ; end_of_file
7937: PPOPN 1
7939: END
// on UnitDestroyed ( un ) do begin if un = Heike then
7940: LD_VAR 0 1
7944: PUSH
7945: LD_EXP 14
7949: EQUAL
7950: IFFALSE 7959
// YouLost ( Heike ) ;
7952: LD_STRING Heike
7954: PPUSH
7955: CALL_OW 104
// if un in FilterAllUnits ( [ [ f_side , 3 ] , [ f_class , 1 ] ] ) then
7959: LD_VAR 0 1
7963: PUSH
7964: LD_INT 22
7966: PUSH
7967: LD_INT 3
7969: PUSH
7970: EMPTY
7971: LIST
7972: LIST
7973: PUSH
7974: LD_INT 25
7976: PUSH
7977: LD_INT 1
7979: PUSH
7980: EMPTY
7981: LIST
7982: LIST
7983: PUSH
7984: EMPTY
7985: LIST
7986: LIST
7987: PPUSH
7988: CALL_OW 69
7992: IN
7993: IFFALSE 8099
// begin if un in russianPatrol then
7995: LD_VAR 0 1
7999: PUSH
8000: LD_EXP 19
8004: IN
8005: IFFALSE 8023
// russianPatrol := russianPatrol diff un ;
8007: LD_ADDR_EXP 19
8011: PUSH
8012: LD_EXP 19
8016: PUSH
8017: LD_VAR 0 1
8021: DIFF
8022: ST_TO_ADDR
// if un in russianForestPatrol then
8023: LD_VAR 0 1
8027: PUSH
8028: LD_EXP 20
8032: IN
8033: IFFALSE 8051
// russianForestPatrol := russianForestPatrol diff un ;
8035: LD_ADDR_EXP 20
8039: PUSH
8040: LD_EXP 20
8044: PUSH
8045: LD_VAR 0 1
8049: DIFF
8050: ST_TO_ADDR
// dogTag := Replace ( dogTag , dogTag + 1 , [ GetX ( un ) , GetY ( un ) ] ) ;
8051: LD_ADDR_EXP 5
8055: PUSH
8056: LD_EXP 5
8060: PPUSH
8061: LD_EXP 5
8065: PUSH
8066: LD_INT 1
8068: PLUS
8069: PPUSH
8070: LD_VAR 0 1
8074: PPUSH
8075: CALL_OW 250
8079: PUSH
8080: LD_VAR 0 1
8084: PPUSH
8085: CALL_OW 251
8089: PUSH
8090: EMPTY
8091: LIST
8092: LIST
8093: PPUSH
8094: CALL_OW 1
8098: ST_TO_ADDR
// end ; end ;
8099: PPOPN 1
8101: END
// on UnitGoesToRed ( un ) do begin if un = Heike then
8102: LD_VAR 0 1
8106: PUSH
8107: LD_EXP 14
8111: EQUAL
8112: IFFALSE 8121
// YouLost ( Heike ) ;
8114: LD_STRING Heike
8116: PPUSH
8117: CALL_OW 104
// end ;
8121: PPOPN 1
8123: END
// on Contact ( s1 , s2 ) do begin if s1 in [ 2 , 5 ] and s2 in [ 5 , 2 ] then
8124: LD_VAR 0 1
8128: PUSH
8129: LD_INT 2
8131: PUSH
8132: LD_INT 5
8134: PUSH
8135: EMPTY
8136: LIST
8137: LIST
8138: IN
8139: PUSH
8140: LD_VAR 0 2
8144: PUSH
8145: LD_INT 5
8147: PUSH
8148: LD_INT 2
8150: PUSH
8151: EMPTY
8152: LIST
8153: LIST
8154: IN
8155: AND
8156: IFFALSE 8165
// YouLost ( FriendlyFire ) ;
8158: LD_STRING FriendlyFire
8160: PPUSH
8161: CALL_OW 104
// end ;
8165: PPOPN 2
8167: END
