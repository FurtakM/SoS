// starting begin ResetFog ;
   0: CALL_OW 335
// AnimateTrees ( true ) ;
   4: LD_INT 1
   6: PPUSH
   7: CALL_OW 573
// PrepareNature ( 4 , 3 , 4 , 5 , 2 , 0 , 3 , natureArea , riverArea ) ;
  11: LD_INT 4
  13: PPUSH
  14: LD_INT 3
  16: PPUSH
  17: LD_INT 4
  19: PPUSH
  20: LD_INT 5
  22: PPUSH
  23: LD_INT 2
  25: PPUSH
  26: LD_INT 0
  28: PPUSH
  29: LD_INT 3
  31: PPUSH
  32: LD_INT 9
  34: PPUSH
  35: LD_INT 8
  37: PPUSH
  38: CALL 51 0 9
// PrepareHeike ;
  42: CALL 655 0 0
// Action ;
  46: CALL 720 0 0
// end ; end_of_file
  50: END
// export function PrepareNature ( birds , tigers , apemans , enchidnas , horses , mastodonts , fishes , nat_area , wat_area ) ; var i , animal ; begin
  51: LD_INT 0
  53: PPUSH
  54: PPUSH
  55: PPUSH
// uc_side = 0 ;
  56: LD_ADDR_OWVAR 20
  60: PUSH
  61: LD_INT 0
  63: ST_TO_ADDR
// uc_nation = 0 ;
  64: LD_ADDR_OWVAR 21
  68: PUSH
  69: LD_INT 0
  71: ST_TO_ADDR
// InitHc ;
  72: CALL_OW 19
// InitVc ;
  76: CALL_OW 20
// if mastodonts then
  80: LD_VAR 0 6
  84: IFFALSE 151
// for i = 1 to mastodonts do
  86: LD_ADDR_VAR 0 11
  90: PUSH
  91: DOUBLE
  92: LD_INT 1
  94: DEC
  95: ST_TO_ADDR
  96: LD_VAR 0 6
 100: PUSH
 101: FOR_TO
 102: IFFALSE 149
// begin vc_chassis := 31 ;
 104: LD_ADDR_OWVAR 37
 108: PUSH
 109: LD_INT 31
 111: ST_TO_ADDR
// vc_control := control_rider ;
 112: LD_ADDR_OWVAR 38
 116: PUSH
 117: LD_INT 4
 119: ST_TO_ADDR
// animal := CreateVehicle ;
 120: LD_ADDR_VAR 0 12
 124: PUSH
 125: CALL_OW 45
 129: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
 130: LD_VAR 0 12
 134: PPUSH
 135: LD_VAR 0 8
 139: PPUSH
 140: LD_INT 0
 142: PPUSH
 143: CALL_OW 49
// end ;
 147: GO 101
 149: POP
 150: POP
// if horses then
 151: LD_VAR 0 5
 155: IFFALSE 222
// for i = 1 to horses do
 157: LD_ADDR_VAR 0 11
 161: PUSH
 162: DOUBLE
 163: LD_INT 1
 165: DEC
 166: ST_TO_ADDR
 167: LD_VAR 0 5
 171: PUSH
 172: FOR_TO
 173: IFFALSE 220
// begin hc_class := 21 ;
 175: LD_ADDR_OWVAR 28
 179: PUSH
 180: LD_INT 21
 182: ST_TO_ADDR
// hc_gallery :=  ;
 183: LD_ADDR_OWVAR 33
 187: PUSH
 188: LD_STRING 
 190: ST_TO_ADDR
// animal := CreateHuman ;
 191: LD_ADDR_VAR 0 12
 195: PUSH
 196: CALL_OW 44
 200: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
 201: LD_VAR 0 12
 205: PPUSH
 206: LD_VAR 0 8
 210: PPUSH
 211: LD_INT 0
 213: PPUSH
 214: CALL_OW 49
// end ;
 218: GO 172
 220: POP
 221: POP
// if birds then
 222: LD_VAR 0 1
 226: IFFALSE 293
// for i = 1 to birds do
 228: LD_ADDR_VAR 0 11
 232: PUSH
 233: DOUBLE
 234: LD_INT 1
 236: DEC
 237: ST_TO_ADDR
 238: LD_VAR 0 1
 242: PUSH
 243: FOR_TO
 244: IFFALSE 291
// begin hc_class = 18 ;
 246: LD_ADDR_OWVAR 28
 250: PUSH
 251: LD_INT 18
 253: ST_TO_ADDR
// hc_gallery =  ;
 254: LD_ADDR_OWVAR 33
 258: PUSH
 259: LD_STRING 
 261: ST_TO_ADDR
// animal := CreateHuman ;
 262: LD_ADDR_VAR 0 12
 266: PUSH
 267: CALL_OW 44
 271: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
 272: LD_VAR 0 12
 276: PPUSH
 277: LD_VAR 0 8
 281: PPUSH
 282: LD_INT 0
 284: PPUSH
 285: CALL_OW 49
// end ;
 289: GO 243
 291: POP
 292: POP
// if tigers then
 293: LD_VAR 0 2
 297: IFFALSE 381
// for i = 1 to tigers do
 299: LD_ADDR_VAR 0 11
 303: PUSH
 304: DOUBLE
 305: LD_INT 1
 307: DEC
 308: ST_TO_ADDR
 309: LD_VAR 0 2
 313: PUSH
 314: FOR_TO
 315: IFFALSE 379
// begin hc_class = class_tiger ;
 317: LD_ADDR_OWVAR 28
 321: PUSH
 322: LD_INT 14
 324: ST_TO_ADDR
// hc_gallery =  ;
 325: LD_ADDR_OWVAR 33
 329: PUSH
 330: LD_STRING 
 332: ST_TO_ADDR
// hc_agressivity = Rand ( - 7 , 7 ) ;
 333: LD_ADDR_OWVAR 35
 337: PUSH
 338: LD_INT 7
 340: NEG
 341: PPUSH
 342: LD_INT 7
 344: PPUSH
 345: CALL_OW 12
 349: ST_TO_ADDR
// animal := CreateHuman ;
 350: LD_ADDR_VAR 0 12
 354: PUSH
 355: CALL_OW 44
 359: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
 360: LD_VAR 0 12
 364: PPUSH
 365: LD_VAR 0 8
 369: PPUSH
 370: LD_INT 0
 372: PPUSH
 373: CALL_OW 49
// end ;
 377: GO 314
 379: POP
 380: POP
// if apemans then
 381: LD_VAR 0 3
 385: IFFALSE 508
// for i = 1 to apemans do
 387: LD_ADDR_VAR 0 11
 391: PUSH
 392: DOUBLE
 393: LD_INT 1
 395: DEC
 396: ST_TO_ADDR
 397: LD_VAR 0 3
 401: PUSH
 402: FOR_TO
 403: IFFALSE 506
// begin hc_class = class_apeman ;
 405: LD_ADDR_OWVAR 28
 409: PUSH
 410: LD_INT 12
 412: ST_TO_ADDR
// hc_gallery =  ;
 413: LD_ADDR_OWVAR 33
 417: PUSH
 418: LD_STRING 
 420: ST_TO_ADDR
// hc_agressivity = rand ( - 5 , 5 ) ;
 421: LD_ADDR_OWVAR 35
 425: PUSH
 426: LD_INT 5
 428: NEG
 429: PPUSH
 430: LD_INT 5
 432: PPUSH
 433: CALL_OW 12
 437: ST_TO_ADDR
// hc_skills := [ rand ( 1 , 3 ) , rand ( 1 , 3 ) , 0 , 0 ] ;
 438: LD_ADDR_OWVAR 31
 442: PUSH
 443: LD_INT 1
 445: PPUSH
 446: LD_INT 3
 448: PPUSH
 449: CALL_OW 12
 453: PUSH
 454: LD_INT 1
 456: PPUSH
 457: LD_INT 3
 459: PPUSH
 460: CALL_OW 12
 464: PUSH
 465: LD_INT 0
 467: PUSH
 468: LD_INT 0
 470: PUSH
 471: EMPTY
 472: LIST
 473: LIST
 474: LIST
 475: LIST
 476: ST_TO_ADDR
// animal := CreateHuman ;
 477: LD_ADDR_VAR 0 12
 481: PUSH
 482: CALL_OW 44
 486: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
 487: LD_VAR 0 12
 491: PPUSH
 492: LD_VAR 0 8
 496: PPUSH
 497: LD_INT 0
 499: PPUSH
 500: CALL_OW 49
// end ;
 504: GO 402
 506: POP
 507: POP
// if enchidnas then
 508: LD_VAR 0 4
 512: IFFALSE 579
// for i = 1 to enchidnas do
 514: LD_ADDR_VAR 0 11
 518: PUSH
 519: DOUBLE
 520: LD_INT 1
 522: DEC
 523: ST_TO_ADDR
 524: LD_VAR 0 4
 528: PUSH
 529: FOR_TO
 530: IFFALSE 577
// begin hc_class = 13 ;
 532: LD_ADDR_OWVAR 28
 536: PUSH
 537: LD_INT 13
 539: ST_TO_ADDR
// hc_gallery =  ;
 540: LD_ADDR_OWVAR 33
 544: PUSH
 545: LD_STRING 
 547: ST_TO_ADDR
// animal := CreateHuman ;
 548: LD_ADDR_VAR 0 12
 552: PUSH
 553: CALL_OW 44
 557: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
 558: LD_VAR 0 12
 562: PPUSH
 563: LD_VAR 0 8
 567: PPUSH
 568: LD_INT 0
 570: PPUSH
 571: CALL_OW 49
// end ;
 575: GO 529
 577: POP
 578: POP
// if fishes then
 579: LD_VAR 0 7
 583: IFFALSE 650
// for i = 1 to fishes do
 585: LD_ADDR_VAR 0 11
 589: PUSH
 590: DOUBLE
 591: LD_INT 1
 593: DEC
 594: ST_TO_ADDR
 595: LD_VAR 0 7
 599: PUSH
 600: FOR_TO
 601: IFFALSE 648
// begin hc_class = 20 ;
 603: LD_ADDR_OWVAR 28
 607: PUSH
 608: LD_INT 20
 610: ST_TO_ADDR
// hc_gallery =  ;
 611: LD_ADDR_OWVAR 33
 615: PUSH
 616: LD_STRING 
 618: ST_TO_ADDR
// animal := CreateHuman ;
 619: LD_ADDR_VAR 0 12
 623: PUSH
 624: CALL_OW 44
 628: ST_TO_ADDR
// PlaceUnitArea ( animal , wat_area , false ) ;
 629: LD_VAR 0 12
 633: PPUSH
 634: LD_VAR 0 9
 638: PPUSH
 639: LD_INT 0
 641: PPUSH
 642: CALL_OW 49
// end ;
 646: GO 600
 648: POP
 649: POP
// end ; end_of_file
 650: LD_VAR 0 10
 654: RET
// export Heike ; export function PrepareHeike ; begin
 655: LD_INT 0
 657: PPUSH
// CenterNowOnXY ( 66 , 26 ) ;
 658: LD_INT 66
 660: PPUSH
 661: LD_INT 26
 663: PPUSH
 664: CALL_OW 86
// uc_side := 2 ;
 668: LD_ADDR_OWVAR 20
 672: PUSH
 673: LD_INT 2
 675: ST_TO_ADDR
// uc_nation := 2 ;
 676: LD_ADDR_OWVAR 21
 680: PUSH
 681: LD_INT 2
 683: ST_TO_ADDR
// Heike := NewCharacter ( Heike ) ;
 684: LD_ADDR_EXP 1
 688: PUSH
 689: LD_STRING Heike
 691: PPUSH
 692: CALL_OW 25
 696: ST_TO_ADDR
// PlaceUnitXY ( Heike , 66 , 26 , true ) ;
 697: LD_EXP 1
 701: PPUSH
 702: LD_INT 66
 704: PPUSH
 705: LD_INT 26
 707: PPUSH
 708: LD_INT 1
 710: PPUSH
 711: CALL_OW 48
// end ; end_of_file end_of_file end_of_file
 715: LD_VAR 0 1
 719: RET
// export function Action ; begin
 720: LD_INT 0
 722: PPUSH
// InGameOn ;
 723: CALL_OW 8
// wait ( 0 0$2 ) ;
 727: LD_INT 70
 729: PPUSH
 730: CALL_OW 67
// Say ( Heike , DH-start-1 ) ;
 734: LD_EXP 1
 738: PPUSH
 739: LD_STRING DH-start-1
 741: PPUSH
 742: CALL_OW 88
// ComMoveXY ( Heike , 71 , 29 ) ;
 746: LD_EXP 1
 750: PPUSH
 751: LD_INT 71
 753: PPUSH
 754: LD_INT 29
 756: PPUSH
 757: CALL_OW 111
// wait ( 0 0$3 ) ;
 761: LD_INT 105
 763: PPUSH
 764: CALL_OW 67
// ComMoveXY ( Heike , 71 , 33 ) ;
 768: LD_EXP 1
 772: PPUSH
 773: LD_INT 71
 775: PPUSH
 776: LD_INT 33
 778: PPUSH
 779: CALL_OW 111
// AddComTurnXY ( Heike , 71 , 34 ) ;
 783: LD_EXP 1
 787: PPUSH
 788: LD_INT 71
 790: PPUSH
 791: LD_INT 34
 793: PPUSH
 794: CALL_OW 178
// wait ( 0 0$3 ) ;
 798: LD_INT 105
 800: PPUSH
 801: CALL_OW 67
// Say ( Heike , DH-start-2 ) ;
 805: LD_EXP 1
 809: PPUSH
 810: LD_STRING DH-start-2
 812: PPUSH
 813: CALL_OW 88
// wait ( 0 0$2 ) ;
 817: LD_INT 70
 819: PPUSH
 820: CALL_OW 67
// ComMoveXY ( Heike , 65 , 26 ) ;
 824: LD_EXP 1
 828: PPUSH
 829: LD_INT 65
 831: PPUSH
 832: LD_INT 26
 834: PPUSH
 835: CALL_OW 111
// Say ( Heike , DH-start-3 ) ;
 839: LD_EXP 1
 843: PPUSH
 844: LD_STRING DH-start-3
 846: PPUSH
 847: CALL_OW 88
// InGameOff ;
 851: CALL_OW 9
// ChangeMissionObjectives ( O1_cont ) ;
 855: LD_STRING O1_cont
 857: PPUSH
 858: CALL_OW 337
// end ;
 862: LD_VAR 0 1
 866: RET
