// starting begin ResetFog ;
   0: CALL_OW 335
// AnimateTrees ( true ) ;
   4: LD_INT 1
   6: PPUSH
   7: CALL_OW 573
// PrepareNature ( 4 , 3 , 4 , 5 , 2 , 0 , 3 , natureArea , riverArea ) ;
  11: LD_INT 4
  13: PPUSH
  14: LD_INT 3
  16: PPUSH
  17: LD_INT 4
  19: PPUSH
  20: LD_INT 5
  22: PPUSH
  23: LD_INT 2
  25: PPUSH
  26: LD_INT 0
  28: PPUSH
  29: LD_INT 3
  31: PPUSH
  32: LD_INT 9
  34: PPUSH
  35: LD_INT 8
  37: PPUSH
  38: CALL 85 0 9
// end ;
  42: END
// every 0 0$1 do var time ;
  43: GO 45
  45: DISABLE
  46: LD_INT 0
  48: PPUSH
// begin time := tick ;
  49: LD_ADDR_VAR 0 1
  53: PUSH
  54: LD_OWVAR 1
  58: ST_TO_ADDR
// wait ( 0 0$3 ) ;
  59: LD_INT 105
  61: PPUSH
  62: CALL_OW 67
// display_strings := tick - time ;
  66: LD_ADDR_OWVAR 47
  70: PUSH
  71: LD_OWVAR 1
  75: PUSH
  76: LD_VAR 0 1
  80: MINUS
  81: ST_TO_ADDR
// end ; end_of_file
  82: PPOPN 1
  84: END
// export function PrepareNature ( birds , tigers , apemans , enchidnas , horses , mastodonts , fishes , nat_area , wat_area ) ; var i , animal ; begin
  85: LD_INT 0
  87: PPUSH
  88: PPUSH
  89: PPUSH
// uc_side = 0 ;
  90: LD_ADDR_OWVAR 20
  94: PUSH
  95: LD_INT 0
  97: ST_TO_ADDR
// uc_nation = 0 ;
  98: LD_ADDR_OWVAR 21
 102: PUSH
 103: LD_INT 0
 105: ST_TO_ADDR
// InitHc ;
 106: CALL_OW 19
// InitVc ;
 110: CALL_OW 20
// if mastodonts then
 114: LD_VAR 0 6
 118: IFFALSE 185
// for i = 1 to mastodonts do
 120: LD_ADDR_VAR 0 11
 124: PUSH
 125: DOUBLE
 126: LD_INT 1
 128: DEC
 129: ST_TO_ADDR
 130: LD_VAR 0 6
 134: PUSH
 135: FOR_TO
 136: IFFALSE 183
// begin vc_chassis := 31 ;
 138: LD_ADDR_OWVAR 37
 142: PUSH
 143: LD_INT 31
 145: ST_TO_ADDR
// vc_control := control_rider ;
 146: LD_ADDR_OWVAR 38
 150: PUSH
 151: LD_INT 4
 153: ST_TO_ADDR
// animal := CreateVehicle ;
 154: LD_ADDR_VAR 0 12
 158: PUSH
 159: CALL_OW 45
 163: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
 164: LD_VAR 0 12
 168: PPUSH
 169: LD_VAR 0 8
 173: PPUSH
 174: LD_INT 0
 176: PPUSH
 177: CALL_OW 49
// end ;
 181: GO 135
 183: POP
 184: POP
// if horses then
 185: LD_VAR 0 5
 189: IFFALSE 256
// for i = 1 to horses do
 191: LD_ADDR_VAR 0 11
 195: PUSH
 196: DOUBLE
 197: LD_INT 1
 199: DEC
 200: ST_TO_ADDR
 201: LD_VAR 0 5
 205: PUSH
 206: FOR_TO
 207: IFFALSE 254
// begin hc_class := 21 ;
 209: LD_ADDR_OWVAR 28
 213: PUSH
 214: LD_INT 21
 216: ST_TO_ADDR
// hc_gallery :=  ;
 217: LD_ADDR_OWVAR 33
 221: PUSH
 222: LD_STRING 
 224: ST_TO_ADDR
// animal := CreateHuman ;
 225: LD_ADDR_VAR 0 12
 229: PUSH
 230: CALL_OW 44
 234: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
 235: LD_VAR 0 12
 239: PPUSH
 240: LD_VAR 0 8
 244: PPUSH
 245: LD_INT 0
 247: PPUSH
 248: CALL_OW 49
// end ;
 252: GO 206
 254: POP
 255: POP
// if birds then
 256: LD_VAR 0 1
 260: IFFALSE 327
// for i = 1 to birds do
 262: LD_ADDR_VAR 0 11
 266: PUSH
 267: DOUBLE
 268: LD_INT 1
 270: DEC
 271: ST_TO_ADDR
 272: LD_VAR 0 1
 276: PUSH
 277: FOR_TO
 278: IFFALSE 325
// begin hc_class = 18 ;
 280: LD_ADDR_OWVAR 28
 284: PUSH
 285: LD_INT 18
 287: ST_TO_ADDR
// hc_gallery =  ;
 288: LD_ADDR_OWVAR 33
 292: PUSH
 293: LD_STRING 
 295: ST_TO_ADDR
// animal := CreateHuman ;
 296: LD_ADDR_VAR 0 12
 300: PUSH
 301: CALL_OW 44
 305: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
 306: LD_VAR 0 12
 310: PPUSH
 311: LD_VAR 0 8
 315: PPUSH
 316: LD_INT 0
 318: PPUSH
 319: CALL_OW 49
// end ;
 323: GO 277
 325: POP
 326: POP
// if tigers then
 327: LD_VAR 0 2
 331: IFFALSE 415
// for i = 1 to tigers do
 333: LD_ADDR_VAR 0 11
 337: PUSH
 338: DOUBLE
 339: LD_INT 1
 341: DEC
 342: ST_TO_ADDR
 343: LD_VAR 0 2
 347: PUSH
 348: FOR_TO
 349: IFFALSE 413
// begin hc_class = class_tiger ;
 351: LD_ADDR_OWVAR 28
 355: PUSH
 356: LD_INT 14
 358: ST_TO_ADDR
// hc_gallery =  ;
 359: LD_ADDR_OWVAR 33
 363: PUSH
 364: LD_STRING 
 366: ST_TO_ADDR
// hc_agressivity = Rand ( - 7 , 7 ) ;
 367: LD_ADDR_OWVAR 35
 371: PUSH
 372: LD_INT 7
 374: NEG
 375: PPUSH
 376: LD_INT 7
 378: PPUSH
 379: CALL_OW 12
 383: ST_TO_ADDR
// animal := CreateHuman ;
 384: LD_ADDR_VAR 0 12
 388: PUSH
 389: CALL_OW 44
 393: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
 394: LD_VAR 0 12
 398: PPUSH
 399: LD_VAR 0 8
 403: PPUSH
 404: LD_INT 0
 406: PPUSH
 407: CALL_OW 49
// end ;
 411: GO 348
 413: POP
 414: POP
// if apemans then
 415: LD_VAR 0 3
 419: IFFALSE 542
// for i = 1 to apemans do
 421: LD_ADDR_VAR 0 11
 425: PUSH
 426: DOUBLE
 427: LD_INT 1
 429: DEC
 430: ST_TO_ADDR
 431: LD_VAR 0 3
 435: PUSH
 436: FOR_TO
 437: IFFALSE 540
// begin hc_class = class_apeman ;
 439: LD_ADDR_OWVAR 28
 443: PUSH
 444: LD_INT 12
 446: ST_TO_ADDR
// hc_gallery =  ;
 447: LD_ADDR_OWVAR 33
 451: PUSH
 452: LD_STRING 
 454: ST_TO_ADDR
// hc_agressivity = rand ( - 5 , 5 ) ;
 455: LD_ADDR_OWVAR 35
 459: PUSH
 460: LD_INT 5
 462: NEG
 463: PPUSH
 464: LD_INT 5
 466: PPUSH
 467: CALL_OW 12
 471: ST_TO_ADDR
// hc_skills := [ rand ( 1 , 3 ) , rand ( 1 , 3 ) , 0 , 0 ] ;
 472: LD_ADDR_OWVAR 31
 476: PUSH
 477: LD_INT 1
 479: PPUSH
 480: LD_INT 3
 482: PPUSH
 483: CALL_OW 12
 487: PUSH
 488: LD_INT 1
 490: PPUSH
 491: LD_INT 3
 493: PPUSH
 494: CALL_OW 12
 498: PUSH
 499: LD_INT 0
 501: PUSH
 502: LD_INT 0
 504: PUSH
 505: EMPTY
 506: LIST
 507: LIST
 508: LIST
 509: LIST
 510: ST_TO_ADDR
// animal := CreateHuman ;
 511: LD_ADDR_VAR 0 12
 515: PUSH
 516: CALL_OW 44
 520: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
 521: LD_VAR 0 12
 525: PPUSH
 526: LD_VAR 0 8
 530: PPUSH
 531: LD_INT 0
 533: PPUSH
 534: CALL_OW 49
// end ;
 538: GO 436
 540: POP
 541: POP
// if enchidnas then
 542: LD_VAR 0 4
 546: IFFALSE 613
// for i = 1 to enchidnas do
 548: LD_ADDR_VAR 0 11
 552: PUSH
 553: DOUBLE
 554: LD_INT 1
 556: DEC
 557: ST_TO_ADDR
 558: LD_VAR 0 4
 562: PUSH
 563: FOR_TO
 564: IFFALSE 611
// begin hc_class = 13 ;
 566: LD_ADDR_OWVAR 28
 570: PUSH
 571: LD_INT 13
 573: ST_TO_ADDR
// hc_gallery =  ;
 574: LD_ADDR_OWVAR 33
 578: PUSH
 579: LD_STRING 
 581: ST_TO_ADDR
// animal := CreateHuman ;
 582: LD_ADDR_VAR 0 12
 586: PUSH
 587: CALL_OW 44
 591: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
 592: LD_VAR 0 12
 596: PPUSH
 597: LD_VAR 0 8
 601: PPUSH
 602: LD_INT 0
 604: PPUSH
 605: CALL_OW 49
// end ;
 609: GO 563
 611: POP
 612: POP
// if fishes then
 613: LD_VAR 0 7
 617: IFFALSE 684
// for i = 1 to fishes do
 619: LD_ADDR_VAR 0 11
 623: PUSH
 624: DOUBLE
 625: LD_INT 1
 627: DEC
 628: ST_TO_ADDR
 629: LD_VAR 0 7
 633: PUSH
 634: FOR_TO
 635: IFFALSE 682
// begin hc_class = 20 ;
 637: LD_ADDR_OWVAR 28
 641: PUSH
 642: LD_INT 20
 644: ST_TO_ADDR
// hc_gallery =  ;
 645: LD_ADDR_OWVAR 33
 649: PUSH
 650: LD_STRING 
 652: ST_TO_ADDR
// animal := CreateHuman ;
 653: LD_ADDR_VAR 0 12
 657: PUSH
 658: CALL_OW 44
 662: ST_TO_ADDR
// PlaceUnitArea ( animal , wat_area , false ) ;
 663: LD_VAR 0 12
 667: PPUSH
 668: LD_VAR 0 9
 672: PPUSH
 673: LD_INT 0
 675: PPUSH
 676: CALL_OW 49
// end ;
 680: GO 634
 682: POP
 683: POP
// end ;
 684: LD_VAR 0 10
 688: RET
