Export Gladstone, Lynch;
Export usForces, usSci;

Export Function PrepareAmericans;
var i, un, veh, tmp, arm;
begin
usForces := [];
usSci := [];

SetBName(Delta, 'Delta');

SetResourceType(GetBase(Delta), mat_cans, 400);
SetResourceType(GetBase(Delta), mat_oil, 80);

uc_side := 1;
uc_nation := 1;

Lynch := PrepareUnit('Lynch', false, '');
Gladstone := PrepareUnit('Gladstone', false, '');

PlaceHumanInUnit(Lynch, Delta);
PlaceHumanInUnit(Gladstone, usLab);

// eng
for i := 1 to [1, 2, 2][Difficulty] do
    begin
    PrepareHuman(false, 2, [1, 2, 2][Difficulty]);
    PlaceHumanInUnit(CreateHuman, Delta);
    end;

// sci
for i := 1 to 2 + Difficulty do
    begin
    PrepareHuman(false, 4, [1, 2, 2][Difficulty]);
    un := CreateHuman;
    PlaceHumanInUnit(un, usLab);
    usSci := Replace(usSci, usSci + 1, un);
    end;

arm := FilterAllUnits([[f_side, 1], [f_btype, b_armoury]]);

// sold
for i := 1 to 3 + Difficulty do
    begin
    PrepareHuman(false, 1, [1, 2, 3][Difficulty]);
    un := CreateHuman;
    usForces := usForces ^ un;
    PlaceHumanInUnit(un, arm[1]);
    end;

PrepareTank(1, 1, us_light_wheeled, engine_solar, control_manual, us_machine_gun, 100);
veh := CreateVehicle;
SetDir(veh, 2);
PlaceUnitXY(veh, 43, 24, false);
End;

Export Function SendSciToForest;
var i, j, k, tmp, xy;
begin
if not usSci then
   exit;

xy := AreaToList(tameArea, 0);

for i in usSci do
    begin
    k := rand(1, xy[1]);

    ComExitBuilding(i);
    AddComMoveXY(i, xy[1][k], xy[2][k]);

    for j := 1 to 2 do
        begin
        tmp := Delete(xy[j], k);
        xy := Replace(xy, j, tmp);
        end;
    end;
End;

Every 0$5+0$10 trigger usSci and FilterAllUnits([[f_side, 0], [f_class, class_apeman]]) do
var i, x, y, d, ape;
begin
enable;

if UnitFilter(usSci, [f_or, [f_hastask], [f_inside]]) then
   exit;

for i in usSci do
    begin
    if not HasTask(i) and GetLives(i) = 1000 then
       begin
       ape := NearestUnitToUnit(FilterAllUnits([[f_side, 0], [f_class, class_apeman]]), i);

       if GetDistUnits(i, ape) < 10 then
          ComTameXY(i, GetX(ape), GetY(ape))
       else
          begin
          d := rand(0, 5);
          x := ShiftX(GetX(i), d, 3);
          y := ShiftY(GetY(i), d, 3);

          if not ValidHex(x, y) then
             continue;

          ComMoveXY(i, x, y);
          end;
       end;

    if GetLives(i) < 900 and GetDistUnitXY(i, 37, 23) > 10 then
       begin
       ComMoveXY(i, 37, 23);
       end
    else if GetLives(i) < 1000 then
       begin
       AddComEnterUnit(i, usLab);
       usSci := usSci diff i;
       end;
    end;
End;

// alert
// when player attack base
Every 0$1 trigger not usAlert and FilterAllUnits([[f_side, 1], [f_type, unit_building], [f_not, [f_constructed]], [f_not, [f_lives, 999]]]) do
usAlert := true;

Every 0$1 trigger usAlert do
var i, b, arm;
begin
usActiveDefend := true;

if not usForces then
   exit;

arm := FilterAllUnits([[f_side, 1], [f_btype, b_armoury]]);
b := FilterAllUnits([[f_side, 1], [f_btype, b_breastwork]]);

ComExitBuilding(Lynch);
AddComEnterUnit(Lynch, arm[1]);

if IsOk(Gladstone) then
   begin
   ComExitBuilding(Gladstone);
   AddComEnterUnit(Gladstone, arm[1]);
   AddComChangeProfession(Gladstone, class_soldier);
   end;

ComExitBuilding(usForces[1]);
AddComEnterUnit(usForces[1], b[1]);

ComExitBuilding(usForces[2]);
AddComEnterUnit(usForces[2], FilterAllUnits([[f_side, 1], [f_btype, b_bunker]])[1]);

if b > 1 and usForces > 2 then
   begin
   repeat
    wait(0$1);
   until BuildingStatus(b[2]) <> bs_build;

   ComExitBuilding(usForces[3]);
   AddComEnterUnit(usForces[3], b[2]);
   end;
End;

Every 0$3 trigger GetDistUnits(Heike, Delta) < 9 and FilterAllUnits([[f_side, 1], [f_class, 2]]) do
var tmp;
begin
tmp := FilterAllUnits([[f_side, 1], [f_class, 2]]);

if not tmp then
   exit;

ComExitBuilding(tmp);
AddComDismantle(tmp, usLab);
End;