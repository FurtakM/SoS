Export Function Action;
var i, tmp;
begin
InGameOn;

DoNotAttack(2, usLab);

ComMoveXY(Heike, 78, 61);

if Mike then
   ComMoveXY(Mike, 80, 66);

if Givi then
   ComMoveXY(Givi, 82, 66);

if Kamil then
   ComMoveXY(Kamil, 82, 67);

CenterNowOnUnits(Heike);

wait(0$2);

if Givi and Mike then
   begin
   AddComTurnUnit([Givi, Mike, Kamil], Heike);
   AddComTurnUnit(Heike, Givi);
         
   Say(Givi, 'DG-1-start'); 
   Say(Heike, 'DH-1-start');

   AddComTurnUnit(Mike, Heike);
   AddComTurnUnit(Heike, Mike);

   Say(Mike, 'DM-1-start');
   Say(Heike, 'DH-2-start'); 
   Say(Mike, 'DM-2-start');
   Say(Givi, 'DG-2-start');

   ComTurnUnit(Mike, Givi);
   ComTurnUnit(Heike, Mike);

   Say(Mike, 'DM-3-start');
   Say(Heike, 'DH-3-start');

   ComMoveXY([Heike, Mike, Givi, Kamil], 84, 51);

   wait(0$2);

   Say(Givi, 'DG-3-start');

   ComHold([Heike, Mike, Givi, Kamil]);
   AddComTurnUnit(Heike, Givi);
   AddComTurnUnit([Givi, Mike, Kamil], Heike);

   Say(Heike, 'DH-4-start');  
   Say(Givi, 'DG-4-start');
   Say(Heike, 'DH-5-start');
   Say(Givi, 'DG-5-start');
   Say(Heike, 'DH-6-start');

   if not Kamil then
      begin
      Say(Mike, 'DM-6-start');

      ComTurnUnit([Heike, Givi], Mike);

      Say(Givi, 'DG-6-start');
      end
   else
      begin
      Say(Mike, 'DM-6-start-a');

      ComTurnUnit([Heike, Givi, Mike], Kamil);
      ComTurnUnit(Kamil, Mike);

      Say(Kamil, 'DKam-7-start-a');
      Say(Givi, 'DG-6-start-a');
      end;

   Say(Heike, 'DH-7-start');
   end
else if not Mike and Givi then
   begin
   AddComTurnUnit([Givi, Kamil], Heike);
   AddComTurnUnit(Heike, Givi);

   Say(Givi, 'DG-1-start-c');
   Say(Heike, 'DH-1-start-c');
   Say(Givi, 'DG-2-start-c');
   Say(Heike, 'DH-2-start-c');
   Say(Givi, 'DG-3-start-c');

   ComMoveXY(Heike, 83, 56);
   ComMoveXY(Givi, 83, 59);

   if Kamil then
      ComMoveXY(Kamil, 80, 58);

   AddComTurnUnit(Heike, Givi);
   AddComTurnUnit([Givi, Kamil], Heike);

   Say(Heike, 'DH-3-start-c');
   Say(Givi, 'DG-4-start-c');

   Say(Heike, 'DH-5-start-c');
   Say(Givi, 'DG-5-start-c');
   Say(Heike, 'DH-6-start-c');
   Say(Givi, 'DG-6-start-c');

   if Kamil then
      begin
      ComTurnUnit(Kamil, Heike);
      Say(Kamil, 'DKam-1-start-c');

      ComTurnUnit(Givi, Kamil);
      Say(Givi, 'DG-7-start-c');
      end
   else
      begin
      Say(Givi, 'DG-8-start-c');
      Say(Heike, 'DH-7-start-c');
      end;
   end
else if not Givi and Mike then
   begin
   AddComTurnUnit([Mike, Kamil], Heike);
   AddComTurnUnit(Heike, Mike);

   Say(Mike, 'DM-1-start-b');
   Say(Heike, 'DH-1-start-b');
   Say(Mike, 'DM-2-start-b');
   Say(Heike, 'DH-2-start-b');
   Say(Mike, 'DM-3-start-b');
   
   if Kamil then
      ComMoveXY(Kamil, 80, 58);

   ComMoveXY(Heike, 83, 56);
   ComMoveXY(Mike, 83, 59);

   AddComTurnUnit(Heike, Mike);
   AddComTurnUnit([Kamil, Mike], Heike);

   Say(Heike, 'DH-3-start-b');
   Say(Mike, 'DM-4-start-b');

   if Kamil then
      begin
      ComTurnUnit(Kamil, Heike);
      Say(Kamil, 'DKam-1-start-c');
      end
   else
      begin
      Say(Mike, 'DM-5-start-b');
      end;
   end
else if Kamil then
   begin
   AddComTurnUnit(Heike, Kamil);
   AddComTurnUnit(Kamil, Heike);

   Say(Heike, 'DH-1-start-f');
   Say(Kamil, 'DKam-1-start-f');
   Say(Heike, 'DH-2-start-f');
   Say(Kamil, 'DKam-2-start-f');
   end
else // Heike alone
   begin
   Say(Heike, 'DH-1-start-d');
   end;

ComFree([Heike, Givi, Mike, Kamil]);
InGameOff;

ChangeMissionObjectives('OEast');

SetAreaMapShow(eastExitArea, 1);

SaveForQuickRestart;

wait(0$20);

SendSciToForest;

if Difficulty = 1 then
   exit;

wait([5$00, 2$30][Difficulty - 1]);

if usAlert then
   exit;

tmp := FilterAllUnits([[f_side, 1], [f_class, 2]]);

if not tmp then
   exit;

ComExitBuilding(tmp);
AddComBuild(tmp, b_breastwork, 40, 13, 3);
AddComEnterUnit(tmp, Delta);
End;

Every 3$00 do
begin
SetWeather(1, 570, 350);
wait(2$40);
SetWeather(0, 570, 350);
End;

// see Aviradze
Every 0$1 trigger not aviradzeSpotted and See(2, Aviradze) do
var i, pepAmount;
begin
SetAreaMapShow(eastExitArea, 0);
aviradzeSpotted := true;
pepAmount := FilterAllUnits([[f_side, 2], [f_type, unit_human]]);

ComMoveXY(Heike, GetX(Aviradze), GetY(Aviradze));

repeat
 wait(0$1);
until GetDistUnits(Heike, Aviradze) < 16;

InGameOn;

ChangeSideFog(5, 2);

if pepAmount > 2 then
   Say(Heike, 'DH-1-spot')
else
   Say(Heike, 'DH-1-spot-d');

ComMoveXY(Heike, GetX(Aviradze), GetY(Aviradze));

for i in [Kamil, Mike, Givi] do
    if GetDistUnits(i, Aviradze) > 7 then
       ComMoveXY(i, 102, 40);

repeat
 wait(0$1);
until GetDistUnits(Heike, Aviradze) < 6;

ComTurnUnit(Heike, Aviradze);
ComTurnUnit([Aviradze, Sophia, Kaia], Heike);

if pepAmount > 1 then
   begin
   wait(0$2); 
   ComTurnUnit([Kamil, Mike, Givi], Aviradze);
   Say(Heike, 'DH-2-spot');
   end
else
   Say(Heike, 'DH-2-spot-d');

Say(Aviradze, 'DA-2-spot');
Say(Heike, 'DH-3-spot');

ComMoveUnit(Kaia, Heike);
ComTurnUnit(Heike, Kaia);

wait(0$0.3);

Say(Kaia, 'DK-3-spot');

ComTurnUnit(Kaia, Heike);

Say(Heike, 'DH-4-spot');

wait(0$0.3);

ComTurnUnit(Heike, Aviradze);

Say(Aviradze, 'DA-4-spot');

ComTurnUnit(Kaia, Aviradze);

Say(Kaia, 'DK-4-spot');

ComTurnUnit(Aviradze, Kaia);

Say(Aviradze, 'DA-5-spot');
Say(Kaia, 'DK-5-spot');

if pepAmount = 1 then
   Say(Heike, 'DH-5-spot-f');

if pepAmount < 3 then
   Say(Aviradze, 'DA-6-spot-f')
else if pepAmount < 4 then
   Say(Aviradze, 'DA-6-spot-c')
else
   Say(Aviradze, 'DA-6-spot');

if Kamil then
   Say(Kamil, 'DKam-6-spot');

Say(Kaia, 'DK-6-spot');

ComTurnUnit(Aviradze, Heike);

Say(Aviradze, 'DA-7-spot');
Say(Heike, 'DH-7-spot');

if sciCounterKill >= 3 then
   begin
   Say(Heike, 'DH-7-spot-a');
   Say(Aviradze, 'DA-8-spot-a');
   end;

InGameOff;

if sciCounterKill < 3 then
   begin
   SetSide(Kaia, 2);
   ComFree(Kaia);

   if Kamil then
      begin
      ComHold(Kamil);
      SetSide(Kamil, 5);
      end;

   ChangeMissionObjectives('OSci');
   end
else
   begin
   aviradzeQuestDone := true;
   attackDeltaAllowed := true;

   ChangeMissionObjectives('ODelta2');

   for i in FilterAllUnits([f_side, 5]) do
       SetSide(i, 2);
   end;
End;

// see scientist
Every 0$1 trigger not sciSpotted and GetDistUnits(NearestUnitToUnit(usSci, Heike), Heike) < 8 and See(2, NearestUnitToUnit(usSci, Heike)) and FilterAllUnits([[f_side, 2], [f_type, unit_human]]) > 1 and not aviradzeSpotted do
begin
sciSpotted := true;
CenterNowOnUnits(NearestUnitToUnit(usSci, Heike));
Say(Heike, 'DH-1-sci');
End;

// see scientist
Every 0$1 trigger aviradzeSpotted and not sciSpotted and See(2, NearestUnitToUnit(usSci, Heike)) and FilterAllUnits([[f_side, 2], [f_type, unit_human]]) > 1 and aviradzeSpotted and not aviradzeQuestDone do
var un;
begin
sciSpotted := true;
un := NearestUnitToUnit(usSci, Heike);

DialogueOn;
PlaceSeeing(GetX(un), GetY(un), 2, -3);
CenterNowOnUnits(un);

Say(Heike, 'DH-1-sci-a');

if Mike then
   Say(Mike, 'DM-1-sci-a');

RemoveSeeing(GetX(un), GetY(un), 2);
DialogueOff;
End;

// Gladstone run
Every 0$1 trigger usAlert and (GetLives(Gladstone) < 1000 or GetLives(usLab) < 999) do
var veh;
begin
veh := FilterAllUnits([[f_side, 1], [f_type, unit_vehicle], [f_empty]]);

if veh and IsOk(Gladstone) then
   begin

   if IsInUnit(Gladstone) then
      ComExitBuilding(Gladstone);

   AddComEnterUnit(Gladstone, veh[1]);
   end
else if IsInUnit(Gladstone) then
   ComExitBuilding(Gladstone);

AddComMoveXY(Gladstone, 27, 51);

Say(Gladstone, 'D8-Glad-2');

repeat
 wait(0$1);
until IsAt(Gladstone, 27, 51) or IsAt(IsInUnit(Gladstone), 27, 51) or IsDead(Gladstone);

if IsDead(Gladstone) then
   exit;

RemoveUnit(HexInfo(27, 51));
gladstoneEscaped := true;
SaveVariable(true, '02_GladstoneEscaped');
End;

// quest done
Every 0$1 trigger aviradzeSpotted and (sciCounterKill >= 3 or not usSci) and not aviradzeQuestDone do
begin
aviradzeQuestDone := true;

Say(Heike, 'DH-1-quest-done');

if Givi then
   Say(Givi, 'DG-1-quest-done');
End;

Every 0$1 trigger See(5, Heike) and GetDistUnits(Heike, Aviradze) < 6 and aviradzeQuestDone and not attackDeltaAllowed do
var i;
begin
attackDeltaAllowed := true;

InGameOn;

CenterNowOnUnits(Heike);

wait(0$0.3);

ComTurnUnit(Aviradze, Heike);
ComTurnUnit(Heike, Aviradze);

Say(Heike, 'DH-1-return');
Say(Aviradze, 'DA-1-return');

InGameOff;

ChangeMissionObjectives('ODelta');

for i in FilterAllUnits([f_side, 5]) do
    SetSide(i, 2);
End;

Every 0$1 trigger usAlert and not attackDeltaAllowed do
spottedBeforeRadio := true;

Every 0$1 trigger attackDeltaAllowed and IsOk(Markov) and GetSide(Delta) = 1 and IsOk(Lynch) and not usAlert do
var i, k, tmp;
begin
trap := 0;

wait(0$12);

DialogueOn;

Say(Markov, 'DMar-1-radio');
Say(Heike, 'DH-1-radio');
Say(Markov, 'DMar-2-radio');
Say(Heike, 'DH-2-radio');

if IsOk(Kamil) or IsOk(Sophia) then
   begin

        Case Query('Q1Trap') of
             1: begin
                if IsOk(Kamil) then
                   begin
                   Say(Kamil, 'DKam-2-radio');
                   Say(Kamil, 'DKam-3-radio');
                   SayRadio(Lynch, 'DDelta-3-radio');

                   dwait(0$01);

                   Say(Heike, 'DH-3-radio');
                   Say(Kamil, 'DKam-4-radio');

                   trap := 1;
                   end
                else
                   begin
                   Say(Sophia, 'DS-1-radio');
                   Say(Sophia, 'DS-2-radio');
                   SayRadio(Lynch, 'DDelta-2-radio-s');
                   Say(Sophia, 'DS-3-radio');
                   SayRadio(Lynch, 'DDelta-3-radio-s');
                   Say(Sophia, 'DS-4-radio-s');

                   dwait(0$01);

                   Say(Heike, 'DH-1-trap');

                   trap := 0;
                   end;

                DialogueOff;
                end;

             2: begin
                DialogueOff;
                exit;
                end;
        End;

   if trap = 1 then
      begin
      PlaceSeeing(64, 32, 2, 8);
      CenterOnXY(64, 32);

      tmp := [];
      k := 3;

      if usForces < 3 then
         k := usForces;

      for i := 1 to k do
          begin
          tmp := Replace(tmp, tmp + 1, usForces[1]);
          usForces := Delete(usForces, 1);
          end;

      usPatrol := tmp;

      for i in tmp do
          begin
          if IsInUnit(i) then
             ComExitBuilding(i);

          AddComAgressiveMove(i, 63, 31);
          AddComWait(i, 0$2);
          AddComAgressiveMove(i, 103, 43);
          AddComWait(i, 0$3);

          if Difficulty > 1 then
             AddComAgressiveMove(i, 114, 69);

          AddComWait(i, 0$3);
          AddComAgressiveMove(i, 42, 20);
          end;

      wait(0$8);
      RemoveSeeing(64, 32, 2);

      repeat
       wait(0$1);

       for i in tmp do
           if IsDead(i) then
              tmp := tmp diff i;

      until not tmp or UnitFilter(tmp, [[f_inarea, deltaBaseArea], [f_not, [f_hastask]]]) = tmp;

      if tmp then
         begin
         usPatrol := [];
         usForces := usForces union tmp;
         end
      else
         trickyMove := true;
      end
   else
      begin
      tmp := [];
      k := 4;

      if usForces < 4 then
         k := usForces;

      for i := 1 to k do
          begin
          tmp := Replace(tmp, tmp + 1, usForces[1]);
          usForces := Delete(usForces, 1);
          end;

      if Lynch then
         tmp := tmp ^ Lynch;

      usPatrol := tmp;

      for i in tmp do
          begin
          if IsInUnit(i) then
             ComExitBuilding(i);

          AddComAgressiveMove(i, 69, 15);
          AddComWait(i, 0$20);
          AddComAgressiveMove(i, 55, 43);
          AddComWait(i, 0$20);
          AddComAgressiveMove(i, 42, 20);
          end;

      repeat
       wait(0$1);

       for i in tmp do
           if IsDead(i) then
              tmp := tmp diff i;

      until not tmp or UnitFilter(tmp, [[f_inarea, deltaBaseArea], [f_not, [f_hastask]]]) = tmp;

      if not tmp then
         trickyMove := true
      else
         usPatrol := [];

      if tmp diff Lynch then
         usForces := usForces union (tmp diff Lynch);

      if IsOk(Lynch) then
         ComEnterUnit(Lynch, Delta);
      end;
   end;
End;

Every 0$1 trigger trickyMove do
SetAchievement('ACH_TRAP');

Every 0$1 trigger FilterAllUnits([[f_side, 2], [f_nation, 1], [f_type, unit_vehicle]]) do
SetAchievement('ACH_SCRAP');

// see patrol
Every 0$1 trigger UnitFilter(usPatrol, [f_see, 2]) and See(1, Heike) do
begin
if not trap then
   begin
   Say(Heike, 'DH-2-trap');
   Say(Mike, 'DM-2-trap');
   end
else
   begin
   Say(Heike, 'DH-1-trap-a');
   end;

repeat
 wait(0$1);
until trickyMove;

Say(Heike, 'DH-3-trap');

if IsOk(Givi) and IsOk(Kaia) then
   begin
   Say(Givi, 'DG-3-trap');
   Say(Kaia, 'DK-3-trap');
   Say(Givi, 'DG-4-trap');
   end;
End;

// Capture Delta
Every 0$1 trigger GetSide(Delta) = 2 and attackDeltaAllowed do
var i, tmp;
begin
if not IsOk(Kaia) then
   exit;

if tick < 5$00 then
   SetAchievement('ACH_DELTA');

Say(Kaia, 'DK-1-capture');
Say(Heike, 'DH-1-capture');

tmp := FilterAllUnits([[f_side, 1], [f_class, 1]]);

if not tmp then
   exit;

for i in tmp do
    begin
    if IsInUnit(i) then
       ComExitBuilding(i);

    AddComAgressiveMove(i, 38, 23);
    end;
End;

Every 0$1 trigger GetSide(usLab) = 2 and attackDeltaAllowed do
begin
DialogueOn;
Say(Aviradze, 'DA-1-capture');
DialogueOff;

ChangeMissionObjectives('OTame');
End;

// Research
Every 0$1 trigger GetTech(tech_ApeLang, 2) = state_researched and attackDeltaAllowed do
begin
DialogueOn;

Say(Aviradze, 'DA-1-ape');
Say(Heike, 'DH-1-ape');
Say(Aviradze, 'DA-2-ape');
Say(Aviradze, 'DA-3-ape');
Say(Heike, 'DH-3-ape');

DialogueOff;

if FilterAllUnits([[f_side, 0], [f_class, class_apeman]]) = 0 then
   SpawnApeman(forest, 2);

repeat
 wait(0$1);
until FilterAllUnits([f_class, class_apeman]) = 0;

YouLost('Ape');
End;

// too many lost
Every 0$5 trigger lostCounter >= [3, 2, 2][Difficulty] do
begin
DialogueOn;
Say(Aviradze, 'DA-1-failure');
Say(Aviradze, 'DA-2-failure');

YouLost('Failure');
DialogueOff;
End;

Every 0$1 trigger GetLives(Kaia) < 3 do
begin
DialogueOn;
CenterNowOnUnits(Kaia);

ForceSay(Kaia, 'DK-Kaiaout-1');
Say(Heike, 'DH-Kaiaout-2');
Say(Givi, 'DG-Kaiaout-3');
Say(Heike, 'DH-Kaiaout-4');

if Givi then
   begin
   Say(Givi, 'DG-Kaiaout-5');
   Say(Heike, 'DH-Kaiaout-6');
   Say(Givi, 'DG-Kaiaout-7');
   Say(Heike, 'DH-Kaiaout-8');
   end;

DialogueOff;

KillUnit(Kaia);
End;


// win
Every 0$1 trigger FilterAllUnits([[f_side, 2], [f_nation, 0]]) and IsOk(Aviradze) and GetSide(Aviradze) = 2 do
var tmp;
begin
tmp := FilterAllUnits([[f_side, 2], [f_nation, 0]]);

InGameOn;
CenterNowOnUnits(tmp);

ComMoveUnit(tmp, Aviradze);
ComTurnUnit(Aviradze, tmp);

wait(0$1);

Say(Aviradze, 'DA-1-tame-a');

if IsOk(Mike) then
   begin
   Say(Mike, 'DM-1-tame-a');
   Say(Sophia, 'DS-1-tame-a');
   Say(Mike, 'DM-2-tame-a');
   end;

wait(0$3);

PrepareFarmer;

CenterOnUnits(Farmer);

ComMoveXY(Farmer, 105, 59);
AddComHold(Farmer);

SayRadio(Farmer, 'DF-1-end');
Say(Aviradze, 'DA-1-end');
SayRadio(Farmer, 'DF-2-end');
Say(Aviradze, 'DA-2-end');
SayRadio(Farmer, 'DF-3-end');
Say(Heike, 'DH-3-end');
SayRadio(Farmer, 'DF-4-end');

if tick <= [25$00, 22$30, 20$00][Difficulty] then
   AddMedal('med1', 1)
else
   AddMedal('med1', -1);

if FilterAllUnits([[f_side, 1], [f_class, 4]]) = 0 and not gladstoneEscaped then
   AddMedal('med2', 1)  
else
   AddMedal('med2', -1);

if trickyMove then
   AddMedal('med3', 1)
else if spottedBeforeRadio then
   AddMedal('med3', -2)
else
   AddMedal('med3', -1);

GiveMedals('MAIN');

SaveCharacters(tmp, '02_ape');

tmp := FilterAllUnits([[f_side, 2], [f_nation, 2], [f_type, unit_human]]);

RewardPeople(tmp);

SaveCharacters(Heike, '02_Heike');
SaveCharacters(Aviradze, '02_Aviradze');

if Givi then
   SaveCharacters(Givi, '02_Givi');

if Mike then
   SaveCharacters(Mike, '02_Mike');

if Kamil then
   SaveCharacters(Kamil, '02_Kamil');

if Kaia then
   SaveCharacters(Kaia, '02_Kaia');

if Sophia then
   SaveCharacters(Sophia, '02_Sophia');

if Markov then
   SaveCharacters(Markov, '02_Markov');

if tmp diff [Heike, Aviradze, Givi, Mike, Kamil, Sophia, Kaia, Markov] then
   SaveCharacters(tmp diff [Heike, Aviradze, Givi, Mike, Kamil, Sophia, Kaia, Markov], '02_others');

YouWin;

InGameOff;
End;

Every 0$1 trigger tick > timeUntilFarmer and aviradzeSpotted do
begin
InGameOn;
PrepareFarmer;

CenterNowOnUnits(Farmer);

wait(0$2);

YouLost('Farmer');

InGameOff;
End;


