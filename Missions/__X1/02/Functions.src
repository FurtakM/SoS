// Prepare Hero for use
// ident - ident from start.txt - 'JMM' for example
// exist_mode
//   - false if unit not exist in save
//   - true if unit already exist in save
// example: JMM := PrepareUnit('JMM', false);
Export Function PrepareUnit(ident, exist_mode, prefix);
var unit;
begin

if exist_mode then
   unit := CreateCharacter(prefix & ident)
  else
   unit := NewCharacter(ident);

result := unit;
End;

// example: PrepareTank(1, 1, us_medium_wheeled, engine_combustion, control_manual, us_machine_gun, 80);
Export Function PrepareTank(side, nation, chassis, engine, control, weapon, fuel);
begin
uc_side := side;
uc_nation := nation;

vc_chassis := chassis;
vc_engine := engine;
vc_control := control;
vc_weapon := weapon;
vc_fuel_battery := fuel;

result := CreateVehicle;
End;


Export Function SayX(units, ident);
var i;
begin
result := false;

if not units then
   exit;

for i in units do
    if IsOk(i) then
       begin
       Say(i, ident);
       result := i;
       break;
       end;
End;

Export Function SpawnApeman(area, amount);
var i;
begin
InitUc;
InitHc;

uc_side := 0;
uc_nation := 0;

for i = 1 to amount do
    begin
    hc_attr := [rand(9, 12), rand(9, 12)];
    hc_agressivity := 0;
    PrepareHuman(false, class_apeman, 1);
    PlaceUnitArea(CreateHuman, area, false);
    end;

InitHc;
End;

Export Function PrepareNature;
var i;
begin
SpawnApeman(forest, 9);

for i := 1 to 4 do
    begin
    hc_class := 21;
    hc_gallery := '';
    PlaceUnitArea(CreateHuman, forest, false);
    end;

for i := 1 to 2 do
    begin
    hc_class := 18;
    hc_gallery := '';
    PlaceUnitArea(CreateHuman, forest, false);
    end;

for i := 1 to 3 do
    begin
    hc_class := 13;
    hc_gallery := '';
    PlaceUnitArea(CreateHuman, forest, false);
    end;

for i := 1 to 4 do
    begin
    hc_class := class_frog;
    hc_gallery := '';
    PlaceUnitArea(CreateHuman, swampArea, false);
    end;

End;

Export Function SeeUnit(observer, unit);
var i, tmp;
begin
if not observer or not unit then
   exit;

if not See(GetSide(observer), unit) then
   exit;


result := GetDistUnits(observer, unit) < 12;
End;