Export usCommander, usForces, usCargo, usToBuild, usAdditionalForces;
Export Function PrepareAmerican;
var i, b, veh;
begin
uc_side := 1;
uc_nation := 1;

SetResourceType(GetBase(usDepot), mat_cans, [2000, 2500, 3000, 3500][Difficulty]);
SetResourceType(GetBase(usDepot), mat_oil, 600);

usForces := [];
usToBuild := [];
usAdditionalForces := [];

for i in FilterAllUnits([f_type, unit_building]) do
    SetBLevel(i, [6, 7, 8, 8][Difficulty]);

for i in FilterAllUnits([f_btype, b_bunker]) do
    begin
    if GetBWeapon(i) = us_radar then
       begin
       uc_nation := 0;
       PrepareHuman(false, class_apeman_engineer, 2);
       end
    else
       PrepareHuman(false, 1, [5, 6, 7, 8][Difficulty]);

    PlaceHumanInUnit(CreateHuman, i);
    end;

b := HexInfo(74, 120);

uc_nation := 1;

for i := 1 to [1, 2, 3, 4][Difficulty] do
    begin
    PrepareHuman(false, 1, [5, 6, 7, 8][Difficulty]);
    PlaceHumanInUnit(CreateHuman, b);
    end;

SetClass(UnitsInside(b), class_sniper);

for i := 1 to 6 do
    begin
    PrepareHuman(false, 4, 6);
    PlaceHumanInUnit(CreateHuman, [amLab1, amLab2][i mod 2 + 1]);
    end;

for i := 1 to 3 do
    begin
    PrepareHuman(false, 3, 6);
    PlaceHumanInUnit(CreateHuman, amFac);
    end;

for i := 1 to 3 do
    begin
    PrepareHuman(false, 3, [6, 7, 7, 7][Difficulty]);
    PlaceHumanInUnit(CreateHuman, HexInfo(84, 154));
    end;

for i := 1 to 3 do
    begin
    PrepareVehicle(us_medium_wheeled, engine_solar, control_manual, us_crane, 100);
    veh := CreateVehicle;
    SetDir(veh, 3);
    PlaceUnitArea(veh, usCraneArea, false);
    PrepareHuman(false, 3, 6);
    PlaceHumanInUnit(CreateHuman, veh);
    end;   

InitHc;

hc_gallery := 'us';
hc_face_number := 26;
hc_name := 'Max Caldera';
hc_class := class_engineer;
hc_sex := sex_male;
hc_attr := [10, 11];
hc_basic_skills := [2, 1, 0, 0];
hc_skills := [4, 6, 3, 1];

usCommander := CreateHuman;
PlaceHumanInUnit(usCommander, usDepot);

InitHC_All();

PrepareVehicle(us_medium_wheeled, engine_combustion, control_remote, us_cargo_bay, 100);
usCargo := CreateVehicle;
PlaceUnitXY(usCargo, 81, 143, false);
Connect(usCargo);

DoNotAttack(5, usCargo);
End;

Every 6$00 trigger not usForces and usAttacksAllowed and IsOk(amFac) and BuildingStatus(amFac) = bs_idle do
var i, chassis, weapon;
begin
enable;

for i := 1 to [5, 6, 7, 8][Difficulty] do
    begin
    chassis := [us_medium_wheeled, us_medium_tracked, us_heavy_tracked][rand(1, 3)];

    if chassis = us_heavy_tracked then
       weapon := us_heavy_gun
    else
       weapon := [us_double_gun, us_rocket_launcher, us_gatling_gun][rand(1, 3)];

    AddComConstruct(amFac, chassis, engine_combustion, control_remote, weapon);
    end;
End;

Every 0$10 trigger usForces >= [5, 6, 7, 8][Difficulty] do
var i, tmp;
begin
enable;

tmp := usForces;
usForces := [];

if not tmp then
   exit;

repeat
 wait(0$1);   
 AgressiveMove(tmp, [ [98,50], [114,50], [127,51], [131,35] ]);
until not tmp;
End;

// player cheat while scout
Every 0$1 trigger scoutActive and not scoutSuccess and FilterUnitsInArea(southScoutArea, [f_side, 2]) do
var i, un, tmp;
begin
uc_side := 1;
uc_nation := 1;

tmp := [];

for i := 1 to 2 do
    begin
    PrepareSoldier(false, 7);
    un := CreateHuman;
    PlaceUnitXYR(un, 130, 153, 3, false);
    SetClass(un, class_sniper);

    AddComAgressiveMove(un, 108, 108);
    end;
End;

Every 0$1 trigger scoutActive and not scoutSuccess and FilterUnitsInArea(northScoutArea, [f_side, 2]) do
var i, un, tmp;
begin
uc_side := 1;
uc_nation := 1;

tmp := [];

for i := 1 to 2 do
    begin
    PrepareSoldier(false, 7);
    un := CreateHuman;
    PlaceUnitXYR(un, 56, 101, 3, false);
    SetClass(un, class_sniper);

    AddComAgressiveMove(un, 72, 92);
    end;
End;

Every 0$2 trigger IsOk(usCargo) and not usSurrender do
var cr, enemyInArea;
begin
enable;

enemyInArea := FilterUnitsInArea(americanBaseArea, [[f_enemy, 1], [f_ok]]);
cr := GetListOfCratesInArea(usCratesArea);

if GetFuel(usCargo) < 10 and not See(2, usCargo) then
   SetFuel(usCargo, 100);

if not HasTask(usCargo) and GetCargo(usCargo, mat_cans) < 100 and not enemyInArea then
   begin
   if cr then
      ComCollect(usCargo, cr[1], cr[2])
   else if not IsInArea(usCargo, usCratesArea) then
      ComMoveToArea(usCargo, usCratesArea);

   exit;
   end;

if enemyInArea and not IsInArea(usCargo, americanBaseArea) then
   ComMoveXY(usCargo, 80, 143)
else if GetCargo(usCargo, mat_cans) then
   ComGive(usCargo, usDepot);
End;

Every 0$3 trigger not usSurrender and FilterAllUnits([[f_side, 1], [f_type, unit_human], [f_not, [f_ok]]]) and FilterAllUnits([[f_side, 1], [f_not, [f_hastask]], [f_class, 4]]) do
var i, sci;
begin
enable;

for i in FilterAllUnits([[f_side, 1], [f_type, unit_human], [f_not, [f_ok]]]) do
    begin
    sci := FilterAllUnits([[f_side, 1], [f_not, [f_hastask]], [f_class, 4]]);

    if not sci then
       break;

    sci := sci[1];

    if IsInUnit(sci) then
       ComExit(sci)
    else
       begin
       ComHeal(sci, i);
       AddComEnterUnit(sci, [amLab1, amLab2][rand(1, 2)]);
       end;
    end;
End;

Every 0$2 trigger not usSurrender and FilterAllUnits([[f_side, 1], [f_not, [f_hastask]], [f_ok], [f_weapon, us_crane]]) and FilterAllUnits([[f_side, 1], [f_not, [f_lives, 1000]], [f_type, unit_building], [f_not, [f_btype, b_oil_mine]]]) do
var i, tmp, tmp2;
begin
enable;

tmp := FilterAllUnits([[f_side, 1], [f_not, [f_lives, 1000]], [f_type, unit_building], [f_not, [f_btype, b_oil_mine]]]);
tmp2 := FilterAllUnits([[f_side, 1], [f_not, [f_lives, 600]], [f_type, unit_building], [f_not, [f_btype, b_oil_mine]]]);

for i in FilterAllUnits([[f_side, 1], [f_not, [f_hastask]], [f_ok], [f_weapon, us_crane]]) do
    begin
    if tmp2 then
       ComRepairBuilding(i, NearestUnitToUnit(tmp2, i))
    else
       ComRepairBuilding(i, NearestUnitToUnit(tmp, i));
    end;
End;

Every 0$1 trigger not usSurrender and not FilterUnitsInArea(americanBaseArea, [[f_enemy, 1], [f_ok]]) and usToBuild and FilterAllUnits([[f_side, 1], [f_not, [f_hastask]], [f_ok], [f_weapon, us_crane]]) do
begin                                                                                                           
enable;
ComCraneBuild(FilterAllUnits([[f_side, 1], [f_not, [f_hastask]], [f_ok], [f_weapon, us_crane]]), usToBuild[1][1], usToBuild[1][2], usToBuild[1][3], usToBuild[1][4]);
End;

Every 0$10 trigger FilterAllUnits([[f_side, 1], [f_ok], [f_not, [f_inside]], [f_or, [f_class, class_soldier], [f_class, class_sniper], [f_class, class_apeman_engineer]]]) do
var i, tmp, btmp, barracks;
begin
enable;

tmp := FilterAllUnits([[f_side, 1], [f_ok], [f_not, [f_inside]], [f_or, [f_class, class_soldier], [f_class, class_sniper], [f_class, class_apeman_engineer]]]);
btmp := FilterAllUnits([[f_side, 1], [f_ok], [f_type, unit_building], [f_btype, b_bunker], [f_empty]]);
barracks := FilterAllUnits([[f_side, 1], [f_ok], [f_btype, b_barracks]]);

if not tmp then
   exit;

for i in tmp do
    begin
    btmp := FilterByTag(btmp, 0);

    if not btmp then
       begin          
       if GetClass(i) <> class_apeman_engineer and barracks then
          ComEnterUnit(i, barracks[1]);

       continue;
       end
    else
       begin
       SetTag(btmp[1], 1);  
       ComEnterUnit(i, btmp[1]);

       wait(0$9);

       if IsEmpty(btmp[1]) then
          SetTag(btmp[1], 0);
       end;
    end;
End;

Every 0$1 trigger FilterAllUnits([[f_side, 1], [f_control, control_remote], [f_ok], [f_not, [f_linked]]]) do
var i, tmp;
begin
enable;

tmp := FilterAllUnits([[f_side, 1], [f_control, control_remote], [f_ok], [f_not, [f_linked]]]);

for i in tmp do
    Connect(i);
End;

