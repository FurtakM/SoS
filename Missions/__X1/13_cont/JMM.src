// Útìk Johna MacMillana.


Export JMM;                              // JMM.
Var JMMAuto, JMMDoprovod;                // Seznam jednotek JMM.
Var CekatJMM;                            // Jak dlouho bude trvat, než JMM odjede.
Var MakroMove;                           // Makro na útìk JMM.
Var JMMUtekl;                            // Už JMM utekl pryè?
Var VidelJMM;                            // Vidìl už Rus JMM?


Export Function init_jmm;
Begin
  Disable (11); Disable (12); Disable (13); Disable (14); Disable (15);
  // Jak dlouho budeme na JMM èekat.
  CekatJMM = dif_CekamJMM [Difficulty];
  JMMDoprovod = [];
  MakroMove = 0;
  JMMUtekl = false;
  VidelJMM = false;
  // Vytvoøit JMM a prdnout ho na mapu.
  vytvor_jmm;
  vytvor_jmm_auto;
  PlaceHumanInUnit (JMM, JMMAuto);
  PlaceUnitArea (JMMAuto, JMMStart, false);
  // Nechat ho tam èekat.
  ComHold (JMMAuto);
End;


// Vytvoøí postavu JMM.
Function vytvor_jmm;
Begin
  If JMM then Exit;
  UC_Side = side_Am;
  If TestCharacters ('Macmillan') then JMM = CreateCharacter ('Macmillan')
  else JMM = NewCharacter ('Macmillan');
  SetSide (JMM, side_Am);
End;


// Vytvoøí auto pro JMM.
Function vytvor_jmm_auto;
Begin
  If JMMAuto then Exit;
  UC_Side = side_Am; UC_Nation = NATION_AMERICAN;
  VC_Chassis = US_MORPHLING; VC_Control = CONTROL_MANUAL;
  VC_Engine = ENGINE_SIBERITE; VC_Weapon = US_HEAVY_GUN;
  JMMAuto = CreateVehicle;
  SetMark (JMMAuto, 1);
  SetSide (JMMAuto, side_Am);
End;


// Hráè se dozví o JMM.
Function jmm_start;
Begin
  DialogueOn;
  dialog_JMMStart;
  ChangeMissionObjectives ('MJMM');
  DialogueOff;
  Enable (11);
End;


// Zaène útìk JMM.
Function jmm_appear;
Var Kdo;
Begin
  Result = false;
  // Zkusit získat doprovod.
  JMMDoprovod = amici_vezmi_doprovod;
  If not JMMDoprovod then Exit;
  // Povolit dialog, že JMM pøišel.
  Enable (15);
  // Øíct JMM, aby utíkal.
  Kdo = IsInUnit (JMM); If not Kdo then Kdo = JMM;
  ComFree (Kdo); Wait (0$1);
  MakroMove = McMove (50, JMMDoprovod union [Kdo], [[142,38],[153,49],[156,60],[152,67],[151,72],[144,74],[135,76],[129,75],[119,78],[105,105],[98,125],[80,155]], [MC_MOVE_WAITWP, MC_MOVE_DONTCAPTURE, MC_MOVE_AGRESSIVE]);
  Enable (12); Enable (14);
  // Konec.
  Result = true;
End;


Every 0$0.8 Marked 15 do
Var Vidi, Auto;
Begin
  If VidelJMM then Exit;
  Auto = IsInUnit (JMM);
  Vidi = See (side_Ru, JMM) or (Auto and See (side_Ru, Auto));
  If Vidi then
  Begin
    VidelJMM = true;
    DialogueOn;
    dialog_JMMAppear;
    DialogueOff;
  End else Enable;
End;


// Èekat na hlášku, že JMM pøijde.
Every 0$30 do
Begin
  Wait (Rand (CekatJMM [1], CekatJMM [2]));
  jmm_start;
End;


// Èekat od hlášky, že JMM pøijde, na jeho skuteèný pøíchod.
Every 1$30 Marked 11 do
Begin
  Wait (Rand (0$1, 1$0));
  If not jmm_appear then Enable;
End;


// Až skonèí makro, spustit trigger, který bude pøesunovat jednotky do únikové zóny.
Every 0$1 Marked 12 do
Begin
  WaitForMc (MakroMove);
  Enable (13);
End;


// Bude pøesouvat JMM a spol. do únikové zóny.
Function presun_unikova_zona;
Var Kdo, List;
Begin
  // Zjistit seznam jednotek, které se mají pøesunout.
  Kdo = IsInUnit (JMM); If not Kdo then Kdo = JMM;
  List = [Kdo] union JMMDoprovod;
  // Pøesunout je. Vrátit TRUE, pokud tam všechny jsou.
  Result = true;
  For Kdo in List do
  Begin
    If not IsPlaced (Kdo) then Continue;
    If IsInArea (Kdo, JMMUtek) then Continue;
    // Není tam.
    ComMoveToArea (Kdo, JMMUtek);
    Result = false;
  End;
End;


// Pøesun jednotek do únikové zóny.
Every 0$3.4 Marked 13 do
Begin
  If not presun_unikova_zona then Enable;
End;


// Kontrola odstraòování jednotek.
Every 0$1.2 Marked 14 do
Var Kdo, List, Odstraneno;
Begin
  // Odstranit doprovod.
  If JMMDoprovod then
  Begin
    Odstraneno = [];
    For Kdo in JMMDoprovod do
      If IsPlaced (Kdo) and IsInArea (Kdo, JMMUtek) then
      Begin
        RemoveUnit (Kdo);
        Odstraneno = Odstraneno union [Kdo];
      End;
    JMMDoprovod = JMMDoprovod diff Odstraneno;
  End;
  // Odstranit JMM?
  If not JMMUtekl then
  Begin
    Kdo = IsInUnit (JMM); If not Kdo then Kdo = JMM;
    If IsPlaced (Kdo) and IsInArea (Kdo, JMMUtek) then jmm_Escapes;
  End;
  // Zjistit, zda ještì nìkdo má utéct. Pokud ne, zruším trigger na
  // pøesun do únikové zóny.
  If JmmDoprovod or not JMMUtekl then Enable
  else Disable (13);
End;


Export Function jmm_UnitDestroyed (Un);
Begin
  // Nìkdo z doprovodu?
  If Un = JMMAuto then JMMAuto = 0;
  If Un in JMMDoprovod then JMMDoprovod = JMMDoprovod diff [Un];
  // Sám JMM?
  If Un = JMM then
  Begin
    Disable (15);
    DialogueOn;
    dialog_JMMDies;
    SA_OnJMMKilled;
    ChangeMissionObjectives ('MJMMOut');
    DialogueOff;
  End;
End;


// JMM utekl.
Function jmm_Escapes;
Var I;
Begin
  Disable (15);
  DialogueOn;
  JMMUtekl = true;
  I = IsInUnit (JMM); If I then RemoveUnit (I) else RemoveUnit (JMM);
  dialog_JMMEscapes;
  DialogueOff;
End;


// JMM musel vystoupit z auta. Bude tedy dál prchat pìšky.
Export Function jmm_EvacuateVehicle (Hum, Veh);
Begin
  If MakroMove and (Hum = JMM) then
  Begin
    JMMAuto = 0;
    RemoveMcUnits (MakroMove, Veh);
    AddMcUnits (JMM, Veh);
  End;
End;


