// Kód pro Rusáky.


Var LabyST;
Export ArtefaktMajAmici;
Export KdeJeArtefakt;        // [X, Y] nebo 0
Export AutoSArtefaktem;
Export OK_North, OK_East;
Export TimeLapser;
Var LabySArtefaktem;         // U kterýho labu je artefakt.
Var MericiLaborator;         // Ve které laboratoøi probíhá výzkum.
Var Slozitost;               // Jak dlouho trvá výzkum.
Export VelikostArtefaktu;    // Jaký artefakt je používán.


Export Function init_rusove;
Begin
  Disable (1); Disable (2);
  // Promìnné.
  VelikostArtefaktu = 4;
  OK_North = 0; OK_East = 0;
  LabyST = [];
  KdeJeArtefakt = 0; ArtefaktMajAmici = false; AutoSArtefaktem = 0;
  LabySArtefaktem = []; MericiLaborator = 0;
  TimeLapser = false;
  Slozitost = dif_ArtefaktDoba [Difficulty];
End;


Function vytvor_nakladak (Material, Amount);
Begin
  UC_Side = side_Ru; UC_Nation = NATION_RUSSIAN;
  VC_Chassis = RU_MEDIUM_WHEELED; VC_Control = CONTROL_COMPUTER;
  VC_Engine = ENGINE_SIBERITE; VC_Weapon = RU_CARGO_BAY;
  Result = CreateVehicle;
  If Amount > 0 then SetCargo (Result, Material, Amount);
End;


Function vytvor_tank (Zbran);
Begin
  UC_Side = side_Ru; UC_Nation = NATION_RUSSIAN;
  VC_Chassis = RU_MEDIUM_WHEELED; VC_Control = CONTROL_MANUAL;
  VC_Engine = ENGINE_COMBUSTION; VC_Weapon = Zbran;
  VC_Fuel_Battery = Rand (70, 90);
  Result = CreateVehicle;
End;

                              
Export Function uvod;
Var I, Auto;
Begin
  // Postavy na mapu.
  If Masha then
  Begin
    PlaceHumanInUnit (Burlak, Masha);
    PlaceUnitArea (Masha, Start, false);
  End else Begin
    Auto = vytvor_tank (RU_GUN);
    PlaceHumanInUnit (Burlak, Auto);
    PlaceUnitArea (Auto, Start, false);
  End;
  PlaceUnitArea (vytvor_nakladak (MAT_OIL, 100), Start, false);
  AutoSArtefaktem = vytvor_nakladak (MAT_ARTIFACT, VelikostArtefaktu * 10);
  PlaceUnitArea (AutoSArtefaktem, Start, false);
  PlaceUnitArea (Bystrov, Start, false);
  For I in Rusove do PlaceUnitArea (I, Start, false);
  // Animace.
  InGameOn;
  I = IsInUnit (Burlak);
  If I then CenterNowOnUnits (I)
  else CenterNowOnUnits (Burlak);
  dialog_Arrival;
  SaveForQuickRestart;
  ChangeMissionObjectives ('MStart');
  Hint ('LocateMotherlode');
  InGameOff;
End;


Export Function rusove_UnitDestroyed (Un);
Begin
  // Burlak?
  If Un = Burlak then Begin YouLost ('Burlak'); Exit; End;
  // Artefakt?
  If Un = AutoSArtefaktem then
  Begin
    Wait (0$1);
    rusove_ArtifactUnloaded (0, VelikostArtefaktu);
  End;
  // Nastavení artefaktu.
  If Un in LabyST then
  Begin
    LabyST = LabyST diff [Un];
    nastav_artefakt;
  End;
End;


Function je_NW_pulka (X, Y);
Begin
  X := X - (Y div 2);
  Result := (X + Y) <= 160;
End;


// Tato funkce zjistí, zda není stavìn depot nebo lab
// jinde, než má být.
Export Function rusove_BuildingStarted (Bu, Hu);
Var Typ;
Begin
  If GetSide (Bu) <> side_Ru then Exit;
  Typ = GetBType (Bu);
  // Blbì postavenej depot?
  If Typ = B_DEPOT then
  Begin
    If not IsInArea (Bu, Base_NDepot) and not IsInArea (Bu, Base_EDepot) then
    Begin
      DialogueOn;
      If je_NW_pulka (GetX (Bu), GetY (Bu)) then dialog_BadBaseN
      else dialog_BadBaseE;
      DialogueOff;
    End;
  End;
  // Blbì postavenej lab?
  If Typ = B_LAB then
  Begin
    If not IsInArea (Bu, Base_N2) and not IsInArea (Bu, Base_E2) then
    Begin
      DialogueOn;
      If je_NW_pulka (GetX (Bu), GetY (Bu)) then dialog_BadLabN
      else dialog_BadLabE;
      DialogueOff;
    End;
  End;
End;


// Zjistí, zda je artefakt v dané základnì.
Function je_artefakt_v_zakladne (Lab);
Var X, Y, Found;
Begin
  Result = false;
  // Jestli ho maj Amíci, tak to nejde.
  If ArtefaktMajAmici then Exit;
  // Jestli je v autì, tak zjistím,
  If KdeJeArtefakt = 0 then Exit;
  // Je na zemi a vím, kde.
  X = KdeJeArtefakt [1];
  Y = KdeJeArtefakt [2];
  // Je na [X, Y]. Je to blízko?
  Result = GetDistUnitXY (Lab, X, Y) <= 9;
End;


// Lab je upgradován na SpaceTime.
Function rusove_SpaceTimeHotovo (Lab);
Begin
  If not je_artefakt_v_zakladne (Lab) and (IsInArea (Lab, Base_N2) or IsInArea (Lab, Base_E2)) then
  Begin
    DialogueOn;
    dialog_NoArtefact;
    DialogueOff;
  End;
End;


// Zjistit, zda byl upgradován lab na ST nebo SI.
Export Function rusove_UpgradeComplete (Build);
Begin
  If (GetSide (Build) = side_Ru) and (GetBType (Build) in [B_LAB, B_LAB_HALF, B_LAB_FULL]) then
  Begin
    // SpaceTime?
    If not Build in LabyST then
      If (GetLabKind (Build, 1) = B_LAB_SPACETIME) or
         (GetLabKind (Build, 2) = B_LAB_SPACETIME) then
      Begin
        rusove_SpaceTimeHotovo (Build);
        LabyST = LabyST union [Build];
        nastav_artefakt;
      End;
  End;
End;


// Vynalezl jsem nìco.
Export Function rusove_ResearchComplete (Tech, Lab);
Begin
  If GetSide (Lab) <> side_Ru then Exit;
  // Je to lapser?
  If Tech = TECH_LAPSER then
  Begin
    DialogueOn;
    dialog_TimeLapser2;
    ChangeMissionObjectives ('MTimeLapser');
    Hint ('TimeLapser');
    DialogueOff;
  End;
  // Nastavit použití artefaktu.
  Wait (0$1);
  nastav_artefakt;
End;


Export Function rusove_ResearchStarted (Tech, Lab);
Begin
  If GetSide (Lab) <> side_Ru then Exit;
  // Nastavit použití artefaktu.
  nastav_artefakt;
End;


Export Function rusove_ResearchCancel (Tech, Lab);
Begin
  If GetSide (Lab) <> side_Ru then Exit;
  // Nastavit použití artefaktu.
  Wait (0$0.2);
  nastav_artefakt;
End;


// Nìkdo opustil budovu.
Export Function rusove_SpecResearchCancel (Lab, Progress);
Begin
  // Zruším aktuální používání artefaktu.
  zrus_pouziti_artefaktu;
  // Nastavím artefakt.
  Wait (0$0.2);
  nastav_artefakt;
End;


// Vynalezl jsem to.
Function mereni_complete (Lab);
Var OldOKN, OldOKE;
Begin
  // Byl artefakt u laboratoøe?
  If not je_artefakt_v_zakladne (Lab) then Exit;
  // Bylo to ve správném labu?
  OldOKN = OK_North; OldOKE = OK_East;
  If IsInArea (Lab, Base_N2) then OK_North = max (OK_North, 1);
  If IsInArea (Lab, Base_N1) then OK_North = max (OK_North, 2);
  If IsInArea (Lab, Base_E2) then OK_East = max (OK_East, 1);
  If IsInArea (Lab, Base_E1) then OK_East = max (OK_East, 2);
  // Zmìnit objektivy?
  If not OldOKN and OK_North then
  Begin
    DialogueOn;
    If OK_East then dialog_Done2
    else Begin
      dialog_Done1;
      If GetTech (TECH_LAPSER, side_Ru) <> STATE_RESEARCHED then dialog_TimeLapser1;
    End;
    DialogueOff;
    ChangeMissionObjectives ('MOutNorth');
  End;
  If not OldOKE and OK_East then
  Begin
    DialogueOn;
    If OK_North then dialog_Done2
    else Begin
      dialog_Done1;
      If GetTech (TECH_LAPSER, side_Ru) <> STATE_RESEARCHED then dialog_TimeLapser1;
    End;
    DialogueOff;
    ChangeMissionObjectives ('MOutEast');
  End;
  // Už mám obì mìøení?
  If not (OldOKN and OldOKE) and OK_North and OK_East then
  Begin
    ChangeMissionObjectives ('MFinish');
    SetAreaMapShow (Cil, 1);
    Enable (1);
  End;
  // Nastavení možnosti vynalézat.
  nastav_artefakt;
End;


Function postavil_lapser;
Begin
  If not TimeLapser then
  Begin
    TimeLapser = true;
    ChangeMissionObjectives ('MTLOut');
  End;
End;


// Dokonèen timelapser?
Export Function rusove_VehicleConstructed (Veh, Fact);
Begin
  If (GetSide (Veh) = side_Ru) and (GetWeapon (Veh) = RU_TIME_LAPSER) then postavil_lapser;
End;


Export Function rusove_WeaponPlaced (Build, Fact);
Begin
  If (GetSide (Build) = side_Ru) and (GetBWeapon (Build) = RU_TIME_LAPSER) then postavil_lapser;
End;


// Zjištìní, zda jsou všichni venku.
Function zjisti_konec;
Var Lidi;
Begin
  End_The_Mission_Allowed = false;
  // Pokud je Burlak venku, nemùžu skonèit.
  If not IsInArea (Burlak, Cil) then Exit;
  // Pokud je artefakt venku, nemùžu skonèit.
  If not AutoSArtefaktem then Exit;
  If GetSide (AutoSArtefaktem) <> side_Ru then Exit;
  If not IsInArea (AutoSArtefaktem, Cil) then Exit;
  // Ještì zjistím, zda není nìkdo venku.
  // Pokud ne, konèím, jinak dám možnost skonèit z objektivù.
  Lidi = FilterUnitsExceptArea (Cil, [[F_SIDE, side_Ru], [F_PLACED], [F_OK], [F_TYPE, UNIT_HUMAN]]);
  If not Lidi then vyhral
  else Begin
    End_The_Mission_Allowed = true;
  End;
End;


On EndTheMissionRaised (Unknown) do
Var Lidi, I;
Begin
  // Zabít lidi, kteøí nejsou v cíli.
  Lidi = FilterUnitsExceptArea (Cil, [[F_SIDE, side_Ru], [F_PLACED], [F_OK], [F_TYPE, UNIT_HUMAN]]);
  For I in Lidi do DestroyUnit (I);
  // Ukonèit misi.
  vyhral;
End;


// Zjištìní, zda jsou všichni v cílové oblasti.
Every 0$4.1 Marked 1 do
Begin
  zjisti_konec;
  Enable;
End;


// Zjištìní, kde se nachází artefakt. Nìkdo ho totiž naložil.
Export Function rusove_ArtifactLoaded (Un, Size);
Begin
  // Zruším aktuální používání.
  zrus_pouziti_artefaktu;
  // Poznaèím, kde je.
  KdeJeArtefakt = 0; AutoSArtefaktem = Un;
  // Jestli mi ho ukradli Amíci, tak budu køièet.
  If GetSide (Un) = side_Ru then ArtefaktMajAmici = false
  else Begin
    ArtefaktMajAmici = true;
    DialogueOn;
    dialog_ArtefactSteal;
    DialogueOff;
  End;
  // A nastavím vynalézání.
  nastav_artefakt;
End;


Export Function event_ArtefactStolen;
Begin
  YouLost ('Artefact');
End;


// Zjištìní, zda Amerikáni artefakt neodvezli k sobì.
Every 0$5.1 Trigger ArtefaktMajAmici do
Begin
  // Už dojeli k sobì?
  If IsInArea (AutoSArtefaktem, AmericaniArtefakt) then event_ArtefactStolen
  else Begin
    // Ne, ještì ne, tak je popoženeme.
    ComAgressiveMove (AutoSArtefaktem, 143, 13);
    AddComMoveToArea (AutoSArtefaktem, AmericaniArtefakt);
    AddComSailEvent (AutoSArtefaktem, 102);
  End;
  Enable;
End;


// Nìkdo vyložil artefakt. Provedeme tedy nastavení technologie.
Export Function rusove_ArtifactUnloaded (Un, Size);
Var Souradnice;
Begin
  AutoSArtefaktem = 0; ArtefaktMajAmici = false;
  Souradnice = FindArtifact (VelikostArtefaktu);
  KdeJeArtefakt = [Souradnice [1], Souradnice [2]];
  nastav_artefakt;
End;


// Zjistí, zda se jedná o lab.
Function je_lab (Lab);
Begin
  Result = GetBType (Lab) in [B_LAB, B_LAB_HALF, B_LAB_FULL];
End;


// Vrátí, zda mùže použít artefakt.
Function muze_pouzit_artefakt (Lab);
Begin
  Result = false;
  If not IsInArea (Lab, Base_N2) and not IsInArea (Lab, Base_E2) then Exit;
  If not je_artefakt_v_zakladne (Lab) then Exit;
  If (GetLabKind (Lab, 1) <> B_LAB_SPACETIME) and (GetLabKind (Lab, 2) <> B_LAB_SPACETIME) then Exit;
  Result = true;
End;


// Zruší probíhající použití artefaktu.
Function zrus_pouziti_artefaktu;
Begin
  // Zrušit výzkum.
  SetNoActivity (MericiLaborator);
  MericiLaborator = 0;
End;


// Zamìøování Motherlodu je hotovo.
Export Function rusove_SpecResearchComplete (Lab);
Begin
  // Zavolat kompletaèní rutinu.
  mereni_complete (MericiLaborator);
  // Zruším používání.
  zrus_pouziti_artefaktu;
  // Znovu nastavit.
  nastav_artefakt;
End;


// Použití artefaktu.
Export Function rusove_ArtifactUsed (Side, Number, P1, P2);
Var Lab;
Begin
  // Zjistit lab, kde se má zkoumat.
  If Side <> side_Ru then Exit;
  If not LabySArtefaktem then Exit;
  Lab = LabySArtefaktem [1];
  // Zahájit speciální výzkum.
  MericiLaborator = Lab;
  SetSpecResearch (Lab, Slozitost, true);
  nastav_artefakt;
End;


Function nastav_pouziti (Jak, Lab);
Var L;
Begin
  SetArtifactUse (side_Ru, ART_USE_EYE, Jak, Lab);
End;


// Nastaví možnost vynalézat artefakt.
Function nastav_artefakt;
Var L;
Begin
  // Pokud jsme ve fázi 2, povolíme èi zakážeme použití artefaktu.
  If MericiLaborator then
  Begin
    For L in LabySArtefaktem do nastav_pouziti (ART_GRAY, L)
  End else Begin
    // Zrušit použití.
    For L in LabySArtefaktem do nastav_pouziti (ART_NO, L);
    LabySArtefaktem = [];
    // Zjistit, které laby jsou možné.
    If KdeJeArtefakt then
    Begin
      For L in LabyST do
        If muze_pouzit_artefakt (L) then
          LabySArtefaktem = LabySArtefaktem union [L];
      If (LabySArtefaktem > 1) then
      Begin
        L = NearestUnitToXY (LabySArtefaktem, KdeJeArtefakt [1], KdeJeArtefakt [2]);
        If L then LabySArtefaktem = [L] else LabySArtefaktem = [];
      End;
    End else LabySArtefaktem = [];
    // Nastavit použití artefaktu.
    If LabySArtefaktem then
    Begin
      For L in LabySArtefaktem do
        If GetActResearch (L) then nastav_pouziti (ART_GRAY, L)
        else nastav_pouziti (ART_INSTANT, L);
    End else zrus_pouziti_artefaktu;
  End;
End;


// Zabrání vozidla.
Export Function rusove_VehicleCaptured (VehNew, VehOld, OrigSide, Hum);
Begin
  If Masha = VehOld then Masha = VehNew;
  // Artefakt?
  If VehOld = AutoSArtefaktem then
  Begin
    AutoSArtefaktem = VehNew;
    rusove_ArtifactLoaded (VehNew, 0);
  End;
End;


