// Hlavní modul.

// Triggery:
//  1: Èekání na opuštìní mapy Rusem na konci mise.
// 11: JMM se objeví.
// 12: Skonèení makra na útìk JMM.
// 13: Pøesun JMM do únikové zóny.
// 14: Odstraòování JMM a doprovodu z mapy.
// 15: Test, zda Rus vidí JMM.
// 21: Èasovaè útoku.
// 22: Nièení konvoje, respektive èekání, až ho bude možné znièit.

// Events:
// 102: Artefakt dojel do americké základny.
// 111: kradeník dojel k artefaktu.
// 113: dokonèeno léèení.
// 114: dokonèena oprava aut.


// Strany.
Export side_Neutral, side_Am, side_Ru;
// Postavy Rusa.
Export Burlak, Bystrov;
Export Belkov, Gnyevko, Kirilenkova;
Export Kovalyuk, Scholtze;
Export Kuzmov;
Export Karamazov, Petrovova, Gleb, Petrosyan;
Export Lipshchin, Titov, Dolgov, Xavier;
Export Oblukov, Kozlov, Kapitsova;
Export Masha;
Export Ostatni;
// Tihle jenom kecaj pøes rádio.
Export Gladkov, GladkovFake;
// Tyhle postavy má Burlak k ruce.
Export Rusove;


Function load_char (Ident);
Begin
  If TestCharacters (Ident) then
  Begin
    Result = CreateCharacter (Ident);
    If IsDead (Result) then
    Begin
      DestroyUnit (Result);
      Result = 0;
    End;
  End else Result = NewCharacter (Ident);
  If Result then SetSide (Result, 3);
End;


Function load_create (Ident);
Begin
  If TestCharacters (Ident) then
  Begin
    Result = CreateCharacter (Ident);
    If IsDead (Result) then
    Begin
      DestroyUnit (Result);
      Result = 0;
    End;
  End else Result = NewCharacter (Ident);
  If Result then SetSide (Result, 3);
End;


Function load_set (Ident);
Begin
  If TestCharacters (Ident) then Result = CreateCharacterSet (Ident)
  else Result = [];
End;


Function vytvor_gladkova;
Begin
  UC_Nation = NATION_RUSSIAN; UC_side = side_Ru;
  HC_name = ''; HC_sex = SEX_MALE;
  HC_class = CLASS_SOLDIER; PrepareSoldierSkills (7);
  Result = CreateHuman;
End;


Function load;
Var MashaSpec;
Begin
  UC_Side = side_Ru; UC_Nation = NATION_RUSSIAN;
  // Hlavní charaktery.
  Burlak = load_char ('Burlak');
  Bystrov = NewCharacter ('Bystrov');
  Gladkov = load_char ('Gladkov');
  If not Gladkov then GladkovFake = vytvor_gladkova;
  // Masha.
  MashaSpec = LoadVariable ('Masha', []);
  If MashaSpec = 0 then Masha = 0
  else Begin
    UC_Nation = NATION_RUSSIAN; UC_Side = side_Ru;
    VC_Chassis = MashaSpec [1]; VC_Engine = MashaSpec [2];
    VC_Control = MashaSpec [3]; VC_Weapon = MashaSpec [4];
    If (VC_Weapon = 0) or (VC_Control = 0) or (VC_Engine = 0) or (VC_Chassis = 0) then Masha = 0
    else Begin
      Masha = CreateVehicle;
      SetMark (Masha, 1);
    End;
  End;
  // Charaktery.
  If LoadVariable ('GlebLoc', 0) = 13 then Gleb = load_char ('Gleb');
  If LoadVariable ('BelkovLoc', 0) = 13 then Belkov = load_char ('Belkov');
  If LoadVariable ('GnyevkoLoc', 0) = 13 then Gnyevko = load_char ('Gnyevko');
  If LoadVariable ('KirilenkovaLoc', 0) = 13 then Kirilenkova = load_char ('Kirilenkova');
  If LoadVariable ('KovalyukLoc', 0) = 13 then Kovalyuk = load_char ('Kovalyuk');
  If LoadVariable ('ScholtzeLoc', 0) = 13 then Scholtze = load_char ('Scholtze');
  If LoadVariable ('KuzmovLoc', 0) = 13 then Kuzmov = load_char ('Kuzmov');
  If LoadVariable ('KaramazovLoc', 0) = 13 then Karamazov = load_char ('Karamazov');
  If LoadVariable ('PetrovovaLoc', 0) = 13 then Petrovova = load_char ('Petrovova');
  If LoadVariable ('GlebLoc', 0) = 13 then Gleb = load_char ('Gleb');
  If LoadVariable ('PetrosyanLoc', 0) = 13 then Petrosyan = load_char ('Petrosyan');
  If LoadVariable ('LipshchinLoc', 0) = 13 then Lipshchin = load_char ('Lipshchin');
  If LoadVariable ('TitovLoc', 0) = 13 then Titov = load_char ('Titov');
  If LoadVariable ('DolgovLoc', 0) = 13 then Dolgov = load_char ('Dolgov');
  If LoadVariable ('XavierLoc', 0) = 13 then Xavier = load_char ('Xavier');
  If LoadVariable ('OblukovLoc', 0) = 13 then Oblukov = load_char ('Oblukov');
  If LoadVariable ('KozlovLoc', 0) = 13 then Kozlov = load_char ('Kozlov');
  If LoadVariable ('KapitsovaLoc', 0) = 13 then Kapitsova = load_char ('Kapitsova');
  Ostatni = load_set ('Others_Ru13'); DeleteCharacters ('Others_Ru13');
  // Seznam všech postav.
  Rusove = ([Gleb, Belkov, Gnyevko, Kirilenkova, Kovalyuk, Scholtze, Kuzmov, Karamazov, Petrovova,
    Gleb, Petrosyan, Lipshchin, Titov, Dolgov, Xavier, Oblukov, Kozlov, Kapitsova] union Ostatni)
    diff [0];
  // Nastavení strany.
  SetSide ([Burlak, Bystrov, Gladkov], side_Ru);
  SetSide (Rusove, side_Ru);
End;


Function save_char (Handle, Ident);
Begin
  If Handle then SaveCharacters ([Handle], Ident);
End;


Function save;
Var MashaSpec, Survivors4, O, Opice;
Begin
  // Postavy.
  save_char (Burlak, 'Burlak');
  save_char (Bystrov, 'Bystrov');
  save_char (Gleb, 'Gleb');
  save_char (Belkov, 'Belkov');
  save_char (Gnyevko, 'Gnyevko');
  save_char (Kirilenkova, 'Kirilenkova');
  save_char (Kovalyuk, 'Kovalyuk');
  save_char (Scholtze, 'Scholtze');
  save_char (Kuzmov, 'Kuzmov');
  save_char (Karamazov, 'Karamazov');
  save_char (Petrovova, 'Petrovova');
  save_char (Gleb, 'Gleb');
  save_char (Petrosyan, 'Petrosyan');
  save_char (Lipshchin, 'Lipshchin');
  save_char (Titov, 'Titov');
  save_char (Dolgov, 'Dolgov');
  save_char (Xavier, 'Xavier');
  save_char (Oblukov, 'Oblukov');
  save_char (Kozlov, 'Kozlov');
  save_char (Kapitsova, 'Kapitsova');
  // Survivors4.
  Survivors4 = load_set ('Survivors4');
  O = Rusove diff [0, Burlak, Bystrov, Gleb, Belkov, Gnyevko, Kirilenkova, Kovalyuk, Scholtze, Kuzmov, Karamazov, Petrovova,
    Gleb, Petrosyan, Lipshchin, Titov, Dolgov, Xavier, Oblukov, Kozlov, Kapitsova];
  Opice = UnitFilter (Rusove, [[F_OR, [F_CLASS, CLASS_APEMAN], [F_CLASS, CLASS_APEMAN_SOLDIER], [F_CLASS, CLASS_APEMAN_ENGINEER], [F_CLASS, CLASS_APEMAN_KAMIKAZE]]]);
  O = O diff Opice;
  SaveCharacters (Survivors4 union O, 'Survivors4');
  // Promìnné,
  SaveVariable (JMM and IsDead (JMM), 'JMMKilled');
  // Masha.
  If Masha and IsOk (Masha) and (GetSide (Masha) = side_Ru) and IsInArea (Masha, Cil) then
  Begin
//    MashaSpec = [GetChassis (Masha), GetEngine (Masha), GetControl (Masha), GetWeapon (Masha)];
//    SaveVariable (MashaSpec, 'Masha');
  End else DeleteVariable ('Masha');
End;


// Pøidání medailí.
Function dej_medaile;
Begin
  If JMM and IsDead (JMM) then AddMedal ('Macmillan', 1)
  else AddMedal ('Macmillan', -1);
  If (OK_North = 2) and (OK_East = 2) then AddMedal ('Precision', 1)
  else AddMedal ('Precision', -1);
  If TimeLapser then AddMedal ('TimeLapser', 1)
  else AddMedal ('TimeLapser', -1);

SA_EndMission(3, 13, JMM and IsDead(JMM), (OK_North = 2) and (OK_East = 2), TimeLapser > 0);
End;


// Konec mise.
Export Function vyhral;
Var Lidi, Opice;
Begin
  // Medaile.
  dej_medaile;
  GiveMedals ('Main');
  // Seznam lidí.
  Lidi = FilterAllUnits ([[F_SIDE, side_Ru], [F_TYPE, UNIT_HUMAN], [F_ALIVE]]);
  Opice = UnitFilter (Lidi, [[F_OR, [F_CLASS, CLASS_APEMAN], [F_CLASS, CLASS_APEMAN_SOLDIER], [F_CLASS, CLASS_APEMAN_ENGINEER], [F_CLASS, CLASS_APEMAN_KAMIKAZE]]]);
  RewardPeople (Lidi diff Opice);
  // Uložit.
  save;
  // Konec mise.
  YouWin;
End;


Starting
Begin
  RandomizeAll;
  InitUC; InitBC; InitHC; InitVC;
  // Inicializace promìnných.
  side_Neutral = 0;
  side_Am = 1;
  side_Ru = 3;
  // Naètení z pøedchozí mise.
  load;
  // Inicializace ostatních modulù.
  init_difficulty;
  init_suroviny;
  init_nature;
  init_rusove;
  init_amici;
  init_jmm;
  // Úvodní animace.
  uvod;
End;


