Export convoys, convoyWave, convoySide;
Export Function PrepareConvoys(side);
var i;
begin
convoys := [];
convoySide := side;
convoyWave := 1;

for i := 1 to 8 do
    if multi_sides[i] then
       ChangeSideFog(i, side);
End;

Every 2$00 + 1$00 trigger game do
var i, tmp;
begin
enable;

blockThread := true;
SendConvoy(convoyWave);
blockThread := false;
End;

Function SendConvoy(wave);
var i, skill, un, veh, tmp, path;
begin
convoyWave := Inc(wave);
skill := [5, 4, 3][Difficulty];
tmp := [];

// forest north
if wave mod 5 = 0 then
   begin
   path := [ [16,21], [36,45], [48,58], [59,88], [76,106], [93,150], [92,177] ];

   for i := 1 to 4 do
       begin
       uc_side := convoySide;
       uc_nation := nation_russian;

       PrepareHuman(false, rand(1,4), skill);
       un := CreateHuman;
       SetDir(un, 3);
       PlaceUnitArea(un, northForestSpawnArea, false);

       SetLives(un, rand(400, 1000));

       convoys := Join(convoys, un);
       tmp := Join(tmp, un);
       end;
   end  // tanks squad
else if wave mod 3 = 0 then
   begin
   path := [ [133,15], [125,34], [109,55], [99,64], [133,102], [143,136], [127,154], [92,152], [93,177] ];

   for i := 1 to 4 do
       begin
       uc_side := convoySide;
       uc_nation := nation_russian;

       PrepareHuman(false, rand(1,4), skill);
       un := CreateHuman;

       PrepareVehicle([ru_medium_wheeled, ru_medium_tracked][rand(1,2)], engine_combustion, control_manual, [ru_heavy_machine_gun, ru_gatling_gun, ru_cargo_bay, ru_gun][rand(1,4)], rand(60, 90));
       veh := CreateVehicle;
       SetDir(veh, 3);
       SetLives(veh, rand(400, 1000));

       if GetWeapon(veh) = ru_cargo_bay then
          SetCargo(veh, [mat_cans, mat_oil][rand(1,2)], 10 * rand(1, 10));

       repeat
        wait(0$0.3);
       until PlaceUnitArea(veh, northSpawnArea, false);

       PlaceHumanInUnit(un, veh);

       convoys := Join(convoys, un);
       tmp := Join(tmp, un);

       convoys := Join(convoys, veh);
       tmp := Join(tmp, veh);

       ComMoveXY(un, 133, 15);
       end;
   end
else // mixed
   begin
   path := [ [133,15], [125,34], [109,55], [99,64], [88,70], [74,78], [70,91], [80,113], [89,133], [91,159], [93,177] ];

   for i := 1 to 2 do
       begin
       uc_side := convoySide;
       uc_nation := nation_russian;

       PrepareHuman(false, rand(1,4), skill);
       un := CreateHuman;

       PrepareVehicle([ru_medium_wheeled, ru_medium_tracked][rand(1,2)], engine_combustion, control_manual, [ru_heavy_machine_gun, ru_gatling_gun, ru_cargo_bay, ru_gun][rand(1,4)], rand(70, 90));
       veh := CreateVehicle;
       SetDir(veh, 3);
       SetLives(veh, rand(400, 1000));

       if GetWeapon(veh) = ru_cargo_bay then
          SetCargo(veh, mat_cans, 10 * rand(1, 10));

       repeat
        wait(0$0.3);
       until PlaceUnitArea(veh, northSpawnArea, false);

       PlaceHumanInUnit(un, veh);

       convoys := Join(convoys, un);
       tmp := Join(tmp, un);

       convoys := Join(convoys, veh);
       tmp := Join(tmp, veh);

       ComMoveXY(un, 133, 15);
       end;

   for i := 1 to rand(3,5) do
       begin
       uc_side := convoySide;
       uc_nation := nation_russian;

       PrepareHuman(false, rand(1,4), skill);
       un := CreateHuman;
       SetDir(un, 3);

       repeat
        wait(0$1);
       until PlaceUnitArea(un, northSpawnArea, false);

       SetLives(un, rand(400, 1000));

       convoys := Join(convoys, un);
       tmp := Join(tmp, un);

       ComMoveXY(un, 133, 15);
       end;
   end;

if not tmp then
   exit;

repeat
 wait(0$1);

 for i in tmp do
     begin
     if IsDead(i) then
        tmp := tmp diff i
     else if IsInArea(i, southEndArea) then
        begin
        tmp := tmp diff i;
        convoys := convoys diff i;

        if GetType(i) = unit_human then
           Multiplayer_AddPoints(convoySide, Multiplayer_GetCondition(7))
        else
           begin
           tmp := tmp diff IsInUnit(i);
           convoys := convoys diff IsInUnit(i);
           Multiplayer_AddPoints(convoySide, Multiplayer_GetCondition(8));
           end;

        RemoveUnit(i);
        savedConvoyUnits := Inc(savedConvoyUnits);
        end
     else if GetType(i) = unit_vehicle and GetFuel(i) = 0 then
        begin
        tmp := tmp diff i;
        convoys := convoys diff i;
        end
     else
        MoveTo(i, path, southEndArea);
     end;   
until not tmp;
End;

Function MoveTo(unit, path, area);
var cr, tag, type, vehicle, ignoreCratesWeapon;
begin
if not unit then
   exit;

ignoreCratesWeapon := [ar_selfpropelled_bomb, ar_bio_bomb, ru_time_lapser, ru_cargo_bay];

if IsOk(unit) then
   begin
   tag := GetTag(unit) + 1;
   cr := GetCratesNearbyXY(GetX(unit), GetY(unit), 3);
   type := GetType(unit);

   if type = unit_human then
      begin
      vehicle := IsInUnit(unit);

      if vehicle and GetFuel(vehicle) = 0 then
         begin
         ComExitVehicle(unit);
         AddComMoveXY(unit, path[tag][1], path[tag][2]);
         exit;
         end;
      end
   else
      begin
      if GetFuel(unit) = 0 then
         begin
         ComExitVehicle(IsDrivenBy(unit));
         AddComMoveXY(IsDrivenBy(unit), path[tag][1], path[tag][2]);
         exit;
         end;
      end;

    if type = unit_vehicle and GetWeapon(unit) = ru_cargo_bay and IsInArea(unit, cargoCheckpointArea) and (GetCargo(unit, mat_cans) or GetCargo(unit, mat_oil)) then
       begin
       goToUnload := Join(goToUnload, unit);
       ComMoveXY(unit, 113, 117);
       AddComUnload(unit);

       exit;
       end;

    if unit in goToUnload then
       begin            
       if GetCargo(unit, mat_cans) = 0 and GetCargo(unit, mat_oil) = 0 then
          begin
          SetTag(unit, tag + 2);
          goToUnload := goToUnload diff unit;
          end
       else
          exit;
       end;

    if type = unit_vehicle and cr > 3 and not GetWeapon(unit) in ignoreCratesWeapon then
       ComAttackPlace(unit, cr[1][1], cr[1][2])
    else if path > tag then
       begin
       if GetDistUnitXY(unit, path[tag][1], path[tag][2]) > 6 then
          if GetClass(unit) in [2, 3, 4] then
             ComMoveXY(unit, path[tag][1], path[tag][2])
          else
             ComAgressiveMove(unit, path[tag][1], path[tag][2])
       else
          SetTag(unit, tag);
       end
    else if not IsInArea(unit, area) then
       ComMoveToArea(unit, area);
    end;
End;