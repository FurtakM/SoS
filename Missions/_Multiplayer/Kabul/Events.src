On UnitDestroyed(un) do
var shooter, cl, s, n;
begin
// get type of unit
{
if GetSide(un) = bot_side then
   begin
   shooter := UnitShoot(un);

   if un in FilterAllUnits([f_type, unit_human]) then
      SetMultiScore(GetSide(shooter), GetMultiScore(GetSide(shooter)) + 30);
                                      
   if un in FilterAllUnits([f_type, unit_vehicle]) then
      SetMultiScore(GetSide(shooter), GetMultiScore(GetSide(shooter)) + 10);

   if un in FilterAllUnits([f_type, unit_building]) then
      SetMultiScore(GetSide(shooter), GetMultiScore(GetSide(shooter)) + 100);
   end; }

if un in attackers then
   attackers := attackers diff un;

if GetSide(un) <> bot_side and GetSide(un) > 0 and un in FilterAllUnits([f_type, unit_human]) then
   begin
   if respawning_time_min > 0$00 then
      begin
      s := GetSide(un);
      n := GetNation(un);
      cl := GetClass(un);

      wait(respawning_time_min);

      wait(respawning_time_max - (0$10 * tick mod 10 + 1) * cl);

      uc_side := s;
      uc_nation := n;
      PrepareHuman(false, cl, skill_level-2);
      PlaceUnitArea(CreateHuman, [cr1, cr3, cr2, cr3][(cl mod 4) + 1], true);
      end;
   end;
End;

On UnitGoesToRed(un) do
begin
if GetSide(un) = bot_side and un in FilterAllUnits([[f_control, control_remote], [f_type, unit_vehicle]]) then
   if GetSide(NearestUnitToUnit(all_units diff un, un)) <> bot_side then
      begin
      Wait(0$1.3);
      MineExplosion(GetX(un), GetY(un), 1);
      MineExplosion(GetX(un), GetY(un), 1);
      MineExplosion(GetX(un), GetY(un), 1);
      end;

if GetControl(un) = control_remote then
   ComUnlink(un);
End;

On VehicleConstructed(veh, b) do
begin
if GetSide(veh) = bot_side then
   attackers := Insert(attackers, attackers+1, veh);
End;

On LeaveBuilding(b, un) do
var i, arm;
begin
if GetSide(b) = bot_side and GetBType(b) = b_bunker then
   begin
   arm := FilterAllUnits([[f_side, bot_side], [f_btype, b_barracks]]);

   for i in arm do
       if UnitsInside(i) < 6 then
          begin
          ComEnterUnit(un, i);
          AddComChangeProfession(un, class_mortar);
          break;
          end;
   end;
End;

