// starting begin ResetFog ;
   0: CALL_OW 335
// Init ;
   4: CALL 19 0 0
// if debug then
   8: LD_EXP 1
  12: IFFALSE 18
// DebugMode ;
  14: CALL 27 0 0
// end ;
  18: END
// export debug ; function Init ; begin
  19: LD_INT 0
  21: PPUSH
// end ;
  22: LD_VAR 0 1
  26: RET
// export function DebugMode ; begin
  27: LD_INT 0
  29: PPUSH
// end ; end_of_file
  30: LD_VAR 0 1
  34: RET
// export function RespawnInside ( side , nation , build , skill , class , count ) ; var i , l , un ; begin
  35: LD_INT 0
  37: PPUSH
  38: PPUSH
  39: PPUSH
  40: PPUSH
// for i = 1 to count do
  41: LD_ADDR_VAR 0 8
  45: PUSH
  46: DOUBLE
  47: LD_INT 1
  49: DEC
  50: ST_TO_ADDR
  51: LD_VAR 0 6
  55: PUSH
  56: FOR_TO
  57: IFFALSE 138
// begin uc_side = side ;
  59: LD_ADDR_OWVAR 20
  63: PUSH
  64: LD_VAR 0 1
  68: ST_TO_ADDR
// uc_nation = nation ;
  69: LD_ADDR_OWVAR 21
  73: PUSH
  74: LD_VAR 0 2
  78: ST_TO_ADDR
// hc_gallery =  ;
  79: LD_ADDR_OWVAR 33
  83: PUSH
  84: LD_STRING 
  86: ST_TO_ADDR
// hc_name =  ;
  87: LD_ADDR_OWVAR 26
  91: PUSH
  92: LD_STRING 
  94: ST_TO_ADDR
// PrepareHuman ( false , class , skill ) ;
  95: LD_INT 0
  97: PPUSH
  98: LD_VAR 0 5
 102: PPUSH
 103: LD_VAR 0 4
 107: PPUSH
 108: CALL_OW 380
// un = CreateHuman ;
 112: LD_ADDR_VAR 0 10
 116: PUSH
 117: CALL_OW 44
 121: ST_TO_ADDR
// PlaceHumanInUnit ( un , build ) ;
 122: LD_VAR 0 10
 126: PPUSH
 127: LD_VAR 0 3
 131: PPUSH
 132: CALL_OW 52
// end ;
 136: GO 56
 138: POP
 139: POP
// end ;
 140: LD_VAR 0 7
 144: RET
// export function PrepareSolBun ( skill , b ) ; var un , dir ; begin
 145: LD_INT 0
 147: PPUSH
 148: PPUSH
 149: PPUSH
// uc_side := GetSide ( b ) ;
 150: LD_ADDR_OWVAR 20
 154: PUSH
 155: LD_VAR 0 2
 159: PPUSH
 160: CALL_OW 255
 164: ST_TO_ADDR
// uc_nation := GetNation ( b ) ;
 165: LD_ADDR_OWVAR 21
 169: PUSH
 170: LD_VAR 0 2
 174: PPUSH
 175: CALL_OW 248
 179: ST_TO_ADDR
// PrepareHuman ( false , 1 , skill ) ;
 180: LD_INT 0
 182: PPUSH
 183: LD_INT 1
 185: PPUSH
 186: LD_VAR 0 1
 190: PPUSH
 191: CALL_OW 380
// un = CreateHuman ;
 195: LD_ADDR_VAR 0 4
 199: PUSH
 200: CALL_OW 44
 204: ST_TO_ADDR
// dir := GetDir ( b ) - 3 ;
 205: LD_ADDR_VAR 0 5
 209: PUSH
 210: LD_VAR 0 2
 214: PPUSH
 215: CALL_OW 254
 219: PUSH
 220: LD_INT 3
 222: MINUS
 223: ST_TO_ADDR
// if dir < 0 then
 224: LD_VAR 0 5
 228: PUSH
 229: LD_INT 0
 231: LESS
 232: IFFALSE 248
// dir := 6 + dir ;
 234: LD_ADDR_VAR 0 5
 238: PUSH
 239: LD_INT 6
 241: PUSH
 242: LD_VAR 0 5
 246: PLUS
 247: ST_TO_ADDR
// SetDir ( un , dir ) ;
 248: LD_VAR 0 4
 252: PPUSH
 253: LD_VAR 0 5
 257: PPUSH
 258: CALL_OW 233
// PlaceHumanInUnit ( un , b ) ;
 262: LD_VAR 0 4
 266: PPUSH
 267: LD_VAR 0 2
 271: PPUSH
 272: CALL_OW 52
// end ; end_of_file
 276: LD_VAR 0 3
 280: RET
// export JMM , Bobby , Cyrus , Lisa , Khatam , Am_Others ; export function PrepareAmerican ; var i , un , savers ; begin
 281: LD_INT 0
 283: PPUSH
 284: PPUSH
 285: PPUSH
 286: PPUSH
// uc_side := 1 ;
 287: LD_ADDR_OWVAR 20
 291: PUSH
 292: LD_INT 1
 294: ST_TO_ADDR
// Am_Others := [ ] ;
 295: LD_ADDR_EXP 7
 299: PUSH
 300: EMPTY
 301: ST_TO_ADDR
// if debug then
 302: LD_EXP 1
 306: IFFALSE 442
// begin JMM := NewCharacter ( JMM ) ;
 308: LD_ADDR_EXP 2
 312: PUSH
 313: LD_STRING JMM
 315: PPUSH
 316: CALL_OW 25
 320: ST_TO_ADDR
// Bobby := NewCharacter ( Bobby ) ;
 321: LD_ADDR_EXP 3
 325: PUSH
 326: LD_STRING Bobby
 328: PPUSH
 329: CALL_OW 25
 333: ST_TO_ADDR
// Cyrus := NewCharacter ( Cyrus ) ;
 334: LD_ADDR_EXP 4
 338: PUSH
 339: LD_STRING Cyrus
 341: PPUSH
 342: CALL_OW 25
 346: ST_TO_ADDR
// Lisa := NewCharacter ( Lisa ) ;
 347: LD_ADDR_EXP 5
 351: PUSH
 352: LD_STRING Lisa
 354: PPUSH
 355: CALL_OW 25
 359: ST_TO_ADDR
// Khatam := NewCharacter ( Khatam ) ;
 360: LD_ADDR_EXP 6
 364: PUSH
 365: LD_STRING Khatam
 367: PPUSH
 368: CALL_OW 25
 372: ST_TO_ADDR
// for i = 1 to 4 do
 373: LD_ADDR_VAR 0 2
 377: PUSH
 378: DOUBLE
 379: LD_INT 1
 381: DEC
 382: ST_TO_ADDR
 383: LD_INT 4
 385: PUSH
 386: FOR_TO
 387: IFFALSE 438
// begin PrepareHuman ( false , rand ( 1 , 2 ) , 3 ) ;
 389: LD_INT 0
 391: PPUSH
 392: LD_INT 1
 394: PPUSH
 395: LD_INT 2
 397: PPUSH
 398: CALL_OW 12
 402: PPUSH
 403: LD_INT 3
 405: PPUSH
 406: CALL_OW 380
// un := CreateHuman ;
 410: LD_ADDR_VAR 0 3
 414: PUSH
 415: CALL_OW 44
 419: ST_TO_ADDR
// am_others := am_others ^ un ;
 420: LD_ADDR_EXP 7
 424: PUSH
 425: LD_EXP 7
 429: PUSH
 430: LD_VAR 0 3
 434: ADD
 435: ST_TO_ADDR
// end ;
 436: GO 386
 438: POP
 439: POP
// end else
 440: GO 442
// begin end ; end ;
 442: LD_VAR 0 1
 446: RET
