On ArtifactLoaded(cargo, artifact) do
var i, j;
begin
if artifact_get then
   exit;

MultiplayerEvent_ArtifactCaptured(GetSide(cargo));
artifact_get := true;
End;

On UnitDestroyed(un) do
var i, side;
begin
side := GetSide(un);

if not side in mc_sides and multi_sides[side] then
   if GetType(un) = unit_human then
      MultiplayerEvent_HumanLost(side);

if side in mc_sides then
   if un <> Gensher then
      MultiplayerEvent_UnitKilled(un, false)
   else
      MultiplayerEvent_UnitKilled(un, Multiplayer_GetCondition(5));

if multi_commanders and multi_custom_commanders then
   if un in multi_commanders then
      begin
      multi_loosers := Replace(multi_loosers, side, 1);
      multi_commanders := multi_commanders diff un;
      Multiplayer_Reside(side);
      end;

MCE_UnitDestroyed(un);
End;

On BuildingStarted(building, builder) do
begin
MCE_BuildingStarted(building, builder);
End;

On BuildingComplete(building) do
var i, j;
begin

if GetSide(building) in mc_sides then
   MultiplayerEvent_BuildingCompleted(GetSide(building), GetBType(building));

if GetBType(building) = b_depot and not GetSide(building) in mc_sides and base_names then
   begin
   SetBName(building, base_names[1]);
   base_names := Delete(base_names, 1);
   end;

MCE_BuildingComplete(building);
End;

On ResearchComplete(tech, lab) do
begin
MCE_ResearchComplete(tech, lab);
End;

On CrateSpawn(id, x, y, amount, mode) do
begin
MCE_CrateSpawn(id, x, y, amount, mode);
End;

On VehicleConstructed(vehicle, factory) do
var i, side, tmp;
begin
side := GetSide(vehicle);

if not side in mc_sides and multi_sides[side] then
   MultiplayerEvent_Produced(side);

MCE_VehicleConstructed(vehicle, factory);
End;

On VehicleCaptured(new, old, side, capturing_unit) do
begin
MCE_VehicleCaptured(new, old, side, capturing_unit);
End;

On BuildingCaptured(building, side, capturning_unit) do
begin
MCE_BuildingCaptured(building, side, capturning_unit);
End;

On EnterBuilding(building, unit) do
begin
MCE_EnterBuilding(building, unit);
End;

On LeaveBuilding(building, unit) do
begin
// code here

// MC_Event
MCE_LeaveBuilding(building, unit);
End;

On EvacuateVehicle(driver, abandoned_vehicle, unknown1, unknown2) do
begin
// code here

// MC_Event
MCE_EvacuateVehicle(driver, abandoned_vehicle, unknown1, unknown2);
End;