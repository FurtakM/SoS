Export ruCommander;
Export ruMechCounter, ruMobile, ruBuildList, ruAttackers,
       ruTechList, ruTeleportExits;

Export function PrepareRussian;
var i, j, tmp, un, weapons;
begin
uc_side := 3;
uc_nation := 3;

ruMechCounter := [8, 11, 14, 17][Difficulty];
ruMobile := [];
ruBuildList := [];
ruAttackers := [];
ruTechList := GetTechNation(3, nation_russian, state_enabled);
weapons := [ru_gatling_gun, ru_heavy_gun, ru_rocket_launcher];
ruTeleportExits := [ [46, 70], [121, 95], [68, 65] ];

if not russianRocketsDisabled then
   weapons := weapons ^ ru_rocket;

ruCommander := NewCharacter('Eisenstein');
PlaceHumanInUnit(ruCommander, ruDep);

SetResourceType(GetBase(ruDep), 1, [1000, 2000, 2500, 3000][Difficulty]);
SetResourceType(GetBase(ruDep), 2, 600);
SetResourceType(GetBase(ruDep), 3, 100);

TeleportExit(ruTeleport, 46, 70);

for i in FilterAllUnits([[f_side, 3], [f_type, unit_building]]) do
    SetBLevel(i, 6 + Difficulty);

tmp := FilterAllUnits([[f_side, 3], [f_or, [f_btype, b_bunker], [f_btype, b_turret]]]);

if russianRocketsDisabled then
   begin
   ruTechList := ruTechList diff tech_advrocket;

   for i in UnitFilter(tmp, [f_bweapon, ru_rocket]) do
       PlaceWeaponTurret(i, weapons[rand(1, weapons)]);
   end;

for i in FilterAllUnits([[f_side, 3], [f_btype, b_bunker]]) do
    begin
    PrepareSoldier(false, [5, 6, 7, 8][Difficulty]);
    PlaceHumanInUnit(CreateHuman, i);
    end;

for i in FilterAllUnits([[f_side, 3], [f_btype, b_barracks]]) do
    begin
    for j := 1 to [2, 2, 3, 3][Difficulty] do
        begin
        PrepareSoldier(false, [5, 6, 7, 8][Difficulty]);
        un := CreateHuman;
        SetDir(un, class_bazooker);
        PlaceHumanInUnit(un, i);

        if j = 2 then
           SetUnitAttackType(un, 3);
        end;
    end;

for i := 1 to [5, 6, 6, 6][Difficulty] do
    begin
    PrepareEngineer(false, [6, 7, 9, 10][Difficulty]);
    PlaceHumanInUnit(CreateHuman, ruDep);
    end;

for i := 1 to 2 do
    for j := 1 to 6 do
        begin
        PrepareMechanic(false, [6, 7, 9, 10][Difficulty]);
        PlaceHumanInUnit(CreateHuman, [ruFac1, ruFac2][i]);
        end;

for i := 1 to 6 do
    begin
    PrepareScientist(false, 6);
    PlaceHumanInUnit(CreateHuman, [ruLab1, ruLab2][i mod 2 + 1]);
    end;

PrepareVehicle(ru_medium_tracked, engine_siberite, control_computer, ru_cargo_bay, 100);
PlaceUnitXYR(CreateVehicle, 116, 58, 2, false);

for i := 1 to 2 do
    begin
    PrepareVehicle(ru_medium_tracked, engine_siberite, control_computer, ru_crane, 100);
    PlaceUnitXYR(CreateVehicle, 111, 58, 4, false);
    end;

for i := 1 to 4 do
    begin
    PrepareApemanEngineer();
    PlaceUnitXYR(CreateHuman, 118, 50, 3, false);
    end;
End;


Every 0$3 trigger ruTechList do
var i, t, labs;
begin
enable;

labs := UnitFilter([ruLab1, ruLab2], [f_ok]);

if not labs then
   begin
   disable;
   exit;
   end;

for i in labs do                         
    if BuildingStatus(i) = bs_idle then
       for t in ruTechList do
           if CanBeResearched(i, t) then
              begin
              ComResearch(i, t);
              break;
              end;
End;

Every 0$1 trigger FilterAllUnits([[f_not, [f_side, 1]], [f_engine, engine_combustion]]) do
var i;
begin
enable;

for i in FilterAllUnits([[f_not, [f_side, 1]], [f_engine, engine_combustion]]) do
    if GetFuel(i) < 3 then
       SetFuel(i, 3);
End;

Every 0$30 trigger UnitFilter([ruFac1, ruFac2], [f_ok]) and ruAttackers < [5, 6, 7, 8][Difficulty] do
var i, chassis, weapon;
begin
enable;

for i in UnitFilter([ruFac1, ruFac2], [f_ok]) do
    begin
    if BuildingStatus(i) <> bs_idle then
       continue;

    if i = ruFac1 then
        chassis := [ru_medium_wheeled, ru_medium_tracked, ru_heavy_wheeled, ru_heavy_wheeled, ru_heavy_tracked][rand(1,5)]
    else
        chassis := [ru_medium_wheeled, ru_heavy_wheeled][rand(1,2)];

    weapon := [ru_time_lapser, ru_gun, ru_gatling_gun, ru_heavy_gun, ru_rocket_launcher, ru_heavy_gun, ru_rocket_launcher];

    if not russianRocketsDisabled then
       weapon := Join(weapon, ru_rocket);

    weapon := weapon[Difficulty + rand(0, 3)];

    if chassis in [ru_medium_wheeled, ru_medium_tracked] and weapon in [ru_heavy_gun, ru_rocket] then
       weapon := [ru_gun, ru_rocket_launcher, ru_time_lapser][rand(1,3)];

    AddComConstruct(i, chassis, [engine_combustion, engine_siberite][rand(1,2)], control_computer, weapon);
    end;
End;

Every 0$1 trigger IsOk(ruDep) do
var i, tmp, b, eng, crane, tag, sci, lab;
begin
enable;

b := FilterUnitsInArea(ruBaseArea, [[f_not, [f_lives, 1000]], [f_type, unit_building]]);
eng := FilterAllUnits([[f_side, 3], [f_class, 2]]);
crane := FilterAllUnits([[f_side, 3], [f_weapon, ru_crane]]);
sci := FilterAllUnits([[f_side, 3], [f_class, 4]]);
lab := [ruLab1, ruLab2];

if sci and UnitFilter(eng, [f_tag, 2]) then
   ComExitAll(sci)
else if sci then
   if UnitFilter(sci, [f_not, [f_inside]]) and lab then
      ComEnterUnit(UnitFilter(sci, [f_not, [f_inside]]), lab[rand(1, lab)]);

if UnitFilter(crane, [f_ok]) and b then
   ComRepairBuilding(UnitFilter(crane, [f_ok]), NearestUnitToUnit(b, crane[1]));

if eng then
   begin
   for i in eng do
       begin
       tag := GetTag(i);

       if not b and not ruBuildList and tag = 1 then
          begin
          SetTag(i, 0);
          ComEnterUnit(i, ruDep);
          end;

       if (b or ruBuildList) and tag = 0 then
          SetTag(i, 1);

       if IsInUnit(i) and tag = 1 then
          ComExit(i);

       if GetLives(i) < 500 and tag = 1 then
          SetTag(i, 2); // need heal

       if GetLives(i) = 1000 and tag = 2 then
          SetTag(i, 1); // ok

       if tag = 2 then
          begin
          if GetDistUnitXY(i, 84, 93) > 6 then
             begin
             ComMoveXY(i, 84, 93);
             AddComHold(i);
             end;
          end;

       if IsInArea(i, ruDefendArea) then
          ComMoveToArea(i, ruBaseArea);

       if tag = 1 then // can work
          begin
          if b then
             ComRepairBuilding(i, NearestUnitToUnit(b, i))
          else if ruBuildList and FilterUnitsInArea(ruDefendArea, [f_enemy, 3]) = 0 and CanBeBuilt(ruDep, ruBuildList[1][1], ruBuildList[1][2], ruBuildList[1][3], ruBuildList[1][4]) then
             ComBuild(i, ruBuildList[1][1], ruBuildList[1][2], ruBuildList[1][3], ruBuildList[1][4]);
          end;
       end;
   end;
End;

// collect crates
Every 0$20 trigger FilterAllUnits([[f_side, 3], [f_not, [f_hastask]], [f_ok], [f_class, class_apeman_engineer]]) and GetListOfCratesInArea(cratesNorth) do
var i, tmp;
begin
enable;
      
tmp := GetListOfCratesInArea(cratesNorth);

for i in FilterAllUnits([[f_side, 3], [f_not, [f_hastask]], [f_ok], [f_class, class_apeman_engineer]]) do
    ComCollect(i, tmp[1], tmp[2]);
End;

Every 0$20 trigger FilterAllUnits([[f_side, 3], [f_not, [f_hastask]], [f_ok], [f_weapon, ru_cargo_bay]]) and GetListOfCratesInArea(cratesSouth) do
var i, tmp;
begin
enable;

tmp := GetListOfCratesInArea(cratesSouth);

for i in FilterAllUnits([[f_side, 3], [f_not, [f_hastask]], [f_ok], [f_weapon, ru_cargo_bay]]) do
    ComCollect(i, tmp[1], tmp[2]);
End;

// attacks
Every 20$00 trigger Difficulty > 1 and IsOk(ruFac1) do
var i;
begin
for i := 1 to [3, 4, 5][Difficulty - 1] do
    begin
    AddComConstruct([ruFac1, ruFac2][i mod 2 + 1], ru_medium_wheeled, engine_siberite, control_manual, ru_rocket_launcher);
    end;
End;

Every 0$1 trigger ruMobile do
var i, mech, enemy;
begin
enable;

if not ruMobile then
   exit;

// tags:
// 0 - idle,
// 1 - go to parking, repair if needed
// 2 - attack

for i in ruMobile do
    begin
    if not IsOk(i) or GetSide(i) <> 3 then
       begin
       ruMobile := ruMobile diff i;
       continue;
       end;

    if GetTag(i) = 300 then
       begin
       if GetFuel(i) < 50 and GetEngine(i) = engine_combustion then
          begin
          ComMoveXY(i, 120, 58);

          repeat
           wait(0$1);
          until GetDistUnitXY(i, 120, 58) < 4;

          SetFuel(i, 100);
          end
       else if not IsInArea(i, ruParkingArea) then
          ComMoveToArea(i, ruParkingArea)
       else
          SetTag(i, 301);
       end;

    if GetTag(i) = 301 then
       begin
       if GetLives(i) < 1000 then
          begin
          if not IsDrivenBy(i) then
             continue;

          mech := IsDrivenBy(i);

          ComExitVehicle(mech);
          AddComRepairVehicle(mech, i);

          repeat
           wait(0$1);
          until GetLives(i) = 1000;

          ComEnterUnit(mech, i);
          end
       else if IsDrivenBy(i) then
          SetTag(i, 0);
       end;

    if GetTag(i) < 300 then
       begin
       enemy := FilterUnitsInArea(ruDefendArea, [f_enemy, 3]);

       if GetLives(i) < 650 then
          begin
          ComStop(i);
          SetTag(i, 300);
          continue;
          end;

       if enemy then
          begin
          if not HasTask(i) then
             ComAttackUnit(i, NearestUnitToUnit(enemy, i));
          end
       else if ruMobile > 2 then
          begin
          enemy := FilterAllUnits([f_enemy, 3]);

          if enemy then
             AgressiveMove(i, [ [113, 80], [118, 100], [107, 102], [114, 120], [86, 116] ]);
          end;
       end;
    end;
End;


Every 7$00 + 4$00 trigger ruAttackers do
var tmp;
begin
enable;

tmp := UnitFilter(ruAttackers, [f_ok]);
ruAttackers := [];
SendAttack(tmp);
End;

Function SendAttack(group);
var i, tmp;
begin
for i in group do
    begin
    SetTag(i, 0);

    if Prob(30) then
       begin
       SetTag(i, 1);
       ComEnterUnit(i, ruTeleport);
       end
    else
       ComAgressiveMove(i, 118, 93);
    end;

repeat
 wait(0$1);
 tmp := UnitFilter(group, [f_tag, 0]);

 for i in tmp do
     begin
     if not IsOk(i) then
        begin
        tmp := tmp diff i;
        continue;
        end;

     if GetDistUnits(i, usDep) < 8 then
        begin
        ComAttackUnit(i, usDep);
        continue;
        end;

     if not See(1, i) then
        ComAgressiveMove(i, 86, 116)
     else if GetWeapon(i) <> ru_time_lapser then
        ComAttackUnit(i, NearestUnitToUnit(FilterAllUnits([f_enemy, 3]), i));
     end;

until not tmp;
End;