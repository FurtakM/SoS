On SailEvent(event) do
begin
if event = 1 then
   PrepareRussianAttack(Difficulty + 3);
End;

On UnitDestroyed(un) do
var i, tmp, chassis, weapon, btype;
begin
SOS_UnitDestroyed(un);

if un = JMM then
   YouLost('JMM');

if un = Sikorski then
   if sikorskiStatus = 0 then
      SikorskiKilledInAction
   else
      sikorskiIsKilled := true;

if GetSide(un) = 1 and GetNation(un) = 1 and GetBType(un) in [b_depot, b_warehouse] then
   YouLost('Destroyed');

if un = ruDep then
   begin
   for i in FilterAllUnits([[f_side, 3], [f_class, class_soldier]]) do
       begin
       tmp := NearestUnitToUnit(FilterUnitsInArea(ruDefendArea, [f_enemy, 3]), i);

       if GetBType(IsInUnit(i)) = b_bunker then
          begin
          ComExitBuilding(i);
          AddComAgressiveMove(i, GetX(tmp), GetY(tmp));
          end;
       end;
   end;

if un in ruMobile then
   ruMobile := ruMobile diff un;

if GetSide(un) = 3 then
   begin
   if GetType(un) = unit_building then
      begin
      btype := GetBType(un);

      if btype = b_warehouse then
         btype := b_depot;

      if btype = b_barracks then
         btype := b_armoury;

      if btype = b_lab_full then
         btype := b_lab;

      ruBuildList := Replace(ruBuildList, ruBuildList + 1, [btype, GetX(un), GetY(un), GetDir(un)]);
      end;

   if GetType(un) = unit_vehicle then
      begin
      if GetWeapon(un) in [ru_crane, ru_cargo_bay] then
         begin
         AddComConstruct(ruFac, ru_medium_tracked, engine_combustion, control_computer, GetWeapon(un));
         end
      else
         begin
         chassis := [ru_medium_wheeled, ru_medium_tracked, ru_heavy_wheeled, ru_heavy_tracked][rand(1,4)];
         weapon := [ru_heavy_machine_gun, ru_gun, ru_gatling_gun, ru_heavy_gun, ru_rocket_launcher, ru_heavy_gun, ru_rocket_launcher][Difficulty + rand(0, 3)];

         if chassis in [ru_medium_wheeled, ru_medium_tracked] and weapon = ru_heavy_gun then
            weapon := [ru_gun, ru_rocket_launcher][rand(1,2)];

         if tick < [15$00, 13$00, 11$00, 10$00][Difficulty] then
            weapon := [ru_gun, ru_gatling_gun][rand(1,2)];

         AddComConstruct(ruFac, chassis, engine_combustion, control_manual, weapon);
         end;
      end;

   if GetClass(un) = class_mechanic then
      begin
      killMechCounter := Inc(killMechCounter);

      if ruMechCounter = 0 or not IsOk(ruFac) then
         exit;

      ruMechCounter := Dec(ruMechCounter);

      uc_side := 3;
      uc_nation := 3;

      PrepareMechanic(false, [5, 6, 7, 8][Difficulty]);
      tmp := CreateHuman;
      PlaceUnitXY(tmp, 145, 133, false);

      ComEnterUnit(tmp, ruFac);

      repeat
       wait(0$1);

       if not HasTask(tmp) then
          ComEnterUnit(tmp, ruFac);
      until IsInUnit(tmp);
      end;
   end;
End;

On EvacuateVehicle(driver, veh, p1, p2) do
begin
if GetSide(driver) = 4 then
   ComMoveXY(driver, 40, 47);

if GetSide(driver) = 3 then
   begin
   ComMoveXY(driver, 90, 97);

   if IsOk(ruFac) then
      begin
      repeat
       wait(0$1);
      until UnitsInside(ruFac) < 6 or IsDead(driver);

      if IsDead(driver) then
         exit;

      repeat
       wait(0$10);

       if not HasTask(driver) and UnitsInside(ruFac) < 6 then
          ComEnterUnit(driver, ruFac);
      until IsDead(driver) or IsInUnit(driver);
      end
   else
      begin
      ComMoveXY(driver, 142, 148);

      repeat
       wait(0$1);
      until IsDead(driver) or IsAt(driver, 142, 148);

      if IsAt(driver, 142, 148) then
         RemoveUnit(driver);
      end;
   end;
End;

On EnterBuilding(b, un) do
begin
if GetClass(un) = class_mechanic and GetSide(b) = 3 and b = ruFac then
   SetLives(un, 1000);

if GetTag(b) = 701 then
   begin
   SetTag(b, 0);
   SetTag(un, 0);
   end;
End;

On EvacuateBuilding(b, un) do
var i, tmp;
begin
if GetSide(b) = 3 then
   begin
   if GetBType(b) in [b_bunker, b_barracks] then
      begin
      tmp := FilterAllUnits([[f_side, 3], [f_ok], [f_btype, b_bunker], [f_empty]]);

      if tmp then
         begin
         ComEnterUnit(un, tmp[1]);
         exit;
         end;

      tmp := FilterAllUnits([[f_side, 3], [f_ok], [f_or, [f_btype, b_armoury], [f_btype, b_barracks]]]);

      if not tmp then
         begin
         ComMoveXY(un, 92, 99);
         exit;
         end;

      for i in tmp do
          if UnitsInside(i) < 6 then
             begin
             ComEnterUnit(un, i);
             exit;
             end;
      end;
   end;
End;

On UnitGoesToRed(un) do
begin
if GetSide(un) in [3, 6] and GetControl(un) = control_computer and not seenComputer then
   begin
   seenComputer := true;
   DialogSeenComputer(un);     
   end;
End;

On VehicleConstructed(vehicle, building) do
var driver;
begin
SOS_VehicleConstructed(vehicle, building);

if GetSide(vehicle) = 3 and GetControl(vehicle) = control_manual and GetWeapon(vehicle) in [ru_heavy_machine_gun, ru_gatling_gun, ru_gun, ru_heavy_gun, ru_rocket_launcher] then
   begin
   SetTag(vehicle, 300);
   ruMobile := ruMobile union vehicle;
   end;
End;

On CrateSpawn(id, x, y, amount, mode) do
var cargo;
begin
if InArea(x, y, ruCrates) then
   begin
   cargo := FilterAllUnits([[f_side, 3], [f_ok], [f_weapon, ru_cargo_bay]]);

   if not cargo then
      exit;

   wait(0$5);

   if GetDistUnits(cargo[1], ruDep) < 6 and GetFuel(cargo[1]) < 50 then
      ComMoveUnit(cargo, ruDep);

   AddComCollect(cargo, x, y);
   end;
End;

On VehicleCaptured(new, old, side, unit) do
begin
if GetWeapon(new) = ru_rocket_launcher then
   captureRocketCounter := Inc(captureRocketCounter);
End;

On BuildingComplete(b) do
var i, tmp;
begin
if GetSide(b) = 3 then
   begin
   ruBuildList := Delete(ruBuildList, 1);

   if GetBType(b) = b_armoury then
      ComUpgrade(b);

   if GetBType(b) in [b_bunker, b_turret] then
      AddComPlaceWeapon(b, [ru_heavy_gun, ru_rocket_launcher][rand(1,2)]);
   end;
End;

