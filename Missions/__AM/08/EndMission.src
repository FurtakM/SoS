Every 0$1 trigger IsDead(Borodin) and FilterAllUnits([[f_side, 3], [f_type, unit_human]]) < [7, 6, 5, 5][Difficulty] and IsPlaced(JMM) do
var i, tmp, p;
begin
    russianAI = 0;
    escapeAvalaible = 1;
    Video(true);
    SetAttitude(3, 1, att_friend, false);
    SetAttitude(6, 1, att_friend, false);
    ChangeSideFog(3, 1);
    CenterOnXY(97, 91);

    ComExitVehicle(FilterAllUnits([[f_side, 3], [f_type, unit_human]]));
    wait(0$01);
    ComMoveXY(FilterAllUnits([[f_side, 3], [f_type, unit_human]]), 124, 98);
    ComExitVehicle(FilterAllUnits([[f_side, 6], [f_type, unit_human]]));
    wait(0$01);
    ComMoveXY(FilterAllUnits([[f_side, 6], [f_type, unit_human]]), 124, 98);
    ComAgressiveMove(FilterAllUnits([[f_side, 1], [f_type, unit_human], [f_not, [f_inside]]]), 124, 98);
    wait(0$4);
    CenterOnXY(124, 98);

    if SikorskyStatus = 1 then
       Say(Sikorski, 'D9-Sik-1');

    if SikorskyStatus = 2 then
       begin
       SayRadio(Powell, 'D8b-Pow-1');
       YouLost('Dismissed');
       end;

    p := 0$0;                                                                       
    tmp := FilterAllUnits([[f_or, [f_side, 3], [f_side, 6]], [f_type, unit_human]]);

    repeat
     wait(0$1);
     p := p + 0$1;
     ComMoveToArea(tmp, RussianEscape);

     for i in tmp do
         if IsInArea(i, RussianEscape) then
            RemoveUnit(i);
    until FilterAllUnits([[f_nation, 3], [f_type, unit_human], [f_lives, 250]]) = 0 or p >= 0$7;

    FinishMission;
end;


// Finish mission
Export function FinishMission;
var tmp;
begin

    if FilterAllUnits([f_side, 4]) = 0 then
       SetAchievement('ACH_BLITZKRIEG');

    if tick <= 25$00 then
       begin
       wait(3);
       SetAchievement('ACH_ASPEED_8');
       end;

    AddMedal('med1', 1);
    AddMedal('med2', 1);
    AddMedal('perfect', 1);

    if Difficulty >= 3 then
       SetAchievementEX('ACH_AMER', 8);

    GiveMedals('Main');

    RewardPeople(FilterAllUnits([[f_side, 1], [f_nation, 1], [f_type, unit_human], [f_or, [f_class, 1], [f_class, 2], [f_class, 3], [f_class, 4]]]));

    SaveCharacters(JMM, mission_prefix&'JMM');
    EnchancedSaveCharacters(Brown, mission_prefix&'Brown');
    EnchancedSaveCharacters(Donaldson, mission_prefix&'Donaldson');
    EnchancedSaveCharacters(Bobby, mission_prefix&'Bobby');
    EnchancedSaveCharacters(Cyrus, mission_prefix&'Cyrus');
    EnchancedSaveCharacters(Lisa, mission_prefix&'Lisa');
    EnchancedSaveCharacters(Frank, mission_prefix&'Frank');
    EnchancedSaveCharacters(Gladstone, mission_prefix&'Gladstone');
    EnchancedSaveCharacters(Kikuchi, mission_prefix&'Kikuchi');
    EnchancedSaveCharacters(Denis, mission_prefix&'Denis');
    EnchancedSaveCharacters(Joan, mission_prefix&'Joan');
    EnchancedSaveCharacters(Khatam, mission_prefix&'Khatam');
    EnchancedSaveCharacters(Houten, mission_prefix&'Houten');

    SaveCharacters(FilterAllUnits([[f_ok],[f_side, 1],[f_type,unit_human], [f_or, [f_class, 1], [f_class, 2], [f_class, 3], [f_class, 4]]]) diff [JMM, Brown, Donaldson, Bobby, Cyrus, Lisa, Frank, Gladstone, Kikuchi, Denis, Joan, Houten, Khatam],'08_other_survivors');
    SaveBase(GammaBaseArea);

    YouWin;

end;

Export function SaveBase(area);
var i, gammaBase, buildings;
begin

    gammaBase = [];
    buildings = FilterUnitsInArea(area, [[f_side, 1], [f_type, unit_building], [f_ok]]);

    for i in buildings do
    begin
        if GetBType(i) in [b_lab, b_lab_half, b_lab_full] then 
            gammaBase = gammaBase ^ [ [GetBType(i), GetX(i), GetY(i) ,GetDir(i) ,GetBLevel(i), GetNation(i), GetLabKind(i,1), GetLabKind(i,2) ] ]
        else
        if GetBType(i) = b_bunker then
            gammaBase = gammaBase ^ [ [GetBType(i), GetX(i), GetY(i), GetDir(i), GetBLevel(i), GetNation(i), GetBWeapon(i)] ]
        else
        if GetBType(i) = b_factory then
            gammaBase = Insert(gammaBase, 1, [GetBType(i), GetX(i), GetY(i), GetDir(i), GetBLevel(i), GetNation(i)])
        else
           gammaBase = gammaBase ^ [ [GetBType(i), GetX(i), GetY(i), GetDir(i), GetBLevel(i), GetNation(i)] ];
    end;

    SaveVariable(gammaBase,'08_GammaBase');

end;