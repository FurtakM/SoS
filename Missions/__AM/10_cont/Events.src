On BuildingStarted(building, unit) Do
begin
    if GetSide(building) = 4 then SetBName(building, 'epsilon');
    if GetSide(building) = 1 and GetBType(building) = b_depot then SetBName(building, 'epsilon');
    if GetSide(building) = 3 and GetBType(building) = b_depot then SetBName(building, 'chuikov');

    if GetSide(building) = 2 then
    begin
         if GetBType(building) = b_lab or GetBType(building) = b_lab_basic then
        begin
            AddComUpgradeLab(building, b_lab_weapon);
            AddComUpgradeLab(building, b_lab_siberium);
        end; 
    end;

    if GetSide(building) = 3 then
    begin
         if GetBType(building) = 2 then AddComUpgrade(building);
    end;

end;

On UnitGoesToRed(un) do
var i, tmpMeh;
begin

   if un in FilterAllUnits([[f_side, 3], [f_nation, 3], [f_type, unit_vehicle]]) and not telep_ru_dialog then
      telep_ru_dialog := [GetX(un), GetY(un)];
End;

On LeaveVehicle(vehicle, human) Do
begin
    if GetSide(human) = 3 and GetSide(ruFab) = 3 and IsOk(rufab) then ComEnterUnit(human, ruFab);
end;

On BuildingComplete(building) Do
var i;
begin

    if GetSide(building) = 1 and eventVar1 = 0 then
    begin
       if GetBType(building) = 26 or GetBType(building) = 27 or GetBType(building) = 28  then
       begin
            if FilterAllUnits([[f_side, 1], [f_or, [f_btype, b_lab_half], [f_btype, b_lab_full]]]) > 0 then
            begin
                 for i in FilterAllUnits([[f_side, 1], [f_or, [f_btype, b_lab_half], [f_btype, b_lab_full]]]) do
                     if GetLabKind(i, 1) = b_lab_siberium or GetLabKind(i, 2) = b_lab_siberium then eventVar1 = 1;
            end;
       end;
    end;

    if GetSide(building) = 3 then
    begin
        if GetBType(building) = b_depot then
        begin
            SetResourceType(GetBase(building), 1, 5000);
            SetResourceType(GetBase(building), 2, 5000);
            SetResourceType(GetBase(building), 3, 5000);
            ruDepot = building;
        end;

        if GetBType(building) = 0 or GetBType(building) = 2 or GetBType(building) = 4 then ComUpgrade(building);
        
        if GetBType(building) = b_lab then
        begin

            if FilterAllUnits([[f_side, 3], [f_btype, b_lab_full]]) = 0 then
            begin   
                AddComUpgradeLab(building, b_lab_weapon);
                AddComUpgradeLab(building, b_lab_computer);
                ruLab1 = building;
            end else
            begin
                AddComUpgradeLab(building, b_lab_siberium);
                AddComUpgradeLab(building, b_lab_spacetime);
                ruLab2 = building;
            end;

            ResAllTechs(3, building, 3);

        if ruDestroyedBuildings > 0 then
        begin
            ruDestroyedBuildings := Delete( ruDestroyedBuildings, 1);
            ruDestroyedBuildings := Delete( ruDestroyedBuildings, 1);
            ruDestroyedBuildings := Delete( ruDestroyedBuildings, 1);
            ruDestroyedBuildings := Delete( ruDestroyedBuildings, 1); 
        end;

        end;

        if GetBType(building) = b_bunker then AddComPlaceWeapon(building, [44, 45, 46][Rand(1, 3)]);
        if GetBType(building) = b_turret then AddComPlaceWeapon(building, [44, 45, 46][Rand(1, 3)]);

        if GetBType(building) = b_ext_computer then russianAI = 1;
          
    end;

    if GetSide(building) = 2 then
    begin
    
        if GetBType(building) = b_depot then
        begin
            arDepot = building;
            ComMoveXY([cargo1, cargo2], 71, 19);
            SetResourceType(GetBase(building), 1, 500);
            SetResourceType(GetBase(building), 3, 30);
            ComEnterUnit(Dietrich, arDepot);
        end;

        if GetBType(building) = b_lab or GetBType(building) = b_lab_basic then
        begin
            AddComUpgradeLab(building, b_lab_weapon);
            AddComUpgradeLab(building, b_lab_siberium);
            ResAllTechs(2, building, 2);
            arLab = building;
        end; 

        if  GetBType(building) = 2 or GetBType(building) = 4 then ComUpgrade(building);

       // if GetBType(building) = b_breastwork and FilterAllUnits([[f_side, 2], [f_class, 1], [f_not, [f_inside], [f_not, [f_hastask]]]]) > 0 then
         //   ComEnterUnit(FilterAllUnits([[f_side, 2], [f_class, 1], [f_not, [f_inside], [f_not, [f_hastask]]]])[1], building);
    
        if GetBType(building) = b_solar_power then 
            if FilterAllUnits([[f_side, 2], [f_btype, b_solar_power]]) = 2 then
            begin  // cameras
            i := FilterAllUnits([[f_side, 2], [f_type, unit_human], [f_class, 2]])[1];

            AddComMoveXY(i, 92, 34);
            AddComMoveXY(i, 82, 57);
            AddComMoveXY(i, 36, 28);

            AddComEnterUnit(FilterAllUnits([[f_side, 2], [f_type, unit_human], [f_class, 2]]), arDepot);

            ComEnterUnit(FilterAllUnits([[f_side, 2], [f_class, 1], [f_not, [f_inside], [f_not, [f_hastask]]]])[1], FilterAllUnits([[f_side, 2], [f_btype, 31], [f_empty]])[1]);
            ComEnterUnit(FilterAllUnits([[f_side, 2], [f_class, 1], [f_not, [f_inside], [f_not, [f_hastask]]]])[2], FilterAllUnits([[f_side, 2], [f_btype, 31], [f_empty]])[2]);
            ComEnterUnit(FilterAllUnits([[f_side, 2], [f_class, 1], [f_not, [f_inside], [f_not, [f_hastask]]]])[3], FilterAllUnits([[f_side, 2], [f_btype, 31], [f_empty]])[3]);
            end;
    
    end;

end;

On UpgradeComplete(building) Do
var i;
begin

   if GetSide(building) = 1 and eventVar1 = 0 then
    begin
       if GetBType(building) = b_lab_half or GetBType(building) = b_lab_full then
       begin
            if FilterAllUnits([[f_side, 1], [f_or, [f_btype, 26], [f_btype, 27], [f_btype, 28]]])  > 0 then
            begin
                 for i in FilterAllUnits([[f_side, 1], [f_or, [f_btype, b_lab_half], [f_btype, b_lab_full]]]) do
                     if GetLabKind(i, 1) = b_lab_siberium or GetLabKind(i, 2) = b_lab_siberium then eventVar1 = 1;
            end;
       end;
    end;

    if GetSide(building) = 2 then
    begin
        if GetBType(building) = b_barracks then
        begin
            for i in FilterAllUnits([[f_side, 2], [f_class, 1], [f_not, [f_inside]]]) diff [Dietrich] do ComEnterUnit(i, building);
            arArm = building;
        end;
    end;
        
    if GetSide(building) = 3 then
    begin
        if GetBType(building) = b_factory then
        begin
            for i in FilterAllUnits([[f_side, 3], [f_class, 3]]) do ComEnterUnit(i, building);
            ruFab = building;
        end;


        if FilterAllUnits([[f_side, 3], [f_type, unit_building], [f_btype, b_lab_full]]) = 2 then
        begin
            for i = 1 to 2 do
                ComEnterUnit(FilterAllUnits([[f_side, 3], [f_class, 4]])[i], FilterAllUnits([[f_side, 3], [f_type, unit_building], [f_btype, b_lab_full]])[1]);          
            for i = 3 to 4 do
                ComEnterUnit(FilterAllUnits([[f_side, 3], [f_class, 4]])[i], FilterAllUnits([[f_side, 3], [f_type, unit_building], [f_btype, b_lab_full]])[2]);
        end;

        if GetBType(building) = b_barracks then
        begin
            for i in FilterAllUnits([[f_side, 3], [f_class, 1], [f_not, [f_inside]]]) do ComEnterUnit(i, building);
            if FilterAllUnits([[f_side, 3], [f_btype, b_barracks]]) = 0 then ruArm1 = building
            else ruArm2 = building;
        end;

    end;

end;

On EnterBuilding(building, human) Do
var rnd;
begin
    if GetSide(human) = 2 and GetClass(human) = 1 and building = arArm then
    begin
        wait(0$1);
        rnd = rand(1, 100);
        if rnd > 50 then SetClass(human, class_mortar);
    end;

    if GetSide(human) = 3 and GetClass(human) = 1 and [building = ruArm1 or building = ruArm2] then
    begin
        wait(0$1);
        SetClass(human, class_bazooker);
    end;

    if GetSide(human) = 3 and GetClass(human) = 9 and GetBType(building) = b_bunker then
    begin
        wait(0$1);
        SetClass(human, 1);
    end;

    if GetSide(human) = 3 and GetClass(human) = 3 and building = rufab then SetLives(human, 1000);

end;

On Contact(side1, side2) Do
begin
    if side1 = 1 and side2 = 2 and GetAttitude(1, 2) = att_friend then
    begin
        SayRadio(Powell, 'D6b-Pow-1');
        YouLost('Powell');
    end;
end;

// Also lost
Every 0$3 trigger (FilterUnitsInArea(arBaseArea, [[f_side, 1], [f_type, unit_building]]) or FilterUnitsInArea(arBaseArea, [[f_side, 1], [f_type, unit_vehicle], [f_empty]])) and GetAttitude(1, 2) = att_friend do
begin
SayRadio(Powell, 'D6b-Pow-1');
YouLost('Powell');
End;

On UnitDestroyed(unit) do 
begin

    if unit = JMM then
       YouLost('JMM');

    if GetSide(unit) = 3 and GetType(unit) = unit_building then
    begin
        
        if GetBType(unit) = 31 or  GetBType(unit) = 32 or  GetBType(unit) = 36 or  GetBType(unit) = 0 or  GetBType(unit) = 24 or  GetBType(unit) = 17 or  GetBType(unit) = 25 or  GetBType(unit) = 19 or  GetBType(unit) = 20 or  GetBType(unit) = 18 or  GetBType(unit) = 21 or  GetBType(unit) = 23 or  GetBType(unit) = 16  or  GetBType(unit) = 6 or  GetBType(unit) = 29 or  GetBType(unit) = 26 or  GetBType(unit) = 30 or  GetBType(unit) = 28 or  GetBType(unit) = 27 or  GetBType(unit) = 33 or  GetBType(unit) = 2 or GetBType(unit) = 4 then
        begin
            ruDestroyedBuildings = ruDestroyedBuildings ^  GetBType(unit);
            ruDestroyedBuildings = ruDestroyedBuildings ^  GetX(unit);
            ruDestroyedBuildings = ruDestroyedBuildings ^  GetY(unit);
            ruDestroyedBuildings = ruDestroyedBuildings ^  GetDir(unit);
        end;

        if GetBType(unit) = 1  then
        begin
            ruDestroyedBuildings = ruDestroyedBuildings ^  0;
            ruDestroyedBuildings = ruDestroyedBuildings ^  GetX(unit);
            ruDestroyedBuildings = ruDestroyedBuildings ^  GetY(unit);
            ruDestroyedBuildings = ruDestroyedBuildings ^  GetDir(unit);
        end;

        if GetBType(unit) = 3  then
        begin
            ruDestroyedBuildings = ruDestroyedBuildings ^  2;
            ruDestroyedBuildings = ruDestroyedBuildings ^  GetX(unit);
            ruDestroyedBuildings = ruDestroyedBuildings ^  GetY(unit);
            ruDestroyedBuildings = ruDestroyedBuildings ^  GetDir(unit);
        end;

        if GetBType(unit) = 5  then
        begin
            ruDestroyedBuildings = ruDestroyedBuildings ^  4;
            ruDestroyedBuildings = ruDestroyedBuildings ^  GetX(unit);
            ruDestroyedBuildings = ruDestroyedBuildings ^  GetY(unit);
            ruDestroyedBuildings = ruDestroyedBuildings ^  GetDir(unit);
        end;
    end;

        if GetClass(unit) = 3 and GetSide(unit) = 3 and IsOK(ruFab) and GetSide(ruFab) = 3 then
        begin
              uc_side = 3;
              uc_nation = 3;

              hc_gallery := '';
              hc_name := '';

              PrepareMechanic(false, rand(RuSolMinLevel, RuSolMaxLevel));
              PlaceHumanInUnit(CreateHuman, ruFab);
        end;
end;

On EndTheMissionRaised(bla) do
begin
    end_the_mission_allowed = false;
    fastEnd = 1;
    FinishMission;
End;