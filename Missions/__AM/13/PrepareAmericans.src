Export function PrepareHeroes;
var i, others, tmp, x, y, base;
begin
tmp := FilterAllUnits([[f_side, 1], [f_nation, 1], [f_or, [f_btype, b_depot], [f_btype, b_warehouse]]]);

if tmp then
   begin
   x := GetX(tmp[1]);
   y := GetY(tmp[1]);

   SetBName(tmp[1], 'epsilon');

   base := GetBase(tmp[1]);

   SetResourceType(base, 1, 3000);
   SetResourceType(base, 2, 500);
   SetResourceType(base, 3, 200);
   end
else
   begin
   x := 104;
   y := 32;
   end;

uc_side := 1; //12 -> 11 -> 10

JMM := PrepareUnit2('JMM', true);
Lisa := PrepareUnit2('Lisa', true);
Donaldson := PrepareUnit2('Donaldson', true);
Bobby := PrepareUnit2('Bobby', true);
Cyrus := PrepareUnit2('Cyrus', true);
Denis := PrepareUnit2('Denis', true);
Brown := PrepareUnit2('Brown', true);
Gladstone := PrepareUnit2('Gladstone', true);
Houten := PrepareUnit2('Houten', true);
Cornel := PrepareUnit2('Cornell', true);
Gary := PrepareUnit2('Gary', true);
Frank := PrepareUnit2('Frank', true);
Kikuchi := PrepareUnit2('Kikuchi', true);

Stevens := PrepareUnit2('Stevens', false);
Powell := PrepareUnit2('Powell', false);

PlaceUnit(JMM, x, y, 4, false);
PlaceUnit(Stevens, x, y, 4, false);

PlaceUnit(Lisa, x, y, 35, false);
PlaceUnit(Donaldson, x, y, 35, false);
PlaceUnit(Bobby, x, y, 35, false);
PlaceUnit(Cyrus, x, y, 35, false);
PlaceUnit(Denis, x, y, 35, false);
PlaceUnit(Brown, x, y, 35, false);
PlaceUnit(Gladstone, x, y, 35, false);
PlaceUnit(Houten, x, y, 35, false);
PlaceUnit(Cornel, x, y, 35, false);
PlaceUnit(Gary, x, y, 35, false);
PlaceUnit(Frank, x, y, 35, false);
PlaceUnit(Kikuchi, x, y, 35, false);

SetClass(JMM, 1);

others12 := CreateCharacterSet('12_other_survivors');
others11 := CreateCharacterSet('12_others');

for i in others11 do
    PlaceUnit(i, GetX(tmp[1]), GetY(tmp[1]), 15, false);

for i in others12 do
    PlaceUnit(i, GetX(tmp[1]), GetY(tmp[1]), 15, false);
end;

Export Function PrepareEpsilonBase;
var blist, i, b, un, baseCorrect, building;
begin   
SetResourceVisibility (113, 50, 1);
SetResourceVisibility (104, 24, 1);

SetResourceVisibility (43, 79, 1);
SetResourceVisibility (43, 68, 1);

SetResourceVisibility (99, 114, 1);
SetResourceVisibility (103, 114, 1);

SetResourceVisibility (152, 85, 1);
SetResourceVisibility (156, 92, 1);

blist := LoadVariable('10_EpsilonBase', []);

if not blist then
   exit;

for i in blist do
    if i[1] = b_depot or i[1] = b_warehouse then
       begin
       baseCorrect := 1;
       break;
       end;

if baseCorrect = 0 then
   begin
   uc_side := 1;
   uc_nation := 1;

   bc_level := 10;

   bc_type := b_warehouse;
   CreateAndPlaceBuildingXYD(99, 24, 2);

   bc_type := b_bunker;

   building := CreateAndPlaceBuildingXYD(124, 42, 4);
   PlaceWeaponTurret(building, [4, 5, 6][Rand(1,3)]);
   building := CreateAndPlaceBuildingXYD(111, 16, 4);
   PlaceWeaponTurret(building, [4, 5, 6][Rand(1,3)]);
   building := CreateAndPlaceBuildingXYD(113, 21, 4);
   PlaceWeaponTurret(building, [4, 5, 6][Rand(1,3)]);

   bc_type := 33;

   building := CreateAndPlaceBuildingXYD(95, 41, 1);
   PlaceWeaponTurret(building, [4, 5, 6][Rand(1,3)]);
   building := CreateAndPlaceBuildingXYD(97, 48, 1);
   PlaceWeaponTurret(building, [4, 5, 6][Rand(1,3)]);
   building := CreateAndPlaceBuildingXYD(86, 19, 1);
   PlaceWeaponTurret(building, [4, 5, 6][Rand(1,3)]);

   bc_type := 30;
   CreateAndPlaceBuildingXYD(104, 24, 1);

   bc_type := 29;
   CreateAndPlaceBuildingXYD(113, 50, 3);

   bc_type := 27;
   CreateAndPlaceBuildingXYD(98, 26, 2);
   CreateAndPlaceBuildingXYD(95, 23, 3);

   bc_type := 28;
   CreateAndPlaceBuildingXYD(107, 32, 1);

   bc_type := 3;
   CreateAndPlaceBuildingXYD(106, 42, 0);

   bc_type := 16;
   CreateAndPlaceBuildingXYD(109, 45, 5);

   bc_type := 17;
   CreateAndPlaceBuildingXYD(106, 46, 0);

   bc_type := 19;
   CreateAndPlaceBuildingXYD(103, 42, 1);

   bc_type := 21;
   CreateAndPlaceBuildingXYD(110, 42, 4);

   bc_type := 5;
   CreateAndPlaceBuildingXYD(114, 55, 5);

   bc_type := 36;
   CreateAndPlaceBuildingXYD(96, 28, 2);

   bc_type := b_lab_full;
   bc_kind1 := b_lab_opto;
   bc_kind2 := b_lab_siberium;
   CreateAndPlaceBuildingXYD(116, 38, 4);

   bc_type := b_lab_full;
   bc_kind1 := b_lab_weapon;
   bc_kind2 := b_lab_computer;
   CreateAndPlaceBuildingXYD(112, 29, 4);
   end
else
   begin
   uc_side := 1;

   for i in blist do
       begin
       uc_nation := i[6];
       bc_type := i[1];
       bc_level := i[5];

       if i[1] in [b_lab_half, b_lab_full] then
          begin
          bc_kind1 := i[7];
          bc_kind2 := i[8];
          end;

       b := CreateAndPlaceBuildingXYD(i[2], i[3], i[4]);

       if GetBType(b) in [b_bunker, b_turret] then
          if i[7] then
             PlaceWeaponTurret(b, i[7])
          else
             PlaceWeaponTurret(b, [us_radar, us_rocket_launcher, us_gatling_gun, us_double_gun][rand(1,4)]);
       end;
   end;    

uc_side := 1;
uc_nation := 1;

for i := 1 to 8 do
    begin
    vc_chassis := [us_morphling, us_morphling, us_medium_tracked, us_heavy_tracked][rand(1,4)];
    vc_engine := engine_siberite;
    vc_control := control_manual;

    if vc_chassis = us_heavy_tracked then
       vc_weapon := us_heavy_gun
    else
       vc_weapon := [us_rocket_launcher, us_laser, us_cargo_bay, us_crane, us_laser, us_laser][i mod 6 + 1];

    un := CreateVehicle;
    SetDir(un, rand(0, 5));
    PlaceUnitXYR(un, 78, 31, 8, false);
    end;
End;

Export function PrepareRandoms;
var i, un, tmp;
begin
if FilterAllUnits([[f_side, 1], [f_type, unit_human]]) < 6 then
   begin
   tmp := FilterAllUnits([[f_side, 1], [f_or, [f_btype, b_depot], [f_btype, b_warehouse]]]);

   uc_side := 1;
   uc_nation := 1;

   for i := 1 to 6 do
       begin
       hc_gallery := '';
       hc_name := '';
       PrepareHuman(false, [1, 2, 3, 4][Rand(1, 4)], rand(5, 8));

       un := CreateHuman;
       randomsEpsilon := Join(randomsEpsilon, un);
       PlaceUnit(un, GetX(tmp[1]), GetY(tmp[1]), 15, false);
       end;
   end;
End;