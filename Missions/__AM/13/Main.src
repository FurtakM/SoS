Export JMM, Powell;
Export Lisa, Donaldson, Bobby, Cyrus, Denis, Brown, Gladstone, Houten, Cornel, Gary, Frank, Kikuchi, DeltaDoctor;
Export Stevens; // New :D
Export others12, others11, randomsEpsilon;
Export yourVehicles, resources;

Export mission_prefix_prev;

Starting
begin    
yourVehicles := [];
resources := [];
randomsEpsilon := [];

Resetfog;
PlaceSeeing(1, 1, 1, -37963);
RemoveSeeing(1, 1, 1);
PrepareEnv;
AnimateTrees(true);
RandomizeAll;

mission_prefix_prev := '12_';

PrepareEpsilonBase;
PrepareHeroes;
PrepareRandoms;

Action;
End;

Every 0$1 trigger FilterUnitsExceptArea(ExitArea, [[f_side, 1], [f_type, unit_human]]) = 0 and FilterUnitsInArea(ExitArea, [[f_side, 1], [f_type, unit_vehicle], [f_engine, 3], [f_control, 1], [f_not, [f_empty]]]) = 8 do
var i, cargoType;
begin
if FilterUnitsInArea(ExitArea, [[f_type, unit_vehicle], [f_control, 1], [f_not, [f_empty]]]) then
   begin
   for i in FilterUnitsInArea(ExitArea, [[f_type, unit_vehicle], [f_control, 1], [f_not, [f_empty]]]) do
       begin
       cargoType := GetCargoType(i);

       if GetWeapon(i) = us_cargo_bay then
          yourVehicles := Replace(yourVehicles, yourVehicles + 1, [GetNation(i), GetChassis(i), GetEngine(i), GetControl(i), GetWeapon(i), cargoType, GetCargo(i, cargoType)])
       else 
          yourVehicles := Replace(yourVehicles, yourVehicles + 1, [GetNation(i), GetChassis(i), GetEngine(i), GetControl(i), GetWeapon(i)]);
       end;

   SaveVariable(yourVehicles, '13_VehiclesIn13_1');
   end;

SaveCharacters(othersSelect, '13c_others');

SaveCharacters(JMM, '13c_JMM');
SaveCharacters(Stevens, '13c_Stevens');

ToLua('enableBioCharacter(BIO_HUGH)');

SaveCharactersAfterSelect(Lisa, 'Lisa', selected);
SaveCharactersAfterSelect(Brown, 'Brown', selected);
SaveCharactersAfterSelect(Donaldson, 'Donaldson', selected);
SaveCharactersAfterSelect(Bobby, 'Bobby', selected);
SaveCharactersAfterSelect(Cyrus, 'Cyrus', selected);
SaveCharactersAfterSelect(Denis, 'Denis', selected);
SaveCharactersAfterSelect(Gladstone, 'Gladstone', selected);
SaveCharactersAfterSelect(Houten, 'Houten', selected);
SaveCharactersAfterSelect(Cornel, 'Cornel', selected);
SaveCharactersAfterSelect(Gary, 'Gary', selected);
SaveCharactersAfterSelect(Frank, 'Frank', selected);
SaveCharactersAfterSelect(Kikuchi, 'Kikuchi', selected);

SaveCargos;
ChangeMap(13, '%_cont');
End;

Export function SaveCargos;
var i;
begin
for i in FilterUnitsInArea(ExitArea,[[f_side, 1], [f_control, 1], [f_weapon, us_cargo_bay]]) do resources = resources ^ [GetMultiCargo(i)];
    SaveVariable(resources, '13_ResourcesInCargo13_1');
End;

Export Function PrepareEnv;
var tmp, list, i, j, exist;
begin
tmp := LoadVariable('10_EpsilonEnv', []);

if not tmp then
   exit;

list := ListEnvironmentArea(epsilonTerrain);

if not list then
   exit;

for i in list do
    begin
    exist := false;

    for j in tmp do
        if i[1] = j[1] and i[2] = j[2] then
           begin
           exist := true;
           break;
           end;

    if not exist then
       RemoveEnvironment(i[1], i[2]);
    end; 
End;
