Export Function Action;
var tmp, p, radar, sols, i;
begin
InGameOn;
CenterNowOnUnits(JMM);

SetAttitude(2, 1, att_friend, true);

tmp := FilterAllUnits([[f_side, 1], [f_class, 1]]);
radar := FilterAllUnits([[f_side, 1], [f_weapon, us_radar]])[1];

for i = 1 to tmp do
    begin
    if i = 5 then
       break;
    sols := Replace(sols, i, tmp[i]);
    end;

tmp := ar_force_tmp;

PlaceUnitXY(tmp[1], 108, 139, false);
ComTurnUnit(tmp[1], JMM);

PlaceUnitXY(tmp[2], 114, 132, false);
PlaceUnitXY(tmp[3], 115, 132, false);

ComHold([tmp[2], tmp[3]]);

// action!
ComMoveXY(radar, 83, 123);

Wait(0$01);

CenterOnXY(90, 144);

ComMoveXY(sols, 88, 129);

p := [ [92, 131], [88, 127], [91, 132], [92, 134] ];

for i = 1 to sols do
    begin
    AddComMoveXY(sols[i], p[i][1], p[i][2]);
    AddComCrawl(sols[i]);
    AddComHold(sols);
    end;

repeat
 wait(0$1);
until GetDistUnitXY(sols[1], 92, 131) < 4;

CenterOnXY(96, 139);

wait(0$3);

PlaceSeeing(111, 135, 1, -25);

ComMoveXY(tmp[2], GetX(tmp[1])+3, GetY(tmp[1]));
ComEnterUnit(tmp[3], ar_dep_s);

AddComTurnUnit(tmp[2], tmp[1]);

repeat
 wait(0$1);
until GetDistUnits(tmp[1], tmp[2]) < 5;

ComTurnUnit(tmp[1], tmp[2]);

// czeœæ, problemy z prostat¹?
Say(tmp[1], 'D1a-Merc1-1');
// (hmm) - "langu faszysta" - powiedzia³a ³ódzka dziewucha
Say(tmp[2], 'D1a-FMerc2-1');

ComHeal(tmp[2], tmp[1]);
SetLives(tmp[1], 500);

wait(0$2);

// upada na ziemie po otrzymaniu wiadomoœci o aresztowaniu stonogi
SetLives(tmp[1], 2);

wait(0$0.3);
ForceSay(tmp[1], 'D1a-Merc1-2');
wait(0$0.2);

KillUnit(tmp[1]);

ComMoveToArea(tmp[2], escape_area);

// fiufiufiu
Say(tmp[2], 'D1a-FMerc2-2');

wait(0$1);

CenterOnUnits(ar_dep_s);

wait(0$2);

ForceSay(Saliba, 'D1a-Saliba-1');
KillUnit(Saliba);

ComExitBuilding(tmp[3]);

CenterOnUnits(JMM);
wait(0$1);

ComMoveXY(sols, 88, 141);
AddComWait(sols, 0$2);

wait(0$2);

SetAttitude(2, 1, att_enemy, true);

InGameOff; // game start now!

ComWalk(sols);

ChangeMissionObjectives('M1');

game_speed := 4;

RemoveSeeing(111, 135, 1);

SaveForQuickRestart;

ar_run := true;

repeat
 wait(0$1);
until FilterAllUnits([[f_side, 1], [f_dist, ar_dep_s, 10]]) or GetLives(ar_dep_s) < 999;

if GetSide(ar_dep_s) = 2 then
   SetSide(ar_dep_s, 1);
End;

// ar run to south
Every 0$2 trigger ar_run do
var i, tmp, k;
begin
tmp := ar_force_tmp ^ UnitFilter(ar_force_south, [f_or, [f_type, unit_vehicle], [f_type, unit_human]]);

SetSide(tmp, 5);

ChangeSideFog(5, 1);

k := 1;
for i in tmp do
    begin
    if IsInUnit(i) then
       ComExitBuilding(i);

    if GetClass(i) = 3 then
       begin
       AddComEnterUnit(i, ar_vehicles_tmp[k]);
       k := k + 1;
       end;

    AddComMoveToArea(i, escape_area);
    end;

ar_patrol := true;

repeat
 wait(0$0.3);

 for i in tmp do
     if not HasTask(i) then
        ComMoveToArea(i, escape_area);

 k := UnitFilter(tmp, [f_inarea, escape_area]);

 if k then
    for i in k do
        begin
        if IsInUnit(i) then
           RemoveUnit(IsInUnit(i));
        RemoveUnit(i);
        tmp := tmp diff i;
        end;
until tmp = [];

ChangeSideFog(5, 5);
End;

// ar patrol arrive
Every 0$03 trigger ar_patrol do
var i, un, veh;
begin
uc_side := 2;
uc_nation := 2;

InitHc;

PrepareHuman(sex_male, 1, 6);
un := CreateHuman;

PrepareVehicle(ar_half_tracked, engine_combustion, control_manual, ar_gun, 98);
veh := CreateVehicle;

SetDir(veh, 4);
PlaceUnitXY(veh, 179, 135, false);
PlaceHumanInUnit(un, veh);

ComMoveXY(un, 126, 133);

repeat
 wait(0$0.3);
until See(1, veh) or GetDistUnits(veh, ar_dep_s) < 9;

ComHold(veh);
Say(un, 'D2aa-Ar1-1');

ComMoveXY(un, 177, 96);
AddComExitVehicle(un);

repeat
 wait(0$1);
until GetDistUnits(un, ar_dep_e) < 15;

mc_bases := ReplaceIn(mc_bases, [3, mc_bases[3]+1], un);
End;

// first base captrued
Every 0$2 trigger GetSide(ar_dep_s) = 1 or IsDead(ar_dep_s) do
var i, points;
begin

for i in UnitFilter(ar_force_south, [f_type, unit_building]) do
    SetSide(i, 1);

points := [ [46,41], [50,25], [57,75], [75,89], [51,45], [95,95], [84,77], [101,76], [118,81], [139,97], [129,114], [154,111] ];
base_captured := true;

DialogueOn;
CenterNowOnUnits(JMM);

Say(JMM, 'D2-JMM-1');
SayRadio(Powell, 'D2-Pow-1');
Say(JMM, 'D2-JMM-2');
SayRadio(Powell, 'D2-Pow-2');
Say(JMM, 'D2-JMM-3');
DialogueOff;

ChangeMissionObjectives('M2');

Wait(0$2);

if IsOk(Gary) then
   Say(Gary, 'D2a-Gary-1');

if IsOk(Bobby) then
   Say(Bobby, 'D2a-Bobby-1');

if IsOk(Cyrus) then
   Say(Cyrus, 'D2a-Cyrus-1');

if IsOk(Lisa) then
   Say(Lisa, 'D2a-Lisa-1');

if IsOk(Frank) then
   Say(Frank, 'D2a-Frank-1');

if IsOk(Cornel) then
   Say(Cornel, 'D2a-Corn-1');

if IsOk(Donaldson) then
   Say(Donaldson, 'D2a-Don-1');

if IsOk(Brown) then
   Say(Brown, 'D2a-Brown-1');

Wait(0$30);

// Frank want to scout
if IsOk(Frank) then
   begin
   DialogueOn;

   CenterNowOnUnits([JMM, Frank]);

   Say(Frank, 'D3F-Frank-1');
   Say(JMM, 'D3F-JMM-1');
   Say(Frank, 'D3F-Frank-2');

   case Query('QFrank') of
   1: begin
      Say(JMM, 'D3Fa-JMM-1');
      us_scout := 1;
      end;
   2: begin
      Say(JMM, 'D3Fb-JMM-1');
      Say(Frank, 'D3Fb-Frank-1');

      case Query('QFrank2') of
      1: begin
         us_scout := 2;

         Say(JMM, 'D3Fba-JMM-1');
         Say(Frank, 'D3Fba-Frank-1');
         Say(JMM, 'D3Fba-JMM-2');
         end;  
      2: begin
         us_scout := 0;

         Say(JMM, 'D3Fbb-JMM-1');
         end;
      end;

      end;
   3: begin
      us_scout := -1;

      Say(JMM, 'D3Fc-JMM-1');
      end;
   end;

   DialogueOff;
   end;

   if us_scout in [-1, 0] then
      exit;

   if us_scout in [1, 2] then
      begin
      if IsInUnit(Frank) then
         ComExitBuilding(Frank);

      if IsDrivenBy(Frank) then
         ComExitVehicle(Frank);

      SetSide(Frank, 4);
      wait(0$1);

      if us_scout = 2 then
         begin
         ComMoveXY(Frank, 75, 63);
         AddComHold(Frank);
         AddComWait(Frank, 0$22);
         AddComMoveXY(Frank, 100, 75);
         AddComMoveXY(Frank, 123, 103);
         AddComMoveXY(Frank, 138, 108);
         AddComHold(Frank);

         repeat
          wait(0$1);
         until IsAt(Frank, 138, 108);

         AddComMoveXY(Frank, 125, 132);

         repeat
          wait(0$1);
         until See(1, Frank) or GetDistUnits(Frank, ar_dep_s) < 7;

         DialogueOn;

         CenterNowOnUnits(Frank);
         dwait(0$0.3);

         Say(JMM, 'D4Fa-JMM-1');

         for i in points do
             begin
             PlaceSeeing(i[1], i[2], 1, -20);
             RemoveSeeing(i[1], i[2], 1);
             end;

         dwait(0$0.5);
         
         CenterOnXY(42,27);

         Say(Frank, 'D4Fa-Frank-1');

         dwait(0$0.5);

         Say(JMM, 'D4Fa-JMM-2');

         CenterNowOnXY(118,80);

         Say(Frank, 'D4Fa-Frank-2');

         dwait(0$0.3);
         DialogueOff;

         SetSide(Frank, 1);
         end
       else
        begin
        SetAttitude(2, 4, att_enemy, true);

        ComMoveXY(Frank, 75, 63);
        AddComWait(Frank, 0$5);
        AddComMoveXY(Frank, 102, 76);
        AddComMoveXY(Frank, 108, 70);

        repeat
         wait(0$1);
        until See(2, Frank);

        ComMoveXY(Frank, 112, 118);

        if GetLives(Frank) >= 750 then
           SetLives(Frank, 700);

        repeat
         wait(0$1);
        until See(1, Frank) or GetDistUnits(Frank, ar_dep_s) < 17;

        DialogueOn;
        CenterNowOnUnits(Frank);

        Say(Frank, 'D4Fb-Frank-1');
        Say(JMM, 'D4Fb-JMM-1');

        SayRand(sex_female, 'D4Fb-FSci1-1');
        Say(Frank, 'D4Fb-Frank-2');
        Say(JMM, 'D4Fb-JMM-2');

        DialogueOff;

        SetSide(Frank, 1);
        end;

   end;

if IsOk(Kikuchi) and not Frank then
   begin
   DialogueOn;

   CenterNowOnUnits([JMM, Kikuchi]);

   Say(Kikuchi, 'D3Y-Yam-1');
   Say(JMM, 'D3Y-JMM-1');
   Say(Kikuchi, 'D3Y-Yam-2');

   case Query('QYamoko') of
   1: begin
      Say(JMM, 'D3Ya-JMM-1');
      Say(Kikuchi, 'D3Ya-Yam-1');
      us_scout := 1;
      end;
   2: begin
      us_scout := -1;  
      Say(JMM, 'D3Yb-JMM-1');
      end;
   end;

   DialogueOff;
   end;

   if Frank then
      exit;

   if us_scout in [-1, 0] then
      exit;

   us_scout := [2, 2, 1][Difficulty];

   if us_scout in [1, 2] then
      begin
      if IsInUnit(Kikuchi) then
         ComExitBuilding(Kikuchi);

      if IsDrivenBy(Kikuchi) then
         ComExitVehicle(Kikuchi);

      SetSide(Kikuchi, 4);
      wait(0$1);

      if us_scout = 2 then
         begin
         ComMoveXY(Kikuchi, 75, 63);
         AddComHold(Kikuchi);
         AddComWait(Kikuchi, 0$22);
         AddComMoveXY(Kikuchi, 100, 75);
         AddComMoveXY(Kikuchi, 123, 103);
         AddComMoveXY(Kikuchi, 138, 108);
         AddComHold(Kikuchi);

         repeat
          wait(0$1);
         until IsAt(Kikuchi, 138, 108);

         AddComMoveXY(Kikuchi, 125, 132);

         repeat
          wait(0$1);
         until See(1, Kikuchi) or GetDistUnits(Kikuchi, ar_dep_s) < 7;

         DialogueOn;

         CenterNowOnUnits(Kikuchi);

         dwait(0$0.3);

         Say(Kikuchi, 'D4Ya-Yam-1');
         Say(JMM, 'D4Ya-JMM-1');

         for i in points do
             begin
             PlaceSeeing(i[1], i[2], 1, -20);
             RemoveSeeing(i[1], i[2], 1);
             end;

         dwait(0$0.5);

         CenterOnXY(42,27);

         Say(Kikuchi, 'D4Ya-Yam-2');

         dwait(0$0.5);

         CenterNowOnXY(118,80);

         Say(JMM, 'D4Ya-JMM-2');
         Say(Kikuchi, 'D4Ya-Yam-3');

         dwait(0$0.3);
         DialogueOff;

         SetSide(Kikuchi, 1);
         end
       else
        begin
        SetAttitude(2, 4, att_enemy, true);

        ComMoveXY(Kikuchi, 75, 63);
        AddComWait(Kikuchi, 0$5);
        AddComMoveXY(Kikuchi, 102, 76);
        AddComMoveXY(Kikuchi, 108, 70);

        repeat
         wait(0$1);
        until See(2, Kikuchi);

        ComMoveXY(Kikuchi, 112, 118);

        if GetLives(Kikuchi) >= 750 then
           SetLives(Kikuchi, 700);

        repeat
         wait(0$1);
        until See(1, Kikuchi) or GetDistUnits(Kikuchi, ar_dep_s) < 17;

        DialogueOn;
        CenterNowOnUnits(Kikuchi);

        Say(Kikuchi, 'D4Yb-Yam-1');
        Say(JMM, 'D4Yb-JMM-1');

        Say(Kikuchi, 'D4Yb-Yam-2');
        Say(JMM, 'D4Yb-JMM-2');

        DialogueOff;

        SetSide(Kikuchi, 1);
        end;
   end;

End;

// SEE
// see sheik
// see kamikaze
// see remote control
// see ape control
// see control tower
Every 0$01 trigger base_captured do
var i, tmp, un, un2;
begin
enable;

// see sheik
if not seen[1] then
   begin
   tmp := FilterAllUnits([[f_side, 2], [f_or, [f_class, 11], [f_control, control_rider]]]);

   if tmp then
      for i in tmp do
          if See(1, i) then
             begin
             seen := Replace(seen, 1, true);

             if CanSayRand(1) then
                begin
                DialogueOn;
                CenterNowOnUnits(i);
                dwait(0$0.3);

                un := SayRand(sex_male, 'D5a-Sol2-1');

                if not un then
                   SayRand(sex_female, 'D5a-FSol2-1');
                DialogueOff;

                break;
                end;
             end;
   end;

// see kamikaze
if not seen[2] then
   begin
   can_kamikazed := true;
   tmp := FilterAllUnits([[f_side, 2], [f_class, 17]]);

   if tmp then
      for i in tmp do
          if See(1, i) then
             begin
             seen := Replace(seen, 2, true);

             if CanSayRand(1) then
                begin
                DialogueOn;
                CenterNowOnUnits(i);
                dwait(0$0.3);

                un := SayRand(sex_male, 'D5b-Sol1-1');

                if not un then
                   un := SayRand(sex_female, 'D5b-FSol1-1');

                if un then
                   begin
                   un2 := SayRand2(sex_male, 'D5b-Sol2-1', un);

                   if not un2 then
                      SayRand2(sex_female, 'D5b-FSol2-1', un);
                   end;

                DialogueOff;
                break;
                end;
             end;
   end;

// see remote
if not seen[3] then
   begin
   tmp := FilterAllUnits([[f_side, 2], [f_control, control_remote]]);

   if tmp then
      for i in tmp do
          if See(1, i) then
             begin
             seen := Replace(seen, 3, true);

             if CanSayRand(1) then
                begin
                DialogueOn;
                CenterNowOnUnits(i);
                dwait(0$0.3);

                un := SayRand(sex_male, 'D8-Sol1-1');

                if not un then
                   SayRand(sex_female, 'D8-FSol1-1');

                Say(JMM, 'D8-JMM-1');
                DialogueOff;

                break;
                end;
             end;
   end;

// ape control
if not seen[4] then
   begin
   tmp := FilterAllUnits([[f_side, 2], [f_control, control_apeman]]);

   if tmp then
      for i in tmp do
          if See(1, i) then
             begin
             seen := Replace(seen, 4, true);

             if CanSayRand(1) then
                begin
                DialogueOn;
                CenterNowOnUnits(i);
                dwait(0$0.3);

                un := SayRand(sex_male, 'D5a-Sol1-1');

                if not un then
                   SayRand(sex_female, 'D5a-FSol1-1');

                DialogueOff;
                break;
                end;
             end;
   end;

// ct
if not seen[5] and seen[3] then
   begin
   tmp := FilterAllUnits([[f_side, 2], [f_weapon, ar_control_tower]]);

   if tmp then
      for i in tmp do
          if See(1, i) then
             begin
             seen := Replace(seen, 5, true);

             if CanSayRand(1) then
                begin
                DialogueOn;
                CenterNowOnUnits(i);
                dwait(0$0.3);

                un := SayRand(sex_male, 'D8a-Sol2-1');

                if not un then
                   SayRand(sex_female, 'D8a-FSol2-1');

                Say(JMM, 'D8a-JMM-1');

                DialogueOff; 
                break;
                end;
             end;
   end;

if seen[1] and seen[2] and seen[3] and seen[4] and seen[5] then
   disable;
End;

// see kamikazed
Every 0$1 trigger can_kamikazed and kamikazed do
var un;
begin
DialogueOn;
CenterNowOnUnits(kamikazed);

un := SayRand(sex_male, 'D5c-Sol1-1');

if not un then
   un := SayRand(sex_female, 'D5c-FSol1-1');

Say(JMM, 'D5c-JMM-1');

if IsOk(Lisa) then
   Say(Lisa, 'D5d-Lisa-1')
else if IsOk(Cyrus) then
     Say(Cyrus, 'D5d-Cyrus-1')
else if IsOk(Gary) then
     Say(Gary, 'D5d-Gary-1')
else if GetSex(un) = sex_male then
     Say(un, 'D5d-Sol1-1')
else
 begin
 DialogueOff;
 exit;
 end;

Say(JMM, 'D5d-JMM-1');
DialogueOff;
End;

// see artifact
Every 0$2 trigger SeeArea(1, artifact_area) >= 2 do
var un;
begin
PlaceSeeing(10, 5, 1, -10);
RemoveSeeing(10, 5, 1);

CenterNowOnXY(10, 5);

DialogueOn;
un := SayRand(sex_male, 'D6-Sci1-1');

if un then
   begin
   Say(JMM, 'D6-JMM-1');
   Say(un, 'D6-Sci1-2');
   Say(JMM, 'D6-JMM-2');
   end;
DialogueOff;

ChangeMissionObjectives('M3');
End;

// mechanic
Export ar_mechanic, ar_mechanic_friend;
Every 0$20 trigger tick >= 20$00 and (DangerAtRangeXY(2, 169, 90, 10)[4] = 0 or IsDead(ar_dep_w) or GetSide(ar_dep_w) = 1) and not IsDead(ar_dep_n) do
var un, i, cargo, tmp;
begin
uc_side := 5;
uc_nation := 2;

InitHc;

PrepareHuman(sex_male, 3, 8);
hc_attr := [12, 12];
hc_gallery := 'SecondCharsGal';
hc_face_number := 7;

ar_mechanic := CreateHuman;

InitHc;

PrepareHuman(sex_male, 16, 2);
hc_attr := [12, 12];
hc_name := '';
ar_mechanic_friend := CreateHuman;

InitHc;

repeat
 wait(0$1);
until not InBattle(1);

wait(0$5);

DialogueOn;
InGameOn;

un := UnitFilter(FilterAllUnits([[f_side, 1], [f_or, [f_class, 1], [f_class, 2], [f_class, 3], [f_class, 4], [f_class, 5], [f_class, 8]]]) diff [JMM, Lisa, Donaldson, Bobby, Cyrus, Denis, Brown, Gladstone, Houten, Cornel, Gary, Frank, Kikuchi], [f_sex, sex_male])[1];

if not un and Brown then
   un := Brown;

if un then
   begin
   Say(un, 'D7-Sol1-1');
   Say(JMM, 'D7-JMM-1');
   end;

SayRadio(ar_mechanic, 'D7-Ar1-1');
Say(JMM, 'D7-JMM-2');
SayRadio(ar_mechanic, 'D7-Ar1-2');
Say(JMM, 'D7-JMM-3');
SayRadio(ar_mechanic, 'D7-Ar1-3');
Say(JMM, 'D7-JMM-4');
SayRadio(ar_mechanic, 'D7-Ar1-4');

InGameOff;
DialogueOff; 

case Query('QCameras') of
1: ; // przyjmij
2: exit;// olej
end;

ChangeMissionObjectives('MCar');

PlaceSeeing(124, 90, 1, -6);
RemoveSeeing(124, 90, 1);
SetAreaMapShow(parking_marea, 1);

wait(3);

CenterNowOnXY(124, 90);

cargo := false;

repeat
 wait(0$1);
 cargo := FilterUnitsInArea(parking_marea, [[f_engine, engine_siberite], [f_weapon, ar_cargo_bay], [f_empty]]);
until cargo;

cargo := cargo[1];

SetSide(cargo, 5);
SetAreaMapShow(parking_marea, 0);

PlaceUnitArea(ar_mechanic, mechanic_spawn, false);
PlaceUnitArea(ar_mechanic_friend, mechanic_spawn, false);

ComMoveToArea([ar_mechanic, ar_mechanic_friend], parking_marea);
AddComEnterUnit(ar_mechanic, cargo);
AddComMoveXY([ar_mechanic, ar_mechanic_friend], 209, 178);

while(true) do
begin
 wait(0$1);
 if not HasTask(ar_mechanic) or not HasTask(ar_mechanic_friend) then
    AddComMoveXY([ar_mechanic, ar_mechanic_friend], 209, 178);

 if IsInArea(ar_mechanic, escape_area) then
    RemoveUnit(ar_mechanic);

 if IsInArea(ar_mechanic_friend, escape_area) then
    RemoveUnit(ar_mechanic_friend);

 if IsInArea(cargo, escape_area) then
    RemoveUnit(cargo);

 if not IsLive(ar_mechanic) and not IsLive(ar_mechanic_friend) then
    break;
end;

wait(0$2);

SayRadio(ar_mechanic, 'D7a-Ar1-1');

tmp := [ [129,10], [103,6], [148,47], [155,16] ];

if Difficulty = 1 then
   tmp := tmp ^ [ [78,7], [104,43] ];

for i in tmp do
    PlaceSeeing(i[1], i[2], 1, -9);

CenterOnXY(129, 10);
End;

// Powell first warn
Every 0$1 trigger game_time - 10$00 <= tick do
begin
powell_warn := true;

DialogueOn;
SayRadio(Powell, 'D9-Pow-1');
dwait(0$0.3); 
DialogueOff;
End;

// Lost..
Every 0$1 trigger game_time <= tick do
begin
DialogueOn;
SayRadio(Powell, 'D9a-Pow-1');
dwait(0$2);
DialogueOff;

YouLost('Command');
End;


// YOU WIN
Every 0$1 trigger FilterAllUnits([[f_side, 2], [f_btype, b_warehouse]]) = 0 and IsOk(JMM) do
var tmp;
begin

// [110$00, 100$00, 95$00]
if tick < [95$00, 85$00, 80$00][Difficulty] then
   AddMedal('Time1', 1)
else if not powell_warn then
     AddMedal('Time1', -1)
    else
     AddMedal('Time1', -2);

if loses_counter >= [5, 4, 3][Difficulty] then
   AddMedal('Destroy', -2)
  else
   if FilterAllUnits([[f_side, 2], [f_type, unit_building], [f_ok]]) >= 25 then
      AddMedal('Destroy', -1)
     else
      if FilterAllUnits([[f_side, 2], [f_type, unit_building], [f_ok]]) >= 15 then
         AddMedal('Destroy', 1)
        else
         AddMedal('Destroy', 2);

SaveVariable(artifact_get, '11_artifact_captured');

if artifact_get then
   AddMedal('Artefact', 1)
  else
   AddMedal('Artefact', -1);

GiveMedals('MAIN');


selected := UnitFilter(selected, [f_alive]);

// save
tmp := JMM^selected;
RewardPeople(tmp);

// [Lisa, Donaldson, Bobby, Cyrus, Denis, Brown, Gladstone, Houten, Cornel, Gary, Frank, Kikuchi];
SaveCharacters(tmp diff [JMM, Lisa, Donaldson, Bobby, Cyrus, Denis, Brown, Gladstone, Houten, Cornel, Gary, Frank, Kikuchi], '11c_others');

SaveCharacters(JMM, mission_prefix&'JMM');

if Lisa then
   SaveCharacters(Lisa, mission_prefix&'Lisa');

if Donaldson then
   SaveCharacters(Donaldson, mission_prefix&'Donaldson');

if Bobby then
   SaveCharacters(Bobby, mission_prefix&'Bobby');

if Cyrus then
   SaveCharacters(Cyrus, mission_prefix&'Cyrus');

if Denis then
   SaveCharacters(Denis, mission_prefix&'Denis');

if Brown then
   SaveCharacters(Brown, mission_prefix&'Brown');

if Gladstone then
   SaveCharacters(Gladstone, mission_prefix&'Gladstone');

if Houten then
   SaveCharacters(Houten, mission_prefix&'Houten');

if Cornel then
   SaveCharacters(Cornel, mission_prefix&'Cornell');

if Gary then
   SaveCharacters(Gary, mission_prefix&'Gary');

if Frank then
   SaveCharacters(Frank, mission_prefix&'Frank');

if Kikuchi then
   SaveCharacters(Kikuchi, mission_prefix&'Kikuchi');

YouWin;
End;


Export Function CanSayRand(side);
begin
result := FilterAllUnits([[f_placed], [f_side, side], [f_or, [f_class, 1], [f_class, 2], [f_class, 3], [f_class, 4]]]) diff [JMM, Frank, Lisa, Donaldson, Bobby, Cyrus, Denis, Brown, Gladstone, Houten, Powell, Cornel, Gary, Kikuchi];
End;

Export Function SayRand(sex, dial);
begin
result := FilterAllUnits([[f_placed], [f_side, 1], [f_sex, sex], [f_or, [f_class, 1], [f_class, 2], [f_class, 3], [f_class, 4]]]) diff [JMM, Frank, Lisa, Donaldson, Bobby, Cyrus, Denis, Brown, Gladstone, Houten, Powell, Cornel, Gary, Kikuchi];

if not result then
   exit;

result := result[1];
Say(result, dial);
End;

Export Function SayRand2(sex, dial, filter);
begin
result := FilterAllUnits([[f_side, 1], [f_sex, sex], [f_or, [f_class, 1], [f_class, 2], [f_class, 3], [f_class, 4]]]) diff [JMM, Frank, Lisa, Donaldson, Bobby, Cyrus, Denis, Brown, Gladstone, Houten, Powell, Cornel, Gary, Kikuchi]^filter;

if not result then
   exit;

result := result[1];
Say(result, dial);
End;
