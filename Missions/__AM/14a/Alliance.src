Export JMM, Burlak, freedom;
Export Roth, Lisa, Donaldson, Bobby, Cyrus, Denis, Brown,
       Gladstone, Houten, Cornel, Gary, Frank, Kikuchi,
       Simms, Joan, DeltaDoctor,
       Gossudarov, Kirilenkova, Titov, Dolgov,
       Petrosyan, Scholtze, Oblukov, Kapitsova,
       Lipshchin, Petrovova, Kovalyuk, Kuzmov, Karamazov,
       Belkov, Gnyevko, Masha;
Export squad1, squad2;
Export Function PrepareAlliance;
var tmp, i, veh;
begin
uc_side := 7;
uc_nation := 1;

JMM := PrepareUnit('JMM', (not debug), '13a_');
Burlak := PrepareUnit('Burlak', (not debug), '13a_');
freedom := FilterAllUnits([[f_side, 7], [f_or, [f_nation, 1], [f_nation, 3]], [f_btype, b_warehouse]]);

if freedom then
   begin
   freedom := freedom[1];
   SetBName(freedom, 'freedom');
   CenterNowOnUnits(freedom);

   PlaceHumanInUnit(JMM, freedom);
   PlaceHumanInUnit(Burlak, freedom);

   SetResourceType(GetBase(freedom), mat_cans, 1000);
   SetResourceType(GetBase(freedom), mat_oil, 400);
   SetResourceType(GetBase(freedom), mat_siberit, 30);
   end
  else
   begin
   PlaceUnitArea(JMM, freedom_base, false);
   PlaceUnitXYR(Burlak, GetX(JMM), GetY(JMM), 8, false);

   ComTurnUnit(JMM, Burlak);
   ComTurnUnit(Burlak, JMM);

   CenterNowOnUnits(JMM);
   end;

SetClass(JMM, 2);

tmp := [ [us_medium_wheeled, us_medium_tracked, us_heavy_tracked, us_morphling],
         [us_double_gun, us_laser, us_rocket_launcher, us_gatling_gun, us_cargo_bay] ];

for i = 1 to 5 do
    begin
    PrepareVehicle(tmp[1][i mod 4 + 1], [engine_combustion, engine_siberite][rand(1, 2)], control_manual, tmp[2][i mod 5 + 1], 100);
    veh := CreateVehicle;
    SetDir(veh, rand(0, 5));

    if freedom then
       begin
       if IsInArea(freedom, freedom_base) then
          PlaceUnitArea(veh, freedom_base, false)
       end
    else
       PlaceUnitXYR(veh, GetX(JMM), GetY(JMM), 14, false);
    end;

uc_nation := 3;

tmp := [ [ru_medium_wheeled, ru_medium_tracked, ru_heavy_wheeled, ru_heavy_tracked],
         [ru_gatling_gun, ru_gun, ru_rocket_launcher] ];

for i = 1 to 5 do
    begin
    PrepareVehicle(tmp[1][i mod 4 + 1], [engine_combustion, engine_siberite][rand(1, 2)], control_manual, tmp[2][i mod 3 + 1], 100);
    veh := CreateVehicle;

    SetDir(veh, rand(0, 5));
    PlaceUnitArea(veh, freedom_base, false);
    end;

if not FilterAllUnits([f_or, [f_weapon, us_cargo_bay], [f_weapon, ru_cargo_bay]]) then
   begin
   PrepareVehicle(ru_medium_tracked, engine_siberite, control_manual, ru_cargo_bay, 0);
   veh := CreateVehicle;

   SetDir(veh, rand(0, 5));
   PlaceUnitArea(veh, freedom_base, false);
   end;

tmp := LoadVariable('13a_Masha', []);

if tmp then
   begin
   PrepareVehicle(tmp[1], tmp[2], tmp[3], tmp[4], 100);
   Masha := CreateVehicle;
   PlaceUnitArea(Masha, freedom_base, false);
   SetMark(Masha, 1);
   end;

// others in arabian base
//[Joan, Roth, Gossudarov, Simms, Denis, DeltaDoctor, Kirilenkova, Petrosyan, Dolgov, Scholtze];
uc_side := 4;

tmp := [];
squad1 := [];
squad2 := [];

Joan := PrepareUnit('Joan', (not debug), '13a_');

if Joan then
   tmp := tmp ^ Joan;

Roth := PrepareUnit('Roth', (not debug), '13a_');

if Roth then
   tmp := tmp ^ Roth;

Denis := PrepareUnit('Denis', (not debug), '13a_');

if Denis then
   tmp := tmp ^ Denis;

DeltaDoctor := PrepareUnit('DeltaDoctor', (not debug), '13a_');

if DeltaDoctor then
   tmp := tmp ^ DeltaDoctor;

Simms := PrepareUnit('Simms', (not debug), '13a_');

if Simms then
   tmp := tmp ^ Simms;

Gossudarov := PrepareUnit('Gossudarov', (not debug), '13a_');

if Gossudarov then
   tmp := tmp ^ Gossudarov; 

Kirilenkova := PrepareUnit('Kirilenkova', (not debug), '13a_');

if Kirilenkova then
   tmp := tmp ^ Kirilenkova;

Petrosyan := PrepareUnit('Petrosyan', (not debug), '13a_');

if Petrosyan then
   tmp := tmp ^ Petrosyan;

Scholtze := PrepareUnit('Petrosyan', (not debug), '13a_');

if Scholtze then
   tmp := tmp ^ Scholtze;

Dolgov := PrepareUnit('Dolgov', (not debug), '13a_');

if Dolgov then
   tmp := tmp ^ Dolgov;

for i in tmp do
    PlaceUnitXYR(i, 160, 78, 22, false);

squad1 := tmp;

tmp := [];

Petrovova := PrepareUnit('Petrova', (not debug), '13a_');

if Petrovova then
   tmp := tmp ^ Petrovova;

Titov := PrepareUnit('Titov', (not debug), '13a_');

if Titov then
   tmp := tmp ^ Titov;

Karamazov := PrepareUnit('Karamazov', (not debug), '13a_');

if Karamazov then
   tmp := tmp ^ Karamazov;

Frank := PrepareUnit('Frank', (not debug), '13a_');

if Frank then
   tmp := tmp ^ Frank;

Donaldson := PrepareUnit('Donaldson', (not debug), '13a_');

if Donaldson then
   tmp := tmp ^ Donaldson;

for i in tmp do
    begin
    PlaceUnitXYR(i, 117, 8, 6, false);
    ComTurnXY(i, 117, 8);
    end;

squad2 := tmp;



uc_side := 0;
uc_nation := 0;

InitHc;

hc_importance := 0;
hc_name := 'Find some goods!';
PrepareHuman(false, class_apeman, 1);
PlaceUnitXY(CreateHuman, 96, 108, false);
InitHc;
End;

Every 3 trigger FilterAllUnits([[f_side, 7], [f_nation, 0]]) do
var Louis, veh;
begin
InGameOn;
RemoveUnit(FilterAllUnits([[f_side, 7], [f_nation, 0]])[1]);
game_speed := 4;

ComMoveXY(JMM, 93, 100);
ComMoveXY(Burlak, 93, 99);

AddComTurnXY([JMM, Burlak], 81, 112);

wait(0$5);

music_nat := 2;
music_class := 4;

CenterNowOnXY(80, 130);

uc_nation := 2;
uc_side := 2;

hc_gallery = 'sandar';
hc_face_number = 1;
hc_name = 'Louis Schulz';
hc_attr = [13, 11];
hc_basic_skills = [0,0,0,0];
hc_skills = [10,6,7,7];
hc_sex = sex_male;
hc_class = 1;
hc_importance = 100;

Louis = CreateHuman;

PrepareVehicle(ar_half_tracked, engine_siberite, control_manual, ar_flame_thrower, 100);
veh := CreateVehicle;
SetMark(veh, -2);

PlaceUnitXY(veh, 80, 130, false);
PlaceHumanInUnit(Louis, veh);

ComMoveXY(Louis, 80, 109);
AddComExitVehicle(Louis);
AddComMoveXY(Louis, 80, 131);

wait(0$06);

InGameOff;

repeat
 wait(0$1);
until IsAt(Louis, 80, 131);

SetSide(veh, 7);
RemoveUnit(Louis);

music_nat := 3;
music_class := 0;
End;

Every 0$10 trigger squad1 do
var i, xy;
begin
enable;

i := squad1[rand(1, squad1)];

if IsInUnit(i) then
   exit;

ComRemember(i);

xy := [ShiftX(GetX(i), rand(0, 5), rand(2, 7)), ShiftY(GetY(i), rand(0, 5), rand(2, 7))];

if HexInfo(xy[1], xy[2]) <> 0 or not ValidHex(xy[1], xy[2]) then
   exit;

AddComMoveXY(i, xy[1], xy[2]);
AddComWait(i, 0$10);

if Prob(60) and FilterAllUnits([[f_side, 4], [f_type, unit_building]]) then
   begin
   AddComEnterUnit(i, NearestUnitToUnit(FilterAllUnits([[f_side, 4], [f_type, unit_building]]), i));

   repeat
    wait(0$30);
   until IsInUnit(i);

   wait(0$30);

   AddComExitBuilding(i);
   end;

AddComReturn(i);
End;