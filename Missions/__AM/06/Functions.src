Export function SelectDeltaCharacters;
var i, yourPeople;
begin
selectedPeople := [];
yourPeople := FilterAllUnits([[f_side, 1], [f_type, unit_human], [f_or, [f_class, 1], [f_class, 2], [f_class, 3], [f_class, 4]]]) diff [JMM, DeltaDoctor, Denis];

selectedPeople := CharacterSelection('text', 5, 5,
                                   [sel_change_class, JMM,
                                    sel_dont_change_class,
                                    sel_not_hired,sel_changeable, sel_change_class]^yourPeople^
                                   [sel_dont_change_class, sel_not_changeable, Denis, DeltaDoctor],
                                   [class_soldier, class_mechanic, [class_engineer, 1], class_scientistic]);

ComStop(selectedPeople);

SetSide(FilterAllUnits([[f_side, 1], [f_type, unit_human]]), 4);

for i in selectedPeople do
    SetSide(i, 1);

for i in yourApemans do
    SetSide(i, 1);

if Mike then
   SetSide(Mike, 1);

SetSide(JMM, 1);

SetSkill(yourApemans, 2, 3);
End;

Export Function SaveDeltaCharacters;
begin
SaveCharacters(JMM, mission_prefix & 'JMM');
SaveCharacters(DeltaDoctor, 'DeltaDoctor');
SaveCharacters(Denis, mission_prefix & 'Denis');

if Lisa in selectedPeople then
   begin
   SaveCharacters(Lisa, mission_prefix & 'Lisa');
   DeleteCharacters(mission_prefix_prev & 'Lisa');
   SaveVariable(1, 'LisaIn06');
   end
else
   if IsOk(Lisa) then
      SaveVariable(1, 'LisaStayInDelta');

if Bobby in selectedPeople then
   begin
   SaveCharacters(Bobby, mission_prefix & 'Bobby');
   DeleteCharacters(mission_prefix_prev & 'Bobby');
   SaveVariable(1, 'BobbyIn06');
   end
else
   if IsOk(Bobby) then
      SaveVariable(1, 'BobbyStayInDelta');

if Cyrus in selectedPeople then
   begin
   SaveCharacters(Cyrus, mission_prefix & 'Cyrus');
   DeleteCharacters(mission_prefix_prev & 'Cyrus');
   SaveVariable(1, 'CyrusIn06');
   end
else
   if IsOk(Cyrus) then
      SaveVariable(1, 'CyrusStayInDelta');

if Frank in selectedPeople then
   begin
   SaveCharacters(Frank, mission_prefix & 'Frank');
   DeleteCharacters(mission_prefix_prev & 'Frank');
   SaveVariable(1, 'FrankIn06');
   end
else
   if IsOk(Frank) then
      SaveVariable(1, 'FrankStayInDelta');

if Brown in selectedPeople then
   begin
   SaveCharacters(Brown, mission_prefix & 'Brown');
   DeleteCharacters(mission_prefix_prev & 'Brown');
   SaveVariable(1, 'BrownIn06');
   end
else
   if IsOk(Brown) then
      SaveVariable(1, 'BrownStayInDelta');

if Donaldson in selectedPeople then
   begin
   SaveCharacters(Donaldson, mission_prefix & 'Donaldson');
   DeleteCharacters(mission_prefix_prev & 'Donaldson');
   SaveVariable(1, 'DonaldsonIn06');
   end
else
   if IsOk(Donaldson) then
      SaveVariable(1, 'DonaldsonStayInDelta');

if Gladstone in selectedPeople then
   begin
   SaveCharacters(Gladstone, mission_prefix & 'Gladstone');
   DeleteCharacters(mission_prefix_prev & 'Gladstone');
   SaveVariable(1, 'GladstoneIn06');
   end
else
   if IsOk(Gladstone) then
      SaveVariable(1, 'GladstoneStayInDelta');

if Mike then
   SaveCharacters(Mike, mission_prefix & 'Mike');

selectedPeople := FilterAllUnits([[f_side, 1], [f_nation, 1], [f_type, unit_human]]);

SaveCharacters(yourApemans, 'ApeIn06');
SaveCharacters(selectedPeople diff [JMM, Lisa, Bobby, Cyrus, Frank, Brown, Donaldson, Gladstone, Denis], 'OthersIn06');
SaveCharacters(FilterAllUnits([[f_side, 4], [f_nation, 1], [f_or, [f_class, 1], [f_class, 2], [f_class, 3], [f_class, 4]]]) diff [DeltaDoctor, Lisa, Bobby, Cyrus, Frank, Brown, Donaldson, Gladstone, Denis], 'OthersStayInDelta');
End;

Export Function SaveCargos;
var i;
begin
for i in FilterUnitsInArea(ExitArea,[[f_side, 1], [f_weapon, us_cargo_bay]]) do
    resources = resources ^ [GetMultiCargo(i)];

SaveVariable(resources, '06_ResourcesInCargo06_1');
end;

