Export function PrepareHeroes;
var i, tmp, ape, test;
begin
tmp := FilterAllUnits([[f_side, 1], [f_type, unit_building], [f_btype, b_depot]]);

if tmp then
   SetBName(tmp[1], 'delta');

uc_side := 1;
uc_nation := 1;

JMM := PrepareUnit('JMM', true, mission_prefix_prev);
Harisson := PrepareUnit('Harisson', false, '');

PlaceUnitXYR(JMM, GetX(tmp[1]), GetY(tmp[1]), 5,  false);
SetClass(JMM, 1);

Gladstone := PrepareUnit('Gladstone', true, mission_prefix_prev);
PlaceUnitXYR(Gladstone, GetX(tmp[1]), GetY(tmp[1]), 5,  false);
SetClass(Gladstone, 4);

Denis := PrepareUnit('Denis', true, mission_prefix_prev);
PlaceUnitXYR(Denis, GetX(tmp[1]), GetY(tmp[1]), 5,  false);
SetClass(Denis, 4);

Mike := PrepareUnit('Mike', true, mission_prefix_prev);
PlaceUnitXYR(Mike, GetX(tmp[1]), GetY(tmp[1]), 5,  false);

if LoadVariable('FrankInDelta', 0) = 1 then
   begin    
   Frank := PrepareUnit('Frank', true, mission_prefix_prev);
   PlaceUnitXYR(Frank, GetX(tmp[1]), GetY(tmp[1]), 5,  false);
   SetClass(Frank, 1);
   end;

if LoadVariable('LisaInDelta', 0) = 1 then
   begin    
   Lisa := PrepareUnit('Lisa', true, mission_prefix_prev);
   PlaceUnitXYR(Lisa, GetX(tmp[1]), GetY(tmp[1]), 5,  false);
   SetClass(Lisa, 1);
   end;

if LoadVariable('BobbyInDelta', 0) = 1 then
   begin    
   Bobby := PrepareUnit('Bobby', true, mission_prefix_prev);
   PlaceUnitXYR(Bobby, GetX(tmp[1]), GetY(tmp[1]), 5,  false);
   SetClass(Bobby, 1);
   end;

if LoadVariable('CyrusInDelta', 0) = 1 then
   begin    
   Cyrus := PrepareUnit('Cyrus', true, mission_prefix_prev);
   PlaceUnitXYR(Cyrus, GetX(tmp[1]), GetY(tmp[1]), 5,  false);
   SetClass(Cyrus, 1);
   end;

if LoadVariable('DonaldsonInDelta', 0) = 1 then
   begin
   Donaldson := PrepareUnit('Donaldson', true, mission_prefix_prev);
   PlaceUnitXYR(Donaldson, GetX(tmp[1]), GetY(tmp[1]), 5,  false);
   SetClass(Donaldson, 1);
   end;

if LoadVariable('BrownInDelta', 0) = 1 then
   begin
   Brown := PrepareUnit('Brown', true, mission_prefix_prev);
   PlaceUnitXYR(Brown, GetX(tmp[1]), GetY(tmp[1]), 5,  false);
   SetClass(Brown, 2);
   end;
    
others := CreateCharacterSet('othersInDelta');

for i in others do
    PlaceUnitXYR(i, GetX(tmp[1]), GetY(tmp[1]), 35,  false);

apemans := CreateCharacterSet('apeInDelta');

uc_nation := 0;

if apemans > 5 then
   begin
   for i := 1 to 5 do
       begin
       PlaceUnitXYR(apemans[i], GetX(tmp[1]), GetY(tmp[1]), 50,  false);
       yourApemans := yourApemans ^ apemans[i];
       end;
   end
else
   begin
   for i in apemans do 
       begin
       PlaceUnitXYR(i, GetX(tmp[1]), GetY(tmp[1]), 50,  false);
       yourApemans := yourApemans ^ i;
       end; 
   end;  
End;

Export function LoadVehicles;
var i, j, veh, tmp, vehicles;
begin
tmp := FilterAllUnits([[f_side, 1], [f_type, unit_building], [f_btype, b_depot]]);

uc_side := 1;

vehicles := LoadVariable('vehiclesInDelta', []);

for i := 1 to Count(vehicles) div 4 do
    begin
    uc_nation := vehicles[1];

    vc_chassis := vehicles[2];
    vc_engine := vehicles[3];
    vc_control := vehicles[4];
    vc_weapon := vehicles[5];

    veh := CreateVehicle;
    SetDir(veh, rand(0, 5));
    PlaceUnitArea(veh, parkingArea, false);

    for j := 1 to 5 do
        vehicles := Delete(vehicles, 1);
    end;
End;

Export function PrepareRandoms;
var i, un, tmp, filter;
begin
uc_side := 1;
uc_nation := 1;

tmp := FilterAllUnits([[f_side, 1], [f_type, unit_building], [f_btype, b_depot]]);
deltaDoctor := (FilterAllunits([[[f_side, 1], [f_class, 4], [f_sex, sex_male]]]) diff [JMM, Cyrus, Bobby, Frank, Gladstone, Denis, Brown]);

if not deltaDoctor then
   begin
   filter := FilterAllunits([[[f_side, 1], [f_sex, sex_male]]]) diff [JMM, Cyrus, Bobby, Frank, Gladstone, Denis, Brown];

   if filter then
      for i in filter do
          if GetSkill(i, 4) >= 4 then
             begin
             deltaDoctor := i;
             SetClass(deltaDoctor, 4);
             break;
             end;
   end
else
   deltaDoctor := deltaDoctor[1];

for i := 1 to 7 do
    begin
    hc_gallery := '';
    hc_name := '';
    PrepareHuman(false, [1, 2, 3, 4][Rand(1, 4)], rand(3, 5));

    un := CreateHuman;
    randomsDelta := randomsDelta ^ un;
    PlaceUnitXYR(un, GetX(tmp[1]), GetY(tmp[1]), 15,  false);
    end;

if deltaDoctor then
   exit;

hc_gallery := 'Dawkins';
hc_face_number := 1;
hc_name := 'Dr. Adam Charles Dawkins'; // ^^ pozdro dla kumatych
PrepareHuman(sex_male, 4, 5);
deltaDoctor := CreateHuman;
PlaceUnitXYR(deltaDoctor, GetX(tmp[1]), GetY(tmp[1]), 5,  false);
End;