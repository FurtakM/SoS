Export Function Action;
var i, units, vehicles, cargos, resources, cargo;
begin
InGameOn;

CenterNowOnUnits(JMM);

ComTurnUnit(JMM, Cornel);

if Bierezov then
   ComTurnUnit(Bierezov, Cornel);

for i in jmm_units do
    ComTurnUnit(i, Cornel);

units := cornel_units union Cornel;

repeat
 wait(1);

 for i in units do
     ComMoveXY(i, GetX(JMM), GetY(JMM));

until UnitFilter(units, [f_distxy, GetX(JMM), GetY(JMM), 10]) = units;

for i in units do
    ComTurnUnit(i, JMM);

ComTurnUnit(Cornel, JMM);

Say(JMM, 'D1-JMM-1');
Say(Cornel, 'D1-Corn-1');

ComMoveUnit(JMM, Cornel);
ComMoveUnit(Cornel, JMM);

repeat
 wait(0$01);
until GetDistUnits(JMM, Cornel) < 6;

ChangeSideFog(4, 1);

ComTurnUnit(JMM, Cornel);
ComTurnUnit(Cornel, JMM);

Say(JMM, 'D1-JMM-2');
Say(JMM, 'D1-JMM-2a');
Say(Cornel, 'D1-Corn-2');

if bierezov_exist or debug then
   begin
   ComTurnUnit(Cornel, Bierezov);
   Wait(0$0.3);
   Say(Cornel, 'D1a-Corn-1');

   ComTurnUnit(JMM, Bierezov);
   ComTurnUnit(Bierezov, JMM);

   Say(JMM, 'D1a-JMM-1');

   ComTurnUnit(JMM, Cornel);
   ComTurnUnit(Cornel, JMM);

   Say(Cornel, 'D1a-Corn-2');
   Say(JMM, 'D1a-JMM-2');
   Say(Cornel, 'D1a-Corn-3');
   Say(JMM, 'D1a-JMM-3');
   Say(Cornel, 'D1a-Corn-4');
   Say(JMM, 'D1a-JMM-4');
   Say(Cornel, 'D1a-Corn-5');

   ComMoveXY(Bierezov, GetX(Cornel), GetY(Cornel)-2);
   AddComTurnUnit(Bierezov, Cornel);

   Wait(0$0.3);
   end;

Say(JMM, 'D1b-JMM-1');
Say(Cornel, 'D1b-Corn-1');
Say(JMM, 'D1b-JMM-2');
Say(Cornel, 'D1b-Corn-2');
Say(JMM, 'D1b-JMM-3');

Wait(0$0.3);

SayRadio(Powell, 'D1b-Pow-3');
Say(JMM, 'D1b-JMM-4');
Say(Cornel, 'D1b-Corn-4');

if Khatam then
   Say(Khatam, 'D1b-Khat-4')
  else
   SayX(UnitFilter(cornel_units, [f_sex, sex_male]) diff [Cornel], 'D1b-Sol1-4');

if Cyrus then
   Say(Cyrus, 'D1b-Cyrus-4');

if Lisa then
   begin
   Say(Lisa, 'D1b-Lisa-4');

   if Cyrus then
      begin
      if not IsInUnit(Cyrus) then
         ComTurnUnit(Cyrus, Lisa);

      Say(Cyrus, 'D1b-Cyrus-5');
      end;
   end;

SelectGroup;


Say(JMM, 'D1d-JMM-1');
Say(Cornel, 'D1d-Corn-1');

for i in jmm_units^cornel_units^JMM do
    ComHold(i);

vehicles := FilterAllUnits([[f_side, 1], [f_type, unit_vehicle]]);

if vehicles then
   begin

   if UnitFilter(cornel_units, [f_driving]) then
      for i in UnitFilter(cornel_units, [f_driving]) do
          ComExitVehicle(i);

   cargos := UnitFilter(vehicles, [f_weapon, ru_cargo_bay]);

   if cargos then
      begin
      vehicles := cargos;
      resources := LoadVariable('02_resources_4', 0);

      if debug and not resources then
         resources := 160;

      if resources mod 10 then
         resources := resources - resources mod 10;

      if resources then
         for i in cargos do
             begin
             if resources < 100 then
                begin                 
                cargo := resources;
                resources := 0;
                end
               else
                begin
                cargo := 100;
                resources := resources - 100;
                end;

             SetCargo(i, mat_cans, cargo);

             if resources = 0 then
                break;
             end;
      end;

   ComExitVehicle(IsDrivenBy(vehicles[1]));
   SetSide(vehicles[1], 4);
   ComEnterUnit(Cornel, vehicles[1]);

   repeat
    wait(0$01);
   until IsInUnit(Cornel);

   end;

InGameOff;

ChangeMissionObjectives('M1');

SaveForQuickRestart;

cornel_active := true;
End;

// West Base
Every 0$01 trigger GetDistUnits(JMM, Lynch) < 10 do
var i, points, sol, buns, tmp;
begin
points := [ [89, 34], [138, 63], [196, 84], [135, 52], [103, 39], [58, 30], [38, 51] ];


Video(true);

if jmm_units then
   for i in jmm_units do
       begin
       if GetDistUnits(i, JMM) < 10 and not IsInUnit(i) then
          ComTurnUnit(i, JMM)
           else
            ComHold(i);
       end;

if IsInUnit(JMM) then
   begin
   ComExitVehicle(JMM);
   AddComMoveUnit(JMM, Lynch);
   end;

Wait(10);

AddComMoveUnit(JMM, Lynch);

repeat
 wait(0$01);
until GetDistUnits(JMM, Lynch) < 6;

ComTurnUnit(JMM, Lynch);

for i in [Lynch, Walker, Turner, Jillian] do
    ComTurnUnit(i, JMM);

Wait(0$0.3);

Say(JMM, 'D2-JMM-1');
Say(Lynch, 'D2-Sol1-1');
Say(JMM, 'D2-JMM-2');
Say(Lynch, 'D2-Sol1-2');
Say(JMM, 'D2-JMM-3');
Say(Lynch, 'D2-Sol1-3');

for i in FilterAllUnits([f_side, 8]) do
    SetSide(i, 1);

Say(JMM, 'D2-JMM-4');

// camera on
RevealFogArea(1, roadArea);

for i = 1 to points do
    begin
    CenterOnXY(points[i][1], points[i][2]);

    if i = 1 then
       Say(Lynch, 'D2-Sol1-4');

    if i = 2 then
       Say(JMM, 'D2-JMM-5');

    if i = 4 then
       begin
       RevealFogArea(1, troopsArea);

       Say(Lynch, 'D2-Sol1-5');
       end;

    if i = 5 then
       Say(JMM, 'D2-JMM-6');

    if i = 7 then
       begin
       RevealFogArea(1, forestArea);

       Say(Lynch, 'D2-Sol1-6');
       end;

    Wait(0$1.3);
    end;

CenterNowOnUnits(JMM);

Say(JMM, 'D2-JMM-7');
Say(Lynch, 'D2-Sol1-7');
Say(JMM, 'D2-JMM-8');


buns := FilterAllUnits([[f_side, 1], [f_btype, b_breastwork]]);

ComEnterUnit(Lynch, buns[1]);


if HexInfo(65, 101) then
   ComMoveXY(HexInfo(65, 101), 75, 100);

if HexInfo(66, 103) then
   ComMoveXY(HexInfo(66, 103), 75, 100);

tmp := FilterAllUnits([[f_side, 1], [f_type, unit_vehicle], [f_dist, JMM, 7]]);

if tmp then
   ComMoveXY(tmp, 75, 100);

sol := NearestUnitToUnit(UnitFilter(jmm_units, [f_class, 1]), JMM);

if sol then
   if GetDistUnits(JMM, sol) < 10 then
      begin

      if IsInUnit(sol) then
         ComExitVehicle(sol);

      AddComEnterUnit(sol, buns[2]);
      end;

Wait(0$0.3);

ComMoveXY(JMM, 65, 101);
AddComTurnXY(JMM, 63, 100);

tmp := 0$0;

repeat
 wait(0$01);
 tmp := tmp + 0$1;
until IsAt(JMM, 65, 101) or tmp > 0$5;

Say(JMM, 'D2a-JMM-1');

ComMoveXY(Walker, 66, 103);

tmp := 0$0;

repeat
 wait(0$01);
until IsAt(Walker, 66, 103) or tmp > 0$5;

ComTurnUnit(Walker, JMM);

Say(Walker, 'D2a-Sci1-1');

ComTurnUnit(JMM, Walker);

Say(JMM, 'D2a-JMM-2');
Say(Walker, 'D2a-Sci1-2');
Say(JMM, 'D2a-JMM-3');
Say(Walker, 'D2a-Sci1-3');

jmm_units := jmm_units ^ [Lynch, Walker, Turner, Jillian];

for i in jmm_units do
    if not IsInUnit(i) then
       ComFree(i);

Video(false);

ChangeMissionObjectives('MSolar1');

jmm_on_west := true;

Wait(0$30);

frank_can_return := true;

Wait(Rand(3$00, 4$00));

send_spec_patrol := true;
End;

Every 0$01 trigger FilterAllUnits([[[f_side, 1], [f_weapon, ru_cargo_bay], [f_distxy, 63, 100, 5]]]) and not jmm_on_west do
var i, filter;
begin
enable;

filter := FilterAllUnits([[[f_side, 1], [f_weapon, ru_cargo_bay], [f_distxy, 63, 100, 5]]]);

if not filter then
   exit;

for i in filter do
    begin
    SetFuel(i, 0);
    ComStop(i);
    end;
End;

// russian spec patrol
Every 0$01 trigger send_spec_patrol do
var dead1, dead2, inarea1, inarea2, sol, tmp;
var i;
begin
if not ru_spec_patrol then
   exit;

dead1 := false;
dead2 := false;
inarea1 := false;
inarea2 := false;
tmp := [];

ComAgressiveMove(ru_spec_patrol, 75, 101);

repeat
 wait(0$01);
until See(1, ru_spec_patrol[1]);

ComStop(ru_spec_patrol);

Wait(0$02);

DialogueOn;
Say(ru_spec_patrol[1], 'D8-Rus1-1');
Say(JMM, 'D8-JMM-1');
DialogueOff;

ComMoveToArea(ru_spec_patrol, retreatArea);

repeat
 wait(0$01);

 if not dead1 and IsDead(ru_spec_patrol[1]) then
    dead1 := true;

 if not dead2 and IsDead(ru_spec_patrol[2]) then
    dead2 := true;

 if not inarea1 and IsInArea(ru_spec_patrol[1], baseBorder) then
    inarea1 := true;

 if not inarea2 and IsInArea(ru_spec_patrol[2], baseBorder) then
    inarea2 := true;

until (dead1 and dead2) or (dead1 and inarea2) or (dead2 and inarea1) or
      (inarea1 and inarea2);


if (inarea1 and inarea2) or (dead1 and inarea2) or (dead2 and inarea1) then
   begin
   prepare_siege := true;

   DialogueOn;

   if (inarea1 and inarea2) then
      Say(JMM, 'D8b-JMM-1a')
     else
      Say(JMM, 'D8b-JMM-1');

   SayX(UnitFilter(jmm_units, [f_sex, sex_male]) diff [Bobby, Cyrus, Walker, Frank], 'D8b-Sol1-1');

   if Cyrus and Cyrus in jmm_units then
      Say(Cyrus, 'D8b-Cyrus-1')
     else
      Say(JMM, 'D8b-JMM-1a');

   if Lisa and Lisa in jmm_units then
      Say(Lisa, 'D8b-Lisa-2');

   if Bobby and Bobby in jmm_units then
      Say(Bobby, 'D8b-Bobby-1')
     else
      sol := SayX(UnitFilter(jmm_units, [f_sex, sex_male]) diff [Bobby, Cyrus, Walker, Frank], 'D8b-Sol2-1');

   DialogueOff;

   if Cyrus and Cyrus in jmm_units then
      tmp := Insert(tmp, 1, Cyrus);

   if Bobby and Bobby in jmm_units then
      tmp := Insert(tmp, 1, Bobby);

   if sol then
      tmp := Insert(tmp, 1, sol);

   if tmp then
      begin
      SetSide(tmp, 8);

      ComFree(tmp);
      AddComMoveToArea(tmp, cyrusEscape);
      AddComHold(tmp);

      repeat
       wait(0$01);

       if not HasTask(tmp[1]) then
          ComMoveToArea(tmp, cyrusEscape);

       if IsInArea(tmp[1], cyrusEscape) then
          begin
          RemoveUnit(tmp[1]);
          jmm_units := jmm_units diff tmp[1];
          tmp := tmp diff tmp[1];
          end;

      until tmp = 0;
      end;


   Wait(0$30);

   if ru_spec_patrol then
      for i in ru_spec_patrol do
          RemoveUnit(i);
   end
  else
   begin
   prepare_siege := false;
   Say(JMM, 'D8a-JMM-1');
   end;
End;

// frank return
Every 0$10 trigger frank_can_return do
var i, p, points;
begin
uc_side := 8;
points := [ [59, 71], [122, 117] ];
Frank := PrepareUnit('Frank', false);

i := rand(1,2);

PlaceUnitXY(Frank, points[i][1], points[i][2], false);

ComMoveUnit(Frank, us_dep_west);

repeat
 wait(0$01);
until GetDistUnits(Frank, JMM) < 8 and GetLives(Frank) > 250;

Video(true);

CenterOnUnits(JMM);

if IsInUnit(JMM) then
   ComFree(JMM);

ComMoveUnit(JMM, Frank);
ComMoveUnit(Frank, JMM);

Say(JMM, 'D6-JMM-1');

p := 0;
 
repeat
 wait(0$1);
 p := p + 1;
until GetDistUnits(JMM, Frank) < 8 or p > 7;

if Lisa and GetDistUnits(Lisa, Frank) < 20 then
   begin
   ComFree(Lisa);
   AddComMoveUnit(Lisa, Frank);
   end;

if Lynch then
   begin
   ComFree(Lynch);
   AddComMoveUnit(Lynch, Frank);
   end;

ComTurnUnit(JMM, Frank);
ComTurnUnit(Frank, JMM);

Say(Frank, 'D6-Frank-1');

PlaceSeeing(69, 20, 1, -20);
RemoveSeeing(69, 20, 1);
PlaceSeeing(190, 31, 1, -20);
RemoveSeeing(190, 31, 1);

CenterOnXY(69, 20);
Wait(0$02);
CenterNowOnUnits(JMM);

if Lisa and GetDistUnits(Lisa, Frank) < 20 and IsOk(Lisa) then
   begin
   ComFree(Lisa);

   p := 0;

    repeat
     wait(0$01);
     p := p + 1;
    until GetDistUnits(Lisa, Frank) < 7 or p > 7;

   Say(Lisa, 'D6-Lisa-1');

   ComTurnUnit(Lisa, Frank);
   ComTurnUnit(Frank, Lisa);

   Say(Frank, 'D6-Frank-2');
   end;

if Lynch and GetDistUnits(Lynch, Frank) < 20 and IsOk(Lynch) then
   begin
   ComTurnUnit(Lynch, JMM);
   ComTurnUnit(Frank, JMM);

   Say(Lynch, 'D6-Sol1-2');
   Say(JMM, 'D6-JMM-2');
   Say(Frank, 'D6-Frank-3');
   Say(JMM, 'D6-JMM-3');
   Say(Frank, 'D6-Frank-4');
   Say(Frank, 'D6-Frank-4a');
   Say(JMM, 'D6-JMM-4');
   Say(Frank, 'D6-Frank-5');

   if Lisa and IsOk(Lisa) then
      Say(Lisa, 'D6-Lisa-5');

   Say(Frank, 'D6-Frank-6');
   Say(JMM, 'D6-JMM-6');
   end
    else
     begin
     ComTurnUnit(Frank, JMM);

     Say(Frank, 'D6-Frank-4');
     Say(Frank, 'D6-Frank-4a');
     Say(JMM, 'D6-JMM-4');
     Say(Frank, 'D6-Frank-5');

     if Lisa and IsOk(Lisa) then
        Say(Lisa, 'D6-Lisa-5');

     Say(Frank, 'D6-Frank-6');
     Say(JMM, 'D6-JMM-6');
     end;

Case Query('Q1') of
1: frank_send_to_scout := true;
2: frank_send_to_scout := false;
End;

Video(false);

ComFree([JMM, Lisa, Lynch]);

if frank_send_to_scout then
   begin

   repeat
    ComMoveToArea(Frank, cyrusEscape);

    wait(0$01);
   until not See(1, Frank);

   wait(0$02);

   RemoveUnit(Frank);
   end
    else
     SetSide(Frank, 1);

send_attack_on_cornel_base := true;
                         
repeat
 wait(0$01);
 time_to_prepare := Count(time_to_prepare, '-');

 if debug then
    debug_strings := time_to_prepare;

until time_to_prepare = 0$00;

cornel_prepared := true;
End;

Every 0$01 trigger cornel_prepared do
begin
SayRadio(Cornel, 'D3-Corn-1');

ChangeMissionObjectives('MOutWait');

repeat
 wait(0$01);
until cornel_counter = 0;

SayRadio(Cornel, 'D3a-Corn-1');

if IsOk(Cornel) then
   Say(JMM, 'D3a-JMM-1');

end_mission_allowed := true;
ChangeMissionObjectives('M2');
SetAreaMapShow(endMArea, 1);

Wait(0$05);

SayRadio(Cornel, 'D3a-Corn-2');

cornel_attack := true;

Wait(0$03);

AddMoreTanks();

if frank_send_to_scout then
   begin
   InitHc;
   InitUc;

   uc_side := 8;
   Frank := PrepareUnit('Frank', false);
   PlaceUnitXY(Frank, 6, 9, false);
   ComCrawl(Frank);

   repeat
    wait(0$01);
   until GetDistUnits(JMM, Frank) < 9;

   SetSide(Frank, 1);
   Say(Frank, 'D6a-Frank-1');
   ComWalk(Frank);
   end;
End;

// vehicle builded
Every 0$01 trigger solar_builded do
begin
Wait(0$02);

DialogueOn;

Say(JMM, 'D2b-JMM-1');

if Walker and IsOk(Walker) then
   begin
   Say(Walker, 'D2b-Sci1-1');
   Say(JMM, 'D2b-JMM-2');
   Say(Walker, 'D2b-Sci1-2');
   Say(JMM, 'D2b-JMM-3');
   end;

DialogueOff;

ChangeMissionObjectives('MOutSol');
End;

Every 0$01 trigger solar_builded and IsOk(JMM) and InVeh(JMM) and not jmm_in_veh do
var i;
begin
jmm_in_veh := true;

i := rand(0,1);

Wait(0$02);

if i then
   Say(JMM, 'D2c-JMM-1')
  else
   Say(JMM, 'D2c-JMM-1a');
End;

Every 0$01 trigger solar_builded and IsOk(Bobby) and InVeh(Bobby) and not bobby_in_veh do
begin
bobby_in_veh := true;

Wait(0$02);

Say(Bobby, 'D2c-Bobby-1')
End;

Every 0$01 trigger solar_builded and IsOk(Lisa) and InVeh(Lisa) and not lisa_in_veh do
begin
lisa_in_veh := true;

Wait(0$02);

Say(Lisa, 'D2c-Lisa-1')
End;

Every 0$01 trigger solar_builded and IsOk(Cyrus) and InVeh(Cyrus) and not cyrus_in_veh do
var i;
begin
cyrus_in_veh := true;

i := rand(0,1);

Wait(0$02);

if i then
   Say(Cyrus, 'D2c-Cyrus-1')
  else
   Say(Cyrus, 'D2c-Cyrus-1a');
End;


Every 0$01 trigger IsInArea(Cornel, cornelKappaArea) do
var i;
begin 
DoNotAttack(3, Cornel);
send_attack_on_cornel := true;

if ru_vehicles then
   for i in ru_vehicles do
       ComAgressiveMove(i, 215, 69);

if ru_patrol then
   for i in ru_patrol do
       ComAgressiveMove(i, 215, 69);


if frank_send_to_scout then
   begin
   SayRadio(Frank, 'D3b-Frank-1');
   end;

Wait(0$03);

SayRadio(Cornel, 'D4-Corn-1');

repeat
 wait(0$01);
until FilterAllUnits([[f_side, 4], [f_type, unit_human], [f_not, [f_lives, 1000]]]) < 6;

if Cornel then
   begin
   SayRadio(Cornel, 'D5-Corn-1');
   SaveCharacters(Cornel, mission_prefix&'Cornel');
   cornel_saved := true;
   end;

ChangeSideFog(4, 8);

Wait(0$01);

NormalAttack(3, Cornel);

send_attack_on_cornel := false;
End;

// end mission
Every 0$01 trigger FilterUnitsInArea(endMArea, [f_side, 1]) or game_end do
var i, filter;
begin
enable;

if not jmm_on_west then
   begin
   YouLost('4');
   exit;
   end;

if not game_end then
   game_end := true;

filter := FilterUnitsInArea(endMArea, [f_side, 1]);

if not filter then
   exit;

for i in filter do
    begin
              
    if IsOk(i) and GetType(i) = unit_vehicle and GetNation(i) = nation_american then
       begin
       veh_on_meta := true;
       Save(IsDrivenBy(i));
       RemoveUnit(i);
       end;
    

    if IsOk(i) and GetType(i) = unit_human then
       Save(i);
    end;

End;

Export Function Save(i);
begin

    save_counter := save_counter + 1;

    // macmilan on end
    if i = JMM then
       begin

       if show_query and FilterAllUnits([[f_side, 1], [f_type, unit_human]]) > 1 then
          begin
          show_query := false;

          Case Query('Q2') of
          1: wait_for_them := true;
          2: wait_for_them := false;
          end;

          end;

       save_group := save_group ^ JMM;
       RemoveUnit(JMM);
       end; // end macmilan

    if i = Lisa then
       begin
       save_group := save_group ^ Lisa;
       RemoveUnit(Lisa);
       end;

    if i = Bobby then
       begin
       save_group := save_group ^ Bobby;
       RemoveUnit(Bobby);
       end;

    if i = Cyrus then
       begin
       save_group := save_group ^ Cyrus;
       RemoveUnit(Cyrus);
       end;

    if i = Khatam then
       begin
       save_group := save_group ^ Khatam;
       RemoveUnit(Khatam);
       end;

    if i = Frank then
       begin
       save_group := save_group ^ Frank;
       RemoveUnit(Frank);
       end;

    if IsOk(i) and GetType(i) = unit_human and (not i in save_group) then
       begin
       save_others := save_others ^ i;
       RemoveUnit(i);
       end;
End;

Every 0$01 trigger (not show_query and not wait_for_them) or FilterAllUnits([[f_side, 1], [f_type, unit_human]]) = 0 do
EndMission;

Export Function EndMission;
var i;
begin
Wait(0$02);

// medals
if solar_builded then
   AddMedal('Solar1', 1)
  else
   AddMedal('Solar1', -1);

if veh_on_meta then
   AddMedal('Solar2', 1)
  else
   if solar_builded then
      AddMedal('Solar2', -1)
     else
      AddMedal('Solar2', -2);

if lose_counter = 0 then
   AddMedal('No', 1)
    else
     if lose_counter > 0 and lose_counter < 4 then
        AddMedal('No', -1)
         else
          AddMedal('UpTo4', -1);

GiveMedals('MAIN');

if IsDead(Pokryshkin) then
   begin
   stop_talking := true;

   for i in save_group^save_others do
       AddExperience(i, skill_combat, 1500);

   stop_talking := false;
   end;

RewardPeople(save_group^save_others);

SaveCharacters(JMM, mission_prefix&'JMM');

if Bobby in save_group then
   SaveCharacters(Bobby, mission_prefix&'Bobby');

if Cyrus in save_group then
   SaveCharacters(Cyrus, mission_prefix&'Cyrus');

if Lisa in save_group then
   SaveCharacters(Lisa, mission_prefix&'Lisa');

if Frank in save_group then
   SaveCharacters(Frank, mission_prefix&'Frank');

if Khatam in save_group then
   SaveCharacters(Khatam, mission_prefix&'Khatam');

if save_others then
   SaveCharacters(save_others, '03_others');

if Bierezov and IsOk(Bierezov) and cornel_saved then
   begin
   ResetFog;
   DisplayEndingScene;
   end
  else
   DeleteCharacters(mission_prefix&'Cornel');

YouWin;
End;

Export Function DisplayEndingScene;
var i, filter, fake_cornel, fake_bierezov, fake_russians;
begin
InGameOn;

PlaceSeeing(208, 62, 1, -10);
RemoveSeeing(208, 62, 1);

filter := FilterAllUnits([[f_side, 3], [f_or, [f_type, unit_vehicle], [f_type, unit_human]]]);

if filter then
   for i in filter do
       RemoveUnit(i);

filter := FilterAllUnits([[f_side, 4], [f_type, unit_human]]);

if filter then
   for i in filter do
       SetLives(i, 0);


uc_side := 4;
fake_cornel := PrepareUnit('Cornell', false);
PlaceUnitXY(fake_cornel, 208, 62, false);
SetLives(fake_cornel, 100);
DoNotAttack(3, fake_cornel);
SetAttitude(4, 3, att_friend, true);

uc_side := 3;
uc_nation := 3;

InitHc;

fake_bierezov := PrepareUnit('Mikhail', false);

PrepareHuman(1, 1, 0);
fake_russians := fake_russians ^ CreateHuman;
fake_russians := fake_russians ^ CreateHuman;

PrepareHuman(2, 4, 0);
fake_russians := fake_russians ^ CreateHuman;

PlaceUnitArea(fake_bierezov, endingSceneArea, false);
ComMoveXY(fake_bierezov, 210, 63);
AddComTurnXY(fake_bierezov, 208, 62);

for i in fake_russians do
    begin
    PlaceUnitArea(i, endingSceneArea, false);

    ComMoveXY(i, 215, 67);
    AddComTurnXY(i, 208, 62);

    if GetClass(i) = 4 then
       ComHeal(i, fake_cornel);
    end;

Wait(0$01);

CenterNowOnXY(208, 62);
PlaceSeeing(208, 62, 1, -10);

Wait(0$15);

RemoveSeeing(208, 62, 1);
ResetFog;

InGameOff;
End;

Every 0$15 trigger (FilterUnitsInArea(cornelBaseArea, [f_side, 1]) and IsOk(Cornel)) or
                   GetDistUnits(NearestUnitToUnit(FilterAllUnits([f_side, 1]), Cornel), Cornel) < 30 do
begin
enable;
powell_warn := powell_warn + 1;

if powell_warn = 3 then
   begin
   YouLost('5');
   exit;
   end;

SayRadio(Powell, 'DWarn-Pow-1');
End;

