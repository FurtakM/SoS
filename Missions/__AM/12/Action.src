// Start
Every 1 do
var i;
begin
    TeleportExit(ruteleprt, 122, 145);
    TeleportExit(rutp, 84, 61);
    CenterNowOnUnits(IsInUnit(JMM));
    InGameOn;

   ComMoveXY(FilterAllUnits([f_side, 1]), 130, 103);
   AddComMoveXY(i, 114, 102);

    Say(JMM, 'D1-JMM-1');
    CenterNowOnUnits(IsInUnit(JMM));

    if IsOk(Donaldson) then
    begin
      Say(Donaldson, 'D1-Don-1');
      CenterNowOnUnits(IsInUnit(JMM));
      Say(JMM, 'D1-JMM-2');
      CenterNowOnUnits(IsInUnit(JMM));
      Say(Donaldson, 'D1-Don-2');
      CenterNowOnUnits(IsInUnit(JMM));
    end;
    AddComMoveXY(FilterAllUnits([f_side, 1]), 110, 101);
    wait(0$1);
    CenterNowOnUnits(IsInUnit(JMM));
    wait(0$1);
    CenterNowOnUnits(IsInUnit(JMM));
    wait(0$1);
    CenterNowOnUnits(IsInUnit(JMM));
    wait(0$1);
    CenterNowOnUnits(IsInUnit(JMM));

end;

// Near river
Every 0$1 trigger SeeXY(1, 102, 94) do
var i;
begin
    CenterOnXY(102, 94);
    DialogRandom(FilterAllUnits([[f_side, 1], [f_sex, 1], [f_or, [f_class, 1], [f_class, 2], [f_class, 3], [f_class, 4], [f_class, 5], [f_class, 8]]]), 'D1-Sol1-2', '');
    Say(JMM, 'D1-JMM-3');
    ChangeMissionObjectives('M1');

    for i in FilterAllUnits([f_side, 1]) do
        ComMoveXY(i, 95, 84);

end;

// Bazooker attack ambush
Every 0$1 do 
var i, bazook_list, your_units, dec;
begin
    bazook_list = FilterUnitsInArea(RussianBazookersSpawn, [[f_side, 3], [f_class, 9]]);
    your_units = FilterAllUnits([[f_side, 1]]);
    enable;

    for i in your_units do
    begin
        if See(3, i) then
        begin
            Disable;
            ComTimeShift(bazook_list, 96, 85);
            AddComTimeShift(bazook_list, 96, 85);
            AddComTimeShift(bazook_list, 96, 85);
            AddComTimeShift(bazook_list, 96, 85);
            AddComTimeShift(bazook_list, 96, 85);
            AddComTimeShift(bazook_list, 96, 85);

            wait(0$2);

            Say(JMM, 'D1a-JMM-1');
            Say(Donaldson, 'D1a-Don-1');

            for i in FilterAllUnits([f_side, 1]) do ComMoveXY(i, 109, 102);

            Say(JMM, 'D1a-JMM-2');
            wait(0$10);
            CenterNowOnUnits(IsInUnit(JMM));
            Say(Donaldson, 'D1b-Don-1');
            Say(JMM, 'D1b-JMM-1');
            DialogRandom(FilterAllUnits([[f_side, 1], [f_sex, 1], [f_or, [f_class, 1], [f_class, 2], [f_class, 3], [f_class, 4],  [f_class, 5], [f_class, 8]]]), 'D1b-Sol1-1', '');
            Say(Donaldson, 'D1b-Don-2');
            Say(JMM, 'D1b-JMM-2');

            dec = ShowQuery1;

            if dec = 1 then
            begin
                Say(JMM, 'D2-JMM-1');
                SayRadio(Powell, 'D2-Pow-1');
                Say(JMM, 'D2a-JMM-1');
                SayRadio(Powell, 'D2a-Pow-1');
                Say(JMM, 'D2a-JMM-2');
                SayRadio(Powell, 'D2a-Pow-2');
                Say(JMM, 'D2a-JMM-3');
                SayRadio(Powell, 'D2a-Pow-3');
                secondPass = 2;
            end;

            if dec = 2 then
            begin
                Say(JMM, 'D2-JMM-1');
                SayRadio(Powell, 'D2-Pow-1');
                Say(JMM, 'D2b-JMM-1');
                SayRadio(Powell, 'D2b-Pow-1');
                Say(JMM, 'D2c-JMM-1');
                SayRadio(Powell, 'D2c-Pow-1');
                Say(JMM, 'D2c-JMM-2');
                secondPass = 2;
            end;

            if dec = 3 then secondPass = 1;

            InGameOff;
            ruAI = 1;
            SetAttitude(1, 3, att_enemy, true);
            SaveForQuickRestart;
            exit;

                
        end;
    end;

end;

// Powell's support
Every 1$0 trigger secondPass = 2 do
begin
    PowellSupport1;
    DialogueOn;
    Say(JMM, 'DC1-JMM-1');
    SayRadio(Powell, 'DC1-Pow-1');
    DialogueOff;
    wait(3$0);
    PowellSupport2;
    DialogueOn;
    Say(JMM, 'DC2-JMM-1');
    SayRadio(Powell, 'DC2-Pow-1');
    DialogueOff;

    wait(3$00);

    repeat
     wait(0$1);
    until FilterAllUnits([[f_side, 1], [f_or, [f_btype, b_depot], [f_btype, b_warehouse]]]) and not FilterUnitsInArea(OutsideArea1, [f_side, 3]);

    wait(0$10);

    Legion;

    wait(6$0);
    PowellSupport3;
    DialogueOn;
    SayRadio(Powell, 'DC3-Pow-1');
    Say(JMM, 'DC3-JMM-1');
    DialogueOff;
end;

// Kurt
Export Function Legion;
var i, dec1, dec2, tmp, tmp2, tmp3, crates, oil, siberite, cr, sb, payForNeutral, payForHelp, query1, query2;
begin
tmp = FilterAllUnits([[f_side, 1], [f_type, unit_building], [f_or, [f_btype, b_depot], [f_btype, b_warehouse]]]);

crates := 0;
oil := 0;
siberite := 0;

payForNeutral := false;
payForHelp := false;

for i in tmp do
    begin
    crates := crates + GetResourceType(GetBase(i), 1);
    oil := oil + GetResourceType(GetBase(i), 2);
    siberite := siberite + GetResourceType(GetBase(i), 3);
    end;

PrepareKurt;

if not Kurt then
   exit;

ComMoveXY(KurtVeh, 144, 111);
wait(0$2);    
PlaceSeeing(167, 121, 1, -10);

ComExitVehicle(Kurt);
CenterNowOnUnits(Kurt);

wait(0$1);

DialogueOn;
DialogRandom(FilterAllUnits([[f_side, 1], [f_sex, 1], [f_or, [f_class, 1], [f_class, 2], [f_class, 3], [f_class, 4],  [f_class, 5], [f_class, 8]]]), 'D3-Sol1-1', '');

if KurtStatus then
   begin
   Say(Kurt, 'D3-Kurt-1');
   Say(JMM, 'D3-JMM-1');
   Say(Kurt, 'D3-Kurt-2');
   Say(JMM, 'D3-JMM-2');
   Say(Kurt, 'D3-Kurt-4');
   Say(JMM, 'D3-JMM-4');
   Say(Kurt, 'D3-Kurt-5');
   Say(Kurt, 'D3-Kurt-5a');
   end
else
   begin
   Say(Kurt, 'D3-Kurt-1');
   Say(JMM, 'D3-JMM-1');
   Say(Kurt, 'D3-Kurt-3');
   Say(JMM, 'D3-JMM-3');
   Say(Kurt, 'D3-Kurt-4');
   Say(JMM, 'D3-JMM-4');
   Say(Kurt, 'D3-Kurt-5');
   Say(Kurt, 'D3-Kurt-5b');
   end;
        
if crates >= [120, 60][KurtStatus + 1] and siberite >= [120, 60][KurtStatus + 1] then
   dec1 = SelectiveQuery(['Q2', 'Q2K'][KurtStatus + 1], [1, 2, 3, 4])
else
   dec1 = SelectiveQuery(['Q2', 'Q2K'][KurtStatus + 1], [1, 3, 4]);

if dec1 = 1 then  // odrzuæ oferte
   begin
   Say(JMM, 'D3Ka-JMM-1');
   Say(Kurt, 'D3Ka-Kurt-1');
   warWithLegion = 1;
   end;

if dec1 = 2 then  // zap³ac za neutralnosc
   begin
   Say(JMM, 'D3Kb-JMM-1');
   Say(Kurt, 'D3Kb-Kurt-1');

   cr := [120, 60][KurtStatus + 1];
   sb := [120, 60][KurtStatus + 1];

   payForNeutral := true;
   end;

if dec1 = 3 then // powiedz ze cie nie staæ
   begin
   Say(JMM, 'D3Kc1-JMM-1');
   Say(Kurt, 'D3Kc1-Kurt-1');
   Say(JMM, 'D3Kc1-JMM-2');
   Say(Kurt, 'D3Kc1-Kurt-2');
   askSiberite = 1;

   dec2 = SelectiveQuery('Q2b', [1, 2, 3]);
           
   if dec2 = 1 then // nic nie mow
      begin
      Say(JMM, 'D4a-JMM-1');
      Say(Kurt, 'D4b-Kurt-1');
      warWithLegion = 1;
      end;

   if dec2 = 2 then // nic nie wiesz
      begin
      Say(JMM, 'D4b-JMM-1');
      Say(Kurt, 'D4b-Kurt-1');
      warWithLegion = 1;
      end;

   if dec2 = 3 then // fake info
      begin
      Say(JMM, 'D4c-JMM-1');
      Say(Kurt, 'D4c-Kurt-1');
      Say(JMM, 'D4c-JMM-2');
      Say(Kurt, 'D4c-Kurt-2');
      fakeInfo = 1;
      end; 
   end;

if dec1 = 4 then // zapytaj czy stan¹ po twojej stronie
   begin
   Say(JMM, 'D3Kd-JMM-1');

   if crates >= [200, 120][KurtStatus + 1] and siberite >= [200, 120][KurtStatus + 1] then
      dec2 = SelectiveQuery(['Q2a', 'Q2aK'][KurtStatus + 1], [1, 2, 3, 4])
   else if crates >= [120, 60][KurtStatus + 1] and siberite >= [120, 60][KurtStatus + 1] then
      dec2 = SelectiveQuery(['Q2a', 'Q2aK'][KurtStatus + 1], [1, 2, 4])
   else
      begin
      dec2 := 0;
      Say(JMM, 'D3Kc1-JMM-1');
      Say(Kurt, 'D3Kc2-Kurt-1');
      warWithLegion := 1;
      end;

   if dec2 = 1 then  // odrzuæ obie oferty
      begin
      Say(JMM, 'D5Ka-JMM-1');
      Say(Kurt, 'D5Ka-Kurt-1');
      warWithLegion = 1;
      end;

   if dec2 = 2 then  // zap³aæ za neutralnoœæ
      begin
      Say(JMM, 'D3Kb-JMM-1');
      Say(Kurt, 'D3Kb-Kurt-1');

      cr := [120, 60][KurtStatus + 1];
      sb := [120, 60][KurtStatus + 1];

      payForNeutral := true;
      end;

   if dec2 = 3 then  // zaplac za pomoc
      begin
      Say(JMM, 'D3Ke-JMM-1');
      Say(Kurt, 'D3Ke-Kurt-1');

      cr := [200, 120][KurtStatus + 1];
      sb := [200, 120][KurtStatus + 1];

      payForHelp := true;
      end;

   if dec2 = 4 then // powiedz ze cie nie stac
      begin
      Say(JMM, 'D3Kc1-JMM-1');
      Say(Kurt, 'D3Kc1-Kurt-1');
      Say(JMM, 'D3Kc1-JMM-2');
      Say(Kurt, 'D3Kc1-Kurt-2');
      askSiberite = 1;
                    
      dec2 = SelectiveQuery('Q2b', [1, 2, 3]);

      if dec2 = 1 then // nic nie mow
         begin
         Say(JMM, 'D4a-JMM-1');
         Say(Kurt, 'D4b-Kurt-1');
         warWithLegion = 1;
         end;

      if dec2 = 2 then // nic nie wiesz
         begin
         Say(JMM, 'D4b-JMM-1');
         Say(Kurt, 'D4b-Kurt-1');
         warWithLegion = 1;
         end;

      if dec2 = 3 then // fake info
         begin
         Say(JMM, 'D4c-JMM-1');
         Say(Kurt, 'D4c-Kurt-1');
         Say(JMM, 'D4c-JMM-2');
         Say(Kurt, 'D4c-Kurt-2');
         fakeInfo = 1;
         end;
      end;

   if payForNeutral or payForHelp then
      begin

      for i in tmp do
          begin
          tmp2 := GetResourceType(GetBase(i), 1);
          tmp3 := GetResourceType(GetBase(i), 3);

          if cr then
             begin
             if tmp2 and tmp2 < cr then
                begin
                SetResourceType(GetBase(i), 1, cr - tmp2);
                cr := cr - tmp2;
                end
             else
                if tmp2 > cr then
                   begin
                   SetResourceType(GetBase(i), 1, tmp2 - cr);
                   cr := 0;
                   end;
             end;

             if sb then
                begin
                if tmp3 and tmp3 < sb then
                   begin
                   SetResourceType(GetBase(i), 3, sb - tmp3);
                   sb := sb - tmp3;
                   end
                else
                   if tmp3 > sb then
                      begin
                      SetResourceType(GetBase(i), 3, tmp3 - sb);
                      sb := 0;
                      end;
                end;
             end;
          end;

      end;

DialogueOff;

RemoveSeeing(167, 121, 1);

ComEnterUnit(Kurt, KurtVeh);
wait(0$1);
ComMoveToArea(KurtVeh, PlayerSpawn);
wait(0$3);
RemoveUnit(Kurt);
RemoveUnit(KurtVeh);

wait(0$3);

if payForHelp then
   PrepareLegionForPlayer;
End;

// Spawn enemy Legion
Every 0$10 trigger warWithLegion = 1 do
PrepareAttackLegion;

// Set side cargos
Every 0$1 trigger IsPlaced(amCargo1) and not GetCargo(amCargo1, 1) and not GetCargo(amCargo1, 2) and not GetCargo(amCargo1, 3) do SetSide(amCargo1, 4);
Every 0$1 trigger IsPlaced(amCargo2) and not GetCargo(amCargo2, 1) and not GetCargo(amCargo2, 2) and not GetCargo(amCargo2, 3) do SetSide(amCargo2, 4);
Every 0$1 trigger IsPlaced(amCargo3) and not GetCargo(amCargo3, 1) and not GetCargo(amCargo3, 2) and not GetCargo(amCargo3, 3) do SetSide(amCargo3, 4);
Every 0$1 trigger IsPlaced(amCargo4) and not GetCargo(amCargo4, 1) and not GetCargo(amCargo4, 2) and not GetCargo(amCargo4, 3) do SetSide(amCargo4, 4);
Every 0$1 trigger IsPlaced(amCargo5) and not GetCargo(amCargo5, 1) and not GetCargo(amCargo5, 2) and not GetCargo(amCargo5, 3) and not GetCargo(amCargo5, 2)  do SetSide(amCargo5, 4);
Every 0$1 trigger IsPlaced(amCargo6) and not GetCargo(amCargo6, 1) and not GetCargo(amCargo6, 2) and not GetCargo(amCargo6, 3) do SetSide(amCargo6, 4);
Every 0$1 trigger IsPlaced(amCargo7) and not GetCargo(amCargo7, 1) and not GetCargo(amCargo7, 2) and not GetCargo(amCargo7, 3) do SetSide(amCargo7, 4);

// Remove cargo from map
Every 0$1 do
var i;
begin
    enable;
    for i in FilterAllUnits([f_side, 4]) do
    begin
        ComMoveToArea(i, PlayerSpawn);
        if IsInArea(i, PlayerSpawn) then RemoveUnit(i);
    end;
end;

// Second query if you select option 3 in first query.
Every 0$1 trigger secondPass = 1 do 
var i, enemyVehs, dec;
begin
    enable;
    enemyVehs = FilterUnitsInArea(HillArea1, [[f_side, 3], [f_type, unit_vehicle]]);

    for i in enemyVehs do
    begin
        if See(1, i) then
        begin
            Disable; 
            DialogueOn;
            CenterNowOnUnits(i);
            DialogRandom(FilterAllUnits([[f_side, 1], [f_sex, 1], [f_or, [f_class, 1], [f_class, 2], [f_class, 3], [f_class, 4],  [f_class, 5], [f_class, 8]]]),  'DT1-Sol1-1', 'DT1-FSol1-1');
            dec = ShowQuery2;

            if dec = 1 then
            begin
                Say(JMM, 'D2-JMM-1');
                SayRadio(Powell, 'D2-Pow-1');
                Say(JMM, 'D2a-JMM-1');
                SayRadio(Powell, 'D2a-Pow-1');
                Say(JMM, 'D2a-JMM-2');
                SayRadio(Powell, 'D2a-Pow-2');
                Say(JMM, 'D2a-JMM-3');
                SayRadio(Powell, 'D2a-Pow-3');
                secondPass = 2;
            end;

            if dec = 2 then
            begin
                Say(JMM, 'D2-JMM-1');
                SayRadio(Powell, 'D2-Pow-1');
                Say(JMM, 'D2b-JMM-1');
                SayRadio(Powell, 'D2b-Pow-1');
                Say(JMM, 'D2c-JMM-1');
                SayRadio(Powell, 'D2c-Pow-1');
                Say(JMM, 'D2c-JMM-2');
                secondPass = 2;
            end;
            DialogueOff; 
            exit;    
        end;
    end;
end;

// First tep
Every 0$1 trigger vehicleTeleported = 1 do
var i, vehicles;
begin
    vehicles = FilterUnitsInArea(OutsideArea1, [[f_side, 3], [f_lives, 250]]);
    enable;

    for i in vehicles do
    begin
        if See(1, i) and vehicleTeleported = 1 and tpCounter <= 4 then
        begin
            Disable;
            DialogueOn;
            DialogRandom(FilterAllUnits([[f_side, 1], [f_sex, 1], [f_or, [f_class, 1], [f_class, 2], [f_class, 3], [f_class, 4],  [f_class, 5], [f_class, 8]]]), 'DT1-Sol1-1', 'DT1-FSol1-1');
            Say(JMM, 'DT1-JMM-1');
            DialogueOff;
            break;
        end;
    end;

end;

// Dialog after destroy tanks
Every 0$10 trigger vehicleTeleported = 1 and FilterUnitsInArea(OutsideArea1, [[f_side, 3], [f_lives, 251], [f_or, [f_type, unit_vehicle], [f_type, unit_human]]]) = 0 and tpCounter do
begin
    vehicleTeleported = 2;
    DialogueOn;
    Say(JMM, 'DT1a-JMM-1');
    DialogRandom(FilterAllUnits([[f_side, 1], [f_sex, 1], [f_or, [f_class, 1], [f_class, 2], [f_class, 3], [f_class, 4],  [f_class, 5], [f_class, 8]]]), 'DT1a-Sol1-1', 'DT1a-FSol1-1');
    Say(JMM, 'DT1a-JMM-2');
    DialogueOff;
end;

// Second tp
Every 0$2 trigger vehicleTeleported = 3 and FilterUnitsInArea(OutsideArea1, [[f_side, 3], [f_see, 1]])  do
var i, vehicles, speaker;
begin

   wait(0$0.3);

   DialogueOn;
   speaker := DialogRandom(FilterAllUnits([[f_side, 1], [f_sex, 1], [f_or, [f_class, 1], [f_class, 2], [f_class, 3], [f_class, 4],  [f_class, 5], [f_class, 8]]]), 'DT2-Sol1-1', 'DT2-FSol1-1');
   DialogueOff;   

   repeat
    wait(0$1);
   until FilterUnitsInArea(OutsideArea1, [[f_side, 3], [f_lives, 250]]) = 0;

   wait(0$2);

   vehicleTeleported = 4;
   DialogueOn;
   Say(JMM, 'DT2a-JMM-1');

   if speaker then
      if GetSex(speaker) = 1 then
         Say(speaker, 'DT2a-Sol1-1')
      else
         Say(speaker, 'DT2a-FSol1-1');

   Say(Donaldson, 'DT2a-Don-1');
   DialogueOff;
end;


// See bridge
Every 0$1 trigger SeeXY(1, 45, 74) do
begin
    DialogueOn;
    CenterOnXY(36, 55);
    DialogRandom(FilterAllUnits([[f_side, 1], [f_sex, 1], [f_or, [f_class, 1], [f_class, 2], [f_class, 3], [f_class, 4],  [f_class, 5], [f_class, 8]]]), 'D5-Sol1-1', 'D5-FSol1-');

    if warWithLegion and IsOk(Donaldson) then
       Say(Donaldson, 'D5-Don-1');

    DialogueOff;
end;

// See tp
Every 0$1 trigger See(1, ruteleprt) or See(1, rutp) do
begin
    DialogueOn;
    DialogRandom(FilterAllUnits([[f_side, 1], [f_sex, 1], [f_or, [f_class, 1], [f_class, 2], [f_class, 3], [f_class, 4],  [f_class, 5], [f_class, 8]]]), 'DT3-Sol1-1', 'DT3-FSol1-1');
    Say(JMM, 'DT3-JMM-1');
    DialogueOff;
    ChangeMissionObjectives('M2');
end;

// attack vehs
Every 0$1 trigger ruEscape = 0 do
var i;
begin
     enable;

     for i in FilterUnitsInArea(RuEastBase, [[f_side, 3], [f_type, unit_vehicle], [f_empty]]) do
         if GetLives(i) < 1000 then ruEscape = 1;

end;


// Escape
Every 0$1 trigger IsDying(ruheadlab) or IsDying(rueastdepot) or FilterUnitsInArea(EscapeTriggerArea, [f_side, 1]) > 0 or ruEscape = 1 do
var i,j, vehs;
begin
    ruAI = 0;
    vehs = FilterUnitsInArea(RuEastBase, [[f_side, 3], [f_type, unit_vehicle], [f_empty]]);

    ComExitBuilding(RuScientists);
    wait(0$1);

    DialogueOn;
    Say(JMM, 'D6-JMM-1');
    DialogueOff;

    if vehs > 0 then
       for i := 1 to RuScientists do ComEnterUnit(UnitFilter(RuScientists[i], [f_not, [f_hastask]]), vehs[i])
    else ComMoveToArea(UnitFilter(RuScientists[i], [f_not, [f_hastask]]), [EscapeArea1, EscapeArea2][Rand(1,2)]);


end;

// Remove sci from map
Every 0$0.3 trigger ruAI = 0 do
var i, unit, veh, tmp;
begin
enable;

    if UnitFilter(RuScientists, [f_or, [f_inarea, EscapeArea1], [f_inarea, EscapeArea2]]) or FilterAllUnits([[f_control, control_manual], [f_nation, 3], [f_or, [f_inarea, EscapeArea1], [f_inarea, EscapeArea2]]]) then
    begin

        unit := UnitFilter(RuScientists, [f_or, [f_inarea, EscapeArea1], [f_inarea, EscapeArea2]])[1];

        if not unit then
        begin
            tmp := FilterAllUnits([[f_or, [f_inarea, EscapeArea1], [f_inarea, EscapeArea2]], [f_control, control_manual], [f_nation, 3]]);

            if not tmp then exit;

            for i in tmp do
                if IsDrivenBy(i) in RuScientists then
                begin
                        unit := IsDrivenBy(i);
                        veh := i;
                        break;
                    end;
                end;
        end;

        if not unit then
        exit;

    RuScientists = RuScientists diff unit;
    RemoveUnit(unit);

if veh then
begin
   if GetWeapon(veh) = 49 then KillUnit(veh)
   else RemoveUnit(veh);
end;


End;