// starting begin ResetFog ;
   0: CALL_OW 335
// AnimateTrees ( true ) ;
   4: LD_INT 1
   6: PPUSH
   7: CALL_OW 573
// InitVariables ;
  11: CALL 123 0 0
// PrepareNature ;
  15: CALL 30218 0 0
// PrepareAlliance ;
  19: CALL 225 0 0
// PrepareFriends ;
  23: CALL 3357 0 0
// PrepareAmerican ;
  27: CALL 662 0 0
// PlaceSeeing ( 91 , 70 , 7 , - 32178 ) ;
  31: LD_INT 91
  33: PPUSH
  34: LD_INT 70
  36: PPUSH
  37: LD_INT 7
  39: PPUSH
  40: LD_INT 32178
  42: NEG
  43: PPUSH
  44: CALL_OW 330
// RemoveSeeing ( 91 , 70 , 7 ) ;
  48: LD_INT 91
  50: PPUSH
  51: LD_INT 70
  53: PPUSH
  54: LD_INT 7
  56: PPUSH
  57: CALL_OW 331
// if debug then
  61: LD_EXP 1
  65: IFFALSE 106
// begin SetAttitude ( 1 , 7 , att_enemy , true ) ;
  67: LD_INT 1
  69: PPUSH
  70: LD_INT 7
  72: PPUSH
  73: LD_INT 2
  75: PPUSH
  76: LD_INT 1
  78: PPUSH
  79: CALL_OW 80
// RemoveUnit ( Powell ) ;
  83: LD_EXP 14
  87: PPUSH
  88: CALL_OW 64
// DoNotAttack ( 1 , JMM ) ;
  92: LD_INT 1
  94: PPUSH
  95: LD_EXP 12
  99: PPUSH
 100: CALL_OW 471
// end else
 104: GO 110
// Action ;
 106: CALL 30554 0 0
// PreparePatrol ;
 110: CALL 1010 0 0
// game := true ;
 114: LD_ADDR_EXP 2
 118: PUSH
 119: LD_INT 1
 121: ST_TO_ADDR
// end ;
 122: END
// export debug , game , selected , friends , reached_lab , can_escape , on_hill , friends_kill_counter , team_kill_counter , gamma_commander , extra_patrol ; export function InitVariables ; begin
 123: LD_INT 0
 125: PPUSH
// debug := false ;
 126: LD_ADDR_EXP 1
 130: PUSH
 131: LD_INT 0
 133: ST_TO_ADDR
// friends := [ ] ;
 134: LD_ADDR_EXP 4
 138: PUSH
 139: EMPTY
 140: ST_TO_ADDR
// selected := [ ] ;
 141: LD_ADDR_EXP 3
 145: PUSH
 146: EMPTY
 147: ST_TO_ADDR
// reached_lab := false ;
 148: LD_ADDR_EXP 5
 152: PUSH
 153: LD_INT 0
 155: ST_TO_ADDR
// can_escape := false ;
 156: LD_ADDR_EXP 6
 160: PUSH
 161: LD_INT 0
 163: ST_TO_ADDR
// game := false ;
 164: LD_ADDR_EXP 2
 168: PUSH
 169: LD_INT 0
 171: ST_TO_ADDR
// gamma_commander := LoadVariable ( GammaCommander , 2 ) ;
 172: LD_ADDR_EXP 10
 176: PUSH
 177: LD_STRING GammaCommander
 179: PPUSH
 180: LD_INT 2
 182: PPUSH
 183: CALL_OW 30
 187: ST_TO_ADDR
// friends_kill_counter := 0 ;
 188: LD_ADDR_EXP 8
 192: PUSH
 193: LD_INT 0
 195: ST_TO_ADDR
// team_kill_counter := 0 ;
 196: LD_ADDR_EXP 9
 200: PUSH
 201: LD_INT 0
 203: ST_TO_ADDR
// extra_patrol := true ;
 204: LD_ADDR_EXP 11
 208: PUSH
 209: LD_INT 1
 211: ST_TO_ADDR
// on_hill := false ;
 212: LD_ADDR_EXP 7
 216: PUSH
 217: LD_INT 0
 219: ST_TO_ADDR
// end ; end_of_file
 220: LD_VAR 0 1
 224: RET
// export JMM , Roth ; export function PrepareAlliance ; var cargo ; begin
 225: LD_INT 0
 227: PPUSH
 228: PPUSH
// uc_side := 7 ;
 229: LD_ADDR_OWVAR 20
 233: PUSH
 234: LD_INT 7
 236: ST_TO_ADDR
// uc_nation := 1 ;
 237: LD_ADDR_OWVAR 21
 241: PUSH
 242: LD_INT 1
 244: ST_TO_ADDR
// JMM := PrepareUnit ( JMM , ( not debug ) , 11_ ) ;
 245: LD_ADDR_EXP 12
 249: PUSH
 250: LD_STRING JMM
 252: PPUSH
 253: LD_EXP 1
 257: NOT
 258: PPUSH
 259: LD_STRING 11_
 261: PPUSH
 262: CALL 5642 0 3
 266: ST_TO_ADDR
// uc_side := 4 ;
 267: LD_ADDR_OWVAR 20
 271: PUSH
 272: LD_INT 4
 274: ST_TO_ADDR
// Roth := NewCharacter ( Roth ) ;
 275: LD_ADDR_EXP 13
 279: PUSH
 280: LD_STRING Roth
 282: PPUSH
 283: CALL_OW 25
 287: ST_TO_ADDR
// SetDir ( JMM , 1 ) ;
 288: LD_EXP 12
 292: PPUSH
 293: LD_INT 1
 295: PPUSH
 296: CALL_OW 233
// SetClass ( JMM , 1 ) ;
 300: LD_EXP 12
 304: PPUSH
 305: LD_INT 1
 307: PPUSH
 308: CALL_OW 336
// PlaceUnitXY ( JMM , 105 , 10 , false ) ;
 312: LD_EXP 12
 316: PPUSH
 317: LD_INT 105
 319: PPUSH
 320: LD_INT 10
 322: PPUSH
 323: LD_INT 0
 325: PPUSH
 326: CALL_OW 48
// SetDir ( Roth , 4 ) ;
 330: LD_EXP 13
 334: PPUSH
 335: LD_INT 4
 337: PPUSH
 338: CALL_OW 233
// PlaceUnitXY ( Roth , 109 , 10 , false ) ;
 342: LD_EXP 13
 346: PPUSH
 347: LD_INT 109
 349: PPUSH
 350: LD_INT 10
 352: PPUSH
 353: LD_INT 0
 355: PPUSH
 356: CALL_OW 48
// ComTurnUnit ( JMM , Roth ) ;
 360: LD_EXP 12
 364: PPUSH
 365: LD_EXP 13
 369: PPUSH
 370: CALL_OW 119
// ComTurnUnit ( Roth , JMM ) ;
 374: LD_EXP 13
 378: PPUSH
 379: LD_EXP 12
 383: PPUSH
 384: CALL_OW 119
// PrepareVehicle ( us_medium_tracked , engine_siberite , control_computer , us_cargo_bay , 100 ) ;
 388: LD_INT 3
 390: PPUSH
 391: LD_INT 3
 393: PPUSH
 394: LD_INT 3
 396: PPUSH
 397: LD_INT 12
 399: PPUSH
 400: LD_INT 100
 402: PPUSH
 403: CALL 5705 0 5
// cargo := CreateVehicle ;
 407: LD_ADDR_VAR 0 2
 411: PUSH
 412: CALL_OW 45
 416: ST_TO_ADDR
// SetDir ( cargo , 1 ) ;
 417: LD_VAR 0 2
 421: PPUSH
 422: LD_INT 1
 424: PPUSH
 425: CALL_OW 233
// PlaceUnitXY ( cargo , 179 , 45 , false ) ;
 429: LD_VAR 0 2
 433: PPUSH
 434: LD_INT 179
 436: PPUSH
 437: LD_INT 45
 439: PPUSH
 440: LD_INT 0
 442: PPUSH
 443: CALL_OW 48
// SetCargo ( cargo , mat_artifact , 30 ) ;
 447: LD_VAR 0 2
 451: PPUSH
 452: LD_INT 4
 454: PPUSH
 455: LD_INT 30
 457: PPUSH
 458: CALL_OW 290
// if LoadVariable ( 11_artifact_captured , 0 ) then
 462: LD_STRING 11_artifact_captured
 464: PPUSH
 465: LD_INT 0
 467: PPUSH
 468: CALL_OW 30
 472: IFFALSE 529
// begin cargo := CreateVehicle ;
 474: LD_ADDR_VAR 0 2
 478: PUSH
 479: CALL_OW 45
 483: ST_TO_ADDR
// SetDir ( cargo , 0 ) ;
 484: LD_VAR 0 2
 488: PPUSH
 489: LD_INT 0
 491: PPUSH
 492: CALL_OW 233
// PlaceUnitXY ( cargo , 171 , 85 , false ) ;
 496: LD_VAR 0 2
 500: PPUSH
 501: LD_INT 171
 503: PPUSH
 504: LD_INT 85
 506: PPUSH
 507: LD_INT 0
 509: PPUSH
 510: CALL_OW 48
// SetCargo ( cargo , mat_artifact , 50 ) ;
 514: LD_VAR 0 2
 518: PPUSH
 519: LD_INT 4
 521: PPUSH
 522: LD_INT 50
 524: PPUSH
 525: CALL_OW 290
// end ; SetSide ( amlab , 7 ) ;
 529: LD_INT 47
 531: PPUSH
 532: LD_INT 7
 534: PPUSH
 535: CALL_OW 235
// DoNotAttack ( 1 , amlab ) ;
 539: LD_INT 1
 541: PPUSH
 542: LD_INT 47
 544: PPUSH
 545: CALL_OW 471
// end ;
 549: LD_VAR 0 1
 553: RET
// every 0 0$1 trigger FilterUnitsInArea ( hill , [ f_side , 7 ] ) and not on_hill do
 554: LD_INT 38
 556: PPUSH
 557: LD_INT 22
 559: PUSH
 560: LD_INT 7
 562: PUSH
 563: EMPTY
 564: LIST
 565: LIST
 566: PPUSH
 567: CALL_OW 70
 571: PUSH
 572: LD_EXP 7
 576: NOT
 577: AND
 578: IFFALSE 609
 580: GO 582
 582: DISABLE
// begin enable ;
 583: ENABLE
// on_hill := true ;
 584: LD_ADDR_EXP 7
 588: PUSH
 589: LD_INT 1
 591: ST_TO_ADDR
// PlaceSeeing ( 126 , 13 , 7 , - 90 ) ;
 592: LD_INT 126
 594: PPUSH
 595: LD_INT 13
 597: PPUSH
 598: LD_INT 7
 600: PPUSH
 601: LD_INT 90
 603: NEG
 604: PPUSH
 605: CALL_OW 330
// end ;
 609: END
// every 0 0$1 trigger not FilterUnitsInArea ( hill , [ f_side , 7 ] ) and on_hill do
 610: LD_INT 38
 612: PPUSH
 613: LD_INT 22
 615: PUSH
 616: LD_INT 7
 618: PUSH
 619: EMPTY
 620: LIST
 621: LIST
 622: PPUSH
 623: CALL_OW 70
 627: NOT
 628: PUSH
 629: LD_EXP 7
 633: AND
 634: IFFALSE 661
 636: GO 638
 638: DISABLE
// begin enable ;
 639: ENABLE
// on_hill := false ;
 640: LD_ADDR_EXP 7
 644: PUSH
 645: LD_INT 0
 647: ST_TO_ADDR
// RemoveSeeing ( 126 , 13 , 7 ) ;
 648: LD_INT 126
 650: PPUSH
 651: LD_INT 13
 653: PPUSH
 654: LD_INT 7
 656: PPUSH
 657: CALL_OW 331
// end ; end_of_file
 661: END
// export Powell , mobile_patrol , mobile_points , powell_guards , defenders , defcon , defcon_wave ; export function PrepareAmerican ; var i , j , b , un ; begin
 662: LD_INT 0
 664: PPUSH
 665: PPUSH
 666: PPUSH
 667: PPUSH
 668: PPUSH
// defcon := 0 ;
 669: LD_ADDR_EXP 19
 673: PUSH
 674: LD_INT 0
 676: ST_TO_ADDR
// defcon_wave := 0 ;
 677: LD_ADDR_EXP 20
 681: PUSH
 682: LD_INT 0
 684: ST_TO_ADDR
// defenders := [ ] ;
 685: LD_ADDR_EXP 18
 689: PUSH
 690: EMPTY
 691: ST_TO_ADDR
// SetBName ( alfa , alpha ) ;
 692: LD_INT 5
 694: PPUSH
 695: LD_STRING alpha
 697: PPUSH
 698: CALL_OW 500
// uc_side := 1 ;
 702: LD_ADDR_OWVAR 20
 706: PUSH
 707: LD_INT 1
 709: ST_TO_ADDR
// uc_nation := 1 ;
 710: LD_ADDR_OWVAR 21
 714: PUSH
 715: LD_INT 1
 717: ST_TO_ADDR
// Powell := NewCharacter ( Powell ) ;
 718: LD_ADDR_EXP 14
 722: PUSH
 723: LD_STRING Powell
 725: PPUSH
 726: CALL_OW 25
 730: ST_TO_ADDR
// PlaceUnitXY ( Powell , 110 , 26 , false ) ;
 731: LD_EXP 14
 735: PPUSH
 736: LD_INT 110
 738: PPUSH
 739: LD_INT 26
 741: PPUSH
 742: LD_INT 0
 744: PPUSH
 745: CALL_OW 48
// ComHold ( Powell ) ;
 749: LD_EXP 14
 753: PPUSH
 754: CALL_OW 140
// for i = 1 to 5 do
 758: LD_ADDR_VAR 0 2
 762: PUSH
 763: DOUBLE
 764: LD_INT 1
 766: DEC
 767: ST_TO_ADDR
 768: LD_INT 5
 770: PUSH
 771: FOR_TO
 772: IFFALSE 828
// begin PrepareHuman ( false , 1 , 10 ) ;
 774: LD_INT 0
 776: PPUSH
 777: LD_INT 1
 779: PPUSH
 780: LD_INT 10
 782: PPUSH
 783: CALL_OW 380
// powell_guards := Insert ( powell_guards , 1 , CreateHuman ) ;
 787: LD_ADDR_EXP 17
 791: PUSH
 792: LD_EXP 17
 796: PPUSH
 797: LD_INT 1
 799: PPUSH
 800: CALL_OW 44
 804: PPUSH
 805: CALL_OW 2
 809: ST_TO_ADDR
// PlaceHumanInUnit ( powell_guards [ 1 ] , ambar0 ) ;
 810: LD_EXP 17
 814: PUSH
 815: LD_INT 1
 817: ARRAY
 818: PPUSH
 819: LD_INT 18
 821: PPUSH
 822: CALL_OW 52
// end ;
 826: GO 771
 828: POP
 829: POP
// if Difficulty > 2 then
 830: LD_OWVAR 67
 834: PUSH
 835: LD_INT 2
 837: GREATER
 838: IFFALSE 887
// begin bc_type := b_turret ;
 840: LD_ADDR_OWVAR 42
 844: PUSH
 845: LD_INT 33
 847: ST_TO_ADDR
// bc_level := 7 ;
 848: LD_ADDR_OWVAR 43
 852: PUSH
 853: LD_INT 7
 855: ST_TO_ADDR
// b := CreateAndPlaceBuildingXYD ( 107 , 55 , 5 ) ;
 856: LD_ADDR_VAR 0 4
 860: PUSH
 861: LD_INT 107
 863: PPUSH
 864: LD_INT 55
 866: PPUSH
 867: LD_INT 5
 869: PPUSH
 870: CALL_OW 47
 874: ST_TO_ADDR
// PlaceWeaponTurret ( b , us_rocket_launcher ) ;
 875: LD_VAR 0 4
 879: PPUSH
 880: LD_INT 7
 882: PPUSH
 883: CALL_OW 431
// end ; for i in FilterAllUnits ( [ [ f_side , 1 ] , [ f_btype , b_factory ] ] ) ^ FilterAllUnits ( [ [ f_side , 1 ] , [ f_btype , b_control_tower ] ] ) do
 887: LD_ADDR_VAR 0 2
 891: PUSH
 892: LD_INT 22
 894: PUSH
 895: LD_INT 1
 897: PUSH
 898: EMPTY
 899: LIST
 900: LIST
 901: PUSH
 902: LD_INT 30
 904: PUSH
 905: LD_INT 3
 907: PUSH
 908: EMPTY
 909: LIST
 910: LIST
 911: PUSH
 912: EMPTY
 913: LIST
 914: LIST
 915: PPUSH
 916: CALL_OW 69
 920: PUSH
 921: LD_INT 22
 923: PUSH
 924: LD_INT 1
 926: PUSH
 927: EMPTY
 928: LIST
 929: LIST
 930: PUSH
 931: LD_INT 30
 933: PUSH
 934: LD_INT 36
 936: PUSH
 937: EMPTY
 938: LIST
 939: LIST
 940: PUSH
 941: EMPTY
 942: LIST
 943: LIST
 944: PPUSH
 945: CALL_OW 69
 949: ADD
 950: PUSH
 951: FOR_IN
 952: IFFALSE 1003
// for j = 1 to 3 do
 954: LD_ADDR_VAR 0 3
 958: PUSH
 959: DOUBLE
 960: LD_INT 1
 962: DEC
 963: ST_TO_ADDR
 964: LD_INT 3
 966: PUSH
 967: FOR_TO
 968: IFFALSE 999
// begin PrepareHuman ( false , 3 , 6 ) ;
 970: LD_INT 0
 972: PPUSH
 973: LD_INT 3
 975: PPUSH
 976: LD_INT 6
 978: PPUSH
 979: CALL_OW 380
// PlaceHumanInUnit ( CreateHuman , i ) ;
 983: CALL_OW 44
 987: PPUSH
 988: LD_VAR 0 2
 992: PPUSH
 993: CALL_OW 52
// end ;
 997: GO 967
 999: POP
1000: POP
1001: GO 951
1003: POP
1004: POP
// end ;
1005: LD_VAR 0 1
1009: RET
// export function PreparePatrol ; var i , un ; begin
1010: LD_INT 0
1012: PPUSH
1013: PPUSH
1014: PPUSH
// uc_side := 1 ;
1015: LD_ADDR_OWVAR 20
1019: PUSH
1020: LD_INT 1
1022: ST_TO_ADDR
// uc_nation := 1 ;
1023: LD_ADDR_OWVAR 21
1027: PUSH
1028: LD_INT 1
1030: ST_TO_ADDR
// mobile_points := [ [ [ 99 , 55 ] , [ 113 , 67 ] , [ 129 , 68 ] , [ 135 , 62 ] , [ 103 , 41 ] ] , [ [ 27 , 49 ] , [ 46 , 49 ] , [ 87 , 70 ] , [ 99 , 79 ] , [ 118 , 111 ] , [ 99 , 79 ] , [ 87 , 70 ] , [ 46 , 49 ] ] , [ [ 200 , 88 ] , [ 175 , 80 ] , [ 135 , 62 ] , [ 117 , 53 ] , [ 103 , 41 ] , [ 99 , 24 ] , [ 85 , 3 ] , [ 99 , 24 ] , [ 103 , 41 ] , [ 98 , 47 ] , [ 99 , 56 ] , [ 96 , 66 ] , [ 99 , 56 ] , [ 112 , 66 ] , [ 129 , 68 ] , [ 135 , 62 ] , [ 156 , 71 ] , [ 168 , 76 ] , [ 168 , 61 ] , [ 168 , 75 ] , [ 185 , 85 ] ] ] ;
1031: LD_ADDR_EXP 16
1035: PUSH
1036: LD_INT 99
1038: PUSH
1039: LD_INT 55
1041: PUSH
1042: EMPTY
1043: LIST
1044: LIST
1045: PUSH
1046: LD_INT 113
1048: PUSH
1049: LD_INT 67
1051: PUSH
1052: EMPTY
1053: LIST
1054: LIST
1055: PUSH
1056: LD_INT 129
1058: PUSH
1059: LD_INT 68
1061: PUSH
1062: EMPTY
1063: LIST
1064: LIST
1065: PUSH
1066: LD_INT 135
1068: PUSH
1069: LD_INT 62
1071: PUSH
1072: EMPTY
1073: LIST
1074: LIST
1075: PUSH
1076: LD_INT 103
1078: PUSH
1079: LD_INT 41
1081: PUSH
1082: EMPTY
1083: LIST
1084: LIST
1085: PUSH
1086: EMPTY
1087: LIST
1088: LIST
1089: LIST
1090: LIST
1091: LIST
1092: PUSH
1093: LD_INT 27
1095: PUSH
1096: LD_INT 49
1098: PUSH
1099: EMPTY
1100: LIST
1101: LIST
1102: PUSH
1103: LD_INT 46
1105: PUSH
1106: LD_INT 49
1108: PUSH
1109: EMPTY
1110: LIST
1111: LIST
1112: PUSH
1113: LD_INT 87
1115: PUSH
1116: LD_INT 70
1118: PUSH
1119: EMPTY
1120: LIST
1121: LIST
1122: PUSH
1123: LD_INT 99
1125: PUSH
1126: LD_INT 79
1128: PUSH
1129: EMPTY
1130: LIST
1131: LIST
1132: PUSH
1133: LD_INT 118
1135: PUSH
1136: LD_INT 111
1138: PUSH
1139: EMPTY
1140: LIST
1141: LIST
1142: PUSH
1143: LD_INT 99
1145: PUSH
1146: LD_INT 79
1148: PUSH
1149: EMPTY
1150: LIST
1151: LIST
1152: PUSH
1153: LD_INT 87
1155: PUSH
1156: LD_INT 70
1158: PUSH
1159: EMPTY
1160: LIST
1161: LIST
1162: PUSH
1163: LD_INT 46
1165: PUSH
1166: LD_INT 49
1168: PUSH
1169: EMPTY
1170: LIST
1171: LIST
1172: PUSH
1173: EMPTY
1174: LIST
1175: LIST
1176: LIST
1177: LIST
1178: LIST
1179: LIST
1180: LIST
1181: LIST
1182: PUSH
1183: LD_INT 200
1185: PUSH
1186: LD_INT 88
1188: PUSH
1189: EMPTY
1190: LIST
1191: LIST
1192: PUSH
1193: LD_INT 175
1195: PUSH
1196: LD_INT 80
1198: PUSH
1199: EMPTY
1200: LIST
1201: LIST
1202: PUSH
1203: LD_INT 135
1205: PUSH
1206: LD_INT 62
1208: PUSH
1209: EMPTY
1210: LIST
1211: LIST
1212: PUSH
1213: LD_INT 117
1215: PUSH
1216: LD_INT 53
1218: PUSH
1219: EMPTY
1220: LIST
1221: LIST
1222: PUSH
1223: LD_INT 103
1225: PUSH
1226: LD_INT 41
1228: PUSH
1229: EMPTY
1230: LIST
1231: LIST
1232: PUSH
1233: LD_INT 99
1235: PUSH
1236: LD_INT 24
1238: PUSH
1239: EMPTY
1240: LIST
1241: LIST
1242: PUSH
1243: LD_INT 85
1245: PUSH
1246: LD_INT 3
1248: PUSH
1249: EMPTY
1250: LIST
1251: LIST
1252: PUSH
1253: LD_INT 99
1255: PUSH
1256: LD_INT 24
1258: PUSH
1259: EMPTY
1260: LIST
1261: LIST
1262: PUSH
1263: LD_INT 103
1265: PUSH
1266: LD_INT 41
1268: PUSH
1269: EMPTY
1270: LIST
1271: LIST
1272: PUSH
1273: LD_INT 98
1275: PUSH
1276: LD_INT 47
1278: PUSH
1279: EMPTY
1280: LIST
1281: LIST
1282: PUSH
1283: LD_INT 99
1285: PUSH
1286: LD_INT 56
1288: PUSH
1289: EMPTY
1290: LIST
1291: LIST
1292: PUSH
1293: LD_INT 96
1295: PUSH
1296: LD_INT 66
1298: PUSH
1299: EMPTY
1300: LIST
1301: LIST
1302: PUSH
1303: LD_INT 99
1305: PUSH
1306: LD_INT 56
1308: PUSH
1309: EMPTY
1310: LIST
1311: LIST
1312: PUSH
1313: LD_INT 112
1315: PUSH
1316: LD_INT 66
1318: PUSH
1319: EMPTY
1320: LIST
1321: LIST
1322: PUSH
1323: LD_INT 129
1325: PUSH
1326: LD_INT 68
1328: PUSH
1329: EMPTY
1330: LIST
1331: LIST
1332: PUSH
1333: LD_INT 135
1335: PUSH
1336: LD_INT 62
1338: PUSH
1339: EMPTY
1340: LIST
1341: LIST
1342: PUSH
1343: LD_INT 156
1345: PUSH
1346: LD_INT 71
1348: PUSH
1349: EMPTY
1350: LIST
1351: LIST
1352: PUSH
1353: LD_INT 168
1355: PUSH
1356: LD_INT 76
1358: PUSH
1359: EMPTY
1360: LIST
1361: LIST
1362: PUSH
1363: LD_INT 168
1365: PUSH
1366: LD_INT 61
1368: PUSH
1369: EMPTY
1370: LIST
1371: LIST
1372: PUSH
1373: LD_INT 168
1375: PUSH
1376: LD_INT 75
1378: PUSH
1379: EMPTY
1380: LIST
1381: LIST
1382: PUSH
1383: LD_INT 185
1385: PUSH
1386: LD_INT 85
1388: PUSH
1389: EMPTY
1390: LIST
1391: LIST
1392: PUSH
1393: EMPTY
1394: LIST
1395: LIST
1396: LIST
1397: LIST
1398: LIST
1399: LIST
1400: LIST
1401: LIST
1402: LIST
1403: LIST
1404: LIST
1405: LIST
1406: LIST
1407: LIST
1408: LIST
1409: LIST
1410: LIST
1411: LIST
1412: LIST
1413: LIST
1414: LIST
1415: PUSH
1416: EMPTY
1417: LIST
1418: LIST
1419: LIST
1420: ST_TO_ADDR
// mobile_patrol := [ ] ;
1421: LD_ADDR_EXP 15
1425: PUSH
1426: EMPTY
1427: ST_TO_ADDR
// PrepareVehicle ( us_medium_tracked , engine_combustion , control_computer , us_gatling_gun , 100 ) ;
1428: LD_INT 3
1430: PPUSH
1431: LD_INT 1
1433: PPUSH
1434: LD_INT 3
1436: PPUSH
1437: LD_INT 4
1439: PPUSH
1440: LD_INT 100
1442: PPUSH
1443: CALL 5705 0 5
// mobile_patrol := Insert ( mobile_patrol , 1 , CreateVehicle ) ;
1447: LD_ADDR_EXP 15
1451: PUSH
1452: LD_EXP 15
1456: PPUSH
1457: LD_INT 1
1459: PPUSH
1460: CALL_OW 45
1464: PPUSH
1465: CALL_OW 2
1469: ST_TO_ADDR
// PlaceUnitXY ( mobile_patrol [ 1 ] , 99 , 55 , false ) ;
1470: LD_EXP 15
1474: PUSH
1475: LD_INT 1
1477: ARRAY
1478: PPUSH
1479: LD_INT 99
1481: PPUSH
1482: LD_INT 55
1484: PPUSH
1485: LD_INT 0
1487: PPUSH
1488: CALL_OW 48
// PrepareVehicle ( us_medium_wheeled , engine_combustion , control_computer , us_gatling_gun , 100 ) ;
1492: LD_INT 2
1494: PPUSH
1495: LD_INT 1
1497: PPUSH
1498: LD_INT 3
1500: PPUSH
1501: LD_INT 4
1503: PPUSH
1504: LD_INT 100
1506: PPUSH
1507: CALL 5705 0 5
// mobile_patrol := Insert ( mobile_patrol , 2 , CreateVehicle ) ;
1511: LD_ADDR_EXP 15
1515: PUSH
1516: LD_EXP 15
1520: PPUSH
1521: LD_INT 2
1523: PPUSH
1524: CALL_OW 45
1528: PPUSH
1529: CALL_OW 2
1533: ST_TO_ADDR
// PlaceUnitXY ( mobile_patrol [ 2 ] , 27 , 49 , false ) ;
1534: LD_EXP 15
1538: PUSH
1539: LD_INT 2
1541: ARRAY
1542: PPUSH
1543: LD_INT 27
1545: PPUSH
1546: LD_INT 49
1548: PPUSH
1549: LD_INT 0
1551: PPUSH
1552: CALL_OW 48
// PrepareVehicle ( us_medium_tracked , engine_combustion , control_computer , us_rocket_launcher , 100 ) ;
1556: LD_INT 3
1558: PPUSH
1559: LD_INT 1
1561: PPUSH
1562: LD_INT 3
1564: PPUSH
1565: LD_INT 7
1567: PPUSH
1568: LD_INT 100
1570: PPUSH
1571: CALL 5705 0 5
// mobile_patrol := Insert ( mobile_patrol , 3 , CreateVehicle ) ;
1575: LD_ADDR_EXP 15
1579: PUSH
1580: LD_EXP 15
1584: PPUSH
1585: LD_INT 3
1587: PPUSH
1588: CALL_OW 45
1592: PPUSH
1593: CALL_OW 2
1597: ST_TO_ADDR
// PlaceUnitXY ( mobile_patrol [ 3 ] , 200 , 88 , false ) ;
1598: LD_EXP 15
1602: PUSH
1603: LD_INT 3
1605: ARRAY
1606: PPUSH
1607: LD_INT 200
1609: PPUSH
1610: LD_INT 88
1612: PPUSH
1613: LD_INT 0
1615: PPUSH
1616: CALL_OW 48
// for i = mobile_patrol downto 1 do
1620: LD_ADDR_VAR 0 2
1624: PUSH
1625: DOUBLE
1626: LD_EXP 15
1630: INC
1631: ST_TO_ADDR
1632: LD_INT 1
1634: PUSH
1635: FOR_DOWNTO
1636: IFFALSE 1647
// RaiseSailEvent ( 1 ) ;
1638: LD_INT 1
1640: PPUSH
1641: CALL_OW 427
1645: GO 1635
1647: POP
1648: POP
// end ;
1649: LD_VAR 0 1
1653: RET
// export function SpawnCargo ( ) ; var i , c , k , areas , road , tmp , veh ; begin
1654: LD_INT 0
1656: PPUSH
1657: PPUSH
1658: PPUSH
1659: PPUSH
1660: PPUSH
1661: PPUSH
1662: PPUSH
1663: PPUSH
// areas := [ [ road_east , 4 ] , [ road_south , 5 ] , [ road_west , 1 ] ] ;
1664: LD_ADDR_VAR 0 5
1668: PUSH
1669: LD_INT 20
1671: PUSH
1672: LD_INT 4
1674: PUSH
1675: EMPTY
1676: LIST
1677: LIST
1678: PUSH
1679: LD_INT 21
1681: PUSH
1682: LD_INT 5
1684: PUSH
1685: EMPTY
1686: LIST
1687: LIST
1688: PUSH
1689: LD_INT 22
1691: PUSH
1692: LD_INT 1
1694: PUSH
1695: EMPTY
1696: LIST
1697: LIST
1698: PUSH
1699: EMPTY
1700: LIST
1701: LIST
1702: LIST
1703: ST_TO_ADDR
// road := [ [ 176 , 81 , 135 , 62 , 114 , 67 , 93 , 71 , 76 , 67 ] , [ 107 , 92 , 92 , 72 , 77 , 68 ] , [ 45 , 49 , 67 , 59 , 77 , 68 ] ] ;
1704: LD_ADDR_VAR 0 6
1708: PUSH
1709: LD_INT 176
1711: PUSH
1712: LD_INT 81
1714: PUSH
1715: LD_INT 135
1717: PUSH
1718: LD_INT 62
1720: PUSH
1721: LD_INT 114
1723: PUSH
1724: LD_INT 67
1726: PUSH
1727: LD_INT 93
1729: PUSH
1730: LD_INT 71
1732: PUSH
1733: LD_INT 76
1735: PUSH
1736: LD_INT 67
1738: PUSH
1739: EMPTY
1740: LIST
1741: LIST
1742: LIST
1743: LIST
1744: LIST
1745: LIST
1746: LIST
1747: LIST
1748: LIST
1749: LIST
1750: PUSH
1751: LD_INT 107
1753: PUSH
1754: LD_INT 92
1756: PUSH
1757: LD_INT 92
1759: PUSH
1760: LD_INT 72
1762: PUSH
1763: LD_INT 77
1765: PUSH
1766: LD_INT 68
1768: PUSH
1769: EMPTY
1770: LIST
1771: LIST
1772: LIST
1773: LIST
1774: LIST
1775: LIST
1776: PUSH
1777: LD_INT 45
1779: PUSH
1780: LD_INT 49
1782: PUSH
1783: LD_INT 67
1785: PUSH
1786: LD_INT 59
1788: PUSH
1789: LD_INT 77
1791: PUSH
1792: LD_INT 68
1794: PUSH
1795: EMPTY
1796: LIST
1797: LIST
1798: LIST
1799: LIST
1800: LIST
1801: LIST
1802: PUSH
1803: EMPTY
1804: LIST
1805: LIST
1806: LIST
1807: ST_TO_ADDR
// k := rand ( 1 , areas ) ;
1808: LD_ADDR_VAR 0 4
1812: PUSH
1813: LD_INT 1
1815: PPUSH
1816: LD_VAR 0 5
1820: PPUSH
1821: CALL_OW 12
1825: ST_TO_ADDR
// c := rand ( 1 , 2 ) ;
1826: LD_ADDR_VAR 0 3
1830: PUSH
1831: LD_INT 1
1833: PPUSH
1834: LD_INT 2
1836: PPUSH
1837: CALL_OW 12
1841: ST_TO_ADDR
// uc_side := 1 ;
1842: LD_ADDR_OWVAR 20
1846: PUSH
1847: LD_INT 1
1849: ST_TO_ADDR
// uc_nation := 1 ;
1850: LD_ADDR_OWVAR 21
1854: PUSH
1855: LD_INT 1
1857: ST_TO_ADDR
// PrepareVehicle ( us_medium_wheeled , engine_siberite , control_computer , us_cargo_bay , 100 ) ;
1858: LD_INT 2
1860: PPUSH
1861: LD_INT 3
1863: PPUSH
1864: LD_INT 3
1866: PPUSH
1867: LD_INT 12
1869: PPUSH
1870: LD_INT 100
1872: PPUSH
1873: CALL 5705 0 5
// veh := CreateVehicle ;
1877: LD_ADDR_VAR 0 8
1881: PUSH
1882: CALL_OW 45
1886: ST_TO_ADDR
// SetDir ( veh , areas [ k ] [ 2 ] ) ;
1887: LD_VAR 0 8
1891: PPUSH
1892: LD_VAR 0 5
1896: PUSH
1897: LD_VAR 0 4
1901: ARRAY
1902: PUSH
1903: LD_INT 2
1905: ARRAY
1906: PPUSH
1907: CALL_OW 233
// PlaceUnitArea ( veh , areas [ k ] [ 1 ] , false ) ;
1911: LD_VAR 0 8
1915: PPUSH
1916: LD_VAR 0 5
1920: PUSH
1921: LD_VAR 0 4
1925: ARRAY
1926: PUSH
1927: LD_INT 1
1929: ARRAY
1930: PPUSH
1931: LD_INT 0
1933: PPUSH
1934: CALL_OW 49
// SetCargo ( veh , [ mat_cans , mat_siberit ] [ c ] , 100 ) ;
1938: LD_VAR 0 8
1942: PPUSH
1943: LD_INT 1
1945: PUSH
1946: LD_INT 3
1948: PUSH
1949: EMPTY
1950: LIST
1951: LIST
1952: PUSH
1953: LD_VAR 0 3
1957: ARRAY
1958: PPUSH
1959: LD_INT 100
1961: PPUSH
1962: CALL_OW 290
// tmp := road [ k ] ;
1966: LD_ADDR_VAR 0 7
1970: PUSH
1971: LD_VAR 0 6
1975: PUSH
1976: LD_VAR 0 4
1980: ARRAY
1981: ST_TO_ADDR
// for i = 1 to tmp div 2 do
1982: LD_ADDR_VAR 0 2
1986: PUSH
1987: DOUBLE
1988: LD_INT 1
1990: DEC
1991: ST_TO_ADDR
1992: LD_VAR 0 7
1996: PUSH
1997: LD_INT 2
1999: DIV
2000: PUSH
2001: FOR_TO
2002: IFFALSE 2049
// AddComMoveXY ( veh , tmp [ i * 2 - 1 ] , tmp [ i * 2 ] ) ;
2004: LD_VAR 0 8
2008: PPUSH
2009: LD_VAR 0 7
2013: PUSH
2014: LD_VAR 0 2
2018: PUSH
2019: LD_INT 2
2021: MUL
2022: PUSH
2023: LD_INT 1
2025: MINUS
2026: ARRAY
2027: PPUSH
2028: LD_VAR 0 7
2032: PUSH
2033: LD_VAR 0 2
2037: PUSH
2038: LD_INT 2
2040: MUL
2041: ARRAY
2042: PPUSH
2043: CALL_OW 171
2047: GO 2001
2049: POP
2050: POP
// AddComGive ( veh , alfa ) ;
2051: LD_VAR 0 8
2055: PPUSH
2056: LD_INT 5
2058: PPUSH
2059: CALL_OW 221
// AddComWait ( veh , 0 0$2 ) ;
2063: LD_VAR 0 8
2067: PPUSH
2068: LD_INT 70
2070: PPUSH
2071: CALL_OW 202
// for i = tmp div 2 downto 1 do
2075: LD_ADDR_VAR 0 2
2079: PUSH
2080: DOUBLE
2081: LD_VAR 0 7
2085: PUSH
2086: LD_INT 2
2088: DIV
2089: INC
2090: ST_TO_ADDR
2091: LD_INT 1
2093: PUSH
2094: FOR_DOWNTO
2095: IFFALSE 2142
// AddComMoveXY ( veh , tmp [ i * 2 - 1 ] , tmp [ i * 2 ] ) ;
2097: LD_VAR 0 8
2101: PPUSH
2102: LD_VAR 0 7
2106: PUSH
2107: LD_VAR 0 2
2111: PUSH
2112: LD_INT 2
2114: MUL
2115: PUSH
2116: LD_INT 1
2118: MINUS
2119: ARRAY
2120: PPUSH
2121: LD_VAR 0 7
2125: PUSH
2126: LD_VAR 0 2
2130: PUSH
2131: LD_INT 2
2133: MUL
2134: ARRAY
2135: PPUSH
2136: CALL_OW 171
2140: GO 2094
2142: POP
2143: POP
// AddComMoveToArea ( veh , areas [ k ] [ 1 ] ) ;
2144: LD_VAR 0 8
2148: PPUSH
2149: LD_VAR 0 5
2153: PUSH
2154: LD_VAR 0 4
2158: ARRAY
2159: PUSH
2160: LD_INT 1
2162: ARRAY
2163: PPUSH
2164: CALL_OW 173
// repeat wait ( 0 0$1 ) ;
2168: LD_INT 35
2170: PPUSH
2171: CALL_OW 67
// until IsInArea ( veh , areas [ k ] [ 1 ] ) and GetCargo ( veh , c ) = 0 ;
2175: LD_VAR 0 8
2179: PPUSH
2180: LD_VAR 0 5
2184: PUSH
2185: LD_VAR 0 4
2189: ARRAY
2190: PUSH
2191: LD_INT 1
2193: ARRAY
2194: PPUSH
2195: CALL_OW 308
2199: PUSH
2200: LD_VAR 0 8
2204: PPUSH
2205: LD_VAR 0 3
2209: PPUSH
2210: CALL_OW 289
2214: PUSH
2215: LD_INT 0
2217: EQUAL
2218: AND
2219: IFFALSE 2168
// RemoveUnit ( veh ) ;
2221: LD_VAR 0 8
2225: PPUSH
2226: CALL_OW 64
// end ;
2230: LD_VAR 0 1
2234: RET
// every 3 3$00 do
2235: GO 2237
2237: DISABLE
// begin enable ;
2238: ENABLE
// SpawnCargo ;
2239: CALL 1654 0 0
// end ;
2243: END
// export function PrepareDefenders ; var i , tmp ; begin
2244: LD_INT 0
2246: PPUSH
2247: PPUSH
2248: PPUSH
// if defenders then
2249: LD_EXP 18
2253: IFFALSE 2257
// exit ;
2255: GO 2521
// for i = 1 to [ 4 , 5 , 6 ] [ Difficulty ] do
2257: LD_ADDR_VAR 0 2
2261: PUSH
2262: DOUBLE
2263: LD_INT 1
2265: DEC
2266: ST_TO_ADDR
2267: LD_INT 4
2269: PUSH
2270: LD_INT 5
2272: PUSH
2273: LD_INT 6
2275: PUSH
2276: EMPTY
2277: LIST
2278: LIST
2279: LIST
2280: PUSH
2281: LD_OWVAR 67
2285: ARRAY
2286: PUSH
2287: FOR_TO
2288: IFFALSE 2427
// begin tmp := Produce ( amfac2 , [ us_medium_wheeled , us_medium_tracked ] [ rand ( 1 , 2 ) ] , [ engine_combustion , engine_siberite ] [ rand ( 1 , 2 ) ] , control_remote , [ us_gatling_gun , us_double_gun , us_laser ] [ rand ( 1 , 3 ) ] ) ;
2290: LD_ADDR_VAR 0 3
2294: PUSH
2295: LD_INT 6
2297: PPUSH
2298: LD_INT 2
2300: PUSH
2301: LD_INT 3
2303: PUSH
2304: EMPTY
2305: LIST
2306: LIST
2307: PUSH
2308: LD_INT 1
2310: PPUSH
2311: LD_INT 2
2313: PPUSH
2314: CALL_OW 12
2318: ARRAY
2319: PPUSH
2320: LD_INT 1
2322: PUSH
2323: LD_INT 3
2325: PUSH
2326: EMPTY
2327: LIST
2328: LIST
2329: PUSH
2330: LD_INT 1
2332: PPUSH
2333: LD_INT 2
2335: PPUSH
2336: CALL_OW 12
2340: ARRAY
2341: PPUSH
2342: LD_INT 2
2344: PPUSH
2345: LD_INT 4
2347: PUSH
2348: LD_INT 5
2350: PUSH
2351: LD_INT 9
2353: PUSH
2354: EMPTY
2355: LIST
2356: LIST
2357: LIST
2358: PUSH
2359: LD_INT 1
2361: PPUSH
2362: LD_INT 3
2364: PPUSH
2365: CALL_OW 12
2369: ARRAY
2370: PPUSH
2371: CALL 28400 0 5
2375: ST_TO_ADDR
// if tmp then
2376: LD_VAR 0 3
2380: IFFALSE 2425
// AddComConstruct ( amfac2 , tmp [ 1 ] , tmp [ 2 ] , tmp [ 3 ] , tmp [ 4 ] ) ;
2382: LD_INT 6
2384: PPUSH
2385: LD_VAR 0 3
2389: PUSH
2390: LD_INT 1
2392: ARRAY
2393: PPUSH
2394: LD_VAR 0 3
2398: PUSH
2399: LD_INT 2
2401: ARRAY
2402: PPUSH
2403: LD_VAR 0 3
2407: PUSH
2408: LD_INT 3
2410: ARRAY
2411: PPUSH
2412: LD_VAR 0 3
2416: PUSH
2417: LD_INT 4
2419: ARRAY
2420: PPUSH
2421: CALL_OW 185
// end ;
2425: GO 2287
2427: POP
2428: POP
// repeat wait ( 0 0$1 ) ;
2429: LD_INT 35
2431: PPUSH
2432: CALL_OW 67
// until FilterAllUnits ( [ [ f_side , 1 ] , [ f_control , control_remote ] ] ) >= [ 4 , 5 , 6 ] [ Difficulty ] ;
2436: LD_INT 22
2438: PUSH
2439: LD_INT 1
2441: PUSH
2442: EMPTY
2443: LIST
2444: LIST
2445: PUSH
2446: LD_INT 33
2448: PUSH
2449: LD_INT 2
2451: PUSH
2452: EMPTY
2453: LIST
2454: LIST
2455: PUSH
2456: EMPTY
2457: LIST
2458: LIST
2459: PPUSH
2460: CALL_OW 69
2464: PUSH
2465: LD_INT 4
2467: PUSH
2468: LD_INT 5
2470: PUSH
2471: LD_INT 6
2473: PUSH
2474: EMPTY
2475: LIST
2476: LIST
2477: LIST
2478: PUSH
2479: LD_OWVAR 67
2483: ARRAY
2484: GREATEREQUAL
2485: IFFALSE 2429
// defenders := FilterAllUnits ( [ [ f_side , 1 ] , [ f_control , control_remote ] ] ) ;
2487: LD_ADDR_EXP 18
2491: PUSH
2492: LD_INT 22
2494: PUSH
2495: LD_INT 1
2497: PUSH
2498: EMPTY
2499: LIST
2500: LIST
2501: PUSH
2502: LD_INT 33
2504: PUSH
2505: LD_INT 2
2507: PUSH
2508: EMPTY
2509: LIST
2510: LIST
2511: PUSH
2512: EMPTY
2513: LIST
2514: LIST
2515: PPUSH
2516: CALL_OW 69
2520: ST_TO_ADDR
// end ;
2521: LD_VAR 0 1
2525: RET
// export function Defend ; var i , un , veh , tmp ; begin
2526: LD_INT 0
2528: PPUSH
2529: PPUSH
2530: PPUSH
2531: PPUSH
2532: PPUSH
// defcon_wave := defcon_wave + 1 ;
2533: LD_ADDR_EXP 20
2537: PUSH
2538: LD_EXP 20
2542: PUSH
2543: LD_INT 1
2545: PLUS
2546: ST_TO_ADDR
// if not defenders then
2547: LD_EXP 18
2551: NOT
2552: IFFALSE 2558
// PrepareDefenders ;
2554: CALL 2244 0 0
// if defcon_wave > 1 then
2558: LD_EXP 20
2562: PUSH
2563: LD_INT 1
2565: GREATER
2566: IFFALSE 2792
// begin for i = 1 to defcon_wave + 2 do
2568: LD_ADDR_VAR 0 2
2572: PUSH
2573: DOUBLE
2574: LD_INT 1
2576: DEC
2577: ST_TO_ADDR
2578: LD_EXP 20
2582: PUSH
2583: LD_INT 2
2585: PLUS
2586: PUSH
2587: FOR_TO
2588: IFFALSE 2714
// begin PrepareVehicle ( us_heavy_tracked , engine_siberite , control_manual , [ us_gatling_gun , us_heavy_gun , us_rocket_launcher ] [ rand ( 1 , 3 ) ] , 100 ) ;
2590: LD_INT 4
2592: PPUSH
2593: LD_INT 3
2595: PPUSH
2596: LD_INT 1
2598: PPUSH
2599: LD_INT 4
2601: PUSH
2602: LD_INT 6
2604: PUSH
2605: LD_INT 7
2607: PUSH
2608: EMPTY
2609: LIST
2610: LIST
2611: LIST
2612: PUSH
2613: LD_INT 1
2615: PPUSH
2616: LD_INT 3
2618: PPUSH
2619: CALL_OW 12
2623: ARRAY
2624: PPUSH
2625: LD_INT 100
2627: PPUSH
2628: CALL 5705 0 5
// veh := CreateVehicle ;
2632: LD_ADDR_VAR 0 4
2636: PUSH
2637: CALL_OW 45
2641: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
2642: LD_VAR 0 4
2646: PPUSH
2647: LD_INT 1
2649: PPUSH
2650: CALL_OW 233
// defenders := defenders ^ veh ;
2654: LD_ADDR_EXP 18
2658: PUSH
2659: LD_EXP 18
2663: PUSH
2664: LD_VAR 0 4
2668: ADD
2669: ST_TO_ADDR
// PrepareHuman ( false , 3 , 9 ) ;
2670: LD_INT 0
2672: PPUSH
2673: LD_INT 3
2675: PPUSH
2676: LD_INT 9
2678: PPUSH
2679: CALL_OW 380
// PlaceHumanInUnit ( CreateHuman , veh ) ;
2683: CALL_OW 44
2687: PPUSH
2688: LD_VAR 0 4
2692: PPUSH
2693: CALL_OW 52
// PlaceUnitArea ( veh , west_spawn , false ) ;
2697: LD_VAR 0 4
2701: PPUSH
2702: LD_INT 25
2704: PPUSH
2705: LD_INT 0
2707: PPUSH
2708: CALL_OW 49
// end ;
2712: GO 2587
2714: POP
2715: POP
// for i = 1 to defcon_wave do
2716: LD_ADDR_VAR 0 2
2720: PUSH
2721: DOUBLE
2722: LD_INT 1
2724: DEC
2725: ST_TO_ADDR
2726: LD_EXP 20
2730: PUSH
2731: FOR_TO
2732: IFFALSE 2790
// begin PrepareHuman ( false , 5 , 9 ) ;
2734: LD_INT 0
2736: PPUSH
2737: LD_INT 5
2739: PPUSH
2740: LD_INT 9
2742: PPUSH
2743: CALL_OW 380
// un := CreateHuman ;
2747: LD_ADDR_VAR 0 3
2751: PUSH
2752: CALL_OW 44
2756: ST_TO_ADDR
// PlaceUnitArea ( un , west_spawn , false ) ;
2757: LD_VAR 0 3
2761: PPUSH
2762: LD_INT 25
2764: PPUSH
2765: LD_INT 0
2767: PPUSH
2768: CALL_OW 49
// defenders := defenders ^ un ;
2772: LD_ADDR_EXP 18
2776: PUSH
2777: LD_EXP 18
2781: PUSH
2782: LD_VAR 0 3
2786: ADD
2787: ST_TO_ADDR
// end ;
2788: GO 2731
2790: POP
2791: POP
// end ; repeat wait ( 0 0$1 ) ;
2792: LD_INT 35
2794: PPUSH
2795: CALL_OW 67
// for i in defenders do
2799: LD_ADDR_VAR 0 2
2803: PUSH
2804: LD_EXP 18
2808: PUSH
2809: FOR_IN
2810: IFFALSE 2892
// begin if defcon and GetDistUnitXY ( i , defcon [ 1 ] , defcon [ 2 ] ) > 10 and not HasTask ( i ) then
2812: LD_EXP 19
2816: PUSH
2817: LD_VAR 0 2
2821: PPUSH
2822: LD_EXP 19
2826: PUSH
2827: LD_INT 1
2829: ARRAY
2830: PPUSH
2831: LD_EXP 19
2835: PUSH
2836: LD_INT 2
2838: ARRAY
2839: PPUSH
2840: CALL_OW 297
2844: PUSH
2845: LD_INT 10
2847: GREATER
2848: AND
2849: PUSH
2850: LD_VAR 0 2
2854: PPUSH
2855: CALL_OW 314
2859: NOT
2860: AND
2861: IFFALSE 2890
// ComAgressiveMove ( i , defcon [ 1 ] , defcon [ 2 ] ) ;
2863: LD_VAR 0 2
2867: PPUSH
2868: LD_EXP 19
2872: PUSH
2873: LD_INT 1
2875: ARRAY
2876: PPUSH
2877: LD_EXP 19
2881: PUSH
2882: LD_INT 2
2884: ARRAY
2885: PPUSH
2886: CALL_OW 114
// end ;
2890: GO 2809
2892: POP
2893: POP
// until not defenders ;
2894: LD_EXP 18
2898: NOT
2899: IFFALSE 2792
// end ;
2901: LD_VAR 0 1
2905: RET
// every 0 0$1 do var radar , i ;
2906: GO 2908
2908: DISABLE
2909: LD_INT 0
2911: PPUSH
2912: PPUSH
// begin uc_side := 1 ;
2913: LD_ADDR_OWVAR 20
2917: PUSH
2918: LD_INT 1
2920: ST_TO_ADDR
// uc_nation := 1 ;
2921: LD_ADDR_OWVAR 21
2925: PUSH
2926: LD_INT 1
2928: ST_TO_ADDR
// PrepareVehicle ( us_light_wheeled , engine_solar , control_computer , us_radar , 100 ) ;
2929: LD_INT 1
2931: PPUSH
2932: LD_INT 2
2934: PPUSH
2935: LD_INT 3
2937: PPUSH
2938: LD_INT 11
2940: PPUSH
2941: LD_INT 100
2943: PPUSH
2944: CALL 5705 0 5
// radar := CreateVehicle ;
2948: LD_ADDR_VAR 0 1
2952: PUSH
2953: CALL_OW 45
2957: ST_TO_ADDR
// SetDir ( radar , 4 ) ;
2958: LD_VAR 0 1
2962: PPUSH
2963: LD_INT 4
2965: PPUSH
2966: CALL_OW 233
// PlaceUnitXY ( radar , 51 , 45 , false ) ;
2970: LD_VAR 0 1
2974: PPUSH
2975: LD_INT 51
2977: PPUSH
2978: LD_INT 45
2980: PPUSH
2981: LD_INT 0
2983: PPUSH
2984: CALL_OW 48
// repeat AddComWait ( radar , 0 0$20 ) ;
2988: LD_VAR 0 1
2992: PPUSH
2993: LD_INT 700
2995: PPUSH
2996: CALL_OW 202
// AddComMoveXY ( radar , 65 , 75 ) ;
3000: LD_VAR 0 1
3004: PPUSH
3005: LD_INT 65
3007: PPUSH
3008: LD_INT 75
3010: PPUSH
3011: CALL_OW 171
// AddComWait ( radar , 0 0$10 ) ;
3015: LD_VAR 0 1
3019: PPUSH
3020: LD_INT 350
3022: PPUSH
3023: CALL_OW 202
// AddComMoveXY ( radar , 83 , 87 ) ;
3027: LD_VAR 0 1
3031: PPUSH
3032: LD_INT 83
3034: PPUSH
3035: LD_INT 87
3037: PPUSH
3038: CALL_OW 171
// AddComWait ( radar , 0 0$15 ) ;
3042: LD_VAR 0 1
3046: PPUSH
3047: LD_INT 525
3049: PPUSH
3050: CALL_OW 202
// AddComMoveXY ( radar , 94 , 81 ) ;
3054: LD_VAR 0 1
3058: PPUSH
3059: LD_INT 94
3061: PPUSH
3062: LD_INT 81
3064: PPUSH
3065: CALL_OW 171
// AddComWait ( radar , 0 0$10 ) ;
3069: LD_VAR 0 1
3073: PPUSH
3074: LD_INT 350
3076: PPUSH
3077: CALL_OW 202
// AddComMoveXY ( radar , 55 , 48 ) ;
3081: LD_VAR 0 1
3085: PPUSH
3086: LD_INT 55
3088: PPUSH
3089: LD_INT 48
3091: PPUSH
3092: CALL_OW 171
// wait ( 1 1$00 ) ;
3096: LD_INT 2100
3098: PPUSH
3099: CALL_OW 67
// until not IsOk ( radar ) ;
3103: LD_VAR 0 1
3107: PPUSH
3108: CALL_OW 302
3112: NOT
3113: IFFALSE 2988
// end ;
3115: PPOPN 2
3117: END
// every 7 7$30 trigger Difficulty > 1 and extra_patrol do var un ;
3118: LD_OWVAR 67
3122: PUSH
3123: LD_INT 1
3125: GREATER
3126: PUSH
3127: LD_EXP 11
3131: AND
3132: IFFALSE 3354
3134: GO 3136
3136: DISABLE
3137: LD_INT 0
3139: PPUSH
// begin enable ;
3140: ENABLE
// uc_side := 1 ;
3141: LD_ADDR_OWVAR 20
3145: PUSH
3146: LD_INT 1
3148: ST_TO_ADDR
// uc_nation := 1 ;
3149: LD_ADDR_OWVAR 21
3153: PUSH
3154: LD_INT 1
3156: ST_TO_ADDR
// PrepareVehicle ( us_morphling , engine_siberite , control_computer , us_gatling_gun , 100 ) ;
3157: LD_INT 5
3159: PPUSH
3160: LD_INT 3
3162: PPUSH
3163: LD_INT 3
3165: PPUSH
3166: LD_INT 4
3168: PPUSH
3169: LD_INT 100
3171: PPUSH
3172: CALL 5705 0 5
// un := CreateVehicle ;
3176: LD_ADDR_VAR 0 1
3180: PUSH
3181: CALL_OW 45
3185: ST_TO_ADDR
// SetDir ( un , 3 ) ;
3186: LD_VAR 0 1
3190: PPUSH
3191: LD_INT 3
3193: PPUSH
3194: CALL_OW 233
// PlaceUnitXY ( un , 155 , 2 , false ) ;
3198: LD_VAR 0 1
3202: PPUSH
3203: LD_INT 155
3205: PPUSH
3206: LD_INT 2
3208: PPUSH
3209: LD_INT 0
3211: PPUSH
3212: CALL_OW 48
// ComAgressiveMove ( un , 169 , 77 ) ;
3216: LD_VAR 0 1
3220: PPUSH
3221: LD_INT 169
3223: PPUSH
3224: LD_INT 77
3226: PPUSH
3227: CALL_OW 114
// AddComWait ( un , 0 0$2 ) ;
3231: LD_VAR 0 1
3235: PPUSH
3236: LD_INT 70
3238: PPUSH
3239: CALL_OW 202
// AddComAgressiveMove ( un , 134 , 62 ) ;
3243: LD_VAR 0 1
3247: PPUSH
3248: LD_INT 134
3250: PPUSH
3251: LD_INT 62
3253: PPUSH
3254: CALL_OW 174
// AddComAgressiveMove ( un , 103 , 42 ) ;
3258: LD_VAR 0 1
3262: PPUSH
3263: LD_INT 103
3265: PPUSH
3266: LD_INT 42
3268: PPUSH
3269: CALL_OW 174
// AddComWait ( un , 0 0$2 ) ;
3273: LD_VAR 0 1
3277: PPUSH
3278: LD_INT 70
3280: PPUSH
3281: CALL_OW 202
// AddComAgressiveMove ( un , 84 , 2 ) ;
3285: LD_VAR 0 1
3289: PPUSH
3290: LD_INT 84
3292: PPUSH
3293: LD_INT 2
3295: PPUSH
3296: CALL_OW 174
// repeat wait ( 0 0$1 ) ;
3300: LD_INT 35
3302: PPUSH
3303: CALL_OW 67
// if IsDead ( un ) then
3307: LD_VAR 0 1
3311: PPUSH
3312: CALL_OW 301
3316: IFFALSE 3328
// begin extra_patrol := false ;
3318: LD_ADDR_EXP 11
3322: PUSH
3323: LD_INT 0
3325: ST_TO_ADDR
// exit ;
3326: GO 3354
// end ; until IsAt ( un , 84 , 2 ) ;
3328: LD_VAR 0 1
3332: PPUSH
3333: LD_INT 84
3335: PPUSH
3336: LD_INT 2
3338: PPUSH
3339: CALL_OW 307
3343: IFFALSE 3300
// RemoveUnit ( un ) ;
3345: LD_VAR 0 1
3349: PPUSH
3350: CALL_OW 64
// end ; end_of_file
3354: PPOPN 1
3356: END
// export Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi , Simms , Joan , DeltaDoctor ; export function PrepareFriends ; var i , tmp , buildings , areas , bunkers , cl ; begin
3357: LD_INT 0
3359: PPUSH
3360: PPUSH
3361: PPUSH
3362: PPUSH
3363: PPUSH
3364: PPUSH
3365: PPUSH
// uc_side := 4 ;
3366: LD_ADDR_OWVAR 20
3370: PUSH
3371: LD_INT 4
3373: ST_TO_ADDR
// uc_nation := 1 ;
3374: LD_ADDR_OWVAR 21
3378: PUSH
3379: LD_INT 1
3381: ST_TO_ADDR
// DeltaDoctor := PrepareUnit ( DeltaDoctor , ( not debug ) , 10c_ ) ;
3382: LD_ADDR_EXP 35
3386: PUSH
3387: LD_STRING DeltaDoctor
3389: PPUSH
3390: LD_EXP 1
3394: NOT
3395: PPUSH
3396: LD_STRING 10c_
3398: PPUSH
3399: CALL 5642 0 3
3403: ST_TO_ADDR
// Joan := PrepareUnit ( Joan , ( not debug ) , 10c_ ) ;
3404: LD_ADDR_EXP 34
3408: PUSH
3409: LD_STRING Joan
3411: PPUSH
3412: LD_EXP 1
3416: NOT
3417: PPUSH
3418: LD_STRING 10c_
3420: PPUSH
3421: CALL 5642 0 3
3425: ST_TO_ADDR
// if Joan then
3426: LD_EXP 34
3430: IFFALSE 3461
// friends := Insert ( friends , friends + 1 , Joan ) ;
3432: LD_ADDR_EXP 4
3436: PUSH
3437: LD_EXP 4
3441: PPUSH
3442: LD_EXP 4
3446: PUSH
3447: LD_INT 1
3449: PLUS
3450: PPUSH
3451: LD_EXP 34
3455: PPUSH
3456: CALL_OW 2
3460: ST_TO_ADDR
// Simms := PrepareUnit ( Simms , ( not debug ) , 10c_ ) ;
3461: LD_ADDR_EXP 33
3465: PUSH
3466: LD_STRING Simms
3468: PPUSH
3469: LD_EXP 1
3473: NOT
3474: PPUSH
3475: LD_STRING 10c_
3477: PPUSH
3478: CALL 5642 0 3
3482: ST_TO_ADDR
// Kikuchi := PrepareUnit ( Kikuchi , ( not debug ) , 11_ ) ;
3483: LD_ADDR_EXP 32
3487: PUSH
3488: LD_STRING Kikuchi
3490: PPUSH
3491: LD_EXP 1
3495: NOT
3496: PPUSH
3497: LD_STRING 11_
3499: PPUSH
3500: CALL 5642 0 3
3504: ST_TO_ADDR
// if Kikuchi then
3505: LD_EXP 32
3509: IFFALSE 3540
// friends := Insert ( friends , friends + 1 , Kikuchi ) ;
3511: LD_ADDR_EXP 4
3515: PUSH
3516: LD_EXP 4
3520: PPUSH
3521: LD_EXP 4
3525: PUSH
3526: LD_INT 1
3528: PLUS
3529: PPUSH
3530: LD_EXP 32
3534: PPUSH
3535: CALL_OW 2
3539: ST_TO_ADDR
// Frank := PrepareUnit ( Frank , ( not debug ) , 11_ ) ;
3540: LD_ADDR_EXP 31
3544: PUSH
3545: LD_STRING Frank
3547: PPUSH
3548: LD_EXP 1
3552: NOT
3553: PPUSH
3554: LD_STRING 11_
3556: PPUSH
3557: CALL 5642 0 3
3561: ST_TO_ADDR
// if Frank then
3562: LD_EXP 31
3566: IFFALSE 3597
// friends := Insert ( friends , friends + 1 , Frank ) ;
3568: LD_ADDR_EXP 4
3572: PUSH
3573: LD_EXP 4
3577: PPUSH
3578: LD_EXP 4
3582: PUSH
3583: LD_INT 1
3585: PLUS
3586: PPUSH
3587: LD_EXP 31
3591: PPUSH
3592: CALL_OW 2
3596: ST_TO_ADDR
// Gary := PrepareUnit ( Gary , ( not debug ) , 11_ ) ;
3597: LD_ADDR_EXP 30
3601: PUSH
3602: LD_STRING Gary
3604: PPUSH
3605: LD_EXP 1
3609: NOT
3610: PPUSH
3611: LD_STRING 11_
3613: PPUSH
3614: CALL 5642 0 3
3618: ST_TO_ADDR
// if Gary then
3619: LD_EXP 30
3623: IFFALSE 3654
// friends := Insert ( friends , friends + 1 , Gary ) ;
3625: LD_ADDR_EXP 4
3629: PUSH
3630: LD_EXP 4
3634: PPUSH
3635: LD_EXP 4
3639: PUSH
3640: LD_INT 1
3642: PLUS
3643: PPUSH
3644: LD_EXP 30
3648: PPUSH
3649: CALL_OW 2
3653: ST_TO_ADDR
// Cornel := PrepareUnit ( Cornell , ( not debug ) , 11_ ) ;
3654: LD_ADDR_EXP 29
3658: PUSH
3659: LD_STRING Cornell
3661: PPUSH
3662: LD_EXP 1
3666: NOT
3667: PPUSH
3668: LD_STRING 11_
3670: PPUSH
3671: CALL 5642 0 3
3675: ST_TO_ADDR
// if Cornel then
3676: LD_EXP 29
3680: IFFALSE 3711
// friends := Insert ( friends , friends + 1 , Cornel ) ;
3682: LD_ADDR_EXP 4
3686: PUSH
3687: LD_EXP 4
3691: PPUSH
3692: LD_EXP 4
3696: PUSH
3697: LD_INT 1
3699: PLUS
3700: PPUSH
3701: LD_EXP 29
3705: PPUSH
3706: CALL_OW 2
3710: ST_TO_ADDR
// Houten := PrepareUnit ( Houten , ( not debug ) , 11_ ) ;
3711: LD_ADDR_EXP 28
3715: PUSH
3716: LD_STRING Houten
3718: PPUSH
3719: LD_EXP 1
3723: NOT
3724: PPUSH
3725: LD_STRING 11_
3727: PPUSH
3728: CALL 5642 0 3
3732: ST_TO_ADDR
// if Houten then
3733: LD_EXP 28
3737: IFFALSE 3768
// friends := Insert ( friends , friends + 1 , Houten ) ;
3739: LD_ADDR_EXP 4
3743: PUSH
3744: LD_EXP 4
3748: PPUSH
3749: LD_EXP 4
3753: PUSH
3754: LD_INT 1
3756: PLUS
3757: PPUSH
3758: LD_EXP 28
3762: PPUSH
3763: CALL_OW 2
3767: ST_TO_ADDR
// Gladstone := PrepareUnit ( Gladstone , ( not debug ) , 11_ ) ;
3768: LD_ADDR_EXP 27
3772: PUSH
3773: LD_STRING Gladstone
3775: PPUSH
3776: LD_EXP 1
3780: NOT
3781: PPUSH
3782: LD_STRING 11_
3784: PPUSH
3785: CALL 5642 0 3
3789: ST_TO_ADDR
// if Gladstone then
3790: LD_EXP 27
3794: IFFALSE 3825
// friends := Insert ( friends , friends + 1 , Gladstone ) ;
3796: LD_ADDR_EXP 4
3800: PUSH
3801: LD_EXP 4
3805: PPUSH
3806: LD_EXP 4
3810: PUSH
3811: LD_INT 1
3813: PLUS
3814: PPUSH
3815: LD_EXP 27
3819: PPUSH
3820: CALL_OW 2
3824: ST_TO_ADDR
// Lisa := PrepareUnit ( Lisa , ( not debug ) , 11_ ) ;
3825: LD_ADDR_EXP 21
3829: PUSH
3830: LD_STRING Lisa
3832: PPUSH
3833: LD_EXP 1
3837: NOT
3838: PPUSH
3839: LD_STRING 11_
3841: PPUSH
3842: CALL 5642 0 3
3846: ST_TO_ADDR
// if Lisa then
3847: LD_EXP 21
3851: IFFALSE 3876
// friends := Insert ( friends , 1 , Lisa ) ;
3853: LD_ADDR_EXP 4
3857: PUSH
3858: LD_EXP 4
3862: PPUSH
3863: LD_INT 1
3865: PPUSH
3866: LD_EXP 21
3870: PPUSH
3871: CALL_OW 2
3875: ST_TO_ADDR
// Donaldson := PrepareUnit ( Donaldson , ( not debug ) , 11_ ) ;
3876: LD_ADDR_EXP 22
3880: PUSH
3881: LD_STRING Donaldson
3883: PPUSH
3884: LD_EXP 1
3888: NOT
3889: PPUSH
3890: LD_STRING 11_
3892: PPUSH
3893: CALL 5642 0 3
3897: ST_TO_ADDR
// if Donaldson then
3898: LD_EXP 22
3902: IFFALSE 3933
// friends := Insert ( friends , friends + 1 , Donaldson ) ;
3904: LD_ADDR_EXP 4
3908: PUSH
3909: LD_EXP 4
3913: PPUSH
3914: LD_EXP 4
3918: PUSH
3919: LD_INT 1
3921: PLUS
3922: PPUSH
3923: LD_EXP 22
3927: PPUSH
3928: CALL_OW 2
3932: ST_TO_ADDR
// Bobby := PrepareUnit ( Bobby , ( not debug ) , 11_ ) ;
3933: LD_ADDR_EXP 23
3937: PUSH
3938: LD_STRING Bobby
3940: PPUSH
3941: LD_EXP 1
3945: NOT
3946: PPUSH
3947: LD_STRING 11_
3949: PPUSH
3950: CALL 5642 0 3
3954: ST_TO_ADDR
// if Bobby then
3955: LD_EXP 23
3959: IFFALSE 3990
// friends := Insert ( friends , friends + 1 , Bobby ) ;
3961: LD_ADDR_EXP 4
3965: PUSH
3966: LD_EXP 4
3970: PPUSH
3971: LD_EXP 4
3975: PUSH
3976: LD_INT 1
3978: PLUS
3979: PPUSH
3980: LD_EXP 23
3984: PPUSH
3985: CALL_OW 2
3989: ST_TO_ADDR
// Cyrus := PrepareUnit ( Cyrus , ( not debug ) , 11_ ) ;
3990: LD_ADDR_EXP 24
3994: PUSH
3995: LD_STRING Cyrus
3997: PPUSH
3998: LD_EXP 1
4002: NOT
4003: PPUSH
4004: LD_STRING 11_
4006: PPUSH
4007: CALL 5642 0 3
4011: ST_TO_ADDR
// if Cyrus then
4012: LD_EXP 24
4016: IFFALSE 4047
// friends := Insert ( friends , friends + 1 , Cyrus ) ;
4018: LD_ADDR_EXP 4
4022: PUSH
4023: LD_EXP 4
4027: PPUSH
4028: LD_EXP 4
4032: PUSH
4033: LD_INT 1
4035: PLUS
4036: PPUSH
4037: LD_EXP 24
4041: PPUSH
4042: CALL_OW 2
4046: ST_TO_ADDR
// Denis := PrepareUnit ( Denis , ( not debug ) , 11_ ) ;
4047: LD_ADDR_EXP 25
4051: PUSH
4052: LD_STRING Denis
4054: PPUSH
4055: LD_EXP 1
4059: NOT
4060: PPUSH
4061: LD_STRING 11_
4063: PPUSH
4064: CALL 5642 0 3
4068: ST_TO_ADDR
// Brown := PrepareUnit ( Brown , ( not debug ) , 11_ ) ;
4069: LD_ADDR_EXP 26
4073: PUSH
4074: LD_STRING Brown
4076: PPUSH
4077: LD_EXP 1
4081: NOT
4082: PPUSH
4083: LD_STRING 11_
4085: PPUSH
4086: CALL 5642 0 3
4090: ST_TO_ADDR
// if Brown then
4091: LD_EXP 26
4095: IFFALSE 4126
// friends := Insert ( friends , friends + 1 , Brown ) ;
4097: LD_ADDR_EXP 4
4101: PUSH
4102: LD_EXP 4
4106: PPUSH
4107: LD_EXP 4
4111: PUSH
4112: LD_INT 1
4114: PLUS
4115: PPUSH
4116: LD_EXP 26
4120: PPUSH
4121: CALL_OW 2
4125: ST_TO_ADDR
// friends := friends ^ CreateCharacterSet ( 11c_others ) ^ CreateCharacterSet ( 11_others ) ;
4126: LD_ADDR_EXP 4
4130: PUSH
4131: LD_EXP 4
4135: PUSH
4136: LD_STRING 11c_others
4138: PPUSH
4139: CALL_OW 31
4143: ADD
4144: PUSH
4145: LD_STRING 11_others
4147: PPUSH
4148: CALL_OW 31
4152: ADD
4153: ST_TO_ADDR
// if friends < 18 then
4154: LD_EXP 4
4158: PUSH
4159: LD_INT 18
4161: LESS
4162: IFFALSE 4234
// for i = 1 to 18 do
4164: LD_ADDR_VAR 0 2
4168: PUSH
4169: DOUBLE
4170: LD_INT 1
4172: DEC
4173: ST_TO_ADDR
4174: LD_INT 18
4176: PUSH
4177: FOR_TO
4178: IFFALSE 4232
// begin PrepareHuman ( false , rand ( 1 , 4 ) , 7 ) ;
4180: LD_INT 0
4182: PPUSH
4183: LD_INT 1
4185: PPUSH
4186: LD_INT 4
4188: PPUSH
4189: CALL_OW 12
4193: PPUSH
4194: LD_INT 7
4196: PPUSH
4197: CALL_OW 380
// friends := Insert ( friends , friends + 1 , CreateHuman ) ;
4201: LD_ADDR_EXP 4
4205: PUSH
4206: LD_EXP 4
4210: PPUSH
4211: LD_EXP 4
4215: PUSH
4216: LD_INT 1
4218: PLUS
4219: PPUSH
4220: CALL_OW 44
4224: PPUSH
4225: CALL_OW 2
4229: ST_TO_ADDR
// end ;
4230: GO 4177
4232: POP
4233: POP
// for i in friends do
4234: LD_ADDR_VAR 0 2
4238: PUSH
4239: LD_EXP 4
4243: PUSH
4244: FOR_IN
4245: IFFALSE 4303
// if GetSkill ( i , 1 ) >= GetSkill ( i , 4 ) then
4247: LD_VAR 0 2
4251: PPUSH
4252: LD_INT 1
4254: PPUSH
4255: CALL_OW 259
4259: PUSH
4260: LD_VAR 0 2
4264: PPUSH
4265: LD_INT 4
4267: PPUSH
4268: CALL_OW 259
4272: GREATEREQUAL
4273: IFFALSE 4289
// SetClass ( i , class_soldier ) else
4275: LD_VAR 0 2
4279: PPUSH
4280: LD_INT 1
4282: PPUSH
4283: CALL_OW 336
4287: GO 4301
// SetClass ( i , class_scientistic ) ;
4289: LD_VAR 0 2
4293: PPUSH
4294: LD_INT 4
4296: PPUSH
4297: CALL_OW 336
4301: GO 4244
4303: POP
4304: POP
// if Frank then
4305: LD_EXP 31
4309: IFFALSE 4323
// SetClass ( Frank , class_sniper ) ;
4311: LD_EXP 31
4315: PPUSH
4316: LD_INT 5
4318: PPUSH
4319: CALL_OW 336
// SetClass ( [ Joan , Denis , DeltaDoctor , Simms ] , class_scientistic ) ;
4323: LD_EXP 34
4327: PUSH
4328: LD_EXP 25
4332: PUSH
4333: LD_EXP 35
4337: PUSH
4338: LD_EXP 33
4342: PUSH
4343: EMPTY
4344: LIST
4345: LIST
4346: LIST
4347: LIST
4348: PPUSH
4349: LD_INT 4
4351: PPUSH
4352: CALL_OW 336
// selected = CharacterSelection (  , 7 , 7 , [ sel_dont_change_class , JMM , Roth , Simms , Denis , DeltaDoctor , sel_not_hired , sel_changeable , sel_change_class ] ^ friends , [ class_soldier , [ class_scientistic , 2 ] , [ class_sniper , 0 , 3 ] ] ) ;
4356: LD_ADDR_EXP 3
4360: PUSH
4361: LD_STRING 
4363: PPUSH
4364: LD_INT 7
4366: PPUSH
4367: LD_INT 7
4369: PPUSH
4370: LD_INT -6
4372: PUSH
4373: LD_EXP 12
4377: PUSH
4378: LD_EXP 13
4382: PUSH
4383: LD_EXP 33
4387: PUSH
4388: LD_EXP 25
4392: PUSH
4393: LD_EXP 35
4397: PUSH
4398: LD_INT -2
4400: PUSH
4401: LD_INT -3
4403: PUSH
4404: LD_INT -5
4406: PUSH
4407: EMPTY
4408: LIST
4409: LIST
4410: LIST
4411: LIST
4412: LIST
4413: LIST
4414: LIST
4415: LIST
4416: LIST
4417: PUSH
4418: LD_EXP 4
4422: ADD
4423: PPUSH
4424: LD_INT 1
4426: PUSH
4427: LD_INT 4
4429: PUSH
4430: LD_INT 2
4432: PUSH
4433: EMPTY
4434: LIST
4435: LIST
4436: PUSH
4437: LD_INT 5
4439: PUSH
4440: LD_INT 0
4442: PUSH
4443: LD_INT 3
4445: PUSH
4446: EMPTY
4447: LIST
4448: LIST
4449: LIST
4450: PUSH
4451: EMPTY
4452: LIST
4453: LIST
4454: LIST
4455: PPUSH
4456: CALL_OW 42
4460: ST_TO_ADDR
// if Simms then
4461: LD_EXP 33
4465: IFFALSE 4483
// selected := selected ^ Simms ;
4467: LD_ADDR_EXP 3
4471: PUSH
4472: LD_EXP 3
4476: PUSH
4477: LD_EXP 33
4481: ADD
4482: ST_TO_ADDR
// if Denis then
4483: LD_EXP 25
4487: IFFALSE 4505
// selected := selected ^ Denis ;
4489: LD_ADDR_EXP 3
4493: PUSH
4494: LD_EXP 3
4498: PUSH
4499: LD_EXP 25
4503: ADD
4504: ST_TO_ADDR
// if DeltaDoctor then
4505: LD_EXP 35
4509: IFFALSE 4527
// selected := selected ^ DeltaDoctor ;
4511: LD_ADDR_EXP 3
4515: PUSH
4516: LD_EXP 3
4520: PUSH
4521: LD_EXP 35
4525: ADD
4526: ST_TO_ADDR
// friends := friends diff selected ;
4527: LD_ADDR_EXP 4
4531: PUSH
4532: LD_EXP 4
4536: PUSH
4537: LD_EXP 3
4541: DIFF
4542: ST_TO_ADDR
// buildings := [ [ ambar1 , ambar2 , ambar3 ] , [ amlab2 , amlab3 , amlab4 ] ] ;
4543: LD_ADDR_VAR 0 4
4547: PUSH
4548: LD_INT 111
4550: PUSH
4551: LD_INT 137
4553: PUSH
4554: LD_INT 51
4556: PUSH
4557: EMPTY
4558: LIST
4559: LIST
4560: LIST
4561: PUSH
4562: LD_INT 147
4564: PUSH
4565: LD_INT 129
4567: PUSH
4568: LD_INT 25
4570: PUSH
4571: EMPTY
4572: LIST
4573: LIST
4574: LIST
4575: PUSH
4576: EMPTY
4577: LIST
4578: LIST
4579: ST_TO_ADDR
// areas := [ friends_spawn_1 , friends_spawn_2 , friends_spawn_3 , friends_spawn_4 , friends_spawn_5 , friends_spawn_6 ] ;
4580: LD_ADDR_VAR 0 5
4584: PUSH
4585: LD_INT 5
4587: PUSH
4588: LD_INT 6
4590: PUSH
4591: LD_INT 7
4593: PUSH
4594: LD_INT 8
4596: PUSH
4597: LD_INT 17
4599: PUSH
4600: LD_INT 18
4602: PUSH
4603: EMPTY
4604: LIST
4605: LIST
4606: LIST
4607: LIST
4608: LIST
4609: LIST
4610: ST_TO_ADDR
// for i in buildings do
4611: LD_ADDR_VAR 0 2
4615: PUSH
4616: LD_VAR 0 4
4620: PUSH
4621: FOR_IN
4622: IFFALSE 4638
// SetSide ( i , 4 ) ;
4624: LD_VAR 0 2
4628: PPUSH
4629: LD_INT 4
4631: PPUSH
4632: CALL_OW 235
4636: GO 4621
4638: POP
4639: POP
// for i in selected do
4640: LD_ADDR_VAR 0 2
4644: PUSH
4645: LD_EXP 3
4649: PUSH
4650: FOR_IN
4651: IFFALSE 4913
// begin if GetClass ( i ) in [ 1 , 5 ] then
4653: LD_VAR 0 2
4657: PPUSH
4658: CALL_OW 257
4662: PUSH
4663: LD_INT 1
4665: PUSH
4666: LD_INT 5
4668: PUSH
4669: EMPTY
4670: LIST
4671: LIST
4672: IN
4673: IFFALSE 4794
// begin if buildings [ 1 ] then
4675: LD_VAR 0 4
4679: PUSH
4680: LD_INT 1
4682: ARRAY
4683: IFFALSE 4744
// begin PlaceHumanInUnit ( i , buildings [ 1 ] [ 1 ] ) ;
4685: LD_VAR 0 2
4689: PPUSH
4690: LD_VAR 0 4
4694: PUSH
4695: LD_INT 1
4697: ARRAY
4698: PUSH
4699: LD_INT 1
4701: ARRAY
4702: PPUSH
4703: CALL_OW 52
// buildings := Replace ( buildings , 1 , Delete ( buildings [ 1 ] , 1 ) ) ;
4707: LD_ADDR_VAR 0 4
4711: PUSH
4712: LD_VAR 0 4
4716: PPUSH
4717: LD_INT 1
4719: PPUSH
4720: LD_VAR 0 4
4724: PUSH
4725: LD_INT 1
4727: ARRAY
4728: PPUSH
4729: LD_INT 1
4731: PPUSH
4732: CALL_OW 3
4736: PPUSH
4737: CALL_OW 1
4741: ST_TO_ADDR
// end else
4742: GO 4792
// begin PlaceUnitArea ( i , areas [ 1 ] , false ) ;
4744: LD_VAR 0 2
4748: PPUSH
4749: LD_VAR 0 5
4753: PUSH
4754: LD_INT 1
4756: ARRAY
4757: PPUSH
4758: LD_INT 0
4760: PPUSH
4761: CALL_OW 49
// ComHold ( i ) ;
4765: LD_VAR 0 2
4769: PPUSH
4770: CALL_OW 140
// areas := Delete ( areas , 1 ) ;
4774: LD_ADDR_VAR 0 5
4778: PUSH
4779: LD_VAR 0 5
4783: PPUSH
4784: LD_INT 1
4786: PPUSH
4787: CALL_OW 3
4791: ST_TO_ADDR
// end ; end else
4792: GO 4911
// begin if buildings [ 2 ] then
4794: LD_VAR 0 4
4798: PUSH
4799: LD_INT 2
4801: ARRAY
4802: IFFALSE 4863
// begin PlaceHumanInUnit ( i , buildings [ 2 ] [ 1 ] ) ;
4804: LD_VAR 0 2
4808: PPUSH
4809: LD_VAR 0 4
4813: PUSH
4814: LD_INT 2
4816: ARRAY
4817: PUSH
4818: LD_INT 1
4820: ARRAY
4821: PPUSH
4822: CALL_OW 52
// buildings := Replace ( buildings , 2 , Delete ( buildings [ 2 ] , 1 ) ) ;
4826: LD_ADDR_VAR 0 4
4830: PUSH
4831: LD_VAR 0 4
4835: PPUSH
4836: LD_INT 2
4838: PPUSH
4839: LD_VAR 0 4
4843: PUSH
4844: LD_INT 2
4846: ARRAY
4847: PPUSH
4848: LD_INT 1
4850: PPUSH
4851: CALL_OW 3
4855: PPUSH
4856: CALL_OW 1
4860: ST_TO_ADDR
// end else
4861: GO 4911
// begin PlaceUnitArea ( i , areas [ 1 ] , false ) ;
4863: LD_VAR 0 2
4867: PPUSH
4868: LD_VAR 0 5
4872: PUSH
4873: LD_INT 1
4875: ARRAY
4876: PPUSH
4877: LD_INT 0
4879: PPUSH
4880: CALL_OW 49
// ComHold ( i ) ;
4884: LD_VAR 0 2
4888: PPUSH
4889: CALL_OW 140
// areas := Delete ( areas , 1 ) ;
4893: LD_ADDR_VAR 0 5
4897: PUSH
4898: LD_VAR 0 5
4902: PPUSH
4903: LD_INT 1
4905: PPUSH
4906: CALL_OW 3
4910: ST_TO_ADDR
// end ; end ; end ;
4911: GO 4650
4913: POP
4914: POP
// bunkers := FilterAllUnits ( [ [ f_side , 1 ] , [ f_btype , b_bunker ] ] ) ;
4915: LD_ADDR_VAR 0 6
4919: PUSH
4920: LD_INT 22
4922: PUSH
4923: LD_INT 1
4925: PUSH
4926: EMPTY
4927: LIST
4928: LIST
4929: PUSH
4930: LD_INT 30
4932: PUSH
4933: LD_INT 32
4935: PUSH
4936: EMPTY
4937: LIST
4938: LIST
4939: PUSH
4940: EMPTY
4941: LIST
4942: LIST
4943: PPUSH
4944: CALL_OW 69
4948: ST_TO_ADDR
// for i = bunkers - friends downto 1 do
4949: LD_ADDR_VAR 0 2
4953: PUSH
4954: DOUBLE
4955: LD_VAR 0 6
4959: PUSH
4960: LD_EXP 4
4964: MINUS
4965: INC
4966: ST_TO_ADDR
4967: LD_INT 1
4969: PUSH
4970: FOR_DOWNTO
4971: IFFALSE 5034
// begin PrepareHuman ( false , 1 , [ 7 , 8 , 9 ] [ Difficulty ] ) ;
4973: LD_INT 0
4975: PPUSH
4976: LD_INT 1
4978: PPUSH
4979: LD_INT 7
4981: PUSH
4982: LD_INT 8
4984: PUSH
4985: LD_INT 9
4987: PUSH
4988: EMPTY
4989: LIST
4990: LIST
4991: LIST
4992: PUSH
4993: LD_OWVAR 67
4997: ARRAY
4998: PPUSH
4999: CALL_OW 380
// friends := Insert ( friends , friends + 1 , CreateHuman ) ;
5003: LD_ADDR_EXP 4
5007: PUSH
5008: LD_EXP 4
5012: PPUSH
5013: LD_EXP 4
5017: PUSH
5018: LD_INT 1
5020: PLUS
5021: PPUSH
5022: CALL_OW 44
5026: PPUSH
5027: CALL_OW 2
5031: ST_TO_ADDR
// end ;
5032: GO 4970
5034: POP
5035: POP
// if friends then
5036: LD_EXP 4
5040: IFFALSE 5156
// begin tmp := friends ;
5042: LD_ADDR_VAR 0 3
5046: PUSH
5047: LD_EXP 4
5051: ST_TO_ADDR
// for i = 1 to bunkers do
5052: LD_ADDR_VAR 0 2
5056: PUSH
5057: DOUBLE
5058: LD_INT 1
5060: DEC
5061: ST_TO_ADDR
5062: LD_VAR 0 6
5066: PUSH
5067: FOR_TO
5068: IFFALSE 5154
// begin SetSide ( tmp [ tmp ] , 1 ) ;
5070: LD_VAR 0 3
5074: PUSH
5075: LD_VAR 0 3
5079: ARRAY
5080: PPUSH
5081: LD_INT 1
5083: PPUSH
5084: CALL_OW 235
// SetClass ( tmp [ tmp ] , 1 ) ;
5088: LD_VAR 0 3
5092: PUSH
5093: LD_VAR 0 3
5097: ARRAY
5098: PPUSH
5099: LD_INT 1
5101: PPUSH
5102: CALL_OW 336
// PlaceHumanInUnit ( tmp [ tmp ] , bunkers [ i ] ) ;
5106: LD_VAR 0 3
5110: PUSH
5111: LD_VAR 0 3
5115: ARRAY
5116: PPUSH
5117: LD_VAR 0 6
5121: PUSH
5122: LD_VAR 0 2
5126: ARRAY
5127: PPUSH
5128: CALL_OW 52
// tmp := Delete ( tmp , tmp ) ;
5132: LD_ADDR_VAR 0 3
5136: PUSH
5137: LD_VAR 0 3
5141: PPUSH
5142: LD_VAR 0 3
5146: PPUSH
5147: CALL_OW 3
5151: ST_TO_ADDR
// end ;
5152: GO 5067
5154: POP
5155: POP
// end ; areas := areas union [ guard_spawn_1 , guard_spawn_2 , guard_spawn_3 , guard_spawn_4 , guard_spawn_5 , guard_spawn_6 , guard_spawn_7 , guard_spawn_8 , guard_spawn_9 , guard_spawn_10 , guard_spawn_11 , guard_spawn_12 , guard_spawn_13 , guard_spawn_14 , guard_spawn_15 , guard_spawn_16 , guard_spawn_17 , guard_spawn_18 , guard_spawn_19 , guard_spawn_20 ] ;
5156: LD_ADDR_VAR 0 5
5160: PUSH
5161: LD_VAR 0 5
5165: PUSH
5166: LD_INT 9
5168: PUSH
5169: LD_INT 10
5171: PUSH
5172: LD_INT 11
5174: PUSH
5175: LD_INT 12
5177: PUSH
5178: LD_INT 13
5180: PUSH
5181: LD_INT 14
5183: PUSH
5184: LD_INT 15
5186: PUSH
5187: LD_INT 16
5189: PUSH
5190: LD_INT 26
5192: PUSH
5193: LD_INT 27
5195: PUSH
5196: LD_INT 28
5198: PUSH
5199: LD_INT 29
5201: PUSH
5202: LD_INT 30
5204: PUSH
5205: LD_INT 31
5207: PUSH
5208: LD_INT 32
5210: PUSH
5211: LD_INT 33
5213: PUSH
5214: LD_INT 34
5216: PUSH
5217: LD_INT 35
5219: PUSH
5220: LD_INT 36
5222: PUSH
5223: LD_INT 37
5225: PUSH
5226: EMPTY
5227: LIST
5228: LIST
5229: LIST
5230: LIST
5231: LIST
5232: LIST
5233: LIST
5234: LIST
5235: LIST
5236: LIST
5237: LIST
5238: LIST
5239: LIST
5240: LIST
5241: LIST
5242: LIST
5243: LIST
5244: LIST
5245: LIST
5246: LIST
5247: UNION
5248: ST_TO_ADDR
// for i in friends do
5249: LD_ADDR_VAR 0 2
5253: PUSH
5254: LD_EXP 4
5258: PUSH
5259: FOR_IN
5260: IFFALSE 5528
// begin SetTag ( i , 2 ) ;
5262: LD_VAR 0 2
5266: PPUSH
5267: LD_INT 2
5269: PPUSH
5270: CALL_OW 109
// if GetClass ( i ) = 1 and buildings [ 1 ] then
5274: LD_VAR 0 2
5278: PPUSH
5279: CALL_OW 257
5283: PUSH
5284: LD_INT 1
5286: EQUAL
5287: PUSH
5288: LD_VAR 0 4
5292: PUSH
5293: LD_INT 1
5295: ARRAY
5296: AND
5297: IFFALSE 5358
// begin PlaceHumanInUnit ( i , buildings [ 1 ] [ 1 ] ) ;
5299: LD_VAR 0 2
5303: PPUSH
5304: LD_VAR 0 4
5308: PUSH
5309: LD_INT 1
5311: ARRAY
5312: PUSH
5313: LD_INT 1
5315: ARRAY
5316: PPUSH
5317: CALL_OW 52
// buildings := Replace ( buildings , 1 , Delete ( buildings [ 1 ] , 1 ) ) ;
5321: LD_ADDR_VAR 0 4
5325: PUSH
5326: LD_VAR 0 4
5330: PPUSH
5331: LD_INT 1
5333: PPUSH
5334: LD_VAR 0 4
5338: PUSH
5339: LD_INT 1
5341: ARRAY
5342: PPUSH
5343: LD_INT 1
5345: PPUSH
5346: CALL_OW 3
5350: PPUSH
5351: CALL_OW 1
5355: ST_TO_ADDR
// continue ;
5356: GO 5259
// end ; if GetClass ( i ) = 4 and buildings [ 2 ] then
5358: LD_VAR 0 2
5362: PPUSH
5363: CALL_OW 257
5367: PUSH
5368: LD_INT 4
5370: EQUAL
5371: PUSH
5372: LD_VAR 0 4
5376: PUSH
5377: LD_INT 2
5379: ARRAY
5380: AND
5381: IFFALSE 5442
// begin PlaceHumanInUnit ( i , buildings [ 2 ] [ 1 ] ) ;
5383: LD_VAR 0 2
5387: PPUSH
5388: LD_VAR 0 4
5392: PUSH
5393: LD_INT 2
5395: ARRAY
5396: PUSH
5397: LD_INT 1
5399: ARRAY
5400: PPUSH
5401: CALL_OW 52
// buildings := Replace ( buildings , 2 , Delete ( buildings [ 2 ] , 1 ) ) ;
5405: LD_ADDR_VAR 0 4
5409: PUSH
5410: LD_VAR 0 4
5414: PPUSH
5415: LD_INT 2
5417: PPUSH
5418: LD_VAR 0 4
5422: PUSH
5423: LD_INT 2
5425: ARRAY
5426: PPUSH
5427: LD_INT 1
5429: PPUSH
5430: CALL_OW 3
5434: PPUSH
5435: CALL_OW 1
5439: ST_TO_ADDR
// continue ;
5440: GO 5259
// end ; PlaceUnitArea ( i , areas [ 1 ] , false ) ;
5442: LD_VAR 0 2
5446: PPUSH
5447: LD_VAR 0 5
5451: PUSH
5452: LD_INT 1
5454: ARRAY
5455: PPUSH
5456: LD_INT 0
5458: PPUSH
5459: CALL_OW 49
// areas := Delete ( areas , 1 ) ;
5463: LD_ADDR_VAR 0 5
5467: PUSH
5468: LD_VAR 0 5
5472: PPUSH
5473: LD_INT 1
5475: PPUSH
5476: CALL_OW 3
5480: ST_TO_ADDR
// if GetClass ( i ) <> 1 then
5481: LD_VAR 0 2
5485: PPUSH
5486: CALL_OW 257
5490: PUSH
5491: LD_INT 1
5493: NONEQUAL
5494: IFFALSE 5508
// SetClass ( i , 1 ) ;
5496: LD_VAR 0 2
5500: PPUSH
5501: LD_INT 1
5503: PPUSH
5504: CALL_OW 336
// ComHold ( i ) ;
5508: LD_VAR 0 2
5512: PPUSH
5513: CALL_OW 140
// if not areas then
5517: LD_VAR 0 5
5521: NOT
5522: IFFALSE 5526
// break ;
5524: GO 5528
// end ;
5526: GO 5259
5528: POP
5529: POP
// if UnitFilter ( friends , [ f_not , [ f_placed ] ] ) then
5530: LD_EXP 4
5534: PPUSH
5535: LD_INT 3
5537: PUSH
5538: LD_INT 52
5540: PUSH
5541: EMPTY
5542: LIST
5543: PUSH
5544: EMPTY
5545: LIST
5546: LIST
5547: PPUSH
5548: CALL_OW 72
5552: IFFALSE 5619
// for i in UnitFilter ( friends , [ f_not , [ f_placed ] ] ) do
5554: LD_ADDR_VAR 0 2
5558: PUSH
5559: LD_EXP 4
5563: PPUSH
5564: LD_INT 3
5566: PUSH
5567: LD_INT 52
5569: PUSH
5570: EMPTY
5571: LIST
5572: PUSH
5573: EMPTY
5574: LIST
5575: LIST
5576: PPUSH
5577: CALL_OW 72
5581: PUSH
5582: FOR_IN
5583: IFFALSE 5617
// begin PlaceUnitXYR ( i , 65 , 58 , 7 , false ) ;
5585: LD_VAR 0 2
5589: PPUSH
5590: LD_INT 65
5592: PPUSH
5593: LD_INT 58
5595: PPUSH
5596: LD_INT 7
5598: PPUSH
5599: LD_INT 0
5601: PPUSH
5602: CALL_OW 50
// ComHold ( i ) ;
5606: LD_VAR 0 2
5610: PPUSH
5611: CALL_OW 140
// end ;
5615: GO 5582
5617: POP
5618: POP
// if Frank then
5619: LD_EXP 31
5623: IFFALSE 5637
// SetClass ( Frank , class_sniper ) ;
5625: LD_EXP 31
5629: PPUSH
5630: LD_INT 5
5632: PPUSH
5633: CALL_OW 336
// end ; end_of_file
5637: LD_VAR 0 1
5641: RET
// export function PrepareUnit ( ident , exist_mode , prefix ) ; var unit ; begin
5642: LD_INT 0
5644: PPUSH
5645: PPUSH
// if exist_mode then
5646: LD_VAR 0 2
5650: IFFALSE 5675
// unit := CreateCharacter ( prefix & ident ) else
5652: LD_ADDR_VAR 0 5
5656: PUSH
5657: LD_VAR 0 3
5661: PUSH
5662: LD_VAR 0 1
5666: STR
5667: PPUSH
5668: CALL_OW 34
5672: ST_TO_ADDR
5673: GO 5690
// unit := NewCharacter ( ident ) ;
5675: LD_ADDR_VAR 0 5
5679: PUSH
5680: LD_VAR 0 1
5684: PPUSH
5685: CALL_OW 25
5689: ST_TO_ADDR
// result := unit ;
5690: LD_ADDR_VAR 0 4
5694: PUSH
5695: LD_VAR 0 5
5699: ST_TO_ADDR
// end ;
5700: LD_VAR 0 4
5704: RET
// export function PrepareVehicle ( chassis , engine , control , weapon , fuel ) ; begin
5705: LD_INT 0
5707: PPUSH
// vc_chassis := chassis ;
5708: LD_ADDR_OWVAR 37
5712: PUSH
5713: LD_VAR 0 1
5717: ST_TO_ADDR
// vc_engine := engine ;
5718: LD_ADDR_OWVAR 39
5722: PUSH
5723: LD_VAR 0 2
5727: ST_TO_ADDR
// vc_control := control ;
5728: LD_ADDR_OWVAR 38
5732: PUSH
5733: LD_VAR 0 3
5737: ST_TO_ADDR
// vc_weapon := weapon ;
5738: LD_ADDR_OWVAR 40
5742: PUSH
5743: LD_VAR 0 4
5747: ST_TO_ADDR
// vc_fuel_battery := fuel ;
5748: LD_ADDR_OWVAR 41
5752: PUSH
5753: LD_VAR 0 5
5757: ST_TO_ADDR
// end ;
5758: LD_VAR 0 6
5762: RET
// export function CanSayRand ( side ) ; begin
5763: LD_INT 0
5765: PPUSH
// result := FilterAllUnits ( [ [ f_placed ] , [ f_side , side ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] ] ] ) diff [ JMM , Frank , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Powell , Cornel , Gary , Kikuchi ] ;
5766: LD_ADDR_VAR 0 2
5770: PUSH
5771: LD_INT 52
5773: PUSH
5774: EMPTY
5775: LIST
5776: PUSH
5777: LD_INT 22
5779: PUSH
5780: LD_VAR 0 1
5784: PUSH
5785: EMPTY
5786: LIST
5787: LIST
5788: PUSH
5789: LD_INT 2
5791: PUSH
5792: LD_INT 25
5794: PUSH
5795: LD_INT 1
5797: PUSH
5798: EMPTY
5799: LIST
5800: LIST
5801: PUSH
5802: LD_INT 25
5804: PUSH
5805: LD_INT 2
5807: PUSH
5808: EMPTY
5809: LIST
5810: LIST
5811: PUSH
5812: LD_INT 25
5814: PUSH
5815: LD_INT 3
5817: PUSH
5818: EMPTY
5819: LIST
5820: LIST
5821: PUSH
5822: LD_INT 25
5824: PUSH
5825: LD_INT 4
5827: PUSH
5828: EMPTY
5829: LIST
5830: LIST
5831: PUSH
5832: EMPTY
5833: LIST
5834: LIST
5835: LIST
5836: LIST
5837: LIST
5838: PUSH
5839: EMPTY
5840: LIST
5841: LIST
5842: LIST
5843: PPUSH
5844: CALL_OW 69
5848: PUSH
5849: LD_EXP 12
5853: PUSH
5854: LD_EXP 31
5858: PUSH
5859: LD_EXP 21
5863: PUSH
5864: LD_EXP 22
5868: PUSH
5869: LD_EXP 23
5873: PUSH
5874: LD_EXP 24
5878: PUSH
5879: LD_EXP 25
5883: PUSH
5884: LD_EXP 26
5888: PUSH
5889: LD_EXP 27
5893: PUSH
5894: LD_EXP 28
5898: PUSH
5899: LD_EXP 14
5903: PUSH
5904: LD_EXP 29
5908: PUSH
5909: LD_EXP 30
5913: PUSH
5914: LD_EXP 32
5918: PUSH
5919: EMPTY
5920: LIST
5921: LIST
5922: LIST
5923: LIST
5924: LIST
5925: LIST
5926: LIST
5927: LIST
5928: LIST
5929: LIST
5930: LIST
5931: LIST
5932: LIST
5933: LIST
5934: DIFF
5935: ST_TO_ADDR
// end ;
5936: LD_VAR 0 2
5940: RET
// export function Connect ( vehicle ) ; var i , t , mech , tmp , j ; begin
5941: LD_INT 0
5943: PPUSH
5944: PPUSH
5945: PPUSH
5946: PPUSH
5947: PPUSH
5948: PPUSH
// if not vehicle or not GetControl ( vehicle ) = control_remote then
5949: LD_VAR 0 1
5953: NOT
5954: PUSH
5955: LD_VAR 0 1
5959: PPUSH
5960: CALL_OW 263
5964: PUSH
5965: LD_INT 2
5967: EQUAL
5968: NOT
5969: OR
5970: IFFALSE 5974
// exit ;
5972: GO 6290
// tmp := FilterAllUnits ( [ [ f_side , GetSide ( vehicle ) ] , [ f_or , [ f_btype , b_control_tower ] , [ f_weapon , ar_control_tower ] ] ] ) ;
5974: LD_ADDR_VAR 0 6
5978: PUSH
5979: LD_INT 22
5981: PUSH
5982: LD_VAR 0 1
5986: PPUSH
5987: CALL_OW 255
5991: PUSH
5992: EMPTY
5993: LIST
5994: LIST
5995: PUSH
5996: LD_INT 2
5998: PUSH
5999: LD_INT 30
6001: PUSH
6002: LD_INT 36
6004: PUSH
6005: EMPTY
6006: LIST
6007: LIST
6008: PUSH
6009: LD_INT 34
6011: PUSH
6012: LD_INT 31
6014: PUSH
6015: EMPTY
6016: LIST
6017: LIST
6018: PUSH
6019: EMPTY
6020: LIST
6021: LIST
6022: LIST
6023: PUSH
6024: EMPTY
6025: LIST
6026: LIST
6027: PPUSH
6028: CALL_OW 69
6032: ST_TO_ADDR
// if not tmp then
6033: LD_VAR 0 6
6037: NOT
6038: IFFALSE 6042
// exit ;
6040: GO 6290
// result := [ ] ;
6042: LD_ADDR_VAR 0 2
6046: PUSH
6047: EMPTY
6048: ST_TO_ADDR
// for i in tmp do
6049: LD_ADDR_VAR 0 3
6053: PUSH
6054: LD_VAR 0 6
6058: PUSH
6059: FOR_IN
6060: IFFALSE 6131
// begin t := UnitsInside ( i ) ;
6062: LD_ADDR_VAR 0 4
6066: PUSH
6067: LD_VAR 0 3
6071: PPUSH
6072: CALL_OW 313
6076: ST_TO_ADDR
// if t then
6077: LD_VAR 0 4
6081: IFFALSE 6129
// for j in t do
6083: LD_ADDR_VAR 0 7
6087: PUSH
6088: LD_VAR 0 4
6092: PUSH
6093: FOR_IN
6094: IFFALSE 6127
// result := Insert ( result , result + 1 , j ) ;
6096: LD_ADDR_VAR 0 2
6100: PUSH
6101: LD_VAR 0 2
6105: PPUSH
6106: LD_VAR 0 2
6110: PUSH
6111: LD_INT 1
6113: PLUS
6114: PPUSH
6115: LD_VAR 0 7
6119: PPUSH
6120: CALL_OW 2
6124: ST_TO_ADDR
6125: GO 6093
6127: POP
6128: POP
// end ;
6129: GO 6059
6131: POP
6132: POP
// if not result then
6133: LD_VAR 0 2
6137: NOT
6138: IFFALSE 6142
// exit ;
6140: GO 6290
// mech := result [ 1 ] ;
6142: LD_ADDR_VAR 0 5
6146: PUSH
6147: LD_VAR 0 2
6151: PUSH
6152: LD_INT 1
6154: ARRAY
6155: ST_TO_ADDR
// if result > 1 then
6156: LD_VAR 0 2
6160: PUSH
6161: LD_INT 1
6163: GREATER
6164: IFFALSE 6276
// for i = 2 to result do
6166: LD_ADDR_VAR 0 3
6170: PUSH
6171: DOUBLE
6172: LD_INT 2
6174: DEC
6175: ST_TO_ADDR
6176: LD_VAR 0 2
6180: PUSH
6181: FOR_TO
6182: IFFALSE 6274
// begin t := GetSkill ( result [ i ] , 3 ) - UnitsLinked ( result [ i ] ) ;
6184: LD_ADDR_VAR 0 4
6188: PUSH
6189: LD_VAR 0 2
6193: PUSH
6194: LD_VAR 0 3
6198: ARRAY
6199: PPUSH
6200: LD_INT 3
6202: PPUSH
6203: CALL_OW 259
6207: PUSH
6208: LD_VAR 0 2
6212: PUSH
6213: LD_VAR 0 3
6217: ARRAY
6218: PPUSH
6219: CALL_OW 432
6223: MINUS
6224: ST_TO_ADDR
// if t >= ( GetSkill ( mech , 3 ) - UnitsLinked ( mech ) ) then
6225: LD_VAR 0 4
6229: PUSH
6230: LD_VAR 0 5
6234: PPUSH
6235: LD_INT 3
6237: PPUSH
6238: CALL_OW 259
6242: PUSH
6243: LD_VAR 0 5
6247: PPUSH
6248: CALL_OW 432
6252: MINUS
6253: GREATEREQUAL
6254: IFFALSE 6272
// mech := result [ i ] ;
6256: LD_ADDR_VAR 0 5
6260: PUSH
6261: LD_VAR 0 2
6265: PUSH
6266: LD_VAR 0 3
6270: ARRAY
6271: ST_TO_ADDR
// end ;
6272: GO 6181
6274: POP
6275: POP
// ComLinkTo ( vehicle , mech ) ;
6276: LD_VAR 0 1
6280: PPUSH
6281: LD_VAR 0 5
6285: PPUSH
6286: CALL_OW 135
// end ;
6290: LD_VAR 0 2
6294: RET
// export function SayRand ( sex , dial ) ; begin
6295: LD_INT 0
6297: PPUSH
// result := FilterAllUnits ( [ [ f_placed ] , [ f_side , 1 ] , [ f_sex , sex ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] ] ] ) diff [ JMM , Frank , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Powell , Cornel , Gary , Kikuchi ] ;
6298: LD_ADDR_VAR 0 3
6302: PUSH
6303: LD_INT 52
6305: PUSH
6306: EMPTY
6307: LIST
6308: PUSH
6309: LD_INT 22
6311: PUSH
6312: LD_INT 1
6314: PUSH
6315: EMPTY
6316: LIST
6317: LIST
6318: PUSH
6319: LD_INT 26
6321: PUSH
6322: LD_VAR 0 1
6326: PUSH
6327: EMPTY
6328: LIST
6329: LIST
6330: PUSH
6331: LD_INT 2
6333: PUSH
6334: LD_INT 25
6336: PUSH
6337: LD_INT 1
6339: PUSH
6340: EMPTY
6341: LIST
6342: LIST
6343: PUSH
6344: LD_INT 25
6346: PUSH
6347: LD_INT 2
6349: PUSH
6350: EMPTY
6351: LIST
6352: LIST
6353: PUSH
6354: LD_INT 25
6356: PUSH
6357: LD_INT 3
6359: PUSH
6360: EMPTY
6361: LIST
6362: LIST
6363: PUSH
6364: LD_INT 25
6366: PUSH
6367: LD_INT 4
6369: PUSH
6370: EMPTY
6371: LIST
6372: LIST
6373: PUSH
6374: EMPTY
6375: LIST
6376: LIST
6377: LIST
6378: LIST
6379: LIST
6380: PUSH
6381: EMPTY
6382: LIST
6383: LIST
6384: LIST
6385: LIST
6386: PPUSH
6387: CALL_OW 69
6391: PUSH
6392: LD_EXP 12
6396: PUSH
6397: LD_EXP 31
6401: PUSH
6402: LD_EXP 21
6406: PUSH
6407: LD_EXP 22
6411: PUSH
6412: LD_EXP 23
6416: PUSH
6417: LD_EXP 24
6421: PUSH
6422: LD_EXP 25
6426: PUSH
6427: LD_EXP 26
6431: PUSH
6432: LD_EXP 27
6436: PUSH
6437: LD_EXP 28
6441: PUSH
6442: LD_EXP 14
6446: PUSH
6447: LD_EXP 29
6451: PUSH
6452: LD_EXP 30
6456: PUSH
6457: LD_EXP 32
6461: PUSH
6462: EMPTY
6463: LIST
6464: LIST
6465: LIST
6466: LIST
6467: LIST
6468: LIST
6469: LIST
6470: LIST
6471: LIST
6472: LIST
6473: LIST
6474: LIST
6475: LIST
6476: LIST
6477: DIFF
6478: ST_TO_ADDR
// if not result then
6479: LD_VAR 0 3
6483: NOT
6484: IFFALSE 6488
// exit ;
6486: GO 6516
// result := result [ 1 ] ;
6488: LD_ADDR_VAR 0 3
6492: PUSH
6493: LD_VAR 0 3
6497: PUSH
6498: LD_INT 1
6500: ARRAY
6501: ST_TO_ADDR
// Say ( result , dial ) ;
6502: LD_VAR 0 3
6506: PPUSH
6507: LD_VAR 0 2
6511: PPUSH
6512: CALL_OW 88
// end ;
6516: LD_VAR 0 3
6520: RET
// export function SayRand2 ( sex , dial , filter ) ; begin
6521: LD_INT 0
6523: PPUSH
// result := FilterAllUnits ( [ [ f_side , 1 ] , [ f_sex , sex ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] ] ] ) diff [ JMM , Frank , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Powell , Cornel , Gary , Kikuchi ] ^ filter ;
6524: LD_ADDR_VAR 0 4
6528: PUSH
6529: LD_INT 22
6531: PUSH
6532: LD_INT 1
6534: PUSH
6535: EMPTY
6536: LIST
6537: LIST
6538: PUSH
6539: LD_INT 26
6541: PUSH
6542: LD_VAR 0 1
6546: PUSH
6547: EMPTY
6548: LIST
6549: LIST
6550: PUSH
6551: LD_INT 2
6553: PUSH
6554: LD_INT 25
6556: PUSH
6557: LD_INT 1
6559: PUSH
6560: EMPTY
6561: LIST
6562: LIST
6563: PUSH
6564: LD_INT 25
6566: PUSH
6567: LD_INT 2
6569: PUSH
6570: EMPTY
6571: LIST
6572: LIST
6573: PUSH
6574: LD_INT 25
6576: PUSH
6577: LD_INT 3
6579: PUSH
6580: EMPTY
6581: LIST
6582: LIST
6583: PUSH
6584: LD_INT 25
6586: PUSH
6587: LD_INT 4
6589: PUSH
6590: EMPTY
6591: LIST
6592: LIST
6593: PUSH
6594: EMPTY
6595: LIST
6596: LIST
6597: LIST
6598: LIST
6599: LIST
6600: PUSH
6601: EMPTY
6602: LIST
6603: LIST
6604: LIST
6605: PPUSH
6606: CALL_OW 69
6610: PUSH
6611: LD_EXP 12
6615: PUSH
6616: LD_EXP 31
6620: PUSH
6621: LD_EXP 21
6625: PUSH
6626: LD_EXP 22
6630: PUSH
6631: LD_EXP 23
6635: PUSH
6636: LD_EXP 24
6640: PUSH
6641: LD_EXP 25
6645: PUSH
6646: LD_EXP 26
6650: PUSH
6651: LD_EXP 27
6655: PUSH
6656: LD_EXP 28
6660: PUSH
6661: LD_EXP 14
6665: PUSH
6666: LD_EXP 29
6670: PUSH
6671: LD_EXP 30
6675: PUSH
6676: LD_EXP 32
6680: PUSH
6681: EMPTY
6682: LIST
6683: LIST
6684: LIST
6685: LIST
6686: LIST
6687: LIST
6688: LIST
6689: LIST
6690: LIST
6691: LIST
6692: LIST
6693: LIST
6694: LIST
6695: LIST
6696: PUSH
6697: LD_VAR 0 3
6701: ADD
6702: DIFF
6703: ST_TO_ADDR
// if not result then
6704: LD_VAR 0 4
6708: NOT
6709: IFFALSE 6713
// exit ;
6711: GO 6741
// result := result [ 1 ] ;
6713: LD_ADDR_VAR 0 4
6717: PUSH
6718: LD_VAR 0 4
6722: PUSH
6723: LD_INT 1
6725: ARRAY
6726: ST_TO_ADDR
// Say ( result , dial ) ;
6727: LD_VAR 0 4
6731: PPUSH
6732: LD_VAR 0 2
6736: PPUSH
6737: CALL_OW 88
// end ;
6741: LD_VAR 0 4
6745: RET
// export function Patrol ( unit , path , flags ) ; var i , x , y , c , p , station , tmp_path , status , enemy , e , spot_dist , safe_place , chase_range , need_refuel ; begin
6746: LD_INT 0
6748: PPUSH
6749: PPUSH
6750: PPUSH
6751: PPUSH
6752: PPUSH
6753: PPUSH
6754: PPUSH
6755: PPUSH
6756: PPUSH
6757: PPUSH
6758: PPUSH
6759: PPUSH
6760: PPUSH
6761: PPUSH
6762: PPUSH
// if not unit or not path or GetType ( unit ) = unit_building then
6763: LD_VAR 0 1
6767: NOT
6768: PUSH
6769: LD_VAR 0 2
6773: NOT
6774: OR
6775: PUSH
6776: LD_VAR 0 1
6780: PPUSH
6781: CALL_OW 247
6785: PUSH
6786: LD_INT 3
6788: EQUAL
6789: OR
6790: IFFALSE 6794
// exit ;
6792: GO 8333
// for i = path downto 1 do
6794: LD_ADDR_VAR 0 5
6798: PUSH
6799: DOUBLE
6800: LD_VAR 0 2
6804: INC
6805: ST_TO_ADDR
6806: LD_INT 1
6808: PUSH
6809: FOR_DOWNTO
6810: IFFALSE 6871
// begin if not ValidHex ( path [ i ] [ 1 ] , path [ i ] [ 2 ] ) then
6812: LD_VAR 0 2
6816: PUSH
6817: LD_VAR 0 5
6821: ARRAY
6822: PUSH
6823: LD_INT 1
6825: ARRAY
6826: PPUSH
6827: LD_VAR 0 2
6831: PUSH
6832: LD_VAR 0 5
6836: ARRAY
6837: PUSH
6838: LD_INT 2
6840: ARRAY
6841: PPUSH
6842: CALL_OW 488
6846: NOT
6847: IFFALSE 6869
// path = Delete ( path , i ) ;
6849: LD_ADDR_VAR 0 2
6853: PUSH
6854: LD_VAR 0 2
6858: PPUSH
6859: LD_VAR 0 5
6863: PPUSH
6864: CALL_OW 3
6868: ST_TO_ADDR
// end ;
6869: GO 6809
6871: POP
6872: POP
// if not path then
6873: LD_VAR 0 2
6877: NOT
6878: IFFALSE 6882
// exit ;
6880: GO 8333
// tmp_path := [ ] ;
6882: LD_ADDR_VAR 0 11
6886: PUSH
6887: EMPTY
6888: ST_TO_ADDR
// if flags then
6889: LD_VAR 0 3
6893: IFFALSE 6967
// begin if flags [ 1 ] then
6895: LD_VAR 0 3
6899: PUSH
6900: LD_INT 1
6902: ARRAY
6903: IFFALSE 6919
// safe_place = flags [ 1 ] ;
6905: LD_ADDR_VAR 0 16
6909: PUSH
6910: LD_VAR 0 3
6914: PUSH
6915: LD_INT 1
6917: ARRAY
6918: ST_TO_ADDR
// if flags [ 2 ] then
6919: LD_VAR 0 3
6923: PUSH
6924: LD_INT 2
6926: ARRAY
6927: IFFALSE 6943
// spot_dist = flags [ 2 ] ;
6929: LD_ADDR_VAR 0 15
6933: PUSH
6934: LD_VAR 0 3
6938: PUSH
6939: LD_INT 2
6941: ARRAY
6942: ST_TO_ADDR
// if flags [ 3 ] then
6943: LD_VAR 0 3
6947: PUSH
6948: LD_INT 3
6950: ARRAY
6951: IFFALSE 6967
// chase_range = flags [ 3 ] ;
6953: LD_ADDR_VAR 0 17
6957: PUSH
6958: LD_VAR 0 3
6962: PUSH
6963: LD_INT 3
6965: ARRAY
6966: ST_TO_ADDR
// end ; if not chase_range then
6967: LD_VAR 0 17
6971: NOT
6972: IFFALSE 6982
// chase_range = 8 ;
6974: LD_ADDR_VAR 0 17
6978: PUSH
6979: LD_INT 8
6981: ST_TO_ADDR
// if not spot_dist then
6982: LD_VAR 0 15
6986: NOT
6987: IFFALSE 6997
// spot_dist := 8 ;
6989: LD_ADDR_VAR 0 15
6993: PUSH
6994: LD_INT 8
6996: ST_TO_ADDR
// need_refuel = ( GetType ( unit ) = unit_vehicle and GetEngine ( unit ) <> engine_siberite ) ;
6997: LD_ADDR_VAR 0 18
7001: PUSH
7002: LD_VAR 0 1
7006: PPUSH
7007: CALL_OW 247
7011: PUSH
7012: LD_INT 2
7014: EQUAL
7015: PUSH
7016: LD_VAR 0 1
7020: PPUSH
7021: CALL_OW 262
7025: PUSH
7026: LD_INT 3
7028: NONEQUAL
7029: AND
7030: ST_TO_ADDR
// status = 1 ;
7031: LD_ADDR_VAR 0 12
7035: PUSH
7036: LD_INT 1
7038: ST_TO_ADDR
// tmp_path = [ 1 , path [ 1 ] ] ;
7039: LD_ADDR_VAR 0 11
7043: PUSH
7044: LD_INT 1
7046: PUSH
7047: LD_VAR 0 2
7051: PUSH
7052: LD_INT 1
7054: ARRAY
7055: PUSH
7056: EMPTY
7057: LIST
7058: LIST
7059: ST_TO_ADDR
// repeat wait ( 0 0$1 ) ;
7060: LD_INT 35
7062: PPUSH
7063: CALL_OW 67
// if need_refuel and GetFuel ( unit ) < 20 then
7067: LD_VAR 0 18
7071: PUSH
7072: LD_VAR 0 1
7076: PPUSH
7077: CALL_OW 261
7081: PUSH
7082: LD_INT 20
7084: LESS
7085: AND
7086: IFFALSE 7279
// begin station := FilterAllUnits ( [ [ f_side , GetSide ( unit ) ] , [ f_or , [ f_btype , b_depot ] , [ f_btype , b_warehouse ] , [ f_btype , b_oil_mine ] , [ f_btype , b_factory ] ] ] ) ;
7088: LD_ADDR_VAR 0 10
7092: PUSH
7093: LD_INT 22
7095: PUSH
7096: LD_VAR 0 1
7100: PPUSH
7101: CALL_OW 255
7105: PUSH
7106: EMPTY
7107: LIST
7108: LIST
7109: PUSH
7110: LD_INT 2
7112: PUSH
7113: LD_INT 30
7115: PUSH
7116: LD_INT 0
7118: PUSH
7119: EMPTY
7120: LIST
7121: LIST
7122: PUSH
7123: LD_INT 30
7125: PUSH
7126: LD_INT 1
7128: PUSH
7129: EMPTY
7130: LIST
7131: LIST
7132: PUSH
7133: LD_INT 30
7135: PUSH
7136: LD_INT 29
7138: PUSH
7139: EMPTY
7140: LIST
7141: LIST
7142: PUSH
7143: LD_INT 30
7145: PUSH
7146: LD_INT 3
7148: PUSH
7149: EMPTY
7150: LIST
7151: LIST
7152: PUSH
7153: EMPTY
7154: LIST
7155: LIST
7156: LIST
7157: LIST
7158: LIST
7159: PUSH
7160: EMPTY
7161: LIST
7162: LIST
7163: PPUSH
7164: CALL_OW 69
7168: ST_TO_ADDR
// if not station then
7169: LD_VAR 0 10
7173: NOT
7174: IFFALSE 7190
// begin SetFuel ( unit , 40 ) ;
7176: LD_VAR 0 1
7180: PPUSH
7181: LD_INT 40
7183: PPUSH
7184: CALL_OW 240
// continue ;
7188: GO 7060
// end ; status := 6 ;
7190: LD_ADDR_VAR 0 12
7194: PUSH
7195: LD_INT 6
7197: ST_TO_ADDR
// station := NearestUnitToUnit ( station , unit ) ;
7198: LD_ADDR_VAR 0 10
7202: PUSH
7203: LD_VAR 0 10
7207: PPUSH
7208: LD_VAR 0 1
7212: PPUSH
7213: CALL_OW 74
7217: ST_TO_ADDR
// repeat wait ( 0 0$1 ) ;
7218: LD_INT 35
7220: PPUSH
7221: CALL_OW 67
// ComMoveUnit ( unit , station ) ;
7225: LD_VAR 0 1
7229: PPUSH
7230: LD_VAR 0 10
7234: PPUSH
7235: CALL_OW 112
// until GetDistUnits ( unit , station ) < 6 ;
7239: LD_VAR 0 1
7243: PPUSH
7244: LD_VAR 0 10
7248: PPUSH
7249: CALL_OW 296
7253: PUSH
7254: LD_INT 6
7256: LESS
7257: IFFALSE 7218
// SetFuel ( unit , 100 ) ;
7259: LD_VAR 0 1
7263: PPUSH
7264: LD_INT 100
7266: PPUSH
7267: CALL_OW 240
// status := 5 ;
7271: LD_ADDR_VAR 0 12
7275: PUSH
7276: LD_INT 5
7278: ST_TO_ADDR
// end ; if status = 1 then
7279: LD_VAR 0 12
7283: PUSH
7284: LD_INT 1
7286: EQUAL
7287: IFFALSE 7663
// begin enemy := FilterAllUnits ( [ [ f_enemy , GetSide ( unit ) ] , [ f_not , [ f_type , unit_building ] ] , [ f_dist , unit , spot_dist ] , [ f_see , 1 ] ] ) ;
7289: LD_ADDR_VAR 0 13
7293: PUSH
7294: LD_INT 81
7296: PUSH
7297: LD_VAR 0 1
7301: PPUSH
7302: CALL_OW 255
7306: PUSH
7307: EMPTY
7308: LIST
7309: LIST
7310: PUSH
7311: LD_INT 3
7313: PUSH
7314: LD_INT 21
7316: PUSH
7317: LD_INT 3
7319: PUSH
7320: EMPTY
7321: LIST
7322: LIST
7323: PUSH
7324: EMPTY
7325: LIST
7326: LIST
7327: PUSH
7328: LD_INT 91
7330: PUSH
7331: LD_VAR 0 1
7335: PUSH
7336: LD_VAR 0 15
7340: PUSH
7341: EMPTY
7342: LIST
7343: LIST
7344: LIST
7345: PUSH
7346: LD_INT 101
7348: PUSH
7349: LD_INT 1
7351: PUSH
7352: EMPTY
7353: LIST
7354: LIST
7355: PUSH
7356: EMPTY
7357: LIST
7358: LIST
7359: LIST
7360: LIST
7361: PPUSH
7362: CALL_OW 69
7366: ST_TO_ADDR
// for i in enemy do
7367: LD_ADDR_VAR 0 5
7371: PUSH
7372: LD_VAR 0 13
7376: PUSH
7377: FOR_IN
7378: IFFALSE 7409
// if IsInvisible ( i ) then
7380: LD_VAR 0 5
7384: PPUSH
7385: CALL_OW 571
7389: IFFALSE 7407
// enemy := enemy diff i ;
7391: LD_ADDR_VAR 0 13
7395: PUSH
7396: LD_VAR 0 13
7400: PUSH
7401: LD_VAR 0 5
7405: DIFF
7406: ST_TO_ADDR
7407: GO 7377
7409: POP
7410: POP
// if enemy then
7411: LD_VAR 0 13
7415: IFFALSE 7465
// begin SetRememberedX ( unit , GetX ( unit ) ) ;
7417: LD_VAR 0 1
7421: PPUSH
7422: LD_VAR 0 1
7426: PPUSH
7427: CALL_OW 250
7431: PPUSH
7432: CALL_OW 231
// SetRememberedY ( unit , GetY ( unit ) ) ;
7436: LD_VAR 0 1
7440: PPUSH
7441: LD_VAR 0 1
7445: PPUSH
7446: CALL_OW 251
7450: PPUSH
7451: CALL_OW 232
// status = 2 ;
7455: LD_ADDR_VAR 0 12
7459: PUSH
7460: LD_INT 2
7462: ST_TO_ADDR
// end else
7463: GO 7663
// begin if IsAt ( unit , tmp_path [ 2 ] [ 1 ] , tmp_path [ 2 ] [ 2 ] ) or not HasTask ( unit ) then
7465: LD_VAR 0 1
7469: PPUSH
7470: LD_VAR 0 11
7474: PUSH
7475: LD_INT 2
7477: ARRAY
7478: PUSH
7479: LD_INT 1
7481: ARRAY
7482: PPUSH
7483: LD_VAR 0 11
7487: PUSH
7488: LD_INT 2
7490: ARRAY
7491: PUSH
7492: LD_INT 2
7494: ARRAY
7495: PPUSH
7496: CALL_OW 307
7500: PUSH
7501: LD_VAR 0 1
7505: PPUSH
7506: CALL_OW 314
7510: NOT
7511: OR
7512: IFFALSE 7663
// begin wait ( 0 0$2 ) ;
7514: LD_INT 70
7516: PPUSH
7517: CALL_OW 67
// if tmp_path [ 1 ] + 1 > path then
7521: LD_VAR 0 11
7525: PUSH
7526: LD_INT 1
7528: ARRAY
7529: PUSH
7530: LD_INT 1
7532: PLUS
7533: PUSH
7534: LD_VAR 0 2
7538: GREATER
7539: IFFALSE 7564
// tmp_path := Replace ( tmp_path , 1 , 1 ) else
7541: LD_ADDR_VAR 0 11
7545: PUSH
7546: LD_VAR 0 11
7550: PPUSH
7551: LD_INT 1
7553: PPUSH
7554: LD_INT 1
7556: PPUSH
7557: CALL_OW 1
7561: ST_TO_ADDR
7562: GO 7595
// tmp_path := Replace ( tmp_path , 1 , tmp_path [ 1 ] + 1 ) ;
7564: LD_ADDR_VAR 0 11
7568: PUSH
7569: LD_VAR 0 11
7573: PPUSH
7574: LD_INT 1
7576: PPUSH
7577: LD_VAR 0 11
7581: PUSH
7582: LD_INT 1
7584: ARRAY
7585: PUSH
7586: LD_INT 1
7588: PLUS
7589: PPUSH
7590: CALL_OW 1
7594: ST_TO_ADDR
// tmp_path := Replace ( tmp_path , 2 , path [ tmp_path [ 1 ] ] ) ;
7595: LD_ADDR_VAR 0 11
7599: PUSH
7600: LD_VAR 0 11
7604: PPUSH
7605: LD_INT 2
7607: PPUSH
7608: LD_VAR 0 2
7612: PUSH
7613: LD_VAR 0 11
7617: PUSH
7618: LD_INT 1
7620: ARRAY
7621: ARRAY
7622: PPUSH
7623: CALL_OW 1
7627: ST_TO_ADDR
// ComAgressiveMove ( unit , tmp_path [ 2 ] [ 1 ] , tmp_path [ 2 ] [ 2 ] ) ;
7628: LD_VAR 0 1
7632: PPUSH
7633: LD_VAR 0 11
7637: PUSH
7638: LD_INT 2
7640: ARRAY
7641: PUSH
7642: LD_INT 1
7644: ARRAY
7645: PPUSH
7646: LD_VAR 0 11
7650: PUSH
7651: LD_INT 2
7653: ARRAY
7654: PUSH
7655: LD_INT 2
7657: ARRAY
7658: PPUSH
7659: CALL_OW 114
// end ; end ; end ; if status = 2 then
7663: LD_VAR 0 12
7667: PUSH
7668: LD_INT 2
7670: EQUAL
7671: IFFALSE 7892
// begin if GetLives ( unit ) < 650 and safe_place then
7673: LD_VAR 0 1
7677: PPUSH
7678: CALL_OW 256
7682: PUSH
7683: LD_INT 650
7685: LESS
7686: PUSH
7687: LD_VAR 0 16
7691: AND
7692: IFFALSE 7704
// begin status = 3 ;
7694: LD_ADDR_VAR 0 12
7698: PUSH
7699: LD_INT 3
7701: ST_TO_ADDR
// continue ;
7702: GO 7060
// end ; x := GetRememberedX ( unit ) ;
7704: LD_ADDR_VAR 0 6
7708: PUSH
7709: LD_VAR 0 1
7713: PPUSH
7714: CALL_OW 252
7718: ST_TO_ADDR
// y := GetRememberedY ( unit ) ;
7719: LD_ADDR_VAR 0 7
7723: PUSH
7724: LD_VAR 0 1
7728: PPUSH
7729: CALL_OW 253
7733: ST_TO_ADDR
// enemy := FilterAllUnits ( [ [ f_enemy , GetSide ( unit ) ] , [ f_distxy , x , y , spot_dist ] , [ f_see , 1 ] ] ) ;
7734: LD_ADDR_VAR 0 13
7738: PUSH
7739: LD_INT 81
7741: PUSH
7742: LD_VAR 0 1
7746: PPUSH
7747: CALL_OW 255
7751: PUSH
7752: EMPTY
7753: LIST
7754: LIST
7755: PUSH
7756: LD_INT 92
7758: PUSH
7759: LD_VAR 0 6
7763: PUSH
7764: LD_VAR 0 7
7768: PUSH
7769: LD_VAR 0 15
7773: PUSH
7774: EMPTY
7775: LIST
7776: LIST
7777: LIST
7778: LIST
7779: PUSH
7780: LD_INT 101
7782: PUSH
7783: LD_INT 1
7785: PUSH
7786: EMPTY
7787: LIST
7788: LIST
7789: PUSH
7790: EMPTY
7791: LIST
7792: LIST
7793: LIST
7794: PPUSH
7795: CALL_OW 69
7799: ST_TO_ADDR
// if enemy then
7800: LD_VAR 0 13
7804: IFFALSE 7875
// begin e := NearestUnitToUnit ( enemy , unit ) ;
7806: LD_ADDR_VAR 0 14
7810: PUSH
7811: LD_VAR 0 13
7815: PPUSH
7816: LD_VAR 0 1
7820: PPUSH
7821: CALL_OW 74
7825: ST_TO_ADDR
// if GetDistUnitXY ( e , x , y ) < spot_dist + chase_range then
7826: LD_VAR 0 14
7830: PPUSH
7831: LD_VAR 0 6
7835: PPUSH
7836: LD_VAR 0 7
7840: PPUSH
7841: CALL_OW 297
7845: PUSH
7846: LD_VAR 0 15
7850: PUSH
7851: LD_VAR 0 17
7855: PLUS
7856: LESS
7857: IFFALSE 7873
// ComAttackUnit ( unit , e ) ;
7859: LD_VAR 0 1
7863: PPUSH
7864: LD_VAR 0 14
7868: PPUSH
7869: CALL_OW 115
// end else
7873: GO 7892
// begin ComStop ( unit ) ;
7875: LD_VAR 0 1
7879: PPUSH
7880: CALL_OW 141
// status = 5 ;
7884: LD_ADDR_VAR 0 12
7888: PUSH
7889: LD_INT 5
7891: ST_TO_ADDR
// end ; end ; if status = 3 and safe_place then
7892: LD_VAR 0 12
7896: PUSH
7897: LD_INT 3
7899: EQUAL
7900: PUSH
7901: LD_VAR 0 16
7905: AND
7906: IFFALSE 7992
// begin repeat ComMoveXY ( unit , safe_place [ 1 ] , safe_place [ 2 ] ) ;
7908: LD_VAR 0 1
7912: PPUSH
7913: LD_VAR 0 16
7917: PUSH
7918: LD_INT 1
7920: ARRAY
7921: PPUSH
7922: LD_VAR 0 16
7926: PUSH
7927: LD_INT 2
7929: ARRAY
7930: PPUSH
7931: CALL_OW 111
// wait ( 0 0$1 ) ;
7935: LD_INT 35
7937: PPUSH
7938: CALL_OW 67
// until GetDistUnitXY ( unit , safe_place [ 1 ] , safe_place [ 2 ] ) < 4 ;
7942: LD_VAR 0 1
7946: PPUSH
7947: LD_VAR 0 16
7951: PUSH
7952: LD_INT 1
7954: ARRAY
7955: PPUSH
7956: LD_VAR 0 16
7960: PUSH
7961: LD_INT 2
7963: ARRAY
7964: PPUSH
7965: CALL_OW 297
7969: PUSH
7970: LD_INT 4
7972: LESS
7973: IFFALSE 7908
// ComStop ( unit ) ;
7975: LD_VAR 0 1
7979: PPUSH
7980: CALL_OW 141
// status = 4 ;
7984: LD_ADDR_VAR 0 12
7988: PUSH
7989: LD_INT 4
7991: ST_TO_ADDR
// end ; if status = 4 then
7992: LD_VAR 0 12
7996: PUSH
7997: LD_INT 4
7999: EQUAL
8000: IFFALSE 8032
// begin repeat wait ( 0 0$1 ) ;
8002: LD_INT 35
8004: PPUSH
8005: CALL_OW 67
// until GetLives ( unit ) = 1000 ;
8009: LD_VAR 0 1
8013: PPUSH
8014: CALL_OW 256
8018: PUSH
8019: LD_INT 1000
8021: EQUAL
8022: IFFALSE 8002
// status = 5 ;
8024: LD_ADDR_VAR 0 12
8028: PUSH
8029: LD_INT 5
8031: ST_TO_ADDR
// end ; if status = 5 then
8032: LD_VAR 0 12
8036: PUSH
8037: LD_INT 5
8039: EQUAL
8040: IFFALSE 8322
// begin p := 999 ;
8042: LD_ADDR_VAR 0 9
8046: PUSH
8047: LD_INT 999
8049: ST_TO_ADDR
// e := [ tmp_path [ 2 ] [ 1 ] , tmp_path [ 2 ] [ 2 ] ] ;
8050: LD_ADDR_VAR 0 14
8054: PUSH
8055: LD_VAR 0 11
8059: PUSH
8060: LD_INT 2
8062: ARRAY
8063: PUSH
8064: LD_INT 1
8066: ARRAY
8067: PUSH
8068: LD_VAR 0 11
8072: PUSH
8073: LD_INT 2
8075: ARRAY
8076: PUSH
8077: LD_INT 2
8079: ARRAY
8080: PUSH
8081: EMPTY
8082: LIST
8083: LIST
8084: ST_TO_ADDR
// c := 1 ;
8085: LD_ADDR_VAR 0 8
8089: PUSH
8090: LD_INT 1
8092: ST_TO_ADDR
// for i = 1 to tmp_path [ 2 ] div 2 do
8093: LD_ADDR_VAR 0 5
8097: PUSH
8098: DOUBLE
8099: LD_INT 1
8101: DEC
8102: ST_TO_ADDR
8103: LD_VAR 0 11
8107: PUSH
8108: LD_INT 2
8110: ARRAY
8111: PUSH
8112: LD_INT 2
8114: DIV
8115: PUSH
8116: FOR_TO
8117: IFFALSE 8249
// begin x := GetDistUnitXY ( unit , tmp_path [ 2 ] [ c ] , tmp_path [ 2 ] [ c + 1 ] ) ;
8119: LD_ADDR_VAR 0 6
8123: PUSH
8124: LD_VAR 0 1
8128: PPUSH
8129: LD_VAR 0 11
8133: PUSH
8134: LD_INT 2
8136: ARRAY
8137: PUSH
8138: LD_VAR 0 8
8142: ARRAY
8143: PPUSH
8144: LD_VAR 0 11
8148: PUSH
8149: LD_INT 2
8151: ARRAY
8152: PUSH
8153: LD_VAR 0 8
8157: PUSH
8158: LD_INT 1
8160: PLUS
8161: ARRAY
8162: PPUSH
8163: CALL_OW 297
8167: ST_TO_ADDR
// if x < p then
8168: LD_VAR 0 6
8172: PUSH
8173: LD_VAR 0 9
8177: LESS
8178: IFFALSE 8233
// begin p := x ;
8180: LD_ADDR_VAR 0 9
8184: PUSH
8185: LD_VAR 0 6
8189: ST_TO_ADDR
// e := [ tmp_path [ 2 ] [ c ] , tmp_path [ 2 ] [ c + 1 ] ] ;
8190: LD_ADDR_VAR 0 14
8194: PUSH
8195: LD_VAR 0 11
8199: PUSH
8200: LD_INT 2
8202: ARRAY
8203: PUSH
8204: LD_VAR 0 8
8208: ARRAY
8209: PUSH
8210: LD_VAR 0 11
8214: PUSH
8215: LD_INT 2
8217: ARRAY
8218: PUSH
8219: LD_VAR 0 8
8223: PUSH
8224: LD_INT 1
8226: PLUS
8227: ARRAY
8228: PUSH
8229: EMPTY
8230: LIST
8231: LIST
8232: ST_TO_ADDR
// end ; c = c + 2 ;
8233: LD_ADDR_VAR 0 8
8237: PUSH
8238: LD_VAR 0 8
8242: PUSH
8243: LD_INT 2
8245: PLUS
8246: ST_TO_ADDR
// end ;
8247: GO 8116
8249: POP
8250: POP
// repeat ComMoveXY ( unit , e [ 1 ] , e [ 2 ] ) ;
8251: LD_VAR 0 1
8255: PPUSH
8256: LD_VAR 0 14
8260: PUSH
8261: LD_INT 1
8263: ARRAY
8264: PPUSH
8265: LD_VAR 0 14
8269: PUSH
8270: LD_INT 2
8272: ARRAY
8273: PPUSH
8274: CALL_OW 111
// wait ( 0 0$1 ) ;
8278: LD_INT 35
8280: PPUSH
8281: CALL_OW 67
// until IsAt ( unit , e [ 1 ] , e [ 2 ] ) ;
8285: LD_VAR 0 1
8289: PPUSH
8290: LD_VAR 0 14
8294: PUSH
8295: LD_INT 1
8297: ARRAY
8298: PPUSH
8299: LD_VAR 0 14
8303: PUSH
8304: LD_INT 2
8306: ARRAY
8307: PPUSH
8308: CALL_OW 307
8312: IFFALSE 8251
// status = 1 ;
8314: LD_ADDR_VAR 0 12
8318: PUSH
8319: LD_INT 1
8321: ST_TO_ADDR
// end ; until IsDead ( unit ) ;
8322: LD_VAR 0 1
8326: PPUSH
8327: CALL_OW 301
8331: IFFALSE 7060
// end ;
8333: LD_VAR 0 4
8337: RET
// export function Talk ( units , type , sequence , sex , class , id , order_id ) ; var i , unit , tmp , unit_id , dialog_id , sex_id , class_id ; begin
8338: LD_INT 0
8340: PPUSH
8341: PPUSH
8342: PPUSH
8343: PPUSH
8344: PPUSH
8345: PPUSH
8346: PPUSH
8347: PPUSH
// if not units or not sequence or not sex in [ sex_male , sex_female , 0 ] or not id or not order_id then
8348: LD_VAR 0 1
8352: NOT
8353: PUSH
8354: LD_VAR 0 3
8358: NOT
8359: OR
8360: PUSH
8361: LD_VAR 0 4
8365: PUSH
8366: LD_INT 1
8368: PUSH
8369: LD_INT 2
8371: PUSH
8372: LD_INT 0
8374: PUSH
8375: EMPTY
8376: LIST
8377: LIST
8378: LIST
8379: IN
8380: NOT
8381: OR
8382: PUSH
8383: LD_VAR 0 6
8387: NOT
8388: OR
8389: PUSH
8390: LD_VAR 0 7
8394: NOT
8395: OR
8396: IFFALSE 8400
// exit ;
8398: GO 8791
// sex_id :=  ;
8400: LD_ADDR_VAR 0 14
8404: PUSH
8405: LD_STRING 
8407: ST_TO_ADDR
// case class of 1 :
8408: LD_VAR 0 5
8412: PUSH
8413: LD_INT 1
8415: DOUBLE
8416: EQUAL
8417: IFTRUE 8421
8419: GO 8432
8421: POP
// class_id := Sol ; 2 :
8422: LD_ADDR_VAR 0 15
8426: PUSH
8427: LD_STRING Sol
8429: ST_TO_ADDR
8430: GO 8490
8432: LD_INT 2
8434: DOUBLE
8435: EQUAL
8436: IFTRUE 8440
8438: GO 8451
8440: POP
// class_id := Eng ; 3 :
8441: LD_ADDR_VAR 0 15
8445: PUSH
8446: LD_STRING Eng
8448: ST_TO_ADDR
8449: GO 8490
8451: LD_INT 3
8453: DOUBLE
8454: EQUAL
8455: IFTRUE 8459
8457: GO 8470
8459: POP
// class_id := Mech ; 4 :
8460: LD_ADDR_VAR 0 15
8464: PUSH
8465: LD_STRING Mech
8467: ST_TO_ADDR
8468: GO 8490
8470: LD_INT 4
8472: DOUBLE
8473: EQUAL
8474: IFTRUE 8478
8476: GO 8489
8478: POP
// class_id := Sci ; end ;
8479: LD_ADDR_VAR 0 15
8483: PUSH
8484: LD_STRING Sci
8486: ST_TO_ADDR
8487: GO 8490
8489: POP
// tmp := UnitFilter ( units , [ f_class , class ] ) ;
8490: LD_ADDR_VAR 0 11
8494: PUSH
8495: LD_VAR 0 1
8499: PPUSH
8500: LD_INT 25
8502: PUSH
8503: LD_VAR 0 5
8507: PUSH
8508: EMPTY
8509: LIST
8510: LIST
8511: PPUSH
8512: CALL_OW 72
8516: ST_TO_ADDR
// if tmp then
8517: LD_VAR 0 11
8521: IFFALSE 8533
// units := tmp ;
8523: LD_ADDR_VAR 0 1
8527: PUSH
8528: LD_VAR 0 11
8532: ST_TO_ADDR
// if sex then
8533: LD_VAR 0 4
8537: IFFALSE 8593
// begin if sex = sex_female then
8539: LD_VAR 0 4
8543: PUSH
8544: LD_INT 2
8546: EQUAL
8547: IFFALSE 8557
// sex_id := F ;
8549: LD_ADDR_VAR 0 14
8553: PUSH
8554: LD_STRING F
8556: ST_TO_ADDR
// units := UnitFilter ( units , [ f_sex , sex ] ) ;
8557: LD_ADDR_VAR 0 1
8561: PUSH
8562: LD_VAR 0 1
8566: PPUSH
8567: LD_INT 26
8569: PUSH
8570: LD_VAR 0 4
8574: PUSH
8575: EMPTY
8576: LIST
8577: LIST
8578: PPUSH
8579: CALL_OW 72
8583: ST_TO_ADDR
// if not units then
8584: LD_VAR 0 1
8588: NOT
8589: IFFALSE 8593
// exit ;
8591: GO 8791
// end ; unit_id := id ;
8593: LD_ADDR_VAR 0 12
8597: PUSH
8598: LD_VAR 0 6
8602: ST_TO_ADDR
// if unit_id > units then
8603: LD_VAR 0 12
8607: PUSH
8608: LD_VAR 0 1
8612: GREATER
8613: IFFALSE 8623
// unit_id := 1 ;
8615: LD_ADDR_VAR 0 12
8619: PUSH
8620: LD_INT 1
8622: ST_TO_ADDR
// if not units [ unit_id ] then
8623: LD_VAR 0 1
8627: PUSH
8628: LD_VAR 0 12
8632: ARRAY
8633: NOT
8634: IFFALSE 8638
// exit ;
8636: GO 8791
// unit := units [ unit_id ] ;
8638: LD_ADDR_VAR 0 10
8642: PUSH
8643: LD_VAR 0 1
8647: PUSH
8648: LD_VAR 0 12
8652: ARRAY
8653: ST_TO_ADDR
// dialog_id := D & sequence & - & sex_id & class_id & id & - & order_id ;
8654: LD_ADDR_VAR 0 13
8658: PUSH
8659: LD_STRING D
8661: PUSH
8662: LD_VAR 0 3
8666: STR
8667: PUSH
8668: LD_STRING -
8670: STR
8671: PUSH
8672: LD_VAR 0 14
8676: STR
8677: PUSH
8678: LD_VAR 0 15
8682: STR
8683: PUSH
8684: LD_VAR 0 6
8688: STR
8689: PUSH
8690: LD_STRING -
8692: STR
8693: PUSH
8694: LD_VAR 0 7
8698: STR
8699: ST_TO_ADDR
// case type of 0 :
8700: LD_VAR 0 2
8704: PUSH
8705: LD_INT 0
8707: DOUBLE
8708: EQUAL
8709: IFTRUE 8713
8711: GO 8730
8713: POP
// Say ( unit , dialog_id ) ; 1 :
8714: LD_VAR 0 10
8718: PPUSH
8719: LD_VAR 0 13
8723: PPUSH
8724: CALL_OW 88
8728: GO 8781
8730: LD_INT 1
8732: DOUBLE
8733: EQUAL
8734: IFTRUE 8738
8736: GO 8755
8738: POP
// SayRadio ( unit , dialog_id ) ; 2 :
8739: LD_VAR 0 10
8743: PPUSH
8744: LD_VAR 0 13
8748: PPUSH
8749: CALL_OW 94
8753: GO 8781
8755: LD_INT 2
8757: DOUBLE
8758: EQUAL
8759: IFTRUE 8763
8761: GO 8780
8763: POP
// ForceSay ( unit , dialog_id ) ; end ;
8764: LD_VAR 0 10
8768: PPUSH
8769: LD_VAR 0 13
8773: PPUSH
8774: CALL_OW 91
8778: GO 8781
8780: POP
// result := unit ;
8781: LD_ADDR_VAR 0 8
8785: PUSH
8786: LD_VAR 0 10
8790: ST_TO_ADDR
// end ;
8791: LD_VAR 0 8
8795: RET
// export function Reindex ( array , i_from , i_to , direction ) ; var i , j , k , d , tmp , length ; begin
8796: LD_INT 0
8798: PPUSH
8799: PPUSH
8800: PPUSH
8801: PPUSH
8802: PPUSH
8803: PPUSH
8804: PPUSH
// result := array ;
8805: LD_ADDR_VAR 0 5
8809: PUSH
8810: LD_VAR 0 1
8814: ST_TO_ADDR
// if not array or not i_from or not i_to or i_from > array or i_to > array then
8815: LD_VAR 0 1
8819: NOT
8820: PUSH
8821: LD_VAR 0 2
8825: NOT
8826: OR
8827: PUSH
8828: LD_VAR 0 3
8832: NOT
8833: OR
8834: PUSH
8835: LD_VAR 0 2
8839: PUSH
8840: LD_VAR 0 1
8844: GREATER
8845: OR
8846: PUSH
8847: LD_VAR 0 3
8851: PUSH
8852: LD_VAR 0 1
8856: GREATER
8857: OR
8858: IFFALSE 8862
// exit ;
8860: GO 9158
// if direction then
8862: LD_VAR 0 4
8866: IFFALSE 8930
// begin d := 1 ;
8868: LD_ADDR_VAR 0 9
8872: PUSH
8873: LD_INT 1
8875: ST_TO_ADDR
// if i_from > i_to then
8876: LD_VAR 0 2
8880: PUSH
8881: LD_VAR 0 3
8885: GREATER
8886: IFFALSE 8912
// length := ( array - i_from ) + i_to else
8888: LD_ADDR_VAR 0 11
8892: PUSH
8893: LD_VAR 0 1
8897: PUSH
8898: LD_VAR 0 2
8902: MINUS
8903: PUSH
8904: LD_VAR 0 3
8908: PLUS
8909: ST_TO_ADDR
8910: GO 8928
// length := i_to - i_from ;
8912: LD_ADDR_VAR 0 11
8916: PUSH
8917: LD_VAR 0 3
8921: PUSH
8922: LD_VAR 0 2
8926: MINUS
8927: ST_TO_ADDR
// end else
8928: GO 8991
// begin d := - 1 ;
8930: LD_ADDR_VAR 0 9
8934: PUSH
8935: LD_INT 1
8937: NEG
8938: ST_TO_ADDR
// if i_from > i_to then
8939: LD_VAR 0 2
8943: PUSH
8944: LD_VAR 0 3
8948: GREATER
8949: IFFALSE 8969
// length := i_from - i_to else
8951: LD_ADDR_VAR 0 11
8955: PUSH
8956: LD_VAR 0 2
8960: PUSH
8961: LD_VAR 0 3
8965: MINUS
8966: ST_TO_ADDR
8967: GO 8991
// length := ( array - i_to ) + i_from ;
8969: LD_ADDR_VAR 0 11
8973: PUSH
8974: LD_VAR 0 1
8978: PUSH
8979: LD_VAR 0 3
8983: MINUS
8984: PUSH
8985: LD_VAR 0 2
8989: PLUS
8990: ST_TO_ADDR
// end ; if not length then
8991: LD_VAR 0 11
8995: NOT
8996: IFFALSE 9000
// exit ;
8998: GO 9158
// tmp := array ;
9000: LD_ADDR_VAR 0 10
9004: PUSH
9005: LD_VAR 0 1
9009: ST_TO_ADDR
// for i = 1 to length do
9010: LD_ADDR_VAR 0 6
9014: PUSH
9015: DOUBLE
9016: LD_INT 1
9018: DEC
9019: ST_TO_ADDR
9020: LD_VAR 0 11
9024: PUSH
9025: FOR_TO
9026: IFFALSE 9146
// begin for j = 1 to array do
9028: LD_ADDR_VAR 0 7
9032: PUSH
9033: DOUBLE
9034: LD_INT 1
9036: DEC
9037: ST_TO_ADDR
9038: LD_VAR 0 1
9042: PUSH
9043: FOR_TO
9044: IFFALSE 9132
// begin k := j + d ;
9046: LD_ADDR_VAR 0 8
9050: PUSH
9051: LD_VAR 0 7
9055: PUSH
9056: LD_VAR 0 9
9060: PLUS
9061: ST_TO_ADDR
// if k > array then
9062: LD_VAR 0 8
9066: PUSH
9067: LD_VAR 0 1
9071: GREATER
9072: IFFALSE 9082
// k := 1 ;
9074: LD_ADDR_VAR 0 8
9078: PUSH
9079: LD_INT 1
9081: ST_TO_ADDR
// if not k then
9082: LD_VAR 0 8
9086: NOT
9087: IFFALSE 9099
// k := array ;
9089: LD_ADDR_VAR 0 8
9093: PUSH
9094: LD_VAR 0 1
9098: ST_TO_ADDR
// tmp := Replace ( tmp , k , array [ j ] ) ;
9099: LD_ADDR_VAR 0 10
9103: PUSH
9104: LD_VAR 0 10
9108: PPUSH
9109: LD_VAR 0 8
9113: PPUSH
9114: LD_VAR 0 1
9118: PUSH
9119: LD_VAR 0 7
9123: ARRAY
9124: PPUSH
9125: CALL_OW 1
9129: ST_TO_ADDR
// end ;
9130: GO 9043
9132: POP
9133: POP
// array := tmp ;
9134: LD_ADDR_VAR 0 1
9138: PUSH
9139: LD_VAR 0 10
9143: ST_TO_ADDR
// end ;
9144: GO 9025
9146: POP
9147: POP
// result := array ;
9148: LD_ADDR_VAR 0 5
9152: PUSH
9153: LD_VAR 0 1
9157: ST_TO_ADDR
// end ;
9158: LD_VAR 0 5
9162: RET
// export function GetBuildingHexes ( btype , x , y , dir , nation , mode ) ; var i , temp_list , temp_list2 ; var DepotAm0 , DepotAm1 , DepotAm2 , DepotAm3 , DepotAm4 , DepotAm5 , DepotAr0 , DepotAr1 , DepotAr2 , DepotAr3 , DepotAr4 , DepotAr5 , DepotRu0 , DepotRu1 , DepotRu2 , DepotRu3 , DepotRu4 , DepotRu5 ; var Factory0 , Factory1 , Factory2 , Factory3 , Factory4 , Factory5 , Ext0 , Ext1 , Ext2 , Ext3 , Ext4 , Ext5 ; var Lab0 , Lab1 , Lab2 , Lab3 , Lab4 , Lab5 , ControlTower0 , ControlTower1 , ControlTower2 , ControlTower3 , ControlTower4 , ControlTower5 ; var Barracks0 , Barracks1 , Barracks2 , Barracks3 , Barracks4 , Barracks5 , Bunker0 , Bunker1 , Bunker2 , Bunker3 , Bunker4 , Bunker5 ; begin
9163: LD_INT 0
9165: PPUSH
9166: PPUSH
9167: PPUSH
9168: PPUSH
9169: PPUSH
9170: PPUSH
9171: PPUSH
9172: PPUSH
9173: PPUSH
9174: PPUSH
9175: PPUSH
9176: PPUSH
9177: PPUSH
9178: PPUSH
9179: PPUSH
9180: PPUSH
9181: PPUSH
9182: PPUSH
9183: PPUSH
9184: PPUSH
9185: PPUSH
9186: PPUSH
9187: PPUSH
9188: PPUSH
9189: PPUSH
9190: PPUSH
9191: PPUSH
9192: PPUSH
9193: PPUSH
9194: PPUSH
9195: PPUSH
9196: PPUSH
9197: PPUSH
9198: PPUSH
9199: PPUSH
9200: PPUSH
9201: PPUSH
9202: PPUSH
9203: PPUSH
9204: PPUSH
9205: PPUSH
9206: PPUSH
9207: PPUSH
9208: PPUSH
9209: PPUSH
9210: PPUSH
9211: PPUSH
9212: PPUSH
9213: PPUSH
9214: PPUSH
9215: PPUSH
9216: PPUSH
9217: PPUSH
9218: PPUSH
9219: PPUSH
9220: PPUSH
9221: PPUSH
9222: PPUSH
// result = [ ] ;
9223: LD_ADDR_VAR 0 7
9227: PUSH
9228: EMPTY
9229: ST_TO_ADDR
// temp_list = [ ] ;
9230: LD_ADDR_VAR 0 9
9234: PUSH
9235: EMPTY
9236: ST_TO_ADDR
// if not dir in [ 0 , 1 , 2 , 3 , 4 , 5 ] or ( btype in [ b_depot , b_warehouse ] and not nation in [ nation_american , nation_arabian , nation_russian ] ) then
9237: LD_VAR 0 4
9241: PUSH
9242: LD_INT 0
9244: PUSH
9245: LD_INT 1
9247: PUSH
9248: LD_INT 2
9250: PUSH
9251: LD_INT 3
9253: PUSH
9254: LD_INT 4
9256: PUSH
9257: LD_INT 5
9259: PUSH
9260: EMPTY
9261: LIST
9262: LIST
9263: LIST
9264: LIST
9265: LIST
9266: LIST
9267: IN
9268: NOT
9269: PUSH
9270: LD_VAR 0 1
9274: PUSH
9275: LD_INT 0
9277: PUSH
9278: LD_INT 1
9280: PUSH
9281: EMPTY
9282: LIST
9283: LIST
9284: IN
9285: PUSH
9286: LD_VAR 0 5
9290: PUSH
9291: LD_INT 1
9293: PUSH
9294: LD_INT 2
9296: PUSH
9297: LD_INT 3
9299: PUSH
9300: EMPTY
9301: LIST
9302: LIST
9303: LIST
9304: IN
9305: NOT
9306: AND
9307: OR
9308: IFFALSE 9312
// exit ;
9310: GO 27697
// if btype in [ b_lab , b_lab_half , b_lab_full , b_lab_biological , b_lab_computer , b_lab_opto , b_lab_siberium , b_lab_spacetime , b_lab_weapon ] then
9312: LD_VAR 0 1
9316: PUSH
9317: LD_INT 6
9319: PUSH
9320: LD_INT 7
9322: PUSH
9323: LD_INT 8
9325: PUSH
9326: LD_INT 13
9328: PUSH
9329: LD_INT 12
9331: PUSH
9332: LD_INT 15
9334: PUSH
9335: LD_INT 11
9337: PUSH
9338: LD_INT 14
9340: PUSH
9341: LD_INT 10
9343: PUSH
9344: EMPTY
9345: LIST
9346: LIST
9347: LIST
9348: LIST
9349: LIST
9350: LIST
9351: LIST
9352: LIST
9353: LIST
9354: IN
9355: IFFALSE 9365
// btype = b_lab ;
9357: LD_ADDR_VAR 0 1
9361: PUSH
9362: LD_INT 6
9364: ST_TO_ADDR
// if not mode in [ 0 , 1 , 2 ] or ( not btype in [ b_depot , b_warehouse , b_workshop , b_factory , b_lab , b_control_tower , b_armoury , b_barracks , b_breastwork , b_bunker , b_turret ] and mode = 1 ) or ( not btype in [ b_workshop , b_factory ] and mode = 2 ) then
9365: LD_VAR 0 6
9369: PUSH
9370: LD_INT 0
9372: PUSH
9373: LD_INT 1
9375: PUSH
9376: LD_INT 2
9378: PUSH
9379: EMPTY
9380: LIST
9381: LIST
9382: LIST
9383: IN
9384: NOT
9385: PUSH
9386: LD_VAR 0 1
9390: PUSH
9391: LD_INT 0
9393: PUSH
9394: LD_INT 1
9396: PUSH
9397: LD_INT 2
9399: PUSH
9400: LD_INT 3
9402: PUSH
9403: LD_INT 6
9405: PUSH
9406: LD_INT 36
9408: PUSH
9409: LD_INT 4
9411: PUSH
9412: LD_INT 5
9414: PUSH
9415: LD_INT 31
9417: PUSH
9418: LD_INT 32
9420: PUSH
9421: LD_INT 33
9423: PUSH
9424: EMPTY
9425: LIST
9426: LIST
9427: LIST
9428: LIST
9429: LIST
9430: LIST
9431: LIST
9432: LIST
9433: LIST
9434: LIST
9435: LIST
9436: IN
9437: NOT
9438: PUSH
9439: LD_VAR 0 6
9443: PUSH
9444: LD_INT 1
9446: EQUAL
9447: AND
9448: OR
9449: PUSH
9450: LD_VAR 0 1
9454: PUSH
9455: LD_INT 2
9457: PUSH
9458: LD_INT 3
9460: PUSH
9461: EMPTY
9462: LIST
9463: LIST
9464: IN
9465: NOT
9466: PUSH
9467: LD_VAR 0 6
9471: PUSH
9472: LD_INT 2
9474: EQUAL
9475: AND
9476: OR
9477: IFFALSE 9487
// mode = 0 ;
9479: LD_ADDR_VAR 0 6
9483: PUSH
9484: LD_INT 0
9486: ST_TO_ADDR
// case mode of 0 :
9487: LD_VAR 0 6
9491: PUSH
9492: LD_INT 0
9494: DOUBLE
9495: EQUAL
9496: IFTRUE 9500
9498: GO 20953
9500: POP
// begin DepotAm0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
9501: LD_ADDR_VAR 0 11
9505: PUSH
9506: LD_INT 0
9508: PUSH
9509: LD_INT 0
9511: PUSH
9512: EMPTY
9513: LIST
9514: LIST
9515: PUSH
9516: LD_INT 0
9518: PUSH
9519: LD_INT 1
9521: NEG
9522: PUSH
9523: EMPTY
9524: LIST
9525: LIST
9526: PUSH
9527: LD_INT 1
9529: PUSH
9530: LD_INT 0
9532: PUSH
9533: EMPTY
9534: LIST
9535: LIST
9536: PUSH
9537: LD_INT 1
9539: PUSH
9540: LD_INT 1
9542: PUSH
9543: EMPTY
9544: LIST
9545: LIST
9546: PUSH
9547: LD_INT 0
9549: PUSH
9550: LD_INT 1
9552: PUSH
9553: EMPTY
9554: LIST
9555: LIST
9556: PUSH
9557: LD_INT 1
9559: NEG
9560: PUSH
9561: LD_INT 0
9563: PUSH
9564: EMPTY
9565: LIST
9566: LIST
9567: PUSH
9568: LD_INT 1
9570: NEG
9571: PUSH
9572: LD_INT 1
9574: NEG
9575: PUSH
9576: EMPTY
9577: LIST
9578: LIST
9579: PUSH
9580: LD_INT 1
9582: NEG
9583: PUSH
9584: LD_INT 2
9586: NEG
9587: PUSH
9588: EMPTY
9589: LIST
9590: LIST
9591: PUSH
9592: LD_INT 0
9594: PUSH
9595: LD_INT 2
9597: NEG
9598: PUSH
9599: EMPTY
9600: LIST
9601: LIST
9602: PUSH
9603: LD_INT 1
9605: PUSH
9606: LD_INT 1
9608: NEG
9609: PUSH
9610: EMPTY
9611: LIST
9612: LIST
9613: PUSH
9614: LD_INT 1
9616: PUSH
9617: LD_INT 2
9619: PUSH
9620: EMPTY
9621: LIST
9622: LIST
9623: PUSH
9624: LD_INT 0
9626: PUSH
9627: LD_INT 2
9629: PUSH
9630: EMPTY
9631: LIST
9632: LIST
9633: PUSH
9634: LD_INT 1
9636: NEG
9637: PUSH
9638: LD_INT 1
9640: PUSH
9641: EMPTY
9642: LIST
9643: LIST
9644: PUSH
9645: LD_INT 1
9647: PUSH
9648: LD_INT 3
9650: PUSH
9651: EMPTY
9652: LIST
9653: LIST
9654: PUSH
9655: LD_INT 0
9657: PUSH
9658: LD_INT 3
9660: PUSH
9661: EMPTY
9662: LIST
9663: LIST
9664: PUSH
9665: LD_INT 1
9667: NEG
9668: PUSH
9669: LD_INT 2
9671: PUSH
9672: EMPTY
9673: LIST
9674: LIST
9675: PUSH
9676: EMPTY
9677: LIST
9678: LIST
9679: LIST
9680: LIST
9681: LIST
9682: LIST
9683: LIST
9684: LIST
9685: LIST
9686: LIST
9687: LIST
9688: LIST
9689: LIST
9690: LIST
9691: LIST
9692: LIST
9693: ST_TO_ADDR
// DepotAm1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
9694: LD_ADDR_VAR 0 12
9698: PUSH
9699: LD_INT 0
9701: PUSH
9702: LD_INT 0
9704: PUSH
9705: EMPTY
9706: LIST
9707: LIST
9708: PUSH
9709: LD_INT 0
9711: PUSH
9712: LD_INT 1
9714: NEG
9715: PUSH
9716: EMPTY
9717: LIST
9718: LIST
9719: PUSH
9720: LD_INT 1
9722: PUSH
9723: LD_INT 0
9725: PUSH
9726: EMPTY
9727: LIST
9728: LIST
9729: PUSH
9730: LD_INT 1
9732: PUSH
9733: LD_INT 1
9735: PUSH
9736: EMPTY
9737: LIST
9738: LIST
9739: PUSH
9740: LD_INT 0
9742: PUSH
9743: LD_INT 1
9745: PUSH
9746: EMPTY
9747: LIST
9748: LIST
9749: PUSH
9750: LD_INT 1
9752: NEG
9753: PUSH
9754: LD_INT 0
9756: PUSH
9757: EMPTY
9758: LIST
9759: LIST
9760: PUSH
9761: LD_INT 1
9763: NEG
9764: PUSH
9765: LD_INT 1
9767: NEG
9768: PUSH
9769: EMPTY
9770: LIST
9771: LIST
9772: PUSH
9773: LD_INT 1
9775: PUSH
9776: LD_INT 1
9778: NEG
9779: PUSH
9780: EMPTY
9781: LIST
9782: LIST
9783: PUSH
9784: LD_INT 2
9786: PUSH
9787: LD_INT 0
9789: PUSH
9790: EMPTY
9791: LIST
9792: LIST
9793: PUSH
9794: LD_INT 2
9796: PUSH
9797: LD_INT 1
9799: PUSH
9800: EMPTY
9801: LIST
9802: LIST
9803: PUSH
9804: LD_INT 1
9806: NEG
9807: PUSH
9808: LD_INT 1
9810: PUSH
9811: EMPTY
9812: LIST
9813: LIST
9814: PUSH
9815: LD_INT 2
9817: NEG
9818: PUSH
9819: LD_INT 0
9821: PUSH
9822: EMPTY
9823: LIST
9824: LIST
9825: PUSH
9826: LD_INT 2
9828: NEG
9829: PUSH
9830: LD_INT 1
9832: NEG
9833: PUSH
9834: EMPTY
9835: LIST
9836: LIST
9837: PUSH
9838: LD_INT 2
9840: NEG
9841: PUSH
9842: LD_INT 1
9844: PUSH
9845: EMPTY
9846: LIST
9847: LIST
9848: PUSH
9849: LD_INT 3
9851: NEG
9852: PUSH
9853: LD_INT 0
9855: PUSH
9856: EMPTY
9857: LIST
9858: LIST
9859: PUSH
9860: LD_INT 3
9862: NEG
9863: PUSH
9864: LD_INT 1
9866: NEG
9867: PUSH
9868: EMPTY
9869: LIST
9870: LIST
9871: PUSH
9872: EMPTY
9873: LIST
9874: LIST
9875: LIST
9876: LIST
9877: LIST
9878: LIST
9879: LIST
9880: LIST
9881: LIST
9882: LIST
9883: LIST
9884: LIST
9885: LIST
9886: LIST
9887: LIST
9888: LIST
9889: ST_TO_ADDR
// DepotAm2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
9890: LD_ADDR_VAR 0 13
9894: PUSH
9895: LD_INT 0
9897: PUSH
9898: LD_INT 0
9900: PUSH
9901: EMPTY
9902: LIST
9903: LIST
9904: PUSH
9905: LD_INT 0
9907: PUSH
9908: LD_INT 1
9910: NEG
9911: PUSH
9912: EMPTY
9913: LIST
9914: LIST
9915: PUSH
9916: LD_INT 1
9918: PUSH
9919: LD_INT 0
9921: PUSH
9922: EMPTY
9923: LIST
9924: LIST
9925: PUSH
9926: LD_INT 1
9928: PUSH
9929: LD_INT 1
9931: PUSH
9932: EMPTY
9933: LIST
9934: LIST
9935: PUSH
9936: LD_INT 0
9938: PUSH
9939: LD_INT 1
9941: PUSH
9942: EMPTY
9943: LIST
9944: LIST
9945: PUSH
9946: LD_INT 1
9948: NEG
9949: PUSH
9950: LD_INT 0
9952: PUSH
9953: EMPTY
9954: LIST
9955: LIST
9956: PUSH
9957: LD_INT 1
9959: NEG
9960: PUSH
9961: LD_INT 1
9963: NEG
9964: PUSH
9965: EMPTY
9966: LIST
9967: LIST
9968: PUSH
9969: LD_INT 1
9971: NEG
9972: PUSH
9973: LD_INT 2
9975: NEG
9976: PUSH
9977: EMPTY
9978: LIST
9979: LIST
9980: PUSH
9981: LD_INT 2
9983: PUSH
9984: LD_INT 1
9986: PUSH
9987: EMPTY
9988: LIST
9989: LIST
9990: PUSH
9991: LD_INT 2
9993: PUSH
9994: LD_INT 2
9996: PUSH
9997: EMPTY
9998: LIST
9999: LIST
10000: PUSH
10001: LD_INT 1
10003: PUSH
10004: LD_INT 2
10006: PUSH
10007: EMPTY
10008: LIST
10009: LIST
10010: PUSH
10011: LD_INT 2
10013: NEG
10014: PUSH
10015: LD_INT 1
10017: NEG
10018: PUSH
10019: EMPTY
10020: LIST
10021: LIST
10022: PUSH
10023: LD_INT 2
10025: NEG
10026: PUSH
10027: LD_INT 2
10029: NEG
10030: PUSH
10031: EMPTY
10032: LIST
10033: LIST
10034: PUSH
10035: LD_INT 2
10037: NEG
10038: PUSH
10039: LD_INT 3
10041: NEG
10042: PUSH
10043: EMPTY
10044: LIST
10045: LIST
10046: PUSH
10047: LD_INT 3
10049: NEG
10050: PUSH
10051: LD_INT 2
10053: NEG
10054: PUSH
10055: EMPTY
10056: LIST
10057: LIST
10058: PUSH
10059: LD_INT 3
10061: NEG
10062: PUSH
10063: LD_INT 3
10065: NEG
10066: PUSH
10067: EMPTY
10068: LIST
10069: LIST
10070: PUSH
10071: EMPTY
10072: LIST
10073: LIST
10074: LIST
10075: LIST
10076: LIST
10077: LIST
10078: LIST
10079: LIST
10080: LIST
10081: LIST
10082: LIST
10083: LIST
10084: LIST
10085: LIST
10086: LIST
10087: LIST
10088: ST_TO_ADDR
// DepotAm3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
10089: LD_ADDR_VAR 0 14
10093: PUSH
10094: LD_INT 0
10096: PUSH
10097: LD_INT 0
10099: PUSH
10100: EMPTY
10101: LIST
10102: LIST
10103: PUSH
10104: LD_INT 0
10106: PUSH
10107: LD_INT 1
10109: NEG
10110: PUSH
10111: EMPTY
10112: LIST
10113: LIST
10114: PUSH
10115: LD_INT 1
10117: PUSH
10118: LD_INT 0
10120: PUSH
10121: EMPTY
10122: LIST
10123: LIST
10124: PUSH
10125: LD_INT 1
10127: PUSH
10128: LD_INT 1
10130: PUSH
10131: EMPTY
10132: LIST
10133: LIST
10134: PUSH
10135: LD_INT 0
10137: PUSH
10138: LD_INT 1
10140: PUSH
10141: EMPTY
10142: LIST
10143: LIST
10144: PUSH
10145: LD_INT 1
10147: NEG
10148: PUSH
10149: LD_INT 0
10151: PUSH
10152: EMPTY
10153: LIST
10154: LIST
10155: PUSH
10156: LD_INT 1
10158: NEG
10159: PUSH
10160: LD_INT 1
10162: NEG
10163: PUSH
10164: EMPTY
10165: LIST
10166: LIST
10167: PUSH
10168: LD_INT 1
10170: NEG
10171: PUSH
10172: LD_INT 2
10174: NEG
10175: PUSH
10176: EMPTY
10177: LIST
10178: LIST
10179: PUSH
10180: LD_INT 0
10182: PUSH
10183: LD_INT 2
10185: NEG
10186: PUSH
10187: EMPTY
10188: LIST
10189: LIST
10190: PUSH
10191: LD_INT 1
10193: PUSH
10194: LD_INT 1
10196: NEG
10197: PUSH
10198: EMPTY
10199: LIST
10200: LIST
10201: PUSH
10202: LD_INT 1
10204: PUSH
10205: LD_INT 2
10207: PUSH
10208: EMPTY
10209: LIST
10210: LIST
10211: PUSH
10212: LD_INT 0
10214: PUSH
10215: LD_INT 2
10217: PUSH
10218: EMPTY
10219: LIST
10220: LIST
10221: PUSH
10222: LD_INT 1
10224: NEG
10225: PUSH
10226: LD_INT 1
10228: PUSH
10229: EMPTY
10230: LIST
10231: LIST
10232: PUSH
10233: LD_INT 1
10235: NEG
10236: PUSH
10237: LD_INT 3
10239: NEG
10240: PUSH
10241: EMPTY
10242: LIST
10243: LIST
10244: PUSH
10245: LD_INT 0
10247: PUSH
10248: LD_INT 3
10250: NEG
10251: PUSH
10252: EMPTY
10253: LIST
10254: LIST
10255: PUSH
10256: LD_INT 1
10258: PUSH
10259: LD_INT 2
10261: NEG
10262: PUSH
10263: EMPTY
10264: LIST
10265: LIST
10266: PUSH
10267: EMPTY
10268: LIST
10269: LIST
10270: LIST
10271: LIST
10272: LIST
10273: LIST
10274: LIST
10275: LIST
10276: LIST
10277: LIST
10278: LIST
10279: LIST
10280: LIST
10281: LIST
10282: LIST
10283: LIST
10284: ST_TO_ADDR
// DepotAm4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
10285: LD_ADDR_VAR 0 15
10289: PUSH
10290: LD_INT 0
10292: PUSH
10293: LD_INT 0
10295: PUSH
10296: EMPTY
10297: LIST
10298: LIST
10299: PUSH
10300: LD_INT 0
10302: PUSH
10303: LD_INT 1
10305: NEG
10306: PUSH
10307: EMPTY
10308: LIST
10309: LIST
10310: PUSH
10311: LD_INT 1
10313: PUSH
10314: LD_INT 0
10316: PUSH
10317: EMPTY
10318: LIST
10319: LIST
10320: PUSH
10321: LD_INT 1
10323: PUSH
10324: LD_INT 1
10326: PUSH
10327: EMPTY
10328: LIST
10329: LIST
10330: PUSH
10331: LD_INT 0
10333: PUSH
10334: LD_INT 1
10336: PUSH
10337: EMPTY
10338: LIST
10339: LIST
10340: PUSH
10341: LD_INT 1
10343: NEG
10344: PUSH
10345: LD_INT 0
10347: PUSH
10348: EMPTY
10349: LIST
10350: LIST
10351: PUSH
10352: LD_INT 1
10354: NEG
10355: PUSH
10356: LD_INT 1
10358: NEG
10359: PUSH
10360: EMPTY
10361: LIST
10362: LIST
10363: PUSH
10364: LD_INT 1
10366: PUSH
10367: LD_INT 1
10369: NEG
10370: PUSH
10371: EMPTY
10372: LIST
10373: LIST
10374: PUSH
10375: LD_INT 2
10377: PUSH
10378: LD_INT 0
10380: PUSH
10381: EMPTY
10382: LIST
10383: LIST
10384: PUSH
10385: LD_INT 2
10387: PUSH
10388: LD_INT 1
10390: PUSH
10391: EMPTY
10392: LIST
10393: LIST
10394: PUSH
10395: LD_INT 1
10397: NEG
10398: PUSH
10399: LD_INT 1
10401: PUSH
10402: EMPTY
10403: LIST
10404: LIST
10405: PUSH
10406: LD_INT 2
10408: NEG
10409: PUSH
10410: LD_INT 0
10412: PUSH
10413: EMPTY
10414: LIST
10415: LIST
10416: PUSH
10417: LD_INT 2
10419: NEG
10420: PUSH
10421: LD_INT 1
10423: NEG
10424: PUSH
10425: EMPTY
10426: LIST
10427: LIST
10428: PUSH
10429: LD_INT 2
10431: PUSH
10432: LD_INT 1
10434: NEG
10435: PUSH
10436: EMPTY
10437: LIST
10438: LIST
10439: PUSH
10440: LD_INT 3
10442: PUSH
10443: LD_INT 0
10445: PUSH
10446: EMPTY
10447: LIST
10448: LIST
10449: PUSH
10450: LD_INT 3
10452: PUSH
10453: LD_INT 1
10455: PUSH
10456: EMPTY
10457: LIST
10458: LIST
10459: PUSH
10460: EMPTY
10461: LIST
10462: LIST
10463: LIST
10464: LIST
10465: LIST
10466: LIST
10467: LIST
10468: LIST
10469: LIST
10470: LIST
10471: LIST
10472: LIST
10473: LIST
10474: LIST
10475: LIST
10476: LIST
10477: ST_TO_ADDR
// DepotAm5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
10478: LD_ADDR_VAR 0 16
10482: PUSH
10483: LD_INT 0
10485: PUSH
10486: LD_INT 0
10488: PUSH
10489: EMPTY
10490: LIST
10491: LIST
10492: PUSH
10493: LD_INT 0
10495: PUSH
10496: LD_INT 1
10498: NEG
10499: PUSH
10500: EMPTY
10501: LIST
10502: LIST
10503: PUSH
10504: LD_INT 1
10506: PUSH
10507: LD_INT 0
10509: PUSH
10510: EMPTY
10511: LIST
10512: LIST
10513: PUSH
10514: LD_INT 1
10516: PUSH
10517: LD_INT 1
10519: PUSH
10520: EMPTY
10521: LIST
10522: LIST
10523: PUSH
10524: LD_INT 0
10526: PUSH
10527: LD_INT 1
10529: PUSH
10530: EMPTY
10531: LIST
10532: LIST
10533: PUSH
10534: LD_INT 1
10536: NEG
10537: PUSH
10538: LD_INT 0
10540: PUSH
10541: EMPTY
10542: LIST
10543: LIST
10544: PUSH
10545: LD_INT 1
10547: NEG
10548: PUSH
10549: LD_INT 1
10551: NEG
10552: PUSH
10553: EMPTY
10554: LIST
10555: LIST
10556: PUSH
10557: LD_INT 1
10559: NEG
10560: PUSH
10561: LD_INT 2
10563: NEG
10564: PUSH
10565: EMPTY
10566: LIST
10567: LIST
10568: PUSH
10569: LD_INT 2
10571: PUSH
10572: LD_INT 1
10574: PUSH
10575: EMPTY
10576: LIST
10577: LIST
10578: PUSH
10579: LD_INT 2
10581: PUSH
10582: LD_INT 2
10584: PUSH
10585: EMPTY
10586: LIST
10587: LIST
10588: PUSH
10589: LD_INT 1
10591: PUSH
10592: LD_INT 2
10594: PUSH
10595: EMPTY
10596: LIST
10597: LIST
10598: PUSH
10599: LD_INT 2
10601: NEG
10602: PUSH
10603: LD_INT 1
10605: NEG
10606: PUSH
10607: EMPTY
10608: LIST
10609: LIST
10610: PUSH
10611: LD_INT 2
10613: NEG
10614: PUSH
10615: LD_INT 2
10617: NEG
10618: PUSH
10619: EMPTY
10620: LIST
10621: LIST
10622: PUSH
10623: LD_INT 3
10625: PUSH
10626: LD_INT 2
10628: PUSH
10629: EMPTY
10630: LIST
10631: LIST
10632: PUSH
10633: LD_INT 3
10635: PUSH
10636: LD_INT 3
10638: PUSH
10639: EMPTY
10640: LIST
10641: LIST
10642: PUSH
10643: LD_INT 2
10645: PUSH
10646: LD_INT 3
10648: PUSH
10649: EMPTY
10650: LIST
10651: LIST
10652: PUSH
10653: EMPTY
10654: LIST
10655: LIST
10656: LIST
10657: LIST
10658: LIST
10659: LIST
10660: LIST
10661: LIST
10662: LIST
10663: LIST
10664: LIST
10665: LIST
10666: LIST
10667: LIST
10668: LIST
10669: LIST
10670: ST_TO_ADDR
// DepotAr0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10671: LD_ADDR_VAR 0 17
10675: PUSH
10676: LD_INT 0
10678: PUSH
10679: LD_INT 0
10681: PUSH
10682: EMPTY
10683: LIST
10684: LIST
10685: PUSH
10686: LD_INT 0
10688: PUSH
10689: LD_INT 1
10691: NEG
10692: PUSH
10693: EMPTY
10694: LIST
10695: LIST
10696: PUSH
10697: LD_INT 1
10699: PUSH
10700: LD_INT 0
10702: PUSH
10703: EMPTY
10704: LIST
10705: LIST
10706: PUSH
10707: LD_INT 1
10709: PUSH
10710: LD_INT 1
10712: PUSH
10713: EMPTY
10714: LIST
10715: LIST
10716: PUSH
10717: LD_INT 0
10719: PUSH
10720: LD_INT 1
10722: PUSH
10723: EMPTY
10724: LIST
10725: LIST
10726: PUSH
10727: LD_INT 1
10729: NEG
10730: PUSH
10731: LD_INT 0
10733: PUSH
10734: EMPTY
10735: LIST
10736: LIST
10737: PUSH
10738: LD_INT 1
10740: NEG
10741: PUSH
10742: LD_INT 1
10744: NEG
10745: PUSH
10746: EMPTY
10747: LIST
10748: LIST
10749: PUSH
10750: LD_INT 1
10752: NEG
10753: PUSH
10754: LD_INT 2
10756: NEG
10757: PUSH
10758: EMPTY
10759: LIST
10760: LIST
10761: PUSH
10762: LD_INT 0
10764: PUSH
10765: LD_INT 2
10767: NEG
10768: PUSH
10769: EMPTY
10770: LIST
10771: LIST
10772: PUSH
10773: LD_INT 1
10775: PUSH
10776: LD_INT 1
10778: NEG
10779: PUSH
10780: EMPTY
10781: LIST
10782: LIST
10783: PUSH
10784: LD_INT 2
10786: PUSH
10787: LD_INT 0
10789: PUSH
10790: EMPTY
10791: LIST
10792: LIST
10793: PUSH
10794: LD_INT 2
10796: PUSH
10797: LD_INT 1
10799: PUSH
10800: EMPTY
10801: LIST
10802: LIST
10803: PUSH
10804: LD_INT 2
10806: PUSH
10807: LD_INT 2
10809: PUSH
10810: EMPTY
10811: LIST
10812: LIST
10813: PUSH
10814: LD_INT 1
10816: PUSH
10817: LD_INT 2
10819: PUSH
10820: EMPTY
10821: LIST
10822: LIST
10823: PUSH
10824: LD_INT 0
10826: PUSH
10827: LD_INT 2
10829: PUSH
10830: EMPTY
10831: LIST
10832: LIST
10833: PUSH
10834: LD_INT 1
10836: NEG
10837: PUSH
10838: LD_INT 1
10840: PUSH
10841: EMPTY
10842: LIST
10843: LIST
10844: PUSH
10845: LD_INT 2
10847: NEG
10848: PUSH
10849: LD_INT 0
10851: PUSH
10852: EMPTY
10853: LIST
10854: LIST
10855: PUSH
10856: LD_INT 2
10858: NEG
10859: PUSH
10860: LD_INT 1
10862: NEG
10863: PUSH
10864: EMPTY
10865: LIST
10866: LIST
10867: PUSH
10868: LD_INT 2
10870: NEG
10871: PUSH
10872: LD_INT 2
10874: NEG
10875: PUSH
10876: EMPTY
10877: LIST
10878: LIST
10879: PUSH
10880: EMPTY
10881: LIST
10882: LIST
10883: LIST
10884: LIST
10885: LIST
10886: LIST
10887: LIST
10888: LIST
10889: LIST
10890: LIST
10891: LIST
10892: LIST
10893: LIST
10894: LIST
10895: LIST
10896: LIST
10897: LIST
10898: LIST
10899: LIST
10900: ST_TO_ADDR
// DepotAr1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10901: LD_ADDR_VAR 0 18
10905: PUSH
10906: LD_INT 0
10908: PUSH
10909: LD_INT 0
10911: PUSH
10912: EMPTY
10913: LIST
10914: LIST
10915: PUSH
10916: LD_INT 0
10918: PUSH
10919: LD_INT 1
10921: NEG
10922: PUSH
10923: EMPTY
10924: LIST
10925: LIST
10926: PUSH
10927: LD_INT 1
10929: PUSH
10930: LD_INT 0
10932: PUSH
10933: EMPTY
10934: LIST
10935: LIST
10936: PUSH
10937: LD_INT 1
10939: PUSH
10940: LD_INT 1
10942: PUSH
10943: EMPTY
10944: LIST
10945: LIST
10946: PUSH
10947: LD_INT 0
10949: PUSH
10950: LD_INT 1
10952: PUSH
10953: EMPTY
10954: LIST
10955: LIST
10956: PUSH
10957: LD_INT 1
10959: NEG
10960: PUSH
10961: LD_INT 0
10963: PUSH
10964: EMPTY
10965: LIST
10966: LIST
10967: PUSH
10968: LD_INT 1
10970: NEG
10971: PUSH
10972: LD_INT 1
10974: NEG
10975: PUSH
10976: EMPTY
10977: LIST
10978: LIST
10979: PUSH
10980: LD_INT 1
10982: NEG
10983: PUSH
10984: LD_INT 2
10986: NEG
10987: PUSH
10988: EMPTY
10989: LIST
10990: LIST
10991: PUSH
10992: LD_INT 0
10994: PUSH
10995: LD_INT 2
10997: NEG
10998: PUSH
10999: EMPTY
11000: LIST
11001: LIST
11002: PUSH
11003: LD_INT 1
11005: PUSH
11006: LD_INT 1
11008: NEG
11009: PUSH
11010: EMPTY
11011: LIST
11012: LIST
11013: PUSH
11014: LD_INT 2
11016: PUSH
11017: LD_INT 0
11019: PUSH
11020: EMPTY
11021: LIST
11022: LIST
11023: PUSH
11024: LD_INT 2
11026: PUSH
11027: LD_INT 1
11029: PUSH
11030: EMPTY
11031: LIST
11032: LIST
11033: PUSH
11034: LD_INT 2
11036: PUSH
11037: LD_INT 2
11039: PUSH
11040: EMPTY
11041: LIST
11042: LIST
11043: PUSH
11044: LD_INT 1
11046: PUSH
11047: LD_INT 2
11049: PUSH
11050: EMPTY
11051: LIST
11052: LIST
11053: PUSH
11054: LD_INT 0
11056: PUSH
11057: LD_INT 2
11059: PUSH
11060: EMPTY
11061: LIST
11062: LIST
11063: PUSH
11064: LD_INT 1
11066: NEG
11067: PUSH
11068: LD_INT 1
11070: PUSH
11071: EMPTY
11072: LIST
11073: LIST
11074: PUSH
11075: LD_INT 2
11077: NEG
11078: PUSH
11079: LD_INT 0
11081: PUSH
11082: EMPTY
11083: LIST
11084: LIST
11085: PUSH
11086: LD_INT 2
11088: NEG
11089: PUSH
11090: LD_INT 1
11092: NEG
11093: PUSH
11094: EMPTY
11095: LIST
11096: LIST
11097: PUSH
11098: LD_INT 2
11100: NEG
11101: PUSH
11102: LD_INT 2
11104: NEG
11105: PUSH
11106: EMPTY
11107: LIST
11108: LIST
11109: PUSH
11110: EMPTY
11111: LIST
11112: LIST
11113: LIST
11114: LIST
11115: LIST
11116: LIST
11117: LIST
11118: LIST
11119: LIST
11120: LIST
11121: LIST
11122: LIST
11123: LIST
11124: LIST
11125: LIST
11126: LIST
11127: LIST
11128: LIST
11129: LIST
11130: ST_TO_ADDR
// DepotAr2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
11131: LD_ADDR_VAR 0 19
11135: PUSH
11136: LD_INT 0
11138: PUSH
11139: LD_INT 0
11141: PUSH
11142: EMPTY
11143: LIST
11144: LIST
11145: PUSH
11146: LD_INT 0
11148: PUSH
11149: LD_INT 1
11151: NEG
11152: PUSH
11153: EMPTY
11154: LIST
11155: LIST
11156: PUSH
11157: LD_INT 1
11159: PUSH
11160: LD_INT 0
11162: PUSH
11163: EMPTY
11164: LIST
11165: LIST
11166: PUSH
11167: LD_INT 1
11169: PUSH
11170: LD_INT 1
11172: PUSH
11173: EMPTY
11174: LIST
11175: LIST
11176: PUSH
11177: LD_INT 0
11179: PUSH
11180: LD_INT 1
11182: PUSH
11183: EMPTY
11184: LIST
11185: LIST
11186: PUSH
11187: LD_INT 1
11189: NEG
11190: PUSH
11191: LD_INT 0
11193: PUSH
11194: EMPTY
11195: LIST
11196: LIST
11197: PUSH
11198: LD_INT 1
11200: NEG
11201: PUSH
11202: LD_INT 1
11204: NEG
11205: PUSH
11206: EMPTY
11207: LIST
11208: LIST
11209: PUSH
11210: LD_INT 1
11212: NEG
11213: PUSH
11214: LD_INT 2
11216: NEG
11217: PUSH
11218: EMPTY
11219: LIST
11220: LIST
11221: PUSH
11222: LD_INT 0
11224: PUSH
11225: LD_INT 2
11227: NEG
11228: PUSH
11229: EMPTY
11230: LIST
11231: LIST
11232: PUSH
11233: LD_INT 1
11235: PUSH
11236: LD_INT 1
11238: NEG
11239: PUSH
11240: EMPTY
11241: LIST
11242: LIST
11243: PUSH
11244: LD_INT 2
11246: PUSH
11247: LD_INT 0
11249: PUSH
11250: EMPTY
11251: LIST
11252: LIST
11253: PUSH
11254: LD_INT 2
11256: PUSH
11257: LD_INT 1
11259: PUSH
11260: EMPTY
11261: LIST
11262: LIST
11263: PUSH
11264: LD_INT 2
11266: PUSH
11267: LD_INT 2
11269: PUSH
11270: EMPTY
11271: LIST
11272: LIST
11273: PUSH
11274: LD_INT 1
11276: PUSH
11277: LD_INT 2
11279: PUSH
11280: EMPTY
11281: LIST
11282: LIST
11283: PUSH
11284: LD_INT 0
11286: PUSH
11287: LD_INT 2
11289: PUSH
11290: EMPTY
11291: LIST
11292: LIST
11293: PUSH
11294: LD_INT 1
11296: NEG
11297: PUSH
11298: LD_INT 1
11300: PUSH
11301: EMPTY
11302: LIST
11303: LIST
11304: PUSH
11305: LD_INT 2
11307: NEG
11308: PUSH
11309: LD_INT 0
11311: PUSH
11312: EMPTY
11313: LIST
11314: LIST
11315: PUSH
11316: LD_INT 2
11318: NEG
11319: PUSH
11320: LD_INT 1
11322: NEG
11323: PUSH
11324: EMPTY
11325: LIST
11326: LIST
11327: PUSH
11328: LD_INT 2
11330: NEG
11331: PUSH
11332: LD_INT 2
11334: NEG
11335: PUSH
11336: EMPTY
11337: LIST
11338: LIST
11339: PUSH
11340: EMPTY
11341: LIST
11342: LIST
11343: LIST
11344: LIST
11345: LIST
11346: LIST
11347: LIST
11348: LIST
11349: LIST
11350: LIST
11351: LIST
11352: LIST
11353: LIST
11354: LIST
11355: LIST
11356: LIST
11357: LIST
11358: LIST
11359: LIST
11360: ST_TO_ADDR
// DepotAr3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
11361: LD_ADDR_VAR 0 20
11365: PUSH
11366: LD_INT 0
11368: PUSH
11369: LD_INT 0
11371: PUSH
11372: EMPTY
11373: LIST
11374: LIST
11375: PUSH
11376: LD_INT 0
11378: PUSH
11379: LD_INT 1
11381: NEG
11382: PUSH
11383: EMPTY
11384: LIST
11385: LIST
11386: PUSH
11387: LD_INT 1
11389: PUSH
11390: LD_INT 0
11392: PUSH
11393: EMPTY
11394: LIST
11395: LIST
11396: PUSH
11397: LD_INT 1
11399: PUSH
11400: LD_INT 1
11402: PUSH
11403: EMPTY
11404: LIST
11405: LIST
11406: PUSH
11407: LD_INT 0
11409: PUSH
11410: LD_INT 1
11412: PUSH
11413: EMPTY
11414: LIST
11415: LIST
11416: PUSH
11417: LD_INT 1
11419: NEG
11420: PUSH
11421: LD_INT 0
11423: PUSH
11424: EMPTY
11425: LIST
11426: LIST
11427: PUSH
11428: LD_INT 1
11430: NEG
11431: PUSH
11432: LD_INT 1
11434: NEG
11435: PUSH
11436: EMPTY
11437: LIST
11438: LIST
11439: PUSH
11440: LD_INT 1
11442: NEG
11443: PUSH
11444: LD_INT 2
11446: NEG
11447: PUSH
11448: EMPTY
11449: LIST
11450: LIST
11451: PUSH
11452: LD_INT 0
11454: PUSH
11455: LD_INT 2
11457: NEG
11458: PUSH
11459: EMPTY
11460: LIST
11461: LIST
11462: PUSH
11463: LD_INT 1
11465: PUSH
11466: LD_INT 1
11468: NEG
11469: PUSH
11470: EMPTY
11471: LIST
11472: LIST
11473: PUSH
11474: LD_INT 2
11476: PUSH
11477: LD_INT 0
11479: PUSH
11480: EMPTY
11481: LIST
11482: LIST
11483: PUSH
11484: LD_INT 2
11486: PUSH
11487: LD_INT 1
11489: PUSH
11490: EMPTY
11491: LIST
11492: LIST
11493: PUSH
11494: LD_INT 2
11496: PUSH
11497: LD_INT 2
11499: PUSH
11500: EMPTY
11501: LIST
11502: LIST
11503: PUSH
11504: LD_INT 1
11506: PUSH
11507: LD_INT 2
11509: PUSH
11510: EMPTY
11511: LIST
11512: LIST
11513: PUSH
11514: LD_INT 0
11516: PUSH
11517: LD_INT 2
11519: PUSH
11520: EMPTY
11521: LIST
11522: LIST
11523: PUSH
11524: LD_INT 1
11526: NEG
11527: PUSH
11528: LD_INT 1
11530: PUSH
11531: EMPTY
11532: LIST
11533: LIST
11534: PUSH
11535: LD_INT 2
11537: NEG
11538: PUSH
11539: LD_INT 0
11541: PUSH
11542: EMPTY
11543: LIST
11544: LIST
11545: PUSH
11546: LD_INT 2
11548: NEG
11549: PUSH
11550: LD_INT 1
11552: NEG
11553: PUSH
11554: EMPTY
11555: LIST
11556: LIST
11557: PUSH
11558: LD_INT 2
11560: NEG
11561: PUSH
11562: LD_INT 2
11564: NEG
11565: PUSH
11566: EMPTY
11567: LIST
11568: LIST
11569: PUSH
11570: EMPTY
11571: LIST
11572: LIST
11573: LIST
11574: LIST
11575: LIST
11576: LIST
11577: LIST
11578: LIST
11579: LIST
11580: LIST
11581: LIST
11582: LIST
11583: LIST
11584: LIST
11585: LIST
11586: LIST
11587: LIST
11588: LIST
11589: LIST
11590: ST_TO_ADDR
// DepotAr4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
11591: LD_ADDR_VAR 0 21
11595: PUSH
11596: LD_INT 0
11598: PUSH
11599: LD_INT 0
11601: PUSH
11602: EMPTY
11603: LIST
11604: LIST
11605: PUSH
11606: LD_INT 0
11608: PUSH
11609: LD_INT 1
11611: NEG
11612: PUSH
11613: EMPTY
11614: LIST
11615: LIST
11616: PUSH
11617: LD_INT 1
11619: PUSH
11620: LD_INT 0
11622: PUSH
11623: EMPTY
11624: LIST
11625: LIST
11626: PUSH
11627: LD_INT 1
11629: PUSH
11630: LD_INT 1
11632: PUSH
11633: EMPTY
11634: LIST
11635: LIST
11636: PUSH
11637: LD_INT 0
11639: PUSH
11640: LD_INT 1
11642: PUSH
11643: EMPTY
11644: LIST
11645: LIST
11646: PUSH
11647: LD_INT 1
11649: NEG
11650: PUSH
11651: LD_INT 0
11653: PUSH
11654: EMPTY
11655: LIST
11656: LIST
11657: PUSH
11658: LD_INT 1
11660: NEG
11661: PUSH
11662: LD_INT 1
11664: NEG
11665: PUSH
11666: EMPTY
11667: LIST
11668: LIST
11669: PUSH
11670: LD_INT 1
11672: NEG
11673: PUSH
11674: LD_INT 2
11676: NEG
11677: PUSH
11678: EMPTY
11679: LIST
11680: LIST
11681: PUSH
11682: LD_INT 0
11684: PUSH
11685: LD_INT 2
11687: NEG
11688: PUSH
11689: EMPTY
11690: LIST
11691: LIST
11692: PUSH
11693: LD_INT 1
11695: PUSH
11696: LD_INT 1
11698: NEG
11699: PUSH
11700: EMPTY
11701: LIST
11702: LIST
11703: PUSH
11704: LD_INT 2
11706: PUSH
11707: LD_INT 0
11709: PUSH
11710: EMPTY
11711: LIST
11712: LIST
11713: PUSH
11714: LD_INT 2
11716: PUSH
11717: LD_INT 1
11719: PUSH
11720: EMPTY
11721: LIST
11722: LIST
11723: PUSH
11724: LD_INT 2
11726: PUSH
11727: LD_INT 2
11729: PUSH
11730: EMPTY
11731: LIST
11732: LIST
11733: PUSH
11734: LD_INT 1
11736: PUSH
11737: LD_INT 2
11739: PUSH
11740: EMPTY
11741: LIST
11742: LIST
11743: PUSH
11744: LD_INT 0
11746: PUSH
11747: LD_INT 2
11749: PUSH
11750: EMPTY
11751: LIST
11752: LIST
11753: PUSH
11754: LD_INT 1
11756: NEG
11757: PUSH
11758: LD_INT 1
11760: PUSH
11761: EMPTY
11762: LIST
11763: LIST
11764: PUSH
11765: LD_INT 2
11767: NEG
11768: PUSH
11769: LD_INT 0
11771: PUSH
11772: EMPTY
11773: LIST
11774: LIST
11775: PUSH
11776: LD_INT 2
11778: NEG
11779: PUSH
11780: LD_INT 1
11782: NEG
11783: PUSH
11784: EMPTY
11785: LIST
11786: LIST
11787: PUSH
11788: LD_INT 2
11790: NEG
11791: PUSH
11792: LD_INT 2
11794: NEG
11795: PUSH
11796: EMPTY
11797: LIST
11798: LIST
11799: PUSH
11800: EMPTY
11801: LIST
11802: LIST
11803: LIST
11804: LIST
11805: LIST
11806: LIST
11807: LIST
11808: LIST
11809: LIST
11810: LIST
11811: LIST
11812: LIST
11813: LIST
11814: LIST
11815: LIST
11816: LIST
11817: LIST
11818: LIST
11819: LIST
11820: ST_TO_ADDR
// DepotAr5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
11821: LD_ADDR_VAR 0 22
11825: PUSH
11826: LD_INT 0
11828: PUSH
11829: LD_INT 0
11831: PUSH
11832: EMPTY
11833: LIST
11834: LIST
11835: PUSH
11836: LD_INT 0
11838: PUSH
11839: LD_INT 1
11841: NEG
11842: PUSH
11843: EMPTY
11844: LIST
11845: LIST
11846: PUSH
11847: LD_INT 1
11849: PUSH
11850: LD_INT 0
11852: PUSH
11853: EMPTY
11854: LIST
11855: LIST
11856: PUSH
11857: LD_INT 1
11859: PUSH
11860: LD_INT 1
11862: PUSH
11863: EMPTY
11864: LIST
11865: LIST
11866: PUSH
11867: LD_INT 0
11869: PUSH
11870: LD_INT 1
11872: PUSH
11873: EMPTY
11874: LIST
11875: LIST
11876: PUSH
11877: LD_INT 1
11879: NEG
11880: PUSH
11881: LD_INT 0
11883: PUSH
11884: EMPTY
11885: LIST
11886: LIST
11887: PUSH
11888: LD_INT 1
11890: NEG
11891: PUSH
11892: LD_INT 1
11894: NEG
11895: PUSH
11896: EMPTY
11897: LIST
11898: LIST
11899: PUSH
11900: LD_INT 1
11902: NEG
11903: PUSH
11904: LD_INT 2
11906: NEG
11907: PUSH
11908: EMPTY
11909: LIST
11910: LIST
11911: PUSH
11912: LD_INT 0
11914: PUSH
11915: LD_INT 2
11917: NEG
11918: PUSH
11919: EMPTY
11920: LIST
11921: LIST
11922: PUSH
11923: LD_INT 1
11925: PUSH
11926: LD_INT 1
11928: NEG
11929: PUSH
11930: EMPTY
11931: LIST
11932: LIST
11933: PUSH
11934: LD_INT 2
11936: PUSH
11937: LD_INT 0
11939: PUSH
11940: EMPTY
11941: LIST
11942: LIST
11943: PUSH
11944: LD_INT 2
11946: PUSH
11947: LD_INT 1
11949: PUSH
11950: EMPTY
11951: LIST
11952: LIST
11953: PUSH
11954: LD_INT 2
11956: PUSH
11957: LD_INT 2
11959: PUSH
11960: EMPTY
11961: LIST
11962: LIST
11963: PUSH
11964: LD_INT 1
11966: PUSH
11967: LD_INT 2
11969: PUSH
11970: EMPTY
11971: LIST
11972: LIST
11973: PUSH
11974: LD_INT 0
11976: PUSH
11977: LD_INT 2
11979: PUSH
11980: EMPTY
11981: LIST
11982: LIST
11983: PUSH
11984: LD_INT 1
11986: NEG
11987: PUSH
11988: LD_INT 1
11990: PUSH
11991: EMPTY
11992: LIST
11993: LIST
11994: PUSH
11995: LD_INT 2
11997: NEG
11998: PUSH
11999: LD_INT 0
12001: PUSH
12002: EMPTY
12003: LIST
12004: LIST
12005: PUSH
12006: LD_INT 2
12008: NEG
12009: PUSH
12010: LD_INT 1
12012: NEG
12013: PUSH
12014: EMPTY
12015: LIST
12016: LIST
12017: PUSH
12018: LD_INT 2
12020: NEG
12021: PUSH
12022: LD_INT 2
12024: NEG
12025: PUSH
12026: EMPTY
12027: LIST
12028: LIST
12029: PUSH
12030: EMPTY
12031: LIST
12032: LIST
12033: LIST
12034: LIST
12035: LIST
12036: LIST
12037: LIST
12038: LIST
12039: LIST
12040: LIST
12041: LIST
12042: LIST
12043: LIST
12044: LIST
12045: LIST
12046: LIST
12047: LIST
12048: LIST
12049: LIST
12050: ST_TO_ADDR
// DepotRu0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 2 , - 1 ] ] ;
12051: LD_ADDR_VAR 0 23
12055: PUSH
12056: LD_INT 0
12058: PUSH
12059: LD_INT 0
12061: PUSH
12062: EMPTY
12063: LIST
12064: LIST
12065: PUSH
12066: LD_INT 0
12068: PUSH
12069: LD_INT 1
12071: NEG
12072: PUSH
12073: EMPTY
12074: LIST
12075: LIST
12076: PUSH
12077: LD_INT 1
12079: PUSH
12080: LD_INT 0
12082: PUSH
12083: EMPTY
12084: LIST
12085: LIST
12086: PUSH
12087: LD_INT 1
12089: PUSH
12090: LD_INT 1
12092: PUSH
12093: EMPTY
12094: LIST
12095: LIST
12096: PUSH
12097: LD_INT 0
12099: PUSH
12100: LD_INT 1
12102: PUSH
12103: EMPTY
12104: LIST
12105: LIST
12106: PUSH
12107: LD_INT 1
12109: NEG
12110: PUSH
12111: LD_INT 0
12113: PUSH
12114: EMPTY
12115: LIST
12116: LIST
12117: PUSH
12118: LD_INT 1
12120: NEG
12121: PUSH
12122: LD_INT 1
12124: NEG
12125: PUSH
12126: EMPTY
12127: LIST
12128: LIST
12129: PUSH
12130: LD_INT 1
12132: NEG
12133: PUSH
12134: LD_INT 2
12136: NEG
12137: PUSH
12138: EMPTY
12139: LIST
12140: LIST
12141: PUSH
12142: LD_INT 0
12144: PUSH
12145: LD_INT 2
12147: NEG
12148: PUSH
12149: EMPTY
12150: LIST
12151: LIST
12152: PUSH
12153: LD_INT 1
12155: PUSH
12156: LD_INT 1
12158: NEG
12159: PUSH
12160: EMPTY
12161: LIST
12162: LIST
12163: PUSH
12164: LD_INT 2
12166: PUSH
12167: LD_INT 0
12169: PUSH
12170: EMPTY
12171: LIST
12172: LIST
12173: PUSH
12174: LD_INT 2
12176: PUSH
12177: LD_INT 1
12179: PUSH
12180: EMPTY
12181: LIST
12182: LIST
12183: PUSH
12184: LD_INT 2
12186: PUSH
12187: LD_INT 2
12189: PUSH
12190: EMPTY
12191: LIST
12192: LIST
12193: PUSH
12194: LD_INT 1
12196: PUSH
12197: LD_INT 2
12199: PUSH
12200: EMPTY
12201: LIST
12202: LIST
12203: PUSH
12204: LD_INT 0
12206: PUSH
12207: LD_INT 2
12209: PUSH
12210: EMPTY
12211: LIST
12212: LIST
12213: PUSH
12214: LD_INT 1
12216: NEG
12217: PUSH
12218: LD_INT 1
12220: PUSH
12221: EMPTY
12222: LIST
12223: LIST
12224: PUSH
12225: LD_INT 2
12227: NEG
12228: PUSH
12229: LD_INT 0
12231: PUSH
12232: EMPTY
12233: LIST
12234: LIST
12235: PUSH
12236: LD_INT 2
12238: NEG
12239: PUSH
12240: LD_INT 1
12242: NEG
12243: PUSH
12244: EMPTY
12245: LIST
12246: LIST
12247: PUSH
12248: LD_INT 2
12250: NEG
12251: PUSH
12252: LD_INT 2
12254: NEG
12255: PUSH
12256: EMPTY
12257: LIST
12258: LIST
12259: PUSH
12260: LD_INT 2
12262: NEG
12263: PUSH
12264: LD_INT 3
12266: NEG
12267: PUSH
12268: EMPTY
12269: LIST
12270: LIST
12271: PUSH
12272: LD_INT 1
12274: NEG
12275: PUSH
12276: LD_INT 3
12278: NEG
12279: PUSH
12280: EMPTY
12281: LIST
12282: LIST
12283: PUSH
12284: LD_INT 1
12286: PUSH
12287: LD_INT 2
12289: NEG
12290: PUSH
12291: EMPTY
12292: LIST
12293: LIST
12294: PUSH
12295: LD_INT 2
12297: PUSH
12298: LD_INT 1
12300: NEG
12301: PUSH
12302: EMPTY
12303: LIST
12304: LIST
12305: PUSH
12306: EMPTY
12307: LIST
12308: LIST
12309: LIST
12310: LIST
12311: LIST
12312: LIST
12313: LIST
12314: LIST
12315: LIST
12316: LIST
12317: LIST
12318: LIST
12319: LIST
12320: LIST
12321: LIST
12322: LIST
12323: LIST
12324: LIST
12325: LIST
12326: LIST
12327: LIST
12328: LIST
12329: LIST
12330: ST_TO_ADDR
// DepotRu1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 1 , - 2 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 3 , 2 ] ] ;
12331: LD_ADDR_VAR 0 24
12335: PUSH
12336: LD_INT 0
12338: PUSH
12339: LD_INT 0
12341: PUSH
12342: EMPTY
12343: LIST
12344: LIST
12345: PUSH
12346: LD_INT 0
12348: PUSH
12349: LD_INT 1
12351: NEG
12352: PUSH
12353: EMPTY
12354: LIST
12355: LIST
12356: PUSH
12357: LD_INT 1
12359: PUSH
12360: LD_INT 0
12362: PUSH
12363: EMPTY
12364: LIST
12365: LIST
12366: PUSH
12367: LD_INT 1
12369: PUSH
12370: LD_INT 1
12372: PUSH
12373: EMPTY
12374: LIST
12375: LIST
12376: PUSH
12377: LD_INT 0
12379: PUSH
12380: LD_INT 1
12382: PUSH
12383: EMPTY
12384: LIST
12385: LIST
12386: PUSH
12387: LD_INT 1
12389: NEG
12390: PUSH
12391: LD_INT 0
12393: PUSH
12394: EMPTY
12395: LIST
12396: LIST
12397: PUSH
12398: LD_INT 1
12400: NEG
12401: PUSH
12402: LD_INT 1
12404: NEG
12405: PUSH
12406: EMPTY
12407: LIST
12408: LIST
12409: PUSH
12410: LD_INT 1
12412: NEG
12413: PUSH
12414: LD_INT 2
12416: NEG
12417: PUSH
12418: EMPTY
12419: LIST
12420: LIST
12421: PUSH
12422: LD_INT 0
12424: PUSH
12425: LD_INT 2
12427: NEG
12428: PUSH
12429: EMPTY
12430: LIST
12431: LIST
12432: PUSH
12433: LD_INT 1
12435: PUSH
12436: LD_INT 1
12438: NEG
12439: PUSH
12440: EMPTY
12441: LIST
12442: LIST
12443: PUSH
12444: LD_INT 2
12446: PUSH
12447: LD_INT 0
12449: PUSH
12450: EMPTY
12451: LIST
12452: LIST
12453: PUSH
12454: LD_INT 2
12456: PUSH
12457: LD_INT 1
12459: PUSH
12460: EMPTY
12461: LIST
12462: LIST
12463: PUSH
12464: LD_INT 2
12466: PUSH
12467: LD_INT 2
12469: PUSH
12470: EMPTY
12471: LIST
12472: LIST
12473: PUSH
12474: LD_INT 1
12476: PUSH
12477: LD_INT 2
12479: PUSH
12480: EMPTY
12481: LIST
12482: LIST
12483: PUSH
12484: LD_INT 0
12486: PUSH
12487: LD_INT 2
12489: PUSH
12490: EMPTY
12491: LIST
12492: LIST
12493: PUSH
12494: LD_INT 1
12496: NEG
12497: PUSH
12498: LD_INT 1
12500: PUSH
12501: EMPTY
12502: LIST
12503: LIST
12504: PUSH
12505: LD_INT 2
12507: NEG
12508: PUSH
12509: LD_INT 0
12511: PUSH
12512: EMPTY
12513: LIST
12514: LIST
12515: PUSH
12516: LD_INT 2
12518: NEG
12519: PUSH
12520: LD_INT 1
12522: NEG
12523: PUSH
12524: EMPTY
12525: LIST
12526: LIST
12527: PUSH
12528: LD_INT 2
12530: NEG
12531: PUSH
12532: LD_INT 2
12534: NEG
12535: PUSH
12536: EMPTY
12537: LIST
12538: LIST
12539: PUSH
12540: LD_INT 1
12542: PUSH
12543: LD_INT 2
12545: NEG
12546: PUSH
12547: EMPTY
12548: LIST
12549: LIST
12550: PUSH
12551: LD_INT 2
12553: PUSH
12554: LD_INT 1
12556: NEG
12557: PUSH
12558: EMPTY
12559: LIST
12560: LIST
12561: PUSH
12562: LD_INT 3
12564: PUSH
12565: LD_INT 1
12567: PUSH
12568: EMPTY
12569: LIST
12570: LIST
12571: PUSH
12572: LD_INT 3
12574: PUSH
12575: LD_INT 2
12577: PUSH
12578: EMPTY
12579: LIST
12580: LIST
12581: PUSH
12582: EMPTY
12583: LIST
12584: LIST
12585: LIST
12586: LIST
12587: LIST
12588: LIST
12589: LIST
12590: LIST
12591: LIST
12592: LIST
12593: LIST
12594: LIST
12595: LIST
12596: LIST
12597: LIST
12598: LIST
12599: LIST
12600: LIST
12601: LIST
12602: LIST
12603: LIST
12604: LIST
12605: LIST
12606: ST_TO_ADDR
// DepotRu2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 3 , 1 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ 1 , 3 ] ] ;
12607: LD_ADDR_VAR 0 25
12611: PUSH
12612: LD_INT 0
12614: PUSH
12615: LD_INT 0
12617: PUSH
12618: EMPTY
12619: LIST
12620: LIST
12621: PUSH
12622: LD_INT 0
12624: PUSH
12625: LD_INT 1
12627: NEG
12628: PUSH
12629: EMPTY
12630: LIST
12631: LIST
12632: PUSH
12633: LD_INT 1
12635: PUSH
12636: LD_INT 0
12638: PUSH
12639: EMPTY
12640: LIST
12641: LIST
12642: PUSH
12643: LD_INT 1
12645: PUSH
12646: LD_INT 1
12648: PUSH
12649: EMPTY
12650: LIST
12651: LIST
12652: PUSH
12653: LD_INT 0
12655: PUSH
12656: LD_INT 1
12658: PUSH
12659: EMPTY
12660: LIST
12661: LIST
12662: PUSH
12663: LD_INT 1
12665: NEG
12666: PUSH
12667: LD_INT 0
12669: PUSH
12670: EMPTY
12671: LIST
12672: LIST
12673: PUSH
12674: LD_INT 1
12676: NEG
12677: PUSH
12678: LD_INT 1
12680: NEG
12681: PUSH
12682: EMPTY
12683: LIST
12684: LIST
12685: PUSH
12686: LD_INT 1
12688: NEG
12689: PUSH
12690: LD_INT 2
12692: NEG
12693: PUSH
12694: EMPTY
12695: LIST
12696: LIST
12697: PUSH
12698: LD_INT 0
12700: PUSH
12701: LD_INT 2
12703: NEG
12704: PUSH
12705: EMPTY
12706: LIST
12707: LIST
12708: PUSH
12709: LD_INT 1
12711: PUSH
12712: LD_INT 1
12714: NEG
12715: PUSH
12716: EMPTY
12717: LIST
12718: LIST
12719: PUSH
12720: LD_INT 2
12722: PUSH
12723: LD_INT 0
12725: PUSH
12726: EMPTY
12727: LIST
12728: LIST
12729: PUSH
12730: LD_INT 2
12732: PUSH
12733: LD_INT 1
12735: PUSH
12736: EMPTY
12737: LIST
12738: LIST
12739: PUSH
12740: LD_INT 2
12742: PUSH
12743: LD_INT 2
12745: PUSH
12746: EMPTY
12747: LIST
12748: LIST
12749: PUSH
12750: LD_INT 1
12752: PUSH
12753: LD_INT 2
12755: PUSH
12756: EMPTY
12757: LIST
12758: LIST
12759: PUSH
12760: LD_INT 0
12762: PUSH
12763: LD_INT 2
12765: PUSH
12766: EMPTY
12767: LIST
12768: LIST
12769: PUSH
12770: LD_INT 1
12772: NEG
12773: PUSH
12774: LD_INT 1
12776: PUSH
12777: EMPTY
12778: LIST
12779: LIST
12780: PUSH
12781: LD_INT 2
12783: NEG
12784: PUSH
12785: LD_INT 0
12787: PUSH
12788: EMPTY
12789: LIST
12790: LIST
12791: PUSH
12792: LD_INT 2
12794: NEG
12795: PUSH
12796: LD_INT 1
12798: NEG
12799: PUSH
12800: EMPTY
12801: LIST
12802: LIST
12803: PUSH
12804: LD_INT 2
12806: NEG
12807: PUSH
12808: LD_INT 2
12810: NEG
12811: PUSH
12812: EMPTY
12813: LIST
12814: LIST
12815: PUSH
12816: LD_INT 3
12818: PUSH
12819: LD_INT 1
12821: PUSH
12822: EMPTY
12823: LIST
12824: LIST
12825: PUSH
12826: LD_INT 3
12828: PUSH
12829: LD_INT 2
12831: PUSH
12832: EMPTY
12833: LIST
12834: LIST
12835: PUSH
12836: LD_INT 2
12838: PUSH
12839: LD_INT 3
12841: PUSH
12842: EMPTY
12843: LIST
12844: LIST
12845: PUSH
12846: LD_INT 1
12848: PUSH
12849: LD_INT 3
12851: PUSH
12852: EMPTY
12853: LIST
12854: LIST
12855: PUSH
12856: EMPTY
12857: LIST
12858: LIST
12859: LIST
12860: LIST
12861: LIST
12862: LIST
12863: LIST
12864: LIST
12865: LIST
12866: LIST
12867: LIST
12868: LIST
12869: LIST
12870: LIST
12871: LIST
12872: LIST
12873: LIST
12874: LIST
12875: LIST
12876: LIST
12877: LIST
12878: LIST
12879: LIST
12880: ST_TO_ADDR
// DepotRu3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 2 , 3 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 2 , 1 ] ] ;
12881: LD_ADDR_VAR 0 26
12885: PUSH
12886: LD_INT 0
12888: PUSH
12889: LD_INT 0
12891: PUSH
12892: EMPTY
12893: LIST
12894: LIST
12895: PUSH
12896: LD_INT 0
12898: PUSH
12899: LD_INT 1
12901: NEG
12902: PUSH
12903: EMPTY
12904: LIST
12905: LIST
12906: PUSH
12907: LD_INT 1
12909: PUSH
12910: LD_INT 0
12912: PUSH
12913: EMPTY
12914: LIST
12915: LIST
12916: PUSH
12917: LD_INT 1
12919: PUSH
12920: LD_INT 1
12922: PUSH
12923: EMPTY
12924: LIST
12925: LIST
12926: PUSH
12927: LD_INT 0
12929: PUSH
12930: LD_INT 1
12932: PUSH
12933: EMPTY
12934: LIST
12935: LIST
12936: PUSH
12937: LD_INT 1
12939: NEG
12940: PUSH
12941: LD_INT 0
12943: PUSH
12944: EMPTY
12945: LIST
12946: LIST
12947: PUSH
12948: LD_INT 1
12950: NEG
12951: PUSH
12952: LD_INT 1
12954: NEG
12955: PUSH
12956: EMPTY
12957: LIST
12958: LIST
12959: PUSH
12960: LD_INT 1
12962: NEG
12963: PUSH
12964: LD_INT 2
12966: NEG
12967: PUSH
12968: EMPTY
12969: LIST
12970: LIST
12971: PUSH
12972: LD_INT 0
12974: PUSH
12975: LD_INT 2
12977: NEG
12978: PUSH
12979: EMPTY
12980: LIST
12981: LIST
12982: PUSH
12983: LD_INT 1
12985: PUSH
12986: LD_INT 1
12988: NEG
12989: PUSH
12990: EMPTY
12991: LIST
12992: LIST
12993: PUSH
12994: LD_INT 2
12996: PUSH
12997: LD_INT 0
12999: PUSH
13000: EMPTY
13001: LIST
13002: LIST
13003: PUSH
13004: LD_INT 2
13006: PUSH
13007: LD_INT 1
13009: PUSH
13010: EMPTY
13011: LIST
13012: LIST
13013: PUSH
13014: LD_INT 2
13016: PUSH
13017: LD_INT 2
13019: PUSH
13020: EMPTY
13021: LIST
13022: LIST
13023: PUSH
13024: LD_INT 1
13026: PUSH
13027: LD_INT 2
13029: PUSH
13030: EMPTY
13031: LIST
13032: LIST
13033: PUSH
13034: LD_INT 0
13036: PUSH
13037: LD_INT 2
13039: PUSH
13040: EMPTY
13041: LIST
13042: LIST
13043: PUSH
13044: LD_INT 1
13046: NEG
13047: PUSH
13048: LD_INT 1
13050: PUSH
13051: EMPTY
13052: LIST
13053: LIST
13054: PUSH
13055: LD_INT 2
13057: NEG
13058: PUSH
13059: LD_INT 0
13061: PUSH
13062: EMPTY
13063: LIST
13064: LIST
13065: PUSH
13066: LD_INT 2
13068: NEG
13069: PUSH
13070: LD_INT 1
13072: NEG
13073: PUSH
13074: EMPTY
13075: LIST
13076: LIST
13077: PUSH
13078: LD_INT 2
13080: NEG
13081: PUSH
13082: LD_INT 2
13084: NEG
13085: PUSH
13086: EMPTY
13087: LIST
13088: LIST
13089: PUSH
13090: LD_INT 2
13092: PUSH
13093: LD_INT 3
13095: PUSH
13096: EMPTY
13097: LIST
13098: LIST
13099: PUSH
13100: LD_INT 1
13102: PUSH
13103: LD_INT 3
13105: PUSH
13106: EMPTY
13107: LIST
13108: LIST
13109: PUSH
13110: LD_INT 1
13112: NEG
13113: PUSH
13114: LD_INT 2
13116: PUSH
13117: EMPTY
13118: LIST
13119: LIST
13120: PUSH
13121: LD_INT 2
13123: NEG
13124: PUSH
13125: LD_INT 1
13127: PUSH
13128: EMPTY
13129: LIST
13130: LIST
13131: PUSH
13132: EMPTY
13133: LIST
13134: LIST
13135: LIST
13136: LIST
13137: LIST
13138: LIST
13139: LIST
13140: LIST
13141: LIST
13142: LIST
13143: LIST
13144: LIST
13145: LIST
13146: LIST
13147: LIST
13148: LIST
13149: LIST
13150: LIST
13151: LIST
13152: LIST
13153: LIST
13154: LIST
13155: LIST
13156: ST_TO_ADDR
// DepotRu4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 1 , 2 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] ] ;
13157: LD_ADDR_VAR 0 27
13161: PUSH
13162: LD_INT 0
13164: PUSH
13165: LD_INT 0
13167: PUSH
13168: EMPTY
13169: LIST
13170: LIST
13171: PUSH
13172: LD_INT 0
13174: PUSH
13175: LD_INT 1
13177: NEG
13178: PUSH
13179: EMPTY
13180: LIST
13181: LIST
13182: PUSH
13183: LD_INT 1
13185: PUSH
13186: LD_INT 0
13188: PUSH
13189: EMPTY
13190: LIST
13191: LIST
13192: PUSH
13193: LD_INT 1
13195: PUSH
13196: LD_INT 1
13198: PUSH
13199: EMPTY
13200: LIST
13201: LIST
13202: PUSH
13203: LD_INT 0
13205: PUSH
13206: LD_INT 1
13208: PUSH
13209: EMPTY
13210: LIST
13211: LIST
13212: PUSH
13213: LD_INT 1
13215: NEG
13216: PUSH
13217: LD_INT 0
13219: PUSH
13220: EMPTY
13221: LIST
13222: LIST
13223: PUSH
13224: LD_INT 1
13226: NEG
13227: PUSH
13228: LD_INT 1
13230: NEG
13231: PUSH
13232: EMPTY
13233: LIST
13234: LIST
13235: PUSH
13236: LD_INT 1
13238: NEG
13239: PUSH
13240: LD_INT 2
13242: NEG
13243: PUSH
13244: EMPTY
13245: LIST
13246: LIST
13247: PUSH
13248: LD_INT 0
13250: PUSH
13251: LD_INT 2
13253: NEG
13254: PUSH
13255: EMPTY
13256: LIST
13257: LIST
13258: PUSH
13259: LD_INT 1
13261: PUSH
13262: LD_INT 1
13264: NEG
13265: PUSH
13266: EMPTY
13267: LIST
13268: LIST
13269: PUSH
13270: LD_INT 2
13272: PUSH
13273: LD_INT 0
13275: PUSH
13276: EMPTY
13277: LIST
13278: LIST
13279: PUSH
13280: LD_INT 2
13282: PUSH
13283: LD_INT 1
13285: PUSH
13286: EMPTY
13287: LIST
13288: LIST
13289: PUSH
13290: LD_INT 2
13292: PUSH
13293: LD_INT 2
13295: PUSH
13296: EMPTY
13297: LIST
13298: LIST
13299: PUSH
13300: LD_INT 1
13302: PUSH
13303: LD_INT 2
13305: PUSH
13306: EMPTY
13307: LIST
13308: LIST
13309: PUSH
13310: LD_INT 0
13312: PUSH
13313: LD_INT 2
13315: PUSH
13316: EMPTY
13317: LIST
13318: LIST
13319: PUSH
13320: LD_INT 1
13322: NEG
13323: PUSH
13324: LD_INT 1
13326: PUSH
13327: EMPTY
13328: LIST
13329: LIST
13330: PUSH
13331: LD_INT 2
13333: NEG
13334: PUSH
13335: LD_INT 0
13337: PUSH
13338: EMPTY
13339: LIST
13340: LIST
13341: PUSH
13342: LD_INT 2
13344: NEG
13345: PUSH
13346: LD_INT 1
13348: NEG
13349: PUSH
13350: EMPTY
13351: LIST
13352: LIST
13353: PUSH
13354: LD_INT 2
13356: NEG
13357: PUSH
13358: LD_INT 2
13360: NEG
13361: PUSH
13362: EMPTY
13363: LIST
13364: LIST
13365: PUSH
13366: LD_INT 1
13368: NEG
13369: PUSH
13370: LD_INT 2
13372: PUSH
13373: EMPTY
13374: LIST
13375: LIST
13376: PUSH
13377: LD_INT 2
13379: NEG
13380: PUSH
13381: LD_INT 1
13383: PUSH
13384: EMPTY
13385: LIST
13386: LIST
13387: PUSH
13388: LD_INT 3
13390: NEG
13391: PUSH
13392: LD_INT 1
13394: NEG
13395: PUSH
13396: EMPTY
13397: LIST
13398: LIST
13399: PUSH
13400: LD_INT 3
13402: NEG
13403: PUSH
13404: LD_INT 2
13406: NEG
13407: PUSH
13408: EMPTY
13409: LIST
13410: LIST
13411: PUSH
13412: EMPTY
13413: LIST
13414: LIST
13415: LIST
13416: LIST
13417: LIST
13418: LIST
13419: LIST
13420: LIST
13421: LIST
13422: LIST
13423: LIST
13424: LIST
13425: LIST
13426: LIST
13427: LIST
13428: LIST
13429: LIST
13430: LIST
13431: LIST
13432: LIST
13433: LIST
13434: LIST
13435: LIST
13436: ST_TO_ADDR
// DepotRu5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] ] ;
13437: LD_ADDR_VAR 0 28
13441: PUSH
13442: LD_INT 0
13444: PUSH
13445: LD_INT 0
13447: PUSH
13448: EMPTY
13449: LIST
13450: LIST
13451: PUSH
13452: LD_INT 0
13454: PUSH
13455: LD_INT 1
13457: NEG
13458: PUSH
13459: EMPTY
13460: LIST
13461: LIST
13462: PUSH
13463: LD_INT 1
13465: PUSH
13466: LD_INT 0
13468: PUSH
13469: EMPTY
13470: LIST
13471: LIST
13472: PUSH
13473: LD_INT 1
13475: PUSH
13476: LD_INT 1
13478: PUSH
13479: EMPTY
13480: LIST
13481: LIST
13482: PUSH
13483: LD_INT 0
13485: PUSH
13486: LD_INT 1
13488: PUSH
13489: EMPTY
13490: LIST
13491: LIST
13492: PUSH
13493: LD_INT 1
13495: NEG
13496: PUSH
13497: LD_INT 0
13499: PUSH
13500: EMPTY
13501: LIST
13502: LIST
13503: PUSH
13504: LD_INT 1
13506: NEG
13507: PUSH
13508: LD_INT 1
13510: NEG
13511: PUSH
13512: EMPTY
13513: LIST
13514: LIST
13515: PUSH
13516: LD_INT 1
13518: NEG
13519: PUSH
13520: LD_INT 2
13522: NEG
13523: PUSH
13524: EMPTY
13525: LIST
13526: LIST
13527: PUSH
13528: LD_INT 0
13530: PUSH
13531: LD_INT 2
13533: NEG
13534: PUSH
13535: EMPTY
13536: LIST
13537: LIST
13538: PUSH
13539: LD_INT 1
13541: PUSH
13542: LD_INT 1
13544: NEG
13545: PUSH
13546: EMPTY
13547: LIST
13548: LIST
13549: PUSH
13550: LD_INT 2
13552: PUSH
13553: LD_INT 0
13555: PUSH
13556: EMPTY
13557: LIST
13558: LIST
13559: PUSH
13560: LD_INT 2
13562: PUSH
13563: LD_INT 1
13565: PUSH
13566: EMPTY
13567: LIST
13568: LIST
13569: PUSH
13570: LD_INT 2
13572: PUSH
13573: LD_INT 2
13575: PUSH
13576: EMPTY
13577: LIST
13578: LIST
13579: PUSH
13580: LD_INT 1
13582: PUSH
13583: LD_INT 2
13585: PUSH
13586: EMPTY
13587: LIST
13588: LIST
13589: PUSH
13590: LD_INT 0
13592: PUSH
13593: LD_INT 2
13595: PUSH
13596: EMPTY
13597: LIST
13598: LIST
13599: PUSH
13600: LD_INT 1
13602: NEG
13603: PUSH
13604: LD_INT 1
13606: PUSH
13607: EMPTY
13608: LIST
13609: LIST
13610: PUSH
13611: LD_INT 2
13613: NEG
13614: PUSH
13615: LD_INT 0
13617: PUSH
13618: EMPTY
13619: LIST
13620: LIST
13621: PUSH
13622: LD_INT 2
13624: NEG
13625: PUSH
13626: LD_INT 1
13628: NEG
13629: PUSH
13630: EMPTY
13631: LIST
13632: LIST
13633: PUSH
13634: LD_INT 2
13636: NEG
13637: PUSH
13638: LD_INT 2
13640: NEG
13641: PUSH
13642: EMPTY
13643: LIST
13644: LIST
13645: PUSH
13646: LD_INT 2
13648: NEG
13649: PUSH
13650: LD_INT 3
13652: NEG
13653: PUSH
13654: EMPTY
13655: LIST
13656: LIST
13657: PUSH
13658: LD_INT 1
13660: NEG
13661: PUSH
13662: LD_INT 3
13664: NEG
13665: PUSH
13666: EMPTY
13667: LIST
13668: LIST
13669: PUSH
13670: LD_INT 3
13672: NEG
13673: PUSH
13674: LD_INT 1
13676: NEG
13677: PUSH
13678: EMPTY
13679: LIST
13680: LIST
13681: PUSH
13682: LD_INT 3
13684: NEG
13685: PUSH
13686: LD_INT 2
13688: NEG
13689: PUSH
13690: EMPTY
13691: LIST
13692: LIST
13693: PUSH
13694: EMPTY
13695: LIST
13696: LIST
13697: LIST
13698: LIST
13699: LIST
13700: LIST
13701: LIST
13702: LIST
13703: LIST
13704: LIST
13705: LIST
13706: LIST
13707: LIST
13708: LIST
13709: LIST
13710: LIST
13711: LIST
13712: LIST
13713: LIST
13714: LIST
13715: LIST
13716: LIST
13717: LIST
13718: ST_TO_ADDR
// Factory0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] ] ;
13719: LD_ADDR_VAR 0 29
13723: PUSH
13724: LD_INT 0
13726: PUSH
13727: LD_INT 0
13729: PUSH
13730: EMPTY
13731: LIST
13732: LIST
13733: PUSH
13734: LD_INT 0
13736: PUSH
13737: LD_INT 1
13739: NEG
13740: PUSH
13741: EMPTY
13742: LIST
13743: LIST
13744: PUSH
13745: LD_INT 1
13747: PUSH
13748: LD_INT 0
13750: PUSH
13751: EMPTY
13752: LIST
13753: LIST
13754: PUSH
13755: LD_INT 1
13757: PUSH
13758: LD_INT 1
13760: PUSH
13761: EMPTY
13762: LIST
13763: LIST
13764: PUSH
13765: LD_INT 0
13767: PUSH
13768: LD_INT 1
13770: PUSH
13771: EMPTY
13772: LIST
13773: LIST
13774: PUSH
13775: LD_INT 1
13777: NEG
13778: PUSH
13779: LD_INT 0
13781: PUSH
13782: EMPTY
13783: LIST
13784: LIST
13785: PUSH
13786: LD_INT 1
13788: NEG
13789: PUSH
13790: LD_INT 1
13792: NEG
13793: PUSH
13794: EMPTY
13795: LIST
13796: LIST
13797: PUSH
13798: LD_INT 1
13800: NEG
13801: PUSH
13802: LD_INT 2
13804: NEG
13805: PUSH
13806: EMPTY
13807: LIST
13808: LIST
13809: PUSH
13810: LD_INT 0
13812: PUSH
13813: LD_INT 2
13815: NEG
13816: PUSH
13817: EMPTY
13818: LIST
13819: LIST
13820: PUSH
13821: LD_INT 1
13823: PUSH
13824: LD_INT 1
13826: NEG
13827: PUSH
13828: EMPTY
13829: LIST
13830: LIST
13831: PUSH
13832: LD_INT 2
13834: PUSH
13835: LD_INT 0
13837: PUSH
13838: EMPTY
13839: LIST
13840: LIST
13841: PUSH
13842: LD_INT 2
13844: PUSH
13845: LD_INT 1
13847: PUSH
13848: EMPTY
13849: LIST
13850: LIST
13851: PUSH
13852: LD_INT 1
13854: PUSH
13855: LD_INT 2
13857: PUSH
13858: EMPTY
13859: LIST
13860: LIST
13861: PUSH
13862: LD_INT 0
13864: PUSH
13865: LD_INT 2
13867: PUSH
13868: EMPTY
13869: LIST
13870: LIST
13871: PUSH
13872: LD_INT 1
13874: NEG
13875: PUSH
13876: LD_INT 1
13878: PUSH
13879: EMPTY
13880: LIST
13881: LIST
13882: PUSH
13883: LD_INT 2
13885: NEG
13886: PUSH
13887: LD_INT 1
13889: NEG
13890: PUSH
13891: EMPTY
13892: LIST
13893: LIST
13894: PUSH
13895: LD_INT 2
13897: NEG
13898: PUSH
13899: LD_INT 2
13901: NEG
13902: PUSH
13903: EMPTY
13904: LIST
13905: LIST
13906: PUSH
13907: LD_INT 2
13909: NEG
13910: PUSH
13911: LD_INT 3
13913: NEG
13914: PUSH
13915: EMPTY
13916: LIST
13917: LIST
13918: PUSH
13919: LD_INT 2
13921: PUSH
13922: LD_INT 1
13924: NEG
13925: PUSH
13926: EMPTY
13927: LIST
13928: LIST
13929: PUSH
13930: LD_INT 3
13932: PUSH
13933: LD_INT 1
13935: PUSH
13936: EMPTY
13937: LIST
13938: LIST
13939: PUSH
13940: LD_INT 1
13942: PUSH
13943: LD_INT 3
13945: PUSH
13946: EMPTY
13947: LIST
13948: LIST
13949: PUSH
13950: LD_INT 1
13952: NEG
13953: PUSH
13954: LD_INT 2
13956: PUSH
13957: EMPTY
13958: LIST
13959: LIST
13960: PUSH
13961: LD_INT 3
13963: NEG
13964: PUSH
13965: LD_INT 2
13967: NEG
13968: PUSH
13969: EMPTY
13970: LIST
13971: LIST
13972: PUSH
13973: EMPTY
13974: LIST
13975: LIST
13976: LIST
13977: LIST
13978: LIST
13979: LIST
13980: LIST
13981: LIST
13982: LIST
13983: LIST
13984: LIST
13985: LIST
13986: LIST
13987: LIST
13988: LIST
13989: LIST
13990: LIST
13991: LIST
13992: LIST
13993: LIST
13994: LIST
13995: LIST
13996: LIST
13997: ST_TO_ADDR
// Factory1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
13998: LD_ADDR_VAR 0 30
14002: PUSH
14003: LD_INT 0
14005: PUSH
14006: LD_INT 0
14008: PUSH
14009: EMPTY
14010: LIST
14011: LIST
14012: PUSH
14013: LD_INT 0
14015: PUSH
14016: LD_INT 1
14018: NEG
14019: PUSH
14020: EMPTY
14021: LIST
14022: LIST
14023: PUSH
14024: LD_INT 1
14026: PUSH
14027: LD_INT 0
14029: PUSH
14030: EMPTY
14031: LIST
14032: LIST
14033: PUSH
14034: LD_INT 1
14036: PUSH
14037: LD_INT 1
14039: PUSH
14040: EMPTY
14041: LIST
14042: LIST
14043: PUSH
14044: LD_INT 0
14046: PUSH
14047: LD_INT 1
14049: PUSH
14050: EMPTY
14051: LIST
14052: LIST
14053: PUSH
14054: LD_INT 1
14056: NEG
14057: PUSH
14058: LD_INT 0
14060: PUSH
14061: EMPTY
14062: LIST
14063: LIST
14064: PUSH
14065: LD_INT 1
14067: NEG
14068: PUSH
14069: LD_INT 1
14071: NEG
14072: PUSH
14073: EMPTY
14074: LIST
14075: LIST
14076: PUSH
14077: LD_INT 1
14079: NEG
14080: PUSH
14081: LD_INT 2
14083: NEG
14084: PUSH
14085: EMPTY
14086: LIST
14087: LIST
14088: PUSH
14089: LD_INT 0
14091: PUSH
14092: LD_INT 2
14094: NEG
14095: PUSH
14096: EMPTY
14097: LIST
14098: LIST
14099: PUSH
14100: LD_INT 1
14102: PUSH
14103: LD_INT 1
14105: NEG
14106: PUSH
14107: EMPTY
14108: LIST
14109: LIST
14110: PUSH
14111: LD_INT 2
14113: PUSH
14114: LD_INT 0
14116: PUSH
14117: EMPTY
14118: LIST
14119: LIST
14120: PUSH
14121: LD_INT 2
14123: PUSH
14124: LD_INT 1
14126: PUSH
14127: EMPTY
14128: LIST
14129: LIST
14130: PUSH
14131: LD_INT 2
14133: PUSH
14134: LD_INT 2
14136: PUSH
14137: EMPTY
14138: LIST
14139: LIST
14140: PUSH
14141: LD_INT 1
14143: PUSH
14144: LD_INT 2
14146: PUSH
14147: EMPTY
14148: LIST
14149: LIST
14150: PUSH
14151: LD_INT 1
14153: NEG
14154: PUSH
14155: LD_INT 1
14157: PUSH
14158: EMPTY
14159: LIST
14160: LIST
14161: PUSH
14162: LD_INT 2
14164: NEG
14165: PUSH
14166: LD_INT 0
14168: PUSH
14169: EMPTY
14170: LIST
14171: LIST
14172: PUSH
14173: LD_INT 2
14175: NEG
14176: PUSH
14177: LD_INT 1
14179: NEG
14180: PUSH
14181: EMPTY
14182: LIST
14183: LIST
14184: PUSH
14185: LD_INT 1
14187: NEG
14188: PUSH
14189: LD_INT 3
14191: NEG
14192: PUSH
14193: EMPTY
14194: LIST
14195: LIST
14196: PUSH
14197: LD_INT 1
14199: PUSH
14200: LD_INT 2
14202: NEG
14203: PUSH
14204: EMPTY
14205: LIST
14206: LIST
14207: PUSH
14208: LD_INT 3
14210: PUSH
14211: LD_INT 2
14213: PUSH
14214: EMPTY
14215: LIST
14216: LIST
14217: PUSH
14218: LD_INT 2
14220: PUSH
14221: LD_INT 3
14223: PUSH
14224: EMPTY
14225: LIST
14226: LIST
14227: PUSH
14228: LD_INT 2
14230: NEG
14231: PUSH
14232: LD_INT 1
14234: PUSH
14235: EMPTY
14236: LIST
14237: LIST
14238: PUSH
14239: LD_INT 3
14241: NEG
14242: PUSH
14243: LD_INT 1
14245: NEG
14246: PUSH
14247: EMPTY
14248: LIST
14249: LIST
14250: PUSH
14251: EMPTY
14252: LIST
14253: LIST
14254: LIST
14255: LIST
14256: LIST
14257: LIST
14258: LIST
14259: LIST
14260: LIST
14261: LIST
14262: LIST
14263: LIST
14264: LIST
14265: LIST
14266: LIST
14267: LIST
14268: LIST
14269: LIST
14270: LIST
14271: LIST
14272: LIST
14273: LIST
14274: LIST
14275: ST_TO_ADDR
// Factory2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] ] ;
14276: LD_ADDR_VAR 0 31
14280: PUSH
14281: LD_INT 0
14283: PUSH
14284: LD_INT 0
14286: PUSH
14287: EMPTY
14288: LIST
14289: LIST
14290: PUSH
14291: LD_INT 0
14293: PUSH
14294: LD_INT 1
14296: NEG
14297: PUSH
14298: EMPTY
14299: LIST
14300: LIST
14301: PUSH
14302: LD_INT 1
14304: PUSH
14305: LD_INT 0
14307: PUSH
14308: EMPTY
14309: LIST
14310: LIST
14311: PUSH
14312: LD_INT 1
14314: PUSH
14315: LD_INT 1
14317: PUSH
14318: EMPTY
14319: LIST
14320: LIST
14321: PUSH
14322: LD_INT 0
14324: PUSH
14325: LD_INT 1
14327: PUSH
14328: EMPTY
14329: LIST
14330: LIST
14331: PUSH
14332: LD_INT 1
14334: NEG
14335: PUSH
14336: LD_INT 0
14338: PUSH
14339: EMPTY
14340: LIST
14341: LIST
14342: PUSH
14343: LD_INT 1
14345: NEG
14346: PUSH
14347: LD_INT 1
14349: NEG
14350: PUSH
14351: EMPTY
14352: LIST
14353: LIST
14354: PUSH
14355: LD_INT 1
14357: NEG
14358: PUSH
14359: LD_INT 2
14361: NEG
14362: PUSH
14363: EMPTY
14364: LIST
14365: LIST
14366: PUSH
14367: LD_INT 1
14369: PUSH
14370: LD_INT 1
14372: NEG
14373: PUSH
14374: EMPTY
14375: LIST
14376: LIST
14377: PUSH
14378: LD_INT 2
14380: PUSH
14381: LD_INT 0
14383: PUSH
14384: EMPTY
14385: LIST
14386: LIST
14387: PUSH
14388: LD_INT 2
14390: PUSH
14391: LD_INT 1
14393: PUSH
14394: EMPTY
14395: LIST
14396: LIST
14397: PUSH
14398: LD_INT 2
14400: PUSH
14401: LD_INT 2
14403: PUSH
14404: EMPTY
14405: LIST
14406: LIST
14407: PUSH
14408: LD_INT 1
14410: PUSH
14411: LD_INT 2
14413: PUSH
14414: EMPTY
14415: LIST
14416: LIST
14417: PUSH
14418: LD_INT 0
14420: PUSH
14421: LD_INT 2
14423: PUSH
14424: EMPTY
14425: LIST
14426: LIST
14427: PUSH
14428: LD_INT 1
14430: NEG
14431: PUSH
14432: LD_INT 1
14434: PUSH
14435: EMPTY
14436: LIST
14437: LIST
14438: PUSH
14439: LD_INT 2
14441: NEG
14442: PUSH
14443: LD_INT 1
14445: NEG
14446: PUSH
14447: EMPTY
14448: LIST
14449: LIST
14450: PUSH
14451: LD_INT 2
14453: NEG
14454: PUSH
14455: LD_INT 2
14457: NEG
14458: PUSH
14459: EMPTY
14460: LIST
14461: LIST
14462: PUSH
14463: LD_INT 2
14465: NEG
14466: PUSH
14467: LD_INT 3
14469: NEG
14470: PUSH
14471: EMPTY
14472: LIST
14473: LIST
14474: PUSH
14475: LD_INT 2
14477: PUSH
14478: LD_INT 1
14480: NEG
14481: PUSH
14482: EMPTY
14483: LIST
14484: LIST
14485: PUSH
14486: LD_INT 3
14488: PUSH
14489: LD_INT 1
14491: PUSH
14492: EMPTY
14493: LIST
14494: LIST
14495: PUSH
14496: LD_INT 1
14498: PUSH
14499: LD_INT 3
14501: PUSH
14502: EMPTY
14503: LIST
14504: LIST
14505: PUSH
14506: LD_INT 1
14508: NEG
14509: PUSH
14510: LD_INT 2
14512: PUSH
14513: EMPTY
14514: LIST
14515: LIST
14516: PUSH
14517: LD_INT 3
14519: NEG
14520: PUSH
14521: LD_INT 2
14523: NEG
14524: PUSH
14525: EMPTY
14526: LIST
14527: LIST
14528: PUSH
14529: EMPTY
14530: LIST
14531: LIST
14532: LIST
14533: LIST
14534: LIST
14535: LIST
14536: LIST
14537: LIST
14538: LIST
14539: LIST
14540: LIST
14541: LIST
14542: LIST
14543: LIST
14544: LIST
14545: LIST
14546: LIST
14547: LIST
14548: LIST
14549: LIST
14550: LIST
14551: LIST
14552: LIST
14553: ST_TO_ADDR
// Factory3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
14554: LD_ADDR_VAR 0 32
14558: PUSH
14559: LD_INT 0
14561: PUSH
14562: LD_INT 0
14564: PUSH
14565: EMPTY
14566: LIST
14567: LIST
14568: PUSH
14569: LD_INT 0
14571: PUSH
14572: LD_INT 1
14574: NEG
14575: PUSH
14576: EMPTY
14577: LIST
14578: LIST
14579: PUSH
14580: LD_INT 1
14582: PUSH
14583: LD_INT 0
14585: PUSH
14586: EMPTY
14587: LIST
14588: LIST
14589: PUSH
14590: LD_INT 1
14592: PUSH
14593: LD_INT 1
14595: PUSH
14596: EMPTY
14597: LIST
14598: LIST
14599: PUSH
14600: LD_INT 0
14602: PUSH
14603: LD_INT 1
14605: PUSH
14606: EMPTY
14607: LIST
14608: LIST
14609: PUSH
14610: LD_INT 1
14612: NEG
14613: PUSH
14614: LD_INT 0
14616: PUSH
14617: EMPTY
14618: LIST
14619: LIST
14620: PUSH
14621: LD_INT 1
14623: NEG
14624: PUSH
14625: LD_INT 1
14627: NEG
14628: PUSH
14629: EMPTY
14630: LIST
14631: LIST
14632: PUSH
14633: LD_INT 1
14635: NEG
14636: PUSH
14637: LD_INT 2
14639: NEG
14640: PUSH
14641: EMPTY
14642: LIST
14643: LIST
14644: PUSH
14645: LD_INT 0
14647: PUSH
14648: LD_INT 2
14650: NEG
14651: PUSH
14652: EMPTY
14653: LIST
14654: LIST
14655: PUSH
14656: LD_INT 1
14658: PUSH
14659: LD_INT 1
14661: NEG
14662: PUSH
14663: EMPTY
14664: LIST
14665: LIST
14666: PUSH
14667: LD_INT 2
14669: PUSH
14670: LD_INT 1
14672: PUSH
14673: EMPTY
14674: LIST
14675: LIST
14676: PUSH
14677: LD_INT 2
14679: PUSH
14680: LD_INT 2
14682: PUSH
14683: EMPTY
14684: LIST
14685: LIST
14686: PUSH
14687: LD_INT 1
14689: PUSH
14690: LD_INT 2
14692: PUSH
14693: EMPTY
14694: LIST
14695: LIST
14696: PUSH
14697: LD_INT 0
14699: PUSH
14700: LD_INT 2
14702: PUSH
14703: EMPTY
14704: LIST
14705: LIST
14706: PUSH
14707: LD_INT 1
14709: NEG
14710: PUSH
14711: LD_INT 1
14713: PUSH
14714: EMPTY
14715: LIST
14716: LIST
14717: PUSH
14718: LD_INT 2
14720: NEG
14721: PUSH
14722: LD_INT 0
14724: PUSH
14725: EMPTY
14726: LIST
14727: LIST
14728: PUSH
14729: LD_INT 2
14731: NEG
14732: PUSH
14733: LD_INT 1
14735: NEG
14736: PUSH
14737: EMPTY
14738: LIST
14739: LIST
14740: PUSH
14741: LD_INT 1
14743: NEG
14744: PUSH
14745: LD_INT 3
14747: NEG
14748: PUSH
14749: EMPTY
14750: LIST
14751: LIST
14752: PUSH
14753: LD_INT 1
14755: PUSH
14756: LD_INT 2
14758: NEG
14759: PUSH
14760: EMPTY
14761: LIST
14762: LIST
14763: PUSH
14764: LD_INT 3
14766: PUSH
14767: LD_INT 2
14769: PUSH
14770: EMPTY
14771: LIST
14772: LIST
14773: PUSH
14774: LD_INT 2
14776: PUSH
14777: LD_INT 3
14779: PUSH
14780: EMPTY
14781: LIST
14782: LIST
14783: PUSH
14784: LD_INT 2
14786: NEG
14787: PUSH
14788: LD_INT 1
14790: PUSH
14791: EMPTY
14792: LIST
14793: LIST
14794: PUSH
14795: LD_INT 3
14797: NEG
14798: PUSH
14799: LD_INT 1
14801: NEG
14802: PUSH
14803: EMPTY
14804: LIST
14805: LIST
14806: PUSH
14807: EMPTY
14808: LIST
14809: LIST
14810: LIST
14811: LIST
14812: LIST
14813: LIST
14814: LIST
14815: LIST
14816: LIST
14817: LIST
14818: LIST
14819: LIST
14820: LIST
14821: LIST
14822: LIST
14823: LIST
14824: LIST
14825: LIST
14826: LIST
14827: LIST
14828: LIST
14829: LIST
14830: LIST
14831: ST_TO_ADDR
// Factory4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] ] ;
14832: LD_ADDR_VAR 0 33
14836: PUSH
14837: LD_INT 0
14839: PUSH
14840: LD_INT 0
14842: PUSH
14843: EMPTY
14844: LIST
14845: LIST
14846: PUSH
14847: LD_INT 0
14849: PUSH
14850: LD_INT 1
14852: NEG
14853: PUSH
14854: EMPTY
14855: LIST
14856: LIST
14857: PUSH
14858: LD_INT 1
14860: PUSH
14861: LD_INT 0
14863: PUSH
14864: EMPTY
14865: LIST
14866: LIST
14867: PUSH
14868: LD_INT 1
14870: PUSH
14871: LD_INT 1
14873: PUSH
14874: EMPTY
14875: LIST
14876: LIST
14877: PUSH
14878: LD_INT 0
14880: PUSH
14881: LD_INT 1
14883: PUSH
14884: EMPTY
14885: LIST
14886: LIST
14887: PUSH
14888: LD_INT 1
14890: NEG
14891: PUSH
14892: LD_INT 0
14894: PUSH
14895: EMPTY
14896: LIST
14897: LIST
14898: PUSH
14899: LD_INT 1
14901: NEG
14902: PUSH
14903: LD_INT 1
14905: NEG
14906: PUSH
14907: EMPTY
14908: LIST
14909: LIST
14910: PUSH
14911: LD_INT 1
14913: NEG
14914: PUSH
14915: LD_INT 2
14917: NEG
14918: PUSH
14919: EMPTY
14920: LIST
14921: LIST
14922: PUSH
14923: LD_INT 1
14925: PUSH
14926: LD_INT 1
14928: NEG
14929: PUSH
14930: EMPTY
14931: LIST
14932: LIST
14933: PUSH
14934: LD_INT 2
14936: PUSH
14937: LD_INT 0
14939: PUSH
14940: EMPTY
14941: LIST
14942: LIST
14943: PUSH
14944: LD_INT 2
14946: PUSH
14947: LD_INT 1
14949: PUSH
14950: EMPTY
14951: LIST
14952: LIST
14953: PUSH
14954: LD_INT 1
14956: PUSH
14957: LD_INT 2
14959: PUSH
14960: EMPTY
14961: LIST
14962: LIST
14963: PUSH
14964: LD_INT 0
14966: PUSH
14967: LD_INT 2
14969: PUSH
14970: EMPTY
14971: LIST
14972: LIST
14973: PUSH
14974: LD_INT 1
14976: NEG
14977: PUSH
14978: LD_INT 1
14980: PUSH
14981: EMPTY
14982: LIST
14983: LIST
14984: PUSH
14985: LD_INT 2
14987: NEG
14988: PUSH
14989: LD_INT 0
14991: PUSH
14992: EMPTY
14993: LIST
14994: LIST
14995: PUSH
14996: LD_INT 2
14998: NEG
14999: PUSH
15000: LD_INT 1
15002: NEG
15003: PUSH
15004: EMPTY
15005: LIST
15006: LIST
15007: PUSH
15008: LD_INT 2
15010: NEG
15011: PUSH
15012: LD_INT 2
15014: NEG
15015: PUSH
15016: EMPTY
15017: LIST
15018: LIST
15019: PUSH
15020: LD_INT 2
15022: NEG
15023: PUSH
15024: LD_INT 3
15026: NEG
15027: PUSH
15028: EMPTY
15029: LIST
15030: LIST
15031: PUSH
15032: LD_INT 2
15034: PUSH
15035: LD_INT 1
15037: NEG
15038: PUSH
15039: EMPTY
15040: LIST
15041: LIST
15042: PUSH
15043: LD_INT 3
15045: PUSH
15046: LD_INT 1
15048: PUSH
15049: EMPTY
15050: LIST
15051: LIST
15052: PUSH
15053: LD_INT 1
15055: PUSH
15056: LD_INT 3
15058: PUSH
15059: EMPTY
15060: LIST
15061: LIST
15062: PUSH
15063: LD_INT 1
15065: NEG
15066: PUSH
15067: LD_INT 2
15069: PUSH
15070: EMPTY
15071: LIST
15072: LIST
15073: PUSH
15074: LD_INT 3
15076: NEG
15077: PUSH
15078: LD_INT 2
15080: NEG
15081: PUSH
15082: EMPTY
15083: LIST
15084: LIST
15085: PUSH
15086: EMPTY
15087: LIST
15088: LIST
15089: LIST
15090: LIST
15091: LIST
15092: LIST
15093: LIST
15094: LIST
15095: LIST
15096: LIST
15097: LIST
15098: LIST
15099: LIST
15100: LIST
15101: LIST
15102: LIST
15103: LIST
15104: LIST
15105: LIST
15106: LIST
15107: LIST
15108: LIST
15109: LIST
15110: ST_TO_ADDR
// Factory5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
15111: LD_ADDR_VAR 0 34
15115: PUSH
15116: LD_INT 0
15118: PUSH
15119: LD_INT 0
15121: PUSH
15122: EMPTY
15123: LIST
15124: LIST
15125: PUSH
15126: LD_INT 0
15128: PUSH
15129: LD_INT 1
15131: NEG
15132: PUSH
15133: EMPTY
15134: LIST
15135: LIST
15136: PUSH
15137: LD_INT 1
15139: PUSH
15140: LD_INT 0
15142: PUSH
15143: EMPTY
15144: LIST
15145: LIST
15146: PUSH
15147: LD_INT 1
15149: PUSH
15150: LD_INT 1
15152: PUSH
15153: EMPTY
15154: LIST
15155: LIST
15156: PUSH
15157: LD_INT 0
15159: PUSH
15160: LD_INT 1
15162: PUSH
15163: EMPTY
15164: LIST
15165: LIST
15166: PUSH
15167: LD_INT 1
15169: NEG
15170: PUSH
15171: LD_INT 0
15173: PUSH
15174: EMPTY
15175: LIST
15176: LIST
15177: PUSH
15178: LD_INT 1
15180: NEG
15181: PUSH
15182: LD_INT 1
15184: NEG
15185: PUSH
15186: EMPTY
15187: LIST
15188: LIST
15189: PUSH
15190: LD_INT 1
15192: NEG
15193: PUSH
15194: LD_INT 2
15196: NEG
15197: PUSH
15198: EMPTY
15199: LIST
15200: LIST
15201: PUSH
15202: LD_INT 0
15204: PUSH
15205: LD_INT 2
15207: NEG
15208: PUSH
15209: EMPTY
15210: LIST
15211: LIST
15212: PUSH
15213: LD_INT 1
15215: PUSH
15216: LD_INT 1
15218: NEG
15219: PUSH
15220: EMPTY
15221: LIST
15222: LIST
15223: PUSH
15224: LD_INT 2
15226: PUSH
15227: LD_INT 1
15229: PUSH
15230: EMPTY
15231: LIST
15232: LIST
15233: PUSH
15234: LD_INT 2
15236: PUSH
15237: LD_INT 2
15239: PUSH
15240: EMPTY
15241: LIST
15242: LIST
15243: PUSH
15244: LD_INT 1
15246: PUSH
15247: LD_INT 2
15249: PUSH
15250: EMPTY
15251: LIST
15252: LIST
15253: PUSH
15254: LD_INT 1
15256: NEG
15257: PUSH
15258: LD_INT 1
15260: PUSH
15261: EMPTY
15262: LIST
15263: LIST
15264: PUSH
15265: LD_INT 2
15267: NEG
15268: PUSH
15269: LD_INT 0
15271: PUSH
15272: EMPTY
15273: LIST
15274: LIST
15275: PUSH
15276: LD_INT 2
15278: NEG
15279: PUSH
15280: LD_INT 1
15282: NEG
15283: PUSH
15284: EMPTY
15285: LIST
15286: LIST
15287: PUSH
15288: LD_INT 2
15290: NEG
15291: PUSH
15292: LD_INT 2
15294: NEG
15295: PUSH
15296: EMPTY
15297: LIST
15298: LIST
15299: PUSH
15300: LD_INT 1
15302: NEG
15303: PUSH
15304: LD_INT 3
15306: NEG
15307: PUSH
15308: EMPTY
15309: LIST
15310: LIST
15311: PUSH
15312: LD_INT 1
15314: PUSH
15315: LD_INT 2
15317: NEG
15318: PUSH
15319: EMPTY
15320: LIST
15321: LIST
15322: PUSH
15323: LD_INT 3
15325: PUSH
15326: LD_INT 2
15328: PUSH
15329: EMPTY
15330: LIST
15331: LIST
15332: PUSH
15333: LD_INT 2
15335: PUSH
15336: LD_INT 3
15338: PUSH
15339: EMPTY
15340: LIST
15341: LIST
15342: PUSH
15343: LD_INT 2
15345: NEG
15346: PUSH
15347: LD_INT 1
15349: PUSH
15350: EMPTY
15351: LIST
15352: LIST
15353: PUSH
15354: LD_INT 3
15356: NEG
15357: PUSH
15358: LD_INT 1
15360: NEG
15361: PUSH
15362: EMPTY
15363: LIST
15364: LIST
15365: PUSH
15366: EMPTY
15367: LIST
15368: LIST
15369: LIST
15370: LIST
15371: LIST
15372: LIST
15373: LIST
15374: LIST
15375: LIST
15376: LIST
15377: LIST
15378: LIST
15379: LIST
15380: LIST
15381: LIST
15382: LIST
15383: LIST
15384: LIST
15385: LIST
15386: LIST
15387: LIST
15388: LIST
15389: LIST
15390: ST_TO_ADDR
// Ext0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 2 , 1 ] , [ - 2 , - 1 ] ] ;
15391: LD_ADDR_VAR 0 35
15395: PUSH
15396: LD_INT 0
15398: PUSH
15399: LD_INT 0
15401: PUSH
15402: EMPTY
15403: LIST
15404: LIST
15405: PUSH
15406: LD_INT 0
15408: PUSH
15409: LD_INT 1
15411: NEG
15412: PUSH
15413: EMPTY
15414: LIST
15415: LIST
15416: PUSH
15417: LD_INT 1
15419: PUSH
15420: LD_INT 0
15422: PUSH
15423: EMPTY
15424: LIST
15425: LIST
15426: PUSH
15427: LD_INT 1
15429: PUSH
15430: LD_INT 1
15432: PUSH
15433: EMPTY
15434: LIST
15435: LIST
15436: PUSH
15437: LD_INT 0
15439: PUSH
15440: LD_INT 1
15442: PUSH
15443: EMPTY
15444: LIST
15445: LIST
15446: PUSH
15447: LD_INT 1
15449: NEG
15450: PUSH
15451: LD_INT 0
15453: PUSH
15454: EMPTY
15455: LIST
15456: LIST
15457: PUSH
15458: LD_INT 1
15460: NEG
15461: PUSH
15462: LD_INT 1
15464: NEG
15465: PUSH
15466: EMPTY
15467: LIST
15468: LIST
15469: PUSH
15470: LD_INT 2
15472: PUSH
15473: LD_INT 1
15475: PUSH
15476: EMPTY
15477: LIST
15478: LIST
15479: PUSH
15480: LD_INT 2
15482: NEG
15483: PUSH
15484: LD_INT 1
15486: NEG
15487: PUSH
15488: EMPTY
15489: LIST
15490: LIST
15491: PUSH
15492: EMPTY
15493: LIST
15494: LIST
15495: LIST
15496: LIST
15497: LIST
15498: LIST
15499: LIST
15500: LIST
15501: LIST
15502: ST_TO_ADDR
// Ext1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , 2 ] ] ;
15503: LD_ADDR_VAR 0 36
15507: PUSH
15508: LD_INT 0
15510: PUSH
15511: LD_INT 0
15513: PUSH
15514: EMPTY
15515: LIST
15516: LIST
15517: PUSH
15518: LD_INT 0
15520: PUSH
15521: LD_INT 1
15523: NEG
15524: PUSH
15525: EMPTY
15526: LIST
15527: LIST
15528: PUSH
15529: LD_INT 1
15531: PUSH
15532: LD_INT 0
15534: PUSH
15535: EMPTY
15536: LIST
15537: LIST
15538: PUSH
15539: LD_INT 1
15541: PUSH
15542: LD_INT 1
15544: PUSH
15545: EMPTY
15546: LIST
15547: LIST
15548: PUSH
15549: LD_INT 0
15551: PUSH
15552: LD_INT 1
15554: PUSH
15555: EMPTY
15556: LIST
15557: LIST
15558: PUSH
15559: LD_INT 1
15561: NEG
15562: PUSH
15563: LD_INT 0
15565: PUSH
15566: EMPTY
15567: LIST
15568: LIST
15569: PUSH
15570: LD_INT 1
15572: NEG
15573: PUSH
15574: LD_INT 1
15576: NEG
15577: PUSH
15578: EMPTY
15579: LIST
15580: LIST
15581: PUSH
15582: LD_INT 1
15584: NEG
15585: PUSH
15586: LD_INT 2
15588: NEG
15589: PUSH
15590: EMPTY
15591: LIST
15592: LIST
15593: PUSH
15594: LD_INT 1
15596: PUSH
15597: LD_INT 2
15599: PUSH
15600: EMPTY
15601: LIST
15602: LIST
15603: PUSH
15604: EMPTY
15605: LIST
15606: LIST
15607: LIST
15608: LIST
15609: LIST
15610: LIST
15611: LIST
15612: LIST
15613: LIST
15614: ST_TO_ADDR
// Ext2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ - 1 , 1 ] ] ;
15615: LD_ADDR_VAR 0 37
15619: PUSH
15620: LD_INT 0
15622: PUSH
15623: LD_INT 0
15625: PUSH
15626: EMPTY
15627: LIST
15628: LIST
15629: PUSH
15630: LD_INT 0
15632: PUSH
15633: LD_INT 1
15635: NEG
15636: PUSH
15637: EMPTY
15638: LIST
15639: LIST
15640: PUSH
15641: LD_INT 1
15643: PUSH
15644: LD_INT 0
15646: PUSH
15647: EMPTY
15648: LIST
15649: LIST
15650: PUSH
15651: LD_INT 1
15653: PUSH
15654: LD_INT 1
15656: PUSH
15657: EMPTY
15658: LIST
15659: LIST
15660: PUSH
15661: LD_INT 0
15663: PUSH
15664: LD_INT 1
15666: PUSH
15667: EMPTY
15668: LIST
15669: LIST
15670: PUSH
15671: LD_INT 1
15673: NEG
15674: PUSH
15675: LD_INT 0
15677: PUSH
15678: EMPTY
15679: LIST
15680: LIST
15681: PUSH
15682: LD_INT 1
15684: NEG
15685: PUSH
15686: LD_INT 1
15688: NEG
15689: PUSH
15690: EMPTY
15691: LIST
15692: LIST
15693: PUSH
15694: LD_INT 1
15696: PUSH
15697: LD_INT 1
15699: NEG
15700: PUSH
15701: EMPTY
15702: LIST
15703: LIST
15704: PUSH
15705: LD_INT 1
15707: NEG
15708: PUSH
15709: LD_INT 1
15711: PUSH
15712: EMPTY
15713: LIST
15714: LIST
15715: PUSH
15716: EMPTY
15717: LIST
15718: LIST
15719: LIST
15720: LIST
15721: LIST
15722: LIST
15723: LIST
15724: LIST
15725: LIST
15726: ST_TO_ADDR
// Ext3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 2 , 1 ] , [ - 2 , - 1 ] ] ;
15727: LD_ADDR_VAR 0 38
15731: PUSH
15732: LD_INT 0
15734: PUSH
15735: LD_INT 0
15737: PUSH
15738: EMPTY
15739: LIST
15740: LIST
15741: PUSH
15742: LD_INT 0
15744: PUSH
15745: LD_INT 1
15747: NEG
15748: PUSH
15749: EMPTY
15750: LIST
15751: LIST
15752: PUSH
15753: LD_INT 1
15755: PUSH
15756: LD_INT 0
15758: PUSH
15759: EMPTY
15760: LIST
15761: LIST
15762: PUSH
15763: LD_INT 1
15765: PUSH
15766: LD_INT 1
15768: PUSH
15769: EMPTY
15770: LIST
15771: LIST
15772: PUSH
15773: LD_INT 0
15775: PUSH
15776: LD_INT 1
15778: PUSH
15779: EMPTY
15780: LIST
15781: LIST
15782: PUSH
15783: LD_INT 1
15785: NEG
15786: PUSH
15787: LD_INT 0
15789: PUSH
15790: EMPTY
15791: LIST
15792: LIST
15793: PUSH
15794: LD_INT 1
15796: NEG
15797: PUSH
15798: LD_INT 1
15800: NEG
15801: PUSH
15802: EMPTY
15803: LIST
15804: LIST
15805: PUSH
15806: LD_INT 2
15808: PUSH
15809: LD_INT 1
15811: PUSH
15812: EMPTY
15813: LIST
15814: LIST
15815: PUSH
15816: LD_INT 2
15818: NEG
15819: PUSH
15820: LD_INT 1
15822: NEG
15823: PUSH
15824: EMPTY
15825: LIST
15826: LIST
15827: PUSH
15828: EMPTY
15829: LIST
15830: LIST
15831: LIST
15832: LIST
15833: LIST
15834: LIST
15835: LIST
15836: LIST
15837: LIST
15838: ST_TO_ADDR
// Ext4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , 2 ] ] ;
15839: LD_ADDR_VAR 0 39
15843: PUSH
15844: LD_INT 0
15846: PUSH
15847: LD_INT 0
15849: PUSH
15850: EMPTY
15851: LIST
15852: LIST
15853: PUSH
15854: LD_INT 0
15856: PUSH
15857: LD_INT 1
15859: NEG
15860: PUSH
15861: EMPTY
15862: LIST
15863: LIST
15864: PUSH
15865: LD_INT 1
15867: PUSH
15868: LD_INT 0
15870: PUSH
15871: EMPTY
15872: LIST
15873: LIST
15874: PUSH
15875: LD_INT 1
15877: PUSH
15878: LD_INT 1
15880: PUSH
15881: EMPTY
15882: LIST
15883: LIST
15884: PUSH
15885: LD_INT 0
15887: PUSH
15888: LD_INT 1
15890: PUSH
15891: EMPTY
15892: LIST
15893: LIST
15894: PUSH
15895: LD_INT 1
15897: NEG
15898: PUSH
15899: LD_INT 0
15901: PUSH
15902: EMPTY
15903: LIST
15904: LIST
15905: PUSH
15906: LD_INT 1
15908: NEG
15909: PUSH
15910: LD_INT 1
15912: NEG
15913: PUSH
15914: EMPTY
15915: LIST
15916: LIST
15917: PUSH
15918: LD_INT 1
15920: NEG
15921: PUSH
15922: LD_INT 2
15924: NEG
15925: PUSH
15926: EMPTY
15927: LIST
15928: LIST
15929: PUSH
15930: LD_INT 1
15932: PUSH
15933: LD_INT 2
15935: PUSH
15936: EMPTY
15937: LIST
15938: LIST
15939: PUSH
15940: EMPTY
15941: LIST
15942: LIST
15943: LIST
15944: LIST
15945: LIST
15946: LIST
15947: LIST
15948: LIST
15949: LIST
15950: ST_TO_ADDR
// Ext5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ - 1 , 1 ] ] ;
15951: LD_ADDR_VAR 0 40
15955: PUSH
15956: LD_INT 0
15958: PUSH
15959: LD_INT 0
15961: PUSH
15962: EMPTY
15963: LIST
15964: LIST
15965: PUSH
15966: LD_INT 0
15968: PUSH
15969: LD_INT 1
15971: NEG
15972: PUSH
15973: EMPTY
15974: LIST
15975: LIST
15976: PUSH
15977: LD_INT 1
15979: PUSH
15980: LD_INT 0
15982: PUSH
15983: EMPTY
15984: LIST
15985: LIST
15986: PUSH
15987: LD_INT 1
15989: PUSH
15990: LD_INT 1
15992: PUSH
15993: EMPTY
15994: LIST
15995: LIST
15996: PUSH
15997: LD_INT 0
15999: PUSH
16000: LD_INT 1
16002: PUSH
16003: EMPTY
16004: LIST
16005: LIST
16006: PUSH
16007: LD_INT 1
16009: NEG
16010: PUSH
16011: LD_INT 0
16013: PUSH
16014: EMPTY
16015: LIST
16016: LIST
16017: PUSH
16018: LD_INT 1
16020: NEG
16021: PUSH
16022: LD_INT 1
16024: NEG
16025: PUSH
16026: EMPTY
16027: LIST
16028: LIST
16029: PUSH
16030: LD_INT 1
16032: PUSH
16033: LD_INT 1
16035: NEG
16036: PUSH
16037: EMPTY
16038: LIST
16039: LIST
16040: PUSH
16041: LD_INT 1
16043: NEG
16044: PUSH
16045: LD_INT 1
16047: PUSH
16048: EMPTY
16049: LIST
16050: LIST
16051: PUSH
16052: EMPTY
16053: LIST
16054: LIST
16055: LIST
16056: LIST
16057: LIST
16058: LIST
16059: LIST
16060: LIST
16061: LIST
16062: ST_TO_ADDR
// Lab0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
16063: LD_ADDR_VAR 0 41
16067: PUSH
16068: LD_INT 0
16070: PUSH
16071: LD_INT 0
16073: PUSH
16074: EMPTY
16075: LIST
16076: LIST
16077: PUSH
16078: LD_INT 0
16080: PUSH
16081: LD_INT 1
16083: NEG
16084: PUSH
16085: EMPTY
16086: LIST
16087: LIST
16088: PUSH
16089: LD_INT 1
16091: PUSH
16092: LD_INT 0
16094: PUSH
16095: EMPTY
16096: LIST
16097: LIST
16098: PUSH
16099: LD_INT 1
16101: PUSH
16102: LD_INT 1
16104: PUSH
16105: EMPTY
16106: LIST
16107: LIST
16108: PUSH
16109: LD_INT 0
16111: PUSH
16112: LD_INT 1
16114: PUSH
16115: EMPTY
16116: LIST
16117: LIST
16118: PUSH
16119: LD_INT 1
16121: NEG
16122: PUSH
16123: LD_INT 0
16125: PUSH
16126: EMPTY
16127: LIST
16128: LIST
16129: PUSH
16130: LD_INT 1
16132: NEG
16133: PUSH
16134: LD_INT 1
16136: NEG
16137: PUSH
16138: EMPTY
16139: LIST
16140: LIST
16141: PUSH
16142: LD_INT 1
16144: NEG
16145: PUSH
16146: LD_INT 2
16148: NEG
16149: PUSH
16150: EMPTY
16151: LIST
16152: LIST
16153: PUSH
16154: LD_INT 1
16156: PUSH
16157: LD_INT 1
16159: NEG
16160: PUSH
16161: EMPTY
16162: LIST
16163: LIST
16164: PUSH
16165: LD_INT 2
16167: PUSH
16168: LD_INT 0
16170: PUSH
16171: EMPTY
16172: LIST
16173: LIST
16174: PUSH
16175: LD_INT 2
16177: PUSH
16178: LD_INT 1
16180: PUSH
16181: EMPTY
16182: LIST
16183: LIST
16184: PUSH
16185: LD_INT 2
16187: PUSH
16188: LD_INT 2
16190: PUSH
16191: EMPTY
16192: LIST
16193: LIST
16194: PUSH
16195: LD_INT 1
16197: PUSH
16198: LD_INT 2
16200: PUSH
16201: EMPTY
16202: LIST
16203: LIST
16204: PUSH
16205: LD_INT 1
16207: NEG
16208: PUSH
16209: LD_INT 1
16211: PUSH
16212: EMPTY
16213: LIST
16214: LIST
16215: PUSH
16216: LD_INT 2
16218: NEG
16219: PUSH
16220: LD_INT 0
16222: PUSH
16223: EMPTY
16224: LIST
16225: LIST
16226: PUSH
16227: LD_INT 2
16229: NEG
16230: PUSH
16231: LD_INT 1
16233: NEG
16234: PUSH
16235: EMPTY
16236: LIST
16237: LIST
16238: PUSH
16239: LD_INT 2
16241: NEG
16242: PUSH
16243: LD_INT 2
16245: NEG
16246: PUSH
16247: EMPTY
16248: LIST
16249: LIST
16250: PUSH
16251: LD_INT 2
16253: NEG
16254: PUSH
16255: LD_INT 3
16257: NEG
16258: PUSH
16259: EMPTY
16260: LIST
16261: LIST
16262: PUSH
16263: LD_INT 2
16265: PUSH
16266: LD_INT 1
16268: NEG
16269: PUSH
16270: EMPTY
16271: LIST
16272: LIST
16273: PUSH
16274: LD_INT 3
16276: PUSH
16277: LD_INT 0
16279: PUSH
16280: EMPTY
16281: LIST
16282: LIST
16283: PUSH
16284: LD_INT 3
16286: PUSH
16287: LD_INT 1
16289: PUSH
16290: EMPTY
16291: LIST
16292: LIST
16293: PUSH
16294: LD_INT 3
16296: PUSH
16297: LD_INT 2
16299: PUSH
16300: EMPTY
16301: LIST
16302: LIST
16303: PUSH
16304: LD_INT 3
16306: PUSH
16307: LD_INT 3
16309: PUSH
16310: EMPTY
16311: LIST
16312: LIST
16313: PUSH
16314: LD_INT 2
16316: PUSH
16317: LD_INT 3
16319: PUSH
16320: EMPTY
16321: LIST
16322: LIST
16323: PUSH
16324: LD_INT 2
16326: NEG
16327: PUSH
16328: LD_INT 1
16330: PUSH
16331: EMPTY
16332: LIST
16333: LIST
16334: PUSH
16335: LD_INT 3
16337: NEG
16338: PUSH
16339: LD_INT 0
16341: PUSH
16342: EMPTY
16343: LIST
16344: LIST
16345: PUSH
16346: LD_INT 3
16348: NEG
16349: PUSH
16350: LD_INT 1
16352: NEG
16353: PUSH
16354: EMPTY
16355: LIST
16356: LIST
16357: PUSH
16358: LD_INT 3
16360: NEG
16361: PUSH
16362: LD_INT 2
16364: NEG
16365: PUSH
16366: EMPTY
16367: LIST
16368: LIST
16369: PUSH
16370: LD_INT 3
16372: NEG
16373: PUSH
16374: LD_INT 3
16376: NEG
16377: PUSH
16378: EMPTY
16379: LIST
16380: LIST
16381: PUSH
16382: EMPTY
16383: LIST
16384: LIST
16385: LIST
16386: LIST
16387: LIST
16388: LIST
16389: LIST
16390: LIST
16391: LIST
16392: LIST
16393: LIST
16394: LIST
16395: LIST
16396: LIST
16397: LIST
16398: LIST
16399: LIST
16400: LIST
16401: LIST
16402: LIST
16403: LIST
16404: LIST
16405: LIST
16406: LIST
16407: LIST
16408: LIST
16409: LIST
16410: LIST
16411: LIST
16412: ST_TO_ADDR
// Lab1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
16413: LD_ADDR_VAR 0 42
16417: PUSH
16418: LD_INT 0
16420: PUSH
16421: LD_INT 0
16423: PUSH
16424: EMPTY
16425: LIST
16426: LIST
16427: PUSH
16428: LD_INT 0
16430: PUSH
16431: LD_INT 1
16433: NEG
16434: PUSH
16435: EMPTY
16436: LIST
16437: LIST
16438: PUSH
16439: LD_INT 1
16441: PUSH
16442: LD_INT 0
16444: PUSH
16445: EMPTY
16446: LIST
16447: LIST
16448: PUSH
16449: LD_INT 1
16451: PUSH
16452: LD_INT 1
16454: PUSH
16455: EMPTY
16456: LIST
16457: LIST
16458: PUSH
16459: LD_INT 0
16461: PUSH
16462: LD_INT 1
16464: PUSH
16465: EMPTY
16466: LIST
16467: LIST
16468: PUSH
16469: LD_INT 1
16471: NEG
16472: PUSH
16473: LD_INT 0
16475: PUSH
16476: EMPTY
16477: LIST
16478: LIST
16479: PUSH
16480: LD_INT 1
16482: NEG
16483: PUSH
16484: LD_INT 1
16486: NEG
16487: PUSH
16488: EMPTY
16489: LIST
16490: LIST
16491: PUSH
16492: LD_INT 1
16494: NEG
16495: PUSH
16496: LD_INT 2
16498: NEG
16499: PUSH
16500: EMPTY
16501: LIST
16502: LIST
16503: PUSH
16504: LD_INT 0
16506: PUSH
16507: LD_INT 2
16509: NEG
16510: PUSH
16511: EMPTY
16512: LIST
16513: LIST
16514: PUSH
16515: LD_INT 1
16517: PUSH
16518: LD_INT 1
16520: NEG
16521: PUSH
16522: EMPTY
16523: LIST
16524: LIST
16525: PUSH
16526: LD_INT 2
16528: PUSH
16529: LD_INT 1
16531: PUSH
16532: EMPTY
16533: LIST
16534: LIST
16535: PUSH
16536: LD_INT 2
16538: PUSH
16539: LD_INT 2
16541: PUSH
16542: EMPTY
16543: LIST
16544: LIST
16545: PUSH
16546: LD_INT 1
16548: PUSH
16549: LD_INT 2
16551: PUSH
16552: EMPTY
16553: LIST
16554: LIST
16555: PUSH
16556: LD_INT 0
16558: PUSH
16559: LD_INT 2
16561: PUSH
16562: EMPTY
16563: LIST
16564: LIST
16565: PUSH
16566: LD_INT 1
16568: NEG
16569: PUSH
16570: LD_INT 1
16572: PUSH
16573: EMPTY
16574: LIST
16575: LIST
16576: PUSH
16577: LD_INT 2
16579: NEG
16580: PUSH
16581: LD_INT 1
16583: NEG
16584: PUSH
16585: EMPTY
16586: LIST
16587: LIST
16588: PUSH
16589: LD_INT 2
16591: NEG
16592: PUSH
16593: LD_INT 2
16595: NEG
16596: PUSH
16597: EMPTY
16598: LIST
16599: LIST
16600: PUSH
16601: LD_INT 2
16603: NEG
16604: PUSH
16605: LD_INT 3
16607: NEG
16608: PUSH
16609: EMPTY
16610: LIST
16611: LIST
16612: PUSH
16613: LD_INT 1
16615: NEG
16616: PUSH
16617: LD_INT 3
16619: NEG
16620: PUSH
16621: EMPTY
16622: LIST
16623: LIST
16624: PUSH
16625: LD_INT 0
16627: PUSH
16628: LD_INT 3
16630: NEG
16631: PUSH
16632: EMPTY
16633: LIST
16634: LIST
16635: PUSH
16636: LD_INT 1
16638: PUSH
16639: LD_INT 2
16641: NEG
16642: PUSH
16643: EMPTY
16644: LIST
16645: LIST
16646: PUSH
16647: LD_INT 3
16649: PUSH
16650: LD_INT 2
16652: PUSH
16653: EMPTY
16654: LIST
16655: LIST
16656: PUSH
16657: LD_INT 3
16659: PUSH
16660: LD_INT 3
16662: PUSH
16663: EMPTY
16664: LIST
16665: LIST
16666: PUSH
16667: LD_INT 2
16669: PUSH
16670: LD_INT 3
16672: PUSH
16673: EMPTY
16674: LIST
16675: LIST
16676: PUSH
16677: LD_INT 1
16679: PUSH
16680: LD_INT 3
16682: PUSH
16683: EMPTY
16684: LIST
16685: LIST
16686: PUSH
16687: LD_INT 0
16689: PUSH
16690: LD_INT 3
16692: PUSH
16693: EMPTY
16694: LIST
16695: LIST
16696: PUSH
16697: LD_INT 1
16699: NEG
16700: PUSH
16701: LD_INT 2
16703: PUSH
16704: EMPTY
16705: LIST
16706: LIST
16707: PUSH
16708: LD_INT 3
16710: NEG
16711: PUSH
16712: LD_INT 2
16714: NEG
16715: PUSH
16716: EMPTY
16717: LIST
16718: LIST
16719: PUSH
16720: LD_INT 3
16722: NEG
16723: PUSH
16724: LD_INT 3
16726: NEG
16727: PUSH
16728: EMPTY
16729: LIST
16730: LIST
16731: PUSH
16732: EMPTY
16733: LIST
16734: LIST
16735: LIST
16736: LIST
16737: LIST
16738: LIST
16739: LIST
16740: LIST
16741: LIST
16742: LIST
16743: LIST
16744: LIST
16745: LIST
16746: LIST
16747: LIST
16748: LIST
16749: LIST
16750: LIST
16751: LIST
16752: LIST
16753: LIST
16754: LIST
16755: LIST
16756: LIST
16757: LIST
16758: LIST
16759: LIST
16760: LIST
16761: LIST
16762: ST_TO_ADDR
// Lab2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
16763: LD_ADDR_VAR 0 43
16767: PUSH
16768: LD_INT 0
16770: PUSH
16771: LD_INT 0
16773: PUSH
16774: EMPTY
16775: LIST
16776: LIST
16777: PUSH
16778: LD_INT 0
16780: PUSH
16781: LD_INT 1
16783: NEG
16784: PUSH
16785: EMPTY
16786: LIST
16787: LIST
16788: PUSH
16789: LD_INT 1
16791: PUSH
16792: LD_INT 0
16794: PUSH
16795: EMPTY
16796: LIST
16797: LIST
16798: PUSH
16799: LD_INT 1
16801: PUSH
16802: LD_INT 1
16804: PUSH
16805: EMPTY
16806: LIST
16807: LIST
16808: PUSH
16809: LD_INT 0
16811: PUSH
16812: LD_INT 1
16814: PUSH
16815: EMPTY
16816: LIST
16817: LIST
16818: PUSH
16819: LD_INT 1
16821: NEG
16822: PUSH
16823: LD_INT 0
16825: PUSH
16826: EMPTY
16827: LIST
16828: LIST
16829: PUSH
16830: LD_INT 1
16832: NEG
16833: PUSH
16834: LD_INT 1
16836: NEG
16837: PUSH
16838: EMPTY
16839: LIST
16840: LIST
16841: PUSH
16842: LD_INT 1
16844: NEG
16845: PUSH
16846: LD_INT 2
16848: NEG
16849: PUSH
16850: EMPTY
16851: LIST
16852: LIST
16853: PUSH
16854: LD_INT 0
16856: PUSH
16857: LD_INT 2
16859: NEG
16860: PUSH
16861: EMPTY
16862: LIST
16863: LIST
16864: PUSH
16865: LD_INT 1
16867: PUSH
16868: LD_INT 1
16870: NEG
16871: PUSH
16872: EMPTY
16873: LIST
16874: LIST
16875: PUSH
16876: LD_INT 2
16878: PUSH
16879: LD_INT 0
16881: PUSH
16882: EMPTY
16883: LIST
16884: LIST
16885: PUSH
16886: LD_INT 2
16888: PUSH
16889: LD_INT 1
16891: PUSH
16892: EMPTY
16893: LIST
16894: LIST
16895: PUSH
16896: LD_INT 1
16898: PUSH
16899: LD_INT 2
16901: PUSH
16902: EMPTY
16903: LIST
16904: LIST
16905: PUSH
16906: LD_INT 0
16908: PUSH
16909: LD_INT 2
16911: PUSH
16912: EMPTY
16913: LIST
16914: LIST
16915: PUSH
16916: LD_INT 1
16918: NEG
16919: PUSH
16920: LD_INT 1
16922: PUSH
16923: EMPTY
16924: LIST
16925: LIST
16926: PUSH
16927: LD_INT 2
16929: NEG
16930: PUSH
16931: LD_INT 0
16933: PUSH
16934: EMPTY
16935: LIST
16936: LIST
16937: PUSH
16938: LD_INT 2
16940: NEG
16941: PUSH
16942: LD_INT 1
16944: NEG
16945: PUSH
16946: EMPTY
16947: LIST
16948: LIST
16949: PUSH
16950: LD_INT 1
16952: NEG
16953: PUSH
16954: LD_INT 3
16956: NEG
16957: PUSH
16958: EMPTY
16959: LIST
16960: LIST
16961: PUSH
16962: LD_INT 0
16964: PUSH
16965: LD_INT 3
16967: NEG
16968: PUSH
16969: EMPTY
16970: LIST
16971: LIST
16972: PUSH
16973: LD_INT 1
16975: PUSH
16976: LD_INT 2
16978: NEG
16979: PUSH
16980: EMPTY
16981: LIST
16982: LIST
16983: PUSH
16984: LD_INT 2
16986: PUSH
16987: LD_INT 1
16989: NEG
16990: PUSH
16991: EMPTY
16992: LIST
16993: LIST
16994: PUSH
16995: LD_INT 3
16997: PUSH
16998: LD_INT 0
17000: PUSH
17001: EMPTY
17002: LIST
17003: LIST
17004: PUSH
17005: LD_INT 3
17007: PUSH
17008: LD_INT 1
17010: PUSH
17011: EMPTY
17012: LIST
17013: LIST
17014: PUSH
17015: LD_INT 1
17017: PUSH
17018: LD_INT 3
17020: PUSH
17021: EMPTY
17022: LIST
17023: LIST
17024: PUSH
17025: LD_INT 0
17027: PUSH
17028: LD_INT 3
17030: PUSH
17031: EMPTY
17032: LIST
17033: LIST
17034: PUSH
17035: LD_INT 1
17037: NEG
17038: PUSH
17039: LD_INT 2
17041: PUSH
17042: EMPTY
17043: LIST
17044: LIST
17045: PUSH
17046: LD_INT 2
17048: NEG
17049: PUSH
17050: LD_INT 1
17052: PUSH
17053: EMPTY
17054: LIST
17055: LIST
17056: PUSH
17057: LD_INT 3
17059: NEG
17060: PUSH
17061: LD_INT 0
17063: PUSH
17064: EMPTY
17065: LIST
17066: LIST
17067: PUSH
17068: LD_INT 3
17070: NEG
17071: PUSH
17072: LD_INT 1
17074: NEG
17075: PUSH
17076: EMPTY
17077: LIST
17078: LIST
17079: PUSH
17080: EMPTY
17081: LIST
17082: LIST
17083: LIST
17084: LIST
17085: LIST
17086: LIST
17087: LIST
17088: LIST
17089: LIST
17090: LIST
17091: LIST
17092: LIST
17093: LIST
17094: LIST
17095: LIST
17096: LIST
17097: LIST
17098: LIST
17099: LIST
17100: LIST
17101: LIST
17102: LIST
17103: LIST
17104: LIST
17105: LIST
17106: LIST
17107: LIST
17108: LIST
17109: LIST
17110: ST_TO_ADDR
// Lab3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
17111: LD_ADDR_VAR 0 44
17115: PUSH
17116: LD_INT 0
17118: PUSH
17119: LD_INT 0
17121: PUSH
17122: EMPTY
17123: LIST
17124: LIST
17125: PUSH
17126: LD_INT 0
17128: PUSH
17129: LD_INT 1
17131: NEG
17132: PUSH
17133: EMPTY
17134: LIST
17135: LIST
17136: PUSH
17137: LD_INT 1
17139: PUSH
17140: LD_INT 0
17142: PUSH
17143: EMPTY
17144: LIST
17145: LIST
17146: PUSH
17147: LD_INT 1
17149: PUSH
17150: LD_INT 1
17152: PUSH
17153: EMPTY
17154: LIST
17155: LIST
17156: PUSH
17157: LD_INT 0
17159: PUSH
17160: LD_INT 1
17162: PUSH
17163: EMPTY
17164: LIST
17165: LIST
17166: PUSH
17167: LD_INT 1
17169: NEG
17170: PUSH
17171: LD_INT 0
17173: PUSH
17174: EMPTY
17175: LIST
17176: LIST
17177: PUSH
17178: LD_INT 1
17180: NEG
17181: PUSH
17182: LD_INT 1
17184: NEG
17185: PUSH
17186: EMPTY
17187: LIST
17188: LIST
17189: PUSH
17190: LD_INT 1
17192: NEG
17193: PUSH
17194: LD_INT 2
17196: NEG
17197: PUSH
17198: EMPTY
17199: LIST
17200: LIST
17201: PUSH
17202: LD_INT 1
17204: PUSH
17205: LD_INT 1
17207: NEG
17208: PUSH
17209: EMPTY
17210: LIST
17211: LIST
17212: PUSH
17213: LD_INT 2
17215: PUSH
17216: LD_INT 0
17218: PUSH
17219: EMPTY
17220: LIST
17221: LIST
17222: PUSH
17223: LD_INT 2
17225: PUSH
17226: LD_INT 1
17228: PUSH
17229: EMPTY
17230: LIST
17231: LIST
17232: PUSH
17233: LD_INT 2
17235: PUSH
17236: LD_INT 2
17238: PUSH
17239: EMPTY
17240: LIST
17241: LIST
17242: PUSH
17243: LD_INT 1
17245: PUSH
17246: LD_INT 2
17248: PUSH
17249: EMPTY
17250: LIST
17251: LIST
17252: PUSH
17253: LD_INT 1
17255: NEG
17256: PUSH
17257: LD_INT 1
17259: PUSH
17260: EMPTY
17261: LIST
17262: LIST
17263: PUSH
17264: LD_INT 2
17266: NEG
17267: PUSH
17268: LD_INT 0
17270: PUSH
17271: EMPTY
17272: LIST
17273: LIST
17274: PUSH
17275: LD_INT 2
17277: NEG
17278: PUSH
17279: LD_INT 1
17281: NEG
17282: PUSH
17283: EMPTY
17284: LIST
17285: LIST
17286: PUSH
17287: LD_INT 2
17289: NEG
17290: PUSH
17291: LD_INT 2
17293: NEG
17294: PUSH
17295: EMPTY
17296: LIST
17297: LIST
17298: PUSH
17299: LD_INT 2
17301: NEG
17302: PUSH
17303: LD_INT 3
17305: NEG
17306: PUSH
17307: EMPTY
17308: LIST
17309: LIST
17310: PUSH
17311: LD_INT 2
17313: PUSH
17314: LD_INT 1
17316: NEG
17317: PUSH
17318: EMPTY
17319: LIST
17320: LIST
17321: PUSH
17322: LD_INT 3
17324: PUSH
17325: LD_INT 0
17327: PUSH
17328: EMPTY
17329: LIST
17330: LIST
17331: PUSH
17332: LD_INT 3
17334: PUSH
17335: LD_INT 1
17337: PUSH
17338: EMPTY
17339: LIST
17340: LIST
17341: PUSH
17342: LD_INT 3
17344: PUSH
17345: LD_INT 2
17347: PUSH
17348: EMPTY
17349: LIST
17350: LIST
17351: PUSH
17352: LD_INT 3
17354: PUSH
17355: LD_INT 3
17357: PUSH
17358: EMPTY
17359: LIST
17360: LIST
17361: PUSH
17362: LD_INT 2
17364: PUSH
17365: LD_INT 3
17367: PUSH
17368: EMPTY
17369: LIST
17370: LIST
17371: PUSH
17372: LD_INT 2
17374: NEG
17375: PUSH
17376: LD_INT 1
17378: PUSH
17379: EMPTY
17380: LIST
17381: LIST
17382: PUSH
17383: LD_INT 3
17385: NEG
17386: PUSH
17387: LD_INT 0
17389: PUSH
17390: EMPTY
17391: LIST
17392: LIST
17393: PUSH
17394: LD_INT 3
17396: NEG
17397: PUSH
17398: LD_INT 1
17400: NEG
17401: PUSH
17402: EMPTY
17403: LIST
17404: LIST
17405: PUSH
17406: LD_INT 3
17408: NEG
17409: PUSH
17410: LD_INT 2
17412: NEG
17413: PUSH
17414: EMPTY
17415: LIST
17416: LIST
17417: PUSH
17418: LD_INT 3
17420: NEG
17421: PUSH
17422: LD_INT 3
17424: NEG
17425: PUSH
17426: EMPTY
17427: LIST
17428: LIST
17429: PUSH
17430: EMPTY
17431: LIST
17432: LIST
17433: LIST
17434: LIST
17435: LIST
17436: LIST
17437: LIST
17438: LIST
17439: LIST
17440: LIST
17441: LIST
17442: LIST
17443: LIST
17444: LIST
17445: LIST
17446: LIST
17447: LIST
17448: LIST
17449: LIST
17450: LIST
17451: LIST
17452: LIST
17453: LIST
17454: LIST
17455: LIST
17456: LIST
17457: LIST
17458: LIST
17459: LIST
17460: ST_TO_ADDR
// Lab4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
17461: LD_ADDR_VAR 0 45
17465: PUSH
17466: LD_INT 0
17468: PUSH
17469: LD_INT 0
17471: PUSH
17472: EMPTY
17473: LIST
17474: LIST
17475: PUSH
17476: LD_INT 0
17478: PUSH
17479: LD_INT 1
17481: NEG
17482: PUSH
17483: EMPTY
17484: LIST
17485: LIST
17486: PUSH
17487: LD_INT 1
17489: PUSH
17490: LD_INT 0
17492: PUSH
17493: EMPTY
17494: LIST
17495: LIST
17496: PUSH
17497: LD_INT 1
17499: PUSH
17500: LD_INT 1
17502: PUSH
17503: EMPTY
17504: LIST
17505: LIST
17506: PUSH
17507: LD_INT 0
17509: PUSH
17510: LD_INT 1
17512: PUSH
17513: EMPTY
17514: LIST
17515: LIST
17516: PUSH
17517: LD_INT 1
17519: NEG
17520: PUSH
17521: LD_INT 0
17523: PUSH
17524: EMPTY
17525: LIST
17526: LIST
17527: PUSH
17528: LD_INT 1
17530: NEG
17531: PUSH
17532: LD_INT 1
17534: NEG
17535: PUSH
17536: EMPTY
17537: LIST
17538: LIST
17539: PUSH
17540: LD_INT 1
17542: NEG
17543: PUSH
17544: LD_INT 2
17546: NEG
17547: PUSH
17548: EMPTY
17549: LIST
17550: LIST
17551: PUSH
17552: LD_INT 0
17554: PUSH
17555: LD_INT 2
17557: NEG
17558: PUSH
17559: EMPTY
17560: LIST
17561: LIST
17562: PUSH
17563: LD_INT 1
17565: PUSH
17566: LD_INT 1
17568: NEG
17569: PUSH
17570: EMPTY
17571: LIST
17572: LIST
17573: PUSH
17574: LD_INT 2
17576: PUSH
17577: LD_INT 1
17579: PUSH
17580: EMPTY
17581: LIST
17582: LIST
17583: PUSH
17584: LD_INT 2
17586: PUSH
17587: LD_INT 2
17589: PUSH
17590: EMPTY
17591: LIST
17592: LIST
17593: PUSH
17594: LD_INT 1
17596: PUSH
17597: LD_INT 2
17599: PUSH
17600: EMPTY
17601: LIST
17602: LIST
17603: PUSH
17604: LD_INT 0
17606: PUSH
17607: LD_INT 2
17609: PUSH
17610: EMPTY
17611: LIST
17612: LIST
17613: PUSH
17614: LD_INT 1
17616: NEG
17617: PUSH
17618: LD_INT 1
17620: PUSH
17621: EMPTY
17622: LIST
17623: LIST
17624: PUSH
17625: LD_INT 2
17627: NEG
17628: PUSH
17629: LD_INT 1
17631: NEG
17632: PUSH
17633: EMPTY
17634: LIST
17635: LIST
17636: PUSH
17637: LD_INT 2
17639: NEG
17640: PUSH
17641: LD_INT 2
17643: NEG
17644: PUSH
17645: EMPTY
17646: LIST
17647: LIST
17648: PUSH
17649: LD_INT 2
17651: NEG
17652: PUSH
17653: LD_INT 3
17655: NEG
17656: PUSH
17657: EMPTY
17658: LIST
17659: LIST
17660: PUSH
17661: LD_INT 1
17663: NEG
17664: PUSH
17665: LD_INT 3
17667: NEG
17668: PUSH
17669: EMPTY
17670: LIST
17671: LIST
17672: PUSH
17673: LD_INT 0
17675: PUSH
17676: LD_INT 3
17678: NEG
17679: PUSH
17680: EMPTY
17681: LIST
17682: LIST
17683: PUSH
17684: LD_INT 1
17686: PUSH
17687: LD_INT 2
17689: NEG
17690: PUSH
17691: EMPTY
17692: LIST
17693: LIST
17694: PUSH
17695: LD_INT 3
17697: PUSH
17698: LD_INT 2
17700: PUSH
17701: EMPTY
17702: LIST
17703: LIST
17704: PUSH
17705: LD_INT 3
17707: PUSH
17708: LD_INT 3
17710: PUSH
17711: EMPTY
17712: LIST
17713: LIST
17714: PUSH
17715: LD_INT 2
17717: PUSH
17718: LD_INT 3
17720: PUSH
17721: EMPTY
17722: LIST
17723: LIST
17724: PUSH
17725: LD_INT 1
17727: PUSH
17728: LD_INT 3
17730: PUSH
17731: EMPTY
17732: LIST
17733: LIST
17734: PUSH
17735: LD_INT 0
17737: PUSH
17738: LD_INT 3
17740: PUSH
17741: EMPTY
17742: LIST
17743: LIST
17744: PUSH
17745: LD_INT 1
17747: NEG
17748: PUSH
17749: LD_INT 2
17751: PUSH
17752: EMPTY
17753: LIST
17754: LIST
17755: PUSH
17756: LD_INT 3
17758: NEG
17759: PUSH
17760: LD_INT 2
17762: NEG
17763: PUSH
17764: EMPTY
17765: LIST
17766: LIST
17767: PUSH
17768: LD_INT 3
17770: NEG
17771: PUSH
17772: LD_INT 3
17774: NEG
17775: PUSH
17776: EMPTY
17777: LIST
17778: LIST
17779: PUSH
17780: EMPTY
17781: LIST
17782: LIST
17783: LIST
17784: LIST
17785: LIST
17786: LIST
17787: LIST
17788: LIST
17789: LIST
17790: LIST
17791: LIST
17792: LIST
17793: LIST
17794: LIST
17795: LIST
17796: LIST
17797: LIST
17798: LIST
17799: LIST
17800: LIST
17801: LIST
17802: LIST
17803: LIST
17804: LIST
17805: LIST
17806: LIST
17807: LIST
17808: LIST
17809: LIST
17810: ST_TO_ADDR
// Lab5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
17811: LD_ADDR_VAR 0 46
17815: PUSH
17816: LD_INT 0
17818: PUSH
17819: LD_INT 0
17821: PUSH
17822: EMPTY
17823: LIST
17824: LIST
17825: PUSH
17826: LD_INT 0
17828: PUSH
17829: LD_INT 1
17831: NEG
17832: PUSH
17833: EMPTY
17834: LIST
17835: LIST
17836: PUSH
17837: LD_INT 1
17839: PUSH
17840: LD_INT 0
17842: PUSH
17843: EMPTY
17844: LIST
17845: LIST
17846: PUSH
17847: LD_INT 1
17849: PUSH
17850: LD_INT 1
17852: PUSH
17853: EMPTY
17854: LIST
17855: LIST
17856: PUSH
17857: LD_INT 0
17859: PUSH
17860: LD_INT 1
17862: PUSH
17863: EMPTY
17864: LIST
17865: LIST
17866: PUSH
17867: LD_INT 1
17869: NEG
17870: PUSH
17871: LD_INT 0
17873: PUSH
17874: EMPTY
17875: LIST
17876: LIST
17877: PUSH
17878: LD_INT 1
17880: NEG
17881: PUSH
17882: LD_INT 1
17884: NEG
17885: PUSH
17886: EMPTY
17887: LIST
17888: LIST
17889: PUSH
17890: LD_INT 1
17892: NEG
17893: PUSH
17894: LD_INT 2
17896: NEG
17897: PUSH
17898: EMPTY
17899: LIST
17900: LIST
17901: PUSH
17902: LD_INT 0
17904: PUSH
17905: LD_INT 2
17907: NEG
17908: PUSH
17909: EMPTY
17910: LIST
17911: LIST
17912: PUSH
17913: LD_INT 1
17915: PUSH
17916: LD_INT 1
17918: NEG
17919: PUSH
17920: EMPTY
17921: LIST
17922: LIST
17923: PUSH
17924: LD_INT 2
17926: PUSH
17927: LD_INT 0
17929: PUSH
17930: EMPTY
17931: LIST
17932: LIST
17933: PUSH
17934: LD_INT 2
17936: PUSH
17937: LD_INT 1
17939: PUSH
17940: EMPTY
17941: LIST
17942: LIST
17943: PUSH
17944: LD_INT 1
17946: PUSH
17947: LD_INT 2
17949: PUSH
17950: EMPTY
17951: LIST
17952: LIST
17953: PUSH
17954: LD_INT 0
17956: PUSH
17957: LD_INT 2
17959: PUSH
17960: EMPTY
17961: LIST
17962: LIST
17963: PUSH
17964: LD_INT 1
17966: NEG
17967: PUSH
17968: LD_INT 1
17970: PUSH
17971: EMPTY
17972: LIST
17973: LIST
17974: PUSH
17975: LD_INT 2
17977: NEG
17978: PUSH
17979: LD_INT 0
17981: PUSH
17982: EMPTY
17983: LIST
17984: LIST
17985: PUSH
17986: LD_INT 2
17988: NEG
17989: PUSH
17990: LD_INT 1
17992: NEG
17993: PUSH
17994: EMPTY
17995: LIST
17996: LIST
17997: PUSH
17998: LD_INT 1
18000: NEG
18001: PUSH
18002: LD_INT 3
18004: NEG
18005: PUSH
18006: EMPTY
18007: LIST
18008: LIST
18009: PUSH
18010: LD_INT 0
18012: PUSH
18013: LD_INT 3
18015: NEG
18016: PUSH
18017: EMPTY
18018: LIST
18019: LIST
18020: PUSH
18021: LD_INT 1
18023: PUSH
18024: LD_INT 2
18026: NEG
18027: PUSH
18028: EMPTY
18029: LIST
18030: LIST
18031: PUSH
18032: LD_INT 2
18034: PUSH
18035: LD_INT 1
18037: NEG
18038: PUSH
18039: EMPTY
18040: LIST
18041: LIST
18042: PUSH
18043: LD_INT 3
18045: PUSH
18046: LD_INT 0
18048: PUSH
18049: EMPTY
18050: LIST
18051: LIST
18052: PUSH
18053: LD_INT 3
18055: PUSH
18056: LD_INT 1
18058: PUSH
18059: EMPTY
18060: LIST
18061: LIST
18062: PUSH
18063: LD_INT 1
18065: PUSH
18066: LD_INT 3
18068: PUSH
18069: EMPTY
18070: LIST
18071: LIST
18072: PUSH
18073: LD_INT 0
18075: PUSH
18076: LD_INT 3
18078: PUSH
18079: EMPTY
18080: LIST
18081: LIST
18082: PUSH
18083: LD_INT 1
18085: NEG
18086: PUSH
18087: LD_INT 2
18089: PUSH
18090: EMPTY
18091: LIST
18092: LIST
18093: PUSH
18094: LD_INT 2
18096: NEG
18097: PUSH
18098: LD_INT 1
18100: PUSH
18101: EMPTY
18102: LIST
18103: LIST
18104: PUSH
18105: LD_INT 3
18107: NEG
18108: PUSH
18109: LD_INT 0
18111: PUSH
18112: EMPTY
18113: LIST
18114: LIST
18115: PUSH
18116: LD_INT 3
18118: NEG
18119: PUSH
18120: LD_INT 1
18122: NEG
18123: PUSH
18124: EMPTY
18125: LIST
18126: LIST
18127: PUSH
18128: EMPTY
18129: LIST
18130: LIST
18131: LIST
18132: LIST
18133: LIST
18134: LIST
18135: LIST
18136: LIST
18137: LIST
18138: LIST
18139: LIST
18140: LIST
18141: LIST
18142: LIST
18143: LIST
18144: LIST
18145: LIST
18146: LIST
18147: LIST
18148: LIST
18149: LIST
18150: LIST
18151: LIST
18152: LIST
18153: LIST
18154: LIST
18155: LIST
18156: LIST
18157: LIST
18158: ST_TO_ADDR
// ControlTower0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
18159: LD_ADDR_VAR 0 47
18163: PUSH
18164: LD_INT 0
18166: PUSH
18167: LD_INT 0
18169: PUSH
18170: EMPTY
18171: LIST
18172: LIST
18173: PUSH
18174: LD_INT 0
18176: PUSH
18177: LD_INT 1
18179: NEG
18180: PUSH
18181: EMPTY
18182: LIST
18183: LIST
18184: PUSH
18185: LD_INT 1
18187: PUSH
18188: LD_INT 0
18190: PUSH
18191: EMPTY
18192: LIST
18193: LIST
18194: PUSH
18195: LD_INT 1
18197: PUSH
18198: LD_INT 1
18200: PUSH
18201: EMPTY
18202: LIST
18203: LIST
18204: PUSH
18205: LD_INT 0
18207: PUSH
18208: LD_INT 1
18210: PUSH
18211: EMPTY
18212: LIST
18213: LIST
18214: PUSH
18215: LD_INT 1
18217: NEG
18218: PUSH
18219: LD_INT 0
18221: PUSH
18222: EMPTY
18223: LIST
18224: LIST
18225: PUSH
18226: LD_INT 1
18228: NEG
18229: PUSH
18230: LD_INT 1
18232: NEG
18233: PUSH
18234: EMPTY
18235: LIST
18236: LIST
18237: PUSH
18238: LD_INT 1
18240: NEG
18241: PUSH
18242: LD_INT 2
18244: NEG
18245: PUSH
18246: EMPTY
18247: LIST
18248: LIST
18249: PUSH
18250: LD_INT 0
18252: PUSH
18253: LD_INT 2
18255: NEG
18256: PUSH
18257: EMPTY
18258: LIST
18259: LIST
18260: PUSH
18261: LD_INT 1
18263: PUSH
18264: LD_INT 1
18266: NEG
18267: PUSH
18268: EMPTY
18269: LIST
18270: LIST
18271: PUSH
18272: LD_INT 2
18274: NEG
18275: PUSH
18276: LD_INT 1
18278: NEG
18279: PUSH
18280: EMPTY
18281: LIST
18282: LIST
18283: PUSH
18284: LD_INT 2
18286: NEG
18287: PUSH
18288: LD_INT 2
18290: NEG
18291: PUSH
18292: EMPTY
18293: LIST
18294: LIST
18295: PUSH
18296: EMPTY
18297: LIST
18298: LIST
18299: LIST
18300: LIST
18301: LIST
18302: LIST
18303: LIST
18304: LIST
18305: LIST
18306: LIST
18307: LIST
18308: LIST
18309: ST_TO_ADDR
// ControlTower1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] ] ;
18310: LD_ADDR_VAR 0 48
18314: PUSH
18315: LD_INT 0
18317: PUSH
18318: LD_INT 0
18320: PUSH
18321: EMPTY
18322: LIST
18323: LIST
18324: PUSH
18325: LD_INT 0
18327: PUSH
18328: LD_INT 1
18330: NEG
18331: PUSH
18332: EMPTY
18333: LIST
18334: LIST
18335: PUSH
18336: LD_INT 1
18338: PUSH
18339: LD_INT 0
18341: PUSH
18342: EMPTY
18343: LIST
18344: LIST
18345: PUSH
18346: LD_INT 1
18348: PUSH
18349: LD_INT 1
18351: PUSH
18352: EMPTY
18353: LIST
18354: LIST
18355: PUSH
18356: LD_INT 0
18358: PUSH
18359: LD_INT 1
18361: PUSH
18362: EMPTY
18363: LIST
18364: LIST
18365: PUSH
18366: LD_INT 1
18368: NEG
18369: PUSH
18370: LD_INT 0
18372: PUSH
18373: EMPTY
18374: LIST
18375: LIST
18376: PUSH
18377: LD_INT 1
18379: NEG
18380: PUSH
18381: LD_INT 1
18383: NEG
18384: PUSH
18385: EMPTY
18386: LIST
18387: LIST
18388: PUSH
18389: LD_INT 1
18391: NEG
18392: PUSH
18393: LD_INT 2
18395: NEG
18396: PUSH
18397: EMPTY
18398: LIST
18399: LIST
18400: PUSH
18401: LD_INT 0
18403: PUSH
18404: LD_INT 2
18406: NEG
18407: PUSH
18408: EMPTY
18409: LIST
18410: LIST
18411: PUSH
18412: LD_INT 1
18414: PUSH
18415: LD_INT 1
18417: NEG
18418: PUSH
18419: EMPTY
18420: LIST
18421: LIST
18422: PUSH
18423: LD_INT 2
18425: PUSH
18426: LD_INT 0
18428: PUSH
18429: EMPTY
18430: LIST
18431: LIST
18432: PUSH
18433: LD_INT 2
18435: PUSH
18436: LD_INT 1
18438: PUSH
18439: EMPTY
18440: LIST
18441: LIST
18442: PUSH
18443: EMPTY
18444: LIST
18445: LIST
18446: LIST
18447: LIST
18448: LIST
18449: LIST
18450: LIST
18451: LIST
18452: LIST
18453: LIST
18454: LIST
18455: LIST
18456: ST_TO_ADDR
// ControlTower2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] ] ;
18457: LD_ADDR_VAR 0 49
18461: PUSH
18462: LD_INT 0
18464: PUSH
18465: LD_INT 0
18467: PUSH
18468: EMPTY
18469: LIST
18470: LIST
18471: PUSH
18472: LD_INT 0
18474: PUSH
18475: LD_INT 1
18477: NEG
18478: PUSH
18479: EMPTY
18480: LIST
18481: LIST
18482: PUSH
18483: LD_INT 1
18485: PUSH
18486: LD_INT 0
18488: PUSH
18489: EMPTY
18490: LIST
18491: LIST
18492: PUSH
18493: LD_INT 1
18495: PUSH
18496: LD_INT 1
18498: PUSH
18499: EMPTY
18500: LIST
18501: LIST
18502: PUSH
18503: LD_INT 0
18505: PUSH
18506: LD_INT 1
18508: PUSH
18509: EMPTY
18510: LIST
18511: LIST
18512: PUSH
18513: LD_INT 1
18515: NEG
18516: PUSH
18517: LD_INT 0
18519: PUSH
18520: EMPTY
18521: LIST
18522: LIST
18523: PUSH
18524: LD_INT 1
18526: NEG
18527: PUSH
18528: LD_INT 1
18530: NEG
18531: PUSH
18532: EMPTY
18533: LIST
18534: LIST
18535: PUSH
18536: LD_INT 1
18538: PUSH
18539: LD_INT 1
18541: NEG
18542: PUSH
18543: EMPTY
18544: LIST
18545: LIST
18546: PUSH
18547: LD_INT 2
18549: PUSH
18550: LD_INT 0
18552: PUSH
18553: EMPTY
18554: LIST
18555: LIST
18556: PUSH
18557: LD_INT 2
18559: PUSH
18560: LD_INT 1
18562: PUSH
18563: EMPTY
18564: LIST
18565: LIST
18566: PUSH
18567: LD_INT 2
18569: PUSH
18570: LD_INT 2
18572: PUSH
18573: EMPTY
18574: LIST
18575: LIST
18576: PUSH
18577: LD_INT 1
18579: PUSH
18580: LD_INT 2
18582: PUSH
18583: EMPTY
18584: LIST
18585: LIST
18586: PUSH
18587: EMPTY
18588: LIST
18589: LIST
18590: LIST
18591: LIST
18592: LIST
18593: LIST
18594: LIST
18595: LIST
18596: LIST
18597: LIST
18598: LIST
18599: LIST
18600: ST_TO_ADDR
// ControlTower3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] ] ;
18601: LD_ADDR_VAR 0 50
18605: PUSH
18606: LD_INT 0
18608: PUSH
18609: LD_INT 0
18611: PUSH
18612: EMPTY
18613: LIST
18614: LIST
18615: PUSH
18616: LD_INT 0
18618: PUSH
18619: LD_INT 1
18621: NEG
18622: PUSH
18623: EMPTY
18624: LIST
18625: LIST
18626: PUSH
18627: LD_INT 1
18629: PUSH
18630: LD_INT 0
18632: PUSH
18633: EMPTY
18634: LIST
18635: LIST
18636: PUSH
18637: LD_INT 1
18639: PUSH
18640: LD_INT 1
18642: PUSH
18643: EMPTY
18644: LIST
18645: LIST
18646: PUSH
18647: LD_INT 0
18649: PUSH
18650: LD_INT 1
18652: PUSH
18653: EMPTY
18654: LIST
18655: LIST
18656: PUSH
18657: LD_INT 1
18659: NEG
18660: PUSH
18661: LD_INT 0
18663: PUSH
18664: EMPTY
18665: LIST
18666: LIST
18667: PUSH
18668: LD_INT 1
18670: NEG
18671: PUSH
18672: LD_INT 1
18674: NEG
18675: PUSH
18676: EMPTY
18677: LIST
18678: LIST
18679: PUSH
18680: LD_INT 2
18682: PUSH
18683: LD_INT 1
18685: PUSH
18686: EMPTY
18687: LIST
18688: LIST
18689: PUSH
18690: LD_INT 2
18692: PUSH
18693: LD_INT 2
18695: PUSH
18696: EMPTY
18697: LIST
18698: LIST
18699: PUSH
18700: LD_INT 1
18702: PUSH
18703: LD_INT 2
18705: PUSH
18706: EMPTY
18707: LIST
18708: LIST
18709: PUSH
18710: LD_INT 0
18712: PUSH
18713: LD_INT 2
18715: PUSH
18716: EMPTY
18717: LIST
18718: LIST
18719: PUSH
18720: LD_INT 1
18722: NEG
18723: PUSH
18724: LD_INT 1
18726: PUSH
18727: EMPTY
18728: LIST
18729: LIST
18730: PUSH
18731: EMPTY
18732: LIST
18733: LIST
18734: LIST
18735: LIST
18736: LIST
18737: LIST
18738: LIST
18739: LIST
18740: LIST
18741: LIST
18742: LIST
18743: LIST
18744: ST_TO_ADDR
// ControlTower4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] ] ;
18745: LD_ADDR_VAR 0 51
18749: PUSH
18750: LD_INT 0
18752: PUSH
18753: LD_INT 0
18755: PUSH
18756: EMPTY
18757: LIST
18758: LIST
18759: PUSH
18760: LD_INT 0
18762: PUSH
18763: LD_INT 1
18765: NEG
18766: PUSH
18767: EMPTY
18768: LIST
18769: LIST
18770: PUSH
18771: LD_INT 1
18773: PUSH
18774: LD_INT 0
18776: PUSH
18777: EMPTY
18778: LIST
18779: LIST
18780: PUSH
18781: LD_INT 1
18783: PUSH
18784: LD_INT 1
18786: PUSH
18787: EMPTY
18788: LIST
18789: LIST
18790: PUSH
18791: LD_INT 0
18793: PUSH
18794: LD_INT 1
18796: PUSH
18797: EMPTY
18798: LIST
18799: LIST
18800: PUSH
18801: LD_INT 1
18803: NEG
18804: PUSH
18805: LD_INT 0
18807: PUSH
18808: EMPTY
18809: LIST
18810: LIST
18811: PUSH
18812: LD_INT 1
18814: NEG
18815: PUSH
18816: LD_INT 1
18818: NEG
18819: PUSH
18820: EMPTY
18821: LIST
18822: LIST
18823: PUSH
18824: LD_INT 1
18826: PUSH
18827: LD_INT 2
18829: PUSH
18830: EMPTY
18831: LIST
18832: LIST
18833: PUSH
18834: LD_INT 0
18836: PUSH
18837: LD_INT 2
18839: PUSH
18840: EMPTY
18841: LIST
18842: LIST
18843: PUSH
18844: LD_INT 1
18846: NEG
18847: PUSH
18848: LD_INT 1
18850: PUSH
18851: EMPTY
18852: LIST
18853: LIST
18854: PUSH
18855: LD_INT 2
18857: NEG
18858: PUSH
18859: LD_INT 0
18861: PUSH
18862: EMPTY
18863: LIST
18864: LIST
18865: PUSH
18866: LD_INT 2
18868: NEG
18869: PUSH
18870: LD_INT 1
18872: NEG
18873: PUSH
18874: EMPTY
18875: LIST
18876: LIST
18877: PUSH
18878: EMPTY
18879: LIST
18880: LIST
18881: LIST
18882: LIST
18883: LIST
18884: LIST
18885: LIST
18886: LIST
18887: LIST
18888: LIST
18889: LIST
18890: LIST
18891: ST_TO_ADDR
// ControlTower5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
18892: LD_ADDR_VAR 0 52
18896: PUSH
18897: LD_INT 0
18899: PUSH
18900: LD_INT 0
18902: PUSH
18903: EMPTY
18904: LIST
18905: LIST
18906: PUSH
18907: LD_INT 0
18909: PUSH
18910: LD_INT 1
18912: NEG
18913: PUSH
18914: EMPTY
18915: LIST
18916: LIST
18917: PUSH
18918: LD_INT 1
18920: PUSH
18921: LD_INT 0
18923: PUSH
18924: EMPTY
18925: LIST
18926: LIST
18927: PUSH
18928: LD_INT 1
18930: PUSH
18931: LD_INT 1
18933: PUSH
18934: EMPTY
18935: LIST
18936: LIST
18937: PUSH
18938: LD_INT 0
18940: PUSH
18941: LD_INT 1
18943: PUSH
18944: EMPTY
18945: LIST
18946: LIST
18947: PUSH
18948: LD_INT 1
18950: NEG
18951: PUSH
18952: LD_INT 0
18954: PUSH
18955: EMPTY
18956: LIST
18957: LIST
18958: PUSH
18959: LD_INT 1
18961: NEG
18962: PUSH
18963: LD_INT 1
18965: NEG
18966: PUSH
18967: EMPTY
18968: LIST
18969: LIST
18970: PUSH
18971: LD_INT 1
18973: NEG
18974: PUSH
18975: LD_INT 2
18977: NEG
18978: PUSH
18979: EMPTY
18980: LIST
18981: LIST
18982: PUSH
18983: LD_INT 1
18985: NEG
18986: PUSH
18987: LD_INT 1
18989: PUSH
18990: EMPTY
18991: LIST
18992: LIST
18993: PUSH
18994: LD_INT 2
18996: NEG
18997: PUSH
18998: LD_INT 0
19000: PUSH
19001: EMPTY
19002: LIST
19003: LIST
19004: PUSH
19005: LD_INT 2
19007: NEG
19008: PUSH
19009: LD_INT 1
19011: NEG
19012: PUSH
19013: EMPTY
19014: LIST
19015: LIST
19016: PUSH
19017: LD_INT 2
19019: NEG
19020: PUSH
19021: LD_INT 2
19023: NEG
19024: PUSH
19025: EMPTY
19026: LIST
19027: LIST
19028: PUSH
19029: EMPTY
19030: LIST
19031: LIST
19032: LIST
19033: LIST
19034: LIST
19035: LIST
19036: LIST
19037: LIST
19038: LIST
19039: LIST
19040: LIST
19041: LIST
19042: ST_TO_ADDR
// Barracks0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19043: LD_ADDR_VAR 0 53
19047: PUSH
19048: LD_INT 0
19050: PUSH
19051: LD_INT 0
19053: PUSH
19054: EMPTY
19055: LIST
19056: LIST
19057: PUSH
19058: LD_INT 0
19060: PUSH
19061: LD_INT 1
19063: NEG
19064: PUSH
19065: EMPTY
19066: LIST
19067: LIST
19068: PUSH
19069: LD_INT 1
19071: PUSH
19072: LD_INT 0
19074: PUSH
19075: EMPTY
19076: LIST
19077: LIST
19078: PUSH
19079: LD_INT 1
19081: PUSH
19082: LD_INT 1
19084: PUSH
19085: EMPTY
19086: LIST
19087: LIST
19088: PUSH
19089: LD_INT 0
19091: PUSH
19092: LD_INT 1
19094: PUSH
19095: EMPTY
19096: LIST
19097: LIST
19098: PUSH
19099: LD_INT 1
19101: NEG
19102: PUSH
19103: LD_INT 0
19105: PUSH
19106: EMPTY
19107: LIST
19108: LIST
19109: PUSH
19110: LD_INT 1
19112: NEG
19113: PUSH
19114: LD_INT 1
19116: NEG
19117: PUSH
19118: EMPTY
19119: LIST
19120: LIST
19121: PUSH
19122: LD_INT 1
19124: NEG
19125: PUSH
19126: LD_INT 2
19128: NEG
19129: PUSH
19130: EMPTY
19131: LIST
19132: LIST
19133: PUSH
19134: LD_INT 0
19136: PUSH
19137: LD_INT 2
19139: NEG
19140: PUSH
19141: EMPTY
19142: LIST
19143: LIST
19144: PUSH
19145: LD_INT 1
19147: PUSH
19148: LD_INT 1
19150: NEG
19151: PUSH
19152: EMPTY
19153: LIST
19154: LIST
19155: PUSH
19156: LD_INT 2
19158: PUSH
19159: LD_INT 0
19161: PUSH
19162: EMPTY
19163: LIST
19164: LIST
19165: PUSH
19166: LD_INT 2
19168: PUSH
19169: LD_INT 1
19171: PUSH
19172: EMPTY
19173: LIST
19174: LIST
19175: PUSH
19176: LD_INT 2
19178: PUSH
19179: LD_INT 2
19181: PUSH
19182: EMPTY
19183: LIST
19184: LIST
19185: PUSH
19186: LD_INT 1
19188: PUSH
19189: LD_INT 2
19191: PUSH
19192: EMPTY
19193: LIST
19194: LIST
19195: PUSH
19196: LD_INT 0
19198: PUSH
19199: LD_INT 2
19201: PUSH
19202: EMPTY
19203: LIST
19204: LIST
19205: PUSH
19206: LD_INT 1
19208: NEG
19209: PUSH
19210: LD_INT 1
19212: PUSH
19213: EMPTY
19214: LIST
19215: LIST
19216: PUSH
19217: LD_INT 2
19219: NEG
19220: PUSH
19221: LD_INT 0
19223: PUSH
19224: EMPTY
19225: LIST
19226: LIST
19227: PUSH
19228: LD_INT 2
19230: NEG
19231: PUSH
19232: LD_INT 1
19234: NEG
19235: PUSH
19236: EMPTY
19237: LIST
19238: LIST
19239: PUSH
19240: LD_INT 2
19242: NEG
19243: PUSH
19244: LD_INT 2
19246: NEG
19247: PUSH
19248: EMPTY
19249: LIST
19250: LIST
19251: PUSH
19252: EMPTY
19253: LIST
19254: LIST
19255: LIST
19256: LIST
19257: LIST
19258: LIST
19259: LIST
19260: LIST
19261: LIST
19262: LIST
19263: LIST
19264: LIST
19265: LIST
19266: LIST
19267: LIST
19268: LIST
19269: LIST
19270: LIST
19271: LIST
19272: ST_TO_ADDR
// Barracks1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19273: LD_ADDR_VAR 0 54
19277: PUSH
19278: LD_INT 0
19280: PUSH
19281: LD_INT 0
19283: PUSH
19284: EMPTY
19285: LIST
19286: LIST
19287: PUSH
19288: LD_INT 0
19290: PUSH
19291: LD_INT 1
19293: NEG
19294: PUSH
19295: EMPTY
19296: LIST
19297: LIST
19298: PUSH
19299: LD_INT 1
19301: PUSH
19302: LD_INT 0
19304: PUSH
19305: EMPTY
19306: LIST
19307: LIST
19308: PUSH
19309: LD_INT 1
19311: PUSH
19312: LD_INT 1
19314: PUSH
19315: EMPTY
19316: LIST
19317: LIST
19318: PUSH
19319: LD_INT 0
19321: PUSH
19322: LD_INT 1
19324: PUSH
19325: EMPTY
19326: LIST
19327: LIST
19328: PUSH
19329: LD_INT 1
19331: NEG
19332: PUSH
19333: LD_INT 0
19335: PUSH
19336: EMPTY
19337: LIST
19338: LIST
19339: PUSH
19340: LD_INT 1
19342: NEG
19343: PUSH
19344: LD_INT 1
19346: NEG
19347: PUSH
19348: EMPTY
19349: LIST
19350: LIST
19351: PUSH
19352: LD_INT 1
19354: NEG
19355: PUSH
19356: LD_INT 2
19358: NEG
19359: PUSH
19360: EMPTY
19361: LIST
19362: LIST
19363: PUSH
19364: LD_INT 0
19366: PUSH
19367: LD_INT 2
19369: NEG
19370: PUSH
19371: EMPTY
19372: LIST
19373: LIST
19374: PUSH
19375: LD_INT 1
19377: PUSH
19378: LD_INT 1
19380: NEG
19381: PUSH
19382: EMPTY
19383: LIST
19384: LIST
19385: PUSH
19386: LD_INT 2
19388: PUSH
19389: LD_INT 0
19391: PUSH
19392: EMPTY
19393: LIST
19394: LIST
19395: PUSH
19396: LD_INT 2
19398: PUSH
19399: LD_INT 1
19401: PUSH
19402: EMPTY
19403: LIST
19404: LIST
19405: PUSH
19406: LD_INT 2
19408: PUSH
19409: LD_INT 2
19411: PUSH
19412: EMPTY
19413: LIST
19414: LIST
19415: PUSH
19416: LD_INT 1
19418: PUSH
19419: LD_INT 2
19421: PUSH
19422: EMPTY
19423: LIST
19424: LIST
19425: PUSH
19426: LD_INT 0
19428: PUSH
19429: LD_INT 2
19431: PUSH
19432: EMPTY
19433: LIST
19434: LIST
19435: PUSH
19436: LD_INT 1
19438: NEG
19439: PUSH
19440: LD_INT 1
19442: PUSH
19443: EMPTY
19444: LIST
19445: LIST
19446: PUSH
19447: LD_INT 2
19449: NEG
19450: PUSH
19451: LD_INT 0
19453: PUSH
19454: EMPTY
19455: LIST
19456: LIST
19457: PUSH
19458: LD_INT 2
19460: NEG
19461: PUSH
19462: LD_INT 1
19464: NEG
19465: PUSH
19466: EMPTY
19467: LIST
19468: LIST
19469: PUSH
19470: LD_INT 2
19472: NEG
19473: PUSH
19474: LD_INT 2
19476: NEG
19477: PUSH
19478: EMPTY
19479: LIST
19480: LIST
19481: PUSH
19482: EMPTY
19483: LIST
19484: LIST
19485: LIST
19486: LIST
19487: LIST
19488: LIST
19489: LIST
19490: LIST
19491: LIST
19492: LIST
19493: LIST
19494: LIST
19495: LIST
19496: LIST
19497: LIST
19498: LIST
19499: LIST
19500: LIST
19501: LIST
19502: ST_TO_ADDR
// Barracks2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19503: LD_ADDR_VAR 0 55
19507: PUSH
19508: LD_INT 0
19510: PUSH
19511: LD_INT 0
19513: PUSH
19514: EMPTY
19515: LIST
19516: LIST
19517: PUSH
19518: LD_INT 0
19520: PUSH
19521: LD_INT 1
19523: NEG
19524: PUSH
19525: EMPTY
19526: LIST
19527: LIST
19528: PUSH
19529: LD_INT 1
19531: PUSH
19532: LD_INT 0
19534: PUSH
19535: EMPTY
19536: LIST
19537: LIST
19538: PUSH
19539: LD_INT 1
19541: PUSH
19542: LD_INT 1
19544: PUSH
19545: EMPTY
19546: LIST
19547: LIST
19548: PUSH
19549: LD_INT 0
19551: PUSH
19552: LD_INT 1
19554: PUSH
19555: EMPTY
19556: LIST
19557: LIST
19558: PUSH
19559: LD_INT 1
19561: NEG
19562: PUSH
19563: LD_INT 0
19565: PUSH
19566: EMPTY
19567: LIST
19568: LIST
19569: PUSH
19570: LD_INT 1
19572: NEG
19573: PUSH
19574: LD_INT 1
19576: NEG
19577: PUSH
19578: EMPTY
19579: LIST
19580: LIST
19581: PUSH
19582: LD_INT 1
19584: NEG
19585: PUSH
19586: LD_INT 2
19588: NEG
19589: PUSH
19590: EMPTY
19591: LIST
19592: LIST
19593: PUSH
19594: LD_INT 0
19596: PUSH
19597: LD_INT 2
19599: NEG
19600: PUSH
19601: EMPTY
19602: LIST
19603: LIST
19604: PUSH
19605: LD_INT 1
19607: PUSH
19608: LD_INT 1
19610: NEG
19611: PUSH
19612: EMPTY
19613: LIST
19614: LIST
19615: PUSH
19616: LD_INT 2
19618: PUSH
19619: LD_INT 0
19621: PUSH
19622: EMPTY
19623: LIST
19624: LIST
19625: PUSH
19626: LD_INT 2
19628: PUSH
19629: LD_INT 1
19631: PUSH
19632: EMPTY
19633: LIST
19634: LIST
19635: PUSH
19636: LD_INT 2
19638: PUSH
19639: LD_INT 2
19641: PUSH
19642: EMPTY
19643: LIST
19644: LIST
19645: PUSH
19646: LD_INT 1
19648: PUSH
19649: LD_INT 2
19651: PUSH
19652: EMPTY
19653: LIST
19654: LIST
19655: PUSH
19656: LD_INT 0
19658: PUSH
19659: LD_INT 2
19661: PUSH
19662: EMPTY
19663: LIST
19664: LIST
19665: PUSH
19666: LD_INT 1
19668: NEG
19669: PUSH
19670: LD_INT 1
19672: PUSH
19673: EMPTY
19674: LIST
19675: LIST
19676: PUSH
19677: LD_INT 2
19679: NEG
19680: PUSH
19681: LD_INT 0
19683: PUSH
19684: EMPTY
19685: LIST
19686: LIST
19687: PUSH
19688: LD_INT 2
19690: NEG
19691: PUSH
19692: LD_INT 1
19694: NEG
19695: PUSH
19696: EMPTY
19697: LIST
19698: LIST
19699: PUSH
19700: LD_INT 2
19702: NEG
19703: PUSH
19704: LD_INT 2
19706: NEG
19707: PUSH
19708: EMPTY
19709: LIST
19710: LIST
19711: PUSH
19712: EMPTY
19713: LIST
19714: LIST
19715: LIST
19716: LIST
19717: LIST
19718: LIST
19719: LIST
19720: LIST
19721: LIST
19722: LIST
19723: LIST
19724: LIST
19725: LIST
19726: LIST
19727: LIST
19728: LIST
19729: LIST
19730: LIST
19731: LIST
19732: ST_TO_ADDR
// Barracks3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19733: LD_ADDR_VAR 0 56
19737: PUSH
19738: LD_INT 0
19740: PUSH
19741: LD_INT 0
19743: PUSH
19744: EMPTY
19745: LIST
19746: LIST
19747: PUSH
19748: LD_INT 0
19750: PUSH
19751: LD_INT 1
19753: NEG
19754: PUSH
19755: EMPTY
19756: LIST
19757: LIST
19758: PUSH
19759: LD_INT 1
19761: PUSH
19762: LD_INT 0
19764: PUSH
19765: EMPTY
19766: LIST
19767: LIST
19768: PUSH
19769: LD_INT 1
19771: PUSH
19772: LD_INT 1
19774: PUSH
19775: EMPTY
19776: LIST
19777: LIST
19778: PUSH
19779: LD_INT 0
19781: PUSH
19782: LD_INT 1
19784: PUSH
19785: EMPTY
19786: LIST
19787: LIST
19788: PUSH
19789: LD_INT 1
19791: NEG
19792: PUSH
19793: LD_INT 0
19795: PUSH
19796: EMPTY
19797: LIST
19798: LIST
19799: PUSH
19800: LD_INT 1
19802: NEG
19803: PUSH
19804: LD_INT 1
19806: NEG
19807: PUSH
19808: EMPTY
19809: LIST
19810: LIST
19811: PUSH
19812: LD_INT 1
19814: NEG
19815: PUSH
19816: LD_INT 2
19818: NEG
19819: PUSH
19820: EMPTY
19821: LIST
19822: LIST
19823: PUSH
19824: LD_INT 0
19826: PUSH
19827: LD_INT 2
19829: NEG
19830: PUSH
19831: EMPTY
19832: LIST
19833: LIST
19834: PUSH
19835: LD_INT 1
19837: PUSH
19838: LD_INT 1
19840: NEG
19841: PUSH
19842: EMPTY
19843: LIST
19844: LIST
19845: PUSH
19846: LD_INT 2
19848: PUSH
19849: LD_INT 0
19851: PUSH
19852: EMPTY
19853: LIST
19854: LIST
19855: PUSH
19856: LD_INT 2
19858: PUSH
19859: LD_INT 1
19861: PUSH
19862: EMPTY
19863: LIST
19864: LIST
19865: PUSH
19866: LD_INT 2
19868: PUSH
19869: LD_INT 2
19871: PUSH
19872: EMPTY
19873: LIST
19874: LIST
19875: PUSH
19876: LD_INT 1
19878: PUSH
19879: LD_INT 2
19881: PUSH
19882: EMPTY
19883: LIST
19884: LIST
19885: PUSH
19886: LD_INT 0
19888: PUSH
19889: LD_INT 2
19891: PUSH
19892: EMPTY
19893: LIST
19894: LIST
19895: PUSH
19896: LD_INT 1
19898: NEG
19899: PUSH
19900: LD_INT 1
19902: PUSH
19903: EMPTY
19904: LIST
19905: LIST
19906: PUSH
19907: LD_INT 2
19909: NEG
19910: PUSH
19911: LD_INT 0
19913: PUSH
19914: EMPTY
19915: LIST
19916: LIST
19917: PUSH
19918: LD_INT 2
19920: NEG
19921: PUSH
19922: LD_INT 1
19924: NEG
19925: PUSH
19926: EMPTY
19927: LIST
19928: LIST
19929: PUSH
19930: LD_INT 2
19932: NEG
19933: PUSH
19934: LD_INT 2
19936: NEG
19937: PUSH
19938: EMPTY
19939: LIST
19940: LIST
19941: PUSH
19942: EMPTY
19943: LIST
19944: LIST
19945: LIST
19946: LIST
19947: LIST
19948: LIST
19949: LIST
19950: LIST
19951: LIST
19952: LIST
19953: LIST
19954: LIST
19955: LIST
19956: LIST
19957: LIST
19958: LIST
19959: LIST
19960: LIST
19961: LIST
19962: ST_TO_ADDR
// Barracks4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19963: LD_ADDR_VAR 0 57
19967: PUSH
19968: LD_INT 0
19970: PUSH
19971: LD_INT 0
19973: PUSH
19974: EMPTY
19975: LIST
19976: LIST
19977: PUSH
19978: LD_INT 0
19980: PUSH
19981: LD_INT 1
19983: NEG
19984: PUSH
19985: EMPTY
19986: LIST
19987: LIST
19988: PUSH
19989: LD_INT 1
19991: PUSH
19992: LD_INT 0
19994: PUSH
19995: EMPTY
19996: LIST
19997: LIST
19998: PUSH
19999: LD_INT 1
20001: PUSH
20002: LD_INT 1
20004: PUSH
20005: EMPTY
20006: LIST
20007: LIST
20008: PUSH
20009: LD_INT 0
20011: PUSH
20012: LD_INT 1
20014: PUSH
20015: EMPTY
20016: LIST
20017: LIST
20018: PUSH
20019: LD_INT 1
20021: NEG
20022: PUSH
20023: LD_INT 0
20025: PUSH
20026: EMPTY
20027: LIST
20028: LIST
20029: PUSH
20030: LD_INT 1
20032: NEG
20033: PUSH
20034: LD_INT 1
20036: NEG
20037: PUSH
20038: EMPTY
20039: LIST
20040: LIST
20041: PUSH
20042: LD_INT 1
20044: NEG
20045: PUSH
20046: LD_INT 2
20048: NEG
20049: PUSH
20050: EMPTY
20051: LIST
20052: LIST
20053: PUSH
20054: LD_INT 0
20056: PUSH
20057: LD_INT 2
20059: NEG
20060: PUSH
20061: EMPTY
20062: LIST
20063: LIST
20064: PUSH
20065: LD_INT 1
20067: PUSH
20068: LD_INT 1
20070: NEG
20071: PUSH
20072: EMPTY
20073: LIST
20074: LIST
20075: PUSH
20076: LD_INT 2
20078: PUSH
20079: LD_INT 0
20081: PUSH
20082: EMPTY
20083: LIST
20084: LIST
20085: PUSH
20086: LD_INT 2
20088: PUSH
20089: LD_INT 1
20091: PUSH
20092: EMPTY
20093: LIST
20094: LIST
20095: PUSH
20096: LD_INT 2
20098: PUSH
20099: LD_INT 2
20101: PUSH
20102: EMPTY
20103: LIST
20104: LIST
20105: PUSH
20106: LD_INT 1
20108: PUSH
20109: LD_INT 2
20111: PUSH
20112: EMPTY
20113: LIST
20114: LIST
20115: PUSH
20116: LD_INT 0
20118: PUSH
20119: LD_INT 2
20121: PUSH
20122: EMPTY
20123: LIST
20124: LIST
20125: PUSH
20126: LD_INT 1
20128: NEG
20129: PUSH
20130: LD_INT 1
20132: PUSH
20133: EMPTY
20134: LIST
20135: LIST
20136: PUSH
20137: LD_INT 2
20139: NEG
20140: PUSH
20141: LD_INT 0
20143: PUSH
20144: EMPTY
20145: LIST
20146: LIST
20147: PUSH
20148: LD_INT 2
20150: NEG
20151: PUSH
20152: LD_INT 1
20154: NEG
20155: PUSH
20156: EMPTY
20157: LIST
20158: LIST
20159: PUSH
20160: LD_INT 2
20162: NEG
20163: PUSH
20164: LD_INT 2
20166: NEG
20167: PUSH
20168: EMPTY
20169: LIST
20170: LIST
20171: PUSH
20172: EMPTY
20173: LIST
20174: LIST
20175: LIST
20176: LIST
20177: LIST
20178: LIST
20179: LIST
20180: LIST
20181: LIST
20182: LIST
20183: LIST
20184: LIST
20185: LIST
20186: LIST
20187: LIST
20188: LIST
20189: LIST
20190: LIST
20191: LIST
20192: ST_TO_ADDR
// Barracks5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
20193: LD_ADDR_VAR 0 58
20197: PUSH
20198: LD_INT 0
20200: PUSH
20201: LD_INT 0
20203: PUSH
20204: EMPTY
20205: LIST
20206: LIST
20207: PUSH
20208: LD_INT 0
20210: PUSH
20211: LD_INT 1
20213: NEG
20214: PUSH
20215: EMPTY
20216: LIST
20217: LIST
20218: PUSH
20219: LD_INT 1
20221: PUSH
20222: LD_INT 0
20224: PUSH
20225: EMPTY
20226: LIST
20227: LIST
20228: PUSH
20229: LD_INT 1
20231: PUSH
20232: LD_INT 1
20234: PUSH
20235: EMPTY
20236: LIST
20237: LIST
20238: PUSH
20239: LD_INT 0
20241: PUSH
20242: LD_INT 1
20244: PUSH
20245: EMPTY
20246: LIST
20247: LIST
20248: PUSH
20249: LD_INT 1
20251: NEG
20252: PUSH
20253: LD_INT 0
20255: PUSH
20256: EMPTY
20257: LIST
20258: LIST
20259: PUSH
20260: LD_INT 1
20262: NEG
20263: PUSH
20264: LD_INT 1
20266: NEG
20267: PUSH
20268: EMPTY
20269: LIST
20270: LIST
20271: PUSH
20272: LD_INT 1
20274: NEG
20275: PUSH
20276: LD_INT 2
20278: NEG
20279: PUSH
20280: EMPTY
20281: LIST
20282: LIST
20283: PUSH
20284: LD_INT 0
20286: PUSH
20287: LD_INT 2
20289: NEG
20290: PUSH
20291: EMPTY
20292: LIST
20293: LIST
20294: PUSH
20295: LD_INT 1
20297: PUSH
20298: LD_INT 1
20300: NEG
20301: PUSH
20302: EMPTY
20303: LIST
20304: LIST
20305: PUSH
20306: LD_INT 2
20308: PUSH
20309: LD_INT 0
20311: PUSH
20312: EMPTY
20313: LIST
20314: LIST
20315: PUSH
20316: LD_INT 2
20318: PUSH
20319: LD_INT 1
20321: PUSH
20322: EMPTY
20323: LIST
20324: LIST
20325: PUSH
20326: LD_INT 2
20328: PUSH
20329: LD_INT 2
20331: PUSH
20332: EMPTY
20333: LIST
20334: LIST
20335: PUSH
20336: LD_INT 1
20338: PUSH
20339: LD_INT 2
20341: PUSH
20342: EMPTY
20343: LIST
20344: LIST
20345: PUSH
20346: LD_INT 0
20348: PUSH
20349: LD_INT 2
20351: PUSH
20352: EMPTY
20353: LIST
20354: LIST
20355: PUSH
20356: LD_INT 1
20358: NEG
20359: PUSH
20360: LD_INT 1
20362: PUSH
20363: EMPTY
20364: LIST
20365: LIST
20366: PUSH
20367: LD_INT 2
20369: NEG
20370: PUSH
20371: LD_INT 0
20373: PUSH
20374: EMPTY
20375: LIST
20376: LIST
20377: PUSH
20378: LD_INT 2
20380: NEG
20381: PUSH
20382: LD_INT 1
20384: NEG
20385: PUSH
20386: EMPTY
20387: LIST
20388: LIST
20389: PUSH
20390: LD_INT 2
20392: NEG
20393: PUSH
20394: LD_INT 2
20396: NEG
20397: PUSH
20398: EMPTY
20399: LIST
20400: LIST
20401: PUSH
20402: EMPTY
20403: LIST
20404: LIST
20405: LIST
20406: LIST
20407: LIST
20408: LIST
20409: LIST
20410: LIST
20411: LIST
20412: LIST
20413: LIST
20414: LIST
20415: LIST
20416: LIST
20417: LIST
20418: LIST
20419: LIST
20420: LIST
20421: LIST
20422: ST_TO_ADDR
// Bunker0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20423: LD_ADDR_VAR 0 59
20427: PUSH
20428: LD_INT 0
20430: PUSH
20431: LD_INT 0
20433: PUSH
20434: EMPTY
20435: LIST
20436: LIST
20437: PUSH
20438: LD_INT 0
20440: PUSH
20441: LD_INT 1
20443: NEG
20444: PUSH
20445: EMPTY
20446: LIST
20447: LIST
20448: PUSH
20449: LD_INT 1
20451: PUSH
20452: LD_INT 0
20454: PUSH
20455: EMPTY
20456: LIST
20457: LIST
20458: PUSH
20459: LD_INT 1
20461: PUSH
20462: LD_INT 1
20464: PUSH
20465: EMPTY
20466: LIST
20467: LIST
20468: PUSH
20469: LD_INT 0
20471: PUSH
20472: LD_INT 1
20474: PUSH
20475: EMPTY
20476: LIST
20477: LIST
20478: PUSH
20479: LD_INT 1
20481: NEG
20482: PUSH
20483: LD_INT 0
20485: PUSH
20486: EMPTY
20487: LIST
20488: LIST
20489: PUSH
20490: LD_INT 1
20492: NEG
20493: PUSH
20494: LD_INT 1
20496: NEG
20497: PUSH
20498: EMPTY
20499: LIST
20500: LIST
20501: PUSH
20502: EMPTY
20503: LIST
20504: LIST
20505: LIST
20506: LIST
20507: LIST
20508: LIST
20509: LIST
20510: ST_TO_ADDR
// Bunker1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20511: LD_ADDR_VAR 0 60
20515: PUSH
20516: LD_INT 0
20518: PUSH
20519: LD_INT 0
20521: PUSH
20522: EMPTY
20523: LIST
20524: LIST
20525: PUSH
20526: LD_INT 0
20528: PUSH
20529: LD_INT 1
20531: NEG
20532: PUSH
20533: EMPTY
20534: LIST
20535: LIST
20536: PUSH
20537: LD_INT 1
20539: PUSH
20540: LD_INT 0
20542: PUSH
20543: EMPTY
20544: LIST
20545: LIST
20546: PUSH
20547: LD_INT 1
20549: PUSH
20550: LD_INT 1
20552: PUSH
20553: EMPTY
20554: LIST
20555: LIST
20556: PUSH
20557: LD_INT 0
20559: PUSH
20560: LD_INT 1
20562: PUSH
20563: EMPTY
20564: LIST
20565: LIST
20566: PUSH
20567: LD_INT 1
20569: NEG
20570: PUSH
20571: LD_INT 0
20573: PUSH
20574: EMPTY
20575: LIST
20576: LIST
20577: PUSH
20578: LD_INT 1
20580: NEG
20581: PUSH
20582: LD_INT 1
20584: NEG
20585: PUSH
20586: EMPTY
20587: LIST
20588: LIST
20589: PUSH
20590: EMPTY
20591: LIST
20592: LIST
20593: LIST
20594: LIST
20595: LIST
20596: LIST
20597: LIST
20598: ST_TO_ADDR
// Bunker2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20599: LD_ADDR_VAR 0 61
20603: PUSH
20604: LD_INT 0
20606: PUSH
20607: LD_INT 0
20609: PUSH
20610: EMPTY
20611: LIST
20612: LIST
20613: PUSH
20614: LD_INT 0
20616: PUSH
20617: LD_INT 1
20619: NEG
20620: PUSH
20621: EMPTY
20622: LIST
20623: LIST
20624: PUSH
20625: LD_INT 1
20627: PUSH
20628: LD_INT 0
20630: PUSH
20631: EMPTY
20632: LIST
20633: LIST
20634: PUSH
20635: LD_INT 1
20637: PUSH
20638: LD_INT 1
20640: PUSH
20641: EMPTY
20642: LIST
20643: LIST
20644: PUSH
20645: LD_INT 0
20647: PUSH
20648: LD_INT 1
20650: PUSH
20651: EMPTY
20652: LIST
20653: LIST
20654: PUSH
20655: LD_INT 1
20657: NEG
20658: PUSH
20659: LD_INT 0
20661: PUSH
20662: EMPTY
20663: LIST
20664: LIST
20665: PUSH
20666: LD_INT 1
20668: NEG
20669: PUSH
20670: LD_INT 1
20672: NEG
20673: PUSH
20674: EMPTY
20675: LIST
20676: LIST
20677: PUSH
20678: EMPTY
20679: LIST
20680: LIST
20681: LIST
20682: LIST
20683: LIST
20684: LIST
20685: LIST
20686: ST_TO_ADDR
// Bunker3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20687: LD_ADDR_VAR 0 62
20691: PUSH
20692: LD_INT 0
20694: PUSH
20695: LD_INT 0
20697: PUSH
20698: EMPTY
20699: LIST
20700: LIST
20701: PUSH
20702: LD_INT 0
20704: PUSH
20705: LD_INT 1
20707: NEG
20708: PUSH
20709: EMPTY
20710: LIST
20711: LIST
20712: PUSH
20713: LD_INT 1
20715: PUSH
20716: LD_INT 0
20718: PUSH
20719: EMPTY
20720: LIST
20721: LIST
20722: PUSH
20723: LD_INT 1
20725: PUSH
20726: LD_INT 1
20728: PUSH
20729: EMPTY
20730: LIST
20731: LIST
20732: PUSH
20733: LD_INT 0
20735: PUSH
20736: LD_INT 1
20738: PUSH
20739: EMPTY
20740: LIST
20741: LIST
20742: PUSH
20743: LD_INT 1
20745: NEG
20746: PUSH
20747: LD_INT 0
20749: PUSH
20750: EMPTY
20751: LIST
20752: LIST
20753: PUSH
20754: LD_INT 1
20756: NEG
20757: PUSH
20758: LD_INT 1
20760: NEG
20761: PUSH
20762: EMPTY
20763: LIST
20764: LIST
20765: PUSH
20766: EMPTY
20767: LIST
20768: LIST
20769: LIST
20770: LIST
20771: LIST
20772: LIST
20773: LIST
20774: ST_TO_ADDR
// Bunker4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20775: LD_ADDR_VAR 0 63
20779: PUSH
20780: LD_INT 0
20782: PUSH
20783: LD_INT 0
20785: PUSH
20786: EMPTY
20787: LIST
20788: LIST
20789: PUSH
20790: LD_INT 0
20792: PUSH
20793: LD_INT 1
20795: NEG
20796: PUSH
20797: EMPTY
20798: LIST
20799: LIST
20800: PUSH
20801: LD_INT 1
20803: PUSH
20804: LD_INT 0
20806: PUSH
20807: EMPTY
20808: LIST
20809: LIST
20810: PUSH
20811: LD_INT 1
20813: PUSH
20814: LD_INT 1
20816: PUSH
20817: EMPTY
20818: LIST
20819: LIST
20820: PUSH
20821: LD_INT 0
20823: PUSH
20824: LD_INT 1
20826: PUSH
20827: EMPTY
20828: LIST
20829: LIST
20830: PUSH
20831: LD_INT 1
20833: NEG
20834: PUSH
20835: LD_INT 0
20837: PUSH
20838: EMPTY
20839: LIST
20840: LIST
20841: PUSH
20842: LD_INT 1
20844: NEG
20845: PUSH
20846: LD_INT 1
20848: NEG
20849: PUSH
20850: EMPTY
20851: LIST
20852: LIST
20853: PUSH
20854: EMPTY
20855: LIST
20856: LIST
20857: LIST
20858: LIST
20859: LIST
20860: LIST
20861: LIST
20862: ST_TO_ADDR
// Bunker5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20863: LD_ADDR_VAR 0 64
20867: PUSH
20868: LD_INT 0
20870: PUSH
20871: LD_INT 0
20873: PUSH
20874: EMPTY
20875: LIST
20876: LIST
20877: PUSH
20878: LD_INT 0
20880: PUSH
20881: LD_INT 1
20883: NEG
20884: PUSH
20885: EMPTY
20886: LIST
20887: LIST
20888: PUSH
20889: LD_INT 1
20891: PUSH
20892: LD_INT 0
20894: PUSH
20895: EMPTY
20896: LIST
20897: LIST
20898: PUSH
20899: LD_INT 1
20901: PUSH
20902: LD_INT 1
20904: PUSH
20905: EMPTY
20906: LIST
20907: LIST
20908: PUSH
20909: LD_INT 0
20911: PUSH
20912: LD_INT 1
20914: PUSH
20915: EMPTY
20916: LIST
20917: LIST
20918: PUSH
20919: LD_INT 1
20921: NEG
20922: PUSH
20923: LD_INT 0
20925: PUSH
20926: EMPTY
20927: LIST
20928: LIST
20929: PUSH
20930: LD_INT 1
20932: NEG
20933: PUSH
20934: LD_INT 1
20936: NEG
20937: PUSH
20938: EMPTY
20939: LIST
20940: LIST
20941: PUSH
20942: EMPTY
20943: LIST
20944: LIST
20945: LIST
20946: LIST
20947: LIST
20948: LIST
20949: LIST
20950: ST_TO_ADDR
// end ; 1 :
20951: GO 26848
20953: LD_INT 1
20955: DOUBLE
20956: EQUAL
20957: IFTRUE 20961
20959: GO 23584
20961: POP
// begin DepotAm0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
20962: LD_ADDR_VAR 0 11
20966: PUSH
20967: LD_INT 1
20969: NEG
20970: PUSH
20971: LD_INT 3
20973: NEG
20974: PUSH
20975: EMPTY
20976: LIST
20977: LIST
20978: PUSH
20979: LD_INT 0
20981: PUSH
20982: LD_INT 3
20984: NEG
20985: PUSH
20986: EMPTY
20987: LIST
20988: LIST
20989: PUSH
20990: LD_INT 1
20992: PUSH
20993: LD_INT 2
20995: NEG
20996: PUSH
20997: EMPTY
20998: LIST
20999: LIST
21000: PUSH
21001: EMPTY
21002: LIST
21003: LIST
21004: LIST
21005: ST_TO_ADDR
// DepotAm1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
21006: LD_ADDR_VAR 0 12
21010: PUSH
21011: LD_INT 2
21013: PUSH
21014: LD_INT 1
21016: NEG
21017: PUSH
21018: EMPTY
21019: LIST
21020: LIST
21021: PUSH
21022: LD_INT 3
21024: PUSH
21025: LD_INT 0
21027: PUSH
21028: EMPTY
21029: LIST
21030: LIST
21031: PUSH
21032: LD_INT 3
21034: PUSH
21035: LD_INT 1
21037: PUSH
21038: EMPTY
21039: LIST
21040: LIST
21041: PUSH
21042: EMPTY
21043: LIST
21044: LIST
21045: LIST
21046: ST_TO_ADDR
// DepotAm2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
21047: LD_ADDR_VAR 0 13
21051: PUSH
21052: LD_INT 3
21054: PUSH
21055: LD_INT 2
21057: PUSH
21058: EMPTY
21059: LIST
21060: LIST
21061: PUSH
21062: LD_INT 3
21064: PUSH
21065: LD_INT 3
21067: PUSH
21068: EMPTY
21069: LIST
21070: LIST
21071: PUSH
21072: LD_INT 2
21074: PUSH
21075: LD_INT 3
21077: PUSH
21078: EMPTY
21079: LIST
21080: LIST
21081: PUSH
21082: EMPTY
21083: LIST
21084: LIST
21085: LIST
21086: ST_TO_ADDR
// DepotAm3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
21087: LD_ADDR_VAR 0 14
21091: PUSH
21092: LD_INT 1
21094: PUSH
21095: LD_INT 3
21097: PUSH
21098: EMPTY
21099: LIST
21100: LIST
21101: PUSH
21102: LD_INT 0
21104: PUSH
21105: LD_INT 3
21107: PUSH
21108: EMPTY
21109: LIST
21110: LIST
21111: PUSH
21112: LD_INT 1
21114: NEG
21115: PUSH
21116: LD_INT 2
21118: PUSH
21119: EMPTY
21120: LIST
21121: LIST
21122: PUSH
21123: EMPTY
21124: LIST
21125: LIST
21126: LIST
21127: ST_TO_ADDR
// DepotAm4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
21128: LD_ADDR_VAR 0 15
21132: PUSH
21133: LD_INT 2
21135: NEG
21136: PUSH
21137: LD_INT 1
21139: PUSH
21140: EMPTY
21141: LIST
21142: LIST
21143: PUSH
21144: LD_INT 3
21146: NEG
21147: PUSH
21148: LD_INT 0
21150: PUSH
21151: EMPTY
21152: LIST
21153: LIST
21154: PUSH
21155: LD_INT 3
21157: NEG
21158: PUSH
21159: LD_INT 1
21161: NEG
21162: PUSH
21163: EMPTY
21164: LIST
21165: LIST
21166: PUSH
21167: EMPTY
21168: LIST
21169: LIST
21170: LIST
21171: ST_TO_ADDR
// DepotAm5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
21172: LD_ADDR_VAR 0 16
21176: PUSH
21177: LD_INT 2
21179: NEG
21180: PUSH
21181: LD_INT 3
21183: NEG
21184: PUSH
21185: EMPTY
21186: LIST
21187: LIST
21188: PUSH
21189: LD_INT 3
21191: NEG
21192: PUSH
21193: LD_INT 2
21195: NEG
21196: PUSH
21197: EMPTY
21198: LIST
21199: LIST
21200: PUSH
21201: LD_INT 3
21203: NEG
21204: PUSH
21205: LD_INT 3
21207: NEG
21208: PUSH
21209: EMPTY
21210: LIST
21211: LIST
21212: PUSH
21213: EMPTY
21214: LIST
21215: LIST
21216: LIST
21217: ST_TO_ADDR
// DepotAr0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
21218: LD_ADDR_VAR 0 17
21222: PUSH
21223: LD_INT 1
21225: NEG
21226: PUSH
21227: LD_INT 3
21229: NEG
21230: PUSH
21231: EMPTY
21232: LIST
21233: LIST
21234: PUSH
21235: LD_INT 0
21237: PUSH
21238: LD_INT 3
21240: NEG
21241: PUSH
21242: EMPTY
21243: LIST
21244: LIST
21245: PUSH
21246: LD_INT 1
21248: PUSH
21249: LD_INT 2
21251: NEG
21252: PUSH
21253: EMPTY
21254: LIST
21255: LIST
21256: PUSH
21257: EMPTY
21258: LIST
21259: LIST
21260: LIST
21261: ST_TO_ADDR
// DepotAr1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
21262: LD_ADDR_VAR 0 18
21266: PUSH
21267: LD_INT 2
21269: PUSH
21270: LD_INT 1
21272: NEG
21273: PUSH
21274: EMPTY
21275: LIST
21276: LIST
21277: PUSH
21278: LD_INT 3
21280: PUSH
21281: LD_INT 0
21283: PUSH
21284: EMPTY
21285: LIST
21286: LIST
21287: PUSH
21288: LD_INT 3
21290: PUSH
21291: LD_INT 1
21293: PUSH
21294: EMPTY
21295: LIST
21296: LIST
21297: PUSH
21298: EMPTY
21299: LIST
21300: LIST
21301: LIST
21302: ST_TO_ADDR
// DepotAr2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
21303: LD_ADDR_VAR 0 19
21307: PUSH
21308: LD_INT 3
21310: PUSH
21311: LD_INT 2
21313: PUSH
21314: EMPTY
21315: LIST
21316: LIST
21317: PUSH
21318: LD_INT 3
21320: PUSH
21321: LD_INT 3
21323: PUSH
21324: EMPTY
21325: LIST
21326: LIST
21327: PUSH
21328: LD_INT 2
21330: PUSH
21331: LD_INT 3
21333: PUSH
21334: EMPTY
21335: LIST
21336: LIST
21337: PUSH
21338: EMPTY
21339: LIST
21340: LIST
21341: LIST
21342: ST_TO_ADDR
// DepotAr3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
21343: LD_ADDR_VAR 0 20
21347: PUSH
21348: LD_INT 1
21350: PUSH
21351: LD_INT 3
21353: PUSH
21354: EMPTY
21355: LIST
21356: LIST
21357: PUSH
21358: LD_INT 0
21360: PUSH
21361: LD_INT 3
21363: PUSH
21364: EMPTY
21365: LIST
21366: LIST
21367: PUSH
21368: LD_INT 1
21370: NEG
21371: PUSH
21372: LD_INT 2
21374: PUSH
21375: EMPTY
21376: LIST
21377: LIST
21378: PUSH
21379: EMPTY
21380: LIST
21381: LIST
21382: LIST
21383: ST_TO_ADDR
// DepotAr4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
21384: LD_ADDR_VAR 0 21
21388: PUSH
21389: LD_INT 2
21391: NEG
21392: PUSH
21393: LD_INT 1
21395: PUSH
21396: EMPTY
21397: LIST
21398: LIST
21399: PUSH
21400: LD_INT 3
21402: NEG
21403: PUSH
21404: LD_INT 0
21406: PUSH
21407: EMPTY
21408: LIST
21409: LIST
21410: PUSH
21411: LD_INT 3
21413: NEG
21414: PUSH
21415: LD_INT 1
21417: NEG
21418: PUSH
21419: EMPTY
21420: LIST
21421: LIST
21422: PUSH
21423: EMPTY
21424: LIST
21425: LIST
21426: LIST
21427: ST_TO_ADDR
// DepotAr5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
21428: LD_ADDR_VAR 0 22
21432: PUSH
21433: LD_INT 2
21435: NEG
21436: PUSH
21437: LD_INT 3
21439: NEG
21440: PUSH
21441: EMPTY
21442: LIST
21443: LIST
21444: PUSH
21445: LD_INT 3
21447: NEG
21448: PUSH
21449: LD_INT 2
21451: NEG
21452: PUSH
21453: EMPTY
21454: LIST
21455: LIST
21456: PUSH
21457: LD_INT 3
21459: NEG
21460: PUSH
21461: LD_INT 3
21463: NEG
21464: PUSH
21465: EMPTY
21466: LIST
21467: LIST
21468: PUSH
21469: EMPTY
21470: LIST
21471: LIST
21472: LIST
21473: ST_TO_ADDR
// DepotRu0 = [ [ 0 , - 3 ] , [ - 1 , - 4 ] , [ 1 , - 3 ] ] ;
21474: LD_ADDR_VAR 0 23
21478: PUSH
21479: LD_INT 0
21481: PUSH
21482: LD_INT 3
21484: NEG
21485: PUSH
21486: EMPTY
21487: LIST
21488: LIST
21489: PUSH
21490: LD_INT 1
21492: NEG
21493: PUSH
21494: LD_INT 4
21496: NEG
21497: PUSH
21498: EMPTY
21499: LIST
21500: LIST
21501: PUSH
21502: LD_INT 1
21504: PUSH
21505: LD_INT 3
21507: NEG
21508: PUSH
21509: EMPTY
21510: LIST
21511: LIST
21512: PUSH
21513: EMPTY
21514: LIST
21515: LIST
21516: LIST
21517: ST_TO_ADDR
// DepotRu1 = [ [ 3 , 0 ] , [ 3 , - 1 ] , [ 4 , 1 ] ] ;
21518: LD_ADDR_VAR 0 24
21522: PUSH
21523: LD_INT 3
21525: PUSH
21526: LD_INT 0
21528: PUSH
21529: EMPTY
21530: LIST
21531: LIST
21532: PUSH
21533: LD_INT 3
21535: PUSH
21536: LD_INT 1
21538: NEG
21539: PUSH
21540: EMPTY
21541: LIST
21542: LIST
21543: PUSH
21544: LD_INT 4
21546: PUSH
21547: LD_INT 1
21549: PUSH
21550: EMPTY
21551: LIST
21552: LIST
21553: PUSH
21554: EMPTY
21555: LIST
21556: LIST
21557: LIST
21558: ST_TO_ADDR
// DepotRu2 = [ [ 3 , 3 ] , [ 4 , 3 ] , [ 3 , 4 ] ] ;
21559: LD_ADDR_VAR 0 25
21563: PUSH
21564: LD_INT 3
21566: PUSH
21567: LD_INT 3
21569: PUSH
21570: EMPTY
21571: LIST
21572: LIST
21573: PUSH
21574: LD_INT 4
21576: PUSH
21577: LD_INT 3
21579: PUSH
21580: EMPTY
21581: LIST
21582: LIST
21583: PUSH
21584: LD_INT 3
21586: PUSH
21587: LD_INT 4
21589: PUSH
21590: EMPTY
21591: LIST
21592: LIST
21593: PUSH
21594: EMPTY
21595: LIST
21596: LIST
21597: LIST
21598: ST_TO_ADDR
// DepotRu3 = [ [ 0 , 3 ] , [ 1 , 4 ] , [ - 1 , 3 ] ] ;
21599: LD_ADDR_VAR 0 26
21603: PUSH
21604: LD_INT 0
21606: PUSH
21607: LD_INT 3
21609: PUSH
21610: EMPTY
21611: LIST
21612: LIST
21613: PUSH
21614: LD_INT 1
21616: PUSH
21617: LD_INT 4
21619: PUSH
21620: EMPTY
21621: LIST
21622: LIST
21623: PUSH
21624: LD_INT 1
21626: NEG
21627: PUSH
21628: LD_INT 3
21630: PUSH
21631: EMPTY
21632: LIST
21633: LIST
21634: PUSH
21635: EMPTY
21636: LIST
21637: LIST
21638: LIST
21639: ST_TO_ADDR
// DepotRu4 = [ [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , - 1 ] ] ;
21640: LD_ADDR_VAR 0 27
21644: PUSH
21645: LD_INT 3
21647: NEG
21648: PUSH
21649: LD_INT 0
21651: PUSH
21652: EMPTY
21653: LIST
21654: LIST
21655: PUSH
21656: LD_INT 3
21658: NEG
21659: PUSH
21660: LD_INT 1
21662: PUSH
21663: EMPTY
21664: LIST
21665: LIST
21666: PUSH
21667: LD_INT 4
21669: NEG
21670: PUSH
21671: LD_INT 1
21673: NEG
21674: PUSH
21675: EMPTY
21676: LIST
21677: LIST
21678: PUSH
21679: EMPTY
21680: LIST
21681: LIST
21682: LIST
21683: ST_TO_ADDR
// DepotRu5 = [ [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 4 , - 3 ] ] ;
21684: LD_ADDR_VAR 0 28
21688: PUSH
21689: LD_INT 3
21691: NEG
21692: PUSH
21693: LD_INT 3
21695: NEG
21696: PUSH
21697: EMPTY
21698: LIST
21699: LIST
21700: PUSH
21701: LD_INT 3
21703: NEG
21704: PUSH
21705: LD_INT 4
21707: NEG
21708: PUSH
21709: EMPTY
21710: LIST
21711: LIST
21712: PUSH
21713: LD_INT 4
21715: NEG
21716: PUSH
21717: LD_INT 3
21719: NEG
21720: PUSH
21721: EMPTY
21722: LIST
21723: LIST
21724: PUSH
21725: EMPTY
21726: LIST
21727: LIST
21728: LIST
21729: ST_TO_ADDR
// Factory0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ - 1 , - 4 ] , [ 0 , - 4 ] , [ 1 , - 3 ] , [ - 1 , - 5 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ - 1 , - 6 ] , [ 0 , - 6 ] , [ 1 , - 5 ] ] ;
21730: LD_ADDR_VAR 0 29
21734: PUSH
21735: LD_INT 1
21737: NEG
21738: PUSH
21739: LD_INT 3
21741: NEG
21742: PUSH
21743: EMPTY
21744: LIST
21745: LIST
21746: PUSH
21747: LD_INT 0
21749: PUSH
21750: LD_INT 3
21752: NEG
21753: PUSH
21754: EMPTY
21755: LIST
21756: LIST
21757: PUSH
21758: LD_INT 1
21760: PUSH
21761: LD_INT 2
21763: NEG
21764: PUSH
21765: EMPTY
21766: LIST
21767: LIST
21768: PUSH
21769: LD_INT 1
21771: NEG
21772: PUSH
21773: LD_INT 4
21775: NEG
21776: PUSH
21777: EMPTY
21778: LIST
21779: LIST
21780: PUSH
21781: LD_INT 0
21783: PUSH
21784: LD_INT 4
21786: NEG
21787: PUSH
21788: EMPTY
21789: LIST
21790: LIST
21791: PUSH
21792: LD_INT 1
21794: PUSH
21795: LD_INT 3
21797: NEG
21798: PUSH
21799: EMPTY
21800: LIST
21801: LIST
21802: PUSH
21803: LD_INT 1
21805: NEG
21806: PUSH
21807: LD_INT 5
21809: NEG
21810: PUSH
21811: EMPTY
21812: LIST
21813: LIST
21814: PUSH
21815: LD_INT 0
21817: PUSH
21818: LD_INT 5
21820: NEG
21821: PUSH
21822: EMPTY
21823: LIST
21824: LIST
21825: PUSH
21826: LD_INT 1
21828: PUSH
21829: LD_INT 4
21831: NEG
21832: PUSH
21833: EMPTY
21834: LIST
21835: LIST
21836: PUSH
21837: LD_INT 1
21839: NEG
21840: PUSH
21841: LD_INT 6
21843: NEG
21844: PUSH
21845: EMPTY
21846: LIST
21847: LIST
21848: PUSH
21849: LD_INT 0
21851: PUSH
21852: LD_INT 6
21854: NEG
21855: PUSH
21856: EMPTY
21857: LIST
21858: LIST
21859: PUSH
21860: LD_INT 1
21862: PUSH
21863: LD_INT 5
21865: NEG
21866: PUSH
21867: EMPTY
21868: LIST
21869: LIST
21870: PUSH
21871: EMPTY
21872: LIST
21873: LIST
21874: LIST
21875: LIST
21876: LIST
21877: LIST
21878: LIST
21879: LIST
21880: LIST
21881: LIST
21882: LIST
21883: LIST
21884: ST_TO_ADDR
// Factory1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 3 , - 1 ] , [ 4 , 0 ] , [ 4 , 1 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 5 , - 1 ] , [ 6 , 0 ] , [ 6 , 1 ] ] ;
21885: LD_ADDR_VAR 0 30
21889: PUSH
21890: LD_INT 2
21892: PUSH
21893: LD_INT 1
21895: NEG
21896: PUSH
21897: EMPTY
21898: LIST
21899: LIST
21900: PUSH
21901: LD_INT 3
21903: PUSH
21904: LD_INT 0
21906: PUSH
21907: EMPTY
21908: LIST
21909: LIST
21910: PUSH
21911: LD_INT 3
21913: PUSH
21914: LD_INT 1
21916: PUSH
21917: EMPTY
21918: LIST
21919: LIST
21920: PUSH
21921: LD_INT 3
21923: PUSH
21924: LD_INT 1
21926: NEG
21927: PUSH
21928: EMPTY
21929: LIST
21930: LIST
21931: PUSH
21932: LD_INT 4
21934: PUSH
21935: LD_INT 0
21937: PUSH
21938: EMPTY
21939: LIST
21940: LIST
21941: PUSH
21942: LD_INT 4
21944: PUSH
21945: LD_INT 1
21947: PUSH
21948: EMPTY
21949: LIST
21950: LIST
21951: PUSH
21952: LD_INT 4
21954: PUSH
21955: LD_INT 1
21957: NEG
21958: PUSH
21959: EMPTY
21960: LIST
21961: LIST
21962: PUSH
21963: LD_INT 5
21965: PUSH
21966: LD_INT 0
21968: PUSH
21969: EMPTY
21970: LIST
21971: LIST
21972: PUSH
21973: LD_INT 5
21975: PUSH
21976: LD_INT 1
21978: PUSH
21979: EMPTY
21980: LIST
21981: LIST
21982: PUSH
21983: LD_INT 5
21985: PUSH
21986: LD_INT 1
21988: NEG
21989: PUSH
21990: EMPTY
21991: LIST
21992: LIST
21993: PUSH
21994: LD_INT 6
21996: PUSH
21997: LD_INT 0
21999: PUSH
22000: EMPTY
22001: LIST
22002: LIST
22003: PUSH
22004: LD_INT 6
22006: PUSH
22007: LD_INT 1
22009: PUSH
22010: EMPTY
22011: LIST
22012: LIST
22013: PUSH
22014: EMPTY
22015: LIST
22016: LIST
22017: LIST
22018: LIST
22019: LIST
22020: LIST
22021: LIST
22022: LIST
22023: LIST
22024: LIST
22025: LIST
22026: LIST
22027: ST_TO_ADDR
// Factory2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ 4 , 3 ] , [ 4 , 4 ] , [ 3 , 4 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 6 , 5 ] , [ 6 , 6 ] , [ 5 , 6 ] ] ;
22028: LD_ADDR_VAR 0 31
22032: PUSH
22033: LD_INT 3
22035: PUSH
22036: LD_INT 2
22038: PUSH
22039: EMPTY
22040: LIST
22041: LIST
22042: PUSH
22043: LD_INT 3
22045: PUSH
22046: LD_INT 3
22048: PUSH
22049: EMPTY
22050: LIST
22051: LIST
22052: PUSH
22053: LD_INT 2
22055: PUSH
22056: LD_INT 3
22058: PUSH
22059: EMPTY
22060: LIST
22061: LIST
22062: PUSH
22063: LD_INT 4
22065: PUSH
22066: LD_INT 3
22068: PUSH
22069: EMPTY
22070: LIST
22071: LIST
22072: PUSH
22073: LD_INT 4
22075: PUSH
22076: LD_INT 4
22078: PUSH
22079: EMPTY
22080: LIST
22081: LIST
22082: PUSH
22083: LD_INT 3
22085: PUSH
22086: LD_INT 4
22088: PUSH
22089: EMPTY
22090: LIST
22091: LIST
22092: PUSH
22093: LD_INT 5
22095: PUSH
22096: LD_INT 4
22098: PUSH
22099: EMPTY
22100: LIST
22101: LIST
22102: PUSH
22103: LD_INT 5
22105: PUSH
22106: LD_INT 5
22108: PUSH
22109: EMPTY
22110: LIST
22111: LIST
22112: PUSH
22113: LD_INT 4
22115: PUSH
22116: LD_INT 5
22118: PUSH
22119: EMPTY
22120: LIST
22121: LIST
22122: PUSH
22123: LD_INT 6
22125: PUSH
22126: LD_INT 5
22128: PUSH
22129: EMPTY
22130: LIST
22131: LIST
22132: PUSH
22133: LD_INT 6
22135: PUSH
22136: LD_INT 6
22138: PUSH
22139: EMPTY
22140: LIST
22141: LIST
22142: PUSH
22143: LD_INT 5
22145: PUSH
22146: LD_INT 6
22148: PUSH
22149: EMPTY
22150: LIST
22151: LIST
22152: PUSH
22153: EMPTY
22154: LIST
22155: LIST
22156: LIST
22157: LIST
22158: LIST
22159: LIST
22160: LIST
22161: LIST
22162: LIST
22163: LIST
22164: LIST
22165: LIST
22166: ST_TO_ADDR
// Factory3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ 1 , 4 ] , [ 0 , 4 ] , [ - 1 , 3 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ 1 , 6 ] , [ 0 , 6 ] , [ - 1 , 5 ] ] ;
22167: LD_ADDR_VAR 0 32
22171: PUSH
22172: LD_INT 1
22174: PUSH
22175: LD_INT 3
22177: PUSH
22178: EMPTY
22179: LIST
22180: LIST
22181: PUSH
22182: LD_INT 0
22184: PUSH
22185: LD_INT 3
22187: PUSH
22188: EMPTY
22189: LIST
22190: LIST
22191: PUSH
22192: LD_INT 1
22194: NEG
22195: PUSH
22196: LD_INT 2
22198: PUSH
22199: EMPTY
22200: LIST
22201: LIST
22202: PUSH
22203: LD_INT 1
22205: PUSH
22206: LD_INT 4
22208: PUSH
22209: EMPTY
22210: LIST
22211: LIST
22212: PUSH
22213: LD_INT 0
22215: PUSH
22216: LD_INT 4
22218: PUSH
22219: EMPTY
22220: LIST
22221: LIST
22222: PUSH
22223: LD_INT 1
22225: NEG
22226: PUSH
22227: LD_INT 3
22229: PUSH
22230: EMPTY
22231: LIST
22232: LIST
22233: PUSH
22234: LD_INT 1
22236: PUSH
22237: LD_INT 5
22239: PUSH
22240: EMPTY
22241: LIST
22242: LIST
22243: PUSH
22244: LD_INT 0
22246: PUSH
22247: LD_INT 5
22249: PUSH
22250: EMPTY
22251: LIST
22252: LIST
22253: PUSH
22254: LD_INT 1
22256: NEG
22257: PUSH
22258: LD_INT 4
22260: PUSH
22261: EMPTY
22262: LIST
22263: LIST
22264: PUSH
22265: LD_INT 1
22267: PUSH
22268: LD_INT 6
22270: PUSH
22271: EMPTY
22272: LIST
22273: LIST
22274: PUSH
22275: LD_INT 0
22277: PUSH
22278: LD_INT 6
22280: PUSH
22281: EMPTY
22282: LIST
22283: LIST
22284: PUSH
22285: LD_INT 1
22287: NEG
22288: PUSH
22289: LD_INT 5
22291: PUSH
22292: EMPTY
22293: LIST
22294: LIST
22295: PUSH
22296: EMPTY
22297: LIST
22298: LIST
22299: LIST
22300: LIST
22301: LIST
22302: LIST
22303: LIST
22304: LIST
22305: LIST
22306: LIST
22307: LIST
22308: LIST
22309: ST_TO_ADDR
// Factory4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 3 , 1 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , 1 ] , [ - 6 , 0 ] , [ - 6 , - 1 ] ] ;
22310: LD_ADDR_VAR 0 33
22314: PUSH
22315: LD_INT 2
22317: NEG
22318: PUSH
22319: LD_INT 1
22321: PUSH
22322: EMPTY
22323: LIST
22324: LIST
22325: PUSH
22326: LD_INT 3
22328: NEG
22329: PUSH
22330: LD_INT 0
22332: PUSH
22333: EMPTY
22334: LIST
22335: LIST
22336: PUSH
22337: LD_INT 3
22339: NEG
22340: PUSH
22341: LD_INT 1
22343: NEG
22344: PUSH
22345: EMPTY
22346: LIST
22347: LIST
22348: PUSH
22349: LD_INT 3
22351: NEG
22352: PUSH
22353: LD_INT 1
22355: PUSH
22356: EMPTY
22357: LIST
22358: LIST
22359: PUSH
22360: LD_INT 4
22362: NEG
22363: PUSH
22364: LD_INT 0
22366: PUSH
22367: EMPTY
22368: LIST
22369: LIST
22370: PUSH
22371: LD_INT 4
22373: NEG
22374: PUSH
22375: LD_INT 1
22377: NEG
22378: PUSH
22379: EMPTY
22380: LIST
22381: LIST
22382: PUSH
22383: LD_INT 4
22385: NEG
22386: PUSH
22387: LD_INT 1
22389: PUSH
22390: EMPTY
22391: LIST
22392: LIST
22393: PUSH
22394: LD_INT 5
22396: NEG
22397: PUSH
22398: LD_INT 0
22400: PUSH
22401: EMPTY
22402: LIST
22403: LIST
22404: PUSH
22405: LD_INT 5
22407: NEG
22408: PUSH
22409: LD_INT 1
22411: NEG
22412: PUSH
22413: EMPTY
22414: LIST
22415: LIST
22416: PUSH
22417: LD_INT 5
22419: NEG
22420: PUSH
22421: LD_INT 1
22423: PUSH
22424: EMPTY
22425: LIST
22426: LIST
22427: PUSH
22428: LD_INT 6
22430: NEG
22431: PUSH
22432: LD_INT 0
22434: PUSH
22435: EMPTY
22436: LIST
22437: LIST
22438: PUSH
22439: LD_INT 6
22441: NEG
22442: PUSH
22443: LD_INT 1
22445: NEG
22446: PUSH
22447: EMPTY
22448: LIST
22449: LIST
22450: PUSH
22451: EMPTY
22452: LIST
22453: LIST
22454: LIST
22455: LIST
22456: LIST
22457: LIST
22458: LIST
22459: LIST
22460: LIST
22461: LIST
22462: LIST
22463: LIST
22464: ST_TO_ADDR
// Factory5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 4 , - 3 ] , [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 5 , - 6 ] , [ - 6 , - 5 ] , [ - 6 , - 6 ] ] ;
22465: LD_ADDR_VAR 0 34
22469: PUSH
22470: LD_INT 2
22472: NEG
22473: PUSH
22474: LD_INT 3
22476: NEG
22477: PUSH
22478: EMPTY
22479: LIST
22480: LIST
22481: PUSH
22482: LD_INT 3
22484: NEG
22485: PUSH
22486: LD_INT 2
22488: NEG
22489: PUSH
22490: EMPTY
22491: LIST
22492: LIST
22493: PUSH
22494: LD_INT 3
22496: NEG
22497: PUSH
22498: LD_INT 3
22500: NEG
22501: PUSH
22502: EMPTY
22503: LIST
22504: LIST
22505: PUSH
22506: LD_INT 3
22508: NEG
22509: PUSH
22510: LD_INT 4
22512: NEG
22513: PUSH
22514: EMPTY
22515: LIST
22516: LIST
22517: PUSH
22518: LD_INT 4
22520: NEG
22521: PUSH
22522: LD_INT 3
22524: NEG
22525: PUSH
22526: EMPTY
22527: LIST
22528: LIST
22529: PUSH
22530: LD_INT 4
22532: NEG
22533: PUSH
22534: LD_INT 4
22536: NEG
22537: PUSH
22538: EMPTY
22539: LIST
22540: LIST
22541: PUSH
22542: LD_INT 4
22544: NEG
22545: PUSH
22546: LD_INT 5
22548: NEG
22549: PUSH
22550: EMPTY
22551: LIST
22552: LIST
22553: PUSH
22554: LD_INT 5
22556: NEG
22557: PUSH
22558: LD_INT 4
22560: NEG
22561: PUSH
22562: EMPTY
22563: LIST
22564: LIST
22565: PUSH
22566: LD_INT 5
22568: NEG
22569: PUSH
22570: LD_INT 5
22572: NEG
22573: PUSH
22574: EMPTY
22575: LIST
22576: LIST
22577: PUSH
22578: LD_INT 5
22580: NEG
22581: PUSH
22582: LD_INT 6
22584: NEG
22585: PUSH
22586: EMPTY
22587: LIST
22588: LIST
22589: PUSH
22590: LD_INT 6
22592: NEG
22593: PUSH
22594: LD_INT 5
22596: NEG
22597: PUSH
22598: EMPTY
22599: LIST
22600: LIST
22601: PUSH
22602: LD_INT 6
22604: NEG
22605: PUSH
22606: LD_INT 6
22608: NEG
22609: PUSH
22610: EMPTY
22611: LIST
22612: LIST
22613: PUSH
22614: EMPTY
22615: LIST
22616: LIST
22617: LIST
22618: LIST
22619: LIST
22620: LIST
22621: LIST
22622: LIST
22623: LIST
22624: LIST
22625: LIST
22626: LIST
22627: ST_TO_ADDR
// Lab0 = [ [ 0 , - 2 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] ] ;
22628: LD_ADDR_VAR 0 41
22632: PUSH
22633: LD_INT 0
22635: PUSH
22636: LD_INT 2
22638: NEG
22639: PUSH
22640: EMPTY
22641: LIST
22642: LIST
22643: PUSH
22644: LD_INT 1
22646: NEG
22647: PUSH
22648: LD_INT 3
22650: NEG
22651: PUSH
22652: EMPTY
22653: LIST
22654: LIST
22655: PUSH
22656: LD_INT 1
22658: PUSH
22659: LD_INT 2
22661: NEG
22662: PUSH
22663: EMPTY
22664: LIST
22665: LIST
22666: PUSH
22667: EMPTY
22668: LIST
22669: LIST
22670: LIST
22671: ST_TO_ADDR
// Lab1 = [ [ 2 , 0 ] , [ 2 , - 1 ] , [ 3 , 1 ] ] ;
22672: LD_ADDR_VAR 0 42
22676: PUSH
22677: LD_INT 2
22679: PUSH
22680: LD_INT 0
22682: PUSH
22683: EMPTY
22684: LIST
22685: LIST
22686: PUSH
22687: LD_INT 2
22689: PUSH
22690: LD_INT 1
22692: NEG
22693: PUSH
22694: EMPTY
22695: LIST
22696: LIST
22697: PUSH
22698: LD_INT 3
22700: PUSH
22701: LD_INT 1
22703: PUSH
22704: EMPTY
22705: LIST
22706: LIST
22707: PUSH
22708: EMPTY
22709: LIST
22710: LIST
22711: LIST
22712: ST_TO_ADDR
// Lab2 = [ [ 2 , 2 ] , [ 3 , 2 ] , [ 2 , 3 ] ] ;
22713: LD_ADDR_VAR 0 43
22717: PUSH
22718: LD_INT 2
22720: PUSH
22721: LD_INT 2
22723: PUSH
22724: EMPTY
22725: LIST
22726: LIST
22727: PUSH
22728: LD_INT 3
22730: PUSH
22731: LD_INT 2
22733: PUSH
22734: EMPTY
22735: LIST
22736: LIST
22737: PUSH
22738: LD_INT 2
22740: PUSH
22741: LD_INT 3
22743: PUSH
22744: EMPTY
22745: LIST
22746: LIST
22747: PUSH
22748: EMPTY
22749: LIST
22750: LIST
22751: LIST
22752: ST_TO_ADDR
// Lab3 = [ [ 0 , 2 ] , [ 1 , 3 ] , [ - 1 , 2 ] ] ;
22753: LD_ADDR_VAR 0 44
22757: PUSH
22758: LD_INT 0
22760: PUSH
22761: LD_INT 2
22763: PUSH
22764: EMPTY
22765: LIST
22766: LIST
22767: PUSH
22768: LD_INT 1
22770: PUSH
22771: LD_INT 3
22773: PUSH
22774: EMPTY
22775: LIST
22776: LIST
22777: PUSH
22778: LD_INT 1
22780: NEG
22781: PUSH
22782: LD_INT 2
22784: PUSH
22785: EMPTY
22786: LIST
22787: LIST
22788: PUSH
22789: EMPTY
22790: LIST
22791: LIST
22792: LIST
22793: ST_TO_ADDR
// Lab4 = [ [ - 2 , 0 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
22794: LD_ADDR_VAR 0 45
22798: PUSH
22799: LD_INT 2
22801: NEG
22802: PUSH
22803: LD_INT 0
22805: PUSH
22806: EMPTY
22807: LIST
22808: LIST
22809: PUSH
22810: LD_INT 2
22812: NEG
22813: PUSH
22814: LD_INT 1
22816: PUSH
22817: EMPTY
22818: LIST
22819: LIST
22820: PUSH
22821: LD_INT 3
22823: NEG
22824: PUSH
22825: LD_INT 1
22827: NEG
22828: PUSH
22829: EMPTY
22830: LIST
22831: LIST
22832: PUSH
22833: EMPTY
22834: LIST
22835: LIST
22836: LIST
22837: ST_TO_ADDR
// Lab5 = [ [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 3 , - 2 ] ] ;
22838: LD_ADDR_VAR 0 46
22842: PUSH
22843: LD_INT 2
22845: NEG
22846: PUSH
22847: LD_INT 2
22849: NEG
22850: PUSH
22851: EMPTY
22852: LIST
22853: LIST
22854: PUSH
22855: LD_INT 2
22857: NEG
22858: PUSH
22859: LD_INT 3
22861: NEG
22862: PUSH
22863: EMPTY
22864: LIST
22865: LIST
22866: PUSH
22867: LD_INT 3
22869: NEG
22870: PUSH
22871: LD_INT 2
22873: NEG
22874: PUSH
22875: EMPTY
22876: LIST
22877: LIST
22878: PUSH
22879: EMPTY
22880: LIST
22881: LIST
22882: LIST
22883: ST_TO_ADDR
// ControlTower0 = [ [ - 2 , - 3 ] , [ - 1 , - 3 ] ] ;
22884: LD_ADDR_VAR 0 47
22888: PUSH
22889: LD_INT 2
22891: NEG
22892: PUSH
22893: LD_INT 3
22895: NEG
22896: PUSH
22897: EMPTY
22898: LIST
22899: LIST
22900: PUSH
22901: LD_INT 1
22903: NEG
22904: PUSH
22905: LD_INT 3
22907: NEG
22908: PUSH
22909: EMPTY
22910: LIST
22911: LIST
22912: PUSH
22913: EMPTY
22914: LIST
22915: LIST
22916: ST_TO_ADDR
// ControlTower1 = [ [ 1 , - 2 ] , [ 2 , - 1 ] ] ;
22917: LD_ADDR_VAR 0 48
22921: PUSH
22922: LD_INT 1
22924: PUSH
22925: LD_INT 2
22927: NEG
22928: PUSH
22929: EMPTY
22930: LIST
22931: LIST
22932: PUSH
22933: LD_INT 2
22935: PUSH
22936: LD_INT 1
22938: NEG
22939: PUSH
22940: EMPTY
22941: LIST
22942: LIST
22943: PUSH
22944: EMPTY
22945: LIST
22946: LIST
22947: ST_TO_ADDR
// ControlTower2 = [ [ 3 , 1 ] , [ 3 , 2 ] ] ;
22948: LD_ADDR_VAR 0 49
22952: PUSH
22953: LD_INT 3
22955: PUSH
22956: LD_INT 1
22958: PUSH
22959: EMPTY
22960: LIST
22961: LIST
22962: PUSH
22963: LD_INT 3
22965: PUSH
22966: LD_INT 2
22968: PUSH
22969: EMPTY
22970: LIST
22971: LIST
22972: PUSH
22973: EMPTY
22974: LIST
22975: LIST
22976: ST_TO_ADDR
// ControlTower3 = [ [ 2 , 3 ] , [ 1 , 3 ] ] ;
22977: LD_ADDR_VAR 0 50
22981: PUSH
22982: LD_INT 2
22984: PUSH
22985: LD_INT 3
22987: PUSH
22988: EMPTY
22989: LIST
22990: LIST
22991: PUSH
22992: LD_INT 1
22994: PUSH
22995: LD_INT 3
22997: PUSH
22998: EMPTY
22999: LIST
23000: LIST
23001: PUSH
23002: EMPTY
23003: LIST
23004: LIST
23005: ST_TO_ADDR
// ControlTower4 = [ [ - 1 , 2 ] , [ - 2 , 1 ] ] ;
23006: LD_ADDR_VAR 0 51
23010: PUSH
23011: LD_INT 1
23013: NEG
23014: PUSH
23015: LD_INT 2
23017: PUSH
23018: EMPTY
23019: LIST
23020: LIST
23021: PUSH
23022: LD_INT 2
23024: NEG
23025: PUSH
23026: LD_INT 1
23028: PUSH
23029: EMPTY
23030: LIST
23031: LIST
23032: PUSH
23033: EMPTY
23034: LIST
23035: LIST
23036: ST_TO_ADDR
// ControlTower5 = [ [ - 3 , - 1 ] , [ - 3 , - 2 ] ] ;
23037: LD_ADDR_VAR 0 52
23041: PUSH
23042: LD_INT 3
23044: NEG
23045: PUSH
23046: LD_INT 1
23048: NEG
23049: PUSH
23050: EMPTY
23051: LIST
23052: LIST
23053: PUSH
23054: LD_INT 3
23056: NEG
23057: PUSH
23058: LD_INT 2
23060: NEG
23061: PUSH
23062: EMPTY
23063: LIST
23064: LIST
23065: PUSH
23066: EMPTY
23067: LIST
23068: LIST
23069: ST_TO_ADDR
// Barracks0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
23070: LD_ADDR_VAR 0 53
23074: PUSH
23075: LD_INT 1
23077: NEG
23078: PUSH
23079: LD_INT 3
23081: NEG
23082: PUSH
23083: EMPTY
23084: LIST
23085: LIST
23086: PUSH
23087: LD_INT 0
23089: PUSH
23090: LD_INT 3
23092: NEG
23093: PUSH
23094: EMPTY
23095: LIST
23096: LIST
23097: PUSH
23098: LD_INT 1
23100: PUSH
23101: LD_INT 2
23103: NEG
23104: PUSH
23105: EMPTY
23106: LIST
23107: LIST
23108: PUSH
23109: EMPTY
23110: LIST
23111: LIST
23112: LIST
23113: ST_TO_ADDR
// Barracks1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
23114: LD_ADDR_VAR 0 54
23118: PUSH
23119: LD_INT 2
23121: PUSH
23122: LD_INT 1
23124: NEG
23125: PUSH
23126: EMPTY
23127: LIST
23128: LIST
23129: PUSH
23130: LD_INT 3
23132: PUSH
23133: LD_INT 0
23135: PUSH
23136: EMPTY
23137: LIST
23138: LIST
23139: PUSH
23140: LD_INT 3
23142: PUSH
23143: LD_INT 1
23145: PUSH
23146: EMPTY
23147: LIST
23148: LIST
23149: PUSH
23150: EMPTY
23151: LIST
23152: LIST
23153: LIST
23154: ST_TO_ADDR
// Barracks2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
23155: LD_ADDR_VAR 0 55
23159: PUSH
23160: LD_INT 3
23162: PUSH
23163: LD_INT 2
23165: PUSH
23166: EMPTY
23167: LIST
23168: LIST
23169: PUSH
23170: LD_INT 3
23172: PUSH
23173: LD_INT 3
23175: PUSH
23176: EMPTY
23177: LIST
23178: LIST
23179: PUSH
23180: LD_INT 2
23182: PUSH
23183: LD_INT 3
23185: PUSH
23186: EMPTY
23187: LIST
23188: LIST
23189: PUSH
23190: EMPTY
23191: LIST
23192: LIST
23193: LIST
23194: ST_TO_ADDR
// Barracks3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
23195: LD_ADDR_VAR 0 56
23199: PUSH
23200: LD_INT 1
23202: PUSH
23203: LD_INT 3
23205: PUSH
23206: EMPTY
23207: LIST
23208: LIST
23209: PUSH
23210: LD_INT 0
23212: PUSH
23213: LD_INT 3
23215: PUSH
23216: EMPTY
23217: LIST
23218: LIST
23219: PUSH
23220: LD_INT 1
23222: NEG
23223: PUSH
23224: LD_INT 2
23226: PUSH
23227: EMPTY
23228: LIST
23229: LIST
23230: PUSH
23231: EMPTY
23232: LIST
23233: LIST
23234: LIST
23235: ST_TO_ADDR
// Barracks4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
23236: LD_ADDR_VAR 0 57
23240: PUSH
23241: LD_INT 2
23243: NEG
23244: PUSH
23245: LD_INT 1
23247: PUSH
23248: EMPTY
23249: LIST
23250: LIST
23251: PUSH
23252: LD_INT 3
23254: NEG
23255: PUSH
23256: LD_INT 0
23258: PUSH
23259: EMPTY
23260: LIST
23261: LIST
23262: PUSH
23263: LD_INT 3
23265: NEG
23266: PUSH
23267: LD_INT 1
23269: NEG
23270: PUSH
23271: EMPTY
23272: LIST
23273: LIST
23274: PUSH
23275: EMPTY
23276: LIST
23277: LIST
23278: LIST
23279: ST_TO_ADDR
// Barracks5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
23280: LD_ADDR_VAR 0 58
23284: PUSH
23285: LD_INT 2
23287: NEG
23288: PUSH
23289: LD_INT 3
23291: NEG
23292: PUSH
23293: EMPTY
23294: LIST
23295: LIST
23296: PUSH
23297: LD_INT 3
23299: NEG
23300: PUSH
23301: LD_INT 2
23303: NEG
23304: PUSH
23305: EMPTY
23306: LIST
23307: LIST
23308: PUSH
23309: LD_INT 3
23311: NEG
23312: PUSH
23313: LD_INT 3
23315: NEG
23316: PUSH
23317: EMPTY
23318: LIST
23319: LIST
23320: PUSH
23321: EMPTY
23322: LIST
23323: LIST
23324: LIST
23325: ST_TO_ADDR
// Bunker0 = [ [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] ] ;
23326: LD_ADDR_VAR 0 59
23330: PUSH
23331: LD_INT 1
23333: NEG
23334: PUSH
23335: LD_INT 2
23337: NEG
23338: PUSH
23339: EMPTY
23340: LIST
23341: LIST
23342: PUSH
23343: LD_INT 0
23345: PUSH
23346: LD_INT 2
23348: NEG
23349: PUSH
23350: EMPTY
23351: LIST
23352: LIST
23353: PUSH
23354: LD_INT 1
23356: PUSH
23357: LD_INT 1
23359: NEG
23360: PUSH
23361: EMPTY
23362: LIST
23363: LIST
23364: PUSH
23365: EMPTY
23366: LIST
23367: LIST
23368: LIST
23369: ST_TO_ADDR
// Bunker1 = [ [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] ] ;
23370: LD_ADDR_VAR 0 60
23374: PUSH
23375: LD_INT 1
23377: PUSH
23378: LD_INT 1
23380: NEG
23381: PUSH
23382: EMPTY
23383: LIST
23384: LIST
23385: PUSH
23386: LD_INT 2
23388: PUSH
23389: LD_INT 0
23391: PUSH
23392: EMPTY
23393: LIST
23394: LIST
23395: PUSH
23396: LD_INT 2
23398: PUSH
23399: LD_INT 1
23401: PUSH
23402: EMPTY
23403: LIST
23404: LIST
23405: PUSH
23406: EMPTY
23407: LIST
23408: LIST
23409: LIST
23410: ST_TO_ADDR
// Bunker2 = [ [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] ] ;
23411: LD_ADDR_VAR 0 61
23415: PUSH
23416: LD_INT 2
23418: PUSH
23419: LD_INT 1
23421: PUSH
23422: EMPTY
23423: LIST
23424: LIST
23425: PUSH
23426: LD_INT 2
23428: PUSH
23429: LD_INT 2
23431: PUSH
23432: EMPTY
23433: LIST
23434: LIST
23435: PUSH
23436: LD_INT 1
23438: PUSH
23439: LD_INT 2
23441: PUSH
23442: EMPTY
23443: LIST
23444: LIST
23445: PUSH
23446: EMPTY
23447: LIST
23448: LIST
23449: LIST
23450: ST_TO_ADDR
// Bunker3 = [ [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] ] ;
23451: LD_ADDR_VAR 0 62
23455: PUSH
23456: LD_INT 1
23458: PUSH
23459: LD_INT 2
23461: PUSH
23462: EMPTY
23463: LIST
23464: LIST
23465: PUSH
23466: LD_INT 0
23468: PUSH
23469: LD_INT 2
23471: PUSH
23472: EMPTY
23473: LIST
23474: LIST
23475: PUSH
23476: LD_INT 1
23478: NEG
23479: PUSH
23480: LD_INT 1
23482: PUSH
23483: EMPTY
23484: LIST
23485: LIST
23486: PUSH
23487: EMPTY
23488: LIST
23489: LIST
23490: LIST
23491: ST_TO_ADDR
// Bunker4 = [ [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] ] ;
23492: LD_ADDR_VAR 0 63
23496: PUSH
23497: LD_INT 1
23499: NEG
23500: PUSH
23501: LD_INT 1
23503: PUSH
23504: EMPTY
23505: LIST
23506: LIST
23507: PUSH
23508: LD_INT 2
23510: NEG
23511: PUSH
23512: LD_INT 0
23514: PUSH
23515: EMPTY
23516: LIST
23517: LIST
23518: PUSH
23519: LD_INT 2
23521: NEG
23522: PUSH
23523: LD_INT 1
23525: NEG
23526: PUSH
23527: EMPTY
23528: LIST
23529: LIST
23530: PUSH
23531: EMPTY
23532: LIST
23533: LIST
23534: LIST
23535: ST_TO_ADDR
// Bunker5 = [ [ - 1 , - 2 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
23536: LD_ADDR_VAR 0 64
23540: PUSH
23541: LD_INT 1
23543: NEG
23544: PUSH
23545: LD_INT 2
23547: NEG
23548: PUSH
23549: EMPTY
23550: LIST
23551: LIST
23552: PUSH
23553: LD_INT 2
23555: NEG
23556: PUSH
23557: LD_INT 1
23559: NEG
23560: PUSH
23561: EMPTY
23562: LIST
23563: LIST
23564: PUSH
23565: LD_INT 2
23567: NEG
23568: PUSH
23569: LD_INT 2
23571: NEG
23572: PUSH
23573: EMPTY
23574: LIST
23575: LIST
23576: PUSH
23577: EMPTY
23578: LIST
23579: LIST
23580: LIST
23581: ST_TO_ADDR
// end ; 2 :
23582: GO 26848
23584: LD_INT 2
23586: DOUBLE
23587: EQUAL
23588: IFTRUE 23592
23590: GO 26847
23592: POP
// begin Factory0 = [ [ 4 , 0 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 4 , 1 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 3 , - 2 ] , [ 5 , 2 ] , [ 3 , 3 ] , [ 3 , 2 ] , [ 4 , 3 ] , [ 4 , 4 ] , [ 3 , 4 ] , [ 2 , 3 ] , [ 2 , 2 ] , [ 4 , 2 ] , [ 2 , 4 ] , [ 0 , 4 ] , [ 0 , 3 ] , [ 1 , 4 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ - 1 , 3 ] , [ 2 , 5 ] , [ - 2 , 3 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 2 , 0 ] , [ - 2 , 1 ] , [ - 3 , 1 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 4 , - 2 ] , [ - 2 , 2 ] , [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 3 , - 4 ] , [ - 3 , - 3 ] , [ - 4 , - 3 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 3 , - 5 ] , [ - 5 , - 3 ] ] ;
23593: LD_ADDR_VAR 0 29
23597: PUSH
23598: LD_INT 4
23600: PUSH
23601: LD_INT 0
23603: PUSH
23604: EMPTY
23605: LIST
23606: LIST
23607: PUSH
23608: LD_INT 4
23610: PUSH
23611: LD_INT 1
23613: NEG
23614: PUSH
23615: EMPTY
23616: LIST
23617: LIST
23618: PUSH
23619: LD_INT 5
23621: PUSH
23622: LD_INT 0
23624: PUSH
23625: EMPTY
23626: LIST
23627: LIST
23628: PUSH
23629: LD_INT 5
23631: PUSH
23632: LD_INT 1
23634: PUSH
23635: EMPTY
23636: LIST
23637: LIST
23638: PUSH
23639: LD_INT 4
23641: PUSH
23642: LD_INT 1
23644: PUSH
23645: EMPTY
23646: LIST
23647: LIST
23648: PUSH
23649: LD_INT 3
23651: PUSH
23652: LD_INT 0
23654: PUSH
23655: EMPTY
23656: LIST
23657: LIST
23658: PUSH
23659: LD_INT 3
23661: PUSH
23662: LD_INT 1
23664: NEG
23665: PUSH
23666: EMPTY
23667: LIST
23668: LIST
23669: PUSH
23670: LD_INT 3
23672: PUSH
23673: LD_INT 2
23675: NEG
23676: PUSH
23677: EMPTY
23678: LIST
23679: LIST
23680: PUSH
23681: LD_INT 5
23683: PUSH
23684: LD_INT 2
23686: PUSH
23687: EMPTY
23688: LIST
23689: LIST
23690: PUSH
23691: LD_INT 3
23693: PUSH
23694: LD_INT 3
23696: PUSH
23697: EMPTY
23698: LIST
23699: LIST
23700: PUSH
23701: LD_INT 3
23703: PUSH
23704: LD_INT 2
23706: PUSH
23707: EMPTY
23708: LIST
23709: LIST
23710: PUSH
23711: LD_INT 4
23713: PUSH
23714: LD_INT 3
23716: PUSH
23717: EMPTY
23718: LIST
23719: LIST
23720: PUSH
23721: LD_INT 4
23723: PUSH
23724: LD_INT 4
23726: PUSH
23727: EMPTY
23728: LIST
23729: LIST
23730: PUSH
23731: LD_INT 3
23733: PUSH
23734: LD_INT 4
23736: PUSH
23737: EMPTY
23738: LIST
23739: LIST
23740: PUSH
23741: LD_INT 2
23743: PUSH
23744: LD_INT 3
23746: PUSH
23747: EMPTY
23748: LIST
23749: LIST
23750: PUSH
23751: LD_INT 2
23753: PUSH
23754: LD_INT 2
23756: PUSH
23757: EMPTY
23758: LIST
23759: LIST
23760: PUSH
23761: LD_INT 4
23763: PUSH
23764: LD_INT 2
23766: PUSH
23767: EMPTY
23768: LIST
23769: LIST
23770: PUSH
23771: LD_INT 2
23773: PUSH
23774: LD_INT 4
23776: PUSH
23777: EMPTY
23778: LIST
23779: LIST
23780: PUSH
23781: LD_INT 0
23783: PUSH
23784: LD_INT 4
23786: PUSH
23787: EMPTY
23788: LIST
23789: LIST
23790: PUSH
23791: LD_INT 0
23793: PUSH
23794: LD_INT 3
23796: PUSH
23797: EMPTY
23798: LIST
23799: LIST
23800: PUSH
23801: LD_INT 1
23803: PUSH
23804: LD_INT 4
23806: PUSH
23807: EMPTY
23808: LIST
23809: LIST
23810: PUSH
23811: LD_INT 1
23813: PUSH
23814: LD_INT 5
23816: PUSH
23817: EMPTY
23818: LIST
23819: LIST
23820: PUSH
23821: LD_INT 0
23823: PUSH
23824: LD_INT 5
23826: PUSH
23827: EMPTY
23828: LIST
23829: LIST
23830: PUSH
23831: LD_INT 1
23833: NEG
23834: PUSH
23835: LD_INT 4
23837: PUSH
23838: EMPTY
23839: LIST
23840: LIST
23841: PUSH
23842: LD_INT 1
23844: NEG
23845: PUSH
23846: LD_INT 3
23848: PUSH
23849: EMPTY
23850: LIST
23851: LIST
23852: PUSH
23853: LD_INT 2
23855: PUSH
23856: LD_INT 5
23858: PUSH
23859: EMPTY
23860: LIST
23861: LIST
23862: PUSH
23863: LD_INT 2
23865: NEG
23866: PUSH
23867: LD_INT 3
23869: PUSH
23870: EMPTY
23871: LIST
23872: LIST
23873: PUSH
23874: LD_INT 3
23876: NEG
23877: PUSH
23878: LD_INT 0
23880: PUSH
23881: EMPTY
23882: LIST
23883: LIST
23884: PUSH
23885: LD_INT 3
23887: NEG
23888: PUSH
23889: LD_INT 1
23891: NEG
23892: PUSH
23893: EMPTY
23894: LIST
23895: LIST
23896: PUSH
23897: LD_INT 2
23899: NEG
23900: PUSH
23901: LD_INT 0
23903: PUSH
23904: EMPTY
23905: LIST
23906: LIST
23907: PUSH
23908: LD_INT 2
23910: NEG
23911: PUSH
23912: LD_INT 1
23914: PUSH
23915: EMPTY
23916: LIST
23917: LIST
23918: PUSH
23919: LD_INT 3
23921: NEG
23922: PUSH
23923: LD_INT 1
23925: PUSH
23926: EMPTY
23927: LIST
23928: LIST
23929: PUSH
23930: LD_INT 4
23932: NEG
23933: PUSH
23934: LD_INT 0
23936: PUSH
23937: EMPTY
23938: LIST
23939: LIST
23940: PUSH
23941: LD_INT 4
23943: NEG
23944: PUSH
23945: LD_INT 1
23947: NEG
23948: PUSH
23949: EMPTY
23950: LIST
23951: LIST
23952: PUSH
23953: LD_INT 4
23955: NEG
23956: PUSH
23957: LD_INT 2
23959: NEG
23960: PUSH
23961: EMPTY
23962: LIST
23963: LIST
23964: PUSH
23965: LD_INT 2
23967: NEG
23968: PUSH
23969: LD_INT 2
23971: PUSH
23972: EMPTY
23973: LIST
23974: LIST
23975: PUSH
23976: LD_INT 4
23978: NEG
23979: PUSH
23980: LD_INT 4
23982: NEG
23983: PUSH
23984: EMPTY
23985: LIST
23986: LIST
23987: PUSH
23988: LD_INT 4
23990: NEG
23991: PUSH
23992: LD_INT 5
23994: NEG
23995: PUSH
23996: EMPTY
23997: LIST
23998: LIST
23999: PUSH
24000: LD_INT 3
24002: NEG
24003: PUSH
24004: LD_INT 4
24006: NEG
24007: PUSH
24008: EMPTY
24009: LIST
24010: LIST
24011: PUSH
24012: LD_INT 3
24014: NEG
24015: PUSH
24016: LD_INT 3
24018: NEG
24019: PUSH
24020: EMPTY
24021: LIST
24022: LIST
24023: PUSH
24024: LD_INT 4
24026: NEG
24027: PUSH
24028: LD_INT 3
24030: NEG
24031: PUSH
24032: EMPTY
24033: LIST
24034: LIST
24035: PUSH
24036: LD_INT 5
24038: NEG
24039: PUSH
24040: LD_INT 4
24042: NEG
24043: PUSH
24044: EMPTY
24045: LIST
24046: LIST
24047: PUSH
24048: LD_INT 5
24050: NEG
24051: PUSH
24052: LD_INT 5
24054: NEG
24055: PUSH
24056: EMPTY
24057: LIST
24058: LIST
24059: PUSH
24060: LD_INT 3
24062: NEG
24063: PUSH
24064: LD_INT 5
24066: NEG
24067: PUSH
24068: EMPTY
24069: LIST
24070: LIST
24071: PUSH
24072: LD_INT 5
24074: NEG
24075: PUSH
24076: LD_INT 3
24078: NEG
24079: PUSH
24080: EMPTY
24081: LIST
24082: LIST
24083: PUSH
24084: EMPTY
24085: LIST
24086: LIST
24087: LIST
24088: LIST
24089: LIST
24090: LIST
24091: LIST
24092: LIST
24093: LIST
24094: LIST
24095: LIST
24096: LIST
24097: LIST
24098: LIST
24099: LIST
24100: LIST
24101: LIST
24102: LIST
24103: LIST
24104: LIST
24105: LIST
24106: LIST
24107: LIST
24108: LIST
24109: LIST
24110: LIST
24111: LIST
24112: LIST
24113: LIST
24114: LIST
24115: LIST
24116: LIST
24117: LIST
24118: LIST
24119: LIST
24120: LIST
24121: LIST
24122: LIST
24123: LIST
24124: LIST
24125: LIST
24126: LIST
24127: LIST
24128: LIST
24129: LIST
24130: ST_TO_ADDR
// Factory1 = [ [ 4 , 4 ] , [ 4 , 3 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 3 , 4 ] , [ 3 , 3 ] , [ 5 , 3 ] , [ 3 , 5 ] , [ 0 , 3 ] , [ 0 , 2 ] , [ 1 , 3 ] , [ 1 , 4 ] , [ 0 , 4 ] , [ - 1 , 3 ] , [ - 1 , 2 ] , [ 2 , 4 ] , [ - 2 , 2 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , - 2 ] , [ - 3 , 2 ] , [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 2 , - 3 ] , [ - 2 , - 2 ] , [ - 3 , - 2 ] , [ - 4 , - 3 ] , [ - 4 , - 4 ] , [ - 2 , - 4 ] , [ - 4 , - 2 ] , [ 0 , - 4 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ 1 , - 3 ] , [ 0 , - 3 ] , [ - 1 , - 4 ] , [ - 1 , - 5 ] , [ 2 , - 3 ] , [ - 2 , - 5 ] ] ;
24131: LD_ADDR_VAR 0 30
24135: PUSH
24136: LD_INT 4
24138: PUSH
24139: LD_INT 4
24141: PUSH
24142: EMPTY
24143: LIST
24144: LIST
24145: PUSH
24146: LD_INT 4
24148: PUSH
24149: LD_INT 3
24151: PUSH
24152: EMPTY
24153: LIST
24154: LIST
24155: PUSH
24156: LD_INT 5
24158: PUSH
24159: LD_INT 4
24161: PUSH
24162: EMPTY
24163: LIST
24164: LIST
24165: PUSH
24166: LD_INT 5
24168: PUSH
24169: LD_INT 5
24171: PUSH
24172: EMPTY
24173: LIST
24174: LIST
24175: PUSH
24176: LD_INT 4
24178: PUSH
24179: LD_INT 5
24181: PUSH
24182: EMPTY
24183: LIST
24184: LIST
24185: PUSH
24186: LD_INT 3
24188: PUSH
24189: LD_INT 4
24191: PUSH
24192: EMPTY
24193: LIST
24194: LIST
24195: PUSH
24196: LD_INT 3
24198: PUSH
24199: LD_INT 3
24201: PUSH
24202: EMPTY
24203: LIST
24204: LIST
24205: PUSH
24206: LD_INT 5
24208: PUSH
24209: LD_INT 3
24211: PUSH
24212: EMPTY
24213: LIST
24214: LIST
24215: PUSH
24216: LD_INT 3
24218: PUSH
24219: LD_INT 5
24221: PUSH
24222: EMPTY
24223: LIST
24224: LIST
24225: PUSH
24226: LD_INT 0
24228: PUSH
24229: LD_INT 3
24231: PUSH
24232: EMPTY
24233: LIST
24234: LIST
24235: PUSH
24236: LD_INT 0
24238: PUSH
24239: LD_INT 2
24241: PUSH
24242: EMPTY
24243: LIST
24244: LIST
24245: PUSH
24246: LD_INT 1
24248: PUSH
24249: LD_INT 3
24251: PUSH
24252: EMPTY
24253: LIST
24254: LIST
24255: PUSH
24256: LD_INT 1
24258: PUSH
24259: LD_INT 4
24261: PUSH
24262: EMPTY
24263: LIST
24264: LIST
24265: PUSH
24266: LD_INT 0
24268: PUSH
24269: LD_INT 4
24271: PUSH
24272: EMPTY
24273: LIST
24274: LIST
24275: PUSH
24276: LD_INT 1
24278: NEG
24279: PUSH
24280: LD_INT 3
24282: PUSH
24283: EMPTY
24284: LIST
24285: LIST
24286: PUSH
24287: LD_INT 1
24289: NEG
24290: PUSH
24291: LD_INT 2
24293: PUSH
24294: EMPTY
24295: LIST
24296: LIST
24297: PUSH
24298: LD_INT 2
24300: PUSH
24301: LD_INT 4
24303: PUSH
24304: EMPTY
24305: LIST
24306: LIST
24307: PUSH
24308: LD_INT 2
24310: NEG
24311: PUSH
24312: LD_INT 2
24314: PUSH
24315: EMPTY
24316: LIST
24317: LIST
24318: PUSH
24319: LD_INT 4
24321: NEG
24322: PUSH
24323: LD_INT 0
24325: PUSH
24326: EMPTY
24327: LIST
24328: LIST
24329: PUSH
24330: LD_INT 4
24332: NEG
24333: PUSH
24334: LD_INT 1
24336: NEG
24337: PUSH
24338: EMPTY
24339: LIST
24340: LIST
24341: PUSH
24342: LD_INT 3
24344: NEG
24345: PUSH
24346: LD_INT 0
24348: PUSH
24349: EMPTY
24350: LIST
24351: LIST
24352: PUSH
24353: LD_INT 3
24355: NEG
24356: PUSH
24357: LD_INT 1
24359: PUSH
24360: EMPTY
24361: LIST
24362: LIST
24363: PUSH
24364: LD_INT 4
24366: NEG
24367: PUSH
24368: LD_INT 1
24370: PUSH
24371: EMPTY
24372: LIST
24373: LIST
24374: PUSH
24375: LD_INT 5
24377: NEG
24378: PUSH
24379: LD_INT 0
24381: PUSH
24382: EMPTY
24383: LIST
24384: LIST
24385: PUSH
24386: LD_INT 5
24388: NEG
24389: PUSH
24390: LD_INT 1
24392: NEG
24393: PUSH
24394: EMPTY
24395: LIST
24396: LIST
24397: PUSH
24398: LD_INT 5
24400: NEG
24401: PUSH
24402: LD_INT 2
24404: NEG
24405: PUSH
24406: EMPTY
24407: LIST
24408: LIST
24409: PUSH
24410: LD_INT 3
24412: NEG
24413: PUSH
24414: LD_INT 2
24416: PUSH
24417: EMPTY
24418: LIST
24419: LIST
24420: PUSH
24421: LD_INT 3
24423: NEG
24424: PUSH
24425: LD_INT 3
24427: NEG
24428: PUSH
24429: EMPTY
24430: LIST
24431: LIST
24432: PUSH
24433: LD_INT 3
24435: NEG
24436: PUSH
24437: LD_INT 4
24439: NEG
24440: PUSH
24441: EMPTY
24442: LIST
24443: LIST
24444: PUSH
24445: LD_INT 2
24447: NEG
24448: PUSH
24449: LD_INT 3
24451: NEG
24452: PUSH
24453: EMPTY
24454: LIST
24455: LIST
24456: PUSH
24457: LD_INT 2
24459: NEG
24460: PUSH
24461: LD_INT 2
24463: NEG
24464: PUSH
24465: EMPTY
24466: LIST
24467: LIST
24468: PUSH
24469: LD_INT 3
24471: NEG
24472: PUSH
24473: LD_INT 2
24475: NEG
24476: PUSH
24477: EMPTY
24478: LIST
24479: LIST
24480: PUSH
24481: LD_INT 4
24483: NEG
24484: PUSH
24485: LD_INT 3
24487: NEG
24488: PUSH
24489: EMPTY
24490: LIST
24491: LIST
24492: PUSH
24493: LD_INT 4
24495: NEG
24496: PUSH
24497: LD_INT 4
24499: NEG
24500: PUSH
24501: EMPTY
24502: LIST
24503: LIST
24504: PUSH
24505: LD_INT 2
24507: NEG
24508: PUSH
24509: LD_INT 4
24511: NEG
24512: PUSH
24513: EMPTY
24514: LIST
24515: LIST
24516: PUSH
24517: LD_INT 4
24519: NEG
24520: PUSH
24521: LD_INT 2
24523: NEG
24524: PUSH
24525: EMPTY
24526: LIST
24527: LIST
24528: PUSH
24529: LD_INT 0
24531: PUSH
24532: LD_INT 4
24534: NEG
24535: PUSH
24536: EMPTY
24537: LIST
24538: LIST
24539: PUSH
24540: LD_INT 0
24542: PUSH
24543: LD_INT 5
24545: NEG
24546: PUSH
24547: EMPTY
24548: LIST
24549: LIST
24550: PUSH
24551: LD_INT 1
24553: PUSH
24554: LD_INT 4
24556: NEG
24557: PUSH
24558: EMPTY
24559: LIST
24560: LIST
24561: PUSH
24562: LD_INT 1
24564: PUSH
24565: LD_INT 3
24567: NEG
24568: PUSH
24569: EMPTY
24570: LIST
24571: LIST
24572: PUSH
24573: LD_INT 0
24575: PUSH
24576: LD_INT 3
24578: NEG
24579: PUSH
24580: EMPTY
24581: LIST
24582: LIST
24583: PUSH
24584: LD_INT 1
24586: NEG
24587: PUSH
24588: LD_INT 4
24590: NEG
24591: PUSH
24592: EMPTY
24593: LIST
24594: LIST
24595: PUSH
24596: LD_INT 1
24598: NEG
24599: PUSH
24600: LD_INT 5
24602: NEG
24603: PUSH
24604: EMPTY
24605: LIST
24606: LIST
24607: PUSH
24608: LD_INT 2
24610: PUSH
24611: LD_INT 3
24613: NEG
24614: PUSH
24615: EMPTY
24616: LIST
24617: LIST
24618: PUSH
24619: LD_INT 2
24621: NEG
24622: PUSH
24623: LD_INT 5
24625: NEG
24626: PUSH
24627: EMPTY
24628: LIST
24629: LIST
24630: PUSH
24631: EMPTY
24632: LIST
24633: LIST
24634: LIST
24635: LIST
24636: LIST
24637: LIST
24638: LIST
24639: LIST
24640: LIST
24641: LIST
24642: LIST
24643: LIST
24644: LIST
24645: LIST
24646: LIST
24647: LIST
24648: LIST
24649: LIST
24650: LIST
24651: LIST
24652: LIST
24653: LIST
24654: LIST
24655: LIST
24656: LIST
24657: LIST
24658: LIST
24659: LIST
24660: LIST
24661: LIST
24662: LIST
24663: LIST
24664: LIST
24665: LIST
24666: LIST
24667: LIST
24668: LIST
24669: LIST
24670: LIST
24671: LIST
24672: LIST
24673: LIST
24674: LIST
24675: LIST
24676: LIST
24677: ST_TO_ADDR
// Factory2 = [ [ 0 , 4 ] , [ 0 , 3 ] , [ 1 , 4 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ - 1 , 3 ] , [ 2 , 5 ] , [ - 2 , 3 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 2 , 0 ] , [ - 2 , 1 ] , [ - 3 , 1 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 4 , - 2 ] , [ - 2 , 2 ] , [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 3 , - 4 ] , [ - 3 , - 3 ] , [ - 4 , - 3 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 3 , - 5 ] , [ - 5 , - 3 ] , [ 0 , - 3 ] , [ 0 , - 4 ] , [ 1 , - 3 ] , [ 1 , - 2 ] , [ 0 , - 2 ] , [ - 1 , - 3 ] , [ - 1 , - 4 ] , [ 2 , - 2 ] , [ - 2 , - 4 ] , [ 4 , 0 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 4 , 1 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 3 , - 2 ] , [ 5 , 2 ] ] ;
24678: LD_ADDR_VAR 0 31
24682: PUSH
24683: LD_INT 0
24685: PUSH
24686: LD_INT 4
24688: PUSH
24689: EMPTY
24690: LIST
24691: LIST
24692: PUSH
24693: LD_INT 0
24695: PUSH
24696: LD_INT 3
24698: PUSH
24699: EMPTY
24700: LIST
24701: LIST
24702: PUSH
24703: LD_INT 1
24705: PUSH
24706: LD_INT 4
24708: PUSH
24709: EMPTY
24710: LIST
24711: LIST
24712: PUSH
24713: LD_INT 1
24715: PUSH
24716: LD_INT 5
24718: PUSH
24719: EMPTY
24720: LIST
24721: LIST
24722: PUSH
24723: LD_INT 0
24725: PUSH
24726: LD_INT 5
24728: PUSH
24729: EMPTY
24730: LIST
24731: LIST
24732: PUSH
24733: LD_INT 1
24735: NEG
24736: PUSH
24737: LD_INT 4
24739: PUSH
24740: EMPTY
24741: LIST
24742: LIST
24743: PUSH
24744: LD_INT 1
24746: NEG
24747: PUSH
24748: LD_INT 3
24750: PUSH
24751: EMPTY
24752: LIST
24753: LIST
24754: PUSH
24755: LD_INT 2
24757: PUSH
24758: LD_INT 5
24760: PUSH
24761: EMPTY
24762: LIST
24763: LIST
24764: PUSH
24765: LD_INT 2
24767: NEG
24768: PUSH
24769: LD_INT 3
24771: PUSH
24772: EMPTY
24773: LIST
24774: LIST
24775: PUSH
24776: LD_INT 3
24778: NEG
24779: PUSH
24780: LD_INT 0
24782: PUSH
24783: EMPTY
24784: LIST
24785: LIST
24786: PUSH
24787: LD_INT 3
24789: NEG
24790: PUSH
24791: LD_INT 1
24793: NEG
24794: PUSH
24795: EMPTY
24796: LIST
24797: LIST
24798: PUSH
24799: LD_INT 2
24801: NEG
24802: PUSH
24803: LD_INT 0
24805: PUSH
24806: EMPTY
24807: LIST
24808: LIST
24809: PUSH
24810: LD_INT 2
24812: NEG
24813: PUSH
24814: LD_INT 1
24816: PUSH
24817: EMPTY
24818: LIST
24819: LIST
24820: PUSH
24821: LD_INT 3
24823: NEG
24824: PUSH
24825: LD_INT 1
24827: PUSH
24828: EMPTY
24829: LIST
24830: LIST
24831: PUSH
24832: LD_INT 4
24834: NEG
24835: PUSH
24836: LD_INT 0
24838: PUSH
24839: EMPTY
24840: LIST
24841: LIST
24842: PUSH
24843: LD_INT 4
24845: NEG
24846: PUSH
24847: LD_INT 1
24849: NEG
24850: PUSH
24851: EMPTY
24852: LIST
24853: LIST
24854: PUSH
24855: LD_INT 4
24857: NEG
24858: PUSH
24859: LD_INT 2
24861: NEG
24862: PUSH
24863: EMPTY
24864: LIST
24865: LIST
24866: PUSH
24867: LD_INT 2
24869: NEG
24870: PUSH
24871: LD_INT 2
24873: PUSH
24874: EMPTY
24875: LIST
24876: LIST
24877: PUSH
24878: LD_INT 4
24880: NEG
24881: PUSH
24882: LD_INT 4
24884: NEG
24885: PUSH
24886: EMPTY
24887: LIST
24888: LIST
24889: PUSH
24890: LD_INT 4
24892: NEG
24893: PUSH
24894: LD_INT 5
24896: NEG
24897: PUSH
24898: EMPTY
24899: LIST
24900: LIST
24901: PUSH
24902: LD_INT 3
24904: NEG
24905: PUSH
24906: LD_INT 4
24908: NEG
24909: PUSH
24910: EMPTY
24911: LIST
24912: LIST
24913: PUSH
24914: LD_INT 3
24916: NEG
24917: PUSH
24918: LD_INT 3
24920: NEG
24921: PUSH
24922: EMPTY
24923: LIST
24924: LIST
24925: PUSH
24926: LD_INT 4
24928: NEG
24929: PUSH
24930: LD_INT 3
24932: NEG
24933: PUSH
24934: EMPTY
24935: LIST
24936: LIST
24937: PUSH
24938: LD_INT 5
24940: NEG
24941: PUSH
24942: LD_INT 4
24944: NEG
24945: PUSH
24946: EMPTY
24947: LIST
24948: LIST
24949: PUSH
24950: LD_INT 5
24952: NEG
24953: PUSH
24954: LD_INT 5
24956: NEG
24957: PUSH
24958: EMPTY
24959: LIST
24960: LIST
24961: PUSH
24962: LD_INT 3
24964: NEG
24965: PUSH
24966: LD_INT 5
24968: NEG
24969: PUSH
24970: EMPTY
24971: LIST
24972: LIST
24973: PUSH
24974: LD_INT 5
24976: NEG
24977: PUSH
24978: LD_INT 3
24980: NEG
24981: PUSH
24982: EMPTY
24983: LIST
24984: LIST
24985: PUSH
24986: LD_INT 0
24988: PUSH
24989: LD_INT 3
24991: NEG
24992: PUSH
24993: EMPTY
24994: LIST
24995: LIST
24996: PUSH
24997: LD_INT 0
24999: PUSH
25000: LD_INT 4
25002: NEG
25003: PUSH
25004: EMPTY
25005: LIST
25006: LIST
25007: PUSH
25008: LD_INT 1
25010: PUSH
25011: LD_INT 3
25013: NEG
25014: PUSH
25015: EMPTY
25016: LIST
25017: LIST
25018: PUSH
25019: LD_INT 1
25021: PUSH
25022: LD_INT 2
25024: NEG
25025: PUSH
25026: EMPTY
25027: LIST
25028: LIST
25029: PUSH
25030: LD_INT 0
25032: PUSH
25033: LD_INT 2
25035: NEG
25036: PUSH
25037: EMPTY
25038: LIST
25039: LIST
25040: PUSH
25041: LD_INT 1
25043: NEG
25044: PUSH
25045: LD_INT 3
25047: NEG
25048: PUSH
25049: EMPTY
25050: LIST
25051: LIST
25052: PUSH
25053: LD_INT 1
25055: NEG
25056: PUSH
25057: LD_INT 4
25059: NEG
25060: PUSH
25061: EMPTY
25062: LIST
25063: LIST
25064: PUSH
25065: LD_INT 2
25067: PUSH
25068: LD_INT 2
25070: NEG
25071: PUSH
25072: EMPTY
25073: LIST
25074: LIST
25075: PUSH
25076: LD_INT 2
25078: NEG
25079: PUSH
25080: LD_INT 4
25082: NEG
25083: PUSH
25084: EMPTY
25085: LIST
25086: LIST
25087: PUSH
25088: LD_INT 4
25090: PUSH
25091: LD_INT 0
25093: PUSH
25094: EMPTY
25095: LIST
25096: LIST
25097: PUSH
25098: LD_INT 4
25100: PUSH
25101: LD_INT 1
25103: NEG
25104: PUSH
25105: EMPTY
25106: LIST
25107: LIST
25108: PUSH
25109: LD_INT 5
25111: PUSH
25112: LD_INT 0
25114: PUSH
25115: EMPTY
25116: LIST
25117: LIST
25118: PUSH
25119: LD_INT 5
25121: PUSH
25122: LD_INT 1
25124: PUSH
25125: EMPTY
25126: LIST
25127: LIST
25128: PUSH
25129: LD_INT 4
25131: PUSH
25132: LD_INT 1
25134: PUSH
25135: EMPTY
25136: LIST
25137: LIST
25138: PUSH
25139: LD_INT 3
25141: PUSH
25142: LD_INT 0
25144: PUSH
25145: EMPTY
25146: LIST
25147: LIST
25148: PUSH
25149: LD_INT 3
25151: PUSH
25152: LD_INT 1
25154: NEG
25155: PUSH
25156: EMPTY
25157: LIST
25158: LIST
25159: PUSH
25160: LD_INT 3
25162: PUSH
25163: LD_INT 2
25165: NEG
25166: PUSH
25167: EMPTY
25168: LIST
25169: LIST
25170: PUSH
25171: LD_INT 5
25173: PUSH
25174: LD_INT 2
25176: PUSH
25177: EMPTY
25178: LIST
25179: LIST
25180: PUSH
25181: EMPTY
25182: LIST
25183: LIST
25184: LIST
25185: LIST
25186: LIST
25187: LIST
25188: LIST
25189: LIST
25190: LIST
25191: LIST
25192: LIST
25193: LIST
25194: LIST
25195: LIST
25196: LIST
25197: LIST
25198: LIST
25199: LIST
25200: LIST
25201: LIST
25202: LIST
25203: LIST
25204: LIST
25205: LIST
25206: LIST
25207: LIST
25208: LIST
25209: LIST
25210: LIST
25211: LIST
25212: LIST
25213: LIST
25214: LIST
25215: LIST
25216: LIST
25217: LIST
25218: LIST
25219: LIST
25220: LIST
25221: LIST
25222: LIST
25223: LIST
25224: LIST
25225: LIST
25226: LIST
25227: ST_TO_ADDR
// Factory3 = [ [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , - 2 ] , [ - 3 , 2 ] , [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 2 , - 3 ] , [ - 2 , - 2 ] , [ - 3 , - 2 ] , [ - 4 , - 3 ] , [ - 4 , - 4 ] , [ - 2 , - 4 ] , [ - 4 , - 2 ] , [ 0 , - 4 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ 1 , - 3 ] , [ 0 , - 3 ] , [ - 1 , - 4 ] , [ - 1 , - 5 ] , [ 2 , - 3 ] , [ - 2 , - 5 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 4 , 0 ] , [ 4 , 1 ] , [ 3 , 1 ] , [ 2 , 0 ] , [ 2 , - 1 ] , [ 2 , - 2 ] , [ 4 , 2 ] , [ 4 , 4 ] , [ 4 , 3 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 3 , 4 ] , [ 3 , 3 ] , [ 5 , 3 ] , [ 3 , 5 ] ] ;
25228: LD_ADDR_VAR 0 32
25232: PUSH
25233: LD_INT 4
25235: NEG
25236: PUSH
25237: LD_INT 0
25239: PUSH
25240: EMPTY
25241: LIST
25242: LIST
25243: PUSH
25244: LD_INT 4
25246: NEG
25247: PUSH
25248: LD_INT 1
25250: NEG
25251: PUSH
25252: EMPTY
25253: LIST
25254: LIST
25255: PUSH
25256: LD_INT 3
25258: NEG
25259: PUSH
25260: LD_INT 0
25262: PUSH
25263: EMPTY
25264: LIST
25265: LIST
25266: PUSH
25267: LD_INT 3
25269: NEG
25270: PUSH
25271: LD_INT 1
25273: PUSH
25274: EMPTY
25275: LIST
25276: LIST
25277: PUSH
25278: LD_INT 4
25280: NEG
25281: PUSH
25282: LD_INT 1
25284: PUSH
25285: EMPTY
25286: LIST
25287: LIST
25288: PUSH
25289: LD_INT 5
25291: NEG
25292: PUSH
25293: LD_INT 0
25295: PUSH
25296: EMPTY
25297: LIST
25298: LIST
25299: PUSH
25300: LD_INT 5
25302: NEG
25303: PUSH
25304: LD_INT 1
25306: NEG
25307: PUSH
25308: EMPTY
25309: LIST
25310: LIST
25311: PUSH
25312: LD_INT 5
25314: NEG
25315: PUSH
25316: LD_INT 2
25318: NEG
25319: PUSH
25320: EMPTY
25321: LIST
25322: LIST
25323: PUSH
25324: LD_INT 3
25326: NEG
25327: PUSH
25328: LD_INT 2
25330: PUSH
25331: EMPTY
25332: LIST
25333: LIST
25334: PUSH
25335: LD_INT 3
25337: NEG
25338: PUSH
25339: LD_INT 3
25341: NEG
25342: PUSH
25343: EMPTY
25344: LIST
25345: LIST
25346: PUSH
25347: LD_INT 3
25349: NEG
25350: PUSH
25351: LD_INT 4
25353: NEG
25354: PUSH
25355: EMPTY
25356: LIST
25357: LIST
25358: PUSH
25359: LD_INT 2
25361: NEG
25362: PUSH
25363: LD_INT 3
25365: NEG
25366: PUSH
25367: EMPTY
25368: LIST
25369: LIST
25370: PUSH
25371: LD_INT 2
25373: NEG
25374: PUSH
25375: LD_INT 2
25377: NEG
25378: PUSH
25379: EMPTY
25380: LIST
25381: LIST
25382: PUSH
25383: LD_INT 3
25385: NEG
25386: PUSH
25387: LD_INT 2
25389: NEG
25390: PUSH
25391: EMPTY
25392: LIST
25393: LIST
25394: PUSH
25395: LD_INT 4
25397: NEG
25398: PUSH
25399: LD_INT 3
25401: NEG
25402: PUSH
25403: EMPTY
25404: LIST
25405: LIST
25406: PUSH
25407: LD_INT 4
25409: NEG
25410: PUSH
25411: LD_INT 4
25413: NEG
25414: PUSH
25415: EMPTY
25416: LIST
25417: LIST
25418: PUSH
25419: LD_INT 2
25421: NEG
25422: PUSH
25423: LD_INT 4
25425: NEG
25426: PUSH
25427: EMPTY
25428: LIST
25429: LIST
25430: PUSH
25431: LD_INT 4
25433: NEG
25434: PUSH
25435: LD_INT 2
25437: NEG
25438: PUSH
25439: EMPTY
25440: LIST
25441: LIST
25442: PUSH
25443: LD_INT 0
25445: PUSH
25446: LD_INT 4
25448: NEG
25449: PUSH
25450: EMPTY
25451: LIST
25452: LIST
25453: PUSH
25454: LD_INT 0
25456: PUSH
25457: LD_INT 5
25459: NEG
25460: PUSH
25461: EMPTY
25462: LIST
25463: LIST
25464: PUSH
25465: LD_INT 1
25467: PUSH
25468: LD_INT 4
25470: NEG
25471: PUSH
25472: EMPTY
25473: LIST
25474: LIST
25475: PUSH
25476: LD_INT 1
25478: PUSH
25479: LD_INT 3
25481: NEG
25482: PUSH
25483: EMPTY
25484: LIST
25485: LIST
25486: PUSH
25487: LD_INT 0
25489: PUSH
25490: LD_INT 3
25492: NEG
25493: PUSH
25494: EMPTY
25495: LIST
25496: LIST
25497: PUSH
25498: LD_INT 1
25500: NEG
25501: PUSH
25502: LD_INT 4
25504: NEG
25505: PUSH
25506: EMPTY
25507: LIST
25508: LIST
25509: PUSH
25510: LD_INT 1
25512: NEG
25513: PUSH
25514: LD_INT 5
25516: NEG
25517: PUSH
25518: EMPTY
25519: LIST
25520: LIST
25521: PUSH
25522: LD_INT 2
25524: PUSH
25525: LD_INT 3
25527: NEG
25528: PUSH
25529: EMPTY
25530: LIST
25531: LIST
25532: PUSH
25533: LD_INT 2
25535: NEG
25536: PUSH
25537: LD_INT 5
25539: NEG
25540: PUSH
25541: EMPTY
25542: LIST
25543: LIST
25544: PUSH
25545: LD_INT 3
25547: PUSH
25548: LD_INT 0
25550: PUSH
25551: EMPTY
25552: LIST
25553: LIST
25554: PUSH
25555: LD_INT 3
25557: PUSH
25558: LD_INT 1
25560: NEG
25561: PUSH
25562: EMPTY
25563: LIST
25564: LIST
25565: PUSH
25566: LD_INT 4
25568: PUSH
25569: LD_INT 0
25571: PUSH
25572: EMPTY
25573: LIST
25574: LIST
25575: PUSH
25576: LD_INT 4
25578: PUSH
25579: LD_INT 1
25581: PUSH
25582: EMPTY
25583: LIST
25584: LIST
25585: PUSH
25586: LD_INT 3
25588: PUSH
25589: LD_INT 1
25591: PUSH
25592: EMPTY
25593: LIST
25594: LIST
25595: PUSH
25596: LD_INT 2
25598: PUSH
25599: LD_INT 0
25601: PUSH
25602: EMPTY
25603: LIST
25604: LIST
25605: PUSH
25606: LD_INT 2
25608: PUSH
25609: LD_INT 1
25611: NEG
25612: PUSH
25613: EMPTY
25614: LIST
25615: LIST
25616: PUSH
25617: LD_INT 2
25619: PUSH
25620: LD_INT 2
25622: NEG
25623: PUSH
25624: EMPTY
25625: LIST
25626: LIST
25627: PUSH
25628: LD_INT 4
25630: PUSH
25631: LD_INT 2
25633: PUSH
25634: EMPTY
25635: LIST
25636: LIST
25637: PUSH
25638: LD_INT 4
25640: PUSH
25641: LD_INT 4
25643: PUSH
25644: EMPTY
25645: LIST
25646: LIST
25647: PUSH
25648: LD_INT 4
25650: PUSH
25651: LD_INT 3
25653: PUSH
25654: EMPTY
25655: LIST
25656: LIST
25657: PUSH
25658: LD_INT 5
25660: PUSH
25661: LD_INT 4
25663: PUSH
25664: EMPTY
25665: LIST
25666: LIST
25667: PUSH
25668: LD_INT 5
25670: PUSH
25671: LD_INT 5
25673: PUSH
25674: EMPTY
25675: LIST
25676: LIST
25677: PUSH
25678: LD_INT 4
25680: PUSH
25681: LD_INT 5
25683: PUSH
25684: EMPTY
25685: LIST
25686: LIST
25687: PUSH
25688: LD_INT 3
25690: PUSH
25691: LD_INT 4
25693: PUSH
25694: EMPTY
25695: LIST
25696: LIST
25697: PUSH
25698: LD_INT 3
25700: PUSH
25701: LD_INT 3
25703: PUSH
25704: EMPTY
25705: LIST
25706: LIST
25707: PUSH
25708: LD_INT 5
25710: PUSH
25711: LD_INT 3
25713: PUSH
25714: EMPTY
25715: LIST
25716: LIST
25717: PUSH
25718: LD_INT 3
25720: PUSH
25721: LD_INT 5
25723: PUSH
25724: EMPTY
25725: LIST
25726: LIST
25727: PUSH
25728: EMPTY
25729: LIST
25730: LIST
25731: LIST
25732: LIST
25733: LIST
25734: LIST
25735: LIST
25736: LIST
25737: LIST
25738: LIST
25739: LIST
25740: LIST
25741: LIST
25742: LIST
25743: LIST
25744: LIST
25745: LIST
25746: LIST
25747: LIST
25748: LIST
25749: LIST
25750: LIST
25751: LIST
25752: LIST
25753: LIST
25754: LIST
25755: LIST
25756: LIST
25757: LIST
25758: LIST
25759: LIST
25760: LIST
25761: LIST
25762: LIST
25763: LIST
25764: LIST
25765: LIST
25766: LIST
25767: LIST
25768: LIST
25769: LIST
25770: LIST
25771: LIST
25772: LIST
25773: LIST
25774: ST_TO_ADDR
// Factory4 = [ [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 3 , - 4 ] , [ - 3 , - 3 ] , [ - 4 , - 3 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 3 , - 5 ] , [ - 5 , - 3 ] , [ 0 , - 3 ] , [ 0 , - 4 ] , [ 1 , - 3 ] , [ 1 , - 2 ] , [ 0 , - 2 ] , [ - 1 , - 3 ] , [ - 1 , - 4 ] , [ 2 , - 2 ] , [ - 2 , - 4 ] , [ 4 , 0 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 4 , 1 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 3 , - 2 ] , [ 5 , 2 ] , [ 3 , 3 ] , [ 3 , 2 ] , [ 4 , 3 ] , [ 4 , 4 ] , [ 3 , 4 ] , [ 2 , 3 ] , [ 2 , 2 ] , [ 4 , 2 ] , [ 2 , 4 ] , [ 0 , 4 ] , [ 0 , 3 ] , [ 1 , 4 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ - 1 , 3 ] , [ 2 , 5 ] , [ - 2 , 3 ] ] ;
25775: LD_ADDR_VAR 0 33
25779: PUSH
25780: LD_INT 4
25782: NEG
25783: PUSH
25784: LD_INT 4
25786: NEG
25787: PUSH
25788: EMPTY
25789: LIST
25790: LIST
25791: PUSH
25792: LD_INT 4
25794: NEG
25795: PUSH
25796: LD_INT 5
25798: NEG
25799: PUSH
25800: EMPTY
25801: LIST
25802: LIST
25803: PUSH
25804: LD_INT 3
25806: NEG
25807: PUSH
25808: LD_INT 4
25810: NEG
25811: PUSH
25812: EMPTY
25813: LIST
25814: LIST
25815: PUSH
25816: LD_INT 3
25818: NEG
25819: PUSH
25820: LD_INT 3
25822: NEG
25823: PUSH
25824: EMPTY
25825: LIST
25826: LIST
25827: PUSH
25828: LD_INT 4
25830: NEG
25831: PUSH
25832: LD_INT 3
25834: NEG
25835: PUSH
25836: EMPTY
25837: LIST
25838: LIST
25839: PUSH
25840: LD_INT 5
25842: NEG
25843: PUSH
25844: LD_INT 4
25846: NEG
25847: PUSH
25848: EMPTY
25849: LIST
25850: LIST
25851: PUSH
25852: LD_INT 5
25854: NEG
25855: PUSH
25856: LD_INT 5
25858: NEG
25859: PUSH
25860: EMPTY
25861: LIST
25862: LIST
25863: PUSH
25864: LD_INT 3
25866: NEG
25867: PUSH
25868: LD_INT 5
25870: NEG
25871: PUSH
25872: EMPTY
25873: LIST
25874: LIST
25875: PUSH
25876: LD_INT 5
25878: NEG
25879: PUSH
25880: LD_INT 3
25882: NEG
25883: PUSH
25884: EMPTY
25885: LIST
25886: LIST
25887: PUSH
25888: LD_INT 0
25890: PUSH
25891: LD_INT 3
25893: NEG
25894: PUSH
25895: EMPTY
25896: LIST
25897: LIST
25898: PUSH
25899: LD_INT 0
25901: PUSH
25902: LD_INT 4
25904: NEG
25905: PUSH
25906: EMPTY
25907: LIST
25908: LIST
25909: PUSH
25910: LD_INT 1
25912: PUSH
25913: LD_INT 3
25915: NEG
25916: PUSH
25917: EMPTY
25918: LIST
25919: LIST
25920: PUSH
25921: LD_INT 1
25923: PUSH
25924: LD_INT 2
25926: NEG
25927: PUSH
25928: EMPTY
25929: LIST
25930: LIST
25931: PUSH
25932: LD_INT 0
25934: PUSH
25935: LD_INT 2
25937: NEG
25938: PUSH
25939: EMPTY
25940: LIST
25941: LIST
25942: PUSH
25943: LD_INT 1
25945: NEG
25946: PUSH
25947: LD_INT 3
25949: NEG
25950: PUSH
25951: EMPTY
25952: LIST
25953: LIST
25954: PUSH
25955: LD_INT 1
25957: NEG
25958: PUSH
25959: LD_INT 4
25961: NEG
25962: PUSH
25963: EMPTY
25964: LIST
25965: LIST
25966: PUSH
25967: LD_INT 2
25969: PUSH
25970: LD_INT 2
25972: NEG
25973: PUSH
25974: EMPTY
25975: LIST
25976: LIST
25977: PUSH
25978: LD_INT 2
25980: NEG
25981: PUSH
25982: LD_INT 4
25984: NEG
25985: PUSH
25986: EMPTY
25987: LIST
25988: LIST
25989: PUSH
25990: LD_INT 4
25992: PUSH
25993: LD_INT 0
25995: PUSH
25996: EMPTY
25997: LIST
25998: LIST
25999: PUSH
26000: LD_INT 4
26002: PUSH
26003: LD_INT 1
26005: NEG
26006: PUSH
26007: EMPTY
26008: LIST
26009: LIST
26010: PUSH
26011: LD_INT 5
26013: PUSH
26014: LD_INT 0
26016: PUSH
26017: EMPTY
26018: LIST
26019: LIST
26020: PUSH
26021: LD_INT 5
26023: PUSH
26024: LD_INT 1
26026: PUSH
26027: EMPTY
26028: LIST
26029: LIST
26030: PUSH
26031: LD_INT 4
26033: PUSH
26034: LD_INT 1
26036: PUSH
26037: EMPTY
26038: LIST
26039: LIST
26040: PUSH
26041: LD_INT 3
26043: PUSH
26044: LD_INT 0
26046: PUSH
26047: EMPTY
26048: LIST
26049: LIST
26050: PUSH
26051: LD_INT 3
26053: PUSH
26054: LD_INT 1
26056: NEG
26057: PUSH
26058: EMPTY
26059: LIST
26060: LIST
26061: PUSH
26062: LD_INT 3
26064: PUSH
26065: LD_INT 2
26067: NEG
26068: PUSH
26069: EMPTY
26070: LIST
26071: LIST
26072: PUSH
26073: LD_INT 5
26075: PUSH
26076: LD_INT 2
26078: PUSH
26079: EMPTY
26080: LIST
26081: LIST
26082: PUSH
26083: LD_INT 3
26085: PUSH
26086: LD_INT 3
26088: PUSH
26089: EMPTY
26090: LIST
26091: LIST
26092: PUSH
26093: LD_INT 3
26095: PUSH
26096: LD_INT 2
26098: PUSH
26099: EMPTY
26100: LIST
26101: LIST
26102: PUSH
26103: LD_INT 4
26105: PUSH
26106: LD_INT 3
26108: PUSH
26109: EMPTY
26110: LIST
26111: LIST
26112: PUSH
26113: LD_INT 4
26115: PUSH
26116: LD_INT 4
26118: PUSH
26119: EMPTY
26120: LIST
26121: LIST
26122: PUSH
26123: LD_INT 3
26125: PUSH
26126: LD_INT 4
26128: PUSH
26129: EMPTY
26130: LIST
26131: LIST
26132: PUSH
26133: LD_INT 2
26135: PUSH
26136: LD_INT 3
26138: PUSH
26139: EMPTY
26140: LIST
26141: LIST
26142: PUSH
26143: LD_INT 2
26145: PUSH
26146: LD_INT 2
26148: PUSH
26149: EMPTY
26150: LIST
26151: LIST
26152: PUSH
26153: LD_INT 4
26155: PUSH
26156: LD_INT 2
26158: PUSH
26159: EMPTY
26160: LIST
26161: LIST
26162: PUSH
26163: LD_INT 2
26165: PUSH
26166: LD_INT 4
26168: PUSH
26169: EMPTY
26170: LIST
26171: LIST
26172: PUSH
26173: LD_INT 0
26175: PUSH
26176: LD_INT 4
26178: PUSH
26179: EMPTY
26180: LIST
26181: LIST
26182: PUSH
26183: LD_INT 0
26185: PUSH
26186: LD_INT 3
26188: PUSH
26189: EMPTY
26190: LIST
26191: LIST
26192: PUSH
26193: LD_INT 1
26195: PUSH
26196: LD_INT 4
26198: PUSH
26199: EMPTY
26200: LIST
26201: LIST
26202: PUSH
26203: LD_INT 1
26205: PUSH
26206: LD_INT 5
26208: PUSH
26209: EMPTY
26210: LIST
26211: LIST
26212: PUSH
26213: LD_INT 0
26215: PUSH
26216: LD_INT 5
26218: PUSH
26219: EMPTY
26220: LIST
26221: LIST
26222: PUSH
26223: LD_INT 1
26225: NEG
26226: PUSH
26227: LD_INT 4
26229: PUSH
26230: EMPTY
26231: LIST
26232: LIST
26233: PUSH
26234: LD_INT 1
26236: NEG
26237: PUSH
26238: LD_INT 3
26240: PUSH
26241: EMPTY
26242: LIST
26243: LIST
26244: PUSH
26245: LD_INT 2
26247: PUSH
26248: LD_INT 5
26250: PUSH
26251: EMPTY
26252: LIST
26253: LIST
26254: PUSH
26255: LD_INT 2
26257: NEG
26258: PUSH
26259: LD_INT 3
26261: PUSH
26262: EMPTY
26263: LIST
26264: LIST
26265: PUSH
26266: EMPTY
26267: LIST
26268: LIST
26269: LIST
26270: LIST
26271: LIST
26272: LIST
26273: LIST
26274: LIST
26275: LIST
26276: LIST
26277: LIST
26278: LIST
26279: LIST
26280: LIST
26281: LIST
26282: LIST
26283: LIST
26284: LIST
26285: LIST
26286: LIST
26287: LIST
26288: LIST
26289: LIST
26290: LIST
26291: LIST
26292: LIST
26293: LIST
26294: LIST
26295: LIST
26296: LIST
26297: LIST
26298: LIST
26299: LIST
26300: LIST
26301: LIST
26302: LIST
26303: LIST
26304: LIST
26305: LIST
26306: LIST
26307: LIST
26308: LIST
26309: LIST
26310: LIST
26311: LIST
26312: ST_TO_ADDR
// Factory5 = [ [ 0 , - 4 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ 1 , - 3 ] , [ 0 , - 3 ] , [ - 1 , - 4 ] , [ - 1 , - 5 ] , [ 2 , - 3 ] , [ - 2 , - 5 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 4 , 0 ] , [ 4 , 1 ] , [ 3 , 1 ] , [ 2 , 0 ] , [ 2 , - 1 ] , [ 2 , - 2 ] , [ 4 , 2 ] , [ 4 , 4 ] , [ 4 , 3 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 3 , 4 ] , [ 3 , 3 ] , [ 5 , 3 ] , [ 3 , 5 ] , [ 0 , 3 ] , [ 0 , 2 ] , [ 1 , 3 ] , [ 1 , 4 ] , [ 0 , 4 ] , [ - 1 , 3 ] , [ - 1 , 2 ] , [ 2 , 4 ] , [ - 2 , 2 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , - 2 ] , [ - 3 , 2 ] ] ;
26313: LD_ADDR_VAR 0 34
26317: PUSH
26318: LD_INT 0
26320: PUSH
26321: LD_INT 4
26323: NEG
26324: PUSH
26325: EMPTY
26326: LIST
26327: LIST
26328: PUSH
26329: LD_INT 0
26331: PUSH
26332: LD_INT 5
26334: NEG
26335: PUSH
26336: EMPTY
26337: LIST
26338: LIST
26339: PUSH
26340: LD_INT 1
26342: PUSH
26343: LD_INT 4
26345: NEG
26346: PUSH
26347: EMPTY
26348: LIST
26349: LIST
26350: PUSH
26351: LD_INT 1
26353: PUSH
26354: LD_INT 3
26356: NEG
26357: PUSH
26358: EMPTY
26359: LIST
26360: LIST
26361: PUSH
26362: LD_INT 0
26364: PUSH
26365: LD_INT 3
26367: NEG
26368: PUSH
26369: EMPTY
26370: LIST
26371: LIST
26372: PUSH
26373: LD_INT 1
26375: NEG
26376: PUSH
26377: LD_INT 4
26379: NEG
26380: PUSH
26381: EMPTY
26382: LIST
26383: LIST
26384: PUSH
26385: LD_INT 1
26387: NEG
26388: PUSH
26389: LD_INT 5
26391: NEG
26392: PUSH
26393: EMPTY
26394: LIST
26395: LIST
26396: PUSH
26397: LD_INT 2
26399: PUSH
26400: LD_INT 3
26402: NEG
26403: PUSH
26404: EMPTY
26405: LIST
26406: LIST
26407: PUSH
26408: LD_INT 2
26410: NEG
26411: PUSH
26412: LD_INT 5
26414: NEG
26415: PUSH
26416: EMPTY
26417: LIST
26418: LIST
26419: PUSH
26420: LD_INT 3
26422: PUSH
26423: LD_INT 0
26425: PUSH
26426: EMPTY
26427: LIST
26428: LIST
26429: PUSH
26430: LD_INT 3
26432: PUSH
26433: LD_INT 1
26435: NEG
26436: PUSH
26437: EMPTY
26438: LIST
26439: LIST
26440: PUSH
26441: LD_INT 4
26443: PUSH
26444: LD_INT 0
26446: PUSH
26447: EMPTY
26448: LIST
26449: LIST
26450: PUSH
26451: LD_INT 4
26453: PUSH
26454: LD_INT 1
26456: PUSH
26457: EMPTY
26458: LIST
26459: LIST
26460: PUSH
26461: LD_INT 3
26463: PUSH
26464: LD_INT 1
26466: PUSH
26467: EMPTY
26468: LIST
26469: LIST
26470: PUSH
26471: LD_INT 2
26473: PUSH
26474: LD_INT 0
26476: PUSH
26477: EMPTY
26478: LIST
26479: LIST
26480: PUSH
26481: LD_INT 2
26483: PUSH
26484: LD_INT 1
26486: NEG
26487: PUSH
26488: EMPTY
26489: LIST
26490: LIST
26491: PUSH
26492: LD_INT 2
26494: PUSH
26495: LD_INT 2
26497: NEG
26498: PUSH
26499: EMPTY
26500: LIST
26501: LIST
26502: PUSH
26503: LD_INT 4
26505: PUSH
26506: LD_INT 2
26508: PUSH
26509: EMPTY
26510: LIST
26511: LIST
26512: PUSH
26513: LD_INT 4
26515: PUSH
26516: LD_INT 4
26518: PUSH
26519: EMPTY
26520: LIST
26521: LIST
26522: PUSH
26523: LD_INT 4
26525: PUSH
26526: LD_INT 3
26528: PUSH
26529: EMPTY
26530: LIST
26531: LIST
26532: PUSH
26533: LD_INT 5
26535: PUSH
26536: LD_INT 4
26538: PUSH
26539: EMPTY
26540: LIST
26541: LIST
26542: PUSH
26543: LD_INT 5
26545: PUSH
26546: LD_INT 5
26548: PUSH
26549: EMPTY
26550: LIST
26551: LIST
26552: PUSH
26553: LD_INT 4
26555: PUSH
26556: LD_INT 5
26558: PUSH
26559: EMPTY
26560: LIST
26561: LIST
26562: PUSH
26563: LD_INT 3
26565: PUSH
26566: LD_INT 4
26568: PUSH
26569: EMPTY
26570: LIST
26571: LIST
26572: PUSH
26573: LD_INT 3
26575: PUSH
26576: LD_INT 3
26578: PUSH
26579: EMPTY
26580: LIST
26581: LIST
26582: PUSH
26583: LD_INT 5
26585: PUSH
26586: LD_INT 3
26588: PUSH
26589: EMPTY
26590: LIST
26591: LIST
26592: PUSH
26593: LD_INT 3
26595: PUSH
26596: LD_INT 5
26598: PUSH
26599: EMPTY
26600: LIST
26601: LIST
26602: PUSH
26603: LD_INT 0
26605: PUSH
26606: LD_INT 3
26608: PUSH
26609: EMPTY
26610: LIST
26611: LIST
26612: PUSH
26613: LD_INT 0
26615: PUSH
26616: LD_INT 2
26618: PUSH
26619: EMPTY
26620: LIST
26621: LIST
26622: PUSH
26623: LD_INT 1
26625: PUSH
26626: LD_INT 3
26628: PUSH
26629: EMPTY
26630: LIST
26631: LIST
26632: PUSH
26633: LD_INT 1
26635: PUSH
26636: LD_INT 4
26638: PUSH
26639: EMPTY
26640: LIST
26641: LIST
26642: PUSH
26643: LD_INT 0
26645: PUSH
26646: LD_INT 4
26648: PUSH
26649: EMPTY
26650: LIST
26651: LIST
26652: PUSH
26653: LD_INT 1
26655: NEG
26656: PUSH
26657: LD_INT 3
26659: PUSH
26660: EMPTY
26661: LIST
26662: LIST
26663: PUSH
26664: LD_INT 1
26666: NEG
26667: PUSH
26668: LD_INT 2
26670: PUSH
26671: EMPTY
26672: LIST
26673: LIST
26674: PUSH
26675: LD_INT 2
26677: PUSH
26678: LD_INT 4
26680: PUSH
26681: EMPTY
26682: LIST
26683: LIST
26684: PUSH
26685: LD_INT 2
26687: NEG
26688: PUSH
26689: LD_INT 2
26691: PUSH
26692: EMPTY
26693: LIST
26694: LIST
26695: PUSH
26696: LD_INT 4
26698: NEG
26699: PUSH
26700: LD_INT 0
26702: PUSH
26703: EMPTY
26704: LIST
26705: LIST
26706: PUSH
26707: LD_INT 4
26709: NEG
26710: PUSH
26711: LD_INT 1
26713: NEG
26714: PUSH
26715: EMPTY
26716: LIST
26717: LIST
26718: PUSH
26719: LD_INT 3
26721: NEG
26722: PUSH
26723: LD_INT 0
26725: PUSH
26726: EMPTY
26727: LIST
26728: LIST
26729: PUSH
26730: LD_INT 3
26732: NEG
26733: PUSH
26734: LD_INT 1
26736: PUSH
26737: EMPTY
26738: LIST
26739: LIST
26740: PUSH
26741: LD_INT 4
26743: NEG
26744: PUSH
26745: LD_INT 1
26747: PUSH
26748: EMPTY
26749: LIST
26750: LIST
26751: PUSH
26752: LD_INT 5
26754: NEG
26755: PUSH
26756: LD_INT 0
26758: PUSH
26759: EMPTY
26760: LIST
26761: LIST
26762: PUSH
26763: LD_INT 5
26765: NEG
26766: PUSH
26767: LD_INT 1
26769: NEG
26770: PUSH
26771: EMPTY
26772: LIST
26773: LIST
26774: PUSH
26775: LD_INT 5
26777: NEG
26778: PUSH
26779: LD_INT 2
26781: NEG
26782: PUSH
26783: EMPTY
26784: LIST
26785: LIST
26786: PUSH
26787: LD_INT 3
26789: NEG
26790: PUSH
26791: LD_INT 2
26793: PUSH
26794: EMPTY
26795: LIST
26796: LIST
26797: PUSH
26798: EMPTY
26799: LIST
26800: LIST
26801: LIST
26802: LIST
26803: LIST
26804: LIST
26805: LIST
26806: LIST
26807: LIST
26808: LIST
26809: LIST
26810: LIST
26811: LIST
26812: LIST
26813: LIST
26814: LIST
26815: LIST
26816: LIST
26817: LIST
26818: LIST
26819: LIST
26820: LIST
26821: LIST
26822: LIST
26823: LIST
26824: LIST
26825: LIST
26826: LIST
26827: LIST
26828: LIST
26829: LIST
26830: LIST
26831: LIST
26832: LIST
26833: LIST
26834: LIST
26835: LIST
26836: LIST
26837: LIST
26838: LIST
26839: LIST
26840: LIST
26841: LIST
26842: LIST
26843: LIST
26844: ST_TO_ADDR
// end ; end ;
26845: GO 26848
26847: POP
// case btype of b_depot , b_warehouse :
26848: LD_VAR 0 1
26852: PUSH
26853: LD_INT 0
26855: DOUBLE
26856: EQUAL
26857: IFTRUE 26867
26859: LD_INT 1
26861: DOUBLE
26862: EQUAL
26863: IFTRUE 26867
26865: GO 27068
26867: POP
// case nation of nation_american :
26868: LD_VAR 0 5
26872: PUSH
26873: LD_INT 1
26875: DOUBLE
26876: EQUAL
26877: IFTRUE 26881
26879: GO 26937
26881: POP
// temp_list = [ DepotAm0 , DepotAm1 , DepotAm2 , DepotAm3 , DepotAm4 , DepotAm5 ] [ dir + 1 ] ; nation_arabian :
26882: LD_ADDR_VAR 0 9
26886: PUSH
26887: LD_VAR 0 11
26891: PUSH
26892: LD_VAR 0 12
26896: PUSH
26897: LD_VAR 0 13
26901: PUSH
26902: LD_VAR 0 14
26906: PUSH
26907: LD_VAR 0 15
26911: PUSH
26912: LD_VAR 0 16
26916: PUSH
26917: EMPTY
26918: LIST
26919: LIST
26920: LIST
26921: LIST
26922: LIST
26923: LIST
26924: PUSH
26925: LD_VAR 0 4
26929: PUSH
26930: LD_INT 1
26932: PLUS
26933: ARRAY
26934: ST_TO_ADDR
26935: GO 27066
26937: LD_INT 2
26939: DOUBLE
26940: EQUAL
26941: IFTRUE 26945
26943: GO 27001
26945: POP
// temp_list = [ DepotAr0 , DepotAr1 , DepotAr2 , DepotAr3 , DepotAr4 , DepotAr5 ] [ dir + 1 ] ; nation_russian :
26946: LD_ADDR_VAR 0 9
26950: PUSH
26951: LD_VAR 0 17
26955: PUSH
26956: LD_VAR 0 18
26960: PUSH
26961: LD_VAR 0 19
26965: PUSH
26966: LD_VAR 0 20
26970: PUSH
26971: LD_VAR 0 21
26975: PUSH
26976: LD_VAR 0 22
26980: PUSH
26981: EMPTY
26982: LIST
26983: LIST
26984: LIST
26985: LIST
26986: LIST
26987: LIST
26988: PUSH
26989: LD_VAR 0 4
26993: PUSH
26994: LD_INT 1
26996: PLUS
26997: ARRAY
26998: ST_TO_ADDR
26999: GO 27066
27001: LD_INT 3
27003: DOUBLE
27004: EQUAL
27005: IFTRUE 27009
27007: GO 27065
27009: POP
// temp_list = [ DepotRu0 , DepotRu1 , DepotRu2 , DepotRu3 , DepotRu4 , DepotRu5 ] [ dir + 1 ] ; end ; b_workshop , b_factory :
27010: LD_ADDR_VAR 0 9
27014: PUSH
27015: LD_VAR 0 23
27019: PUSH
27020: LD_VAR 0 24
27024: PUSH
27025: LD_VAR 0 25
27029: PUSH
27030: LD_VAR 0 26
27034: PUSH
27035: LD_VAR 0 27
27039: PUSH
27040: LD_VAR 0 28
27044: PUSH
27045: EMPTY
27046: LIST
27047: LIST
27048: LIST
27049: LIST
27050: LIST
27051: LIST
27052: PUSH
27053: LD_VAR 0 4
27057: PUSH
27058: LD_INT 1
27060: PLUS
27061: ARRAY
27062: ST_TO_ADDR
27063: GO 27066
27065: POP
27066: GO 27615
27068: LD_INT 2
27070: DOUBLE
27071: EQUAL
27072: IFTRUE 27082
27074: LD_INT 3
27076: DOUBLE
27077: EQUAL
27078: IFTRUE 27082
27080: GO 27138
27082: POP
// temp_list = [ Factory0 , Factory1 , Factory2 , Factory3 , Factory4 , Factory5 ] [ dir + 1 ] ; b_ext_track , b_ext_gun , b_ext_rocket , b_ext_noncombat , b_ext_radar , b_ext_siberium , b_ext_stitch , b_ext_computer , b_ext_laser :
27083: LD_ADDR_VAR 0 9
27087: PUSH
27088: LD_VAR 0 29
27092: PUSH
27093: LD_VAR 0 30
27097: PUSH
27098: LD_VAR 0 31
27102: PUSH
27103: LD_VAR 0 32
27107: PUSH
27108: LD_VAR 0 33
27112: PUSH
27113: LD_VAR 0 34
27117: PUSH
27118: EMPTY
27119: LIST
27120: LIST
27121: LIST
27122: LIST
27123: LIST
27124: LIST
27125: PUSH
27126: LD_VAR 0 4
27130: PUSH
27131: LD_INT 1
27133: PLUS
27134: ARRAY
27135: ST_TO_ADDR
27136: GO 27615
27138: LD_INT 16
27140: DOUBLE
27141: EQUAL
27142: IFTRUE 27194
27144: LD_INT 17
27146: DOUBLE
27147: EQUAL
27148: IFTRUE 27194
27150: LD_INT 18
27152: DOUBLE
27153: EQUAL
27154: IFTRUE 27194
27156: LD_INT 19
27158: DOUBLE
27159: EQUAL
27160: IFTRUE 27194
27162: LD_INT 20
27164: DOUBLE
27165: EQUAL
27166: IFTRUE 27194
27168: LD_INT 21
27170: DOUBLE
27171: EQUAL
27172: IFTRUE 27194
27174: LD_INT 23
27176: DOUBLE
27177: EQUAL
27178: IFTRUE 27194
27180: LD_INT 24
27182: DOUBLE
27183: EQUAL
27184: IFTRUE 27194
27186: LD_INT 25
27188: DOUBLE
27189: EQUAL
27190: IFTRUE 27194
27192: GO 27250
27194: POP
// temp_list = [ Ext0 , Ext1 , Ext2 , Ext3 , Ext4 , Ext5 ] [ dir + 1 ] ; b_lab , b_lab_half , b_lab_full , b_lab_biological , b_lab_computer , b_lab_opto , b_lab_siberium , b_lab_spacetime , b_lab_weapon :
27195: LD_ADDR_VAR 0 9
27199: PUSH
27200: LD_VAR 0 35
27204: PUSH
27205: LD_VAR 0 36
27209: PUSH
27210: LD_VAR 0 37
27214: PUSH
27215: LD_VAR 0 38
27219: PUSH
27220: LD_VAR 0 39
27224: PUSH
27225: LD_VAR 0 40
27229: PUSH
27230: EMPTY
27231: LIST
27232: LIST
27233: LIST
27234: LIST
27235: LIST
27236: LIST
27237: PUSH
27238: LD_VAR 0 4
27242: PUSH
27243: LD_INT 1
27245: PLUS
27246: ARRAY
27247: ST_TO_ADDR
27248: GO 27615
27250: LD_INT 6
27252: DOUBLE
27253: EQUAL
27254: IFTRUE 27306
27256: LD_INT 7
27258: DOUBLE
27259: EQUAL
27260: IFTRUE 27306
27262: LD_INT 8
27264: DOUBLE
27265: EQUAL
27266: IFTRUE 27306
27268: LD_INT 13
27270: DOUBLE
27271: EQUAL
27272: IFTRUE 27306
27274: LD_INT 12
27276: DOUBLE
27277: EQUAL
27278: IFTRUE 27306
27280: LD_INT 15
27282: DOUBLE
27283: EQUAL
27284: IFTRUE 27306
27286: LD_INT 11
27288: DOUBLE
27289: EQUAL
27290: IFTRUE 27306
27292: LD_INT 14
27294: DOUBLE
27295: EQUAL
27296: IFTRUE 27306
27298: LD_INT 10
27300: DOUBLE
27301: EQUAL
27302: IFTRUE 27306
27304: GO 27362
27306: POP
// temp_list = [ Lab0 , Lab1 , Lab2 , Lab3 , Lab4 , Lab5 ] [ dir + 1 ] ; b_control_tower :
27307: LD_ADDR_VAR 0 9
27311: PUSH
27312: LD_VAR 0 41
27316: PUSH
27317: LD_VAR 0 42
27321: PUSH
27322: LD_VAR 0 43
27326: PUSH
27327: LD_VAR 0 44
27331: PUSH
27332: LD_VAR 0 45
27336: PUSH
27337: LD_VAR 0 46
27341: PUSH
27342: EMPTY
27343: LIST
27344: LIST
27345: LIST
27346: LIST
27347: LIST
27348: LIST
27349: PUSH
27350: LD_VAR 0 4
27354: PUSH
27355: LD_INT 1
27357: PLUS
27358: ARRAY
27359: ST_TO_ADDR
27360: GO 27615
27362: LD_INT 36
27364: DOUBLE
27365: EQUAL
27366: IFTRUE 27370
27368: GO 27426
27370: POP
// temp_list = [ ControlTower0 , ControlTower1 , ControlTower2 , ControlTower3 , ControlTower4 , ControlTower5 ] [ dir + 1 ] ; b_armoury , b_barracks , b_teleport , b_behemoth :
27371: LD_ADDR_VAR 0 9
27375: PUSH
27376: LD_VAR 0 47
27380: PUSH
27381: LD_VAR 0 48
27385: PUSH
27386: LD_VAR 0 49
27390: PUSH
27391: LD_VAR 0 50
27395: PUSH
27396: LD_VAR 0 51
27400: PUSH
27401: LD_VAR 0 52
27405: PUSH
27406: EMPTY
27407: LIST
27408: LIST
27409: LIST
27410: LIST
27411: LIST
27412: LIST
27413: PUSH
27414: LD_VAR 0 4
27418: PUSH
27419: LD_INT 1
27421: PLUS
27422: ARRAY
27423: ST_TO_ADDR
27424: GO 27615
27426: LD_INT 4
27428: DOUBLE
27429: EQUAL
27430: IFTRUE 27452
27432: LD_INT 5
27434: DOUBLE
27435: EQUAL
27436: IFTRUE 27452
27438: LD_INT 34
27440: DOUBLE
27441: EQUAL
27442: IFTRUE 27452
27444: LD_INT 37
27446: DOUBLE
27447: EQUAL
27448: IFTRUE 27452
27450: GO 27508
27452: POP
// temp_list = [ Barracks0 , Barracks1 , Barracks2 , Barracks3 , Barracks4 , Barracks5 ] [ dir + 1 ] ; b_breastwork , b_bunker , b_turret , b_solar_power , b_oil_power , b_siberite_power , b_oil_mine , b_siberite_mine :
27453: LD_ADDR_VAR 0 9
27457: PUSH
27458: LD_VAR 0 53
27462: PUSH
27463: LD_VAR 0 54
27467: PUSH
27468: LD_VAR 0 55
27472: PUSH
27473: LD_VAR 0 56
27477: PUSH
27478: LD_VAR 0 57
27482: PUSH
27483: LD_VAR 0 58
27487: PUSH
27488: EMPTY
27489: LIST
27490: LIST
27491: LIST
27492: LIST
27493: LIST
27494: LIST
27495: PUSH
27496: LD_VAR 0 4
27500: PUSH
27501: LD_INT 1
27503: PLUS
27504: ARRAY
27505: ST_TO_ADDR
27506: GO 27615
27508: LD_INT 31
27510: DOUBLE
27511: EQUAL
27512: IFTRUE 27558
27514: LD_INT 32
27516: DOUBLE
27517: EQUAL
27518: IFTRUE 27558
27520: LD_INT 33
27522: DOUBLE
27523: EQUAL
27524: IFTRUE 27558
27526: LD_INT 27
27528: DOUBLE
27529: EQUAL
27530: IFTRUE 27558
27532: LD_INT 26
27534: DOUBLE
27535: EQUAL
27536: IFTRUE 27558
27538: LD_INT 28
27540: DOUBLE
27541: EQUAL
27542: IFTRUE 27558
27544: LD_INT 29
27546: DOUBLE
27547: EQUAL
27548: IFTRUE 27558
27550: LD_INT 30
27552: DOUBLE
27553: EQUAL
27554: IFTRUE 27558
27556: GO 27614
27558: POP
// temp_list = [ Bunker0 , Bunker1 , Bunker2 , Bunker3 , Bunker4 , Bunker5 ] [ dir + 1 ] ; end ;
27559: LD_ADDR_VAR 0 9
27563: PUSH
27564: LD_VAR 0 59
27568: PUSH
27569: LD_VAR 0 60
27573: PUSH
27574: LD_VAR 0 61
27578: PUSH
27579: LD_VAR 0 62
27583: PUSH
27584: LD_VAR 0 63
27588: PUSH
27589: LD_VAR 0 64
27593: PUSH
27594: EMPTY
27595: LIST
27596: LIST
27597: LIST
27598: LIST
27599: LIST
27600: LIST
27601: PUSH
27602: LD_VAR 0 4
27606: PUSH
27607: LD_INT 1
27609: PLUS
27610: ARRAY
27611: ST_TO_ADDR
27612: GO 27615
27614: POP
// temp_list2 = [ ] ;
27615: LD_ADDR_VAR 0 10
27619: PUSH
27620: EMPTY
27621: ST_TO_ADDR
// for i in temp_list do
27622: LD_ADDR_VAR 0 8
27626: PUSH
27627: LD_VAR 0 9
27631: PUSH
27632: FOR_IN
27633: IFFALSE 27685
// temp_list2 = temp_list2 ^ [ [ i [ 1 ] + x , i [ 2 ] + y ] ] ;
27635: LD_ADDR_VAR 0 10
27639: PUSH
27640: LD_VAR 0 10
27644: PUSH
27645: LD_VAR 0 8
27649: PUSH
27650: LD_INT 1
27652: ARRAY
27653: PUSH
27654: LD_VAR 0 2
27658: PLUS
27659: PUSH
27660: LD_VAR 0 8
27664: PUSH
27665: LD_INT 2
27667: ARRAY
27668: PUSH
27669: LD_VAR 0 3
27673: PLUS
27674: PUSH
27675: EMPTY
27676: LIST
27677: LIST
27678: PUSH
27679: EMPTY
27680: LIST
27681: ADD
27682: ST_TO_ADDR
27683: GO 27632
27685: POP
27686: POP
// result = temp_list2 ;
27687: LD_ADDR_VAR 0 7
27691: PUSH
27692: LD_VAR 0 10
27696: ST_TO_ADDR
// end ;
27697: LD_VAR 0 7
27701: RET
// export function IsNearbyEntrance ( unit , building , distance ) ; var i , entrance ; begin
27702: LD_INT 0
27704: PPUSH
27705: PPUSH
27706: PPUSH
// result := false ;
27707: LD_ADDR_VAR 0 4
27711: PUSH
27712: LD_INT 0
27714: ST_TO_ADDR
// if not unit or not building or IsInUnit ( unit ) then
27715: LD_VAR 0 1
27719: NOT
27720: PUSH
27721: LD_VAR 0 2
27725: NOT
27726: OR
27727: PUSH
27728: LD_VAR 0 1
27732: PPUSH
27733: CALL_OW 310
27737: OR
27738: IFFALSE 27742
// exit ;
27740: GO 27946
// if distance < 0 then
27742: LD_VAR 0 3
27746: PUSH
27747: LD_INT 0
27749: LESS
27750: IFFALSE 27760
// distance := 0 ;
27752: LD_ADDR_VAR 0 3
27756: PUSH
27757: LD_INT 0
27759: ST_TO_ADDR
// entrance := GetBuildingHexes ( GetBType ( building ) , GetX ( building ) , GetY ( building ) , GetDir ( building ) , GetNation ( building ) , 1 ) ;
27760: LD_ADDR_VAR 0 6
27764: PUSH
27765: LD_VAR 0 2
27769: PPUSH
27770: CALL_OW 266
27774: PPUSH
27775: LD_VAR 0 2
27779: PPUSH
27780: CALL_OW 250
27784: PPUSH
27785: LD_VAR 0 2
27789: PPUSH
27790: CALL_OW 251
27794: PPUSH
27795: LD_VAR 0 2
27799: PPUSH
27800: CALL_OW 254
27804: PPUSH
27805: LD_VAR 0 2
27809: PPUSH
27810: CALL_OW 248
27814: PPUSH
27815: LD_INT 1
27817: PPUSH
27818: CALL 9163 0 6
27822: ST_TO_ADDR
// if not entrance then
27823: LD_VAR 0 6
27827: NOT
27828: IFFALSE 27832
// exit ;
27830: GO 27946
// for i in entrance do
27832: LD_ADDR_VAR 0 5
27836: PUSH
27837: LD_VAR 0 6
27841: PUSH
27842: FOR_IN
27843: IFFALSE 27944
// begin if not distance then
27845: LD_VAR 0 3
27849: NOT
27850: IFFALSE 27895
// begin if IsAt ( unit , i [ 1 ] , i [ 2 ] ) then
27852: LD_VAR 0 1
27856: PPUSH
27857: LD_VAR 0 5
27861: PUSH
27862: LD_INT 1
27864: ARRAY
27865: PPUSH
27866: LD_VAR 0 5
27870: PUSH
27871: LD_INT 2
27873: ARRAY
27874: PPUSH
27875: CALL_OW 307
27879: IFFALSE 27893
// begin result := true ;
27881: LD_ADDR_VAR 0 4
27885: PUSH
27886: LD_INT 1
27888: ST_TO_ADDR
// exit ;
27889: POP
27890: POP
27891: GO 27946
// end ; end else
27893: GO 27942
// begin if GetDistUnitXY ( unit , i [ 1 ] , i [ 2 ] ) <= distance then
27895: LD_VAR 0 1
27899: PPUSH
27900: LD_VAR 0 5
27904: PUSH
27905: LD_INT 1
27907: ARRAY
27908: PPUSH
27909: LD_VAR 0 5
27913: PUSH
27914: LD_INT 2
27916: ARRAY
27917: PPUSH
27918: CALL_OW 297
27922: PUSH
27923: LD_VAR 0 3
27927: LESSEQUAL
27928: IFFALSE 27942
// begin result := true ;
27930: LD_ADDR_VAR 0 4
27934: PUSH
27935: LD_INT 1
27937: ST_TO_ADDR
// exit ;
27938: POP
27939: POP
27940: GO 27946
// end ; end ; end ;
27942: GO 27842
27944: POP
27945: POP
// end ;
27946: LD_VAR 0 4
27950: RET
// export function CanSpot ( unit , unit2 ) ; var i , building ; begin
27951: LD_INT 0
27953: PPUSH
27954: PPUSH
27955: PPUSH
// result := false ;
27956: LD_ADDR_VAR 0 3
27960: PUSH
27961: LD_INT 0
27963: ST_TO_ADDR
// if not unit or not unit2 or not IsOk ( unit ) or not IsOk ( unit2 ) then
27964: LD_VAR 0 1
27968: NOT
27969: PUSH
27970: LD_VAR 0 2
27974: NOT
27975: OR
27976: PUSH
27977: LD_VAR 0 1
27981: PPUSH
27982: CALL_OW 302
27986: NOT
27987: OR
27988: PUSH
27989: LD_VAR 0 2
27993: PPUSH
27994: CALL_OW 302
27998: NOT
27999: OR
28000: IFFALSE 28004
// exit ;
28002: GO 28165
// if GetDistUnits ( unit , NearestUnitToUnit ( FilterAllUnits ( [ [ f_enemy , GetSide ( unit ) ] , [ f_not , [ f_type , unit_building ] ] ] ) , unit ) ) < 8 then
28004: LD_VAR 0 1
28008: PPUSH
28009: LD_INT 81
28011: PUSH
28012: LD_VAR 0 1
28016: PPUSH
28017: CALL_OW 255
28021: PUSH
28022: EMPTY
28023: LIST
28024: LIST
28025: PUSH
28026: LD_INT 3
28028: PUSH
28029: LD_INT 21
28031: PUSH
28032: LD_INT 3
28034: PUSH
28035: EMPTY
28036: LIST
28037: LIST
28038: PUSH
28039: EMPTY
28040: LIST
28041: LIST
28042: PUSH
28043: EMPTY
28044: LIST
28045: LIST
28046: PPUSH
28047: CALL_OW 69
28051: PPUSH
28052: LD_VAR 0 1
28056: PPUSH
28057: CALL_OW 74
28061: PPUSH
28062: CALL_OW 296
28066: PUSH
28067: LD_INT 8
28069: LESS
28070: IFFALSE 28074
// exit ;
28072: GO 28165
// building := IsInUnit ( unit2 ) ;
28074: LD_ADDR_VAR 0 5
28078: PUSH
28079: LD_VAR 0 2
28083: PPUSH
28084: CALL_OW 310
28088: ST_TO_ADDR
// if building then
28089: LD_VAR 0 5
28093: IFFALSE 28120
// result := IsNearbyEntrance ( unit , building , 2 ) else
28095: LD_ADDR_VAR 0 3
28099: PUSH
28100: LD_VAR 0 1
28104: PPUSH
28105: LD_VAR 0 5
28109: PPUSH
28110: LD_INT 2
28112: PPUSH
28113: CALL 27702 0 3
28117: ST_TO_ADDR
28118: GO 28165
// result := ( GetDistUnits ( unit , unit2 ) < 6 and See ( GetSide ( unit2 ) , unit ) ) ;
28120: LD_ADDR_VAR 0 3
28124: PUSH
28125: LD_VAR 0 1
28129: PPUSH
28130: LD_VAR 0 2
28134: PPUSH
28135: CALL_OW 296
28139: PUSH
28140: LD_INT 6
28142: LESS
28143: PUSH
28144: LD_VAR 0 2
28148: PPUSH
28149: CALL_OW 255
28153: PPUSH
28154: LD_VAR 0 1
28158: PPUSH
28159: CALL_OW 292
28163: AND
28164: ST_TO_ADDR
// end ;
28165: LD_VAR 0 3
28169: RET
// export function GetFacExt ( factory ) ; var tmp , i , list ; begin
28170: LD_INT 0
28172: PPUSH
28173: PPUSH
28174: PPUSH
28175: PPUSH
// tmp := [ ] ;
28176: LD_ADDR_VAR 0 3
28180: PUSH
28181: EMPTY
28182: ST_TO_ADDR
// list := [ ] ;
28183: LD_ADDR_VAR 0 5
28187: PUSH
28188: EMPTY
28189: ST_TO_ADDR
// for i = 16 to 25 do
28190: LD_ADDR_VAR 0 4
28194: PUSH
28195: DOUBLE
28196: LD_INT 16
28198: DEC
28199: ST_TO_ADDR
28200: LD_INT 25
28202: PUSH
28203: FOR_TO
28204: IFFALSE 28277
// tmp := tmp ^ FilterAllUnits ( [ [ [ f_side , GetSide ( factory ) ] , [ f_dist , factory , 6 ] , [ f_btype , i ] ] ] ) ;
28206: LD_ADDR_VAR 0 3
28210: PUSH
28211: LD_VAR 0 3
28215: PUSH
28216: LD_INT 22
28218: PUSH
28219: LD_VAR 0 1
28223: PPUSH
28224: CALL_OW 255
28228: PUSH
28229: EMPTY
28230: LIST
28231: LIST
28232: PUSH
28233: LD_INT 91
28235: PUSH
28236: LD_VAR 0 1
28240: PUSH
28241: LD_INT 6
28243: PUSH
28244: EMPTY
28245: LIST
28246: LIST
28247: LIST
28248: PUSH
28249: LD_INT 30
28251: PUSH
28252: LD_VAR 0 4
28256: PUSH
28257: EMPTY
28258: LIST
28259: LIST
28260: PUSH
28261: EMPTY
28262: LIST
28263: LIST
28264: LIST
28265: PUSH
28266: EMPTY
28267: LIST
28268: PPUSH
28269: CALL_OW 69
28273: ADD
28274: ST_TO_ADDR
28275: GO 28203
28277: POP
28278: POP
// for i = 1 to tmp do
28279: LD_ADDR_VAR 0 4
28283: PUSH
28284: DOUBLE
28285: LD_INT 1
28287: DEC
28288: ST_TO_ADDR
28289: LD_VAR 0 3
28293: PUSH
28294: FOR_TO
28295: IFFALSE 28383
// list := list ^ [ [ GetBType ( tmp [ i ] ) , GetX ( tmp [ i ] ) , GetY ( tmp [ i ] ) , GetDir ( tmp [ i ] ) ] ] ;
28297: LD_ADDR_VAR 0 5
28301: PUSH
28302: LD_VAR 0 5
28306: PUSH
28307: LD_VAR 0 3
28311: PUSH
28312: LD_VAR 0 4
28316: ARRAY
28317: PPUSH
28318: CALL_OW 266
28322: PUSH
28323: LD_VAR 0 3
28327: PUSH
28328: LD_VAR 0 4
28332: ARRAY
28333: PPUSH
28334: CALL_OW 250
28338: PUSH
28339: LD_VAR 0 3
28343: PUSH
28344: LD_VAR 0 4
28348: ARRAY
28349: PPUSH
28350: CALL_OW 251
28354: PUSH
28355: LD_VAR 0 3
28359: PUSH
28360: LD_VAR 0 4
28364: ARRAY
28365: PPUSH
28366: CALL_OW 254
28370: PUSH
28371: EMPTY
28372: LIST
28373: LIST
28374: LIST
28375: LIST
28376: PUSH
28377: EMPTY
28378: LIST
28379: ADD
28380: ST_TO_ADDR
28381: GO 28294
28383: POP
28384: POP
// result := list ;
28385: LD_ADDR_VAR 0 2
28389: PUSH
28390: LD_VAR 0 5
28394: ST_TO_ADDR
// end ;
28395: LD_VAR 0 2
28399: RET
// export function Produce ( factory , chassis , engine , control , weapon ) ; var i , tmp , _chassis , _weapon , _engine , _control ; begin
28400: LD_INT 0
28402: PPUSH
28403: PPUSH
28404: PPUSH
28405: PPUSH
28406: PPUSH
28407: PPUSH
28408: PPUSH
// if not factory then
28409: LD_VAR 0 1
28413: NOT
28414: IFFALSE 28418
// exit ;
28416: GO 28943
// if control = control_apeman then
28418: LD_VAR 0 4
28422: PUSH
28423: LD_INT 5
28425: EQUAL
28426: IFFALSE 28535
// begin tmp := UnitsInside ( factory ) ;
28428: LD_ADDR_VAR 0 8
28432: PUSH
28433: LD_VAR 0 1
28437: PPUSH
28438: CALL_OW 313
28442: ST_TO_ADDR
// if not UnitFilter ( tmp , [ f_class , class_apeman ] ) then
28443: LD_VAR 0 8
28447: PPUSH
28448: LD_INT 25
28450: PUSH
28451: LD_INT 12
28453: PUSH
28454: EMPTY
28455: LIST
28456: LIST
28457: PPUSH
28458: CALL_OW 72
28462: NOT
28463: IFFALSE 28473
// control := control_manual ;
28465: LD_ADDR_VAR 0 4
28469: PUSH
28470: LD_INT 1
28472: ST_TO_ADDR
// tmp := GetFacExt ( factory ) ;
28473: LD_ADDR_VAR 0 8
28477: PUSH
28478: LD_VAR 0 1
28482: PPUSH
28483: CALL 28170 0 1
28487: ST_TO_ADDR
// if tmp then
28488: LD_VAR 0 8
28492: IFFALSE 28535
// begin for i in tmp do
28494: LD_ADDR_VAR 0 7
28498: PUSH
28499: LD_VAR 0 8
28503: PUSH
28504: FOR_IN
28505: IFFALSE 28533
// if i [ 1 ] = b_ext_radar then
28507: LD_VAR 0 7
28511: PUSH
28512: LD_INT 1
28514: ARRAY
28515: PUSH
28516: LD_INT 20
28518: EQUAL
28519: IFFALSE 28531
// begin control := control_remote ;
28521: LD_ADDR_VAR 0 4
28525: PUSH
28526: LD_INT 2
28528: ST_TO_ADDR
// break ;
28529: GO 28533
// end ;
28531: GO 28504
28533: POP
28534: POP
// end ; end ; if CanBeConstructed ( factory , chassis , engine , control , weapon ) then
28535: LD_VAR 0 1
28539: PPUSH
28540: LD_VAR 0 2
28544: PPUSH
28545: LD_VAR 0 3
28549: PPUSH
28550: LD_VAR 0 4
28554: PPUSH
28555: LD_VAR 0 5
28559: PPUSH
28560: CALL_OW 448
28564: IFFALSE 28599
// begin result := [ chassis , engine , control , weapon ] ;
28566: LD_ADDR_VAR 0 6
28570: PUSH
28571: LD_VAR 0 2
28575: PUSH
28576: LD_VAR 0 3
28580: PUSH
28581: LD_VAR 0 4
28585: PUSH
28586: LD_VAR 0 5
28590: PUSH
28591: EMPTY
28592: LIST
28593: LIST
28594: LIST
28595: LIST
28596: ST_TO_ADDR
// exit ;
28597: GO 28943
// end ; _chassis := AvailableChassisList ( factory ) ;
28599: LD_ADDR_VAR 0 9
28603: PUSH
28604: LD_VAR 0 1
28608: PPUSH
28609: CALL_OW 475
28613: ST_TO_ADDR
// _engine := AvailableEngineList ( factory ) ;
28614: LD_ADDR_VAR 0 11
28618: PUSH
28619: LD_VAR 0 1
28623: PPUSH
28624: CALL_OW 476
28628: ST_TO_ADDR
// _control := AvailableControlList ( factory ) ;
28629: LD_ADDR_VAR 0 12
28633: PUSH
28634: LD_VAR 0 1
28638: PPUSH
28639: CALL_OW 477
28643: ST_TO_ADDR
// _weapon := AvailableWeaponList ( factory ) ;
28644: LD_ADDR_VAR 0 10
28648: PUSH
28649: LD_VAR 0 1
28653: PPUSH
28654: CALL_OW 478
28658: ST_TO_ADDR
// if not chassis in _chassis then
28659: LD_VAR 0 2
28663: PUSH
28664: LD_VAR 0 9
28668: IN
28669: NOT
28670: IFFALSE 28696
// chassis := _chassis [ rand ( 1 , _chassis ) ] ;
28672: LD_ADDR_VAR 0 2
28676: PUSH
28677: LD_VAR 0 9
28681: PUSH
28682: LD_INT 1
28684: PPUSH
28685: LD_VAR 0 9
28689: PPUSH
28690: CALL_OW 12
28694: ARRAY
28695: ST_TO_ADDR
// if not EngineCanBeMount ( chassis , engine ) then
28696: LD_VAR 0 2
28700: PPUSH
28701: LD_VAR 0 3
28705: PPUSH
28706: CALL 28948 0 2
28710: NOT
28711: IFFALSE 28770
// repeat engine := _engine [ 1 ] ;
28713: LD_ADDR_VAR 0 3
28717: PUSH
28718: LD_VAR 0 11
28722: PUSH
28723: LD_INT 1
28725: ARRAY
28726: ST_TO_ADDR
// _engine := Delete ( _engine , 1 ) ;
28727: LD_ADDR_VAR 0 11
28731: PUSH
28732: LD_VAR 0 11
28736: PPUSH
28737: LD_INT 1
28739: PPUSH
28740: CALL_OW 3
28744: ST_TO_ADDR
// until EngineCanBeMount ( chassis , engine ) or _engine = [ ] ;
28745: LD_VAR 0 2
28749: PPUSH
28750: LD_VAR 0 3
28754: PPUSH
28755: CALL 28948 0 2
28759: PUSH
28760: LD_VAR 0 11
28764: PUSH
28765: EMPTY
28766: EQUAL
28767: OR
28768: IFFALSE 28713
// if not control in _control then
28770: LD_VAR 0 4
28774: PUSH
28775: LD_VAR 0 12
28779: IN
28780: NOT
28781: IFFALSE 28807
// control := _control [ rand ( 1 , _control ) ] ;
28783: LD_ADDR_VAR 0 4
28787: PUSH
28788: LD_VAR 0 12
28792: PUSH
28793: LD_INT 1
28795: PPUSH
28796: LD_VAR 0 12
28800: PPUSH
28801: CALL_OW 12
28805: ARRAY
28806: ST_TO_ADDR
// if not WeaponCanBeMount ( chassis , weapon ) then
28807: LD_VAR 0 2
28811: PPUSH
28812: LD_VAR 0 5
28816: PPUSH
28817: CALL 29168 0 2
28821: NOT
28822: IFFALSE 28881
// repeat weapon := _weapon [ 1 ] ;
28824: LD_ADDR_VAR 0 5
28828: PUSH
28829: LD_VAR 0 10
28833: PUSH
28834: LD_INT 1
28836: ARRAY
28837: ST_TO_ADDR
// _weapon := Delete ( _weapon , 1 ) ;
28838: LD_ADDR_VAR 0 10
28842: PUSH
28843: LD_VAR 0 10
28847: PPUSH
28848: LD_INT 1
28850: PPUSH
28851: CALL_OW 3
28855: ST_TO_ADDR
// until WeaponCanBeMount ( chassis , weapon ) or _weapon = [ ] ;
28856: LD_VAR 0 2
28860: PPUSH
28861: LD_VAR 0 5
28865: PPUSH
28866: CALL 29168 0 2
28870: PUSH
28871: LD_VAR 0 10
28875: PUSH
28876: EMPTY
28877: EQUAL
28878: OR
28879: IFFALSE 28824
// if CanBeConstructed ( factory , chassis , engine , control , weapon ) then
28881: LD_VAR 0 1
28885: PPUSH
28886: LD_VAR 0 2
28890: PPUSH
28891: LD_VAR 0 3
28895: PPUSH
28896: LD_VAR 0 4
28900: PPUSH
28901: LD_VAR 0 5
28905: PPUSH
28906: CALL_OW 448
28910: IFFALSE 28943
// result := [ chassis , engine , control , weapon ] ;
28912: LD_ADDR_VAR 0 6
28916: PUSH
28917: LD_VAR 0 2
28921: PUSH
28922: LD_VAR 0 3
28926: PUSH
28927: LD_VAR 0 4
28931: PUSH
28932: LD_VAR 0 5
28936: PUSH
28937: EMPTY
28938: LIST
28939: LIST
28940: LIST
28941: LIST
28942: ST_TO_ADDR
// end ;
28943: LD_VAR 0 6
28947: RET
// export function EngineCanBeMount ( chassis , engine ) ; begin
28948: LD_INT 0
28950: PPUSH
// if not chassis or not engine then
28951: LD_VAR 0 1
28955: NOT
28956: PUSH
28957: LD_VAR 0 2
28961: NOT
28962: OR
28963: IFFALSE 28967
// exit ;
28965: GO 29163
// case engine of engine_solar :
28967: LD_VAR 0 2
28971: PUSH
28972: LD_INT 2
28974: DOUBLE
28975: EQUAL
28976: IFTRUE 28980
28978: GO 29018
28980: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked , us_light_wheeled , us_medium_wheeled , us_medium_tracked ] ; engine_combustion :
28981: LD_ADDR_VAR 0 3
28985: PUSH
28986: LD_INT 11
28988: PUSH
28989: LD_INT 12
28991: PUSH
28992: LD_INT 13
28994: PUSH
28995: LD_INT 14
28997: PUSH
28998: LD_INT 1
29000: PUSH
29001: LD_INT 2
29003: PUSH
29004: LD_INT 3
29006: PUSH
29007: EMPTY
29008: LIST
29009: LIST
29010: LIST
29011: LIST
29012: LIST
29013: LIST
29014: LIST
29015: ST_TO_ADDR
29016: GO 29147
29018: LD_INT 1
29020: DOUBLE
29021: EQUAL
29022: IFTRUE 29026
29024: GO 29088
29026: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked , us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling , ru_medium_wheeled , ru_heavy_wheeled , ru_medium_tracked , ru_heavy_tracked ] ; engine_siberite :
29027: LD_ADDR_VAR 0 3
29031: PUSH
29032: LD_INT 11
29034: PUSH
29035: LD_INT 12
29037: PUSH
29038: LD_INT 13
29040: PUSH
29041: LD_INT 14
29043: PUSH
29044: LD_INT 1
29046: PUSH
29047: LD_INT 2
29049: PUSH
29050: LD_INT 3
29052: PUSH
29053: LD_INT 4
29055: PUSH
29056: LD_INT 5
29058: PUSH
29059: LD_INT 21
29061: PUSH
29062: LD_INT 23
29064: PUSH
29065: LD_INT 22
29067: PUSH
29068: LD_INT 24
29070: PUSH
29071: EMPTY
29072: LIST
29073: LIST
29074: LIST
29075: LIST
29076: LIST
29077: LIST
29078: LIST
29079: LIST
29080: LIST
29081: LIST
29082: LIST
29083: LIST
29084: LIST
29085: ST_TO_ADDR
29086: GO 29147
29088: LD_INT 3
29090: DOUBLE
29091: EQUAL
29092: IFTRUE 29096
29094: GO 29146
29096: POP
// result := [ ar_medium_trike , ar_half_tracked , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling , ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; end ;
29097: LD_ADDR_VAR 0 3
29101: PUSH
29102: LD_INT 13
29104: PUSH
29105: LD_INT 14
29107: PUSH
29108: LD_INT 2
29110: PUSH
29111: LD_INT 3
29113: PUSH
29114: LD_INT 4
29116: PUSH
29117: LD_INT 5
29119: PUSH
29120: LD_INT 21
29122: PUSH
29123: LD_INT 22
29125: PUSH
29126: LD_INT 23
29128: PUSH
29129: LD_INT 24
29131: PUSH
29132: EMPTY
29133: LIST
29134: LIST
29135: LIST
29136: LIST
29137: LIST
29138: LIST
29139: LIST
29140: LIST
29141: LIST
29142: LIST
29143: ST_TO_ADDR
29144: GO 29147
29146: POP
// result := ( chassis in result ) ;
29147: LD_ADDR_VAR 0 3
29151: PUSH
29152: LD_VAR 0 1
29156: PUSH
29157: LD_VAR 0 3
29161: IN
29162: ST_TO_ADDR
// end ;
29163: LD_VAR 0 3
29167: RET
// export function WeaponCanBeMount ( chassis , weapon ) ; begin
29168: LD_INT 0
29170: PPUSH
// if not chassis or not weapon then
29171: LD_VAR 0 1
29175: NOT
29176: PUSH
29177: LD_VAR 0 2
29181: NOT
29182: OR
29183: IFFALSE 29187
// exit ;
29185: GO 30213
// case weapon of us_machine_gun :
29187: LD_VAR 0 2
29191: PUSH
29192: LD_INT 2
29194: DOUBLE
29195: EQUAL
29196: IFTRUE 29200
29198: GO 29230
29200: POP
// result := [ us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_light_gun :
29201: LD_ADDR_VAR 0 3
29205: PUSH
29206: LD_INT 1
29208: PUSH
29209: LD_INT 2
29211: PUSH
29212: LD_INT 3
29214: PUSH
29215: LD_INT 4
29217: PUSH
29218: LD_INT 5
29220: PUSH
29221: EMPTY
29222: LIST
29223: LIST
29224: LIST
29225: LIST
29226: LIST
29227: ST_TO_ADDR
29228: GO 30197
29230: LD_INT 3
29232: DOUBLE
29233: EQUAL
29234: IFTRUE 29238
29236: GO 29268
29238: POP
// result := [ us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_radar :
29239: LD_ADDR_VAR 0 3
29243: PUSH
29244: LD_INT 1
29246: PUSH
29247: LD_INT 2
29249: PUSH
29250: LD_INT 3
29252: PUSH
29253: LD_INT 4
29255: PUSH
29256: LD_INT 5
29258: PUSH
29259: EMPTY
29260: LIST
29261: LIST
29262: LIST
29263: LIST
29264: LIST
29265: ST_TO_ADDR
29266: GO 30197
29268: LD_INT 11
29270: DOUBLE
29271: EQUAL
29272: IFTRUE 29276
29274: GO 29306
29276: POP
// result := [ us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_gatling_gun :
29277: LD_ADDR_VAR 0 3
29281: PUSH
29282: LD_INT 1
29284: PUSH
29285: LD_INT 2
29287: PUSH
29288: LD_INT 3
29290: PUSH
29291: LD_INT 4
29293: PUSH
29294: LD_INT 5
29296: PUSH
29297: EMPTY
29298: LIST
29299: LIST
29300: LIST
29301: LIST
29302: LIST
29303: ST_TO_ADDR
29304: GO 30197
29306: LD_INT 4
29308: DOUBLE
29309: EQUAL
29310: IFTRUE 29314
29312: GO 29340
29314: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_double_gun :
29315: LD_ADDR_VAR 0 3
29319: PUSH
29320: LD_INT 2
29322: PUSH
29323: LD_INT 3
29325: PUSH
29326: LD_INT 4
29328: PUSH
29329: LD_INT 5
29331: PUSH
29332: EMPTY
29333: LIST
29334: LIST
29335: LIST
29336: LIST
29337: ST_TO_ADDR
29338: GO 30197
29340: LD_INT 5
29342: DOUBLE
29343: EQUAL
29344: IFTRUE 29348
29346: GO 29374
29348: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_laser :
29349: LD_ADDR_VAR 0 3
29353: PUSH
29354: LD_INT 2
29356: PUSH
29357: LD_INT 3
29359: PUSH
29360: LD_INT 4
29362: PUSH
29363: LD_INT 5
29365: PUSH
29366: EMPTY
29367: LIST
29368: LIST
29369: LIST
29370: LIST
29371: ST_TO_ADDR
29372: GO 30197
29374: LD_INT 9
29376: DOUBLE
29377: EQUAL
29378: IFTRUE 29382
29380: GO 29408
29382: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_rocket_launcher :
29383: LD_ADDR_VAR 0 3
29387: PUSH
29388: LD_INT 2
29390: PUSH
29391: LD_INT 3
29393: PUSH
29394: LD_INT 4
29396: PUSH
29397: LD_INT 5
29399: PUSH
29400: EMPTY
29401: LIST
29402: LIST
29403: LIST
29404: LIST
29405: ST_TO_ADDR
29406: GO 30197
29408: LD_INT 7
29410: DOUBLE
29411: EQUAL
29412: IFTRUE 29416
29414: GO 29442
29416: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_cargo_bay :
29417: LD_ADDR_VAR 0 3
29421: PUSH
29422: LD_INT 2
29424: PUSH
29425: LD_INT 3
29427: PUSH
29428: LD_INT 4
29430: PUSH
29431: LD_INT 5
29433: PUSH
29434: EMPTY
29435: LIST
29436: LIST
29437: LIST
29438: LIST
29439: ST_TO_ADDR
29440: GO 30197
29442: LD_INT 12
29444: DOUBLE
29445: EQUAL
29446: IFTRUE 29450
29448: GO 29476
29450: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_crane :
29451: LD_ADDR_VAR 0 3
29455: PUSH
29456: LD_INT 2
29458: PUSH
29459: LD_INT 3
29461: PUSH
29462: LD_INT 4
29464: PUSH
29465: LD_INT 5
29467: PUSH
29468: EMPTY
29469: LIST
29470: LIST
29471: LIST
29472: LIST
29473: ST_TO_ADDR
29474: GO 30197
29476: LD_INT 13
29478: DOUBLE
29479: EQUAL
29480: IFTRUE 29484
29482: GO 29510
29484: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_bulldozer :
29485: LD_ADDR_VAR 0 3
29489: PUSH
29490: LD_INT 2
29492: PUSH
29493: LD_INT 3
29495: PUSH
29496: LD_INT 4
29498: PUSH
29499: LD_INT 5
29501: PUSH
29502: EMPTY
29503: LIST
29504: LIST
29505: LIST
29506: LIST
29507: ST_TO_ADDR
29508: GO 30197
29510: LD_INT 14
29512: DOUBLE
29513: EQUAL
29514: IFTRUE 29518
29516: GO 29536
29518: POP
// result := [ us_heavy_tracked , us_morphling ] ; us_heavy_gun :
29519: LD_ADDR_VAR 0 3
29523: PUSH
29524: LD_INT 4
29526: PUSH
29527: LD_INT 5
29529: PUSH
29530: EMPTY
29531: LIST
29532: LIST
29533: ST_TO_ADDR
29534: GO 30197
29536: LD_INT 6
29538: DOUBLE
29539: EQUAL
29540: IFTRUE 29544
29542: GO 29562
29544: POP
// result := [ us_heavy_tracked , us_morphling ] ; us_double_laser :
29545: LD_ADDR_VAR 0 3
29549: PUSH
29550: LD_INT 4
29552: PUSH
29553: LD_INT 5
29555: PUSH
29556: EMPTY
29557: LIST
29558: LIST
29559: ST_TO_ADDR
29560: GO 30197
29562: LD_INT 10
29564: DOUBLE
29565: EQUAL
29566: IFTRUE 29570
29568: GO 29588
29570: POP
// result := [ us_heavy_tracked , us_morphling ] ; ar_multimissile_ballista :
29571: LD_ADDR_VAR 0 3
29575: PUSH
29576: LD_INT 4
29578: PUSH
29579: LD_INT 5
29581: PUSH
29582: EMPTY
29583: LIST
29584: LIST
29585: ST_TO_ADDR
29586: GO 30197
29588: LD_INT 22
29590: DOUBLE
29591: EQUAL
29592: IFTRUE 29596
29594: GO 29622
29596: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_light_gun :
29597: LD_ADDR_VAR 0 3
29601: PUSH
29602: LD_INT 11
29604: PUSH
29605: LD_INT 12
29607: PUSH
29608: LD_INT 13
29610: PUSH
29611: LD_INT 14
29613: PUSH
29614: EMPTY
29615: LIST
29616: LIST
29617: LIST
29618: LIST
29619: ST_TO_ADDR
29620: GO 30197
29622: LD_INT 23
29624: DOUBLE
29625: EQUAL
29626: IFTRUE 29630
29628: GO 29656
29630: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_double_machine_gun :
29631: LD_ADDR_VAR 0 3
29635: PUSH
29636: LD_INT 11
29638: PUSH
29639: LD_INT 12
29641: PUSH
29642: LD_INT 13
29644: PUSH
29645: LD_INT 14
29647: PUSH
29648: EMPTY
29649: LIST
29650: LIST
29651: LIST
29652: LIST
29653: ST_TO_ADDR
29654: GO 30197
29656: LD_INT 24
29658: DOUBLE
29659: EQUAL
29660: IFTRUE 29664
29662: GO 29690
29664: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_radar :
29665: LD_ADDR_VAR 0 3
29669: PUSH
29670: LD_INT 11
29672: PUSH
29673: LD_INT 12
29675: PUSH
29676: LD_INT 13
29678: PUSH
29679: LD_INT 14
29681: PUSH
29682: EMPTY
29683: LIST
29684: LIST
29685: LIST
29686: LIST
29687: ST_TO_ADDR
29688: GO 30197
29690: LD_INT 30
29692: DOUBLE
29693: EQUAL
29694: IFTRUE 29698
29696: GO 29724
29698: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_gatling_gun :
29699: LD_ADDR_VAR 0 3
29703: PUSH
29704: LD_INT 11
29706: PUSH
29707: LD_INT 12
29709: PUSH
29710: LD_INT 13
29712: PUSH
29713: LD_INT 14
29715: PUSH
29716: EMPTY
29717: LIST
29718: LIST
29719: LIST
29720: LIST
29721: ST_TO_ADDR
29722: GO 30197
29724: LD_INT 25
29726: DOUBLE
29727: EQUAL
29728: IFTRUE 29732
29730: GO 29750
29732: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_gun :
29733: LD_ADDR_VAR 0 3
29737: PUSH
29738: LD_INT 13
29740: PUSH
29741: LD_INT 14
29743: PUSH
29744: EMPTY
29745: LIST
29746: LIST
29747: ST_TO_ADDR
29748: GO 30197
29750: LD_INT 27
29752: DOUBLE
29753: EQUAL
29754: IFTRUE 29758
29756: GO 29776
29758: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_rocket_launcher :
29759: LD_ADDR_VAR 0 3
29763: PUSH
29764: LD_INT 13
29766: PUSH
29767: LD_INT 14
29769: PUSH
29770: EMPTY
29771: LIST
29772: LIST
29773: ST_TO_ADDR
29774: GO 30197
29776: LD_INT 28
29778: DOUBLE
29779: EQUAL
29780: IFTRUE 29784
29782: GO 29802
29784: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_selfpropelled_bomb :
29785: LD_ADDR_VAR 0 3
29789: PUSH
29790: LD_INT 13
29792: PUSH
29793: LD_INT 14
29795: PUSH
29796: EMPTY
29797: LIST
29798: LIST
29799: ST_TO_ADDR
29800: GO 30197
29802: LD_INT 29
29804: DOUBLE
29805: EQUAL
29806: IFTRUE 29810
29808: GO 29828
29810: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_control_tower :
29811: LD_ADDR_VAR 0 3
29815: PUSH
29816: LD_INT 13
29818: PUSH
29819: LD_INT 14
29821: PUSH
29822: EMPTY
29823: LIST
29824: LIST
29825: ST_TO_ADDR
29826: GO 30197
29828: LD_INT 31
29830: DOUBLE
29831: EQUAL
29832: IFTRUE 29836
29834: GO 29854
29836: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_flame_thrower :
29837: LD_ADDR_VAR 0 3
29841: PUSH
29842: LD_INT 13
29844: PUSH
29845: LD_INT 14
29847: PUSH
29848: EMPTY
29849: LIST
29850: LIST
29851: ST_TO_ADDR
29852: GO 30197
29854: LD_INT 26
29856: DOUBLE
29857: EQUAL
29858: IFTRUE 29862
29860: GO 29880
29862: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ru_heavy_machine_gun :
29863: LD_ADDR_VAR 0 3
29867: PUSH
29868: LD_INT 13
29870: PUSH
29871: LD_INT 14
29873: PUSH
29874: EMPTY
29875: LIST
29876: LIST
29877: ST_TO_ADDR
29878: GO 30197
29880: LD_INT 42
29882: DOUBLE
29883: EQUAL
29884: IFTRUE 29888
29886: GO 29914
29888: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_gatling_gun :
29889: LD_ADDR_VAR 0 3
29893: PUSH
29894: LD_INT 21
29896: PUSH
29897: LD_INT 22
29899: PUSH
29900: LD_INT 23
29902: PUSH
29903: LD_INT 24
29905: PUSH
29906: EMPTY
29907: LIST
29908: LIST
29909: LIST
29910: LIST
29911: ST_TO_ADDR
29912: GO 30197
29914: LD_INT 43
29916: DOUBLE
29917: EQUAL
29918: IFTRUE 29922
29920: GO 29948
29922: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_gun :
29923: LD_ADDR_VAR 0 3
29927: PUSH
29928: LD_INT 21
29930: PUSH
29931: LD_INT 22
29933: PUSH
29934: LD_INT 23
29936: PUSH
29937: LD_INT 24
29939: PUSH
29940: EMPTY
29941: LIST
29942: LIST
29943: LIST
29944: LIST
29945: ST_TO_ADDR
29946: GO 30197
29948: LD_INT 44
29950: DOUBLE
29951: EQUAL
29952: IFTRUE 29956
29954: GO 29982
29956: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_rocket_launcher :
29957: LD_ADDR_VAR 0 3
29961: PUSH
29962: LD_INT 21
29964: PUSH
29965: LD_INT 22
29967: PUSH
29968: LD_INT 23
29970: PUSH
29971: LD_INT 24
29973: PUSH
29974: EMPTY
29975: LIST
29976: LIST
29977: LIST
29978: LIST
29979: ST_TO_ADDR
29980: GO 30197
29982: LD_INT 45
29984: DOUBLE
29985: EQUAL
29986: IFTRUE 29990
29988: GO 30016
29990: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_time_lapser :
29991: LD_ADDR_VAR 0 3
29995: PUSH
29996: LD_INT 21
29998: PUSH
29999: LD_INT 22
30001: PUSH
30002: LD_INT 23
30004: PUSH
30005: LD_INT 24
30007: PUSH
30008: EMPTY
30009: LIST
30010: LIST
30011: LIST
30012: LIST
30013: ST_TO_ADDR
30014: GO 30197
30016: LD_INT 49
30018: DOUBLE
30019: EQUAL
30020: IFTRUE 30024
30022: GO 30050
30024: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_cargo_bay :
30025: LD_ADDR_VAR 0 3
30029: PUSH
30030: LD_INT 21
30032: PUSH
30033: LD_INT 22
30035: PUSH
30036: LD_INT 23
30038: PUSH
30039: LD_INT 24
30041: PUSH
30042: EMPTY
30043: LIST
30044: LIST
30045: LIST
30046: LIST
30047: ST_TO_ADDR
30048: GO 30197
30050: LD_INT 51
30052: DOUBLE
30053: EQUAL
30054: IFTRUE 30058
30056: GO 30084
30058: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_crane :
30059: LD_ADDR_VAR 0 3
30063: PUSH
30064: LD_INT 21
30066: PUSH
30067: LD_INT 22
30069: PUSH
30070: LD_INT 23
30072: PUSH
30073: LD_INT 24
30075: PUSH
30076: EMPTY
30077: LIST
30078: LIST
30079: LIST
30080: LIST
30081: ST_TO_ADDR
30082: GO 30197
30084: LD_INT 52
30086: DOUBLE
30087: EQUAL
30088: IFTRUE 30092
30090: GO 30118
30092: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_bulldozer :
30093: LD_ADDR_VAR 0 3
30097: PUSH
30098: LD_INT 21
30100: PUSH
30101: LD_INT 22
30103: PUSH
30104: LD_INT 23
30106: PUSH
30107: LD_INT 24
30109: PUSH
30110: EMPTY
30111: LIST
30112: LIST
30113: LIST
30114: LIST
30115: ST_TO_ADDR
30116: GO 30197
30118: LD_INT 53
30120: DOUBLE
30121: EQUAL
30122: IFTRUE 30126
30124: GO 30144
30126: POP
// result := [ ru_heavy_wheeled , ru_heavy_tracked ] ; ru_heavy_gun :
30127: LD_ADDR_VAR 0 3
30131: PUSH
30132: LD_INT 23
30134: PUSH
30135: LD_INT 24
30137: PUSH
30138: EMPTY
30139: LIST
30140: LIST
30141: ST_TO_ADDR
30142: GO 30197
30144: LD_INT 46
30146: DOUBLE
30147: EQUAL
30148: IFTRUE 30152
30150: GO 30170
30152: POP
// result := [ ru_heavy_wheeled , ru_heavy_tracked ] ; ru_rocket :
30153: LD_ADDR_VAR 0 3
30157: PUSH
30158: LD_INT 23
30160: PUSH
30161: LD_INT 24
30163: PUSH
30164: EMPTY
30165: LIST
30166: LIST
30167: ST_TO_ADDR
30168: GO 30197
30170: LD_INT 47
30172: DOUBLE
30173: EQUAL
30174: IFTRUE 30178
30176: GO 30196
30178: POP
// result := [ ru_heavy_wheeled , ru_heavy_tracked ] ; end ;
30179: LD_ADDR_VAR 0 3
30183: PUSH
30184: LD_INT 23
30186: PUSH
30187: LD_INT 24
30189: PUSH
30190: EMPTY
30191: LIST
30192: LIST
30193: ST_TO_ADDR
30194: GO 30197
30196: POP
// result := ( chassis in result ) ;
30197: LD_ADDR_VAR 0 3
30201: PUSH
30202: LD_VAR 0 1
30206: PUSH
30207: LD_VAR 0 3
30211: IN
30212: ST_TO_ADDR
// end ;
30213: LD_VAR 0 3
30217: RET
// export function PrepareNature ; var i , animal , nat_area ; begin
30218: LD_INT 0
30220: PPUSH
30221: PPUSH
30222: PPUSH
30223: PPUSH
// uc_side = 0 ;
30224: LD_ADDR_OWVAR 20
30228: PUSH
30229: LD_INT 0
30231: ST_TO_ADDR
// uc_nation = 0 ;
30232: LD_ADDR_OWVAR 21
30236: PUSH
30237: LD_INT 0
30239: ST_TO_ADDR
// nat_area := nature_area ;
30240: LD_ADDR_VAR 0 4
30244: PUSH
30245: LD_INT 24
30247: ST_TO_ADDR
// InitHc ;
30248: CALL_OW 19
// for i = 1 to 4 do
30252: LD_ADDR_VAR 0 2
30256: PUSH
30257: DOUBLE
30258: LD_INT 1
30260: DEC
30261: ST_TO_ADDR
30262: LD_INT 4
30264: PUSH
30265: FOR_TO
30266: IFFALSE 30313
// begin hc_class = 18 ;
30268: LD_ADDR_OWVAR 28
30272: PUSH
30273: LD_INT 18
30275: ST_TO_ADDR
// hc_gallery =  ;
30276: LD_ADDR_OWVAR 33
30280: PUSH
30281: LD_STRING 
30283: ST_TO_ADDR
// animal := CreateHuman ;
30284: LD_ADDR_VAR 0 3
30288: PUSH
30289: CALL_OW 44
30293: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
30294: LD_VAR 0 3
30298: PPUSH
30299: LD_VAR 0 4
30303: PPUSH
30304: LD_INT 0
30306: PPUSH
30307: CALL_OW 49
// end ;
30311: GO 30265
30313: POP
30314: POP
// for i = 1 to 3 do
30315: LD_ADDR_VAR 0 2
30319: PUSH
30320: DOUBLE
30321: LD_INT 1
30323: DEC
30324: ST_TO_ADDR
30325: LD_INT 3
30327: PUSH
30328: FOR_TO
30329: IFFALSE 30423
// begin hc_class = class_apeman ;
30331: LD_ADDR_OWVAR 28
30335: PUSH
30336: LD_INT 12
30338: ST_TO_ADDR
// hc_gallery =  ;
30339: LD_ADDR_OWVAR 33
30343: PUSH
30344: LD_STRING 
30346: ST_TO_ADDR
// hc_agressivity = 0 ;
30347: LD_ADDR_OWVAR 35
30351: PUSH
30352: LD_INT 0
30354: ST_TO_ADDR
// hc_skills := [ rand ( 1 , 3 ) , rand ( 1 , 3 ) , 0 , 0 ] ;
30355: LD_ADDR_OWVAR 31
30359: PUSH
30360: LD_INT 1
30362: PPUSH
30363: LD_INT 3
30365: PPUSH
30366: CALL_OW 12
30370: PUSH
30371: LD_INT 1
30373: PPUSH
30374: LD_INT 3
30376: PPUSH
30377: CALL_OW 12
30381: PUSH
30382: LD_INT 0
30384: PUSH
30385: LD_INT 0
30387: PUSH
30388: EMPTY
30389: LIST
30390: LIST
30391: LIST
30392: LIST
30393: ST_TO_ADDR
// animal := CreateHuman ;
30394: LD_ADDR_VAR 0 3
30398: PUSH
30399: CALL_OW 44
30403: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
30404: LD_VAR 0 3
30408: PPUSH
30409: LD_VAR 0 4
30413: PPUSH
30414: LD_INT 0
30416: PPUSH
30417: CALL_OW 49
// end ;
30421: GO 30328
30423: POP
30424: POP
// for i = 1 to 3 do
30425: LD_ADDR_VAR 0 2
30429: PUSH
30430: DOUBLE
30431: LD_INT 1
30433: DEC
30434: ST_TO_ADDR
30435: LD_INT 3
30437: PUSH
30438: FOR_TO
30439: IFFALSE 30486
// begin hc_class = 13 ;
30441: LD_ADDR_OWVAR 28
30445: PUSH
30446: LD_INT 13
30448: ST_TO_ADDR
// hc_gallery =  ;
30449: LD_ADDR_OWVAR 33
30453: PUSH
30454: LD_STRING 
30456: ST_TO_ADDR
// animal := CreateHuman ;
30457: LD_ADDR_VAR 0 3
30461: PUSH
30462: CALL_OW 44
30466: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
30467: LD_VAR 0 3
30471: PPUSH
30472: LD_VAR 0 4
30476: PPUSH
30477: LD_INT 0
30479: PPUSH
30480: CALL_OW 49
// end ;
30484: GO 30438
30486: POP
30487: POP
// for i = 1 to 3 do
30488: LD_ADDR_VAR 0 2
30492: PUSH
30493: DOUBLE
30494: LD_INT 1
30496: DEC
30497: ST_TO_ADDR
30498: LD_INT 3
30500: PUSH
30501: FOR_TO
30502: IFFALSE 30547
// begin hc_class = 20 ;
30504: LD_ADDR_OWVAR 28
30508: PUSH
30509: LD_INT 20
30511: ST_TO_ADDR
// hc_gallery =  ;
30512: LD_ADDR_OWVAR 33
30516: PUSH
30517: LD_STRING 
30519: ST_TO_ADDR
// animal := CreateHuman ;
30520: LD_ADDR_VAR 0 3
30524: PUSH
30525: CALL_OW 44
30529: ST_TO_ADDR
// PlaceUnitArea ( animal , lake_area , false ) ;
30530: LD_VAR 0 3
30534: PPUSH
30535: LD_INT 4
30537: PPUSH
30538: LD_INT 0
30540: PPUSH
30541: CALL_OW 49
// end ;
30545: GO 30501
30547: POP
30548: POP
// end ; end_of_file
30549: LD_VAR 0 1
30553: RET
// export function Action ; begin
30554: LD_INT 0
30556: PPUSH
// InGameOn ;
30557: CALL_OW 8
// CenterNowOnUnits ( JMM ) ;
30561: LD_EXP 12
30565: PPUSH
30566: CALL_OW 87
// Say ( JMM , D1-JMM-1 ) ;
30570: LD_EXP 12
30574: PPUSH
30575: LD_STRING D1-JMM-1
30577: PPUSH
30578: CALL_OW 88
// Say ( Roth , D1-Roth-1 ) ;
30582: LD_EXP 13
30586: PPUSH
30587: LD_STRING D1-Roth-1
30589: PPUSH
30590: CALL_OW 88
// Say ( JMM , D1-JMM-2 ) ;
30594: LD_EXP 12
30598: PPUSH
30599: LD_STRING D1-JMM-2
30601: PPUSH
30602: CALL_OW 88
// Say ( Roth , D1-Roth-2 ) ;
30606: LD_EXP 13
30610: PPUSH
30611: LD_STRING D1-Roth-2
30613: PPUSH
30614: CALL_OW 88
// Say ( JMM , D1-JMM-3 ) ;
30618: LD_EXP 12
30622: PPUSH
30623: LD_STRING D1-JMM-3
30625: PPUSH
30626: CALL_OW 88
// Say ( Roth , D1-Roth-3 ) ;
30630: LD_EXP 13
30634: PPUSH
30635: LD_STRING D1-Roth-3
30637: PPUSH
30638: CALL_OW 88
// ComInvisible ( Roth ) ;
30642: LD_EXP 13
30646: PPUSH
30647: CALL_OW 152
// wait ( 0 0$1.3 ) ;
30651: LD_INT 46
30653: PPUSH
30654: CALL_OW 67
// Say ( JMM , D1-JMM-4 ) ;
30658: LD_EXP 12
30662: PPUSH
30663: LD_STRING D1-JMM-4
30665: PPUSH
30666: CALL_OW 88
// wait ( 0 0$0.3 ) ;
30670: LD_INT 10
30672: PPUSH
30673: CALL_OW 67
// ComTurnUnit ( Roth , JMM ) ;
30677: LD_EXP 13
30681: PPUSH
30682: LD_EXP 12
30686: PPUSH
30687: CALL_OW 119
// Say ( JMM , D1-JMM-4a ) ;
30691: LD_EXP 12
30695: PPUSH
30696: LD_STRING D1-JMM-4a
30698: PPUSH
30699: CALL_OW 88
// Say ( Roth , D1-Roth-4 ) ;
30703: LD_EXP 13
30707: PPUSH
30708: LD_STRING D1-Roth-4
30710: PPUSH
30711: CALL_OW 88
// Say ( JMM , D1-JMM-5 ) ;
30715: LD_EXP 12
30719: PPUSH
30720: LD_STRING D1-JMM-5
30722: PPUSH
30723: CALL_OW 88
// Say ( Roth , D1-Roth-5 ) ;
30727: LD_EXP 13
30731: PPUSH
30732: LD_STRING D1-Roth-5
30734: PPUSH
30735: CALL_OW 88
// Say ( JMM , D1-JMM-6 ) ;
30739: LD_EXP 12
30743: PPUSH
30744: LD_STRING D1-JMM-6
30746: PPUSH
30747: CALL_OW 88
// Say ( Roth , D1-Roth-6 ) ;
30751: LD_EXP 13
30755: PPUSH
30756: LD_STRING D1-Roth-6
30758: PPUSH
30759: CALL_OW 88
// Say ( JMM , D1-JMM-7 ) ;
30763: LD_EXP 12
30767: PPUSH
30768: LD_STRING D1-JMM-7
30770: PPUSH
30771: CALL_OW 88
// ComMoveXY ( Powell , GetX ( JMM ) , GetY ( JMM ) ) ;
30775: LD_EXP 14
30779: PPUSH
30780: LD_EXP 12
30784: PPUSH
30785: CALL_OW 250
30789: PPUSH
30790: LD_EXP 12
30794: PPUSH
30795: CALL_OW 251
30799: PPUSH
30800: CALL_OW 111
// Say ( Roth , D1-Roth-7 ) ;
30804: LD_EXP 13
30808: PPUSH
30809: LD_STRING D1-Roth-7
30811: PPUSH
30812: CALL_OW 88
// repeat wait ( 0 0$0.3 ) ;
30816: LD_INT 10
30818: PPUSH
30819: CALL_OW 67
// until GetDistUnits ( Powell , JMM ) < 6 ;
30823: LD_EXP 14
30827: PPUSH
30828: LD_EXP 12
30832: PPUSH
30833: CALL_OW 296
30837: PUSH
30838: LD_INT 6
30840: LESS
30841: IFFALSE 30816
// ComTurnUnit ( Powell , JMM ) ;
30843: LD_EXP 14
30847: PPUSH
30848: LD_EXP 12
30852: PPUSH
30853: CALL_OW 119
// Say ( Powell , D1-Pow-7 ) ;
30857: LD_EXP 14
30861: PPUSH
30862: LD_STRING D1-Pow-7
30864: PPUSH
30865: CALL_OW 88
// ComTurnUnit ( JMM , Powell ) ;
30869: LD_EXP 12
30873: PPUSH
30874: LD_EXP 14
30878: PPUSH
30879: CALL_OW 119
// ComTurnUnit ( Roth , Powell ) ;
30883: LD_EXP 13
30887: PPUSH
30888: LD_EXP 14
30892: PPUSH
30893: CALL_OW 119
// Say ( JMM , D1-JMM-8 ) ;
30897: LD_EXP 12
30901: PPUSH
30902: LD_STRING D1-JMM-8
30904: PPUSH
30905: CALL_OW 88
// Say ( Powell , D1-Pow-8 ) ;
30909: LD_EXP 14
30913: PPUSH
30914: LD_STRING D1-Pow-8
30916: PPUSH
30917: CALL_OW 88
// Say ( JMM , D1-JMM-9 ) ;
30921: LD_EXP 12
30925: PPUSH
30926: LD_STRING D1-JMM-9
30928: PPUSH
30929: CALL_OW 88
// ComMoveXY ( Powell , 124 , 61 ) ;
30933: LD_EXP 14
30937: PPUSH
30938: LD_INT 124
30940: PPUSH
30941: LD_INT 61
30943: PPUSH
30944: CALL_OW 111
// repeat wait ( 0 0$1 ) ;
30948: LD_INT 35
30950: PPUSH
30951: CALL_OW 67
// until GetDistUnits ( JMM , Powell ) > 6 ;
30955: LD_EXP 12
30959: PPUSH
30960: LD_EXP 14
30964: PPUSH
30965: CALL_OW 296
30969: PUSH
30970: LD_INT 6
30972: GREATER
30973: IFFALSE 30948
// SayRadio ( Powell , D1-Pow-9 ) ;
30975: LD_EXP 14
30979: PPUSH
30980: LD_STRING D1-Pow-9
30982: PPUSH
30983: CALL_OW 94
// RemoveUnit ( Powell ) ;
30987: LD_EXP 14
30991: PPUSH
30992: CALL_OW 64
// PlaceHumanInUnit ( Powell , ambar0 ) ;
30996: LD_EXP 14
31000: PPUSH
31001: LD_INT 18
31003: PPUSH
31004: CALL_OW 52
// if Joan and not Joan in selected then
31008: LD_EXP 34
31012: PUSH
31013: LD_EXP 34
31017: PUSH
31018: LD_EXP 3
31022: IN
31023: NOT
31024: AND
31025: IFFALSE 31039
// SayRadio ( Joan , D1-Joan-9 ) ;
31027: LD_EXP 34
31031: PPUSH
31032: LD_STRING D1-Joan-9
31034: PPUSH
31035: CALL_OW 94
// ComTurnUnit ( Roth , JMM ) ;
31039: LD_EXP 13
31043: PPUSH
31044: LD_EXP 12
31048: PPUSH
31049: CALL_OW 119
// ComTurnUnit ( JMM , Roth ) ;
31053: LD_EXP 12
31057: PPUSH
31058: LD_EXP 13
31062: PPUSH
31063: CALL_OW 119
// Say ( Roth , D1-Roth-9 ) ;
31067: LD_EXP 13
31071: PPUSH
31072: LD_STRING D1-Roth-9
31074: PPUSH
31075: CALL_OW 88
// Say ( JMM , D1-JMM-10 ) ;
31079: LD_EXP 12
31083: PPUSH
31084: LD_STRING D1-JMM-10
31086: PPUSH
31087: CALL_OW 88
// InGameOff ;
31091: CALL_OW 9
// ChangeMissionObjectives ( M1 ) ;
31095: LD_STRING M1
31097: PPUSH
31098: CALL_OW 337
// if Difficulty < 3 then
31102: LD_OWVAR 67
31106: PUSH
31107: LD_INT 3
31109: LESS
31110: IFFALSE 31122
// ChangeSideFog ( 4 , 7 ) ;
31112: LD_INT 4
31114: PPUSH
31115: LD_INT 7
31117: PPUSH
31118: CALL_OW 343
// SaveForQuickRestart ;
31122: CALL_OW 22
// SetAttitude ( 7 , 1 , att_enemy , true ) ;
31126: LD_INT 7
31128: PPUSH
31129: LD_INT 1
31131: PPUSH
31132: LD_INT 2
31134: PPUSH
31135: LD_INT 1
31137: PPUSH
31138: CALL_OW 80
// wait ( 0 0$3 ) ;
31142: LD_INT 105
31144: PPUSH
31145: CALL_OW 67
// ComMoveXY ( Roth , 124 , 18 ) ;
31149: LD_EXP 13
31153: PPUSH
31154: LD_INT 124
31156: PPUSH
31157: LD_INT 18
31159: PPUSH
31160: CALL_OW 111
// AddComInvisible ( Roth ) ;
31164: LD_EXP 13
31168: PPUSH
31169: CALL_OW 212
// wait ( 0 0$30 ) ;
31173: LD_INT 1050
31175: PPUSH
31176: CALL_OW 67
// AddComWait ( Roth , 1 1$00 ) ;
31180: LD_EXP 13
31184: PPUSH
31185: LD_INT 2100
31187: PPUSH
31188: CALL_OW 202
// AddComMoveXY ( Roth , 156 , 20 ) ;
31192: LD_EXP 13
31196: PPUSH
31197: LD_INT 156
31199: PPUSH
31200: LD_INT 20
31202: PPUSH
31203: CALL_OW 171
// AddComMoveXY ( Roth , 178 , 42 ) ;
31207: LD_EXP 13
31211: PPUSH
31212: LD_INT 178
31214: PPUSH
31215: LD_INT 42
31217: PPUSH
31218: CALL_OW 171
// AddComInvisible ( Roth ) ;
31222: LD_EXP 13
31226: PPUSH
31227: CALL_OW 212
// end ;
31231: LD_VAR 0 1
31235: RET
// every 0 0$1 do var i , tmp ;
31236: GO 31238
31238: DISABLE
31239: LD_INT 0
31241: PPUSH
31242: PPUSH
// begin tmp := selected union friends ;
31243: LD_ADDR_VAR 0 2
31247: PUSH
31248: LD_EXP 3
31252: PUSH
31253: LD_EXP 4
31257: UNION
31258: ST_TO_ADDR
// if not tmp then
31259: LD_VAR 0 2
31263: NOT
31264: IFFALSE 31268
// exit ;
31266: GO 31340
// repeat wait ( 0 0$1 ) ;
31268: LD_INT 35
31270: PPUSH
31271: CALL_OW 67
// for i in tmp do
31275: LD_ADDR_VAR 0 1
31279: PUSH
31280: LD_VAR 0 2
31284: PUSH
31285: FOR_IN
31286: IFFALSE 31331
// if CanSpot ( JMM , i ) then
31288: LD_EXP 12
31292: PPUSH
31293: LD_VAR 0 1
31297: PPUSH
31298: CALL 27951 0 2
31302: IFFALSE 31329
// begin tmp := tmp diff i ;
31304: LD_ADDR_VAR 0 2
31308: PUSH
31309: LD_VAR 0 2
31313: PUSH
31314: LD_VAR 0 1
31318: DIFF
31319: ST_TO_ADDR
// Spot ( i ) ;
31320: LD_VAR 0 1
31324: PPUSH
31325: CALL 31343 0 1
// end ;
31329: GO 31285
31331: POP
31332: POP
// until not tmp ;
31333: LD_VAR 0 2
31337: NOT
31338: IFFALSE 31268
// end ;
31340: PPOPN 2
31342: END
// export function Spot ( unit ) ; var building , side , joined ; begin
31343: LD_INT 0
31345: PPUSH
31346: PPUSH
31347: PPUSH
31348: PPUSH
// if not unit or GetSide ( unit ) <> 4 or IsSleeping ( unit ) or not IsOk ( unit ) then
31349: LD_VAR 0 1
31353: NOT
31354: PUSH
31355: LD_VAR 0 1
31359: PPUSH
31360: CALL_OW 255
31364: PUSH
31365: LD_INT 4
31367: NONEQUAL
31368: OR
31369: PUSH
31370: LD_VAR 0 1
31374: PPUSH
31375: CALL_OW 555
31379: OR
31380: PUSH
31381: LD_VAR 0 1
31385: PPUSH
31386: CALL_OW 302
31390: NOT
31391: OR
31392: IFFALSE 31396
// exit ;
31394: GO 33285
// InGameOn ;
31396: CALL_OW 8
// side := GetSide ( JMM ) ;
31400: LD_ADDR_VAR 0 4
31404: PUSH
31405: LD_EXP 12
31409: PPUSH
31410: CALL_OW 255
31414: ST_TO_ADDR
// joined := false ;
31415: LD_ADDR_VAR 0 5
31419: PUSH
31420: LD_INT 0
31422: ST_TO_ADDR
// building := IsInUnit ( unit ) ;
31423: LD_ADDR_VAR 0 3
31427: PUSH
31428: LD_VAR 0 1
31432: PPUSH
31433: CALL_OW 310
31437: ST_TO_ADDR
// if building then
31438: LD_VAR 0 3
31442: IFFALSE 31501
// begin SetSide ( JMM , GetSide ( unit ) ) ;
31444: LD_EXP 12
31448: PPUSH
31449: LD_VAR 0 1
31453: PPUSH
31454: CALL_OW 255
31458: PPUSH
31459: CALL_OW 235
// ComEnterUnit ( JMM , building ) ;
31463: LD_EXP 12
31467: PPUSH
31468: LD_VAR 0 3
31472: PPUSH
31473: CALL_OW 120
// repeat wait ( 3 ) ;
31477: LD_INT 3
31479: PPUSH
31480: CALL_OW 67
// until IsInUnit ( JMM ) ;
31484: LD_EXP 12
31488: PPUSH
31489: CALL_OW 310
31493: IFFALSE 31477
// DialogueOn ;
31495: CALL_OW 6
// end else
31499: GO 31533
// begin ComTurnUnit ( JMM , unit ) ;
31501: LD_EXP 12
31505: PPUSH
31506: LD_VAR 0 1
31510: PPUSH
31511: CALL_OW 119
// ComTurnUnit ( unit , JMM ) ;
31515: LD_VAR 0 1
31519: PPUSH
31520: LD_EXP 12
31524: PPUSH
31525: CALL_OW 119
// DialogueOn ;
31529: CALL_OW 6
// end ; if unit = Joan then
31533: LD_VAR 0 1
31537: PUSH
31538: LD_EXP 34
31542: EQUAL
31543: IFFALSE 31653
// begin joined := true ;
31545: LD_ADDR_VAR 0 5
31549: PUSH
31550: LD_INT 1
31552: ST_TO_ADDR
// if Joan in selected then
31553: LD_EXP 34
31557: PUSH
31558: LD_EXP 3
31562: IN
31563: IFFALSE 31591
// begin Say ( Joan , D3-Joan-Joan-1 ) ;
31565: LD_EXP 34
31569: PPUSH
31570: LD_STRING D3-Joan-Joan-1
31572: PPUSH
31573: CALL_OW 88
// Say ( JMM , D3-Joan-JMM-1 ) ;
31577: LD_EXP 12
31581: PPUSH
31582: LD_STRING D3-Joan-JMM-1
31584: PPUSH
31585: CALL_OW 88
// end else
31589: GO 31651
// begin Say ( Joan , D4-Joan-Joan-1 ) ;
31591: LD_EXP 34
31595: PPUSH
31596: LD_STRING D4-Joan-Joan-1
31598: PPUSH
31599: CALL_OW 88
// Say ( JMM , D4-Joan-JMM-1 ) ;
31603: LD_EXP 12
31607: PPUSH
31608: LD_STRING D4-Joan-JMM-1
31610: PPUSH
31611: CALL_OW 88
// Say ( Joan , D4-Joan-Joan-2 ) ;
31615: LD_EXP 34
31619: PPUSH
31620: LD_STRING D4-Joan-Joan-2
31622: PPUSH
31623: CALL_OW 88
// Say ( JMM , D4-Joan-JMM-2 ) ;
31627: LD_EXP 12
31631: PPUSH
31632: LD_STRING D4-Joan-JMM-2
31634: PPUSH
31635: CALL_OW 88
// Say ( Joan , D4-Joan-Joan-3 ) ;
31639: LD_EXP 34
31643: PPUSH
31644: LD_STRING D4-Joan-Joan-3
31646: PPUSH
31647: CALL_OW 88
// end ; end else
31651: GO 33093
// if unit = Lisa then
31653: LD_VAR 0 1
31657: PUSH
31658: LD_EXP 21
31662: EQUAL
31663: IFFALSE 31855
// begin if Lisa in selected then
31665: LD_EXP 21
31669: PUSH
31670: LD_EXP 3
31674: IN
31675: IFFALSE 31788
// begin if GetSide ( Joan ) = 7 then
31677: LD_EXP 34
31681: PPUSH
31682: CALL_OW 255
31686: PUSH
31687: LD_INT 7
31689: EQUAL
31690: IFFALSE 31754
// begin Say ( Lisa , D3-LisaJ-Lisa-1 ) ;
31692: LD_EXP 21
31696: PPUSH
31697: LD_STRING D3-LisaJ-Lisa-1
31699: PPUSH
31700: CALL_OW 88
// Say ( JMM , D3-LisaJ-JMM-1 ) ;
31704: LD_EXP 12
31708: PPUSH
31709: LD_STRING D3-LisaJ-JMM-1
31711: PPUSH
31712: CALL_OW 88
// Say ( Lisa , D3-LisaJ-Lisa-2 ) ;
31716: LD_EXP 21
31720: PPUSH
31721: LD_STRING D3-LisaJ-Lisa-2
31723: PPUSH
31724: CALL_OW 88
// Say ( JMM , D3-LisaJ-JMM-2 ) ;
31728: LD_EXP 12
31732: PPUSH
31733: LD_STRING D3-LisaJ-JMM-2
31735: PPUSH
31736: CALL_OW 88
// Say ( Lisa , D3-LisaJ-Lisa-3 ) ;
31740: LD_EXP 21
31744: PPUSH
31745: LD_STRING D3-LisaJ-Lisa-3
31747: PPUSH
31748: CALL_OW 88
// end else
31752: GO 31786
// begin Say ( Lisa , D3-LisaL-Lisa-1 ) ;
31754: LD_EXP 21
31758: PPUSH
31759: LD_STRING D3-LisaL-Lisa-1
31761: PPUSH
31762: CALL_OW 88
// Say ( JMM , D3-LisaL-JMM-1 ) ;
31766: LD_EXP 12
31770: PPUSH
31771: LD_STRING D3-LisaL-JMM-1
31773: PPUSH
31774: CALL_OW 88
// joined := true ;
31778: LD_ADDR_VAR 0 5
31782: PUSH
31783: LD_INT 1
31785: ST_TO_ADDR
// end ; end else
31786: GO 31853
// begin if GetSide ( Joan ) = 7 then
31788: LD_EXP 34
31792: PPUSH
31793: CALL_OW 255
31797: PUSH
31798: LD_INT 7
31800: EQUAL
31801: IFFALSE 31841
// begin Say ( Lisa , D4-LisaJ-Lisa-1 ) ;
31803: LD_EXP 21
31807: PPUSH
31808: LD_STRING D4-LisaJ-Lisa-1
31810: PPUSH
31811: CALL_OW 88
// Say ( JMM , D4-LisaJ-JMM-1 ) ;
31815: LD_EXP 12
31819: PPUSH
31820: LD_STRING D4-LisaJ-JMM-1
31822: PPUSH
31823: CALL_OW 88
// Say ( Lisa , D4-LisaJ-Lisa-2 ) ;
31827: LD_EXP 21
31831: PPUSH
31832: LD_STRING D4-LisaJ-Lisa-2
31834: PPUSH
31835: CALL_OW 88
// end else
31839: GO 31853
// begin Say ( Lisa , D4-LisaL-Lisa-1 ) ;
31841: LD_EXP 21
31845: PPUSH
31846: LD_STRING D4-LisaL-Lisa-1
31848: PPUSH
31849: CALL_OW 88
// end ; end ; end else
31853: GO 33093
// if unit = Frank then
31855: LD_VAR 0 1
31859: PUSH
31860: LD_EXP 31
31864: EQUAL
31865: IFFALSE 32005
// begin joined := true ;
31867: LD_ADDR_VAR 0 5
31871: PUSH
31872: LD_INT 1
31874: ST_TO_ADDR
// if Frank in selected then
31875: LD_EXP 31
31879: PUSH
31880: LD_EXP 3
31884: IN
31885: IFFALSE 31955
// begin Say ( Frank , D3-Frank-Frank-1 ) ;
31887: LD_EXP 31
31891: PPUSH
31892: LD_STRING D3-Frank-Frank-1
31894: PPUSH
31895: CALL_OW 88
// Say ( JMM , D3-Frank-JMM-1 ) ;
31899: LD_EXP 12
31903: PPUSH
31904: LD_STRING D3-Frank-JMM-1
31906: PPUSH
31907: CALL_OW 88
// Say ( Frank , D3-Frank-Frank-2 ) ;
31911: LD_EXP 31
31915: PPUSH
31916: LD_STRING D3-Frank-Frank-2
31918: PPUSH
31919: CALL_OW 88
// if reached_lab then
31923: LD_EXP 5
31927: IFFALSE 31953
// begin Say ( JMM , D3-Frank-JMM-2 ) ;
31929: LD_EXP 12
31933: PPUSH
31934: LD_STRING D3-Frank-JMM-2
31936: PPUSH
31937: CALL_OW 88
// Say ( Frank , D3-Frank-Frank-3 ) ;
31941: LD_EXP 31
31945: PPUSH
31946: LD_STRING D3-Frank-Frank-3
31948: PPUSH
31949: CALL_OW 88
// end ; end else
31953: GO 32003
// begin Say ( Frank , D4-Frank-Frank-1 ) ;
31955: LD_EXP 31
31959: PPUSH
31960: LD_STRING D4-Frank-Frank-1
31962: PPUSH
31963: CALL_OW 88
// Say ( JMM , D4-Frank-JMM-1 ) ;
31967: LD_EXP 12
31971: PPUSH
31972: LD_STRING D4-Frank-JMM-1
31974: PPUSH
31975: CALL_OW 88
// Say ( Frank , D4-Frank-Frank-2 ) ;
31979: LD_EXP 31
31983: PPUSH
31984: LD_STRING D4-Frank-Frank-2
31986: PPUSH
31987: CALL_OW 88
// Say ( JMM , D4-Frank-JMM-2 ) ;
31991: LD_EXP 12
31995: PPUSH
31996: LD_STRING D4-Frank-JMM-2
31998: PPUSH
31999: CALL_OW 88
// end ; end else
32003: GO 33093
// if unit = Brown then
32005: LD_VAR 0 1
32009: PUSH
32010: LD_EXP 26
32014: EQUAL
32015: IFFALSE 32111
// begin if Brown in selected or gamma_commander = 2 then
32017: LD_EXP 26
32021: PUSH
32022: LD_EXP 3
32026: IN
32027: PUSH
32028: LD_EXP 10
32032: PUSH
32033: LD_INT 2
32035: EQUAL
32036: OR
32037: IFFALSE 32073
// begin Say ( Brown , D3-Soldier1-Sol1-1 ) ;
32039: LD_EXP 26
32043: PPUSH
32044: LD_STRING D3-Soldier1-Sol1-1
32046: PPUSH
32047: CALL_OW 88
// Say ( JMM , D3-Soldier1-JMM-1 ) ;
32051: LD_EXP 12
32055: PPUSH
32056: LD_STRING D3-Soldier1-JMM-1
32058: PPUSH
32059: CALL_OW 88
// joined := true ;
32063: LD_ADDR_VAR 0 5
32067: PUSH
32068: LD_INT 1
32070: ST_TO_ADDR
// end else
32071: GO 32109
// begin Say ( Brown , D4-Soldier2-Sol1-1 ) ;
32073: LD_EXP 26
32077: PPUSH
32078: LD_STRING D4-Soldier2-Sol1-1
32080: PPUSH
32081: CALL_OW 88
// Say ( JMM , D4-Soldier1-JMM-1 ) ;
32085: LD_EXP 12
32089: PPUSH
32090: LD_STRING D4-Soldier1-JMM-1
32092: PPUSH
32093: CALL_OW 88
// Say ( Brown , D4-Soldier2-Sol1-2 ) ;
32097: LD_EXP 26
32101: PPUSH
32102: LD_STRING D4-Soldier2-Sol1-2
32104: PPUSH
32105: CALL_OW 88
// end ; end else
32109: GO 33093
// if unit = Donaldson then
32111: LD_VAR 0 1
32115: PUSH
32116: LD_EXP 22
32120: EQUAL
32121: IFFALSE 32217
// begin if Donaldson in selected or gamma_commander = 1 then
32123: LD_EXP 22
32127: PUSH
32128: LD_EXP 3
32132: IN
32133: PUSH
32134: LD_EXP 10
32138: PUSH
32139: LD_INT 1
32141: EQUAL
32142: OR
32143: IFFALSE 32179
// begin Say ( Donaldson , D3-Soldier2-FSol2-1 ) ;
32145: LD_EXP 22
32149: PPUSH
32150: LD_STRING D3-Soldier2-FSol2-1
32152: PPUSH
32153: CALL_OW 88
// Say ( JMM , D3-Soldier2-JMM-1 ) ;
32157: LD_EXP 12
32161: PPUSH
32162: LD_STRING D3-Soldier2-JMM-1
32164: PPUSH
32165: CALL_OW 88
// joined := true ;
32169: LD_ADDR_VAR 0 5
32173: PUSH
32174: LD_INT 1
32176: ST_TO_ADDR
// end else
32177: GO 32215
// begin Say ( unit , D4-Soldier1-FSol1-1 ) ;
32179: LD_VAR 0 1
32183: PPUSH
32184: LD_STRING D4-Soldier1-FSol1-1
32186: PPUSH
32187: CALL_OW 88
// Say ( JMM , D4-Soldier1-JMM-1 ) ;
32191: LD_EXP 12
32195: PPUSH
32196: LD_STRING D4-Soldier1-JMM-1
32198: PPUSH
32199: CALL_OW 88
// Say ( unit , D4-Soldier1-FSol1-2 ) ;
32203: LD_VAR 0 1
32207: PPUSH
32208: LD_STRING D4-Soldier1-FSol1-2
32210: PPUSH
32211: CALL_OW 88
// end ; end else
32215: GO 33093
// if unit = Cyrus then
32217: LD_VAR 0 1
32221: PUSH
32222: LD_EXP 24
32226: EQUAL
32227: IFFALSE 32301
// begin if Cyrus in selected then
32229: LD_EXP 24
32233: PUSH
32234: LD_EXP 3
32238: IN
32239: IFFALSE 32275
// begin Say ( Cyrus , D3-Cyrus-Cyrus-1 ) ;
32241: LD_EXP 24
32245: PPUSH
32246: LD_STRING D3-Cyrus-Cyrus-1
32248: PPUSH
32249: CALL_OW 88
// Say ( JMM , D3-Cyrus-JMM-1 ) ;
32253: LD_EXP 12
32257: PPUSH
32258: LD_STRING D3-Cyrus-JMM-1
32260: PPUSH
32261: CALL_OW 88
// joined := true ;
32265: LD_ADDR_VAR 0 5
32269: PUSH
32270: LD_INT 1
32272: ST_TO_ADDR
// end else
32273: GO 32299
// begin Say ( Cyrus , D4-Cyrus-Cyrus-1 ) ;
32275: LD_EXP 24
32279: PPUSH
32280: LD_STRING D4-Cyrus-Cyrus-1
32282: PPUSH
32283: CALL_OW 88
// Say ( JMM , D4-Cyrus-JMM-1 ) ;
32287: LD_EXP 12
32291: PPUSH
32292: LD_STRING D4-Cyrus-JMM-1
32294: PPUSH
32295: CALL_OW 88
// end ; end else
32299: GO 33093
// if unit = Bobby then
32301: LD_VAR 0 1
32305: PUSH
32306: LD_EXP 23
32310: EQUAL
32311: IFFALSE 32397
// begin if Bobby in selected then
32313: LD_EXP 23
32317: PUSH
32318: LD_EXP 3
32322: IN
32323: IFFALSE 32359
// begin Say ( Bobby , D3-Bobby-Bobby-1 ) ;
32325: LD_EXP 23
32329: PPUSH
32330: LD_STRING D3-Bobby-Bobby-1
32332: PPUSH
32333: CALL_OW 88
// Say ( JMM , D3-Bobby-JMM-1 ) ;
32337: LD_EXP 12
32341: PPUSH
32342: LD_STRING D3-Bobby-JMM-1
32344: PPUSH
32345: CALL_OW 88
// joined := true ;
32349: LD_ADDR_VAR 0 5
32353: PUSH
32354: LD_INT 1
32356: ST_TO_ADDR
// end else
32357: GO 32395
// begin Say ( Bobby , D4-Bobby-Bobby-1 ) ;
32359: LD_EXP 23
32363: PPUSH
32364: LD_STRING D4-Bobby-Bobby-1
32366: PPUSH
32367: CALL_OW 88
// Say ( JMM , D4-Bobby-JMM-1 ) ;
32371: LD_EXP 12
32375: PPUSH
32376: LD_STRING D4-Bobby-JMM-1
32378: PPUSH
32379: CALL_OW 88
// Say ( Bobby , D4-Bobby-Bobby-2 ) ;
32383: LD_EXP 23
32387: PPUSH
32388: LD_STRING D4-Bobby-Bobby-2
32390: PPUSH
32391: CALL_OW 88
// end ; end else
32395: GO 33093
// if unit = Cornel then
32397: LD_VAR 0 1
32401: PUSH
32402: LD_EXP 29
32406: EQUAL
32407: IFFALSE 32505
// begin if Cornel in selected then
32409: LD_EXP 29
32413: PUSH
32414: LD_EXP 3
32418: IN
32419: IFFALSE 32467
// begin Say ( Cornel , D3-Mark-Corn-1 ) ;
32421: LD_EXP 29
32425: PPUSH
32426: LD_STRING D3-Mark-Corn-1
32428: PPUSH
32429: CALL_OW 88
// Say ( JMM , D3-Mark-JMM-1 ) ;
32433: LD_EXP 12
32437: PPUSH
32438: LD_STRING D3-Mark-JMM-1
32440: PPUSH
32441: CALL_OW 88
// Say ( Cornel , D3-Mark-Corn-2 ) ;
32445: LD_EXP 29
32449: PPUSH
32450: LD_STRING D3-Mark-Corn-2
32452: PPUSH
32453: CALL_OW 88
// joined := true ;
32457: LD_ADDR_VAR 0 5
32461: PUSH
32462: LD_INT 1
32464: ST_TO_ADDR
// end else
32465: GO 32503
// begin Say ( Cornel , D4-Mark-Corn-1 ) ;
32467: LD_EXP 29
32471: PPUSH
32472: LD_STRING D4-Mark-Corn-1
32474: PPUSH
32475: CALL_OW 88
// Say ( JMM , D3-Joan-JMM-1 ) ;
32479: LD_EXP 12
32483: PPUSH
32484: LD_STRING D3-Joan-JMM-1
32486: PPUSH
32487: CALL_OW 88
// Say ( Cornel , D4-Mark-Corn-2 ) ;
32491: LD_EXP 29
32495: PPUSH
32496: LD_STRING D4-Mark-Corn-2
32498: PPUSH
32499: CALL_OW 88
// end ; end else
32503: GO 33093
// if unit = Gary then
32505: LD_VAR 0 1
32509: PUSH
32510: LD_EXP 30
32514: EQUAL
32515: IFFALSE 32599
// begin if Gary in selected then
32517: LD_EXP 30
32521: PUSH
32522: LD_EXP 3
32526: IN
32527: IFFALSE 32563
// begin Say ( Gary , D3-Gary-Gary-1 ) ;
32529: LD_EXP 30
32533: PPUSH
32534: LD_STRING D3-Gary-Gary-1
32536: PPUSH
32537: CALL_OW 88
// Say ( JMM , D3-Gary-JMM-1 ) ;
32541: LD_EXP 12
32545: PPUSH
32546: LD_STRING D3-Gary-JMM-1
32548: PPUSH
32549: CALL_OW 88
// joined := true ;
32553: LD_ADDR_VAR 0 5
32557: PUSH
32558: LD_INT 1
32560: ST_TO_ADDR
// end else
32561: GO 32597
// begin Say ( Gary , D4-Gary-Gary-1 ) ;
32563: LD_EXP 30
32567: PPUSH
32568: LD_STRING D4-Gary-Gary-1
32570: PPUSH
32571: CALL_OW 88
// SetSide ( Gary , 1 ) ;
32575: LD_EXP 30
32579: PPUSH
32580: LD_INT 1
32582: PPUSH
32583: CALL_OW 235
// DialogueOff ;
32587: CALL_OW 7
// InGameOff ;
32591: CALL_OW 9
// exit ;
32595: GO 33285
// end ; end else
32597: GO 33093
// if unit = Kikuchi then
32599: LD_VAR 0 1
32603: PUSH
32604: LD_EXP 32
32608: EQUAL
32609: IFFALSE 32693
// begin if Kikuchi in selected then
32611: LD_EXP 32
32615: PUSH
32616: LD_EXP 3
32620: IN
32621: IFFALSE 32657
// begin Say ( Kikuchi , D3-Yamako-Yam-1 ) ;
32623: LD_EXP 32
32627: PPUSH
32628: LD_STRING D3-Yamako-Yam-1
32630: PPUSH
32631: CALL_OW 88
// Say ( JMM , D3-Soldier2-JMM-1 ) ;
32635: LD_EXP 12
32639: PPUSH
32640: LD_STRING D3-Soldier2-JMM-1
32642: PPUSH
32643: CALL_OW 88
// joined := true ;
32647: LD_ADDR_VAR 0 5
32651: PUSH
32652: LD_INT 1
32654: ST_TO_ADDR
// end else
32655: GO 32691
// begin Say ( Kikuchi , D4-Yamako-Yam-1 ) ;
32657: LD_EXP 32
32661: PPUSH
32662: LD_STRING D4-Yamako-Yam-1
32664: PPUSH
32665: CALL_OW 88
// SetSide ( Kikuchi , 1 ) ;
32669: LD_EXP 32
32673: PPUSH
32674: LD_INT 1
32676: PPUSH
32677: CALL_OW 235
// DialogueOff ;
32681: CALL_OW 7
// InGameOff ;
32685: CALL_OW 9
// exit ;
32689: GO 33285
// end ; end else
32691: GO 33093
// if unit = Gladstone then
32693: LD_VAR 0 1
32697: PUSH
32698: LD_EXP 27
32702: EQUAL
32703: IFFALSE 32777
// begin if Gladstone in selected then
32705: LD_EXP 27
32709: PUSH
32710: LD_EXP 3
32714: IN
32715: IFFALSE 32751
// begin joined := true ;
32717: LD_ADDR_VAR 0 5
32721: PUSH
32722: LD_INT 1
32724: ST_TO_ADDR
// Say ( JMM , D3-Tim-JMM-1 ) ;
32725: LD_EXP 12
32729: PPUSH
32730: LD_STRING D3-Tim-JMM-1
32732: PPUSH
32733: CALL_OW 88
// Say ( Gladstone , D3-Tim-Glad-1 ) ;
32737: LD_EXP 27
32741: PPUSH
32742: LD_STRING D3-Tim-Glad-1
32744: PPUSH
32745: CALL_OW 88
// end else
32749: GO 32775
// begin Say ( JMM , D4-Tim-JMM-1 ) ;
32751: LD_EXP 12
32755: PPUSH
32756: LD_STRING D4-Tim-JMM-1
32758: PPUSH
32759: CALL_OW 88
// Say ( Gladstone , D4-Tim-Glad-1 ) ;
32763: LD_EXP 27
32767: PPUSH
32768: LD_STRING D4-Tim-Glad-1
32770: PPUSH
32771: CALL_OW 88
// end ; end else
32775: GO 33093
// if unit = Denis then
32777: LD_VAR 0 1
32781: PUSH
32782: LD_EXP 25
32786: EQUAL
32787: IFFALSE 32823
// begin joined := true ;
32789: LD_ADDR_VAR 0 5
32793: PUSH
32794: LD_INT 1
32796: ST_TO_ADDR
// Say ( Denis , D3-Denis-Den-1 ) ;
32797: LD_EXP 25
32801: PPUSH
32802: LD_STRING D3-Denis-Den-1
32804: PPUSH
32805: CALL_OW 88
// Say ( JMM , D3-Denis-JMM-1 ) ;
32809: LD_EXP 12
32813: PPUSH
32814: LD_STRING D3-Denis-JMM-1
32816: PPUSH
32817: CALL_OW 88
// end else
32821: GO 33093
// if unit = Simms then
32823: LD_VAR 0 1
32827: PUSH
32828: LD_EXP 33
32832: EQUAL
32833: IFFALSE 32869
// begin joined := true ;
32835: LD_ADDR_VAR 0 5
32839: PUSH
32840: LD_INT 1
32842: ST_TO_ADDR
// Say ( Simms , D3-Simms-Sim-1 ) ;
32843: LD_EXP 33
32847: PPUSH
32848: LD_STRING D3-Simms-Sim-1
32850: PPUSH
32851: CALL_OW 88
// Say ( JMM , D3-Simms-JMM-1 ) ;
32855: LD_EXP 12
32859: PPUSH
32860: LD_STRING D3-Simms-JMM-1
32862: PPUSH
32863: CALL_OW 88
// end else
32867: GO 33093
// if unit = DeltaDoctor then
32869: LD_VAR 0 1
32873: PUSH
32874: LD_EXP 35
32878: EQUAL
32879: IFFALSE 32915
// begin joined := true ;
32881: LD_ADDR_VAR 0 5
32885: PUSH
32886: LD_INT 1
32888: ST_TO_ADDR
// Say ( DeltaDoctor , D3-Soldier1-Sol1-1 ) ;
32889: LD_EXP 35
32893: PPUSH
32894: LD_STRING D3-Soldier1-Sol1-1
32896: PPUSH
32897: CALL_OW 88
// Say ( JMM , D3-Soldier1-JMM-1 ) ;
32901: LD_EXP 12
32905: PPUSH
32906: LD_STRING D3-Soldier1-JMM-1
32908: PPUSH
32909: CALL_OW 88
// end else
32913: GO 33093
// begin joined := unit in selected ;
32915: LD_ADDR_VAR 0 5
32919: PUSH
32920: LD_VAR 0 1
32924: PUSH
32925: LD_EXP 3
32929: IN
32930: ST_TO_ADDR
// if joined then
32931: LD_VAR 0 5
32935: IFFALSE 33004
// begin if GetSex ( unit ) = sex_male then
32937: LD_VAR 0 1
32941: PPUSH
32942: CALL_OW 258
32946: PUSH
32947: LD_INT 1
32949: EQUAL
32950: IFFALSE 32978
// begin Say ( unit , D3-Soldier1-Sol1-1 ) ;
32952: LD_VAR 0 1
32956: PPUSH
32957: LD_STRING D3-Soldier1-Sol1-1
32959: PPUSH
32960: CALL_OW 88
// Say ( JMM , D3-Soldier1-JMM-1 ) ;
32964: LD_EXP 12
32968: PPUSH
32969: LD_STRING D3-Soldier1-JMM-1
32971: PPUSH
32972: CALL_OW 88
// end else
32976: GO 33002
// begin Say ( unit , D3-Soldier2-FSol2-1 ) ;
32978: LD_VAR 0 1
32982: PPUSH
32983: LD_STRING D3-Soldier2-FSol2-1
32985: PPUSH
32986: CALL_OW 88
// Say ( JMM , D3-Soldier2-JMM-1 ) ;
32990: LD_EXP 12
32994: PPUSH
32995: LD_STRING D3-Soldier2-JMM-1
32997: PPUSH
32998: CALL_OW 88
// end ; end else
33002: GO 33093
// begin if GetSex ( unit ) = sex_male then
33004: LD_VAR 0 1
33008: PPUSH
33009: CALL_OW 258
33013: PUSH
33014: LD_INT 1
33016: EQUAL
33017: IFFALSE 33057
// begin Say ( unit , D4-Soldier2-Sol1-1 ) ;
33019: LD_VAR 0 1
33023: PPUSH
33024: LD_STRING D4-Soldier2-Sol1-1
33026: PPUSH
33027: CALL_OW 88
// Say ( JMM , D4-Soldier2-JMM-1 ) ;
33031: LD_EXP 12
33035: PPUSH
33036: LD_STRING D4-Soldier2-JMM-1
33038: PPUSH
33039: CALL_OW 88
// Say ( unit , D4-Soldier2-Sol2-1 ) ;
33043: LD_VAR 0 1
33047: PPUSH
33048: LD_STRING D4-Soldier2-Sol2-1
33050: PPUSH
33051: CALL_OW 88
// end else
33055: GO 33093
// begin Say ( unit , D4-Soldier1-FSol1-1 ) ;
33057: LD_VAR 0 1
33061: PPUSH
33062: LD_STRING D4-Soldier1-FSol1-1
33064: PPUSH
33065: CALL_OW 88
// Say ( JMM , D4-Soldier1-JMM-1 ) ;
33069: LD_EXP 12
33073: PPUSH
33074: LD_STRING D4-Soldier1-JMM-1
33076: PPUSH
33077: CALL_OW 88
// Say ( unit , D4-Soldier1-FSol1-2 ) ;
33081: LD_VAR 0 1
33085: PPUSH
33086: LD_STRING D4-Soldier1-FSol1-2
33088: PPUSH
33089: CALL_OW 88
// end ; end ; end ; DialogueOff ;
33093: CALL_OW 7
// InGameOff ;
33097: CALL_OW 9
// if building then
33101: LD_VAR 0 3
33105: IFFALSE 33206
// begin SetSide ( JMM , side ) ;
33107: LD_EXP 12
33111: PPUSH
33112: LD_VAR 0 4
33116: PPUSH
33117: CALL_OW 235
// ComExitBuilding ( JMM ) ;
33121: LD_EXP 12
33125: PPUSH
33126: CALL_OW 122
// if joined then
33130: LD_VAR 0 5
33134: IFFALSE 33173
// begin SetSide ( unit , side ) ;
33136: LD_VAR 0 1
33140: PPUSH
33141: LD_VAR 0 4
33145: PPUSH
33146: CALL_OW 235
// SetSide ( building , 1 ) ;
33150: LD_VAR 0 3
33154: PPUSH
33155: LD_INT 1
33157: PPUSH
33158: CALL_OW 235
// ComExitBuilding ( unit ) ;
33162: LD_VAR 0 1
33166: PPUSH
33167: CALL_OW 122
// end else
33171: GO 33204
// begin wait ( 0 0$10 ) ;
33173: LD_INT 350
33175: PPUSH
33176: CALL_OW 67
// SetSide ( unit , 1 ) ;
33180: LD_VAR 0 1
33184: PPUSH
33185: LD_INT 1
33187: PPUSH
33188: CALL_OW 235
// SetSide ( building , 1 ) ;
33192: LD_VAR 0 3
33196: PPUSH
33197: LD_INT 1
33199: PPUSH
33200: CALL_OW 235
// end ; end else
33204: GO 33285
// begin ComStop ( [ JMM , unit ] ) ;
33206: LD_EXP 12
33210: PUSH
33211: LD_VAR 0 1
33215: PUSH
33216: EMPTY
33217: LIST
33218: LIST
33219: PPUSH
33220: CALL_OW 141
// if joined then
33224: LD_VAR 0 5
33228: IFFALSE 33246
// SetSide ( unit , side ) else
33230: LD_VAR 0 1
33234: PPUSH
33235: LD_VAR 0 4
33239: PPUSH
33240: CALL_OW 235
33244: GO 33285
// begin repeat wait ( 0 0$1 ) ;
33246: LD_INT 35
33248: PPUSH
33249: CALL_OW 67
// until GetDistUnits ( JMM , unit ) > 11 ;
33253: LD_EXP 12
33257: PPUSH
33258: LD_VAR 0 1
33262: PPUSH
33263: CALL_OW 296
33267: PUSH
33268: LD_INT 11
33270: GREATER
33271: IFFALSE 33246
// SetSide ( unit , 1 ) ;
33273: LD_VAR 0 1
33277: PPUSH
33278: LD_INT 1
33280: PPUSH
33281: CALL_OW 235
// end ; end ; end ;
33285: LD_VAR 0 2
33289: RET
// every 0 0$01 trigger IsInUnit ( JMM ) = amlab do
33290: LD_EXP 12
33294: PPUSH
33295: CALL_OW 310
33299: PUSH
33300: LD_INT 47
33302: EQUAL
33303: IFFALSE 33371
33305: GO 33307
33307: DISABLE
// begin ChangeMissionObjectives ( M1a ) ;
33308: LD_STRING M1a
33310: PPUSH
33311: CALL_OW 337
// SetTech ( tech_Soporific , 7 , state_researched ) ;
33315: LD_INT 13
33317: PPUSH
33318: LD_INT 7
33320: PPUSH
33321: LD_INT 2
33323: PPUSH
33324: CALL_OW 322
// SetTech ( tech_SpacAnom , 7 , state_researched ) ;
33328: LD_INT 29
33330: PPUSH
33331: LD_INT 7
33333: PPUSH
33334: LD_INT 2
33336: PPUSH
33337: CALL_OW 322
// SetClass ( JMM , class_bazooker ) ;
33341: LD_EXP 12
33345: PPUSH
33346: LD_INT 9
33348: PPUSH
33349: CALL_OW 336
// can_escape := true ;
33353: LD_ADDR_EXP 6
33357: PUSH
33358: LD_INT 1
33360: ST_TO_ADDR
// SetAreaMapShow ( escape_area , 1 ) ;
33361: LD_INT 19
33363: PPUSH
33364: LD_INT 1
33366: PPUSH
33367: CALL_OW 424
// end ;
33371: END
// every 0 0$01 trigger FilterAllUnits ( [ [ f_side , 4 ] , [ f_weapon , us_cargo_bay ] ] ) do var i ;
33372: LD_INT 22
33374: PUSH
33375: LD_INT 4
33377: PUSH
33378: EMPTY
33379: LIST
33380: LIST
33381: PUSH
33382: LD_INT 34
33384: PUSH
33385: LD_INT 12
33387: PUSH
33388: EMPTY
33389: LIST
33390: LIST
33391: PUSH
33392: EMPTY
33393: LIST
33394: LIST
33395: PPUSH
33396: CALL_OW 69
33400: IFFALSE 33482
33402: GO 33404
33404: DISABLE
33405: LD_INT 0
33407: PPUSH
// begin enable ;
33408: ENABLE
// for i in FilterAllUnits ( [ [ f_side , 4 ] , [ f_weapon , us_cargo_bay ] ] ) do
33409: LD_ADDR_VAR 0 1
33413: PUSH
33414: LD_INT 22
33416: PUSH
33417: LD_INT 4
33419: PUSH
33420: EMPTY
33421: LIST
33422: LIST
33423: PUSH
33424: LD_INT 34
33426: PUSH
33427: LD_INT 12
33429: PUSH
33430: EMPTY
33431: LIST
33432: LIST
33433: PUSH
33434: EMPTY
33435: LIST
33436: LIST
33437: PPUSH
33438: CALL_OW 69
33442: PUSH
33443: FOR_IN
33444: IFFALSE 33480
// if GetDistUnits ( i , JMM ) < 6 then
33446: LD_VAR 0 1
33450: PPUSH
33451: LD_EXP 12
33455: PPUSH
33456: CALL_OW 296
33460: PUSH
33461: LD_INT 6
33463: LESS
33464: IFFALSE 33478
// SetSide ( i , 7 ) ;
33466: LD_VAR 0 1
33470: PPUSH
33471: LD_INT 7
33473: PPUSH
33474: CALL_OW 235
33478: GO 33443
33480: POP
33481: POP
// end ;
33482: PPOPN 1
33484: END
// every 0 0$01 trigger can_escape and not FilterUnitsExceptArea ( escape_area , [ [ f_side , 7 ] , [ f_type , unit_human ] ] ) and not FindArtifact ( 3 ) and not FindArtifact ( 5 ) do var all_taken , tmp ;
33485: LD_EXP 6
33489: PUSH
33490: LD_INT 19
33492: PPUSH
33493: LD_INT 22
33495: PUSH
33496: LD_INT 7
33498: PUSH
33499: EMPTY
33500: LIST
33501: LIST
33502: PUSH
33503: LD_INT 21
33505: PUSH
33506: LD_INT 1
33508: PUSH
33509: EMPTY
33510: LIST
33511: LIST
33512: PUSH
33513: EMPTY
33514: LIST
33515: LIST
33516: PPUSH
33517: CALL_OW 71
33521: NOT
33522: AND
33523: PUSH
33524: LD_INT 3
33526: PPUSH
33527: CALL_OW 469
33531: NOT
33532: AND
33533: PUSH
33534: LD_INT 5
33536: PPUSH
33537: CALL_OW 469
33541: NOT
33542: AND
33543: IFFALSE 34769
33545: GO 33547
33547: DISABLE
33548: LD_INT 0
33550: PPUSH
33551: PPUSH
// begin all_taken := ( UnitFilter ( selected , [ [ f_side , 4 ] , [ f_type , unit_human ] ] ) = 0 ) ;
33552: LD_ADDR_VAR 0 1
33556: PUSH
33557: LD_EXP 3
33561: PPUSH
33562: LD_INT 22
33564: PUSH
33565: LD_INT 4
33567: PUSH
33568: EMPTY
33569: LIST
33570: LIST
33571: PUSH
33572: LD_INT 21
33574: PUSH
33575: LD_INT 1
33577: PUSH
33578: EMPTY
33579: LIST
33580: LIST
33581: PUSH
33582: EMPTY
33583: LIST
33584: LIST
33585: PPUSH
33586: CALL_OW 72
33590: PUSH
33591: LD_INT 0
33593: EQUAL
33594: ST_TO_ADDR
// if not all_taken then
33595: LD_VAR 0 1
33599: NOT
33600: IFFALSE 33741
// case query ( Q1 ) of 1 :
33602: LD_STRING Q1
33604: PPUSH
33605: CALL_OW 97
33609: PUSH
33610: LD_INT 1
33612: DOUBLE
33613: EQUAL
33614: IFTRUE 33618
33616: GO 33729
33618: POP
// begin repeat wait ( 0 0$1 ) ;
33619: LD_INT 35
33621: PPUSH
33622: CALL_OW 67
// until UnitFilter ( selected , [ [ f_side , 4 ] , [ f_type , unit_human ] ] ) = 0 and not FilterUnitsExceptArea ( escape_area , [ [ f_side , 7 ] , [ f_type , unit_human ] ] ) and not FindArtifact ( 3 ) and not FindArtifact ( 5 ) ;
33626: LD_EXP 3
33630: PPUSH
33631: LD_INT 22
33633: PUSH
33634: LD_INT 4
33636: PUSH
33637: EMPTY
33638: LIST
33639: LIST
33640: PUSH
33641: LD_INT 21
33643: PUSH
33644: LD_INT 1
33646: PUSH
33647: EMPTY
33648: LIST
33649: LIST
33650: PUSH
33651: EMPTY
33652: LIST
33653: LIST
33654: PPUSH
33655: CALL_OW 72
33659: PUSH
33660: LD_INT 0
33662: EQUAL
33663: PUSH
33664: LD_INT 19
33666: PPUSH
33667: LD_INT 22
33669: PUSH
33670: LD_INT 7
33672: PUSH
33673: EMPTY
33674: LIST
33675: LIST
33676: PUSH
33677: LD_INT 21
33679: PUSH
33680: LD_INT 1
33682: PUSH
33683: EMPTY
33684: LIST
33685: LIST
33686: PUSH
33687: EMPTY
33688: LIST
33689: LIST
33690: PPUSH
33691: CALL_OW 71
33695: NOT
33696: AND
33697: PUSH
33698: LD_INT 3
33700: PPUSH
33701: CALL_OW 469
33705: NOT
33706: AND
33707: PUSH
33708: LD_INT 5
33710: PPUSH
33711: CALL_OW 469
33715: NOT
33716: AND
33717: IFFALSE 33619
// all_taken := true ;
33719: LD_ADDR_VAR 0 1
33723: PUSH
33724: LD_INT 1
33726: ST_TO_ADDR
// end ; 2 :
33727: GO 33741
33729: LD_INT 2
33731: DOUBLE
33732: EQUAL
33733: IFTRUE 33737
33735: GO 33740
33737: POP
// ; end ;
33738: GO 33741
33740: POP
// if team_kill_counter then
33741: LD_EXP 9
33745: IFFALSE 33761
// Say ( JMM , D5-JMM-1 ) else
33747: LD_EXP 12
33751: PPUSH
33752: LD_STRING D5-JMM-1
33754: PPUSH
33755: CALL_OW 88
33759: GO 33773
// Say ( JMM , D5-JMM-1a ) ;
33761: LD_EXP 12
33765: PPUSH
33766: LD_STRING D5-JMM-1a
33768: PPUSH
33769: CALL_OW 88
// if all_taken then
33773: LD_VAR 0 1
33777: IFFALSE 33791
// AddMedal ( All , 1 ) else
33779: LD_STRING All
33781: PPUSH
33782: LD_INT 1
33784: PPUSH
33785: CALL_OW 101
33789: GO 33802
// AddMedal ( All , - 1 ) ;
33791: LD_STRING All
33793: PPUSH
33794: LD_INT 1
33796: NEG
33797: PPUSH
33798: CALL_OW 101
// if team_kill_counter then
33802: LD_EXP 9
33806: IFFALSE 33821
// AddMedal ( Save , - 1 ) else
33808: LD_STRING Save
33810: PPUSH
33811: LD_INT 1
33813: NEG
33814: PPUSH
33815: CALL_OW 101
33819: GO 33831
// AddMedal ( Save , 1 ) ;
33821: LD_STRING Save
33823: PPUSH
33824: LD_INT 1
33826: PPUSH
33827: CALL_OW 101
// if friends_kill_counter >= [ 2 , 1 , 1 ] [ Difficulty ] then
33831: LD_EXP 8
33835: PUSH
33836: LD_INT 2
33838: PUSH
33839: LD_INT 1
33841: PUSH
33842: LD_INT 1
33844: PUSH
33845: EMPTY
33846: LIST
33847: LIST
33848: LIST
33849: PUSH
33850: LD_OWVAR 67
33854: ARRAY
33855: GREATEREQUAL
33856: IFFALSE 33871
// AddMedal ( Friendship , - 1 ) else
33858: LD_STRING Friendship
33860: PPUSH
33861: LD_INT 1
33863: NEG
33864: PPUSH
33865: CALL_OW 101
33869: GO 33881
// AddMedal ( Friendship , 1 ) ;
33871: LD_STRING Friendship
33873: PPUSH
33874: LD_INT 1
33876: PPUSH
33877: CALL_OW 101
// GiveMedals ( MAIN ) ;
33881: LD_STRING MAIN
33883: PPUSH
33884: CALL_OW 102
// tmp := FilterAllUnits ( [ [ [ f_side , 7 ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] , [ f_class , 5 ] , [ f_class , 8 ] , [ f_class , 9 ] ] ] ] ) ;
33888: LD_ADDR_VAR 0 2
33892: PUSH
33893: LD_INT 22
33895: PUSH
33896: LD_INT 7
33898: PUSH
33899: EMPTY
33900: LIST
33901: LIST
33902: PUSH
33903: LD_INT 2
33905: PUSH
33906: LD_INT 25
33908: PUSH
33909: LD_INT 1
33911: PUSH
33912: EMPTY
33913: LIST
33914: LIST
33915: PUSH
33916: LD_INT 25
33918: PUSH
33919: LD_INT 2
33921: PUSH
33922: EMPTY
33923: LIST
33924: LIST
33925: PUSH
33926: LD_INT 25
33928: PUSH
33929: LD_INT 3
33931: PUSH
33932: EMPTY
33933: LIST
33934: LIST
33935: PUSH
33936: LD_INT 25
33938: PUSH
33939: LD_INT 4
33941: PUSH
33942: EMPTY
33943: LIST
33944: LIST
33945: PUSH
33946: LD_INT 25
33948: PUSH
33949: LD_INT 5
33951: PUSH
33952: EMPTY
33953: LIST
33954: LIST
33955: PUSH
33956: LD_INT 25
33958: PUSH
33959: LD_INT 8
33961: PUSH
33962: EMPTY
33963: LIST
33964: LIST
33965: PUSH
33966: LD_INT 25
33968: PUSH
33969: LD_INT 9
33971: PUSH
33972: EMPTY
33973: LIST
33974: LIST
33975: PUSH
33976: EMPTY
33977: LIST
33978: LIST
33979: LIST
33980: LIST
33981: LIST
33982: LIST
33983: LIST
33984: LIST
33985: PUSH
33986: EMPTY
33987: LIST
33988: LIST
33989: PUSH
33990: EMPTY
33991: LIST
33992: PPUSH
33993: CALL_OW 69
33997: ST_TO_ADDR
// RewardPeople ( tmp ^ Roth ) ;
33998: LD_VAR 0 2
34002: PUSH
34003: LD_EXP 13
34007: ADD
34008: PPUSH
34009: CALL_OW 43
// SaveCharacters ( JMM , 12a_JMM ) ;
34013: LD_EXP 12
34017: PPUSH
34018: LD_STRING 12a_JMM
34020: PPUSH
34021: CALL_OW 38
// if IsLive ( Roth ) then
34025: LD_EXP 13
34029: PPUSH
34030: CALL_OW 300
34034: IFFALSE 34048
// SaveCharacters ( Roth , 12a_Roth ) ;
34036: LD_EXP 13
34040: PPUSH
34041: LD_STRING 12a_Roth
34043: PPUSH
34044: CALL_OW 38
// if Lisa in tmp then
34048: LD_EXP 21
34052: PUSH
34053: LD_VAR 0 2
34057: IN
34058: IFFALSE 34074
// SaveCharacters ( Lisa , 12a_Lisa ) else
34060: LD_EXP 21
34064: PPUSH
34065: LD_STRING 12a_Lisa
34067: PPUSH
34068: CALL_OW 38
34072: GO 34092
// if Lisa then
34074: LD_EXP 21
34078: IFFALSE 34092
// SaveCharacters ( Lisa , 12p_Lisa ) ;
34080: LD_EXP 21
34084: PPUSH
34085: LD_STRING 12p_Lisa
34087: PPUSH
34088: CALL_OW 38
// if Donaldson in tmp then
34092: LD_EXP 22
34096: PUSH
34097: LD_VAR 0 2
34101: IN
34102: IFFALSE 34118
// SaveCharacters ( Donaldson , 12a_Donaldson ) else
34104: LD_EXP 22
34108: PPUSH
34109: LD_STRING 12a_Donaldson
34111: PPUSH
34112: CALL_OW 38
34116: GO 34136
// if Donaldson then
34118: LD_EXP 22
34122: IFFALSE 34136
// SaveCharacters ( Donaldson , 12p_Donaldson ) ;
34124: LD_EXP 22
34128: PPUSH
34129: LD_STRING 12p_Donaldson
34131: PPUSH
34132: CALL_OW 38
// if Bobby in tmp then
34136: LD_EXP 23
34140: PUSH
34141: LD_VAR 0 2
34145: IN
34146: IFFALSE 34162
// SaveCharacters ( Bobby , 12a_Bobby ) else
34148: LD_EXP 23
34152: PPUSH
34153: LD_STRING 12a_Bobby
34155: PPUSH
34156: CALL_OW 38
34160: GO 34180
// if Bobby then
34162: LD_EXP 23
34166: IFFALSE 34180
// SaveCharacters ( Bobby , 12p_Bobby ) ;
34168: LD_EXP 23
34172: PPUSH
34173: LD_STRING 12p_Bobby
34175: PPUSH
34176: CALL_OW 38
// if Cyrus in tmp then
34180: LD_EXP 24
34184: PUSH
34185: LD_VAR 0 2
34189: IN
34190: IFFALSE 34206
// SaveCharacters ( Cyrus , 12a_Cyrus ) else
34192: LD_EXP 24
34196: PPUSH
34197: LD_STRING 12a_Cyrus
34199: PPUSH
34200: CALL_OW 38
34204: GO 34224
// if Cyrus then
34206: LD_EXP 24
34210: IFFALSE 34224
// SaveCharacters ( Cyrus , 12p_Cyrus ) ;
34212: LD_EXP 24
34216: PPUSH
34217: LD_STRING 12p_Cyrus
34219: PPUSH
34220: CALL_OW 38
// if Denis in tmp then
34224: LD_EXP 25
34228: PUSH
34229: LD_VAR 0 2
34233: IN
34234: IFFALSE 34248
// SaveCharacters ( Denis , 12a_Denis ) ;
34236: LD_EXP 25
34240: PPUSH
34241: LD_STRING 12a_Denis
34243: PPUSH
34244: CALL_OW 38
// if Brown in tmp then
34248: LD_EXP 26
34252: PUSH
34253: LD_VAR 0 2
34257: IN
34258: IFFALSE 34274
// SaveCharacters ( Brown , 12a_Brown ) else
34260: LD_EXP 26
34264: PPUSH
34265: LD_STRING 12a_Brown
34267: PPUSH
34268: CALL_OW 38
34272: GO 34298
// if Brown in tmp then
34274: LD_EXP 26
34278: PUSH
34279: LD_VAR 0 2
34283: IN
34284: IFFALSE 34298
// SaveCharacters ( Brown , 12p_Brown ) ;
34286: LD_EXP 26
34290: PPUSH
34291: LD_STRING 12p_Brown
34293: PPUSH
34294: CALL_OW 38
// if Gladstone in tmp then
34298: LD_EXP 27
34302: PUSH
34303: LD_VAR 0 2
34307: IN
34308: IFFALSE 34324
// SaveCharacters ( Gladstone , 12a_Gladstone ) else
34310: LD_EXP 27
34314: PPUSH
34315: LD_STRING 12a_Gladstone
34317: PPUSH
34318: CALL_OW 38
34322: GO 34342
// if Gladstone then
34324: LD_EXP 27
34328: IFFALSE 34342
// SaveCharacters ( Gladstone , 12p_Gladstone ) ;
34330: LD_EXP 27
34334: PPUSH
34335: LD_STRING 12p_Gladstone
34337: PPUSH
34338: CALL_OW 38
// if Houten in tmp then
34342: LD_EXP 28
34346: PUSH
34347: LD_VAR 0 2
34351: IN
34352: IFFALSE 34368
// SaveCharacters ( Houten , 12a_Houten ) else
34354: LD_EXP 28
34358: PPUSH
34359: LD_STRING 12a_Houten
34361: PPUSH
34362: CALL_OW 38
34366: GO 34386
// if Houten then
34368: LD_EXP 28
34372: IFFALSE 34386
// SaveCharacters ( Houten , 12p_Houten ) ;
34374: LD_EXP 28
34378: PPUSH
34379: LD_STRING 12p_Houten
34381: PPUSH
34382: CALL_OW 38
// if Cornel in tmp then
34386: LD_EXP 29
34390: PUSH
34391: LD_VAR 0 2
34395: IN
34396: IFFALSE 34412
// SaveCharacters ( Cornel , 12a_Cornell ) else
34398: LD_EXP 29
34402: PPUSH
34403: LD_STRING 12a_Cornell
34405: PPUSH
34406: CALL_OW 38
34410: GO 34430
// if Cornel then
34412: LD_EXP 29
34416: IFFALSE 34430
// SaveCharacters ( Cornel , 12p_Cornell ) ;
34418: LD_EXP 29
34422: PPUSH
34423: LD_STRING 12p_Cornell
34425: PPUSH
34426: CALL_OW 38
// if Gary in tmp then
34430: LD_EXP 30
34434: PUSH
34435: LD_VAR 0 2
34439: IN
34440: IFFALSE 34456
// SaveCharacters ( Gary , 12a_Gary ) else
34442: LD_EXP 30
34446: PPUSH
34447: LD_STRING 12a_Gary
34449: PPUSH
34450: CALL_OW 38
34454: GO 34474
// if Gary then
34456: LD_EXP 30
34460: IFFALSE 34474
// SaveCharacters ( Gary , 12p_Gary ) ;
34462: LD_EXP 30
34466: PPUSH
34467: LD_STRING 12p_Gary
34469: PPUSH
34470: CALL_OW 38
// if Frank in tmp then
34474: LD_EXP 31
34478: PUSH
34479: LD_VAR 0 2
34483: IN
34484: IFFALSE 34498
// SaveCharacters ( Frank , 12a_Frank ) ;
34486: LD_EXP 31
34490: PPUSH
34491: LD_STRING 12a_Frank
34493: PPUSH
34494: CALL_OW 38
// if Kikuchi in tmp then
34498: LD_EXP 32
34502: PUSH
34503: LD_VAR 0 2
34507: IN
34508: IFFALSE 34524
// SaveCharacters ( Kikuchi , 12a_Kikuchi ) else
34510: LD_EXP 32
34514: PPUSH
34515: LD_STRING 12a_Kikuchi
34517: PPUSH
34518: CALL_OW 38
34522: GO 34542
// if Kikuchi then
34524: LD_EXP 32
34528: IFFALSE 34542
// SaveCharacters ( Kikuchi , 12p_Kikuchi ) ;
34530: LD_EXP 32
34534: PPUSH
34535: LD_STRING 12p_Kikuchi
34537: PPUSH
34538: CALL_OW 38
// if Simms in tmp then
34542: LD_EXP 33
34546: PUSH
34547: LD_VAR 0 2
34551: IN
34552: IFFALSE 34566
// SaveCharacters ( Simms , 12a_Simms ) ;
34554: LD_EXP 33
34558: PPUSH
34559: LD_STRING 12a_Simms
34561: PPUSH
34562: CALL_OW 38
// if Joan in tmp then
34566: LD_EXP 34
34570: PUSH
34571: LD_VAR 0 2
34575: IN
34576: IFFALSE 34590
// SaveCharacters ( Joan , 12a_Joan ) ;
34578: LD_EXP 34
34582: PPUSH
34583: LD_STRING 12a_Joan
34585: PPUSH
34586: CALL_OW 38
// if DeltaDoctor in tmp then
34590: LD_EXP 35
34594: PUSH
34595: LD_VAR 0 2
34599: IN
34600: IFFALSE 34614
// SaveCharacters ( DeltaDoctor , 12a_DeltaDoctor ) ;
34602: LD_EXP 35
34606: PPUSH
34607: LD_STRING 12a_DeltaDoctor
34609: PPUSH
34610: CALL_OW 38
// tmp := tmp diff [ JMM , Roth , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi , Simms , Joan , DeltaDoctor ] ;
34614: LD_ADDR_VAR 0 2
34618: PUSH
34619: LD_VAR 0 2
34623: PUSH
34624: LD_EXP 12
34628: PUSH
34629: LD_EXP 13
34633: PUSH
34634: LD_EXP 21
34638: PUSH
34639: LD_EXP 22
34643: PUSH
34644: LD_EXP 23
34648: PUSH
34649: LD_EXP 24
34653: PUSH
34654: LD_EXP 25
34658: PUSH
34659: LD_EXP 26
34663: PUSH
34664: LD_EXP 27
34668: PUSH
34669: LD_EXP 28
34673: PUSH
34674: LD_EXP 29
34678: PUSH
34679: LD_EXP 30
34683: PUSH
34684: LD_EXP 31
34688: PUSH
34689: LD_EXP 32
34693: PUSH
34694: LD_EXP 33
34698: PUSH
34699: LD_EXP 34
34703: PUSH
34704: LD_EXP 35
34708: PUSH
34709: EMPTY
34710: LIST
34711: LIST
34712: LIST
34713: LIST
34714: LIST
34715: LIST
34716: LIST
34717: LIST
34718: LIST
34719: LIST
34720: LIST
34721: LIST
34722: LIST
34723: LIST
34724: LIST
34725: LIST
34726: LIST
34727: DIFF
34728: ST_TO_ADDR
// if tmp then
34729: LD_VAR 0 2
34733: IFFALSE 34747
// SaveCharacters ( tmp , 12a_others ) ;
34735: LD_VAR 0 2
34739: PPUSH
34740: LD_STRING 12a_others
34742: PPUSH
34743: CALL_OW 38
// SaveCharacters ( friends diff tmp , 12p_others ) ;
34747: LD_EXP 4
34751: PUSH
34752: LD_VAR 0 2
34756: DIFF
34757: PPUSH
34758: LD_STRING 12p_others
34760: PPUSH
34761: CALL_OW 38
// YouWin ;
34765: CALL_OW 103
// end ; end_of_file
34769: PPOPN 2
34771: END
// on SailEvent ( event ) do var tmp ;
34772: LD_INT 0
34774: PPUSH
// begin if event = 1 then
34775: LD_VAR 0 1
34779: PUSH
34780: LD_INT 1
34782: EQUAL
34783: IFFALSE 34856
// begin if not mobile_patrol then
34785: LD_EXP 15
34789: NOT
34790: IFFALSE 34794
// exit ;
34792: GO 34856
// tmp := mobile_patrol [ mobile_patrol ] ;
34794: LD_ADDR_VAR 0 2
34798: PUSH
34799: LD_EXP 15
34803: PUSH
34804: LD_EXP 15
34808: ARRAY
34809: ST_TO_ADDR
// mobile_patrol := Delete ( mobile_patrol , mobile_patrol ) ;
34810: LD_ADDR_EXP 15
34814: PUSH
34815: LD_EXP 15
34819: PPUSH
34820: LD_EXP 15
34824: PPUSH
34825: CALL_OW 3
34829: ST_TO_ADDR
// Patrol ( tmp , mobile_points [ mobile_patrol + 1 ] , [ ] ) ;
34830: LD_VAR 0 2
34834: PPUSH
34835: LD_EXP 16
34839: PUSH
34840: LD_EXP 15
34844: PUSH
34845: LD_INT 1
34847: PLUS
34848: ARRAY
34849: PPUSH
34850: EMPTY
34851: PPUSH
34852: CALL 6746 0 3
// end ; end ;
34856: PPOPN 2
34858: END
// on UnitDestroyed ( un ) do begin if un = JMM then
34859: LD_VAR 0 1
34863: PUSH
34864: LD_EXP 12
34868: EQUAL
34869: IFFALSE 34878
// YouLost ( JMM ) ;
34871: LD_STRING JMM
34873: PPUSH
34874: CALL_OW 104
// if GetSide ( un ) = 7 and GetWeapon ( un ) = us_cargo_bay then
34878: LD_VAR 0 1
34882: PPUSH
34883: CALL_OW 255
34887: PUSH
34888: LD_INT 7
34890: EQUAL
34891: PUSH
34892: LD_VAR 0 1
34896: PPUSH
34897: CALL_OW 264
34901: PUSH
34902: LD_INT 12
34904: EQUAL
34905: AND
34906: IFFALSE 34915
// YouLost ( Artifact ) ;
34908: LD_STRING Artifact
34910: PPUSH
34911: CALL_OW 104
// if ( GetSide ( un ) = 7 and GetType ( un ) = unit_human ) or un = Roth then
34915: LD_VAR 0 1
34919: PPUSH
34920: CALL_OW 255
34924: PUSH
34925: LD_INT 7
34927: EQUAL
34928: PUSH
34929: LD_VAR 0 1
34933: PPUSH
34934: CALL_OW 247
34938: PUSH
34939: LD_INT 1
34941: EQUAL
34942: AND
34943: PUSH
34944: LD_VAR 0 1
34948: PUSH
34949: LD_EXP 13
34953: EQUAL
34954: OR
34955: IFFALSE 34971
// team_kill_counter := team_kill_counter + 1 ;
34957: LD_ADDR_EXP 9
34961: PUSH
34962: LD_EXP 9
34966: PUSH
34967: LD_INT 1
34969: PLUS
34970: ST_TO_ADDR
// if GetSide ( un ) = 1 and GetType ( un ) = unit_human then
34971: LD_VAR 0 1
34975: PPUSH
34976: CALL_OW 255
34980: PUSH
34981: LD_INT 1
34983: EQUAL
34984: PUSH
34985: LD_VAR 0 1
34989: PPUSH
34990: CALL_OW 247
34994: PUSH
34995: LD_INT 1
34997: EQUAL
34998: AND
34999: IFFALSE 35015
// friends_kill_counter := friends_kill_counter + 1 ;
35001: LD_ADDR_EXP 8
35005: PUSH
35006: LD_EXP 8
35010: PUSH
35011: LD_INT 1
35013: PLUS
35014: ST_TO_ADDR
// if GetSide ( un ) <> 1 then
35015: LD_VAR 0 1
35019: PPUSH
35020: CALL_OW 255
35024: PUSH
35025: LD_INT 1
35027: NONEQUAL
35028: IFFALSE 35032
// exit ;
35030: GO 35109
// if GetControl ( un ) = control_remote then
35032: LD_VAR 0 1
35036: PPUSH
35037: CALL_OW 263
35041: PUSH
35042: LD_INT 2
35044: EQUAL
35045: IFFALSE 35063
// defenders := defenders diff un ;
35047: LD_ADDR_EXP 18
35051: PUSH
35052: LD_EXP 18
35056: PUSH
35057: LD_VAR 0 1
35061: DIFF
35062: ST_TO_ADDR
// if not un in defenders then
35063: LD_VAR 0 1
35067: PUSH
35068: LD_EXP 18
35072: IN
35073: NOT
35074: IFFALSE 35109
// begin defcon := [ GetX ( un ) , GetY ( un ) ] ;
35076: LD_ADDR_EXP 19
35080: PUSH
35081: LD_VAR 0 1
35085: PPUSH
35086: CALL_OW 250
35090: PUSH
35091: LD_VAR 0 1
35095: PPUSH
35096: CALL_OW 251
35100: PUSH
35101: EMPTY
35102: LIST
35103: LIST
35104: ST_TO_ADDR
// Defend ;
35105: CALL 2526 0 0
// end ; end ;
35109: PPOPN 1
35111: END
// on VehicleConstructed ( veh , fac ) do begin if GetSide ( veh ) <> 1 then
35112: LD_VAR 0 1
35116: PPUSH
35117: CALL_OW 255
35121: PUSH
35122: LD_INT 1
35124: NONEQUAL
35125: IFFALSE 35129
// exit ;
35127: GO 35153
// if GetControl ( veh ) = control_remote then
35129: LD_VAR 0 1
35133: PPUSH
35134: CALL_OW 263
35138: PUSH
35139: LD_INT 2
35141: EQUAL
35142: IFFALSE 35153
// Connect ( veh ) ;
35144: LD_VAR 0 1
35148: PPUSH
35149: CALL 5941 0 1
// end ;
35153: PPOPN 2
35155: END
// on UnitGoesToRed ( un ) do var i , veh ;
35156: LD_INT 0
35158: PPUSH
35159: PPUSH
// begin if GetSide ( un ) = 1 and GetControl ( un ) = control_remote then
35160: LD_VAR 0 1
35164: PPUSH
35165: CALL_OW 255
35169: PUSH
35170: LD_INT 1
35172: EQUAL
35173: PUSH
35174: LD_VAR 0 1
35178: PPUSH
35179: CALL_OW 263
35183: PUSH
35184: LD_INT 2
35186: EQUAL
35187: AND
35188: IFFALSE 35199
// ComUnlink ( un ) ;
35190: LD_VAR 0 1
35194: PPUSH
35195: CALL_OW 136
// if un = ambar0 then
35199: LD_VAR 0 1
35203: PUSH
35204: LD_INT 18
35206: EQUAL
35207: IFFALSE 35317
// begin uc_side := 1 ;
35209: LD_ADDR_OWVAR 20
35213: PUSH
35214: LD_INT 1
35216: ST_TO_ADDR
// uc_nation := 1 ;
35217: LD_ADDR_OWVAR 21
35221: PUSH
35222: LD_INT 1
35224: ST_TO_ADDR
// for i = 1 to 6 do
35225: LD_ADDR_VAR 0 2
35229: PUSH
35230: DOUBLE
35231: LD_INT 1
35233: DEC
35234: ST_TO_ADDR
35235: LD_INT 6
35237: PUSH
35238: FOR_TO
35239: IFFALSE 35315
// begin PrepareVehicle ( us_medium_tracked , engine_combustion , control_computer , us_gatling_gun , 100 ) ;
35241: LD_INT 3
35243: PPUSH
35244: LD_INT 1
35246: PPUSH
35247: LD_INT 3
35249: PPUSH
35250: LD_INT 4
35252: PPUSH
35253: LD_INT 100
35255: PPUSH
35256: CALL 5705 0 5
// veh := CreateVehicle ;
35260: LD_ADDR_VAR 0 3
35264: PUSH
35265: CALL_OW 45
35269: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
35270: LD_VAR 0 3
35274: PPUSH
35275: LD_INT 1
35277: PPUSH
35278: CALL_OW 233
// PlaceUnitArea ( veh , west_spawn , false ) ;
35282: LD_VAR 0 3
35286: PPUSH
35287: LD_INT 25
35289: PPUSH
35290: LD_INT 0
35292: PPUSH
35293: CALL_OW 49
// defenders := defenders ^ veh ;
35297: LD_ADDR_EXP 18
35301: PUSH
35302: LD_EXP 18
35306: PUSH
35307: LD_VAR 0 3
35311: ADD
35312: ST_TO_ADDR
// end ;
35313: GO 35238
35315: POP
35316: POP
// end ; end ;
35317: PPOPN 3
35319: END
// on EnterBuilding ( building , unit ) do begin if unit = Powell then
35320: LD_VAR 0 2
35324: PUSH
35325: LD_EXP 14
35329: EQUAL
35330: IFFALSE 35341
// RemoveUnit ( Powell ) ;
35332: LD_EXP 14
35336: PPUSH
35337: CALL_OW 64
// end ;
35341: PPOPN 2
35343: END
