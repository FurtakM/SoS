// starting begin ResetFog ;
   0: CALL_OW 335
// AnimateTrees ( true ) ;
   4: LD_INT 1
   6: PPUSH
   7: CALL_OW 573
// InitVariables ;
  11: CALL 123 0 0
// PrepareNature ;
  15: CALL 30430 0 0
// PrepareAlliance ;
  19: CALL 225 0 0
// PrepareFriends ;
  23: CALL 3491 0 0
// PrepareAmerican ;
  27: CALL 662 0 0
// PlaceSeeing ( 91 , 70 , 7 , - 32178 ) ;
  31: LD_INT 91
  33: PPUSH
  34: LD_INT 70
  36: PPUSH
  37: LD_INT 7
  39: PPUSH
  40: LD_INT 32178
  42: NEG
  43: PPUSH
  44: CALL_OW 330
// RemoveSeeing ( 91 , 70 , 7 ) ;
  48: LD_INT 91
  50: PPUSH
  51: LD_INT 70
  53: PPUSH
  54: LD_INT 7
  56: PPUSH
  57: CALL_OW 331
// if debug then
  61: LD_EXP 1
  65: IFFALSE 106
// begin SetAttitude ( 1 , 7 , att_enemy , true ) ;
  67: LD_INT 1
  69: PPUSH
  70: LD_INT 7
  72: PPUSH
  73: LD_INT 2
  75: PPUSH
  76: LD_INT 1
  78: PPUSH
  79: CALL_OW 80
// RemoveUnit ( Powell ) ;
  83: LD_EXP 14
  87: PPUSH
  88: CALL_OW 64
// DoNotAttack ( 1 , JMM ) ;
  92: LD_INT 1
  94: PPUSH
  95: LD_EXP 12
  99: PPUSH
 100: CALL_OW 471
// end else
 104: GO 110
// Action ;
 106: CALL 30766 0 0
// PreparePatrol ;
 110: CALL 1127 0 0
// game := true ;
 114: LD_ADDR_EXP 2
 118: PUSH
 119: LD_INT 1
 121: ST_TO_ADDR
// end ;
 122: END
// export debug , game , selected , friends , reached_lab , can_escape , on_hill , friends_kill_counter , team_kill_counter , gamma_commander , extra_patrol ; export function InitVariables ; begin
 123: LD_INT 0
 125: PPUSH
// debug := false ;
 126: LD_ADDR_EXP 1
 130: PUSH
 131: LD_INT 0
 133: ST_TO_ADDR
// friends := [ ] ;
 134: LD_ADDR_EXP 4
 138: PUSH
 139: EMPTY
 140: ST_TO_ADDR
// selected := [ ] ;
 141: LD_ADDR_EXP 3
 145: PUSH
 146: EMPTY
 147: ST_TO_ADDR
// reached_lab := false ;
 148: LD_ADDR_EXP 5
 152: PUSH
 153: LD_INT 0
 155: ST_TO_ADDR
// can_escape := false ;
 156: LD_ADDR_EXP 6
 160: PUSH
 161: LD_INT 0
 163: ST_TO_ADDR
// game := false ;
 164: LD_ADDR_EXP 2
 168: PUSH
 169: LD_INT 0
 171: ST_TO_ADDR
// gamma_commander := LoadVariable ( GammaCommander , 2 ) ;
 172: LD_ADDR_EXP 10
 176: PUSH
 177: LD_STRING GammaCommander
 179: PPUSH
 180: LD_INT 2
 182: PPUSH
 183: CALL_OW 30
 187: ST_TO_ADDR
// friends_kill_counter := 0 ;
 188: LD_ADDR_EXP 8
 192: PUSH
 193: LD_INT 0
 195: ST_TO_ADDR
// team_kill_counter := 0 ;
 196: LD_ADDR_EXP 9
 200: PUSH
 201: LD_INT 0
 203: ST_TO_ADDR
// extra_patrol := true ;
 204: LD_ADDR_EXP 11
 208: PUSH
 209: LD_INT 1
 211: ST_TO_ADDR
// on_hill := false ;
 212: LD_ADDR_EXP 7
 216: PUSH
 217: LD_INT 0
 219: ST_TO_ADDR
// end ; end_of_file
 220: LD_VAR 0 1
 224: RET
// export JMM , Roth ; export function PrepareAlliance ; var cargo ; begin
 225: LD_INT 0
 227: PPUSH
 228: PPUSH
// uc_side := 7 ;
 229: LD_ADDR_OWVAR 20
 233: PUSH
 234: LD_INT 7
 236: ST_TO_ADDR
// uc_nation := 1 ;
 237: LD_ADDR_OWVAR 21
 241: PUSH
 242: LD_INT 1
 244: ST_TO_ADDR
// JMM := PrepareUnit ( JMM , ( not debug ) , 11_ ) ;
 245: LD_ADDR_EXP 12
 249: PUSH
 250: LD_STRING JMM
 252: PPUSH
 253: LD_EXP 1
 257: NOT
 258: PPUSH
 259: LD_STRING 11_
 261: PPUSH
 262: CALL 5854 0 3
 266: ST_TO_ADDR
// uc_side := 4 ;
 267: LD_ADDR_OWVAR 20
 271: PUSH
 272: LD_INT 4
 274: ST_TO_ADDR
// Roth := NewCharacter ( Roth ) ;
 275: LD_ADDR_EXP 13
 279: PUSH
 280: LD_STRING Roth
 282: PPUSH
 283: CALL_OW 25
 287: ST_TO_ADDR
// SetDir ( JMM , 1 ) ;
 288: LD_EXP 12
 292: PPUSH
 293: LD_INT 1
 295: PPUSH
 296: CALL_OW 233
// SetClass ( JMM , 1 ) ;
 300: LD_EXP 12
 304: PPUSH
 305: LD_INT 1
 307: PPUSH
 308: CALL_OW 336
// PlaceUnitXY ( JMM , 105 , 10 , false ) ;
 312: LD_EXP 12
 316: PPUSH
 317: LD_INT 105
 319: PPUSH
 320: LD_INT 10
 322: PPUSH
 323: LD_INT 0
 325: PPUSH
 326: CALL_OW 48
// SetDir ( Roth , 4 ) ;
 330: LD_EXP 13
 334: PPUSH
 335: LD_INT 4
 337: PPUSH
 338: CALL_OW 233
// PlaceUnitXY ( Roth , 109 , 10 , false ) ;
 342: LD_EXP 13
 346: PPUSH
 347: LD_INT 109
 349: PPUSH
 350: LD_INT 10
 352: PPUSH
 353: LD_INT 0
 355: PPUSH
 356: CALL_OW 48
// ComTurnUnit ( JMM , Roth ) ;
 360: LD_EXP 12
 364: PPUSH
 365: LD_EXP 13
 369: PPUSH
 370: CALL_OW 119
// ComTurnUnit ( Roth , JMM ) ;
 374: LD_EXP 13
 378: PPUSH
 379: LD_EXP 12
 383: PPUSH
 384: CALL_OW 119
// PrepareVehicle ( us_medium_tracked , engine_siberite , control_computer , us_cargo_bay , 100 ) ;
 388: LD_INT 3
 390: PPUSH
 391: LD_INT 3
 393: PPUSH
 394: LD_INT 3
 396: PPUSH
 397: LD_INT 12
 399: PPUSH
 400: LD_INT 100
 402: PPUSH
 403: CALL 5917 0 5
// cargo := CreateVehicle ;
 407: LD_ADDR_VAR 0 2
 411: PUSH
 412: CALL_OW 45
 416: ST_TO_ADDR
// SetDir ( cargo , 1 ) ;
 417: LD_VAR 0 2
 421: PPUSH
 422: LD_INT 1
 424: PPUSH
 425: CALL_OW 233
// PlaceUnitXY ( cargo , 179 , 45 , false ) ;
 429: LD_VAR 0 2
 433: PPUSH
 434: LD_INT 179
 436: PPUSH
 437: LD_INT 45
 439: PPUSH
 440: LD_INT 0
 442: PPUSH
 443: CALL_OW 48
// SetCargo ( cargo , mat_artifact , 30 ) ;
 447: LD_VAR 0 2
 451: PPUSH
 452: LD_INT 4
 454: PPUSH
 455: LD_INT 30
 457: PPUSH
 458: CALL_OW 290
// if LoadVariable ( 11_artifact_captured , 0 ) then
 462: LD_STRING 11_artifact_captured
 464: PPUSH
 465: LD_INT 0
 467: PPUSH
 468: CALL_OW 30
 472: IFFALSE 529
// begin cargo := CreateVehicle ;
 474: LD_ADDR_VAR 0 2
 478: PUSH
 479: CALL_OW 45
 483: ST_TO_ADDR
// SetDir ( cargo , 0 ) ;
 484: LD_VAR 0 2
 488: PPUSH
 489: LD_INT 0
 491: PPUSH
 492: CALL_OW 233
// PlaceUnitXY ( cargo , 171 , 85 , false ) ;
 496: LD_VAR 0 2
 500: PPUSH
 501: LD_INT 171
 503: PPUSH
 504: LD_INT 85
 506: PPUSH
 507: LD_INT 0
 509: PPUSH
 510: CALL_OW 48
// SetCargo ( cargo , mat_artifact , 50 ) ;
 514: LD_VAR 0 2
 518: PPUSH
 519: LD_INT 4
 521: PPUSH
 522: LD_INT 50
 524: PPUSH
 525: CALL_OW 290
// end ; SetSide ( amlab , 7 ) ;
 529: LD_INT 47
 531: PPUSH
 532: LD_INT 7
 534: PPUSH
 535: CALL_OW 235
// DoNotAttack ( 1 , amlab ) ;
 539: LD_INT 1
 541: PPUSH
 542: LD_INT 47
 544: PPUSH
 545: CALL_OW 471
// end ;
 549: LD_VAR 0 1
 553: RET
// every 0 0$1 trigger FilterUnitsInArea ( hill , [ f_side , 7 ] ) and not on_hill do
 554: LD_INT 38
 556: PPUSH
 557: LD_INT 22
 559: PUSH
 560: LD_INT 7
 562: PUSH
 563: EMPTY
 564: LIST
 565: LIST
 566: PPUSH
 567: CALL_OW 70
 571: PUSH
 572: LD_EXP 7
 576: NOT
 577: AND
 578: IFFALSE 609
 580: GO 582
 582: DISABLE
// begin enable ;
 583: ENABLE
// on_hill := true ;
 584: LD_ADDR_EXP 7
 588: PUSH
 589: LD_INT 1
 591: ST_TO_ADDR
// PlaceSeeing ( 126 , 13 , 7 , - 90 ) ;
 592: LD_INT 126
 594: PPUSH
 595: LD_INT 13
 597: PPUSH
 598: LD_INT 7
 600: PPUSH
 601: LD_INT 90
 603: NEG
 604: PPUSH
 605: CALL_OW 330
// end ;
 609: END
// every 0 0$1 trigger not FilterUnitsInArea ( hill , [ f_side , 7 ] ) and on_hill do
 610: LD_INT 38
 612: PPUSH
 613: LD_INT 22
 615: PUSH
 616: LD_INT 7
 618: PUSH
 619: EMPTY
 620: LIST
 621: LIST
 622: PPUSH
 623: CALL_OW 70
 627: NOT
 628: PUSH
 629: LD_EXP 7
 633: AND
 634: IFFALSE 661
 636: GO 638
 638: DISABLE
// begin enable ;
 639: ENABLE
// on_hill := false ;
 640: LD_ADDR_EXP 7
 644: PUSH
 645: LD_INT 0
 647: ST_TO_ADDR
// RemoveSeeing ( 126 , 13 , 7 ) ;
 648: LD_INT 126
 650: PPUSH
 651: LD_INT 13
 653: PPUSH
 654: LD_INT 7
 656: PPUSH
 657: CALL_OW 331
// end ; end_of_file
 661: END
// export Powell , mobile_patrol , mobile_points , powell_guards , defenders , defcon , defcon_wave ; export function PrepareAmerican ; var i , j , b , un , tmp ; begin
 662: LD_INT 0
 664: PPUSH
 665: PPUSH
 666: PPUSH
 667: PPUSH
 668: PPUSH
 669: PPUSH
// if Difficulty = 1 then
 670: LD_OWVAR 67
 674: PUSH
 675: LD_INT 1
 677: EQUAL
 678: IFFALSE 786
// begin tmp := [ [ 155 , 77 ] , [ 193 , 93 ] , [ 188 , 81 ] , [ 56 , 85 ] , [ 98 , 87 ] ] ;
 680: LD_ADDR_VAR 0 6
 684: PUSH
 685: LD_INT 155
 687: PUSH
 688: LD_INT 77
 690: PUSH
 691: EMPTY
 692: LIST
 693: LIST
 694: PUSH
 695: LD_INT 193
 697: PUSH
 698: LD_INT 93
 700: PUSH
 701: EMPTY
 702: LIST
 703: LIST
 704: PUSH
 705: LD_INT 188
 707: PUSH
 708: LD_INT 81
 710: PUSH
 711: EMPTY
 712: LIST
 713: LIST
 714: PUSH
 715: LD_INT 56
 717: PUSH
 718: LD_INT 85
 720: PUSH
 721: EMPTY
 722: LIST
 723: LIST
 724: PUSH
 725: LD_INT 98
 727: PUSH
 728: LD_INT 87
 730: PUSH
 731: EMPTY
 732: LIST
 733: LIST
 734: PUSH
 735: EMPTY
 736: LIST
 737: LIST
 738: LIST
 739: LIST
 740: LIST
 741: ST_TO_ADDR
// for i in tmp do
 742: LD_ADDR_VAR 0 2
 746: PUSH
 747: LD_VAR 0 6
 751: PUSH
 752: FOR_IN
 753: IFFALSE 784
// RemoveUnit ( HexInfo ( i [ 1 ] , i [ 2 ] ) ) ;
 755: LD_VAR 0 2
 759: PUSH
 760: LD_INT 1
 762: ARRAY
 763: PPUSH
 764: LD_VAR 0 2
 768: PUSH
 769: LD_INT 2
 771: ARRAY
 772: PPUSH
 773: CALL_OW 428
 777: PPUSH
 778: CALL_OW 64
 782: GO 752
 784: POP
 785: POP
// end ; defcon := 0 ;
 786: LD_ADDR_EXP 19
 790: PUSH
 791: LD_INT 0
 793: ST_TO_ADDR
// defcon_wave := 0 ;
 794: LD_ADDR_EXP 20
 798: PUSH
 799: LD_INT 0
 801: ST_TO_ADDR
// defenders := [ ] ;
 802: LD_ADDR_EXP 18
 806: PUSH
 807: EMPTY
 808: ST_TO_ADDR
// SetBName ( alfa , alpha ) ;
 809: LD_INT 5
 811: PPUSH
 812: LD_STRING alpha
 814: PPUSH
 815: CALL_OW 500
// uc_side := 1 ;
 819: LD_ADDR_OWVAR 20
 823: PUSH
 824: LD_INT 1
 826: ST_TO_ADDR
// uc_nation := 1 ;
 827: LD_ADDR_OWVAR 21
 831: PUSH
 832: LD_INT 1
 834: ST_TO_ADDR
// Powell := NewCharacter ( Powell ) ;
 835: LD_ADDR_EXP 14
 839: PUSH
 840: LD_STRING Powell
 842: PPUSH
 843: CALL_OW 25
 847: ST_TO_ADDR
// PlaceUnitXY ( Powell , 110 , 26 , false ) ;
 848: LD_EXP 14
 852: PPUSH
 853: LD_INT 110
 855: PPUSH
 856: LD_INT 26
 858: PPUSH
 859: LD_INT 0
 861: PPUSH
 862: CALL_OW 48
// ComHold ( Powell ) ;
 866: LD_EXP 14
 870: PPUSH
 871: CALL_OW 140
// for i = 1 to 5 do
 875: LD_ADDR_VAR 0 2
 879: PUSH
 880: DOUBLE
 881: LD_INT 1
 883: DEC
 884: ST_TO_ADDR
 885: LD_INT 5
 887: PUSH
 888: FOR_TO
 889: IFFALSE 945
// begin PrepareHuman ( false , 1 , 10 ) ;
 891: LD_INT 0
 893: PPUSH
 894: LD_INT 1
 896: PPUSH
 897: LD_INT 10
 899: PPUSH
 900: CALL_OW 380
// powell_guards := Insert ( powell_guards , 1 , CreateHuman ) ;
 904: LD_ADDR_EXP 17
 908: PUSH
 909: LD_EXP 17
 913: PPUSH
 914: LD_INT 1
 916: PPUSH
 917: CALL_OW 44
 921: PPUSH
 922: CALL_OW 2
 926: ST_TO_ADDR
// PlaceHumanInUnit ( powell_guards [ 1 ] , ambar0 ) ;
 927: LD_EXP 17
 931: PUSH
 932: LD_INT 1
 934: ARRAY
 935: PPUSH
 936: LD_INT 18
 938: PPUSH
 939: CALL_OW 52
// end ;
 943: GO 888
 945: POP
 946: POP
// if Difficulty > 2 then
 947: LD_OWVAR 67
 951: PUSH
 952: LD_INT 2
 954: GREATER
 955: IFFALSE 1004
// begin bc_type := b_turret ;
 957: LD_ADDR_OWVAR 42
 961: PUSH
 962: LD_INT 33
 964: ST_TO_ADDR
// bc_level := 7 ;
 965: LD_ADDR_OWVAR 43
 969: PUSH
 970: LD_INT 7
 972: ST_TO_ADDR
// b := CreateAndPlaceBuildingXYD ( 107 , 55 , 5 ) ;
 973: LD_ADDR_VAR 0 4
 977: PUSH
 978: LD_INT 107
 980: PPUSH
 981: LD_INT 55
 983: PPUSH
 984: LD_INT 5
 986: PPUSH
 987: CALL_OW 47
 991: ST_TO_ADDR
// PlaceWeaponTurret ( b , us_rocket_launcher ) ;
 992: LD_VAR 0 4
 996: PPUSH
 997: LD_INT 7
 999: PPUSH
1000: CALL_OW 431
// end ; for i in FilterAllUnits ( [ [ f_side , 1 ] , [ f_btype , b_factory ] ] ) ^ FilterAllUnits ( [ [ f_side , 1 ] , [ f_btype , b_control_tower ] ] ) do
1004: LD_ADDR_VAR 0 2
1008: PUSH
1009: LD_INT 22
1011: PUSH
1012: LD_INT 1
1014: PUSH
1015: EMPTY
1016: LIST
1017: LIST
1018: PUSH
1019: LD_INT 30
1021: PUSH
1022: LD_INT 3
1024: PUSH
1025: EMPTY
1026: LIST
1027: LIST
1028: PUSH
1029: EMPTY
1030: LIST
1031: LIST
1032: PPUSH
1033: CALL_OW 69
1037: PUSH
1038: LD_INT 22
1040: PUSH
1041: LD_INT 1
1043: PUSH
1044: EMPTY
1045: LIST
1046: LIST
1047: PUSH
1048: LD_INT 30
1050: PUSH
1051: LD_INT 36
1053: PUSH
1054: EMPTY
1055: LIST
1056: LIST
1057: PUSH
1058: EMPTY
1059: LIST
1060: LIST
1061: PPUSH
1062: CALL_OW 69
1066: ADD
1067: PUSH
1068: FOR_IN
1069: IFFALSE 1120
// for j = 1 to 3 do
1071: LD_ADDR_VAR 0 3
1075: PUSH
1076: DOUBLE
1077: LD_INT 1
1079: DEC
1080: ST_TO_ADDR
1081: LD_INT 3
1083: PUSH
1084: FOR_TO
1085: IFFALSE 1116
// begin PrepareHuman ( false , 3 , 6 ) ;
1087: LD_INT 0
1089: PPUSH
1090: LD_INT 3
1092: PPUSH
1093: LD_INT 6
1095: PPUSH
1096: CALL_OW 380
// PlaceHumanInUnit ( CreateHuman , i ) ;
1100: CALL_OW 44
1104: PPUSH
1105: LD_VAR 0 2
1109: PPUSH
1110: CALL_OW 52
// end ;
1114: GO 1084
1116: POP
1117: POP
1118: GO 1068
1120: POP
1121: POP
// end ;
1122: LD_VAR 0 1
1126: RET
// export function PreparePatrol ; var i , un ; begin
1127: LD_INT 0
1129: PPUSH
1130: PPUSH
1131: PPUSH
// uc_side := 1 ;
1132: LD_ADDR_OWVAR 20
1136: PUSH
1137: LD_INT 1
1139: ST_TO_ADDR
// uc_nation := 1 ;
1140: LD_ADDR_OWVAR 21
1144: PUSH
1145: LD_INT 1
1147: ST_TO_ADDR
// mobile_points := [ [ [ 99 , 55 ] , [ 113 , 67 ] , [ 129 , 68 ] , [ 135 , 62 ] , [ 103 , 41 ] ] , [ [ 27 , 49 ] , [ 46 , 49 ] , [ 87 , 70 ] , [ 99 , 79 ] , [ 118 , 111 ] , [ 99 , 79 ] , [ 87 , 70 ] , [ 46 , 49 ] ] , [ [ 200 , 88 ] , [ 175 , 80 ] , [ 135 , 62 ] , [ 117 , 53 ] , [ 103 , 41 ] , [ 99 , 24 ] , [ 85 , 3 ] , [ 99 , 24 ] , [ 103 , 41 ] , [ 98 , 47 ] , [ 99 , 56 ] , [ 96 , 66 ] , [ 99 , 56 ] , [ 112 , 66 ] , [ 129 , 68 ] , [ 135 , 62 ] , [ 156 , 71 ] , [ 168 , 76 ] , [ 168 , 61 ] , [ 168 , 75 ] , [ 185 , 85 ] ] ] ;
1148: LD_ADDR_EXP 16
1152: PUSH
1153: LD_INT 99
1155: PUSH
1156: LD_INT 55
1158: PUSH
1159: EMPTY
1160: LIST
1161: LIST
1162: PUSH
1163: LD_INT 113
1165: PUSH
1166: LD_INT 67
1168: PUSH
1169: EMPTY
1170: LIST
1171: LIST
1172: PUSH
1173: LD_INT 129
1175: PUSH
1176: LD_INT 68
1178: PUSH
1179: EMPTY
1180: LIST
1181: LIST
1182: PUSH
1183: LD_INT 135
1185: PUSH
1186: LD_INT 62
1188: PUSH
1189: EMPTY
1190: LIST
1191: LIST
1192: PUSH
1193: LD_INT 103
1195: PUSH
1196: LD_INT 41
1198: PUSH
1199: EMPTY
1200: LIST
1201: LIST
1202: PUSH
1203: EMPTY
1204: LIST
1205: LIST
1206: LIST
1207: LIST
1208: LIST
1209: PUSH
1210: LD_INT 27
1212: PUSH
1213: LD_INT 49
1215: PUSH
1216: EMPTY
1217: LIST
1218: LIST
1219: PUSH
1220: LD_INT 46
1222: PUSH
1223: LD_INT 49
1225: PUSH
1226: EMPTY
1227: LIST
1228: LIST
1229: PUSH
1230: LD_INT 87
1232: PUSH
1233: LD_INT 70
1235: PUSH
1236: EMPTY
1237: LIST
1238: LIST
1239: PUSH
1240: LD_INT 99
1242: PUSH
1243: LD_INT 79
1245: PUSH
1246: EMPTY
1247: LIST
1248: LIST
1249: PUSH
1250: LD_INT 118
1252: PUSH
1253: LD_INT 111
1255: PUSH
1256: EMPTY
1257: LIST
1258: LIST
1259: PUSH
1260: LD_INT 99
1262: PUSH
1263: LD_INT 79
1265: PUSH
1266: EMPTY
1267: LIST
1268: LIST
1269: PUSH
1270: LD_INT 87
1272: PUSH
1273: LD_INT 70
1275: PUSH
1276: EMPTY
1277: LIST
1278: LIST
1279: PUSH
1280: LD_INT 46
1282: PUSH
1283: LD_INT 49
1285: PUSH
1286: EMPTY
1287: LIST
1288: LIST
1289: PUSH
1290: EMPTY
1291: LIST
1292: LIST
1293: LIST
1294: LIST
1295: LIST
1296: LIST
1297: LIST
1298: LIST
1299: PUSH
1300: LD_INT 200
1302: PUSH
1303: LD_INT 88
1305: PUSH
1306: EMPTY
1307: LIST
1308: LIST
1309: PUSH
1310: LD_INT 175
1312: PUSH
1313: LD_INT 80
1315: PUSH
1316: EMPTY
1317: LIST
1318: LIST
1319: PUSH
1320: LD_INT 135
1322: PUSH
1323: LD_INT 62
1325: PUSH
1326: EMPTY
1327: LIST
1328: LIST
1329: PUSH
1330: LD_INT 117
1332: PUSH
1333: LD_INT 53
1335: PUSH
1336: EMPTY
1337: LIST
1338: LIST
1339: PUSH
1340: LD_INT 103
1342: PUSH
1343: LD_INT 41
1345: PUSH
1346: EMPTY
1347: LIST
1348: LIST
1349: PUSH
1350: LD_INT 99
1352: PUSH
1353: LD_INT 24
1355: PUSH
1356: EMPTY
1357: LIST
1358: LIST
1359: PUSH
1360: LD_INT 85
1362: PUSH
1363: LD_INT 3
1365: PUSH
1366: EMPTY
1367: LIST
1368: LIST
1369: PUSH
1370: LD_INT 99
1372: PUSH
1373: LD_INT 24
1375: PUSH
1376: EMPTY
1377: LIST
1378: LIST
1379: PUSH
1380: LD_INT 103
1382: PUSH
1383: LD_INT 41
1385: PUSH
1386: EMPTY
1387: LIST
1388: LIST
1389: PUSH
1390: LD_INT 98
1392: PUSH
1393: LD_INT 47
1395: PUSH
1396: EMPTY
1397: LIST
1398: LIST
1399: PUSH
1400: LD_INT 99
1402: PUSH
1403: LD_INT 56
1405: PUSH
1406: EMPTY
1407: LIST
1408: LIST
1409: PUSH
1410: LD_INT 96
1412: PUSH
1413: LD_INT 66
1415: PUSH
1416: EMPTY
1417: LIST
1418: LIST
1419: PUSH
1420: LD_INT 99
1422: PUSH
1423: LD_INT 56
1425: PUSH
1426: EMPTY
1427: LIST
1428: LIST
1429: PUSH
1430: LD_INT 112
1432: PUSH
1433: LD_INT 66
1435: PUSH
1436: EMPTY
1437: LIST
1438: LIST
1439: PUSH
1440: LD_INT 129
1442: PUSH
1443: LD_INT 68
1445: PUSH
1446: EMPTY
1447: LIST
1448: LIST
1449: PUSH
1450: LD_INT 135
1452: PUSH
1453: LD_INT 62
1455: PUSH
1456: EMPTY
1457: LIST
1458: LIST
1459: PUSH
1460: LD_INT 156
1462: PUSH
1463: LD_INT 71
1465: PUSH
1466: EMPTY
1467: LIST
1468: LIST
1469: PUSH
1470: LD_INT 168
1472: PUSH
1473: LD_INT 76
1475: PUSH
1476: EMPTY
1477: LIST
1478: LIST
1479: PUSH
1480: LD_INT 168
1482: PUSH
1483: LD_INT 61
1485: PUSH
1486: EMPTY
1487: LIST
1488: LIST
1489: PUSH
1490: LD_INT 168
1492: PUSH
1493: LD_INT 75
1495: PUSH
1496: EMPTY
1497: LIST
1498: LIST
1499: PUSH
1500: LD_INT 185
1502: PUSH
1503: LD_INT 85
1505: PUSH
1506: EMPTY
1507: LIST
1508: LIST
1509: PUSH
1510: EMPTY
1511: LIST
1512: LIST
1513: LIST
1514: LIST
1515: LIST
1516: LIST
1517: LIST
1518: LIST
1519: LIST
1520: LIST
1521: LIST
1522: LIST
1523: LIST
1524: LIST
1525: LIST
1526: LIST
1527: LIST
1528: LIST
1529: LIST
1530: LIST
1531: LIST
1532: PUSH
1533: EMPTY
1534: LIST
1535: LIST
1536: LIST
1537: ST_TO_ADDR
// mobile_patrol := [ ] ;
1538: LD_ADDR_EXP 15
1542: PUSH
1543: EMPTY
1544: ST_TO_ADDR
// PrepareVehicle ( us_medium_tracked , engine_combustion , control_computer , us_gatling_gun , 100 ) ;
1545: LD_INT 3
1547: PPUSH
1548: LD_INT 1
1550: PPUSH
1551: LD_INT 3
1553: PPUSH
1554: LD_INT 4
1556: PPUSH
1557: LD_INT 100
1559: PPUSH
1560: CALL 5917 0 5
// mobile_patrol := Insert ( mobile_patrol , 1 , CreateVehicle ) ;
1564: LD_ADDR_EXP 15
1568: PUSH
1569: LD_EXP 15
1573: PPUSH
1574: LD_INT 1
1576: PPUSH
1577: CALL_OW 45
1581: PPUSH
1582: CALL_OW 2
1586: ST_TO_ADDR
// PlaceUnitXY ( mobile_patrol [ 1 ] , 99 , 55 , false ) ;
1587: LD_EXP 15
1591: PUSH
1592: LD_INT 1
1594: ARRAY
1595: PPUSH
1596: LD_INT 99
1598: PPUSH
1599: LD_INT 55
1601: PPUSH
1602: LD_INT 0
1604: PPUSH
1605: CALL_OW 48
// PrepareVehicle ( us_medium_wheeled , engine_combustion , control_computer , us_gatling_gun , 100 ) ;
1609: LD_INT 2
1611: PPUSH
1612: LD_INT 1
1614: PPUSH
1615: LD_INT 3
1617: PPUSH
1618: LD_INT 4
1620: PPUSH
1621: LD_INT 100
1623: PPUSH
1624: CALL 5917 0 5
// mobile_patrol := Insert ( mobile_patrol , 2 , CreateVehicle ) ;
1628: LD_ADDR_EXP 15
1632: PUSH
1633: LD_EXP 15
1637: PPUSH
1638: LD_INT 2
1640: PPUSH
1641: CALL_OW 45
1645: PPUSH
1646: CALL_OW 2
1650: ST_TO_ADDR
// PlaceUnitXY ( mobile_patrol [ 2 ] , 27 , 49 , false ) ;
1651: LD_EXP 15
1655: PUSH
1656: LD_INT 2
1658: ARRAY
1659: PPUSH
1660: LD_INT 27
1662: PPUSH
1663: LD_INT 49
1665: PPUSH
1666: LD_INT 0
1668: PPUSH
1669: CALL_OW 48
// PrepareVehicle ( us_medium_tracked , engine_combustion , control_computer , [ us_laser , us_rocket_launcher , us_rocket_launcher ] [ Difficulty ] , 100 ) ;
1673: LD_INT 3
1675: PPUSH
1676: LD_INT 1
1678: PPUSH
1679: LD_INT 3
1681: PPUSH
1682: LD_INT 9
1684: PUSH
1685: LD_INT 7
1687: PUSH
1688: LD_INT 7
1690: PUSH
1691: EMPTY
1692: LIST
1693: LIST
1694: LIST
1695: PUSH
1696: LD_OWVAR 67
1700: ARRAY
1701: PPUSH
1702: LD_INT 100
1704: PPUSH
1705: CALL 5917 0 5
// mobile_patrol := Insert ( mobile_patrol , 3 , CreateVehicle ) ;
1709: LD_ADDR_EXP 15
1713: PUSH
1714: LD_EXP 15
1718: PPUSH
1719: LD_INT 3
1721: PPUSH
1722: CALL_OW 45
1726: PPUSH
1727: CALL_OW 2
1731: ST_TO_ADDR
// PlaceUnitXY ( mobile_patrol [ 3 ] , 200 , 88 , false ) ;
1732: LD_EXP 15
1736: PUSH
1737: LD_INT 3
1739: ARRAY
1740: PPUSH
1741: LD_INT 200
1743: PPUSH
1744: LD_INT 88
1746: PPUSH
1747: LD_INT 0
1749: PPUSH
1750: CALL_OW 48
// for i = mobile_patrol downto 1 do
1754: LD_ADDR_VAR 0 2
1758: PUSH
1759: DOUBLE
1760: LD_EXP 15
1764: INC
1765: ST_TO_ADDR
1766: LD_INT 1
1768: PUSH
1769: FOR_DOWNTO
1770: IFFALSE 1781
// RaiseSailEvent ( 1 ) ;
1772: LD_INT 1
1774: PPUSH
1775: CALL_OW 427
1779: GO 1769
1781: POP
1782: POP
// end ;
1783: LD_VAR 0 1
1787: RET
// export function SpawnCargo ( ) ; var i , c , k , areas , road , tmp , veh ; begin
1788: LD_INT 0
1790: PPUSH
1791: PPUSH
1792: PPUSH
1793: PPUSH
1794: PPUSH
1795: PPUSH
1796: PPUSH
1797: PPUSH
// areas := [ [ road_east , 4 ] , [ road_south , 5 ] , [ road_west , 1 ] ] ;
1798: LD_ADDR_VAR 0 5
1802: PUSH
1803: LD_INT 20
1805: PUSH
1806: LD_INT 4
1808: PUSH
1809: EMPTY
1810: LIST
1811: LIST
1812: PUSH
1813: LD_INT 21
1815: PUSH
1816: LD_INT 5
1818: PUSH
1819: EMPTY
1820: LIST
1821: LIST
1822: PUSH
1823: LD_INT 22
1825: PUSH
1826: LD_INT 1
1828: PUSH
1829: EMPTY
1830: LIST
1831: LIST
1832: PUSH
1833: EMPTY
1834: LIST
1835: LIST
1836: LIST
1837: ST_TO_ADDR
// road := [ [ 176 , 81 , 135 , 62 , 114 , 67 , 93 , 71 , 76 , 67 ] , [ 107 , 92 , 92 , 72 , 77 , 68 ] , [ 45 , 49 , 67 , 59 , 77 , 68 ] ] ;
1838: LD_ADDR_VAR 0 6
1842: PUSH
1843: LD_INT 176
1845: PUSH
1846: LD_INT 81
1848: PUSH
1849: LD_INT 135
1851: PUSH
1852: LD_INT 62
1854: PUSH
1855: LD_INT 114
1857: PUSH
1858: LD_INT 67
1860: PUSH
1861: LD_INT 93
1863: PUSH
1864: LD_INT 71
1866: PUSH
1867: LD_INT 76
1869: PUSH
1870: LD_INT 67
1872: PUSH
1873: EMPTY
1874: LIST
1875: LIST
1876: LIST
1877: LIST
1878: LIST
1879: LIST
1880: LIST
1881: LIST
1882: LIST
1883: LIST
1884: PUSH
1885: LD_INT 107
1887: PUSH
1888: LD_INT 92
1890: PUSH
1891: LD_INT 92
1893: PUSH
1894: LD_INT 72
1896: PUSH
1897: LD_INT 77
1899: PUSH
1900: LD_INT 68
1902: PUSH
1903: EMPTY
1904: LIST
1905: LIST
1906: LIST
1907: LIST
1908: LIST
1909: LIST
1910: PUSH
1911: LD_INT 45
1913: PUSH
1914: LD_INT 49
1916: PUSH
1917: LD_INT 67
1919: PUSH
1920: LD_INT 59
1922: PUSH
1923: LD_INT 77
1925: PUSH
1926: LD_INT 68
1928: PUSH
1929: EMPTY
1930: LIST
1931: LIST
1932: LIST
1933: LIST
1934: LIST
1935: LIST
1936: PUSH
1937: EMPTY
1938: LIST
1939: LIST
1940: LIST
1941: ST_TO_ADDR
// k := rand ( 1 , areas ) ;
1942: LD_ADDR_VAR 0 4
1946: PUSH
1947: LD_INT 1
1949: PPUSH
1950: LD_VAR 0 5
1954: PPUSH
1955: CALL_OW 12
1959: ST_TO_ADDR
// c := rand ( 1 , 2 ) ;
1960: LD_ADDR_VAR 0 3
1964: PUSH
1965: LD_INT 1
1967: PPUSH
1968: LD_INT 2
1970: PPUSH
1971: CALL_OW 12
1975: ST_TO_ADDR
// uc_side := 1 ;
1976: LD_ADDR_OWVAR 20
1980: PUSH
1981: LD_INT 1
1983: ST_TO_ADDR
// uc_nation := 1 ;
1984: LD_ADDR_OWVAR 21
1988: PUSH
1989: LD_INT 1
1991: ST_TO_ADDR
// PrepareVehicle ( us_medium_wheeled , engine_siberite , control_computer , us_cargo_bay , 100 ) ;
1992: LD_INT 2
1994: PPUSH
1995: LD_INT 3
1997: PPUSH
1998: LD_INT 3
2000: PPUSH
2001: LD_INT 12
2003: PPUSH
2004: LD_INT 100
2006: PPUSH
2007: CALL 5917 0 5
// veh := CreateVehicle ;
2011: LD_ADDR_VAR 0 8
2015: PUSH
2016: CALL_OW 45
2020: ST_TO_ADDR
// SetDir ( veh , areas [ k ] [ 2 ] ) ;
2021: LD_VAR 0 8
2025: PPUSH
2026: LD_VAR 0 5
2030: PUSH
2031: LD_VAR 0 4
2035: ARRAY
2036: PUSH
2037: LD_INT 2
2039: ARRAY
2040: PPUSH
2041: CALL_OW 233
// PlaceUnitArea ( veh , areas [ k ] [ 1 ] , false ) ;
2045: LD_VAR 0 8
2049: PPUSH
2050: LD_VAR 0 5
2054: PUSH
2055: LD_VAR 0 4
2059: ARRAY
2060: PUSH
2061: LD_INT 1
2063: ARRAY
2064: PPUSH
2065: LD_INT 0
2067: PPUSH
2068: CALL_OW 49
// SetCargo ( veh , [ mat_cans , mat_siberit ] [ c ] , 100 ) ;
2072: LD_VAR 0 8
2076: PPUSH
2077: LD_INT 1
2079: PUSH
2080: LD_INT 3
2082: PUSH
2083: EMPTY
2084: LIST
2085: LIST
2086: PUSH
2087: LD_VAR 0 3
2091: ARRAY
2092: PPUSH
2093: LD_INT 100
2095: PPUSH
2096: CALL_OW 290
// tmp := road [ k ] ;
2100: LD_ADDR_VAR 0 7
2104: PUSH
2105: LD_VAR 0 6
2109: PUSH
2110: LD_VAR 0 4
2114: ARRAY
2115: ST_TO_ADDR
// for i = 1 to tmp div 2 do
2116: LD_ADDR_VAR 0 2
2120: PUSH
2121: DOUBLE
2122: LD_INT 1
2124: DEC
2125: ST_TO_ADDR
2126: LD_VAR 0 7
2130: PUSH
2131: LD_INT 2
2133: DIV
2134: PUSH
2135: FOR_TO
2136: IFFALSE 2183
// AddComMoveXY ( veh , tmp [ i * 2 - 1 ] , tmp [ i * 2 ] ) ;
2138: LD_VAR 0 8
2142: PPUSH
2143: LD_VAR 0 7
2147: PUSH
2148: LD_VAR 0 2
2152: PUSH
2153: LD_INT 2
2155: MUL
2156: PUSH
2157: LD_INT 1
2159: MINUS
2160: ARRAY
2161: PPUSH
2162: LD_VAR 0 7
2166: PUSH
2167: LD_VAR 0 2
2171: PUSH
2172: LD_INT 2
2174: MUL
2175: ARRAY
2176: PPUSH
2177: CALL_OW 171
2181: GO 2135
2183: POP
2184: POP
// AddComGive ( veh , alfa ) ;
2185: LD_VAR 0 8
2189: PPUSH
2190: LD_INT 5
2192: PPUSH
2193: CALL_OW 221
// AddComWait ( veh , 0 0$2 ) ;
2197: LD_VAR 0 8
2201: PPUSH
2202: LD_INT 70
2204: PPUSH
2205: CALL_OW 202
// for i = tmp div 2 downto 1 do
2209: LD_ADDR_VAR 0 2
2213: PUSH
2214: DOUBLE
2215: LD_VAR 0 7
2219: PUSH
2220: LD_INT 2
2222: DIV
2223: INC
2224: ST_TO_ADDR
2225: LD_INT 1
2227: PUSH
2228: FOR_DOWNTO
2229: IFFALSE 2276
// AddComMoveXY ( veh , tmp [ i * 2 - 1 ] , tmp [ i * 2 ] ) ;
2231: LD_VAR 0 8
2235: PPUSH
2236: LD_VAR 0 7
2240: PUSH
2241: LD_VAR 0 2
2245: PUSH
2246: LD_INT 2
2248: MUL
2249: PUSH
2250: LD_INT 1
2252: MINUS
2253: ARRAY
2254: PPUSH
2255: LD_VAR 0 7
2259: PUSH
2260: LD_VAR 0 2
2264: PUSH
2265: LD_INT 2
2267: MUL
2268: ARRAY
2269: PPUSH
2270: CALL_OW 171
2274: GO 2228
2276: POP
2277: POP
// AddComMoveToArea ( veh , areas [ k ] [ 1 ] ) ;
2278: LD_VAR 0 8
2282: PPUSH
2283: LD_VAR 0 5
2287: PUSH
2288: LD_VAR 0 4
2292: ARRAY
2293: PUSH
2294: LD_INT 1
2296: ARRAY
2297: PPUSH
2298: CALL_OW 173
// repeat wait ( 0 0$1 ) ;
2302: LD_INT 35
2304: PPUSH
2305: CALL_OW 67
// until IsInArea ( veh , areas [ k ] [ 1 ] ) and GetCargo ( veh , c ) = 0 ;
2309: LD_VAR 0 8
2313: PPUSH
2314: LD_VAR 0 5
2318: PUSH
2319: LD_VAR 0 4
2323: ARRAY
2324: PUSH
2325: LD_INT 1
2327: ARRAY
2328: PPUSH
2329: CALL_OW 308
2333: PUSH
2334: LD_VAR 0 8
2338: PPUSH
2339: LD_VAR 0 3
2343: PPUSH
2344: CALL_OW 289
2348: PUSH
2349: LD_INT 0
2351: EQUAL
2352: AND
2353: IFFALSE 2302
// RemoveUnit ( veh ) ;
2355: LD_VAR 0 8
2359: PPUSH
2360: CALL_OW 64
// end ;
2364: LD_VAR 0 1
2368: RET
// every 3 3$00 do
2369: GO 2371
2371: DISABLE
// begin enable ;
2372: ENABLE
// SpawnCargo ;
2373: CALL 1788 0 0
// end ;
2377: END
// export function PrepareDefenders ; var i , tmp ; begin
2378: LD_INT 0
2380: PPUSH
2381: PPUSH
2382: PPUSH
// if defenders then
2383: LD_EXP 18
2387: IFFALSE 2391
// exit ;
2389: GO 2655
// for i = 1 to [ 4 , 5 , 6 ] [ Difficulty ] do
2391: LD_ADDR_VAR 0 2
2395: PUSH
2396: DOUBLE
2397: LD_INT 1
2399: DEC
2400: ST_TO_ADDR
2401: LD_INT 4
2403: PUSH
2404: LD_INT 5
2406: PUSH
2407: LD_INT 6
2409: PUSH
2410: EMPTY
2411: LIST
2412: LIST
2413: LIST
2414: PUSH
2415: LD_OWVAR 67
2419: ARRAY
2420: PUSH
2421: FOR_TO
2422: IFFALSE 2561
// begin tmp := Produce ( amfac2 , [ us_medium_wheeled , us_medium_tracked ] [ rand ( 1 , 2 ) ] , [ engine_combustion , engine_siberite ] [ rand ( 1 , 2 ) ] , control_remote , [ us_gatling_gun , us_double_gun , us_laser ] [ rand ( 1 , 3 ) ] ) ;
2424: LD_ADDR_VAR 0 3
2428: PUSH
2429: LD_INT 6
2431: PPUSH
2432: LD_INT 2
2434: PUSH
2435: LD_INT 3
2437: PUSH
2438: EMPTY
2439: LIST
2440: LIST
2441: PUSH
2442: LD_INT 1
2444: PPUSH
2445: LD_INT 2
2447: PPUSH
2448: CALL_OW 12
2452: ARRAY
2453: PPUSH
2454: LD_INT 1
2456: PUSH
2457: LD_INT 3
2459: PUSH
2460: EMPTY
2461: LIST
2462: LIST
2463: PUSH
2464: LD_INT 1
2466: PPUSH
2467: LD_INT 2
2469: PPUSH
2470: CALL_OW 12
2474: ARRAY
2475: PPUSH
2476: LD_INT 2
2478: PPUSH
2479: LD_INT 4
2481: PUSH
2482: LD_INT 5
2484: PUSH
2485: LD_INT 9
2487: PUSH
2488: EMPTY
2489: LIST
2490: LIST
2491: LIST
2492: PUSH
2493: LD_INT 1
2495: PPUSH
2496: LD_INT 3
2498: PPUSH
2499: CALL_OW 12
2503: ARRAY
2504: PPUSH
2505: CALL 28612 0 5
2509: ST_TO_ADDR
// if tmp then
2510: LD_VAR 0 3
2514: IFFALSE 2559
// AddComConstruct ( amfac2 , tmp [ 1 ] , tmp [ 2 ] , tmp [ 3 ] , tmp [ 4 ] ) ;
2516: LD_INT 6
2518: PPUSH
2519: LD_VAR 0 3
2523: PUSH
2524: LD_INT 1
2526: ARRAY
2527: PPUSH
2528: LD_VAR 0 3
2532: PUSH
2533: LD_INT 2
2535: ARRAY
2536: PPUSH
2537: LD_VAR 0 3
2541: PUSH
2542: LD_INT 3
2544: ARRAY
2545: PPUSH
2546: LD_VAR 0 3
2550: PUSH
2551: LD_INT 4
2553: ARRAY
2554: PPUSH
2555: CALL_OW 185
// end ;
2559: GO 2421
2561: POP
2562: POP
// repeat wait ( 0 0$1 ) ;
2563: LD_INT 35
2565: PPUSH
2566: CALL_OW 67
// until FilterAllUnits ( [ [ f_side , 1 ] , [ f_control , control_remote ] ] ) >= [ 4 , 5 , 6 ] [ Difficulty ] ;
2570: LD_INT 22
2572: PUSH
2573: LD_INT 1
2575: PUSH
2576: EMPTY
2577: LIST
2578: LIST
2579: PUSH
2580: LD_INT 33
2582: PUSH
2583: LD_INT 2
2585: PUSH
2586: EMPTY
2587: LIST
2588: LIST
2589: PUSH
2590: EMPTY
2591: LIST
2592: LIST
2593: PPUSH
2594: CALL_OW 69
2598: PUSH
2599: LD_INT 4
2601: PUSH
2602: LD_INT 5
2604: PUSH
2605: LD_INT 6
2607: PUSH
2608: EMPTY
2609: LIST
2610: LIST
2611: LIST
2612: PUSH
2613: LD_OWVAR 67
2617: ARRAY
2618: GREATEREQUAL
2619: IFFALSE 2563
// defenders := FilterAllUnits ( [ [ f_side , 1 ] , [ f_control , control_remote ] ] ) ;
2621: LD_ADDR_EXP 18
2625: PUSH
2626: LD_INT 22
2628: PUSH
2629: LD_INT 1
2631: PUSH
2632: EMPTY
2633: LIST
2634: LIST
2635: PUSH
2636: LD_INT 33
2638: PUSH
2639: LD_INT 2
2641: PUSH
2642: EMPTY
2643: LIST
2644: LIST
2645: PUSH
2646: EMPTY
2647: LIST
2648: LIST
2649: PPUSH
2650: CALL_OW 69
2654: ST_TO_ADDR
// end ;
2655: LD_VAR 0 1
2659: RET
// export function Defend ; var i , un , veh , tmp ; begin
2660: LD_INT 0
2662: PPUSH
2663: PPUSH
2664: PPUSH
2665: PPUSH
2666: PPUSH
// defcon_wave := defcon_wave + 1 ;
2667: LD_ADDR_EXP 20
2671: PUSH
2672: LD_EXP 20
2676: PUSH
2677: LD_INT 1
2679: PLUS
2680: ST_TO_ADDR
// if not defenders then
2681: LD_EXP 18
2685: NOT
2686: IFFALSE 2692
// PrepareDefenders ;
2688: CALL 2378 0 0
// if defcon_wave > 1 then
2692: LD_EXP 20
2696: PUSH
2697: LD_INT 1
2699: GREATER
2700: IFFALSE 2926
// begin for i = 1 to defcon_wave + 2 do
2702: LD_ADDR_VAR 0 2
2706: PUSH
2707: DOUBLE
2708: LD_INT 1
2710: DEC
2711: ST_TO_ADDR
2712: LD_EXP 20
2716: PUSH
2717: LD_INT 2
2719: PLUS
2720: PUSH
2721: FOR_TO
2722: IFFALSE 2848
// begin PrepareVehicle ( us_heavy_tracked , engine_siberite , control_manual , [ us_gatling_gun , us_heavy_gun , us_rocket_launcher ] [ rand ( 1 , 3 ) ] , 100 ) ;
2724: LD_INT 4
2726: PPUSH
2727: LD_INT 3
2729: PPUSH
2730: LD_INT 1
2732: PPUSH
2733: LD_INT 4
2735: PUSH
2736: LD_INT 6
2738: PUSH
2739: LD_INT 7
2741: PUSH
2742: EMPTY
2743: LIST
2744: LIST
2745: LIST
2746: PUSH
2747: LD_INT 1
2749: PPUSH
2750: LD_INT 3
2752: PPUSH
2753: CALL_OW 12
2757: ARRAY
2758: PPUSH
2759: LD_INT 100
2761: PPUSH
2762: CALL 5917 0 5
// veh := CreateVehicle ;
2766: LD_ADDR_VAR 0 4
2770: PUSH
2771: CALL_OW 45
2775: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
2776: LD_VAR 0 4
2780: PPUSH
2781: LD_INT 1
2783: PPUSH
2784: CALL_OW 233
// defenders := defenders ^ veh ;
2788: LD_ADDR_EXP 18
2792: PUSH
2793: LD_EXP 18
2797: PUSH
2798: LD_VAR 0 4
2802: ADD
2803: ST_TO_ADDR
// PrepareHuman ( false , 3 , 9 ) ;
2804: LD_INT 0
2806: PPUSH
2807: LD_INT 3
2809: PPUSH
2810: LD_INT 9
2812: PPUSH
2813: CALL_OW 380
// PlaceHumanInUnit ( CreateHuman , veh ) ;
2817: CALL_OW 44
2821: PPUSH
2822: LD_VAR 0 4
2826: PPUSH
2827: CALL_OW 52
// PlaceUnitArea ( veh , west_spawn , false ) ;
2831: LD_VAR 0 4
2835: PPUSH
2836: LD_INT 25
2838: PPUSH
2839: LD_INT 0
2841: PPUSH
2842: CALL_OW 49
// end ;
2846: GO 2721
2848: POP
2849: POP
// for i = 1 to defcon_wave do
2850: LD_ADDR_VAR 0 2
2854: PUSH
2855: DOUBLE
2856: LD_INT 1
2858: DEC
2859: ST_TO_ADDR
2860: LD_EXP 20
2864: PUSH
2865: FOR_TO
2866: IFFALSE 2924
// begin PrepareHuman ( false , 5 , 9 ) ;
2868: LD_INT 0
2870: PPUSH
2871: LD_INT 5
2873: PPUSH
2874: LD_INT 9
2876: PPUSH
2877: CALL_OW 380
// un := CreateHuman ;
2881: LD_ADDR_VAR 0 3
2885: PUSH
2886: CALL_OW 44
2890: ST_TO_ADDR
// PlaceUnitArea ( un , west_spawn , false ) ;
2891: LD_VAR 0 3
2895: PPUSH
2896: LD_INT 25
2898: PPUSH
2899: LD_INT 0
2901: PPUSH
2902: CALL_OW 49
// defenders := defenders ^ un ;
2906: LD_ADDR_EXP 18
2910: PUSH
2911: LD_EXP 18
2915: PUSH
2916: LD_VAR 0 3
2920: ADD
2921: ST_TO_ADDR
// end ;
2922: GO 2865
2924: POP
2925: POP
// end ; repeat wait ( 0 0$1 ) ;
2926: LD_INT 35
2928: PPUSH
2929: CALL_OW 67
// for i in defenders do
2933: LD_ADDR_VAR 0 2
2937: PUSH
2938: LD_EXP 18
2942: PUSH
2943: FOR_IN
2944: IFFALSE 3026
// begin if defcon and GetDistUnitXY ( i , defcon [ 1 ] , defcon [ 2 ] ) > 10 and not HasTask ( i ) then
2946: LD_EXP 19
2950: PUSH
2951: LD_VAR 0 2
2955: PPUSH
2956: LD_EXP 19
2960: PUSH
2961: LD_INT 1
2963: ARRAY
2964: PPUSH
2965: LD_EXP 19
2969: PUSH
2970: LD_INT 2
2972: ARRAY
2973: PPUSH
2974: CALL_OW 297
2978: PUSH
2979: LD_INT 10
2981: GREATER
2982: AND
2983: PUSH
2984: LD_VAR 0 2
2988: PPUSH
2989: CALL_OW 314
2993: NOT
2994: AND
2995: IFFALSE 3024
// ComAgressiveMove ( i , defcon [ 1 ] , defcon [ 2 ] ) ;
2997: LD_VAR 0 2
3001: PPUSH
3002: LD_EXP 19
3006: PUSH
3007: LD_INT 1
3009: ARRAY
3010: PPUSH
3011: LD_EXP 19
3015: PUSH
3016: LD_INT 2
3018: ARRAY
3019: PPUSH
3020: CALL_OW 114
// end ;
3024: GO 2943
3026: POP
3027: POP
// until not defenders ;
3028: LD_EXP 18
3032: NOT
3033: IFFALSE 2926
// end ;
3035: LD_VAR 0 1
3039: RET
// every 0 0$1 do var radar , i ;
3040: GO 3042
3042: DISABLE
3043: LD_INT 0
3045: PPUSH
3046: PPUSH
// begin uc_side := 1 ;
3047: LD_ADDR_OWVAR 20
3051: PUSH
3052: LD_INT 1
3054: ST_TO_ADDR
// uc_nation := 1 ;
3055: LD_ADDR_OWVAR 21
3059: PUSH
3060: LD_INT 1
3062: ST_TO_ADDR
// PrepareVehicle ( us_light_wheeled , engine_solar , control_computer , us_radar , 100 ) ;
3063: LD_INT 1
3065: PPUSH
3066: LD_INT 2
3068: PPUSH
3069: LD_INT 3
3071: PPUSH
3072: LD_INT 11
3074: PPUSH
3075: LD_INT 100
3077: PPUSH
3078: CALL 5917 0 5
// radar := CreateVehicle ;
3082: LD_ADDR_VAR 0 1
3086: PUSH
3087: CALL_OW 45
3091: ST_TO_ADDR
// SetDir ( radar , 4 ) ;
3092: LD_VAR 0 1
3096: PPUSH
3097: LD_INT 4
3099: PPUSH
3100: CALL_OW 233
// PlaceUnitXY ( radar , 51 , 45 , false ) ;
3104: LD_VAR 0 1
3108: PPUSH
3109: LD_INT 51
3111: PPUSH
3112: LD_INT 45
3114: PPUSH
3115: LD_INT 0
3117: PPUSH
3118: CALL_OW 48
// repeat AddComWait ( radar , 0 0$20 ) ;
3122: LD_VAR 0 1
3126: PPUSH
3127: LD_INT 700
3129: PPUSH
3130: CALL_OW 202
// AddComMoveXY ( radar , 65 , 75 ) ;
3134: LD_VAR 0 1
3138: PPUSH
3139: LD_INT 65
3141: PPUSH
3142: LD_INT 75
3144: PPUSH
3145: CALL_OW 171
// AddComWait ( radar , 0 0$10 ) ;
3149: LD_VAR 0 1
3153: PPUSH
3154: LD_INT 350
3156: PPUSH
3157: CALL_OW 202
// AddComMoveXY ( radar , 83 , 87 ) ;
3161: LD_VAR 0 1
3165: PPUSH
3166: LD_INT 83
3168: PPUSH
3169: LD_INT 87
3171: PPUSH
3172: CALL_OW 171
// AddComWait ( radar , 0 0$15 ) ;
3176: LD_VAR 0 1
3180: PPUSH
3181: LD_INT 525
3183: PPUSH
3184: CALL_OW 202
// AddComMoveXY ( radar , 94 , 81 ) ;
3188: LD_VAR 0 1
3192: PPUSH
3193: LD_INT 94
3195: PPUSH
3196: LD_INT 81
3198: PPUSH
3199: CALL_OW 171
// AddComWait ( radar , 0 0$10 ) ;
3203: LD_VAR 0 1
3207: PPUSH
3208: LD_INT 350
3210: PPUSH
3211: CALL_OW 202
// AddComMoveXY ( radar , 55 , 48 ) ;
3215: LD_VAR 0 1
3219: PPUSH
3220: LD_INT 55
3222: PPUSH
3223: LD_INT 48
3225: PPUSH
3226: CALL_OW 171
// wait ( 1 1$00 ) ;
3230: LD_INT 2100
3232: PPUSH
3233: CALL_OW 67
// until not IsOk ( radar ) ;
3237: LD_VAR 0 1
3241: PPUSH
3242: CALL_OW 302
3246: NOT
3247: IFFALSE 3122
// end ;
3249: PPOPN 2
3251: END
// every 7 7$30 trigger Difficulty > 1 and extra_patrol do var un ;
3252: LD_OWVAR 67
3256: PUSH
3257: LD_INT 1
3259: GREATER
3260: PUSH
3261: LD_EXP 11
3265: AND
3266: IFFALSE 3488
3268: GO 3270
3270: DISABLE
3271: LD_INT 0
3273: PPUSH
// begin enable ;
3274: ENABLE
// uc_side := 1 ;
3275: LD_ADDR_OWVAR 20
3279: PUSH
3280: LD_INT 1
3282: ST_TO_ADDR
// uc_nation := 1 ;
3283: LD_ADDR_OWVAR 21
3287: PUSH
3288: LD_INT 1
3290: ST_TO_ADDR
// PrepareVehicle ( us_morphling , engine_siberite , control_computer , us_gatling_gun , 100 ) ;
3291: LD_INT 5
3293: PPUSH
3294: LD_INT 3
3296: PPUSH
3297: LD_INT 3
3299: PPUSH
3300: LD_INT 4
3302: PPUSH
3303: LD_INT 100
3305: PPUSH
3306: CALL 5917 0 5
// un := CreateVehicle ;
3310: LD_ADDR_VAR 0 1
3314: PUSH
3315: CALL_OW 45
3319: ST_TO_ADDR
// SetDir ( un , 3 ) ;
3320: LD_VAR 0 1
3324: PPUSH
3325: LD_INT 3
3327: PPUSH
3328: CALL_OW 233
// PlaceUnitXY ( un , 155 , 2 , false ) ;
3332: LD_VAR 0 1
3336: PPUSH
3337: LD_INT 155
3339: PPUSH
3340: LD_INT 2
3342: PPUSH
3343: LD_INT 0
3345: PPUSH
3346: CALL_OW 48
// ComAgressiveMove ( un , 169 , 77 ) ;
3350: LD_VAR 0 1
3354: PPUSH
3355: LD_INT 169
3357: PPUSH
3358: LD_INT 77
3360: PPUSH
3361: CALL_OW 114
// AddComWait ( un , 0 0$2 ) ;
3365: LD_VAR 0 1
3369: PPUSH
3370: LD_INT 70
3372: PPUSH
3373: CALL_OW 202
// AddComAgressiveMove ( un , 134 , 62 ) ;
3377: LD_VAR 0 1
3381: PPUSH
3382: LD_INT 134
3384: PPUSH
3385: LD_INT 62
3387: PPUSH
3388: CALL_OW 174
// AddComAgressiveMove ( un , 103 , 42 ) ;
3392: LD_VAR 0 1
3396: PPUSH
3397: LD_INT 103
3399: PPUSH
3400: LD_INT 42
3402: PPUSH
3403: CALL_OW 174
// AddComWait ( un , 0 0$2 ) ;
3407: LD_VAR 0 1
3411: PPUSH
3412: LD_INT 70
3414: PPUSH
3415: CALL_OW 202
// AddComAgressiveMove ( un , 84 , 2 ) ;
3419: LD_VAR 0 1
3423: PPUSH
3424: LD_INT 84
3426: PPUSH
3427: LD_INT 2
3429: PPUSH
3430: CALL_OW 174
// repeat wait ( 0 0$1 ) ;
3434: LD_INT 35
3436: PPUSH
3437: CALL_OW 67
// if IsDead ( un ) then
3441: LD_VAR 0 1
3445: PPUSH
3446: CALL_OW 301
3450: IFFALSE 3462
// begin extra_patrol := false ;
3452: LD_ADDR_EXP 11
3456: PUSH
3457: LD_INT 0
3459: ST_TO_ADDR
// exit ;
3460: GO 3488
// end ; until IsAt ( un , 84 , 2 ) ;
3462: LD_VAR 0 1
3466: PPUSH
3467: LD_INT 84
3469: PPUSH
3470: LD_INT 2
3472: PPUSH
3473: CALL_OW 307
3477: IFFALSE 3434
// RemoveUnit ( un ) ;
3479: LD_VAR 0 1
3483: PPUSH
3484: CALL_OW 64
// end ; end_of_file
3488: PPOPN 1
3490: END
// export Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi , Simms , Joan , DeltaDoctor ; export function PrepareFriends ; var i , tmp , buildings , areas , bunkers , cl ; begin
3491: LD_INT 0
3493: PPUSH
3494: PPUSH
3495: PPUSH
3496: PPUSH
3497: PPUSH
3498: PPUSH
3499: PPUSH
// uc_side := 4 ;
3500: LD_ADDR_OWVAR 20
3504: PUSH
3505: LD_INT 4
3507: ST_TO_ADDR
// uc_nation := 1 ;
3508: LD_ADDR_OWVAR 21
3512: PUSH
3513: LD_INT 1
3515: ST_TO_ADDR
// DeltaDoctor := PrepareUnit ( DeltaDoctor , ( not debug ) , 10c_ ) ;
3516: LD_ADDR_EXP 35
3520: PUSH
3521: LD_STRING DeltaDoctor
3523: PPUSH
3524: LD_EXP 1
3528: NOT
3529: PPUSH
3530: LD_STRING 10c_
3532: PPUSH
3533: CALL 5854 0 3
3537: ST_TO_ADDR
// Joan := PrepareUnit ( Joan , ( not debug ) , 10c_ ) ;
3538: LD_ADDR_EXP 34
3542: PUSH
3543: LD_STRING Joan
3545: PPUSH
3546: LD_EXP 1
3550: NOT
3551: PPUSH
3552: LD_STRING 10c_
3554: PPUSH
3555: CALL 5854 0 3
3559: ST_TO_ADDR
// if Joan then
3560: LD_EXP 34
3564: IFFALSE 3595
// friends := Insert ( friends , friends + 1 , Joan ) ;
3566: LD_ADDR_EXP 4
3570: PUSH
3571: LD_EXP 4
3575: PPUSH
3576: LD_EXP 4
3580: PUSH
3581: LD_INT 1
3583: PLUS
3584: PPUSH
3585: LD_EXP 34
3589: PPUSH
3590: CALL_OW 2
3594: ST_TO_ADDR
// Simms := PrepareUnit ( Simms , ( not debug ) , 10c_ ) ;
3595: LD_ADDR_EXP 33
3599: PUSH
3600: LD_STRING Simms
3602: PPUSH
3603: LD_EXP 1
3607: NOT
3608: PPUSH
3609: LD_STRING 10c_
3611: PPUSH
3612: CALL 5854 0 3
3616: ST_TO_ADDR
// Kikuchi := PrepareUnit ( Kikuchi , ( not debug ) , 11_ ) ;
3617: LD_ADDR_EXP 32
3621: PUSH
3622: LD_STRING Kikuchi
3624: PPUSH
3625: LD_EXP 1
3629: NOT
3630: PPUSH
3631: LD_STRING 11_
3633: PPUSH
3634: CALL 5854 0 3
3638: ST_TO_ADDR
// if Kikuchi then
3639: LD_EXP 32
3643: IFFALSE 3674
// friends := Insert ( friends , friends + 1 , Kikuchi ) ;
3645: LD_ADDR_EXP 4
3649: PUSH
3650: LD_EXP 4
3654: PPUSH
3655: LD_EXP 4
3659: PUSH
3660: LD_INT 1
3662: PLUS
3663: PPUSH
3664: LD_EXP 32
3668: PPUSH
3669: CALL_OW 2
3673: ST_TO_ADDR
// Frank := PrepareUnit ( Frank , ( not debug ) , 11_ ) ;
3674: LD_ADDR_EXP 31
3678: PUSH
3679: LD_STRING Frank
3681: PPUSH
3682: LD_EXP 1
3686: NOT
3687: PPUSH
3688: LD_STRING 11_
3690: PPUSH
3691: CALL 5854 0 3
3695: ST_TO_ADDR
// if Frank then
3696: LD_EXP 31
3700: IFFALSE 3731
// friends := Insert ( friends , friends + 1 , Frank ) ;
3702: LD_ADDR_EXP 4
3706: PUSH
3707: LD_EXP 4
3711: PPUSH
3712: LD_EXP 4
3716: PUSH
3717: LD_INT 1
3719: PLUS
3720: PPUSH
3721: LD_EXP 31
3725: PPUSH
3726: CALL_OW 2
3730: ST_TO_ADDR
// Gary := PrepareUnit ( Gary , ( not debug ) , 11_ ) ;
3731: LD_ADDR_EXP 30
3735: PUSH
3736: LD_STRING Gary
3738: PPUSH
3739: LD_EXP 1
3743: NOT
3744: PPUSH
3745: LD_STRING 11_
3747: PPUSH
3748: CALL 5854 0 3
3752: ST_TO_ADDR
// if Gary then
3753: LD_EXP 30
3757: IFFALSE 3788
// friends := Insert ( friends , friends + 1 , Gary ) ;
3759: LD_ADDR_EXP 4
3763: PUSH
3764: LD_EXP 4
3768: PPUSH
3769: LD_EXP 4
3773: PUSH
3774: LD_INT 1
3776: PLUS
3777: PPUSH
3778: LD_EXP 30
3782: PPUSH
3783: CALL_OW 2
3787: ST_TO_ADDR
// Cornel := PrepareUnit ( Cornell , ( not debug ) , 11_ ) ;
3788: LD_ADDR_EXP 29
3792: PUSH
3793: LD_STRING Cornell
3795: PPUSH
3796: LD_EXP 1
3800: NOT
3801: PPUSH
3802: LD_STRING 11_
3804: PPUSH
3805: CALL 5854 0 3
3809: ST_TO_ADDR
// if Cornel then
3810: LD_EXP 29
3814: IFFALSE 3845
// friends := Insert ( friends , friends + 1 , Cornel ) ;
3816: LD_ADDR_EXP 4
3820: PUSH
3821: LD_EXP 4
3825: PPUSH
3826: LD_EXP 4
3830: PUSH
3831: LD_INT 1
3833: PLUS
3834: PPUSH
3835: LD_EXP 29
3839: PPUSH
3840: CALL_OW 2
3844: ST_TO_ADDR
// Houten := PrepareUnit ( Houten , ( not debug ) , 11_ ) ;
3845: LD_ADDR_EXP 28
3849: PUSH
3850: LD_STRING Houten
3852: PPUSH
3853: LD_EXP 1
3857: NOT
3858: PPUSH
3859: LD_STRING 11_
3861: PPUSH
3862: CALL 5854 0 3
3866: ST_TO_ADDR
// if Houten then
3867: LD_EXP 28
3871: IFFALSE 3902
// friends := Insert ( friends , friends + 1 , Houten ) ;
3873: LD_ADDR_EXP 4
3877: PUSH
3878: LD_EXP 4
3882: PPUSH
3883: LD_EXP 4
3887: PUSH
3888: LD_INT 1
3890: PLUS
3891: PPUSH
3892: LD_EXP 28
3896: PPUSH
3897: CALL_OW 2
3901: ST_TO_ADDR
// Gladstone := PrepareUnit ( Gladstone , ( not debug ) , 11_ ) ;
3902: LD_ADDR_EXP 27
3906: PUSH
3907: LD_STRING Gladstone
3909: PPUSH
3910: LD_EXP 1
3914: NOT
3915: PPUSH
3916: LD_STRING 11_
3918: PPUSH
3919: CALL 5854 0 3
3923: ST_TO_ADDR
// if Gladstone then
3924: LD_EXP 27
3928: IFFALSE 3959
// friends := Insert ( friends , friends + 1 , Gladstone ) ;
3930: LD_ADDR_EXP 4
3934: PUSH
3935: LD_EXP 4
3939: PPUSH
3940: LD_EXP 4
3944: PUSH
3945: LD_INT 1
3947: PLUS
3948: PPUSH
3949: LD_EXP 27
3953: PPUSH
3954: CALL_OW 2
3958: ST_TO_ADDR
// Lisa := PrepareUnit ( Lisa , ( not debug ) , 11_ ) ;
3959: LD_ADDR_EXP 21
3963: PUSH
3964: LD_STRING Lisa
3966: PPUSH
3967: LD_EXP 1
3971: NOT
3972: PPUSH
3973: LD_STRING 11_
3975: PPUSH
3976: CALL 5854 0 3
3980: ST_TO_ADDR
// if Lisa then
3981: LD_EXP 21
3985: IFFALSE 4010
// friends := Insert ( friends , 1 , Lisa ) ;
3987: LD_ADDR_EXP 4
3991: PUSH
3992: LD_EXP 4
3996: PPUSH
3997: LD_INT 1
3999: PPUSH
4000: LD_EXP 21
4004: PPUSH
4005: CALL_OW 2
4009: ST_TO_ADDR
// Donaldson := PrepareUnit ( Donaldson , ( not debug ) , 11_ ) ;
4010: LD_ADDR_EXP 22
4014: PUSH
4015: LD_STRING Donaldson
4017: PPUSH
4018: LD_EXP 1
4022: NOT
4023: PPUSH
4024: LD_STRING 11_
4026: PPUSH
4027: CALL 5854 0 3
4031: ST_TO_ADDR
// if Donaldson then
4032: LD_EXP 22
4036: IFFALSE 4067
// friends := Insert ( friends , friends + 1 , Donaldson ) ;
4038: LD_ADDR_EXP 4
4042: PUSH
4043: LD_EXP 4
4047: PPUSH
4048: LD_EXP 4
4052: PUSH
4053: LD_INT 1
4055: PLUS
4056: PPUSH
4057: LD_EXP 22
4061: PPUSH
4062: CALL_OW 2
4066: ST_TO_ADDR
// Bobby := PrepareUnit ( Bobby , ( not debug ) , 11_ ) ;
4067: LD_ADDR_EXP 23
4071: PUSH
4072: LD_STRING Bobby
4074: PPUSH
4075: LD_EXP 1
4079: NOT
4080: PPUSH
4081: LD_STRING 11_
4083: PPUSH
4084: CALL 5854 0 3
4088: ST_TO_ADDR
// if Bobby then
4089: LD_EXP 23
4093: IFFALSE 4124
// friends := Insert ( friends , friends + 1 , Bobby ) ;
4095: LD_ADDR_EXP 4
4099: PUSH
4100: LD_EXP 4
4104: PPUSH
4105: LD_EXP 4
4109: PUSH
4110: LD_INT 1
4112: PLUS
4113: PPUSH
4114: LD_EXP 23
4118: PPUSH
4119: CALL_OW 2
4123: ST_TO_ADDR
// Cyrus := PrepareUnit ( Cyrus , ( not debug ) , 11_ ) ;
4124: LD_ADDR_EXP 24
4128: PUSH
4129: LD_STRING Cyrus
4131: PPUSH
4132: LD_EXP 1
4136: NOT
4137: PPUSH
4138: LD_STRING 11_
4140: PPUSH
4141: CALL 5854 0 3
4145: ST_TO_ADDR
// if Cyrus then
4146: LD_EXP 24
4150: IFFALSE 4181
// friends := Insert ( friends , friends + 1 , Cyrus ) ;
4152: LD_ADDR_EXP 4
4156: PUSH
4157: LD_EXP 4
4161: PPUSH
4162: LD_EXP 4
4166: PUSH
4167: LD_INT 1
4169: PLUS
4170: PPUSH
4171: LD_EXP 24
4175: PPUSH
4176: CALL_OW 2
4180: ST_TO_ADDR
// Denis := PrepareUnit ( Denis , ( not debug ) , 11_ ) ;
4181: LD_ADDR_EXP 25
4185: PUSH
4186: LD_STRING Denis
4188: PPUSH
4189: LD_EXP 1
4193: NOT
4194: PPUSH
4195: LD_STRING 11_
4197: PPUSH
4198: CALL 5854 0 3
4202: ST_TO_ADDR
// Brown := PrepareUnit ( Brown , ( not debug ) , 11_ ) ;
4203: LD_ADDR_EXP 26
4207: PUSH
4208: LD_STRING Brown
4210: PPUSH
4211: LD_EXP 1
4215: NOT
4216: PPUSH
4217: LD_STRING 11_
4219: PPUSH
4220: CALL 5854 0 3
4224: ST_TO_ADDR
// if Brown then
4225: LD_EXP 26
4229: IFFALSE 4260
// friends := Insert ( friends , friends + 1 , Brown ) ;
4231: LD_ADDR_EXP 4
4235: PUSH
4236: LD_EXP 4
4240: PPUSH
4241: LD_EXP 4
4245: PUSH
4246: LD_INT 1
4248: PLUS
4249: PPUSH
4250: LD_EXP 26
4254: PPUSH
4255: CALL_OW 2
4259: ST_TO_ADDR
// friends := friends ^ CreateCharacterSet ( 11c_others ) ^ CreateCharacterSet ( 11_others ) ;
4260: LD_ADDR_EXP 4
4264: PUSH
4265: LD_EXP 4
4269: PUSH
4270: LD_STRING 11c_others
4272: PPUSH
4273: CALL_OW 31
4277: ADD
4278: PUSH
4279: LD_STRING 11_others
4281: PPUSH
4282: CALL_OW 31
4286: ADD
4287: ST_TO_ADDR
// if friends < 18 then
4288: LD_EXP 4
4292: PUSH
4293: LD_INT 18
4295: LESS
4296: IFFALSE 4368
// for i = 1 to 18 do
4298: LD_ADDR_VAR 0 2
4302: PUSH
4303: DOUBLE
4304: LD_INT 1
4306: DEC
4307: ST_TO_ADDR
4308: LD_INT 18
4310: PUSH
4311: FOR_TO
4312: IFFALSE 4366
// begin PrepareHuman ( false , rand ( 1 , 4 ) , 7 ) ;
4314: LD_INT 0
4316: PPUSH
4317: LD_INT 1
4319: PPUSH
4320: LD_INT 4
4322: PPUSH
4323: CALL_OW 12
4327: PPUSH
4328: LD_INT 7
4330: PPUSH
4331: CALL_OW 380
// friends := Insert ( friends , friends + 1 , CreateHuman ) ;
4335: LD_ADDR_EXP 4
4339: PUSH
4340: LD_EXP 4
4344: PPUSH
4345: LD_EXP 4
4349: PUSH
4350: LD_INT 1
4352: PLUS
4353: PPUSH
4354: CALL_OW 44
4358: PPUSH
4359: CALL_OW 2
4363: ST_TO_ADDR
// end ;
4364: GO 4311
4366: POP
4367: POP
// for i in friends do
4368: LD_ADDR_VAR 0 2
4372: PUSH
4373: LD_EXP 4
4377: PUSH
4378: FOR_IN
4379: IFFALSE 4437
// if GetSkill ( i , 1 ) >= GetSkill ( i , 4 ) then
4381: LD_VAR 0 2
4385: PPUSH
4386: LD_INT 1
4388: PPUSH
4389: CALL_OW 259
4393: PUSH
4394: LD_VAR 0 2
4398: PPUSH
4399: LD_INT 4
4401: PPUSH
4402: CALL_OW 259
4406: GREATEREQUAL
4407: IFFALSE 4423
// SetClass ( i , class_soldier ) else
4409: LD_VAR 0 2
4413: PPUSH
4414: LD_INT 1
4416: PPUSH
4417: CALL_OW 336
4421: GO 4435
// SetClass ( i , class_scientistic ) ;
4423: LD_VAR 0 2
4427: PPUSH
4428: LD_INT 4
4430: PPUSH
4431: CALL_OW 336
4435: GO 4378
4437: POP
4438: POP
// if Frank then
4439: LD_EXP 31
4443: IFFALSE 4457
// SetClass ( Frank , class_sniper ) ;
4445: LD_EXP 31
4449: PPUSH
4450: LD_INT 5
4452: PPUSH
4453: CALL_OW 336
// SetClass ( [ Joan , Denis , DeltaDoctor , Simms ] , class_scientistic ) ;
4457: LD_EXP 34
4461: PUSH
4462: LD_EXP 25
4466: PUSH
4467: LD_EXP 35
4471: PUSH
4472: LD_EXP 33
4476: PUSH
4477: EMPTY
4478: LIST
4479: LIST
4480: LIST
4481: LIST
4482: PPUSH
4483: LD_INT 4
4485: PPUSH
4486: CALL_OW 336
// selected = CharacterSelection (  , 7 , 7 , [ sel_dont_change_class , JMM , Roth , Simms , Denis , DeltaDoctor , sel_not_hired , sel_changeable , sel_change_class ] ^ friends , [ class_soldier , [ class_scientistic , 2 ] , [ class_sniper , 0 , 3 ] ] ) ;
4490: LD_ADDR_EXP 3
4494: PUSH
4495: LD_STRING 
4497: PPUSH
4498: LD_INT 7
4500: PPUSH
4501: LD_INT 7
4503: PPUSH
4504: LD_INT -6
4506: PUSH
4507: LD_EXP 12
4511: PUSH
4512: LD_EXP 13
4516: PUSH
4517: LD_EXP 33
4521: PUSH
4522: LD_EXP 25
4526: PUSH
4527: LD_EXP 35
4531: PUSH
4532: LD_INT -2
4534: PUSH
4535: LD_INT -3
4537: PUSH
4538: LD_INT -5
4540: PUSH
4541: EMPTY
4542: LIST
4543: LIST
4544: LIST
4545: LIST
4546: LIST
4547: LIST
4548: LIST
4549: LIST
4550: LIST
4551: PUSH
4552: LD_EXP 4
4556: ADD
4557: PPUSH
4558: LD_INT 1
4560: PUSH
4561: LD_INT 4
4563: PUSH
4564: LD_INT 2
4566: PUSH
4567: EMPTY
4568: LIST
4569: LIST
4570: PUSH
4571: LD_INT 5
4573: PUSH
4574: LD_INT 0
4576: PUSH
4577: LD_INT 3
4579: PUSH
4580: EMPTY
4581: LIST
4582: LIST
4583: LIST
4584: PUSH
4585: EMPTY
4586: LIST
4587: LIST
4588: LIST
4589: PPUSH
4590: CALL_OW 42
4594: ST_TO_ADDR
// if Simms then
4595: LD_EXP 33
4599: IFFALSE 4617
// selected := selected ^ Simms ;
4601: LD_ADDR_EXP 3
4605: PUSH
4606: LD_EXP 3
4610: PUSH
4611: LD_EXP 33
4615: ADD
4616: ST_TO_ADDR
// if Denis then
4617: LD_EXP 25
4621: IFFALSE 4639
// selected := selected ^ Denis ;
4623: LD_ADDR_EXP 3
4627: PUSH
4628: LD_EXP 3
4632: PUSH
4633: LD_EXP 25
4637: ADD
4638: ST_TO_ADDR
// if DeltaDoctor then
4639: LD_EXP 35
4643: IFFALSE 4661
// selected := selected ^ DeltaDoctor ;
4645: LD_ADDR_EXP 3
4649: PUSH
4650: LD_EXP 3
4654: PUSH
4655: LD_EXP 35
4659: ADD
4660: ST_TO_ADDR
// friends := friends diff selected ;
4661: LD_ADDR_EXP 4
4665: PUSH
4666: LD_EXP 4
4670: PUSH
4671: LD_EXP 3
4675: DIFF
4676: ST_TO_ADDR
// buildings := [ [ ambar1 , ambar2 , ambar3 ] , [ amlab2 , amlab3 , amlab4 ] ] ;
4677: LD_ADDR_VAR 0 4
4681: PUSH
4682: LD_INT 111
4684: PUSH
4685: LD_INT 137
4687: PUSH
4688: LD_INT 51
4690: PUSH
4691: EMPTY
4692: LIST
4693: LIST
4694: LIST
4695: PUSH
4696: LD_INT 147
4698: PUSH
4699: LD_INT 129
4701: PUSH
4702: LD_INT 25
4704: PUSH
4705: EMPTY
4706: LIST
4707: LIST
4708: LIST
4709: PUSH
4710: EMPTY
4711: LIST
4712: LIST
4713: ST_TO_ADDR
// areas := [ friends_spawn_1 , friends_spawn_2 , friends_spawn_3 , friends_spawn_4 , friends_spawn_5 , friends_spawn_6 ] ;
4714: LD_ADDR_VAR 0 5
4718: PUSH
4719: LD_INT 5
4721: PUSH
4722: LD_INT 6
4724: PUSH
4725: LD_INT 7
4727: PUSH
4728: LD_INT 8
4730: PUSH
4731: LD_INT 17
4733: PUSH
4734: LD_INT 18
4736: PUSH
4737: EMPTY
4738: LIST
4739: LIST
4740: LIST
4741: LIST
4742: LIST
4743: LIST
4744: ST_TO_ADDR
// for i in buildings do
4745: LD_ADDR_VAR 0 2
4749: PUSH
4750: LD_VAR 0 4
4754: PUSH
4755: FOR_IN
4756: IFFALSE 4772
// SetSide ( i , 4 ) ;
4758: LD_VAR 0 2
4762: PPUSH
4763: LD_INT 4
4765: PPUSH
4766: CALL_OW 235
4770: GO 4755
4772: POP
4773: POP
// for i in selected do
4774: LD_ADDR_VAR 0 2
4778: PUSH
4779: LD_EXP 3
4783: PUSH
4784: FOR_IN
4785: IFFALSE 5125
// begin if GetClass ( i ) in [ 1 , 5 ] then
4787: LD_VAR 0 2
4791: PPUSH
4792: CALL_OW 257
4796: PUSH
4797: LD_INT 1
4799: PUSH
4800: LD_INT 5
4802: PUSH
4803: EMPTY
4804: LIST
4805: LIST
4806: IN
4807: IFFALSE 4967
// begin if buildings [ 1 ] then
4809: LD_VAR 0 4
4813: PUSH
4814: LD_INT 1
4816: ARRAY
4817: IFFALSE 4878
// begin PlaceHumanInUnit ( i , buildings [ 1 ] [ 1 ] ) ;
4819: LD_VAR 0 2
4823: PPUSH
4824: LD_VAR 0 4
4828: PUSH
4829: LD_INT 1
4831: ARRAY
4832: PUSH
4833: LD_INT 1
4835: ARRAY
4836: PPUSH
4837: CALL_OW 52
// buildings := Replace ( buildings , 1 , Delete ( buildings [ 1 ] , 1 ) ) ;
4841: LD_ADDR_VAR 0 4
4845: PUSH
4846: LD_VAR 0 4
4850: PPUSH
4851: LD_INT 1
4853: PPUSH
4854: LD_VAR 0 4
4858: PUSH
4859: LD_INT 1
4861: ARRAY
4862: PPUSH
4863: LD_INT 1
4865: PPUSH
4866: CALL_OW 3
4870: PPUSH
4871: CALL_OW 1
4875: ST_TO_ADDR
// end else
4876: GO 4965
// begin if not areas then
4878: LD_VAR 0 5
4882: NOT
4883: IFFALSE 4917
// begin PlaceUnitXYR ( i , 87 , 68 , 8 , false ) ;
4885: LD_VAR 0 2
4889: PPUSH
4890: LD_INT 87
4892: PPUSH
4893: LD_INT 68
4895: PPUSH
4896: LD_INT 8
4898: PPUSH
4899: LD_INT 0
4901: PPUSH
4902: CALL_OW 50
// ComHold ( i ) ;
4906: LD_VAR 0 2
4910: PPUSH
4911: CALL_OW 140
// end else
4915: GO 4965
// begin PlaceUnitArea ( i , areas [ 1 ] , false ) ;
4917: LD_VAR 0 2
4921: PPUSH
4922: LD_VAR 0 5
4926: PUSH
4927: LD_INT 1
4929: ARRAY
4930: PPUSH
4931: LD_INT 0
4933: PPUSH
4934: CALL_OW 49
// ComHold ( i ) ;
4938: LD_VAR 0 2
4942: PPUSH
4943: CALL_OW 140
// areas := Delete ( areas , 1 ) ;
4947: LD_ADDR_VAR 0 5
4951: PUSH
4952: LD_VAR 0 5
4956: PPUSH
4957: LD_INT 1
4959: PPUSH
4960: CALL_OW 3
4964: ST_TO_ADDR
// end ; end ; end else
4965: GO 5123
// begin if buildings [ 2 ] then
4967: LD_VAR 0 4
4971: PUSH
4972: LD_INT 2
4974: ARRAY
4975: IFFALSE 5036
// begin PlaceHumanInUnit ( i , buildings [ 2 ] [ 1 ] ) ;
4977: LD_VAR 0 2
4981: PPUSH
4982: LD_VAR 0 4
4986: PUSH
4987: LD_INT 2
4989: ARRAY
4990: PUSH
4991: LD_INT 1
4993: ARRAY
4994: PPUSH
4995: CALL_OW 52
// buildings := Replace ( buildings , 2 , Delete ( buildings [ 2 ] , 1 ) ) ;
4999: LD_ADDR_VAR 0 4
5003: PUSH
5004: LD_VAR 0 4
5008: PPUSH
5009: LD_INT 2
5011: PPUSH
5012: LD_VAR 0 4
5016: PUSH
5017: LD_INT 2
5019: ARRAY
5020: PPUSH
5021: LD_INT 1
5023: PPUSH
5024: CALL_OW 3
5028: PPUSH
5029: CALL_OW 1
5033: ST_TO_ADDR
// end else
5034: GO 5123
// begin if not areas then
5036: LD_VAR 0 5
5040: NOT
5041: IFFALSE 5075
// begin PlaceUnitXYR ( i , 87 , 68 , 8 , false ) ;
5043: LD_VAR 0 2
5047: PPUSH
5048: LD_INT 87
5050: PPUSH
5051: LD_INT 68
5053: PPUSH
5054: LD_INT 8
5056: PPUSH
5057: LD_INT 0
5059: PPUSH
5060: CALL_OW 50
// ComHold ( i ) ;
5064: LD_VAR 0 2
5068: PPUSH
5069: CALL_OW 140
// end else
5073: GO 5123
// begin PlaceUnitArea ( i , areas [ 1 ] , false ) ;
5075: LD_VAR 0 2
5079: PPUSH
5080: LD_VAR 0 5
5084: PUSH
5085: LD_INT 1
5087: ARRAY
5088: PPUSH
5089: LD_INT 0
5091: PPUSH
5092: CALL_OW 49
// ComHold ( i ) ;
5096: LD_VAR 0 2
5100: PPUSH
5101: CALL_OW 140
// areas := Delete ( areas , 1 ) ;
5105: LD_ADDR_VAR 0 5
5109: PUSH
5110: LD_VAR 0 5
5114: PPUSH
5115: LD_INT 1
5117: PPUSH
5118: CALL_OW 3
5122: ST_TO_ADDR
// end ; end ; end ; end ;
5123: GO 4784
5125: POP
5126: POP
// bunkers := FilterAllUnits ( [ [ f_side , 1 ] , [ f_btype , b_bunker ] ] ) ;
5127: LD_ADDR_VAR 0 6
5131: PUSH
5132: LD_INT 22
5134: PUSH
5135: LD_INT 1
5137: PUSH
5138: EMPTY
5139: LIST
5140: LIST
5141: PUSH
5142: LD_INT 30
5144: PUSH
5145: LD_INT 32
5147: PUSH
5148: EMPTY
5149: LIST
5150: LIST
5151: PUSH
5152: EMPTY
5153: LIST
5154: LIST
5155: PPUSH
5156: CALL_OW 69
5160: ST_TO_ADDR
// for i = bunkers - friends downto 1 do
5161: LD_ADDR_VAR 0 2
5165: PUSH
5166: DOUBLE
5167: LD_VAR 0 6
5171: PUSH
5172: LD_EXP 4
5176: MINUS
5177: INC
5178: ST_TO_ADDR
5179: LD_INT 1
5181: PUSH
5182: FOR_DOWNTO
5183: IFFALSE 5246
// begin PrepareHuman ( false , 1 , [ 7 , 8 , 9 ] [ Difficulty ] ) ;
5185: LD_INT 0
5187: PPUSH
5188: LD_INT 1
5190: PPUSH
5191: LD_INT 7
5193: PUSH
5194: LD_INT 8
5196: PUSH
5197: LD_INT 9
5199: PUSH
5200: EMPTY
5201: LIST
5202: LIST
5203: LIST
5204: PUSH
5205: LD_OWVAR 67
5209: ARRAY
5210: PPUSH
5211: CALL_OW 380
// friends := Insert ( friends , friends + 1 , CreateHuman ) ;
5215: LD_ADDR_EXP 4
5219: PUSH
5220: LD_EXP 4
5224: PPUSH
5225: LD_EXP 4
5229: PUSH
5230: LD_INT 1
5232: PLUS
5233: PPUSH
5234: CALL_OW 44
5238: PPUSH
5239: CALL_OW 2
5243: ST_TO_ADDR
// end ;
5244: GO 5182
5246: POP
5247: POP
// if friends then
5248: LD_EXP 4
5252: IFFALSE 5368
// begin tmp := friends ;
5254: LD_ADDR_VAR 0 3
5258: PUSH
5259: LD_EXP 4
5263: ST_TO_ADDR
// for i = 1 to bunkers do
5264: LD_ADDR_VAR 0 2
5268: PUSH
5269: DOUBLE
5270: LD_INT 1
5272: DEC
5273: ST_TO_ADDR
5274: LD_VAR 0 6
5278: PUSH
5279: FOR_TO
5280: IFFALSE 5366
// begin SetSide ( tmp [ tmp ] , 1 ) ;
5282: LD_VAR 0 3
5286: PUSH
5287: LD_VAR 0 3
5291: ARRAY
5292: PPUSH
5293: LD_INT 1
5295: PPUSH
5296: CALL_OW 235
// SetClass ( tmp [ tmp ] , 1 ) ;
5300: LD_VAR 0 3
5304: PUSH
5305: LD_VAR 0 3
5309: ARRAY
5310: PPUSH
5311: LD_INT 1
5313: PPUSH
5314: CALL_OW 336
// PlaceHumanInUnit ( tmp [ tmp ] , bunkers [ i ] ) ;
5318: LD_VAR 0 3
5322: PUSH
5323: LD_VAR 0 3
5327: ARRAY
5328: PPUSH
5329: LD_VAR 0 6
5333: PUSH
5334: LD_VAR 0 2
5338: ARRAY
5339: PPUSH
5340: CALL_OW 52
// tmp := Delete ( tmp , tmp ) ;
5344: LD_ADDR_VAR 0 3
5348: PUSH
5349: LD_VAR 0 3
5353: PPUSH
5354: LD_VAR 0 3
5358: PPUSH
5359: CALL_OW 3
5363: ST_TO_ADDR
// end ;
5364: GO 5279
5366: POP
5367: POP
// end ; areas := areas union [ guard_spawn_1 , guard_spawn_2 , guard_spawn_3 , guard_spawn_4 , guard_spawn_5 , guard_spawn_6 , guard_spawn_7 , guard_spawn_8 , guard_spawn_9 , guard_spawn_10 , guard_spawn_11 , guard_spawn_12 , guard_spawn_13 , guard_spawn_14 , guard_spawn_15 , guard_spawn_16 , guard_spawn_17 , guard_spawn_18 , guard_spawn_19 , guard_spawn_20 ] ;
5368: LD_ADDR_VAR 0 5
5372: PUSH
5373: LD_VAR 0 5
5377: PUSH
5378: LD_INT 9
5380: PUSH
5381: LD_INT 10
5383: PUSH
5384: LD_INT 11
5386: PUSH
5387: LD_INT 12
5389: PUSH
5390: LD_INT 13
5392: PUSH
5393: LD_INT 14
5395: PUSH
5396: LD_INT 15
5398: PUSH
5399: LD_INT 16
5401: PUSH
5402: LD_INT 26
5404: PUSH
5405: LD_INT 27
5407: PUSH
5408: LD_INT 28
5410: PUSH
5411: LD_INT 29
5413: PUSH
5414: LD_INT 30
5416: PUSH
5417: LD_INT 31
5419: PUSH
5420: LD_INT 32
5422: PUSH
5423: LD_INT 33
5425: PUSH
5426: LD_INT 34
5428: PUSH
5429: LD_INT 35
5431: PUSH
5432: LD_INT 36
5434: PUSH
5435: LD_INT 37
5437: PUSH
5438: EMPTY
5439: LIST
5440: LIST
5441: LIST
5442: LIST
5443: LIST
5444: LIST
5445: LIST
5446: LIST
5447: LIST
5448: LIST
5449: LIST
5450: LIST
5451: LIST
5452: LIST
5453: LIST
5454: LIST
5455: LIST
5456: LIST
5457: LIST
5458: LIST
5459: UNION
5460: ST_TO_ADDR
// for i in friends do
5461: LD_ADDR_VAR 0 2
5465: PUSH
5466: LD_EXP 4
5470: PUSH
5471: FOR_IN
5472: IFFALSE 5740
// begin SetTag ( i , 2 ) ;
5474: LD_VAR 0 2
5478: PPUSH
5479: LD_INT 2
5481: PPUSH
5482: CALL_OW 109
// if GetClass ( i ) = 1 and buildings [ 1 ] then
5486: LD_VAR 0 2
5490: PPUSH
5491: CALL_OW 257
5495: PUSH
5496: LD_INT 1
5498: EQUAL
5499: PUSH
5500: LD_VAR 0 4
5504: PUSH
5505: LD_INT 1
5507: ARRAY
5508: AND
5509: IFFALSE 5570
// begin PlaceHumanInUnit ( i , buildings [ 1 ] [ 1 ] ) ;
5511: LD_VAR 0 2
5515: PPUSH
5516: LD_VAR 0 4
5520: PUSH
5521: LD_INT 1
5523: ARRAY
5524: PUSH
5525: LD_INT 1
5527: ARRAY
5528: PPUSH
5529: CALL_OW 52
// buildings := Replace ( buildings , 1 , Delete ( buildings [ 1 ] , 1 ) ) ;
5533: LD_ADDR_VAR 0 4
5537: PUSH
5538: LD_VAR 0 4
5542: PPUSH
5543: LD_INT 1
5545: PPUSH
5546: LD_VAR 0 4
5550: PUSH
5551: LD_INT 1
5553: ARRAY
5554: PPUSH
5555: LD_INT 1
5557: PPUSH
5558: CALL_OW 3
5562: PPUSH
5563: CALL_OW 1
5567: ST_TO_ADDR
// continue ;
5568: GO 5471
// end ; if GetClass ( i ) = 4 and buildings [ 2 ] then
5570: LD_VAR 0 2
5574: PPUSH
5575: CALL_OW 257
5579: PUSH
5580: LD_INT 4
5582: EQUAL
5583: PUSH
5584: LD_VAR 0 4
5588: PUSH
5589: LD_INT 2
5591: ARRAY
5592: AND
5593: IFFALSE 5654
// begin PlaceHumanInUnit ( i , buildings [ 2 ] [ 1 ] ) ;
5595: LD_VAR 0 2
5599: PPUSH
5600: LD_VAR 0 4
5604: PUSH
5605: LD_INT 2
5607: ARRAY
5608: PUSH
5609: LD_INT 1
5611: ARRAY
5612: PPUSH
5613: CALL_OW 52
// buildings := Replace ( buildings , 2 , Delete ( buildings [ 2 ] , 1 ) ) ;
5617: LD_ADDR_VAR 0 4
5621: PUSH
5622: LD_VAR 0 4
5626: PPUSH
5627: LD_INT 2
5629: PPUSH
5630: LD_VAR 0 4
5634: PUSH
5635: LD_INT 2
5637: ARRAY
5638: PPUSH
5639: LD_INT 1
5641: PPUSH
5642: CALL_OW 3
5646: PPUSH
5647: CALL_OW 1
5651: ST_TO_ADDR
// continue ;
5652: GO 5471
// end ; PlaceUnitArea ( i , areas [ 1 ] , false ) ;
5654: LD_VAR 0 2
5658: PPUSH
5659: LD_VAR 0 5
5663: PUSH
5664: LD_INT 1
5666: ARRAY
5667: PPUSH
5668: LD_INT 0
5670: PPUSH
5671: CALL_OW 49
// areas := Delete ( areas , 1 ) ;
5675: LD_ADDR_VAR 0 5
5679: PUSH
5680: LD_VAR 0 5
5684: PPUSH
5685: LD_INT 1
5687: PPUSH
5688: CALL_OW 3
5692: ST_TO_ADDR
// if GetClass ( i ) <> 1 then
5693: LD_VAR 0 2
5697: PPUSH
5698: CALL_OW 257
5702: PUSH
5703: LD_INT 1
5705: NONEQUAL
5706: IFFALSE 5720
// SetClass ( i , 1 ) ;
5708: LD_VAR 0 2
5712: PPUSH
5713: LD_INT 1
5715: PPUSH
5716: CALL_OW 336
// ComHold ( i ) ;
5720: LD_VAR 0 2
5724: PPUSH
5725: CALL_OW 140
// if not areas then
5729: LD_VAR 0 5
5733: NOT
5734: IFFALSE 5738
// break ;
5736: GO 5740
// end ;
5738: GO 5471
5740: POP
5741: POP
// if UnitFilter ( friends , [ f_not , [ f_placed ] ] ) then
5742: LD_EXP 4
5746: PPUSH
5747: LD_INT 3
5749: PUSH
5750: LD_INT 52
5752: PUSH
5753: EMPTY
5754: LIST
5755: PUSH
5756: EMPTY
5757: LIST
5758: LIST
5759: PPUSH
5760: CALL_OW 72
5764: IFFALSE 5831
// for i in UnitFilter ( friends , [ f_not , [ f_placed ] ] ) do
5766: LD_ADDR_VAR 0 2
5770: PUSH
5771: LD_EXP 4
5775: PPUSH
5776: LD_INT 3
5778: PUSH
5779: LD_INT 52
5781: PUSH
5782: EMPTY
5783: LIST
5784: PUSH
5785: EMPTY
5786: LIST
5787: LIST
5788: PPUSH
5789: CALL_OW 72
5793: PUSH
5794: FOR_IN
5795: IFFALSE 5829
// begin PlaceUnitXYR ( i , 65 , 58 , 7 , false ) ;
5797: LD_VAR 0 2
5801: PPUSH
5802: LD_INT 65
5804: PPUSH
5805: LD_INT 58
5807: PPUSH
5808: LD_INT 7
5810: PPUSH
5811: LD_INT 0
5813: PPUSH
5814: CALL_OW 50
// ComHold ( i ) ;
5818: LD_VAR 0 2
5822: PPUSH
5823: CALL_OW 140
// end ;
5827: GO 5794
5829: POP
5830: POP
// if Frank then
5831: LD_EXP 31
5835: IFFALSE 5849
// SetClass ( Frank , class_sniper ) ;
5837: LD_EXP 31
5841: PPUSH
5842: LD_INT 5
5844: PPUSH
5845: CALL_OW 336
// end ; end_of_file
5849: LD_VAR 0 1
5853: RET
// export function PrepareUnit ( ident , exist_mode , prefix ) ; var unit ; begin
5854: LD_INT 0
5856: PPUSH
5857: PPUSH
// if exist_mode then
5858: LD_VAR 0 2
5862: IFFALSE 5887
// unit := CreateCharacter ( prefix & ident ) else
5864: LD_ADDR_VAR 0 5
5868: PUSH
5869: LD_VAR 0 3
5873: PUSH
5874: LD_VAR 0 1
5878: STR
5879: PPUSH
5880: CALL_OW 34
5884: ST_TO_ADDR
5885: GO 5902
// unit := NewCharacter ( ident ) ;
5887: LD_ADDR_VAR 0 5
5891: PUSH
5892: LD_VAR 0 1
5896: PPUSH
5897: CALL_OW 25
5901: ST_TO_ADDR
// result := unit ;
5902: LD_ADDR_VAR 0 4
5906: PUSH
5907: LD_VAR 0 5
5911: ST_TO_ADDR
// end ;
5912: LD_VAR 0 4
5916: RET
// export function PrepareVehicle ( chassis , engine , control , weapon , fuel ) ; begin
5917: LD_INT 0
5919: PPUSH
// vc_chassis := chassis ;
5920: LD_ADDR_OWVAR 37
5924: PUSH
5925: LD_VAR 0 1
5929: ST_TO_ADDR
// vc_engine := engine ;
5930: LD_ADDR_OWVAR 39
5934: PUSH
5935: LD_VAR 0 2
5939: ST_TO_ADDR
// vc_control := control ;
5940: LD_ADDR_OWVAR 38
5944: PUSH
5945: LD_VAR 0 3
5949: ST_TO_ADDR
// vc_weapon := weapon ;
5950: LD_ADDR_OWVAR 40
5954: PUSH
5955: LD_VAR 0 4
5959: ST_TO_ADDR
// vc_fuel_battery := fuel ;
5960: LD_ADDR_OWVAR 41
5964: PUSH
5965: LD_VAR 0 5
5969: ST_TO_ADDR
// end ;
5970: LD_VAR 0 6
5974: RET
// export function CanSayRand ( side ) ; begin
5975: LD_INT 0
5977: PPUSH
// result := FilterAllUnits ( [ [ f_placed ] , [ f_side , side ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] ] ] ) diff [ JMM , Frank , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Powell , Cornel , Gary , Kikuchi ] ;
5978: LD_ADDR_VAR 0 2
5982: PUSH
5983: LD_INT 52
5985: PUSH
5986: EMPTY
5987: LIST
5988: PUSH
5989: LD_INT 22
5991: PUSH
5992: LD_VAR 0 1
5996: PUSH
5997: EMPTY
5998: LIST
5999: LIST
6000: PUSH
6001: LD_INT 2
6003: PUSH
6004: LD_INT 25
6006: PUSH
6007: LD_INT 1
6009: PUSH
6010: EMPTY
6011: LIST
6012: LIST
6013: PUSH
6014: LD_INT 25
6016: PUSH
6017: LD_INT 2
6019: PUSH
6020: EMPTY
6021: LIST
6022: LIST
6023: PUSH
6024: LD_INT 25
6026: PUSH
6027: LD_INT 3
6029: PUSH
6030: EMPTY
6031: LIST
6032: LIST
6033: PUSH
6034: LD_INT 25
6036: PUSH
6037: LD_INT 4
6039: PUSH
6040: EMPTY
6041: LIST
6042: LIST
6043: PUSH
6044: EMPTY
6045: LIST
6046: LIST
6047: LIST
6048: LIST
6049: LIST
6050: PUSH
6051: EMPTY
6052: LIST
6053: LIST
6054: LIST
6055: PPUSH
6056: CALL_OW 69
6060: PUSH
6061: LD_EXP 12
6065: PUSH
6066: LD_EXP 31
6070: PUSH
6071: LD_EXP 21
6075: PUSH
6076: LD_EXP 22
6080: PUSH
6081: LD_EXP 23
6085: PUSH
6086: LD_EXP 24
6090: PUSH
6091: LD_EXP 25
6095: PUSH
6096: LD_EXP 26
6100: PUSH
6101: LD_EXP 27
6105: PUSH
6106: LD_EXP 28
6110: PUSH
6111: LD_EXP 14
6115: PUSH
6116: LD_EXP 29
6120: PUSH
6121: LD_EXP 30
6125: PUSH
6126: LD_EXP 32
6130: PUSH
6131: EMPTY
6132: LIST
6133: LIST
6134: LIST
6135: LIST
6136: LIST
6137: LIST
6138: LIST
6139: LIST
6140: LIST
6141: LIST
6142: LIST
6143: LIST
6144: LIST
6145: LIST
6146: DIFF
6147: ST_TO_ADDR
// end ;
6148: LD_VAR 0 2
6152: RET
// export function Connect ( vehicle ) ; var i , t , mech , tmp , j ; begin
6153: LD_INT 0
6155: PPUSH
6156: PPUSH
6157: PPUSH
6158: PPUSH
6159: PPUSH
6160: PPUSH
// if not vehicle or not GetControl ( vehicle ) = control_remote then
6161: LD_VAR 0 1
6165: NOT
6166: PUSH
6167: LD_VAR 0 1
6171: PPUSH
6172: CALL_OW 263
6176: PUSH
6177: LD_INT 2
6179: EQUAL
6180: NOT
6181: OR
6182: IFFALSE 6186
// exit ;
6184: GO 6502
// tmp := FilterAllUnits ( [ [ f_side , GetSide ( vehicle ) ] , [ f_or , [ f_btype , b_control_tower ] , [ f_weapon , ar_control_tower ] ] ] ) ;
6186: LD_ADDR_VAR 0 6
6190: PUSH
6191: LD_INT 22
6193: PUSH
6194: LD_VAR 0 1
6198: PPUSH
6199: CALL_OW 255
6203: PUSH
6204: EMPTY
6205: LIST
6206: LIST
6207: PUSH
6208: LD_INT 2
6210: PUSH
6211: LD_INT 30
6213: PUSH
6214: LD_INT 36
6216: PUSH
6217: EMPTY
6218: LIST
6219: LIST
6220: PUSH
6221: LD_INT 34
6223: PUSH
6224: LD_INT 31
6226: PUSH
6227: EMPTY
6228: LIST
6229: LIST
6230: PUSH
6231: EMPTY
6232: LIST
6233: LIST
6234: LIST
6235: PUSH
6236: EMPTY
6237: LIST
6238: LIST
6239: PPUSH
6240: CALL_OW 69
6244: ST_TO_ADDR
// if not tmp then
6245: LD_VAR 0 6
6249: NOT
6250: IFFALSE 6254
// exit ;
6252: GO 6502
// result := [ ] ;
6254: LD_ADDR_VAR 0 2
6258: PUSH
6259: EMPTY
6260: ST_TO_ADDR
// for i in tmp do
6261: LD_ADDR_VAR 0 3
6265: PUSH
6266: LD_VAR 0 6
6270: PUSH
6271: FOR_IN
6272: IFFALSE 6343
// begin t := UnitsInside ( i ) ;
6274: LD_ADDR_VAR 0 4
6278: PUSH
6279: LD_VAR 0 3
6283: PPUSH
6284: CALL_OW 313
6288: ST_TO_ADDR
// if t then
6289: LD_VAR 0 4
6293: IFFALSE 6341
// for j in t do
6295: LD_ADDR_VAR 0 7
6299: PUSH
6300: LD_VAR 0 4
6304: PUSH
6305: FOR_IN
6306: IFFALSE 6339
// result := Insert ( result , result + 1 , j ) ;
6308: LD_ADDR_VAR 0 2
6312: PUSH
6313: LD_VAR 0 2
6317: PPUSH
6318: LD_VAR 0 2
6322: PUSH
6323: LD_INT 1
6325: PLUS
6326: PPUSH
6327: LD_VAR 0 7
6331: PPUSH
6332: CALL_OW 2
6336: ST_TO_ADDR
6337: GO 6305
6339: POP
6340: POP
// end ;
6341: GO 6271
6343: POP
6344: POP
// if not result then
6345: LD_VAR 0 2
6349: NOT
6350: IFFALSE 6354
// exit ;
6352: GO 6502
// mech := result [ 1 ] ;
6354: LD_ADDR_VAR 0 5
6358: PUSH
6359: LD_VAR 0 2
6363: PUSH
6364: LD_INT 1
6366: ARRAY
6367: ST_TO_ADDR
// if result > 1 then
6368: LD_VAR 0 2
6372: PUSH
6373: LD_INT 1
6375: GREATER
6376: IFFALSE 6488
// for i = 2 to result do
6378: LD_ADDR_VAR 0 3
6382: PUSH
6383: DOUBLE
6384: LD_INT 2
6386: DEC
6387: ST_TO_ADDR
6388: LD_VAR 0 2
6392: PUSH
6393: FOR_TO
6394: IFFALSE 6486
// begin t := GetSkill ( result [ i ] , 3 ) - UnitsLinked ( result [ i ] ) ;
6396: LD_ADDR_VAR 0 4
6400: PUSH
6401: LD_VAR 0 2
6405: PUSH
6406: LD_VAR 0 3
6410: ARRAY
6411: PPUSH
6412: LD_INT 3
6414: PPUSH
6415: CALL_OW 259
6419: PUSH
6420: LD_VAR 0 2
6424: PUSH
6425: LD_VAR 0 3
6429: ARRAY
6430: PPUSH
6431: CALL_OW 432
6435: MINUS
6436: ST_TO_ADDR
// if t >= ( GetSkill ( mech , 3 ) - UnitsLinked ( mech ) ) then
6437: LD_VAR 0 4
6441: PUSH
6442: LD_VAR 0 5
6446: PPUSH
6447: LD_INT 3
6449: PPUSH
6450: CALL_OW 259
6454: PUSH
6455: LD_VAR 0 5
6459: PPUSH
6460: CALL_OW 432
6464: MINUS
6465: GREATEREQUAL
6466: IFFALSE 6484
// mech := result [ i ] ;
6468: LD_ADDR_VAR 0 5
6472: PUSH
6473: LD_VAR 0 2
6477: PUSH
6478: LD_VAR 0 3
6482: ARRAY
6483: ST_TO_ADDR
// end ;
6484: GO 6393
6486: POP
6487: POP
// ComLinkTo ( vehicle , mech ) ;
6488: LD_VAR 0 1
6492: PPUSH
6493: LD_VAR 0 5
6497: PPUSH
6498: CALL_OW 135
// end ;
6502: LD_VAR 0 2
6506: RET
// export function SayRand ( sex , dial ) ; begin
6507: LD_INT 0
6509: PPUSH
// result := FilterAllUnits ( [ [ f_placed ] , [ f_side , 1 ] , [ f_sex , sex ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] ] ] ) diff [ JMM , Frank , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Powell , Cornel , Gary , Kikuchi ] ;
6510: LD_ADDR_VAR 0 3
6514: PUSH
6515: LD_INT 52
6517: PUSH
6518: EMPTY
6519: LIST
6520: PUSH
6521: LD_INT 22
6523: PUSH
6524: LD_INT 1
6526: PUSH
6527: EMPTY
6528: LIST
6529: LIST
6530: PUSH
6531: LD_INT 26
6533: PUSH
6534: LD_VAR 0 1
6538: PUSH
6539: EMPTY
6540: LIST
6541: LIST
6542: PUSH
6543: LD_INT 2
6545: PUSH
6546: LD_INT 25
6548: PUSH
6549: LD_INT 1
6551: PUSH
6552: EMPTY
6553: LIST
6554: LIST
6555: PUSH
6556: LD_INT 25
6558: PUSH
6559: LD_INT 2
6561: PUSH
6562: EMPTY
6563: LIST
6564: LIST
6565: PUSH
6566: LD_INT 25
6568: PUSH
6569: LD_INT 3
6571: PUSH
6572: EMPTY
6573: LIST
6574: LIST
6575: PUSH
6576: LD_INT 25
6578: PUSH
6579: LD_INT 4
6581: PUSH
6582: EMPTY
6583: LIST
6584: LIST
6585: PUSH
6586: EMPTY
6587: LIST
6588: LIST
6589: LIST
6590: LIST
6591: LIST
6592: PUSH
6593: EMPTY
6594: LIST
6595: LIST
6596: LIST
6597: LIST
6598: PPUSH
6599: CALL_OW 69
6603: PUSH
6604: LD_EXP 12
6608: PUSH
6609: LD_EXP 31
6613: PUSH
6614: LD_EXP 21
6618: PUSH
6619: LD_EXP 22
6623: PUSH
6624: LD_EXP 23
6628: PUSH
6629: LD_EXP 24
6633: PUSH
6634: LD_EXP 25
6638: PUSH
6639: LD_EXP 26
6643: PUSH
6644: LD_EXP 27
6648: PUSH
6649: LD_EXP 28
6653: PUSH
6654: LD_EXP 14
6658: PUSH
6659: LD_EXP 29
6663: PUSH
6664: LD_EXP 30
6668: PUSH
6669: LD_EXP 32
6673: PUSH
6674: EMPTY
6675: LIST
6676: LIST
6677: LIST
6678: LIST
6679: LIST
6680: LIST
6681: LIST
6682: LIST
6683: LIST
6684: LIST
6685: LIST
6686: LIST
6687: LIST
6688: LIST
6689: DIFF
6690: ST_TO_ADDR
// if not result then
6691: LD_VAR 0 3
6695: NOT
6696: IFFALSE 6700
// exit ;
6698: GO 6728
// result := result [ 1 ] ;
6700: LD_ADDR_VAR 0 3
6704: PUSH
6705: LD_VAR 0 3
6709: PUSH
6710: LD_INT 1
6712: ARRAY
6713: ST_TO_ADDR
// Say ( result , dial ) ;
6714: LD_VAR 0 3
6718: PPUSH
6719: LD_VAR 0 2
6723: PPUSH
6724: CALL_OW 88
// end ;
6728: LD_VAR 0 3
6732: RET
// export function SayRand2 ( sex , dial , filter ) ; begin
6733: LD_INT 0
6735: PPUSH
// result := FilterAllUnits ( [ [ f_side , 1 ] , [ f_sex , sex ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] ] ] ) diff [ JMM , Frank , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Powell , Cornel , Gary , Kikuchi ] ^ filter ;
6736: LD_ADDR_VAR 0 4
6740: PUSH
6741: LD_INT 22
6743: PUSH
6744: LD_INT 1
6746: PUSH
6747: EMPTY
6748: LIST
6749: LIST
6750: PUSH
6751: LD_INT 26
6753: PUSH
6754: LD_VAR 0 1
6758: PUSH
6759: EMPTY
6760: LIST
6761: LIST
6762: PUSH
6763: LD_INT 2
6765: PUSH
6766: LD_INT 25
6768: PUSH
6769: LD_INT 1
6771: PUSH
6772: EMPTY
6773: LIST
6774: LIST
6775: PUSH
6776: LD_INT 25
6778: PUSH
6779: LD_INT 2
6781: PUSH
6782: EMPTY
6783: LIST
6784: LIST
6785: PUSH
6786: LD_INT 25
6788: PUSH
6789: LD_INT 3
6791: PUSH
6792: EMPTY
6793: LIST
6794: LIST
6795: PUSH
6796: LD_INT 25
6798: PUSH
6799: LD_INT 4
6801: PUSH
6802: EMPTY
6803: LIST
6804: LIST
6805: PUSH
6806: EMPTY
6807: LIST
6808: LIST
6809: LIST
6810: LIST
6811: LIST
6812: PUSH
6813: EMPTY
6814: LIST
6815: LIST
6816: LIST
6817: PPUSH
6818: CALL_OW 69
6822: PUSH
6823: LD_EXP 12
6827: PUSH
6828: LD_EXP 31
6832: PUSH
6833: LD_EXP 21
6837: PUSH
6838: LD_EXP 22
6842: PUSH
6843: LD_EXP 23
6847: PUSH
6848: LD_EXP 24
6852: PUSH
6853: LD_EXP 25
6857: PUSH
6858: LD_EXP 26
6862: PUSH
6863: LD_EXP 27
6867: PUSH
6868: LD_EXP 28
6872: PUSH
6873: LD_EXP 14
6877: PUSH
6878: LD_EXP 29
6882: PUSH
6883: LD_EXP 30
6887: PUSH
6888: LD_EXP 32
6892: PUSH
6893: EMPTY
6894: LIST
6895: LIST
6896: LIST
6897: LIST
6898: LIST
6899: LIST
6900: LIST
6901: LIST
6902: LIST
6903: LIST
6904: LIST
6905: LIST
6906: LIST
6907: LIST
6908: PUSH
6909: LD_VAR 0 3
6913: ADD
6914: DIFF
6915: ST_TO_ADDR
// if not result then
6916: LD_VAR 0 4
6920: NOT
6921: IFFALSE 6925
// exit ;
6923: GO 6953
// result := result [ 1 ] ;
6925: LD_ADDR_VAR 0 4
6929: PUSH
6930: LD_VAR 0 4
6934: PUSH
6935: LD_INT 1
6937: ARRAY
6938: ST_TO_ADDR
// Say ( result , dial ) ;
6939: LD_VAR 0 4
6943: PPUSH
6944: LD_VAR 0 2
6948: PPUSH
6949: CALL_OW 88
// end ;
6953: LD_VAR 0 4
6957: RET
// export function Patrol ( unit , path , flags ) ; var i , x , y , c , p , station , tmp_path , status , enemy , e , spot_dist , safe_place , chase_range , need_refuel ; begin
6958: LD_INT 0
6960: PPUSH
6961: PPUSH
6962: PPUSH
6963: PPUSH
6964: PPUSH
6965: PPUSH
6966: PPUSH
6967: PPUSH
6968: PPUSH
6969: PPUSH
6970: PPUSH
6971: PPUSH
6972: PPUSH
6973: PPUSH
6974: PPUSH
// if not unit or not path or GetType ( unit ) = unit_building then
6975: LD_VAR 0 1
6979: NOT
6980: PUSH
6981: LD_VAR 0 2
6985: NOT
6986: OR
6987: PUSH
6988: LD_VAR 0 1
6992: PPUSH
6993: CALL_OW 247
6997: PUSH
6998: LD_INT 3
7000: EQUAL
7001: OR
7002: IFFALSE 7006
// exit ;
7004: GO 8545
// for i = path downto 1 do
7006: LD_ADDR_VAR 0 5
7010: PUSH
7011: DOUBLE
7012: LD_VAR 0 2
7016: INC
7017: ST_TO_ADDR
7018: LD_INT 1
7020: PUSH
7021: FOR_DOWNTO
7022: IFFALSE 7083
// begin if not ValidHex ( path [ i ] [ 1 ] , path [ i ] [ 2 ] ) then
7024: LD_VAR 0 2
7028: PUSH
7029: LD_VAR 0 5
7033: ARRAY
7034: PUSH
7035: LD_INT 1
7037: ARRAY
7038: PPUSH
7039: LD_VAR 0 2
7043: PUSH
7044: LD_VAR 0 5
7048: ARRAY
7049: PUSH
7050: LD_INT 2
7052: ARRAY
7053: PPUSH
7054: CALL_OW 488
7058: NOT
7059: IFFALSE 7081
// path = Delete ( path , i ) ;
7061: LD_ADDR_VAR 0 2
7065: PUSH
7066: LD_VAR 0 2
7070: PPUSH
7071: LD_VAR 0 5
7075: PPUSH
7076: CALL_OW 3
7080: ST_TO_ADDR
// end ;
7081: GO 7021
7083: POP
7084: POP
// if not path then
7085: LD_VAR 0 2
7089: NOT
7090: IFFALSE 7094
// exit ;
7092: GO 8545
// tmp_path := [ ] ;
7094: LD_ADDR_VAR 0 11
7098: PUSH
7099: EMPTY
7100: ST_TO_ADDR
// if flags then
7101: LD_VAR 0 3
7105: IFFALSE 7179
// begin if flags [ 1 ] then
7107: LD_VAR 0 3
7111: PUSH
7112: LD_INT 1
7114: ARRAY
7115: IFFALSE 7131
// safe_place = flags [ 1 ] ;
7117: LD_ADDR_VAR 0 16
7121: PUSH
7122: LD_VAR 0 3
7126: PUSH
7127: LD_INT 1
7129: ARRAY
7130: ST_TO_ADDR
// if flags [ 2 ] then
7131: LD_VAR 0 3
7135: PUSH
7136: LD_INT 2
7138: ARRAY
7139: IFFALSE 7155
// spot_dist = flags [ 2 ] ;
7141: LD_ADDR_VAR 0 15
7145: PUSH
7146: LD_VAR 0 3
7150: PUSH
7151: LD_INT 2
7153: ARRAY
7154: ST_TO_ADDR
// if flags [ 3 ] then
7155: LD_VAR 0 3
7159: PUSH
7160: LD_INT 3
7162: ARRAY
7163: IFFALSE 7179
// chase_range = flags [ 3 ] ;
7165: LD_ADDR_VAR 0 17
7169: PUSH
7170: LD_VAR 0 3
7174: PUSH
7175: LD_INT 3
7177: ARRAY
7178: ST_TO_ADDR
// end ; if not chase_range then
7179: LD_VAR 0 17
7183: NOT
7184: IFFALSE 7194
// chase_range = 8 ;
7186: LD_ADDR_VAR 0 17
7190: PUSH
7191: LD_INT 8
7193: ST_TO_ADDR
// if not spot_dist then
7194: LD_VAR 0 15
7198: NOT
7199: IFFALSE 7209
// spot_dist := 8 ;
7201: LD_ADDR_VAR 0 15
7205: PUSH
7206: LD_INT 8
7208: ST_TO_ADDR
// need_refuel = ( GetType ( unit ) = unit_vehicle and GetEngine ( unit ) <> engine_siberite ) ;
7209: LD_ADDR_VAR 0 18
7213: PUSH
7214: LD_VAR 0 1
7218: PPUSH
7219: CALL_OW 247
7223: PUSH
7224: LD_INT 2
7226: EQUAL
7227: PUSH
7228: LD_VAR 0 1
7232: PPUSH
7233: CALL_OW 262
7237: PUSH
7238: LD_INT 3
7240: NONEQUAL
7241: AND
7242: ST_TO_ADDR
// status = 1 ;
7243: LD_ADDR_VAR 0 12
7247: PUSH
7248: LD_INT 1
7250: ST_TO_ADDR
// tmp_path = [ 1 , path [ 1 ] ] ;
7251: LD_ADDR_VAR 0 11
7255: PUSH
7256: LD_INT 1
7258: PUSH
7259: LD_VAR 0 2
7263: PUSH
7264: LD_INT 1
7266: ARRAY
7267: PUSH
7268: EMPTY
7269: LIST
7270: LIST
7271: ST_TO_ADDR
// repeat wait ( 0 0$1 ) ;
7272: LD_INT 35
7274: PPUSH
7275: CALL_OW 67
// if need_refuel and GetFuel ( unit ) < 20 then
7279: LD_VAR 0 18
7283: PUSH
7284: LD_VAR 0 1
7288: PPUSH
7289: CALL_OW 261
7293: PUSH
7294: LD_INT 20
7296: LESS
7297: AND
7298: IFFALSE 7491
// begin station := FilterAllUnits ( [ [ f_side , GetSide ( unit ) ] , [ f_or , [ f_btype , b_depot ] , [ f_btype , b_warehouse ] , [ f_btype , b_oil_mine ] , [ f_btype , b_factory ] ] ] ) ;
7300: LD_ADDR_VAR 0 10
7304: PUSH
7305: LD_INT 22
7307: PUSH
7308: LD_VAR 0 1
7312: PPUSH
7313: CALL_OW 255
7317: PUSH
7318: EMPTY
7319: LIST
7320: LIST
7321: PUSH
7322: LD_INT 2
7324: PUSH
7325: LD_INT 30
7327: PUSH
7328: LD_INT 0
7330: PUSH
7331: EMPTY
7332: LIST
7333: LIST
7334: PUSH
7335: LD_INT 30
7337: PUSH
7338: LD_INT 1
7340: PUSH
7341: EMPTY
7342: LIST
7343: LIST
7344: PUSH
7345: LD_INT 30
7347: PUSH
7348: LD_INT 29
7350: PUSH
7351: EMPTY
7352: LIST
7353: LIST
7354: PUSH
7355: LD_INT 30
7357: PUSH
7358: LD_INT 3
7360: PUSH
7361: EMPTY
7362: LIST
7363: LIST
7364: PUSH
7365: EMPTY
7366: LIST
7367: LIST
7368: LIST
7369: LIST
7370: LIST
7371: PUSH
7372: EMPTY
7373: LIST
7374: LIST
7375: PPUSH
7376: CALL_OW 69
7380: ST_TO_ADDR
// if not station then
7381: LD_VAR 0 10
7385: NOT
7386: IFFALSE 7402
// begin SetFuel ( unit , 40 ) ;
7388: LD_VAR 0 1
7392: PPUSH
7393: LD_INT 40
7395: PPUSH
7396: CALL_OW 240
// continue ;
7400: GO 7272
// end ; status := 6 ;
7402: LD_ADDR_VAR 0 12
7406: PUSH
7407: LD_INT 6
7409: ST_TO_ADDR
// station := NearestUnitToUnit ( station , unit ) ;
7410: LD_ADDR_VAR 0 10
7414: PUSH
7415: LD_VAR 0 10
7419: PPUSH
7420: LD_VAR 0 1
7424: PPUSH
7425: CALL_OW 74
7429: ST_TO_ADDR
// repeat wait ( 0 0$1 ) ;
7430: LD_INT 35
7432: PPUSH
7433: CALL_OW 67
// ComMoveUnit ( unit , station ) ;
7437: LD_VAR 0 1
7441: PPUSH
7442: LD_VAR 0 10
7446: PPUSH
7447: CALL_OW 112
// until GetDistUnits ( unit , station ) < 6 ;
7451: LD_VAR 0 1
7455: PPUSH
7456: LD_VAR 0 10
7460: PPUSH
7461: CALL_OW 296
7465: PUSH
7466: LD_INT 6
7468: LESS
7469: IFFALSE 7430
// SetFuel ( unit , 100 ) ;
7471: LD_VAR 0 1
7475: PPUSH
7476: LD_INT 100
7478: PPUSH
7479: CALL_OW 240
// status := 5 ;
7483: LD_ADDR_VAR 0 12
7487: PUSH
7488: LD_INT 5
7490: ST_TO_ADDR
// end ; if status = 1 then
7491: LD_VAR 0 12
7495: PUSH
7496: LD_INT 1
7498: EQUAL
7499: IFFALSE 7875
// begin enemy := FilterAllUnits ( [ [ f_enemy , GetSide ( unit ) ] , [ f_not , [ f_type , unit_building ] ] , [ f_dist , unit , spot_dist ] , [ f_see , 1 ] ] ) ;
7501: LD_ADDR_VAR 0 13
7505: PUSH
7506: LD_INT 81
7508: PUSH
7509: LD_VAR 0 1
7513: PPUSH
7514: CALL_OW 255
7518: PUSH
7519: EMPTY
7520: LIST
7521: LIST
7522: PUSH
7523: LD_INT 3
7525: PUSH
7526: LD_INT 21
7528: PUSH
7529: LD_INT 3
7531: PUSH
7532: EMPTY
7533: LIST
7534: LIST
7535: PUSH
7536: EMPTY
7537: LIST
7538: LIST
7539: PUSH
7540: LD_INT 91
7542: PUSH
7543: LD_VAR 0 1
7547: PUSH
7548: LD_VAR 0 15
7552: PUSH
7553: EMPTY
7554: LIST
7555: LIST
7556: LIST
7557: PUSH
7558: LD_INT 101
7560: PUSH
7561: LD_INT 1
7563: PUSH
7564: EMPTY
7565: LIST
7566: LIST
7567: PUSH
7568: EMPTY
7569: LIST
7570: LIST
7571: LIST
7572: LIST
7573: PPUSH
7574: CALL_OW 69
7578: ST_TO_ADDR
// for i in enemy do
7579: LD_ADDR_VAR 0 5
7583: PUSH
7584: LD_VAR 0 13
7588: PUSH
7589: FOR_IN
7590: IFFALSE 7621
// if IsInvisible ( i ) then
7592: LD_VAR 0 5
7596: PPUSH
7597: CALL_OW 571
7601: IFFALSE 7619
// enemy := enemy diff i ;
7603: LD_ADDR_VAR 0 13
7607: PUSH
7608: LD_VAR 0 13
7612: PUSH
7613: LD_VAR 0 5
7617: DIFF
7618: ST_TO_ADDR
7619: GO 7589
7621: POP
7622: POP
// if enemy then
7623: LD_VAR 0 13
7627: IFFALSE 7677
// begin SetRememberedX ( unit , GetX ( unit ) ) ;
7629: LD_VAR 0 1
7633: PPUSH
7634: LD_VAR 0 1
7638: PPUSH
7639: CALL_OW 250
7643: PPUSH
7644: CALL_OW 231
// SetRememberedY ( unit , GetY ( unit ) ) ;
7648: LD_VAR 0 1
7652: PPUSH
7653: LD_VAR 0 1
7657: PPUSH
7658: CALL_OW 251
7662: PPUSH
7663: CALL_OW 232
// status = 2 ;
7667: LD_ADDR_VAR 0 12
7671: PUSH
7672: LD_INT 2
7674: ST_TO_ADDR
// end else
7675: GO 7875
// begin if IsAt ( unit , tmp_path [ 2 ] [ 1 ] , tmp_path [ 2 ] [ 2 ] ) or not HasTask ( unit ) then
7677: LD_VAR 0 1
7681: PPUSH
7682: LD_VAR 0 11
7686: PUSH
7687: LD_INT 2
7689: ARRAY
7690: PUSH
7691: LD_INT 1
7693: ARRAY
7694: PPUSH
7695: LD_VAR 0 11
7699: PUSH
7700: LD_INT 2
7702: ARRAY
7703: PUSH
7704: LD_INT 2
7706: ARRAY
7707: PPUSH
7708: CALL_OW 307
7712: PUSH
7713: LD_VAR 0 1
7717: PPUSH
7718: CALL_OW 314
7722: NOT
7723: OR
7724: IFFALSE 7875
// begin wait ( 0 0$2 ) ;
7726: LD_INT 70
7728: PPUSH
7729: CALL_OW 67
// if tmp_path [ 1 ] + 1 > path then
7733: LD_VAR 0 11
7737: PUSH
7738: LD_INT 1
7740: ARRAY
7741: PUSH
7742: LD_INT 1
7744: PLUS
7745: PUSH
7746: LD_VAR 0 2
7750: GREATER
7751: IFFALSE 7776
// tmp_path := Replace ( tmp_path , 1 , 1 ) else
7753: LD_ADDR_VAR 0 11
7757: PUSH
7758: LD_VAR 0 11
7762: PPUSH
7763: LD_INT 1
7765: PPUSH
7766: LD_INT 1
7768: PPUSH
7769: CALL_OW 1
7773: ST_TO_ADDR
7774: GO 7807
// tmp_path := Replace ( tmp_path , 1 , tmp_path [ 1 ] + 1 ) ;
7776: LD_ADDR_VAR 0 11
7780: PUSH
7781: LD_VAR 0 11
7785: PPUSH
7786: LD_INT 1
7788: PPUSH
7789: LD_VAR 0 11
7793: PUSH
7794: LD_INT 1
7796: ARRAY
7797: PUSH
7798: LD_INT 1
7800: PLUS
7801: PPUSH
7802: CALL_OW 1
7806: ST_TO_ADDR
// tmp_path := Replace ( tmp_path , 2 , path [ tmp_path [ 1 ] ] ) ;
7807: LD_ADDR_VAR 0 11
7811: PUSH
7812: LD_VAR 0 11
7816: PPUSH
7817: LD_INT 2
7819: PPUSH
7820: LD_VAR 0 2
7824: PUSH
7825: LD_VAR 0 11
7829: PUSH
7830: LD_INT 1
7832: ARRAY
7833: ARRAY
7834: PPUSH
7835: CALL_OW 1
7839: ST_TO_ADDR
// ComAgressiveMove ( unit , tmp_path [ 2 ] [ 1 ] , tmp_path [ 2 ] [ 2 ] ) ;
7840: LD_VAR 0 1
7844: PPUSH
7845: LD_VAR 0 11
7849: PUSH
7850: LD_INT 2
7852: ARRAY
7853: PUSH
7854: LD_INT 1
7856: ARRAY
7857: PPUSH
7858: LD_VAR 0 11
7862: PUSH
7863: LD_INT 2
7865: ARRAY
7866: PUSH
7867: LD_INT 2
7869: ARRAY
7870: PPUSH
7871: CALL_OW 114
// end ; end ; end ; if status = 2 then
7875: LD_VAR 0 12
7879: PUSH
7880: LD_INT 2
7882: EQUAL
7883: IFFALSE 8104
// begin if GetLives ( unit ) < 650 and safe_place then
7885: LD_VAR 0 1
7889: PPUSH
7890: CALL_OW 256
7894: PUSH
7895: LD_INT 650
7897: LESS
7898: PUSH
7899: LD_VAR 0 16
7903: AND
7904: IFFALSE 7916
// begin status = 3 ;
7906: LD_ADDR_VAR 0 12
7910: PUSH
7911: LD_INT 3
7913: ST_TO_ADDR
// continue ;
7914: GO 7272
// end ; x := GetRememberedX ( unit ) ;
7916: LD_ADDR_VAR 0 6
7920: PUSH
7921: LD_VAR 0 1
7925: PPUSH
7926: CALL_OW 252
7930: ST_TO_ADDR
// y := GetRememberedY ( unit ) ;
7931: LD_ADDR_VAR 0 7
7935: PUSH
7936: LD_VAR 0 1
7940: PPUSH
7941: CALL_OW 253
7945: ST_TO_ADDR
// enemy := FilterAllUnits ( [ [ f_enemy , GetSide ( unit ) ] , [ f_distxy , x , y , spot_dist ] , [ f_see , 1 ] ] ) ;
7946: LD_ADDR_VAR 0 13
7950: PUSH
7951: LD_INT 81
7953: PUSH
7954: LD_VAR 0 1
7958: PPUSH
7959: CALL_OW 255
7963: PUSH
7964: EMPTY
7965: LIST
7966: LIST
7967: PUSH
7968: LD_INT 92
7970: PUSH
7971: LD_VAR 0 6
7975: PUSH
7976: LD_VAR 0 7
7980: PUSH
7981: LD_VAR 0 15
7985: PUSH
7986: EMPTY
7987: LIST
7988: LIST
7989: LIST
7990: LIST
7991: PUSH
7992: LD_INT 101
7994: PUSH
7995: LD_INT 1
7997: PUSH
7998: EMPTY
7999: LIST
8000: LIST
8001: PUSH
8002: EMPTY
8003: LIST
8004: LIST
8005: LIST
8006: PPUSH
8007: CALL_OW 69
8011: ST_TO_ADDR
// if enemy then
8012: LD_VAR 0 13
8016: IFFALSE 8087
// begin e := NearestUnitToUnit ( enemy , unit ) ;
8018: LD_ADDR_VAR 0 14
8022: PUSH
8023: LD_VAR 0 13
8027: PPUSH
8028: LD_VAR 0 1
8032: PPUSH
8033: CALL_OW 74
8037: ST_TO_ADDR
// if GetDistUnitXY ( e , x , y ) < spot_dist + chase_range then
8038: LD_VAR 0 14
8042: PPUSH
8043: LD_VAR 0 6
8047: PPUSH
8048: LD_VAR 0 7
8052: PPUSH
8053: CALL_OW 297
8057: PUSH
8058: LD_VAR 0 15
8062: PUSH
8063: LD_VAR 0 17
8067: PLUS
8068: LESS
8069: IFFALSE 8085
// ComAttackUnit ( unit , e ) ;
8071: LD_VAR 0 1
8075: PPUSH
8076: LD_VAR 0 14
8080: PPUSH
8081: CALL_OW 115
// end else
8085: GO 8104
// begin ComStop ( unit ) ;
8087: LD_VAR 0 1
8091: PPUSH
8092: CALL_OW 141
// status = 5 ;
8096: LD_ADDR_VAR 0 12
8100: PUSH
8101: LD_INT 5
8103: ST_TO_ADDR
// end ; end ; if status = 3 and safe_place then
8104: LD_VAR 0 12
8108: PUSH
8109: LD_INT 3
8111: EQUAL
8112: PUSH
8113: LD_VAR 0 16
8117: AND
8118: IFFALSE 8204
// begin repeat ComMoveXY ( unit , safe_place [ 1 ] , safe_place [ 2 ] ) ;
8120: LD_VAR 0 1
8124: PPUSH
8125: LD_VAR 0 16
8129: PUSH
8130: LD_INT 1
8132: ARRAY
8133: PPUSH
8134: LD_VAR 0 16
8138: PUSH
8139: LD_INT 2
8141: ARRAY
8142: PPUSH
8143: CALL_OW 111
// wait ( 0 0$1 ) ;
8147: LD_INT 35
8149: PPUSH
8150: CALL_OW 67
// until GetDistUnitXY ( unit , safe_place [ 1 ] , safe_place [ 2 ] ) < 4 ;
8154: LD_VAR 0 1
8158: PPUSH
8159: LD_VAR 0 16
8163: PUSH
8164: LD_INT 1
8166: ARRAY
8167: PPUSH
8168: LD_VAR 0 16
8172: PUSH
8173: LD_INT 2
8175: ARRAY
8176: PPUSH
8177: CALL_OW 297
8181: PUSH
8182: LD_INT 4
8184: LESS
8185: IFFALSE 8120
// ComStop ( unit ) ;
8187: LD_VAR 0 1
8191: PPUSH
8192: CALL_OW 141
// status = 4 ;
8196: LD_ADDR_VAR 0 12
8200: PUSH
8201: LD_INT 4
8203: ST_TO_ADDR
// end ; if status = 4 then
8204: LD_VAR 0 12
8208: PUSH
8209: LD_INT 4
8211: EQUAL
8212: IFFALSE 8244
// begin repeat wait ( 0 0$1 ) ;
8214: LD_INT 35
8216: PPUSH
8217: CALL_OW 67
// until GetLives ( unit ) = 1000 ;
8221: LD_VAR 0 1
8225: PPUSH
8226: CALL_OW 256
8230: PUSH
8231: LD_INT 1000
8233: EQUAL
8234: IFFALSE 8214
// status = 5 ;
8236: LD_ADDR_VAR 0 12
8240: PUSH
8241: LD_INT 5
8243: ST_TO_ADDR
// end ; if status = 5 then
8244: LD_VAR 0 12
8248: PUSH
8249: LD_INT 5
8251: EQUAL
8252: IFFALSE 8534
// begin p := 999 ;
8254: LD_ADDR_VAR 0 9
8258: PUSH
8259: LD_INT 999
8261: ST_TO_ADDR
// e := [ tmp_path [ 2 ] [ 1 ] , tmp_path [ 2 ] [ 2 ] ] ;
8262: LD_ADDR_VAR 0 14
8266: PUSH
8267: LD_VAR 0 11
8271: PUSH
8272: LD_INT 2
8274: ARRAY
8275: PUSH
8276: LD_INT 1
8278: ARRAY
8279: PUSH
8280: LD_VAR 0 11
8284: PUSH
8285: LD_INT 2
8287: ARRAY
8288: PUSH
8289: LD_INT 2
8291: ARRAY
8292: PUSH
8293: EMPTY
8294: LIST
8295: LIST
8296: ST_TO_ADDR
// c := 1 ;
8297: LD_ADDR_VAR 0 8
8301: PUSH
8302: LD_INT 1
8304: ST_TO_ADDR
// for i = 1 to tmp_path [ 2 ] div 2 do
8305: LD_ADDR_VAR 0 5
8309: PUSH
8310: DOUBLE
8311: LD_INT 1
8313: DEC
8314: ST_TO_ADDR
8315: LD_VAR 0 11
8319: PUSH
8320: LD_INT 2
8322: ARRAY
8323: PUSH
8324: LD_INT 2
8326: DIV
8327: PUSH
8328: FOR_TO
8329: IFFALSE 8461
// begin x := GetDistUnitXY ( unit , tmp_path [ 2 ] [ c ] , tmp_path [ 2 ] [ c + 1 ] ) ;
8331: LD_ADDR_VAR 0 6
8335: PUSH
8336: LD_VAR 0 1
8340: PPUSH
8341: LD_VAR 0 11
8345: PUSH
8346: LD_INT 2
8348: ARRAY
8349: PUSH
8350: LD_VAR 0 8
8354: ARRAY
8355: PPUSH
8356: LD_VAR 0 11
8360: PUSH
8361: LD_INT 2
8363: ARRAY
8364: PUSH
8365: LD_VAR 0 8
8369: PUSH
8370: LD_INT 1
8372: PLUS
8373: ARRAY
8374: PPUSH
8375: CALL_OW 297
8379: ST_TO_ADDR
// if x < p then
8380: LD_VAR 0 6
8384: PUSH
8385: LD_VAR 0 9
8389: LESS
8390: IFFALSE 8445
// begin p := x ;
8392: LD_ADDR_VAR 0 9
8396: PUSH
8397: LD_VAR 0 6
8401: ST_TO_ADDR
// e := [ tmp_path [ 2 ] [ c ] , tmp_path [ 2 ] [ c + 1 ] ] ;
8402: LD_ADDR_VAR 0 14
8406: PUSH
8407: LD_VAR 0 11
8411: PUSH
8412: LD_INT 2
8414: ARRAY
8415: PUSH
8416: LD_VAR 0 8
8420: ARRAY
8421: PUSH
8422: LD_VAR 0 11
8426: PUSH
8427: LD_INT 2
8429: ARRAY
8430: PUSH
8431: LD_VAR 0 8
8435: PUSH
8436: LD_INT 1
8438: PLUS
8439: ARRAY
8440: PUSH
8441: EMPTY
8442: LIST
8443: LIST
8444: ST_TO_ADDR
// end ; c = c + 2 ;
8445: LD_ADDR_VAR 0 8
8449: PUSH
8450: LD_VAR 0 8
8454: PUSH
8455: LD_INT 2
8457: PLUS
8458: ST_TO_ADDR
// end ;
8459: GO 8328
8461: POP
8462: POP
// repeat ComMoveXY ( unit , e [ 1 ] , e [ 2 ] ) ;
8463: LD_VAR 0 1
8467: PPUSH
8468: LD_VAR 0 14
8472: PUSH
8473: LD_INT 1
8475: ARRAY
8476: PPUSH
8477: LD_VAR 0 14
8481: PUSH
8482: LD_INT 2
8484: ARRAY
8485: PPUSH
8486: CALL_OW 111
// wait ( 0 0$1 ) ;
8490: LD_INT 35
8492: PPUSH
8493: CALL_OW 67
// until IsAt ( unit , e [ 1 ] , e [ 2 ] ) ;
8497: LD_VAR 0 1
8501: PPUSH
8502: LD_VAR 0 14
8506: PUSH
8507: LD_INT 1
8509: ARRAY
8510: PPUSH
8511: LD_VAR 0 14
8515: PUSH
8516: LD_INT 2
8518: ARRAY
8519: PPUSH
8520: CALL_OW 307
8524: IFFALSE 8463
// status = 1 ;
8526: LD_ADDR_VAR 0 12
8530: PUSH
8531: LD_INT 1
8533: ST_TO_ADDR
// end ; until IsDead ( unit ) ;
8534: LD_VAR 0 1
8538: PPUSH
8539: CALL_OW 301
8543: IFFALSE 7272
// end ;
8545: LD_VAR 0 4
8549: RET
// export function Talk ( units , type , sequence , sex , class , id , order_id ) ; var i , unit , tmp , unit_id , dialog_id , sex_id , class_id ; begin
8550: LD_INT 0
8552: PPUSH
8553: PPUSH
8554: PPUSH
8555: PPUSH
8556: PPUSH
8557: PPUSH
8558: PPUSH
8559: PPUSH
// if not units or not sequence or not sex in [ sex_male , sex_female , 0 ] or not id or not order_id then
8560: LD_VAR 0 1
8564: NOT
8565: PUSH
8566: LD_VAR 0 3
8570: NOT
8571: OR
8572: PUSH
8573: LD_VAR 0 4
8577: PUSH
8578: LD_INT 1
8580: PUSH
8581: LD_INT 2
8583: PUSH
8584: LD_INT 0
8586: PUSH
8587: EMPTY
8588: LIST
8589: LIST
8590: LIST
8591: IN
8592: NOT
8593: OR
8594: PUSH
8595: LD_VAR 0 6
8599: NOT
8600: OR
8601: PUSH
8602: LD_VAR 0 7
8606: NOT
8607: OR
8608: IFFALSE 8612
// exit ;
8610: GO 9003
// sex_id :=  ;
8612: LD_ADDR_VAR 0 14
8616: PUSH
8617: LD_STRING 
8619: ST_TO_ADDR
// case class of 1 :
8620: LD_VAR 0 5
8624: PUSH
8625: LD_INT 1
8627: DOUBLE
8628: EQUAL
8629: IFTRUE 8633
8631: GO 8644
8633: POP
// class_id := Sol ; 2 :
8634: LD_ADDR_VAR 0 15
8638: PUSH
8639: LD_STRING Sol
8641: ST_TO_ADDR
8642: GO 8702
8644: LD_INT 2
8646: DOUBLE
8647: EQUAL
8648: IFTRUE 8652
8650: GO 8663
8652: POP
// class_id := Eng ; 3 :
8653: LD_ADDR_VAR 0 15
8657: PUSH
8658: LD_STRING Eng
8660: ST_TO_ADDR
8661: GO 8702
8663: LD_INT 3
8665: DOUBLE
8666: EQUAL
8667: IFTRUE 8671
8669: GO 8682
8671: POP
// class_id := Mech ; 4 :
8672: LD_ADDR_VAR 0 15
8676: PUSH
8677: LD_STRING Mech
8679: ST_TO_ADDR
8680: GO 8702
8682: LD_INT 4
8684: DOUBLE
8685: EQUAL
8686: IFTRUE 8690
8688: GO 8701
8690: POP
// class_id := Sci ; end ;
8691: LD_ADDR_VAR 0 15
8695: PUSH
8696: LD_STRING Sci
8698: ST_TO_ADDR
8699: GO 8702
8701: POP
// tmp := UnitFilter ( units , [ f_class , class ] ) ;
8702: LD_ADDR_VAR 0 11
8706: PUSH
8707: LD_VAR 0 1
8711: PPUSH
8712: LD_INT 25
8714: PUSH
8715: LD_VAR 0 5
8719: PUSH
8720: EMPTY
8721: LIST
8722: LIST
8723: PPUSH
8724: CALL_OW 72
8728: ST_TO_ADDR
// if tmp then
8729: LD_VAR 0 11
8733: IFFALSE 8745
// units := tmp ;
8735: LD_ADDR_VAR 0 1
8739: PUSH
8740: LD_VAR 0 11
8744: ST_TO_ADDR
// if sex then
8745: LD_VAR 0 4
8749: IFFALSE 8805
// begin if sex = sex_female then
8751: LD_VAR 0 4
8755: PUSH
8756: LD_INT 2
8758: EQUAL
8759: IFFALSE 8769
// sex_id := F ;
8761: LD_ADDR_VAR 0 14
8765: PUSH
8766: LD_STRING F
8768: ST_TO_ADDR
// units := UnitFilter ( units , [ f_sex , sex ] ) ;
8769: LD_ADDR_VAR 0 1
8773: PUSH
8774: LD_VAR 0 1
8778: PPUSH
8779: LD_INT 26
8781: PUSH
8782: LD_VAR 0 4
8786: PUSH
8787: EMPTY
8788: LIST
8789: LIST
8790: PPUSH
8791: CALL_OW 72
8795: ST_TO_ADDR
// if not units then
8796: LD_VAR 0 1
8800: NOT
8801: IFFALSE 8805
// exit ;
8803: GO 9003
// end ; unit_id := id ;
8805: LD_ADDR_VAR 0 12
8809: PUSH
8810: LD_VAR 0 6
8814: ST_TO_ADDR
// if unit_id > units then
8815: LD_VAR 0 12
8819: PUSH
8820: LD_VAR 0 1
8824: GREATER
8825: IFFALSE 8835
// unit_id := 1 ;
8827: LD_ADDR_VAR 0 12
8831: PUSH
8832: LD_INT 1
8834: ST_TO_ADDR
// if not units [ unit_id ] then
8835: LD_VAR 0 1
8839: PUSH
8840: LD_VAR 0 12
8844: ARRAY
8845: NOT
8846: IFFALSE 8850
// exit ;
8848: GO 9003
// unit := units [ unit_id ] ;
8850: LD_ADDR_VAR 0 10
8854: PUSH
8855: LD_VAR 0 1
8859: PUSH
8860: LD_VAR 0 12
8864: ARRAY
8865: ST_TO_ADDR
// dialog_id := D & sequence & - & sex_id & class_id & id & - & order_id ;
8866: LD_ADDR_VAR 0 13
8870: PUSH
8871: LD_STRING D
8873: PUSH
8874: LD_VAR 0 3
8878: STR
8879: PUSH
8880: LD_STRING -
8882: STR
8883: PUSH
8884: LD_VAR 0 14
8888: STR
8889: PUSH
8890: LD_VAR 0 15
8894: STR
8895: PUSH
8896: LD_VAR 0 6
8900: STR
8901: PUSH
8902: LD_STRING -
8904: STR
8905: PUSH
8906: LD_VAR 0 7
8910: STR
8911: ST_TO_ADDR
// case type of 0 :
8912: LD_VAR 0 2
8916: PUSH
8917: LD_INT 0
8919: DOUBLE
8920: EQUAL
8921: IFTRUE 8925
8923: GO 8942
8925: POP
// Say ( unit , dialog_id ) ; 1 :
8926: LD_VAR 0 10
8930: PPUSH
8931: LD_VAR 0 13
8935: PPUSH
8936: CALL_OW 88
8940: GO 8993
8942: LD_INT 1
8944: DOUBLE
8945: EQUAL
8946: IFTRUE 8950
8948: GO 8967
8950: POP
// SayRadio ( unit , dialog_id ) ; 2 :
8951: LD_VAR 0 10
8955: PPUSH
8956: LD_VAR 0 13
8960: PPUSH
8961: CALL_OW 94
8965: GO 8993
8967: LD_INT 2
8969: DOUBLE
8970: EQUAL
8971: IFTRUE 8975
8973: GO 8992
8975: POP
// ForceSay ( unit , dialog_id ) ; end ;
8976: LD_VAR 0 10
8980: PPUSH
8981: LD_VAR 0 13
8985: PPUSH
8986: CALL_OW 91
8990: GO 8993
8992: POP
// result := unit ;
8993: LD_ADDR_VAR 0 8
8997: PUSH
8998: LD_VAR 0 10
9002: ST_TO_ADDR
// end ;
9003: LD_VAR 0 8
9007: RET
// export function Reindex ( array , i_from , i_to , direction ) ; var i , j , k , d , tmp , length ; begin
9008: LD_INT 0
9010: PPUSH
9011: PPUSH
9012: PPUSH
9013: PPUSH
9014: PPUSH
9015: PPUSH
9016: PPUSH
// result := array ;
9017: LD_ADDR_VAR 0 5
9021: PUSH
9022: LD_VAR 0 1
9026: ST_TO_ADDR
// if not array or not i_from or not i_to or i_from > array or i_to > array then
9027: LD_VAR 0 1
9031: NOT
9032: PUSH
9033: LD_VAR 0 2
9037: NOT
9038: OR
9039: PUSH
9040: LD_VAR 0 3
9044: NOT
9045: OR
9046: PUSH
9047: LD_VAR 0 2
9051: PUSH
9052: LD_VAR 0 1
9056: GREATER
9057: OR
9058: PUSH
9059: LD_VAR 0 3
9063: PUSH
9064: LD_VAR 0 1
9068: GREATER
9069: OR
9070: IFFALSE 9074
// exit ;
9072: GO 9370
// if direction then
9074: LD_VAR 0 4
9078: IFFALSE 9142
// begin d := 1 ;
9080: LD_ADDR_VAR 0 9
9084: PUSH
9085: LD_INT 1
9087: ST_TO_ADDR
// if i_from > i_to then
9088: LD_VAR 0 2
9092: PUSH
9093: LD_VAR 0 3
9097: GREATER
9098: IFFALSE 9124
// length := ( array - i_from ) + i_to else
9100: LD_ADDR_VAR 0 11
9104: PUSH
9105: LD_VAR 0 1
9109: PUSH
9110: LD_VAR 0 2
9114: MINUS
9115: PUSH
9116: LD_VAR 0 3
9120: PLUS
9121: ST_TO_ADDR
9122: GO 9140
// length := i_to - i_from ;
9124: LD_ADDR_VAR 0 11
9128: PUSH
9129: LD_VAR 0 3
9133: PUSH
9134: LD_VAR 0 2
9138: MINUS
9139: ST_TO_ADDR
// end else
9140: GO 9203
// begin d := - 1 ;
9142: LD_ADDR_VAR 0 9
9146: PUSH
9147: LD_INT 1
9149: NEG
9150: ST_TO_ADDR
// if i_from > i_to then
9151: LD_VAR 0 2
9155: PUSH
9156: LD_VAR 0 3
9160: GREATER
9161: IFFALSE 9181
// length := i_from - i_to else
9163: LD_ADDR_VAR 0 11
9167: PUSH
9168: LD_VAR 0 2
9172: PUSH
9173: LD_VAR 0 3
9177: MINUS
9178: ST_TO_ADDR
9179: GO 9203
// length := ( array - i_to ) + i_from ;
9181: LD_ADDR_VAR 0 11
9185: PUSH
9186: LD_VAR 0 1
9190: PUSH
9191: LD_VAR 0 3
9195: MINUS
9196: PUSH
9197: LD_VAR 0 2
9201: PLUS
9202: ST_TO_ADDR
// end ; if not length then
9203: LD_VAR 0 11
9207: NOT
9208: IFFALSE 9212
// exit ;
9210: GO 9370
// tmp := array ;
9212: LD_ADDR_VAR 0 10
9216: PUSH
9217: LD_VAR 0 1
9221: ST_TO_ADDR
// for i = 1 to length do
9222: LD_ADDR_VAR 0 6
9226: PUSH
9227: DOUBLE
9228: LD_INT 1
9230: DEC
9231: ST_TO_ADDR
9232: LD_VAR 0 11
9236: PUSH
9237: FOR_TO
9238: IFFALSE 9358
// begin for j = 1 to array do
9240: LD_ADDR_VAR 0 7
9244: PUSH
9245: DOUBLE
9246: LD_INT 1
9248: DEC
9249: ST_TO_ADDR
9250: LD_VAR 0 1
9254: PUSH
9255: FOR_TO
9256: IFFALSE 9344
// begin k := j + d ;
9258: LD_ADDR_VAR 0 8
9262: PUSH
9263: LD_VAR 0 7
9267: PUSH
9268: LD_VAR 0 9
9272: PLUS
9273: ST_TO_ADDR
// if k > array then
9274: LD_VAR 0 8
9278: PUSH
9279: LD_VAR 0 1
9283: GREATER
9284: IFFALSE 9294
// k := 1 ;
9286: LD_ADDR_VAR 0 8
9290: PUSH
9291: LD_INT 1
9293: ST_TO_ADDR
// if not k then
9294: LD_VAR 0 8
9298: NOT
9299: IFFALSE 9311
// k := array ;
9301: LD_ADDR_VAR 0 8
9305: PUSH
9306: LD_VAR 0 1
9310: ST_TO_ADDR
// tmp := Replace ( tmp , k , array [ j ] ) ;
9311: LD_ADDR_VAR 0 10
9315: PUSH
9316: LD_VAR 0 10
9320: PPUSH
9321: LD_VAR 0 8
9325: PPUSH
9326: LD_VAR 0 1
9330: PUSH
9331: LD_VAR 0 7
9335: ARRAY
9336: PPUSH
9337: CALL_OW 1
9341: ST_TO_ADDR
// end ;
9342: GO 9255
9344: POP
9345: POP
// array := tmp ;
9346: LD_ADDR_VAR 0 1
9350: PUSH
9351: LD_VAR 0 10
9355: ST_TO_ADDR
// end ;
9356: GO 9237
9358: POP
9359: POP
// result := array ;
9360: LD_ADDR_VAR 0 5
9364: PUSH
9365: LD_VAR 0 1
9369: ST_TO_ADDR
// end ;
9370: LD_VAR 0 5
9374: RET
// export function GetBuildingHexes ( btype , x , y , dir , nation , mode ) ; var i , temp_list , temp_list2 ; var DepotAm0 , DepotAm1 , DepotAm2 , DepotAm3 , DepotAm4 , DepotAm5 , DepotAr0 , DepotAr1 , DepotAr2 , DepotAr3 , DepotAr4 , DepotAr5 , DepotRu0 , DepotRu1 , DepotRu2 , DepotRu3 , DepotRu4 , DepotRu5 ; var Factory0 , Factory1 , Factory2 , Factory3 , Factory4 , Factory5 , Ext0 , Ext1 , Ext2 , Ext3 , Ext4 , Ext5 ; var Lab0 , Lab1 , Lab2 , Lab3 , Lab4 , Lab5 , ControlTower0 , ControlTower1 , ControlTower2 , ControlTower3 , ControlTower4 , ControlTower5 ; var Barracks0 , Barracks1 , Barracks2 , Barracks3 , Barracks4 , Barracks5 , Bunker0 , Bunker1 , Bunker2 , Bunker3 , Bunker4 , Bunker5 ; begin
9375: LD_INT 0
9377: PPUSH
9378: PPUSH
9379: PPUSH
9380: PPUSH
9381: PPUSH
9382: PPUSH
9383: PPUSH
9384: PPUSH
9385: PPUSH
9386: PPUSH
9387: PPUSH
9388: PPUSH
9389: PPUSH
9390: PPUSH
9391: PPUSH
9392: PPUSH
9393: PPUSH
9394: PPUSH
9395: PPUSH
9396: PPUSH
9397: PPUSH
9398: PPUSH
9399: PPUSH
9400: PPUSH
9401: PPUSH
9402: PPUSH
9403: PPUSH
9404: PPUSH
9405: PPUSH
9406: PPUSH
9407: PPUSH
9408: PPUSH
9409: PPUSH
9410: PPUSH
9411: PPUSH
9412: PPUSH
9413: PPUSH
9414: PPUSH
9415: PPUSH
9416: PPUSH
9417: PPUSH
9418: PPUSH
9419: PPUSH
9420: PPUSH
9421: PPUSH
9422: PPUSH
9423: PPUSH
9424: PPUSH
9425: PPUSH
9426: PPUSH
9427: PPUSH
9428: PPUSH
9429: PPUSH
9430: PPUSH
9431: PPUSH
9432: PPUSH
9433: PPUSH
9434: PPUSH
// result = [ ] ;
9435: LD_ADDR_VAR 0 7
9439: PUSH
9440: EMPTY
9441: ST_TO_ADDR
// temp_list = [ ] ;
9442: LD_ADDR_VAR 0 9
9446: PUSH
9447: EMPTY
9448: ST_TO_ADDR
// if not dir in [ 0 , 1 , 2 , 3 , 4 , 5 ] or ( btype in [ b_depot , b_warehouse ] and not nation in [ nation_american , nation_arabian , nation_russian ] ) then
9449: LD_VAR 0 4
9453: PUSH
9454: LD_INT 0
9456: PUSH
9457: LD_INT 1
9459: PUSH
9460: LD_INT 2
9462: PUSH
9463: LD_INT 3
9465: PUSH
9466: LD_INT 4
9468: PUSH
9469: LD_INT 5
9471: PUSH
9472: EMPTY
9473: LIST
9474: LIST
9475: LIST
9476: LIST
9477: LIST
9478: LIST
9479: IN
9480: NOT
9481: PUSH
9482: LD_VAR 0 1
9486: PUSH
9487: LD_INT 0
9489: PUSH
9490: LD_INT 1
9492: PUSH
9493: EMPTY
9494: LIST
9495: LIST
9496: IN
9497: PUSH
9498: LD_VAR 0 5
9502: PUSH
9503: LD_INT 1
9505: PUSH
9506: LD_INT 2
9508: PUSH
9509: LD_INT 3
9511: PUSH
9512: EMPTY
9513: LIST
9514: LIST
9515: LIST
9516: IN
9517: NOT
9518: AND
9519: OR
9520: IFFALSE 9524
// exit ;
9522: GO 27909
// if btype in [ b_lab , b_lab_half , b_lab_full , b_lab_biological , b_lab_computer , b_lab_opto , b_lab_siberium , b_lab_spacetime , b_lab_weapon ] then
9524: LD_VAR 0 1
9528: PUSH
9529: LD_INT 6
9531: PUSH
9532: LD_INT 7
9534: PUSH
9535: LD_INT 8
9537: PUSH
9538: LD_INT 13
9540: PUSH
9541: LD_INT 12
9543: PUSH
9544: LD_INT 15
9546: PUSH
9547: LD_INT 11
9549: PUSH
9550: LD_INT 14
9552: PUSH
9553: LD_INT 10
9555: PUSH
9556: EMPTY
9557: LIST
9558: LIST
9559: LIST
9560: LIST
9561: LIST
9562: LIST
9563: LIST
9564: LIST
9565: LIST
9566: IN
9567: IFFALSE 9577
// btype = b_lab ;
9569: LD_ADDR_VAR 0 1
9573: PUSH
9574: LD_INT 6
9576: ST_TO_ADDR
// if not mode in [ 0 , 1 , 2 ] or ( not btype in [ b_depot , b_warehouse , b_workshop , b_factory , b_lab , b_control_tower , b_armoury , b_barracks , b_breastwork , b_bunker , b_turret ] and mode = 1 ) or ( not btype in [ b_workshop , b_factory ] and mode = 2 ) then
9577: LD_VAR 0 6
9581: PUSH
9582: LD_INT 0
9584: PUSH
9585: LD_INT 1
9587: PUSH
9588: LD_INT 2
9590: PUSH
9591: EMPTY
9592: LIST
9593: LIST
9594: LIST
9595: IN
9596: NOT
9597: PUSH
9598: LD_VAR 0 1
9602: PUSH
9603: LD_INT 0
9605: PUSH
9606: LD_INT 1
9608: PUSH
9609: LD_INT 2
9611: PUSH
9612: LD_INT 3
9614: PUSH
9615: LD_INT 6
9617: PUSH
9618: LD_INT 36
9620: PUSH
9621: LD_INT 4
9623: PUSH
9624: LD_INT 5
9626: PUSH
9627: LD_INT 31
9629: PUSH
9630: LD_INT 32
9632: PUSH
9633: LD_INT 33
9635: PUSH
9636: EMPTY
9637: LIST
9638: LIST
9639: LIST
9640: LIST
9641: LIST
9642: LIST
9643: LIST
9644: LIST
9645: LIST
9646: LIST
9647: LIST
9648: IN
9649: NOT
9650: PUSH
9651: LD_VAR 0 6
9655: PUSH
9656: LD_INT 1
9658: EQUAL
9659: AND
9660: OR
9661: PUSH
9662: LD_VAR 0 1
9666: PUSH
9667: LD_INT 2
9669: PUSH
9670: LD_INT 3
9672: PUSH
9673: EMPTY
9674: LIST
9675: LIST
9676: IN
9677: NOT
9678: PUSH
9679: LD_VAR 0 6
9683: PUSH
9684: LD_INT 2
9686: EQUAL
9687: AND
9688: OR
9689: IFFALSE 9699
// mode = 0 ;
9691: LD_ADDR_VAR 0 6
9695: PUSH
9696: LD_INT 0
9698: ST_TO_ADDR
// case mode of 0 :
9699: LD_VAR 0 6
9703: PUSH
9704: LD_INT 0
9706: DOUBLE
9707: EQUAL
9708: IFTRUE 9712
9710: GO 21165
9712: POP
// begin DepotAm0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
9713: LD_ADDR_VAR 0 11
9717: PUSH
9718: LD_INT 0
9720: PUSH
9721: LD_INT 0
9723: PUSH
9724: EMPTY
9725: LIST
9726: LIST
9727: PUSH
9728: LD_INT 0
9730: PUSH
9731: LD_INT 1
9733: NEG
9734: PUSH
9735: EMPTY
9736: LIST
9737: LIST
9738: PUSH
9739: LD_INT 1
9741: PUSH
9742: LD_INT 0
9744: PUSH
9745: EMPTY
9746: LIST
9747: LIST
9748: PUSH
9749: LD_INT 1
9751: PUSH
9752: LD_INT 1
9754: PUSH
9755: EMPTY
9756: LIST
9757: LIST
9758: PUSH
9759: LD_INT 0
9761: PUSH
9762: LD_INT 1
9764: PUSH
9765: EMPTY
9766: LIST
9767: LIST
9768: PUSH
9769: LD_INT 1
9771: NEG
9772: PUSH
9773: LD_INT 0
9775: PUSH
9776: EMPTY
9777: LIST
9778: LIST
9779: PUSH
9780: LD_INT 1
9782: NEG
9783: PUSH
9784: LD_INT 1
9786: NEG
9787: PUSH
9788: EMPTY
9789: LIST
9790: LIST
9791: PUSH
9792: LD_INT 1
9794: NEG
9795: PUSH
9796: LD_INT 2
9798: NEG
9799: PUSH
9800: EMPTY
9801: LIST
9802: LIST
9803: PUSH
9804: LD_INT 0
9806: PUSH
9807: LD_INT 2
9809: NEG
9810: PUSH
9811: EMPTY
9812: LIST
9813: LIST
9814: PUSH
9815: LD_INT 1
9817: PUSH
9818: LD_INT 1
9820: NEG
9821: PUSH
9822: EMPTY
9823: LIST
9824: LIST
9825: PUSH
9826: LD_INT 1
9828: PUSH
9829: LD_INT 2
9831: PUSH
9832: EMPTY
9833: LIST
9834: LIST
9835: PUSH
9836: LD_INT 0
9838: PUSH
9839: LD_INT 2
9841: PUSH
9842: EMPTY
9843: LIST
9844: LIST
9845: PUSH
9846: LD_INT 1
9848: NEG
9849: PUSH
9850: LD_INT 1
9852: PUSH
9853: EMPTY
9854: LIST
9855: LIST
9856: PUSH
9857: LD_INT 1
9859: PUSH
9860: LD_INT 3
9862: PUSH
9863: EMPTY
9864: LIST
9865: LIST
9866: PUSH
9867: LD_INT 0
9869: PUSH
9870: LD_INT 3
9872: PUSH
9873: EMPTY
9874: LIST
9875: LIST
9876: PUSH
9877: LD_INT 1
9879: NEG
9880: PUSH
9881: LD_INT 2
9883: PUSH
9884: EMPTY
9885: LIST
9886: LIST
9887: PUSH
9888: EMPTY
9889: LIST
9890: LIST
9891: LIST
9892: LIST
9893: LIST
9894: LIST
9895: LIST
9896: LIST
9897: LIST
9898: LIST
9899: LIST
9900: LIST
9901: LIST
9902: LIST
9903: LIST
9904: LIST
9905: ST_TO_ADDR
// DepotAm1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
9906: LD_ADDR_VAR 0 12
9910: PUSH
9911: LD_INT 0
9913: PUSH
9914: LD_INT 0
9916: PUSH
9917: EMPTY
9918: LIST
9919: LIST
9920: PUSH
9921: LD_INT 0
9923: PUSH
9924: LD_INT 1
9926: NEG
9927: PUSH
9928: EMPTY
9929: LIST
9930: LIST
9931: PUSH
9932: LD_INT 1
9934: PUSH
9935: LD_INT 0
9937: PUSH
9938: EMPTY
9939: LIST
9940: LIST
9941: PUSH
9942: LD_INT 1
9944: PUSH
9945: LD_INT 1
9947: PUSH
9948: EMPTY
9949: LIST
9950: LIST
9951: PUSH
9952: LD_INT 0
9954: PUSH
9955: LD_INT 1
9957: PUSH
9958: EMPTY
9959: LIST
9960: LIST
9961: PUSH
9962: LD_INT 1
9964: NEG
9965: PUSH
9966: LD_INT 0
9968: PUSH
9969: EMPTY
9970: LIST
9971: LIST
9972: PUSH
9973: LD_INT 1
9975: NEG
9976: PUSH
9977: LD_INT 1
9979: NEG
9980: PUSH
9981: EMPTY
9982: LIST
9983: LIST
9984: PUSH
9985: LD_INT 1
9987: PUSH
9988: LD_INT 1
9990: NEG
9991: PUSH
9992: EMPTY
9993: LIST
9994: LIST
9995: PUSH
9996: LD_INT 2
9998: PUSH
9999: LD_INT 0
10001: PUSH
10002: EMPTY
10003: LIST
10004: LIST
10005: PUSH
10006: LD_INT 2
10008: PUSH
10009: LD_INT 1
10011: PUSH
10012: EMPTY
10013: LIST
10014: LIST
10015: PUSH
10016: LD_INT 1
10018: NEG
10019: PUSH
10020: LD_INT 1
10022: PUSH
10023: EMPTY
10024: LIST
10025: LIST
10026: PUSH
10027: LD_INT 2
10029: NEG
10030: PUSH
10031: LD_INT 0
10033: PUSH
10034: EMPTY
10035: LIST
10036: LIST
10037: PUSH
10038: LD_INT 2
10040: NEG
10041: PUSH
10042: LD_INT 1
10044: NEG
10045: PUSH
10046: EMPTY
10047: LIST
10048: LIST
10049: PUSH
10050: LD_INT 2
10052: NEG
10053: PUSH
10054: LD_INT 1
10056: PUSH
10057: EMPTY
10058: LIST
10059: LIST
10060: PUSH
10061: LD_INT 3
10063: NEG
10064: PUSH
10065: LD_INT 0
10067: PUSH
10068: EMPTY
10069: LIST
10070: LIST
10071: PUSH
10072: LD_INT 3
10074: NEG
10075: PUSH
10076: LD_INT 1
10078: NEG
10079: PUSH
10080: EMPTY
10081: LIST
10082: LIST
10083: PUSH
10084: EMPTY
10085: LIST
10086: LIST
10087: LIST
10088: LIST
10089: LIST
10090: LIST
10091: LIST
10092: LIST
10093: LIST
10094: LIST
10095: LIST
10096: LIST
10097: LIST
10098: LIST
10099: LIST
10100: LIST
10101: ST_TO_ADDR
// DepotAm2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
10102: LD_ADDR_VAR 0 13
10106: PUSH
10107: LD_INT 0
10109: PUSH
10110: LD_INT 0
10112: PUSH
10113: EMPTY
10114: LIST
10115: LIST
10116: PUSH
10117: LD_INT 0
10119: PUSH
10120: LD_INT 1
10122: NEG
10123: PUSH
10124: EMPTY
10125: LIST
10126: LIST
10127: PUSH
10128: LD_INT 1
10130: PUSH
10131: LD_INT 0
10133: PUSH
10134: EMPTY
10135: LIST
10136: LIST
10137: PUSH
10138: LD_INT 1
10140: PUSH
10141: LD_INT 1
10143: PUSH
10144: EMPTY
10145: LIST
10146: LIST
10147: PUSH
10148: LD_INT 0
10150: PUSH
10151: LD_INT 1
10153: PUSH
10154: EMPTY
10155: LIST
10156: LIST
10157: PUSH
10158: LD_INT 1
10160: NEG
10161: PUSH
10162: LD_INT 0
10164: PUSH
10165: EMPTY
10166: LIST
10167: LIST
10168: PUSH
10169: LD_INT 1
10171: NEG
10172: PUSH
10173: LD_INT 1
10175: NEG
10176: PUSH
10177: EMPTY
10178: LIST
10179: LIST
10180: PUSH
10181: LD_INT 1
10183: NEG
10184: PUSH
10185: LD_INT 2
10187: NEG
10188: PUSH
10189: EMPTY
10190: LIST
10191: LIST
10192: PUSH
10193: LD_INT 2
10195: PUSH
10196: LD_INT 1
10198: PUSH
10199: EMPTY
10200: LIST
10201: LIST
10202: PUSH
10203: LD_INT 2
10205: PUSH
10206: LD_INT 2
10208: PUSH
10209: EMPTY
10210: LIST
10211: LIST
10212: PUSH
10213: LD_INT 1
10215: PUSH
10216: LD_INT 2
10218: PUSH
10219: EMPTY
10220: LIST
10221: LIST
10222: PUSH
10223: LD_INT 2
10225: NEG
10226: PUSH
10227: LD_INT 1
10229: NEG
10230: PUSH
10231: EMPTY
10232: LIST
10233: LIST
10234: PUSH
10235: LD_INT 2
10237: NEG
10238: PUSH
10239: LD_INT 2
10241: NEG
10242: PUSH
10243: EMPTY
10244: LIST
10245: LIST
10246: PUSH
10247: LD_INT 2
10249: NEG
10250: PUSH
10251: LD_INT 3
10253: NEG
10254: PUSH
10255: EMPTY
10256: LIST
10257: LIST
10258: PUSH
10259: LD_INT 3
10261: NEG
10262: PUSH
10263: LD_INT 2
10265: NEG
10266: PUSH
10267: EMPTY
10268: LIST
10269: LIST
10270: PUSH
10271: LD_INT 3
10273: NEG
10274: PUSH
10275: LD_INT 3
10277: NEG
10278: PUSH
10279: EMPTY
10280: LIST
10281: LIST
10282: PUSH
10283: EMPTY
10284: LIST
10285: LIST
10286: LIST
10287: LIST
10288: LIST
10289: LIST
10290: LIST
10291: LIST
10292: LIST
10293: LIST
10294: LIST
10295: LIST
10296: LIST
10297: LIST
10298: LIST
10299: LIST
10300: ST_TO_ADDR
// DepotAm3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
10301: LD_ADDR_VAR 0 14
10305: PUSH
10306: LD_INT 0
10308: PUSH
10309: LD_INT 0
10311: PUSH
10312: EMPTY
10313: LIST
10314: LIST
10315: PUSH
10316: LD_INT 0
10318: PUSH
10319: LD_INT 1
10321: NEG
10322: PUSH
10323: EMPTY
10324: LIST
10325: LIST
10326: PUSH
10327: LD_INT 1
10329: PUSH
10330: LD_INT 0
10332: PUSH
10333: EMPTY
10334: LIST
10335: LIST
10336: PUSH
10337: LD_INT 1
10339: PUSH
10340: LD_INT 1
10342: PUSH
10343: EMPTY
10344: LIST
10345: LIST
10346: PUSH
10347: LD_INT 0
10349: PUSH
10350: LD_INT 1
10352: PUSH
10353: EMPTY
10354: LIST
10355: LIST
10356: PUSH
10357: LD_INT 1
10359: NEG
10360: PUSH
10361: LD_INT 0
10363: PUSH
10364: EMPTY
10365: LIST
10366: LIST
10367: PUSH
10368: LD_INT 1
10370: NEG
10371: PUSH
10372: LD_INT 1
10374: NEG
10375: PUSH
10376: EMPTY
10377: LIST
10378: LIST
10379: PUSH
10380: LD_INT 1
10382: NEG
10383: PUSH
10384: LD_INT 2
10386: NEG
10387: PUSH
10388: EMPTY
10389: LIST
10390: LIST
10391: PUSH
10392: LD_INT 0
10394: PUSH
10395: LD_INT 2
10397: NEG
10398: PUSH
10399: EMPTY
10400: LIST
10401: LIST
10402: PUSH
10403: LD_INT 1
10405: PUSH
10406: LD_INT 1
10408: NEG
10409: PUSH
10410: EMPTY
10411: LIST
10412: LIST
10413: PUSH
10414: LD_INT 1
10416: PUSH
10417: LD_INT 2
10419: PUSH
10420: EMPTY
10421: LIST
10422: LIST
10423: PUSH
10424: LD_INT 0
10426: PUSH
10427: LD_INT 2
10429: PUSH
10430: EMPTY
10431: LIST
10432: LIST
10433: PUSH
10434: LD_INT 1
10436: NEG
10437: PUSH
10438: LD_INT 1
10440: PUSH
10441: EMPTY
10442: LIST
10443: LIST
10444: PUSH
10445: LD_INT 1
10447: NEG
10448: PUSH
10449: LD_INT 3
10451: NEG
10452: PUSH
10453: EMPTY
10454: LIST
10455: LIST
10456: PUSH
10457: LD_INT 0
10459: PUSH
10460: LD_INT 3
10462: NEG
10463: PUSH
10464: EMPTY
10465: LIST
10466: LIST
10467: PUSH
10468: LD_INT 1
10470: PUSH
10471: LD_INT 2
10473: NEG
10474: PUSH
10475: EMPTY
10476: LIST
10477: LIST
10478: PUSH
10479: EMPTY
10480: LIST
10481: LIST
10482: LIST
10483: LIST
10484: LIST
10485: LIST
10486: LIST
10487: LIST
10488: LIST
10489: LIST
10490: LIST
10491: LIST
10492: LIST
10493: LIST
10494: LIST
10495: LIST
10496: ST_TO_ADDR
// DepotAm4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
10497: LD_ADDR_VAR 0 15
10501: PUSH
10502: LD_INT 0
10504: PUSH
10505: LD_INT 0
10507: PUSH
10508: EMPTY
10509: LIST
10510: LIST
10511: PUSH
10512: LD_INT 0
10514: PUSH
10515: LD_INT 1
10517: NEG
10518: PUSH
10519: EMPTY
10520: LIST
10521: LIST
10522: PUSH
10523: LD_INT 1
10525: PUSH
10526: LD_INT 0
10528: PUSH
10529: EMPTY
10530: LIST
10531: LIST
10532: PUSH
10533: LD_INT 1
10535: PUSH
10536: LD_INT 1
10538: PUSH
10539: EMPTY
10540: LIST
10541: LIST
10542: PUSH
10543: LD_INT 0
10545: PUSH
10546: LD_INT 1
10548: PUSH
10549: EMPTY
10550: LIST
10551: LIST
10552: PUSH
10553: LD_INT 1
10555: NEG
10556: PUSH
10557: LD_INT 0
10559: PUSH
10560: EMPTY
10561: LIST
10562: LIST
10563: PUSH
10564: LD_INT 1
10566: NEG
10567: PUSH
10568: LD_INT 1
10570: NEG
10571: PUSH
10572: EMPTY
10573: LIST
10574: LIST
10575: PUSH
10576: LD_INT 1
10578: PUSH
10579: LD_INT 1
10581: NEG
10582: PUSH
10583: EMPTY
10584: LIST
10585: LIST
10586: PUSH
10587: LD_INT 2
10589: PUSH
10590: LD_INT 0
10592: PUSH
10593: EMPTY
10594: LIST
10595: LIST
10596: PUSH
10597: LD_INT 2
10599: PUSH
10600: LD_INT 1
10602: PUSH
10603: EMPTY
10604: LIST
10605: LIST
10606: PUSH
10607: LD_INT 1
10609: NEG
10610: PUSH
10611: LD_INT 1
10613: PUSH
10614: EMPTY
10615: LIST
10616: LIST
10617: PUSH
10618: LD_INT 2
10620: NEG
10621: PUSH
10622: LD_INT 0
10624: PUSH
10625: EMPTY
10626: LIST
10627: LIST
10628: PUSH
10629: LD_INT 2
10631: NEG
10632: PUSH
10633: LD_INT 1
10635: NEG
10636: PUSH
10637: EMPTY
10638: LIST
10639: LIST
10640: PUSH
10641: LD_INT 2
10643: PUSH
10644: LD_INT 1
10646: NEG
10647: PUSH
10648: EMPTY
10649: LIST
10650: LIST
10651: PUSH
10652: LD_INT 3
10654: PUSH
10655: LD_INT 0
10657: PUSH
10658: EMPTY
10659: LIST
10660: LIST
10661: PUSH
10662: LD_INT 3
10664: PUSH
10665: LD_INT 1
10667: PUSH
10668: EMPTY
10669: LIST
10670: LIST
10671: PUSH
10672: EMPTY
10673: LIST
10674: LIST
10675: LIST
10676: LIST
10677: LIST
10678: LIST
10679: LIST
10680: LIST
10681: LIST
10682: LIST
10683: LIST
10684: LIST
10685: LIST
10686: LIST
10687: LIST
10688: LIST
10689: ST_TO_ADDR
// DepotAm5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
10690: LD_ADDR_VAR 0 16
10694: PUSH
10695: LD_INT 0
10697: PUSH
10698: LD_INT 0
10700: PUSH
10701: EMPTY
10702: LIST
10703: LIST
10704: PUSH
10705: LD_INT 0
10707: PUSH
10708: LD_INT 1
10710: NEG
10711: PUSH
10712: EMPTY
10713: LIST
10714: LIST
10715: PUSH
10716: LD_INT 1
10718: PUSH
10719: LD_INT 0
10721: PUSH
10722: EMPTY
10723: LIST
10724: LIST
10725: PUSH
10726: LD_INT 1
10728: PUSH
10729: LD_INT 1
10731: PUSH
10732: EMPTY
10733: LIST
10734: LIST
10735: PUSH
10736: LD_INT 0
10738: PUSH
10739: LD_INT 1
10741: PUSH
10742: EMPTY
10743: LIST
10744: LIST
10745: PUSH
10746: LD_INT 1
10748: NEG
10749: PUSH
10750: LD_INT 0
10752: PUSH
10753: EMPTY
10754: LIST
10755: LIST
10756: PUSH
10757: LD_INT 1
10759: NEG
10760: PUSH
10761: LD_INT 1
10763: NEG
10764: PUSH
10765: EMPTY
10766: LIST
10767: LIST
10768: PUSH
10769: LD_INT 1
10771: NEG
10772: PUSH
10773: LD_INT 2
10775: NEG
10776: PUSH
10777: EMPTY
10778: LIST
10779: LIST
10780: PUSH
10781: LD_INT 2
10783: PUSH
10784: LD_INT 1
10786: PUSH
10787: EMPTY
10788: LIST
10789: LIST
10790: PUSH
10791: LD_INT 2
10793: PUSH
10794: LD_INT 2
10796: PUSH
10797: EMPTY
10798: LIST
10799: LIST
10800: PUSH
10801: LD_INT 1
10803: PUSH
10804: LD_INT 2
10806: PUSH
10807: EMPTY
10808: LIST
10809: LIST
10810: PUSH
10811: LD_INT 2
10813: NEG
10814: PUSH
10815: LD_INT 1
10817: NEG
10818: PUSH
10819: EMPTY
10820: LIST
10821: LIST
10822: PUSH
10823: LD_INT 2
10825: NEG
10826: PUSH
10827: LD_INT 2
10829: NEG
10830: PUSH
10831: EMPTY
10832: LIST
10833: LIST
10834: PUSH
10835: LD_INT 3
10837: PUSH
10838: LD_INT 2
10840: PUSH
10841: EMPTY
10842: LIST
10843: LIST
10844: PUSH
10845: LD_INT 3
10847: PUSH
10848: LD_INT 3
10850: PUSH
10851: EMPTY
10852: LIST
10853: LIST
10854: PUSH
10855: LD_INT 2
10857: PUSH
10858: LD_INT 3
10860: PUSH
10861: EMPTY
10862: LIST
10863: LIST
10864: PUSH
10865: EMPTY
10866: LIST
10867: LIST
10868: LIST
10869: LIST
10870: LIST
10871: LIST
10872: LIST
10873: LIST
10874: LIST
10875: LIST
10876: LIST
10877: LIST
10878: LIST
10879: LIST
10880: LIST
10881: LIST
10882: ST_TO_ADDR
// DepotAr0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10883: LD_ADDR_VAR 0 17
10887: PUSH
10888: LD_INT 0
10890: PUSH
10891: LD_INT 0
10893: PUSH
10894: EMPTY
10895: LIST
10896: LIST
10897: PUSH
10898: LD_INT 0
10900: PUSH
10901: LD_INT 1
10903: NEG
10904: PUSH
10905: EMPTY
10906: LIST
10907: LIST
10908: PUSH
10909: LD_INT 1
10911: PUSH
10912: LD_INT 0
10914: PUSH
10915: EMPTY
10916: LIST
10917: LIST
10918: PUSH
10919: LD_INT 1
10921: PUSH
10922: LD_INT 1
10924: PUSH
10925: EMPTY
10926: LIST
10927: LIST
10928: PUSH
10929: LD_INT 0
10931: PUSH
10932: LD_INT 1
10934: PUSH
10935: EMPTY
10936: LIST
10937: LIST
10938: PUSH
10939: LD_INT 1
10941: NEG
10942: PUSH
10943: LD_INT 0
10945: PUSH
10946: EMPTY
10947: LIST
10948: LIST
10949: PUSH
10950: LD_INT 1
10952: NEG
10953: PUSH
10954: LD_INT 1
10956: NEG
10957: PUSH
10958: EMPTY
10959: LIST
10960: LIST
10961: PUSH
10962: LD_INT 1
10964: NEG
10965: PUSH
10966: LD_INT 2
10968: NEG
10969: PUSH
10970: EMPTY
10971: LIST
10972: LIST
10973: PUSH
10974: LD_INT 0
10976: PUSH
10977: LD_INT 2
10979: NEG
10980: PUSH
10981: EMPTY
10982: LIST
10983: LIST
10984: PUSH
10985: LD_INT 1
10987: PUSH
10988: LD_INT 1
10990: NEG
10991: PUSH
10992: EMPTY
10993: LIST
10994: LIST
10995: PUSH
10996: LD_INT 2
10998: PUSH
10999: LD_INT 0
11001: PUSH
11002: EMPTY
11003: LIST
11004: LIST
11005: PUSH
11006: LD_INT 2
11008: PUSH
11009: LD_INT 1
11011: PUSH
11012: EMPTY
11013: LIST
11014: LIST
11015: PUSH
11016: LD_INT 2
11018: PUSH
11019: LD_INT 2
11021: PUSH
11022: EMPTY
11023: LIST
11024: LIST
11025: PUSH
11026: LD_INT 1
11028: PUSH
11029: LD_INT 2
11031: PUSH
11032: EMPTY
11033: LIST
11034: LIST
11035: PUSH
11036: LD_INT 0
11038: PUSH
11039: LD_INT 2
11041: PUSH
11042: EMPTY
11043: LIST
11044: LIST
11045: PUSH
11046: LD_INT 1
11048: NEG
11049: PUSH
11050: LD_INT 1
11052: PUSH
11053: EMPTY
11054: LIST
11055: LIST
11056: PUSH
11057: LD_INT 2
11059: NEG
11060: PUSH
11061: LD_INT 0
11063: PUSH
11064: EMPTY
11065: LIST
11066: LIST
11067: PUSH
11068: LD_INT 2
11070: NEG
11071: PUSH
11072: LD_INT 1
11074: NEG
11075: PUSH
11076: EMPTY
11077: LIST
11078: LIST
11079: PUSH
11080: LD_INT 2
11082: NEG
11083: PUSH
11084: LD_INT 2
11086: NEG
11087: PUSH
11088: EMPTY
11089: LIST
11090: LIST
11091: PUSH
11092: EMPTY
11093: LIST
11094: LIST
11095: LIST
11096: LIST
11097: LIST
11098: LIST
11099: LIST
11100: LIST
11101: LIST
11102: LIST
11103: LIST
11104: LIST
11105: LIST
11106: LIST
11107: LIST
11108: LIST
11109: LIST
11110: LIST
11111: LIST
11112: ST_TO_ADDR
// DepotAr1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
11113: LD_ADDR_VAR 0 18
11117: PUSH
11118: LD_INT 0
11120: PUSH
11121: LD_INT 0
11123: PUSH
11124: EMPTY
11125: LIST
11126: LIST
11127: PUSH
11128: LD_INT 0
11130: PUSH
11131: LD_INT 1
11133: NEG
11134: PUSH
11135: EMPTY
11136: LIST
11137: LIST
11138: PUSH
11139: LD_INT 1
11141: PUSH
11142: LD_INT 0
11144: PUSH
11145: EMPTY
11146: LIST
11147: LIST
11148: PUSH
11149: LD_INT 1
11151: PUSH
11152: LD_INT 1
11154: PUSH
11155: EMPTY
11156: LIST
11157: LIST
11158: PUSH
11159: LD_INT 0
11161: PUSH
11162: LD_INT 1
11164: PUSH
11165: EMPTY
11166: LIST
11167: LIST
11168: PUSH
11169: LD_INT 1
11171: NEG
11172: PUSH
11173: LD_INT 0
11175: PUSH
11176: EMPTY
11177: LIST
11178: LIST
11179: PUSH
11180: LD_INT 1
11182: NEG
11183: PUSH
11184: LD_INT 1
11186: NEG
11187: PUSH
11188: EMPTY
11189: LIST
11190: LIST
11191: PUSH
11192: LD_INT 1
11194: NEG
11195: PUSH
11196: LD_INT 2
11198: NEG
11199: PUSH
11200: EMPTY
11201: LIST
11202: LIST
11203: PUSH
11204: LD_INT 0
11206: PUSH
11207: LD_INT 2
11209: NEG
11210: PUSH
11211: EMPTY
11212: LIST
11213: LIST
11214: PUSH
11215: LD_INT 1
11217: PUSH
11218: LD_INT 1
11220: NEG
11221: PUSH
11222: EMPTY
11223: LIST
11224: LIST
11225: PUSH
11226: LD_INT 2
11228: PUSH
11229: LD_INT 0
11231: PUSH
11232: EMPTY
11233: LIST
11234: LIST
11235: PUSH
11236: LD_INT 2
11238: PUSH
11239: LD_INT 1
11241: PUSH
11242: EMPTY
11243: LIST
11244: LIST
11245: PUSH
11246: LD_INT 2
11248: PUSH
11249: LD_INT 2
11251: PUSH
11252: EMPTY
11253: LIST
11254: LIST
11255: PUSH
11256: LD_INT 1
11258: PUSH
11259: LD_INT 2
11261: PUSH
11262: EMPTY
11263: LIST
11264: LIST
11265: PUSH
11266: LD_INT 0
11268: PUSH
11269: LD_INT 2
11271: PUSH
11272: EMPTY
11273: LIST
11274: LIST
11275: PUSH
11276: LD_INT 1
11278: NEG
11279: PUSH
11280: LD_INT 1
11282: PUSH
11283: EMPTY
11284: LIST
11285: LIST
11286: PUSH
11287: LD_INT 2
11289: NEG
11290: PUSH
11291: LD_INT 0
11293: PUSH
11294: EMPTY
11295: LIST
11296: LIST
11297: PUSH
11298: LD_INT 2
11300: NEG
11301: PUSH
11302: LD_INT 1
11304: NEG
11305: PUSH
11306: EMPTY
11307: LIST
11308: LIST
11309: PUSH
11310: LD_INT 2
11312: NEG
11313: PUSH
11314: LD_INT 2
11316: NEG
11317: PUSH
11318: EMPTY
11319: LIST
11320: LIST
11321: PUSH
11322: EMPTY
11323: LIST
11324: LIST
11325: LIST
11326: LIST
11327: LIST
11328: LIST
11329: LIST
11330: LIST
11331: LIST
11332: LIST
11333: LIST
11334: LIST
11335: LIST
11336: LIST
11337: LIST
11338: LIST
11339: LIST
11340: LIST
11341: LIST
11342: ST_TO_ADDR
// DepotAr2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
11343: LD_ADDR_VAR 0 19
11347: PUSH
11348: LD_INT 0
11350: PUSH
11351: LD_INT 0
11353: PUSH
11354: EMPTY
11355: LIST
11356: LIST
11357: PUSH
11358: LD_INT 0
11360: PUSH
11361: LD_INT 1
11363: NEG
11364: PUSH
11365: EMPTY
11366: LIST
11367: LIST
11368: PUSH
11369: LD_INT 1
11371: PUSH
11372: LD_INT 0
11374: PUSH
11375: EMPTY
11376: LIST
11377: LIST
11378: PUSH
11379: LD_INT 1
11381: PUSH
11382: LD_INT 1
11384: PUSH
11385: EMPTY
11386: LIST
11387: LIST
11388: PUSH
11389: LD_INT 0
11391: PUSH
11392: LD_INT 1
11394: PUSH
11395: EMPTY
11396: LIST
11397: LIST
11398: PUSH
11399: LD_INT 1
11401: NEG
11402: PUSH
11403: LD_INT 0
11405: PUSH
11406: EMPTY
11407: LIST
11408: LIST
11409: PUSH
11410: LD_INT 1
11412: NEG
11413: PUSH
11414: LD_INT 1
11416: NEG
11417: PUSH
11418: EMPTY
11419: LIST
11420: LIST
11421: PUSH
11422: LD_INT 1
11424: NEG
11425: PUSH
11426: LD_INT 2
11428: NEG
11429: PUSH
11430: EMPTY
11431: LIST
11432: LIST
11433: PUSH
11434: LD_INT 0
11436: PUSH
11437: LD_INT 2
11439: NEG
11440: PUSH
11441: EMPTY
11442: LIST
11443: LIST
11444: PUSH
11445: LD_INT 1
11447: PUSH
11448: LD_INT 1
11450: NEG
11451: PUSH
11452: EMPTY
11453: LIST
11454: LIST
11455: PUSH
11456: LD_INT 2
11458: PUSH
11459: LD_INT 0
11461: PUSH
11462: EMPTY
11463: LIST
11464: LIST
11465: PUSH
11466: LD_INT 2
11468: PUSH
11469: LD_INT 1
11471: PUSH
11472: EMPTY
11473: LIST
11474: LIST
11475: PUSH
11476: LD_INT 2
11478: PUSH
11479: LD_INT 2
11481: PUSH
11482: EMPTY
11483: LIST
11484: LIST
11485: PUSH
11486: LD_INT 1
11488: PUSH
11489: LD_INT 2
11491: PUSH
11492: EMPTY
11493: LIST
11494: LIST
11495: PUSH
11496: LD_INT 0
11498: PUSH
11499: LD_INT 2
11501: PUSH
11502: EMPTY
11503: LIST
11504: LIST
11505: PUSH
11506: LD_INT 1
11508: NEG
11509: PUSH
11510: LD_INT 1
11512: PUSH
11513: EMPTY
11514: LIST
11515: LIST
11516: PUSH
11517: LD_INT 2
11519: NEG
11520: PUSH
11521: LD_INT 0
11523: PUSH
11524: EMPTY
11525: LIST
11526: LIST
11527: PUSH
11528: LD_INT 2
11530: NEG
11531: PUSH
11532: LD_INT 1
11534: NEG
11535: PUSH
11536: EMPTY
11537: LIST
11538: LIST
11539: PUSH
11540: LD_INT 2
11542: NEG
11543: PUSH
11544: LD_INT 2
11546: NEG
11547: PUSH
11548: EMPTY
11549: LIST
11550: LIST
11551: PUSH
11552: EMPTY
11553: LIST
11554: LIST
11555: LIST
11556: LIST
11557: LIST
11558: LIST
11559: LIST
11560: LIST
11561: LIST
11562: LIST
11563: LIST
11564: LIST
11565: LIST
11566: LIST
11567: LIST
11568: LIST
11569: LIST
11570: LIST
11571: LIST
11572: ST_TO_ADDR
// DepotAr3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
11573: LD_ADDR_VAR 0 20
11577: PUSH
11578: LD_INT 0
11580: PUSH
11581: LD_INT 0
11583: PUSH
11584: EMPTY
11585: LIST
11586: LIST
11587: PUSH
11588: LD_INT 0
11590: PUSH
11591: LD_INT 1
11593: NEG
11594: PUSH
11595: EMPTY
11596: LIST
11597: LIST
11598: PUSH
11599: LD_INT 1
11601: PUSH
11602: LD_INT 0
11604: PUSH
11605: EMPTY
11606: LIST
11607: LIST
11608: PUSH
11609: LD_INT 1
11611: PUSH
11612: LD_INT 1
11614: PUSH
11615: EMPTY
11616: LIST
11617: LIST
11618: PUSH
11619: LD_INT 0
11621: PUSH
11622: LD_INT 1
11624: PUSH
11625: EMPTY
11626: LIST
11627: LIST
11628: PUSH
11629: LD_INT 1
11631: NEG
11632: PUSH
11633: LD_INT 0
11635: PUSH
11636: EMPTY
11637: LIST
11638: LIST
11639: PUSH
11640: LD_INT 1
11642: NEG
11643: PUSH
11644: LD_INT 1
11646: NEG
11647: PUSH
11648: EMPTY
11649: LIST
11650: LIST
11651: PUSH
11652: LD_INT 1
11654: NEG
11655: PUSH
11656: LD_INT 2
11658: NEG
11659: PUSH
11660: EMPTY
11661: LIST
11662: LIST
11663: PUSH
11664: LD_INT 0
11666: PUSH
11667: LD_INT 2
11669: NEG
11670: PUSH
11671: EMPTY
11672: LIST
11673: LIST
11674: PUSH
11675: LD_INT 1
11677: PUSH
11678: LD_INT 1
11680: NEG
11681: PUSH
11682: EMPTY
11683: LIST
11684: LIST
11685: PUSH
11686: LD_INT 2
11688: PUSH
11689: LD_INT 0
11691: PUSH
11692: EMPTY
11693: LIST
11694: LIST
11695: PUSH
11696: LD_INT 2
11698: PUSH
11699: LD_INT 1
11701: PUSH
11702: EMPTY
11703: LIST
11704: LIST
11705: PUSH
11706: LD_INT 2
11708: PUSH
11709: LD_INT 2
11711: PUSH
11712: EMPTY
11713: LIST
11714: LIST
11715: PUSH
11716: LD_INT 1
11718: PUSH
11719: LD_INT 2
11721: PUSH
11722: EMPTY
11723: LIST
11724: LIST
11725: PUSH
11726: LD_INT 0
11728: PUSH
11729: LD_INT 2
11731: PUSH
11732: EMPTY
11733: LIST
11734: LIST
11735: PUSH
11736: LD_INT 1
11738: NEG
11739: PUSH
11740: LD_INT 1
11742: PUSH
11743: EMPTY
11744: LIST
11745: LIST
11746: PUSH
11747: LD_INT 2
11749: NEG
11750: PUSH
11751: LD_INT 0
11753: PUSH
11754: EMPTY
11755: LIST
11756: LIST
11757: PUSH
11758: LD_INT 2
11760: NEG
11761: PUSH
11762: LD_INT 1
11764: NEG
11765: PUSH
11766: EMPTY
11767: LIST
11768: LIST
11769: PUSH
11770: LD_INT 2
11772: NEG
11773: PUSH
11774: LD_INT 2
11776: NEG
11777: PUSH
11778: EMPTY
11779: LIST
11780: LIST
11781: PUSH
11782: EMPTY
11783: LIST
11784: LIST
11785: LIST
11786: LIST
11787: LIST
11788: LIST
11789: LIST
11790: LIST
11791: LIST
11792: LIST
11793: LIST
11794: LIST
11795: LIST
11796: LIST
11797: LIST
11798: LIST
11799: LIST
11800: LIST
11801: LIST
11802: ST_TO_ADDR
// DepotAr4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
11803: LD_ADDR_VAR 0 21
11807: PUSH
11808: LD_INT 0
11810: PUSH
11811: LD_INT 0
11813: PUSH
11814: EMPTY
11815: LIST
11816: LIST
11817: PUSH
11818: LD_INT 0
11820: PUSH
11821: LD_INT 1
11823: NEG
11824: PUSH
11825: EMPTY
11826: LIST
11827: LIST
11828: PUSH
11829: LD_INT 1
11831: PUSH
11832: LD_INT 0
11834: PUSH
11835: EMPTY
11836: LIST
11837: LIST
11838: PUSH
11839: LD_INT 1
11841: PUSH
11842: LD_INT 1
11844: PUSH
11845: EMPTY
11846: LIST
11847: LIST
11848: PUSH
11849: LD_INT 0
11851: PUSH
11852: LD_INT 1
11854: PUSH
11855: EMPTY
11856: LIST
11857: LIST
11858: PUSH
11859: LD_INT 1
11861: NEG
11862: PUSH
11863: LD_INT 0
11865: PUSH
11866: EMPTY
11867: LIST
11868: LIST
11869: PUSH
11870: LD_INT 1
11872: NEG
11873: PUSH
11874: LD_INT 1
11876: NEG
11877: PUSH
11878: EMPTY
11879: LIST
11880: LIST
11881: PUSH
11882: LD_INT 1
11884: NEG
11885: PUSH
11886: LD_INT 2
11888: NEG
11889: PUSH
11890: EMPTY
11891: LIST
11892: LIST
11893: PUSH
11894: LD_INT 0
11896: PUSH
11897: LD_INT 2
11899: NEG
11900: PUSH
11901: EMPTY
11902: LIST
11903: LIST
11904: PUSH
11905: LD_INT 1
11907: PUSH
11908: LD_INT 1
11910: NEG
11911: PUSH
11912: EMPTY
11913: LIST
11914: LIST
11915: PUSH
11916: LD_INT 2
11918: PUSH
11919: LD_INT 0
11921: PUSH
11922: EMPTY
11923: LIST
11924: LIST
11925: PUSH
11926: LD_INT 2
11928: PUSH
11929: LD_INT 1
11931: PUSH
11932: EMPTY
11933: LIST
11934: LIST
11935: PUSH
11936: LD_INT 2
11938: PUSH
11939: LD_INT 2
11941: PUSH
11942: EMPTY
11943: LIST
11944: LIST
11945: PUSH
11946: LD_INT 1
11948: PUSH
11949: LD_INT 2
11951: PUSH
11952: EMPTY
11953: LIST
11954: LIST
11955: PUSH
11956: LD_INT 0
11958: PUSH
11959: LD_INT 2
11961: PUSH
11962: EMPTY
11963: LIST
11964: LIST
11965: PUSH
11966: LD_INT 1
11968: NEG
11969: PUSH
11970: LD_INT 1
11972: PUSH
11973: EMPTY
11974: LIST
11975: LIST
11976: PUSH
11977: LD_INT 2
11979: NEG
11980: PUSH
11981: LD_INT 0
11983: PUSH
11984: EMPTY
11985: LIST
11986: LIST
11987: PUSH
11988: LD_INT 2
11990: NEG
11991: PUSH
11992: LD_INT 1
11994: NEG
11995: PUSH
11996: EMPTY
11997: LIST
11998: LIST
11999: PUSH
12000: LD_INT 2
12002: NEG
12003: PUSH
12004: LD_INT 2
12006: NEG
12007: PUSH
12008: EMPTY
12009: LIST
12010: LIST
12011: PUSH
12012: EMPTY
12013: LIST
12014: LIST
12015: LIST
12016: LIST
12017: LIST
12018: LIST
12019: LIST
12020: LIST
12021: LIST
12022: LIST
12023: LIST
12024: LIST
12025: LIST
12026: LIST
12027: LIST
12028: LIST
12029: LIST
12030: LIST
12031: LIST
12032: ST_TO_ADDR
// DepotAr5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
12033: LD_ADDR_VAR 0 22
12037: PUSH
12038: LD_INT 0
12040: PUSH
12041: LD_INT 0
12043: PUSH
12044: EMPTY
12045: LIST
12046: LIST
12047: PUSH
12048: LD_INT 0
12050: PUSH
12051: LD_INT 1
12053: NEG
12054: PUSH
12055: EMPTY
12056: LIST
12057: LIST
12058: PUSH
12059: LD_INT 1
12061: PUSH
12062: LD_INT 0
12064: PUSH
12065: EMPTY
12066: LIST
12067: LIST
12068: PUSH
12069: LD_INT 1
12071: PUSH
12072: LD_INT 1
12074: PUSH
12075: EMPTY
12076: LIST
12077: LIST
12078: PUSH
12079: LD_INT 0
12081: PUSH
12082: LD_INT 1
12084: PUSH
12085: EMPTY
12086: LIST
12087: LIST
12088: PUSH
12089: LD_INT 1
12091: NEG
12092: PUSH
12093: LD_INT 0
12095: PUSH
12096: EMPTY
12097: LIST
12098: LIST
12099: PUSH
12100: LD_INT 1
12102: NEG
12103: PUSH
12104: LD_INT 1
12106: NEG
12107: PUSH
12108: EMPTY
12109: LIST
12110: LIST
12111: PUSH
12112: LD_INT 1
12114: NEG
12115: PUSH
12116: LD_INT 2
12118: NEG
12119: PUSH
12120: EMPTY
12121: LIST
12122: LIST
12123: PUSH
12124: LD_INT 0
12126: PUSH
12127: LD_INT 2
12129: NEG
12130: PUSH
12131: EMPTY
12132: LIST
12133: LIST
12134: PUSH
12135: LD_INT 1
12137: PUSH
12138: LD_INT 1
12140: NEG
12141: PUSH
12142: EMPTY
12143: LIST
12144: LIST
12145: PUSH
12146: LD_INT 2
12148: PUSH
12149: LD_INT 0
12151: PUSH
12152: EMPTY
12153: LIST
12154: LIST
12155: PUSH
12156: LD_INT 2
12158: PUSH
12159: LD_INT 1
12161: PUSH
12162: EMPTY
12163: LIST
12164: LIST
12165: PUSH
12166: LD_INT 2
12168: PUSH
12169: LD_INT 2
12171: PUSH
12172: EMPTY
12173: LIST
12174: LIST
12175: PUSH
12176: LD_INT 1
12178: PUSH
12179: LD_INT 2
12181: PUSH
12182: EMPTY
12183: LIST
12184: LIST
12185: PUSH
12186: LD_INT 0
12188: PUSH
12189: LD_INT 2
12191: PUSH
12192: EMPTY
12193: LIST
12194: LIST
12195: PUSH
12196: LD_INT 1
12198: NEG
12199: PUSH
12200: LD_INT 1
12202: PUSH
12203: EMPTY
12204: LIST
12205: LIST
12206: PUSH
12207: LD_INT 2
12209: NEG
12210: PUSH
12211: LD_INT 0
12213: PUSH
12214: EMPTY
12215: LIST
12216: LIST
12217: PUSH
12218: LD_INT 2
12220: NEG
12221: PUSH
12222: LD_INT 1
12224: NEG
12225: PUSH
12226: EMPTY
12227: LIST
12228: LIST
12229: PUSH
12230: LD_INT 2
12232: NEG
12233: PUSH
12234: LD_INT 2
12236: NEG
12237: PUSH
12238: EMPTY
12239: LIST
12240: LIST
12241: PUSH
12242: EMPTY
12243: LIST
12244: LIST
12245: LIST
12246: LIST
12247: LIST
12248: LIST
12249: LIST
12250: LIST
12251: LIST
12252: LIST
12253: LIST
12254: LIST
12255: LIST
12256: LIST
12257: LIST
12258: LIST
12259: LIST
12260: LIST
12261: LIST
12262: ST_TO_ADDR
// DepotRu0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 2 , - 1 ] ] ;
12263: LD_ADDR_VAR 0 23
12267: PUSH
12268: LD_INT 0
12270: PUSH
12271: LD_INT 0
12273: PUSH
12274: EMPTY
12275: LIST
12276: LIST
12277: PUSH
12278: LD_INT 0
12280: PUSH
12281: LD_INT 1
12283: NEG
12284: PUSH
12285: EMPTY
12286: LIST
12287: LIST
12288: PUSH
12289: LD_INT 1
12291: PUSH
12292: LD_INT 0
12294: PUSH
12295: EMPTY
12296: LIST
12297: LIST
12298: PUSH
12299: LD_INT 1
12301: PUSH
12302: LD_INT 1
12304: PUSH
12305: EMPTY
12306: LIST
12307: LIST
12308: PUSH
12309: LD_INT 0
12311: PUSH
12312: LD_INT 1
12314: PUSH
12315: EMPTY
12316: LIST
12317: LIST
12318: PUSH
12319: LD_INT 1
12321: NEG
12322: PUSH
12323: LD_INT 0
12325: PUSH
12326: EMPTY
12327: LIST
12328: LIST
12329: PUSH
12330: LD_INT 1
12332: NEG
12333: PUSH
12334: LD_INT 1
12336: NEG
12337: PUSH
12338: EMPTY
12339: LIST
12340: LIST
12341: PUSH
12342: LD_INT 1
12344: NEG
12345: PUSH
12346: LD_INT 2
12348: NEG
12349: PUSH
12350: EMPTY
12351: LIST
12352: LIST
12353: PUSH
12354: LD_INT 0
12356: PUSH
12357: LD_INT 2
12359: NEG
12360: PUSH
12361: EMPTY
12362: LIST
12363: LIST
12364: PUSH
12365: LD_INT 1
12367: PUSH
12368: LD_INT 1
12370: NEG
12371: PUSH
12372: EMPTY
12373: LIST
12374: LIST
12375: PUSH
12376: LD_INT 2
12378: PUSH
12379: LD_INT 0
12381: PUSH
12382: EMPTY
12383: LIST
12384: LIST
12385: PUSH
12386: LD_INT 2
12388: PUSH
12389: LD_INT 1
12391: PUSH
12392: EMPTY
12393: LIST
12394: LIST
12395: PUSH
12396: LD_INT 2
12398: PUSH
12399: LD_INT 2
12401: PUSH
12402: EMPTY
12403: LIST
12404: LIST
12405: PUSH
12406: LD_INT 1
12408: PUSH
12409: LD_INT 2
12411: PUSH
12412: EMPTY
12413: LIST
12414: LIST
12415: PUSH
12416: LD_INT 0
12418: PUSH
12419: LD_INT 2
12421: PUSH
12422: EMPTY
12423: LIST
12424: LIST
12425: PUSH
12426: LD_INT 1
12428: NEG
12429: PUSH
12430: LD_INT 1
12432: PUSH
12433: EMPTY
12434: LIST
12435: LIST
12436: PUSH
12437: LD_INT 2
12439: NEG
12440: PUSH
12441: LD_INT 0
12443: PUSH
12444: EMPTY
12445: LIST
12446: LIST
12447: PUSH
12448: LD_INT 2
12450: NEG
12451: PUSH
12452: LD_INT 1
12454: NEG
12455: PUSH
12456: EMPTY
12457: LIST
12458: LIST
12459: PUSH
12460: LD_INT 2
12462: NEG
12463: PUSH
12464: LD_INT 2
12466: NEG
12467: PUSH
12468: EMPTY
12469: LIST
12470: LIST
12471: PUSH
12472: LD_INT 2
12474: NEG
12475: PUSH
12476: LD_INT 3
12478: NEG
12479: PUSH
12480: EMPTY
12481: LIST
12482: LIST
12483: PUSH
12484: LD_INT 1
12486: NEG
12487: PUSH
12488: LD_INT 3
12490: NEG
12491: PUSH
12492: EMPTY
12493: LIST
12494: LIST
12495: PUSH
12496: LD_INT 1
12498: PUSH
12499: LD_INT 2
12501: NEG
12502: PUSH
12503: EMPTY
12504: LIST
12505: LIST
12506: PUSH
12507: LD_INT 2
12509: PUSH
12510: LD_INT 1
12512: NEG
12513: PUSH
12514: EMPTY
12515: LIST
12516: LIST
12517: PUSH
12518: EMPTY
12519: LIST
12520: LIST
12521: LIST
12522: LIST
12523: LIST
12524: LIST
12525: LIST
12526: LIST
12527: LIST
12528: LIST
12529: LIST
12530: LIST
12531: LIST
12532: LIST
12533: LIST
12534: LIST
12535: LIST
12536: LIST
12537: LIST
12538: LIST
12539: LIST
12540: LIST
12541: LIST
12542: ST_TO_ADDR
// DepotRu1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 1 , - 2 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 3 , 2 ] ] ;
12543: LD_ADDR_VAR 0 24
12547: PUSH
12548: LD_INT 0
12550: PUSH
12551: LD_INT 0
12553: PUSH
12554: EMPTY
12555: LIST
12556: LIST
12557: PUSH
12558: LD_INT 0
12560: PUSH
12561: LD_INT 1
12563: NEG
12564: PUSH
12565: EMPTY
12566: LIST
12567: LIST
12568: PUSH
12569: LD_INT 1
12571: PUSH
12572: LD_INT 0
12574: PUSH
12575: EMPTY
12576: LIST
12577: LIST
12578: PUSH
12579: LD_INT 1
12581: PUSH
12582: LD_INT 1
12584: PUSH
12585: EMPTY
12586: LIST
12587: LIST
12588: PUSH
12589: LD_INT 0
12591: PUSH
12592: LD_INT 1
12594: PUSH
12595: EMPTY
12596: LIST
12597: LIST
12598: PUSH
12599: LD_INT 1
12601: NEG
12602: PUSH
12603: LD_INT 0
12605: PUSH
12606: EMPTY
12607: LIST
12608: LIST
12609: PUSH
12610: LD_INT 1
12612: NEG
12613: PUSH
12614: LD_INT 1
12616: NEG
12617: PUSH
12618: EMPTY
12619: LIST
12620: LIST
12621: PUSH
12622: LD_INT 1
12624: NEG
12625: PUSH
12626: LD_INT 2
12628: NEG
12629: PUSH
12630: EMPTY
12631: LIST
12632: LIST
12633: PUSH
12634: LD_INT 0
12636: PUSH
12637: LD_INT 2
12639: NEG
12640: PUSH
12641: EMPTY
12642: LIST
12643: LIST
12644: PUSH
12645: LD_INT 1
12647: PUSH
12648: LD_INT 1
12650: NEG
12651: PUSH
12652: EMPTY
12653: LIST
12654: LIST
12655: PUSH
12656: LD_INT 2
12658: PUSH
12659: LD_INT 0
12661: PUSH
12662: EMPTY
12663: LIST
12664: LIST
12665: PUSH
12666: LD_INT 2
12668: PUSH
12669: LD_INT 1
12671: PUSH
12672: EMPTY
12673: LIST
12674: LIST
12675: PUSH
12676: LD_INT 2
12678: PUSH
12679: LD_INT 2
12681: PUSH
12682: EMPTY
12683: LIST
12684: LIST
12685: PUSH
12686: LD_INT 1
12688: PUSH
12689: LD_INT 2
12691: PUSH
12692: EMPTY
12693: LIST
12694: LIST
12695: PUSH
12696: LD_INT 0
12698: PUSH
12699: LD_INT 2
12701: PUSH
12702: EMPTY
12703: LIST
12704: LIST
12705: PUSH
12706: LD_INT 1
12708: NEG
12709: PUSH
12710: LD_INT 1
12712: PUSH
12713: EMPTY
12714: LIST
12715: LIST
12716: PUSH
12717: LD_INT 2
12719: NEG
12720: PUSH
12721: LD_INT 0
12723: PUSH
12724: EMPTY
12725: LIST
12726: LIST
12727: PUSH
12728: LD_INT 2
12730: NEG
12731: PUSH
12732: LD_INT 1
12734: NEG
12735: PUSH
12736: EMPTY
12737: LIST
12738: LIST
12739: PUSH
12740: LD_INT 2
12742: NEG
12743: PUSH
12744: LD_INT 2
12746: NEG
12747: PUSH
12748: EMPTY
12749: LIST
12750: LIST
12751: PUSH
12752: LD_INT 1
12754: PUSH
12755: LD_INT 2
12757: NEG
12758: PUSH
12759: EMPTY
12760: LIST
12761: LIST
12762: PUSH
12763: LD_INT 2
12765: PUSH
12766: LD_INT 1
12768: NEG
12769: PUSH
12770: EMPTY
12771: LIST
12772: LIST
12773: PUSH
12774: LD_INT 3
12776: PUSH
12777: LD_INT 1
12779: PUSH
12780: EMPTY
12781: LIST
12782: LIST
12783: PUSH
12784: LD_INT 3
12786: PUSH
12787: LD_INT 2
12789: PUSH
12790: EMPTY
12791: LIST
12792: LIST
12793: PUSH
12794: EMPTY
12795: LIST
12796: LIST
12797: LIST
12798: LIST
12799: LIST
12800: LIST
12801: LIST
12802: LIST
12803: LIST
12804: LIST
12805: LIST
12806: LIST
12807: LIST
12808: LIST
12809: LIST
12810: LIST
12811: LIST
12812: LIST
12813: LIST
12814: LIST
12815: LIST
12816: LIST
12817: LIST
12818: ST_TO_ADDR
// DepotRu2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 3 , 1 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ 1 , 3 ] ] ;
12819: LD_ADDR_VAR 0 25
12823: PUSH
12824: LD_INT 0
12826: PUSH
12827: LD_INT 0
12829: PUSH
12830: EMPTY
12831: LIST
12832: LIST
12833: PUSH
12834: LD_INT 0
12836: PUSH
12837: LD_INT 1
12839: NEG
12840: PUSH
12841: EMPTY
12842: LIST
12843: LIST
12844: PUSH
12845: LD_INT 1
12847: PUSH
12848: LD_INT 0
12850: PUSH
12851: EMPTY
12852: LIST
12853: LIST
12854: PUSH
12855: LD_INT 1
12857: PUSH
12858: LD_INT 1
12860: PUSH
12861: EMPTY
12862: LIST
12863: LIST
12864: PUSH
12865: LD_INT 0
12867: PUSH
12868: LD_INT 1
12870: PUSH
12871: EMPTY
12872: LIST
12873: LIST
12874: PUSH
12875: LD_INT 1
12877: NEG
12878: PUSH
12879: LD_INT 0
12881: PUSH
12882: EMPTY
12883: LIST
12884: LIST
12885: PUSH
12886: LD_INT 1
12888: NEG
12889: PUSH
12890: LD_INT 1
12892: NEG
12893: PUSH
12894: EMPTY
12895: LIST
12896: LIST
12897: PUSH
12898: LD_INT 1
12900: NEG
12901: PUSH
12902: LD_INT 2
12904: NEG
12905: PUSH
12906: EMPTY
12907: LIST
12908: LIST
12909: PUSH
12910: LD_INT 0
12912: PUSH
12913: LD_INT 2
12915: NEG
12916: PUSH
12917: EMPTY
12918: LIST
12919: LIST
12920: PUSH
12921: LD_INT 1
12923: PUSH
12924: LD_INT 1
12926: NEG
12927: PUSH
12928: EMPTY
12929: LIST
12930: LIST
12931: PUSH
12932: LD_INT 2
12934: PUSH
12935: LD_INT 0
12937: PUSH
12938: EMPTY
12939: LIST
12940: LIST
12941: PUSH
12942: LD_INT 2
12944: PUSH
12945: LD_INT 1
12947: PUSH
12948: EMPTY
12949: LIST
12950: LIST
12951: PUSH
12952: LD_INT 2
12954: PUSH
12955: LD_INT 2
12957: PUSH
12958: EMPTY
12959: LIST
12960: LIST
12961: PUSH
12962: LD_INT 1
12964: PUSH
12965: LD_INT 2
12967: PUSH
12968: EMPTY
12969: LIST
12970: LIST
12971: PUSH
12972: LD_INT 0
12974: PUSH
12975: LD_INT 2
12977: PUSH
12978: EMPTY
12979: LIST
12980: LIST
12981: PUSH
12982: LD_INT 1
12984: NEG
12985: PUSH
12986: LD_INT 1
12988: PUSH
12989: EMPTY
12990: LIST
12991: LIST
12992: PUSH
12993: LD_INT 2
12995: NEG
12996: PUSH
12997: LD_INT 0
12999: PUSH
13000: EMPTY
13001: LIST
13002: LIST
13003: PUSH
13004: LD_INT 2
13006: NEG
13007: PUSH
13008: LD_INT 1
13010: NEG
13011: PUSH
13012: EMPTY
13013: LIST
13014: LIST
13015: PUSH
13016: LD_INT 2
13018: NEG
13019: PUSH
13020: LD_INT 2
13022: NEG
13023: PUSH
13024: EMPTY
13025: LIST
13026: LIST
13027: PUSH
13028: LD_INT 3
13030: PUSH
13031: LD_INT 1
13033: PUSH
13034: EMPTY
13035: LIST
13036: LIST
13037: PUSH
13038: LD_INT 3
13040: PUSH
13041: LD_INT 2
13043: PUSH
13044: EMPTY
13045: LIST
13046: LIST
13047: PUSH
13048: LD_INT 2
13050: PUSH
13051: LD_INT 3
13053: PUSH
13054: EMPTY
13055: LIST
13056: LIST
13057: PUSH
13058: LD_INT 1
13060: PUSH
13061: LD_INT 3
13063: PUSH
13064: EMPTY
13065: LIST
13066: LIST
13067: PUSH
13068: EMPTY
13069: LIST
13070: LIST
13071: LIST
13072: LIST
13073: LIST
13074: LIST
13075: LIST
13076: LIST
13077: LIST
13078: LIST
13079: LIST
13080: LIST
13081: LIST
13082: LIST
13083: LIST
13084: LIST
13085: LIST
13086: LIST
13087: LIST
13088: LIST
13089: LIST
13090: LIST
13091: LIST
13092: ST_TO_ADDR
// DepotRu3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 2 , 3 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 2 , 1 ] ] ;
13093: LD_ADDR_VAR 0 26
13097: PUSH
13098: LD_INT 0
13100: PUSH
13101: LD_INT 0
13103: PUSH
13104: EMPTY
13105: LIST
13106: LIST
13107: PUSH
13108: LD_INT 0
13110: PUSH
13111: LD_INT 1
13113: NEG
13114: PUSH
13115: EMPTY
13116: LIST
13117: LIST
13118: PUSH
13119: LD_INT 1
13121: PUSH
13122: LD_INT 0
13124: PUSH
13125: EMPTY
13126: LIST
13127: LIST
13128: PUSH
13129: LD_INT 1
13131: PUSH
13132: LD_INT 1
13134: PUSH
13135: EMPTY
13136: LIST
13137: LIST
13138: PUSH
13139: LD_INT 0
13141: PUSH
13142: LD_INT 1
13144: PUSH
13145: EMPTY
13146: LIST
13147: LIST
13148: PUSH
13149: LD_INT 1
13151: NEG
13152: PUSH
13153: LD_INT 0
13155: PUSH
13156: EMPTY
13157: LIST
13158: LIST
13159: PUSH
13160: LD_INT 1
13162: NEG
13163: PUSH
13164: LD_INT 1
13166: NEG
13167: PUSH
13168: EMPTY
13169: LIST
13170: LIST
13171: PUSH
13172: LD_INT 1
13174: NEG
13175: PUSH
13176: LD_INT 2
13178: NEG
13179: PUSH
13180: EMPTY
13181: LIST
13182: LIST
13183: PUSH
13184: LD_INT 0
13186: PUSH
13187: LD_INT 2
13189: NEG
13190: PUSH
13191: EMPTY
13192: LIST
13193: LIST
13194: PUSH
13195: LD_INT 1
13197: PUSH
13198: LD_INT 1
13200: NEG
13201: PUSH
13202: EMPTY
13203: LIST
13204: LIST
13205: PUSH
13206: LD_INT 2
13208: PUSH
13209: LD_INT 0
13211: PUSH
13212: EMPTY
13213: LIST
13214: LIST
13215: PUSH
13216: LD_INT 2
13218: PUSH
13219: LD_INT 1
13221: PUSH
13222: EMPTY
13223: LIST
13224: LIST
13225: PUSH
13226: LD_INT 2
13228: PUSH
13229: LD_INT 2
13231: PUSH
13232: EMPTY
13233: LIST
13234: LIST
13235: PUSH
13236: LD_INT 1
13238: PUSH
13239: LD_INT 2
13241: PUSH
13242: EMPTY
13243: LIST
13244: LIST
13245: PUSH
13246: LD_INT 0
13248: PUSH
13249: LD_INT 2
13251: PUSH
13252: EMPTY
13253: LIST
13254: LIST
13255: PUSH
13256: LD_INT 1
13258: NEG
13259: PUSH
13260: LD_INT 1
13262: PUSH
13263: EMPTY
13264: LIST
13265: LIST
13266: PUSH
13267: LD_INT 2
13269: NEG
13270: PUSH
13271: LD_INT 0
13273: PUSH
13274: EMPTY
13275: LIST
13276: LIST
13277: PUSH
13278: LD_INT 2
13280: NEG
13281: PUSH
13282: LD_INT 1
13284: NEG
13285: PUSH
13286: EMPTY
13287: LIST
13288: LIST
13289: PUSH
13290: LD_INT 2
13292: NEG
13293: PUSH
13294: LD_INT 2
13296: NEG
13297: PUSH
13298: EMPTY
13299: LIST
13300: LIST
13301: PUSH
13302: LD_INT 2
13304: PUSH
13305: LD_INT 3
13307: PUSH
13308: EMPTY
13309: LIST
13310: LIST
13311: PUSH
13312: LD_INT 1
13314: PUSH
13315: LD_INT 3
13317: PUSH
13318: EMPTY
13319: LIST
13320: LIST
13321: PUSH
13322: LD_INT 1
13324: NEG
13325: PUSH
13326: LD_INT 2
13328: PUSH
13329: EMPTY
13330: LIST
13331: LIST
13332: PUSH
13333: LD_INT 2
13335: NEG
13336: PUSH
13337: LD_INT 1
13339: PUSH
13340: EMPTY
13341: LIST
13342: LIST
13343: PUSH
13344: EMPTY
13345: LIST
13346: LIST
13347: LIST
13348: LIST
13349: LIST
13350: LIST
13351: LIST
13352: LIST
13353: LIST
13354: LIST
13355: LIST
13356: LIST
13357: LIST
13358: LIST
13359: LIST
13360: LIST
13361: LIST
13362: LIST
13363: LIST
13364: LIST
13365: LIST
13366: LIST
13367: LIST
13368: ST_TO_ADDR
// DepotRu4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 1 , 2 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] ] ;
13369: LD_ADDR_VAR 0 27
13373: PUSH
13374: LD_INT 0
13376: PUSH
13377: LD_INT 0
13379: PUSH
13380: EMPTY
13381: LIST
13382: LIST
13383: PUSH
13384: LD_INT 0
13386: PUSH
13387: LD_INT 1
13389: NEG
13390: PUSH
13391: EMPTY
13392: LIST
13393: LIST
13394: PUSH
13395: LD_INT 1
13397: PUSH
13398: LD_INT 0
13400: PUSH
13401: EMPTY
13402: LIST
13403: LIST
13404: PUSH
13405: LD_INT 1
13407: PUSH
13408: LD_INT 1
13410: PUSH
13411: EMPTY
13412: LIST
13413: LIST
13414: PUSH
13415: LD_INT 0
13417: PUSH
13418: LD_INT 1
13420: PUSH
13421: EMPTY
13422: LIST
13423: LIST
13424: PUSH
13425: LD_INT 1
13427: NEG
13428: PUSH
13429: LD_INT 0
13431: PUSH
13432: EMPTY
13433: LIST
13434: LIST
13435: PUSH
13436: LD_INT 1
13438: NEG
13439: PUSH
13440: LD_INT 1
13442: NEG
13443: PUSH
13444: EMPTY
13445: LIST
13446: LIST
13447: PUSH
13448: LD_INT 1
13450: NEG
13451: PUSH
13452: LD_INT 2
13454: NEG
13455: PUSH
13456: EMPTY
13457: LIST
13458: LIST
13459: PUSH
13460: LD_INT 0
13462: PUSH
13463: LD_INT 2
13465: NEG
13466: PUSH
13467: EMPTY
13468: LIST
13469: LIST
13470: PUSH
13471: LD_INT 1
13473: PUSH
13474: LD_INT 1
13476: NEG
13477: PUSH
13478: EMPTY
13479: LIST
13480: LIST
13481: PUSH
13482: LD_INT 2
13484: PUSH
13485: LD_INT 0
13487: PUSH
13488: EMPTY
13489: LIST
13490: LIST
13491: PUSH
13492: LD_INT 2
13494: PUSH
13495: LD_INT 1
13497: PUSH
13498: EMPTY
13499: LIST
13500: LIST
13501: PUSH
13502: LD_INT 2
13504: PUSH
13505: LD_INT 2
13507: PUSH
13508: EMPTY
13509: LIST
13510: LIST
13511: PUSH
13512: LD_INT 1
13514: PUSH
13515: LD_INT 2
13517: PUSH
13518: EMPTY
13519: LIST
13520: LIST
13521: PUSH
13522: LD_INT 0
13524: PUSH
13525: LD_INT 2
13527: PUSH
13528: EMPTY
13529: LIST
13530: LIST
13531: PUSH
13532: LD_INT 1
13534: NEG
13535: PUSH
13536: LD_INT 1
13538: PUSH
13539: EMPTY
13540: LIST
13541: LIST
13542: PUSH
13543: LD_INT 2
13545: NEG
13546: PUSH
13547: LD_INT 0
13549: PUSH
13550: EMPTY
13551: LIST
13552: LIST
13553: PUSH
13554: LD_INT 2
13556: NEG
13557: PUSH
13558: LD_INT 1
13560: NEG
13561: PUSH
13562: EMPTY
13563: LIST
13564: LIST
13565: PUSH
13566: LD_INT 2
13568: NEG
13569: PUSH
13570: LD_INT 2
13572: NEG
13573: PUSH
13574: EMPTY
13575: LIST
13576: LIST
13577: PUSH
13578: LD_INT 1
13580: NEG
13581: PUSH
13582: LD_INT 2
13584: PUSH
13585: EMPTY
13586: LIST
13587: LIST
13588: PUSH
13589: LD_INT 2
13591: NEG
13592: PUSH
13593: LD_INT 1
13595: PUSH
13596: EMPTY
13597: LIST
13598: LIST
13599: PUSH
13600: LD_INT 3
13602: NEG
13603: PUSH
13604: LD_INT 1
13606: NEG
13607: PUSH
13608: EMPTY
13609: LIST
13610: LIST
13611: PUSH
13612: LD_INT 3
13614: NEG
13615: PUSH
13616: LD_INT 2
13618: NEG
13619: PUSH
13620: EMPTY
13621: LIST
13622: LIST
13623: PUSH
13624: EMPTY
13625: LIST
13626: LIST
13627: LIST
13628: LIST
13629: LIST
13630: LIST
13631: LIST
13632: LIST
13633: LIST
13634: LIST
13635: LIST
13636: LIST
13637: LIST
13638: LIST
13639: LIST
13640: LIST
13641: LIST
13642: LIST
13643: LIST
13644: LIST
13645: LIST
13646: LIST
13647: LIST
13648: ST_TO_ADDR
// DepotRu5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] ] ;
13649: LD_ADDR_VAR 0 28
13653: PUSH
13654: LD_INT 0
13656: PUSH
13657: LD_INT 0
13659: PUSH
13660: EMPTY
13661: LIST
13662: LIST
13663: PUSH
13664: LD_INT 0
13666: PUSH
13667: LD_INT 1
13669: NEG
13670: PUSH
13671: EMPTY
13672: LIST
13673: LIST
13674: PUSH
13675: LD_INT 1
13677: PUSH
13678: LD_INT 0
13680: PUSH
13681: EMPTY
13682: LIST
13683: LIST
13684: PUSH
13685: LD_INT 1
13687: PUSH
13688: LD_INT 1
13690: PUSH
13691: EMPTY
13692: LIST
13693: LIST
13694: PUSH
13695: LD_INT 0
13697: PUSH
13698: LD_INT 1
13700: PUSH
13701: EMPTY
13702: LIST
13703: LIST
13704: PUSH
13705: LD_INT 1
13707: NEG
13708: PUSH
13709: LD_INT 0
13711: PUSH
13712: EMPTY
13713: LIST
13714: LIST
13715: PUSH
13716: LD_INT 1
13718: NEG
13719: PUSH
13720: LD_INT 1
13722: NEG
13723: PUSH
13724: EMPTY
13725: LIST
13726: LIST
13727: PUSH
13728: LD_INT 1
13730: NEG
13731: PUSH
13732: LD_INT 2
13734: NEG
13735: PUSH
13736: EMPTY
13737: LIST
13738: LIST
13739: PUSH
13740: LD_INT 0
13742: PUSH
13743: LD_INT 2
13745: NEG
13746: PUSH
13747: EMPTY
13748: LIST
13749: LIST
13750: PUSH
13751: LD_INT 1
13753: PUSH
13754: LD_INT 1
13756: NEG
13757: PUSH
13758: EMPTY
13759: LIST
13760: LIST
13761: PUSH
13762: LD_INT 2
13764: PUSH
13765: LD_INT 0
13767: PUSH
13768: EMPTY
13769: LIST
13770: LIST
13771: PUSH
13772: LD_INT 2
13774: PUSH
13775: LD_INT 1
13777: PUSH
13778: EMPTY
13779: LIST
13780: LIST
13781: PUSH
13782: LD_INT 2
13784: PUSH
13785: LD_INT 2
13787: PUSH
13788: EMPTY
13789: LIST
13790: LIST
13791: PUSH
13792: LD_INT 1
13794: PUSH
13795: LD_INT 2
13797: PUSH
13798: EMPTY
13799: LIST
13800: LIST
13801: PUSH
13802: LD_INT 0
13804: PUSH
13805: LD_INT 2
13807: PUSH
13808: EMPTY
13809: LIST
13810: LIST
13811: PUSH
13812: LD_INT 1
13814: NEG
13815: PUSH
13816: LD_INT 1
13818: PUSH
13819: EMPTY
13820: LIST
13821: LIST
13822: PUSH
13823: LD_INT 2
13825: NEG
13826: PUSH
13827: LD_INT 0
13829: PUSH
13830: EMPTY
13831: LIST
13832: LIST
13833: PUSH
13834: LD_INT 2
13836: NEG
13837: PUSH
13838: LD_INT 1
13840: NEG
13841: PUSH
13842: EMPTY
13843: LIST
13844: LIST
13845: PUSH
13846: LD_INT 2
13848: NEG
13849: PUSH
13850: LD_INT 2
13852: NEG
13853: PUSH
13854: EMPTY
13855: LIST
13856: LIST
13857: PUSH
13858: LD_INT 2
13860: NEG
13861: PUSH
13862: LD_INT 3
13864: NEG
13865: PUSH
13866: EMPTY
13867: LIST
13868: LIST
13869: PUSH
13870: LD_INT 1
13872: NEG
13873: PUSH
13874: LD_INT 3
13876: NEG
13877: PUSH
13878: EMPTY
13879: LIST
13880: LIST
13881: PUSH
13882: LD_INT 3
13884: NEG
13885: PUSH
13886: LD_INT 1
13888: NEG
13889: PUSH
13890: EMPTY
13891: LIST
13892: LIST
13893: PUSH
13894: LD_INT 3
13896: NEG
13897: PUSH
13898: LD_INT 2
13900: NEG
13901: PUSH
13902: EMPTY
13903: LIST
13904: LIST
13905: PUSH
13906: EMPTY
13907: LIST
13908: LIST
13909: LIST
13910: LIST
13911: LIST
13912: LIST
13913: LIST
13914: LIST
13915: LIST
13916: LIST
13917: LIST
13918: LIST
13919: LIST
13920: LIST
13921: LIST
13922: LIST
13923: LIST
13924: LIST
13925: LIST
13926: LIST
13927: LIST
13928: LIST
13929: LIST
13930: ST_TO_ADDR
// Factory0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] ] ;
13931: LD_ADDR_VAR 0 29
13935: PUSH
13936: LD_INT 0
13938: PUSH
13939: LD_INT 0
13941: PUSH
13942: EMPTY
13943: LIST
13944: LIST
13945: PUSH
13946: LD_INT 0
13948: PUSH
13949: LD_INT 1
13951: NEG
13952: PUSH
13953: EMPTY
13954: LIST
13955: LIST
13956: PUSH
13957: LD_INT 1
13959: PUSH
13960: LD_INT 0
13962: PUSH
13963: EMPTY
13964: LIST
13965: LIST
13966: PUSH
13967: LD_INT 1
13969: PUSH
13970: LD_INT 1
13972: PUSH
13973: EMPTY
13974: LIST
13975: LIST
13976: PUSH
13977: LD_INT 0
13979: PUSH
13980: LD_INT 1
13982: PUSH
13983: EMPTY
13984: LIST
13985: LIST
13986: PUSH
13987: LD_INT 1
13989: NEG
13990: PUSH
13991: LD_INT 0
13993: PUSH
13994: EMPTY
13995: LIST
13996: LIST
13997: PUSH
13998: LD_INT 1
14000: NEG
14001: PUSH
14002: LD_INT 1
14004: NEG
14005: PUSH
14006: EMPTY
14007: LIST
14008: LIST
14009: PUSH
14010: LD_INT 1
14012: NEG
14013: PUSH
14014: LD_INT 2
14016: NEG
14017: PUSH
14018: EMPTY
14019: LIST
14020: LIST
14021: PUSH
14022: LD_INT 0
14024: PUSH
14025: LD_INT 2
14027: NEG
14028: PUSH
14029: EMPTY
14030: LIST
14031: LIST
14032: PUSH
14033: LD_INT 1
14035: PUSH
14036: LD_INT 1
14038: NEG
14039: PUSH
14040: EMPTY
14041: LIST
14042: LIST
14043: PUSH
14044: LD_INT 2
14046: PUSH
14047: LD_INT 0
14049: PUSH
14050: EMPTY
14051: LIST
14052: LIST
14053: PUSH
14054: LD_INT 2
14056: PUSH
14057: LD_INT 1
14059: PUSH
14060: EMPTY
14061: LIST
14062: LIST
14063: PUSH
14064: LD_INT 1
14066: PUSH
14067: LD_INT 2
14069: PUSH
14070: EMPTY
14071: LIST
14072: LIST
14073: PUSH
14074: LD_INT 0
14076: PUSH
14077: LD_INT 2
14079: PUSH
14080: EMPTY
14081: LIST
14082: LIST
14083: PUSH
14084: LD_INT 1
14086: NEG
14087: PUSH
14088: LD_INT 1
14090: PUSH
14091: EMPTY
14092: LIST
14093: LIST
14094: PUSH
14095: LD_INT 2
14097: NEG
14098: PUSH
14099: LD_INT 1
14101: NEG
14102: PUSH
14103: EMPTY
14104: LIST
14105: LIST
14106: PUSH
14107: LD_INT 2
14109: NEG
14110: PUSH
14111: LD_INT 2
14113: NEG
14114: PUSH
14115: EMPTY
14116: LIST
14117: LIST
14118: PUSH
14119: LD_INT 2
14121: NEG
14122: PUSH
14123: LD_INT 3
14125: NEG
14126: PUSH
14127: EMPTY
14128: LIST
14129: LIST
14130: PUSH
14131: LD_INT 2
14133: PUSH
14134: LD_INT 1
14136: NEG
14137: PUSH
14138: EMPTY
14139: LIST
14140: LIST
14141: PUSH
14142: LD_INT 3
14144: PUSH
14145: LD_INT 1
14147: PUSH
14148: EMPTY
14149: LIST
14150: LIST
14151: PUSH
14152: LD_INT 1
14154: PUSH
14155: LD_INT 3
14157: PUSH
14158: EMPTY
14159: LIST
14160: LIST
14161: PUSH
14162: LD_INT 1
14164: NEG
14165: PUSH
14166: LD_INT 2
14168: PUSH
14169: EMPTY
14170: LIST
14171: LIST
14172: PUSH
14173: LD_INT 3
14175: NEG
14176: PUSH
14177: LD_INT 2
14179: NEG
14180: PUSH
14181: EMPTY
14182: LIST
14183: LIST
14184: PUSH
14185: EMPTY
14186: LIST
14187: LIST
14188: LIST
14189: LIST
14190: LIST
14191: LIST
14192: LIST
14193: LIST
14194: LIST
14195: LIST
14196: LIST
14197: LIST
14198: LIST
14199: LIST
14200: LIST
14201: LIST
14202: LIST
14203: LIST
14204: LIST
14205: LIST
14206: LIST
14207: LIST
14208: LIST
14209: ST_TO_ADDR
// Factory1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
14210: LD_ADDR_VAR 0 30
14214: PUSH
14215: LD_INT 0
14217: PUSH
14218: LD_INT 0
14220: PUSH
14221: EMPTY
14222: LIST
14223: LIST
14224: PUSH
14225: LD_INT 0
14227: PUSH
14228: LD_INT 1
14230: NEG
14231: PUSH
14232: EMPTY
14233: LIST
14234: LIST
14235: PUSH
14236: LD_INT 1
14238: PUSH
14239: LD_INT 0
14241: PUSH
14242: EMPTY
14243: LIST
14244: LIST
14245: PUSH
14246: LD_INT 1
14248: PUSH
14249: LD_INT 1
14251: PUSH
14252: EMPTY
14253: LIST
14254: LIST
14255: PUSH
14256: LD_INT 0
14258: PUSH
14259: LD_INT 1
14261: PUSH
14262: EMPTY
14263: LIST
14264: LIST
14265: PUSH
14266: LD_INT 1
14268: NEG
14269: PUSH
14270: LD_INT 0
14272: PUSH
14273: EMPTY
14274: LIST
14275: LIST
14276: PUSH
14277: LD_INT 1
14279: NEG
14280: PUSH
14281: LD_INT 1
14283: NEG
14284: PUSH
14285: EMPTY
14286: LIST
14287: LIST
14288: PUSH
14289: LD_INT 1
14291: NEG
14292: PUSH
14293: LD_INT 2
14295: NEG
14296: PUSH
14297: EMPTY
14298: LIST
14299: LIST
14300: PUSH
14301: LD_INT 0
14303: PUSH
14304: LD_INT 2
14306: NEG
14307: PUSH
14308: EMPTY
14309: LIST
14310: LIST
14311: PUSH
14312: LD_INT 1
14314: PUSH
14315: LD_INT 1
14317: NEG
14318: PUSH
14319: EMPTY
14320: LIST
14321: LIST
14322: PUSH
14323: LD_INT 2
14325: PUSH
14326: LD_INT 0
14328: PUSH
14329: EMPTY
14330: LIST
14331: LIST
14332: PUSH
14333: LD_INT 2
14335: PUSH
14336: LD_INT 1
14338: PUSH
14339: EMPTY
14340: LIST
14341: LIST
14342: PUSH
14343: LD_INT 2
14345: PUSH
14346: LD_INT 2
14348: PUSH
14349: EMPTY
14350: LIST
14351: LIST
14352: PUSH
14353: LD_INT 1
14355: PUSH
14356: LD_INT 2
14358: PUSH
14359: EMPTY
14360: LIST
14361: LIST
14362: PUSH
14363: LD_INT 1
14365: NEG
14366: PUSH
14367: LD_INT 1
14369: PUSH
14370: EMPTY
14371: LIST
14372: LIST
14373: PUSH
14374: LD_INT 2
14376: NEG
14377: PUSH
14378: LD_INT 0
14380: PUSH
14381: EMPTY
14382: LIST
14383: LIST
14384: PUSH
14385: LD_INT 2
14387: NEG
14388: PUSH
14389: LD_INT 1
14391: NEG
14392: PUSH
14393: EMPTY
14394: LIST
14395: LIST
14396: PUSH
14397: LD_INT 1
14399: NEG
14400: PUSH
14401: LD_INT 3
14403: NEG
14404: PUSH
14405: EMPTY
14406: LIST
14407: LIST
14408: PUSH
14409: LD_INT 1
14411: PUSH
14412: LD_INT 2
14414: NEG
14415: PUSH
14416: EMPTY
14417: LIST
14418: LIST
14419: PUSH
14420: LD_INT 3
14422: PUSH
14423: LD_INT 2
14425: PUSH
14426: EMPTY
14427: LIST
14428: LIST
14429: PUSH
14430: LD_INT 2
14432: PUSH
14433: LD_INT 3
14435: PUSH
14436: EMPTY
14437: LIST
14438: LIST
14439: PUSH
14440: LD_INT 2
14442: NEG
14443: PUSH
14444: LD_INT 1
14446: PUSH
14447: EMPTY
14448: LIST
14449: LIST
14450: PUSH
14451: LD_INT 3
14453: NEG
14454: PUSH
14455: LD_INT 1
14457: NEG
14458: PUSH
14459: EMPTY
14460: LIST
14461: LIST
14462: PUSH
14463: EMPTY
14464: LIST
14465: LIST
14466: LIST
14467: LIST
14468: LIST
14469: LIST
14470: LIST
14471: LIST
14472: LIST
14473: LIST
14474: LIST
14475: LIST
14476: LIST
14477: LIST
14478: LIST
14479: LIST
14480: LIST
14481: LIST
14482: LIST
14483: LIST
14484: LIST
14485: LIST
14486: LIST
14487: ST_TO_ADDR
// Factory2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] ] ;
14488: LD_ADDR_VAR 0 31
14492: PUSH
14493: LD_INT 0
14495: PUSH
14496: LD_INT 0
14498: PUSH
14499: EMPTY
14500: LIST
14501: LIST
14502: PUSH
14503: LD_INT 0
14505: PUSH
14506: LD_INT 1
14508: NEG
14509: PUSH
14510: EMPTY
14511: LIST
14512: LIST
14513: PUSH
14514: LD_INT 1
14516: PUSH
14517: LD_INT 0
14519: PUSH
14520: EMPTY
14521: LIST
14522: LIST
14523: PUSH
14524: LD_INT 1
14526: PUSH
14527: LD_INT 1
14529: PUSH
14530: EMPTY
14531: LIST
14532: LIST
14533: PUSH
14534: LD_INT 0
14536: PUSH
14537: LD_INT 1
14539: PUSH
14540: EMPTY
14541: LIST
14542: LIST
14543: PUSH
14544: LD_INT 1
14546: NEG
14547: PUSH
14548: LD_INT 0
14550: PUSH
14551: EMPTY
14552: LIST
14553: LIST
14554: PUSH
14555: LD_INT 1
14557: NEG
14558: PUSH
14559: LD_INT 1
14561: NEG
14562: PUSH
14563: EMPTY
14564: LIST
14565: LIST
14566: PUSH
14567: LD_INT 1
14569: NEG
14570: PUSH
14571: LD_INT 2
14573: NEG
14574: PUSH
14575: EMPTY
14576: LIST
14577: LIST
14578: PUSH
14579: LD_INT 1
14581: PUSH
14582: LD_INT 1
14584: NEG
14585: PUSH
14586: EMPTY
14587: LIST
14588: LIST
14589: PUSH
14590: LD_INT 2
14592: PUSH
14593: LD_INT 0
14595: PUSH
14596: EMPTY
14597: LIST
14598: LIST
14599: PUSH
14600: LD_INT 2
14602: PUSH
14603: LD_INT 1
14605: PUSH
14606: EMPTY
14607: LIST
14608: LIST
14609: PUSH
14610: LD_INT 2
14612: PUSH
14613: LD_INT 2
14615: PUSH
14616: EMPTY
14617: LIST
14618: LIST
14619: PUSH
14620: LD_INT 1
14622: PUSH
14623: LD_INT 2
14625: PUSH
14626: EMPTY
14627: LIST
14628: LIST
14629: PUSH
14630: LD_INT 0
14632: PUSH
14633: LD_INT 2
14635: PUSH
14636: EMPTY
14637: LIST
14638: LIST
14639: PUSH
14640: LD_INT 1
14642: NEG
14643: PUSH
14644: LD_INT 1
14646: PUSH
14647: EMPTY
14648: LIST
14649: LIST
14650: PUSH
14651: LD_INT 2
14653: NEG
14654: PUSH
14655: LD_INT 1
14657: NEG
14658: PUSH
14659: EMPTY
14660: LIST
14661: LIST
14662: PUSH
14663: LD_INT 2
14665: NEG
14666: PUSH
14667: LD_INT 2
14669: NEG
14670: PUSH
14671: EMPTY
14672: LIST
14673: LIST
14674: PUSH
14675: LD_INT 2
14677: NEG
14678: PUSH
14679: LD_INT 3
14681: NEG
14682: PUSH
14683: EMPTY
14684: LIST
14685: LIST
14686: PUSH
14687: LD_INT 2
14689: PUSH
14690: LD_INT 1
14692: NEG
14693: PUSH
14694: EMPTY
14695: LIST
14696: LIST
14697: PUSH
14698: LD_INT 3
14700: PUSH
14701: LD_INT 1
14703: PUSH
14704: EMPTY
14705: LIST
14706: LIST
14707: PUSH
14708: LD_INT 1
14710: PUSH
14711: LD_INT 3
14713: PUSH
14714: EMPTY
14715: LIST
14716: LIST
14717: PUSH
14718: LD_INT 1
14720: NEG
14721: PUSH
14722: LD_INT 2
14724: PUSH
14725: EMPTY
14726: LIST
14727: LIST
14728: PUSH
14729: LD_INT 3
14731: NEG
14732: PUSH
14733: LD_INT 2
14735: NEG
14736: PUSH
14737: EMPTY
14738: LIST
14739: LIST
14740: PUSH
14741: EMPTY
14742: LIST
14743: LIST
14744: LIST
14745: LIST
14746: LIST
14747: LIST
14748: LIST
14749: LIST
14750: LIST
14751: LIST
14752: LIST
14753: LIST
14754: LIST
14755: LIST
14756: LIST
14757: LIST
14758: LIST
14759: LIST
14760: LIST
14761: LIST
14762: LIST
14763: LIST
14764: LIST
14765: ST_TO_ADDR
// Factory3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
14766: LD_ADDR_VAR 0 32
14770: PUSH
14771: LD_INT 0
14773: PUSH
14774: LD_INT 0
14776: PUSH
14777: EMPTY
14778: LIST
14779: LIST
14780: PUSH
14781: LD_INT 0
14783: PUSH
14784: LD_INT 1
14786: NEG
14787: PUSH
14788: EMPTY
14789: LIST
14790: LIST
14791: PUSH
14792: LD_INT 1
14794: PUSH
14795: LD_INT 0
14797: PUSH
14798: EMPTY
14799: LIST
14800: LIST
14801: PUSH
14802: LD_INT 1
14804: PUSH
14805: LD_INT 1
14807: PUSH
14808: EMPTY
14809: LIST
14810: LIST
14811: PUSH
14812: LD_INT 0
14814: PUSH
14815: LD_INT 1
14817: PUSH
14818: EMPTY
14819: LIST
14820: LIST
14821: PUSH
14822: LD_INT 1
14824: NEG
14825: PUSH
14826: LD_INT 0
14828: PUSH
14829: EMPTY
14830: LIST
14831: LIST
14832: PUSH
14833: LD_INT 1
14835: NEG
14836: PUSH
14837: LD_INT 1
14839: NEG
14840: PUSH
14841: EMPTY
14842: LIST
14843: LIST
14844: PUSH
14845: LD_INT 1
14847: NEG
14848: PUSH
14849: LD_INT 2
14851: NEG
14852: PUSH
14853: EMPTY
14854: LIST
14855: LIST
14856: PUSH
14857: LD_INT 0
14859: PUSH
14860: LD_INT 2
14862: NEG
14863: PUSH
14864: EMPTY
14865: LIST
14866: LIST
14867: PUSH
14868: LD_INT 1
14870: PUSH
14871: LD_INT 1
14873: NEG
14874: PUSH
14875: EMPTY
14876: LIST
14877: LIST
14878: PUSH
14879: LD_INT 2
14881: PUSH
14882: LD_INT 1
14884: PUSH
14885: EMPTY
14886: LIST
14887: LIST
14888: PUSH
14889: LD_INT 2
14891: PUSH
14892: LD_INT 2
14894: PUSH
14895: EMPTY
14896: LIST
14897: LIST
14898: PUSH
14899: LD_INT 1
14901: PUSH
14902: LD_INT 2
14904: PUSH
14905: EMPTY
14906: LIST
14907: LIST
14908: PUSH
14909: LD_INT 0
14911: PUSH
14912: LD_INT 2
14914: PUSH
14915: EMPTY
14916: LIST
14917: LIST
14918: PUSH
14919: LD_INT 1
14921: NEG
14922: PUSH
14923: LD_INT 1
14925: PUSH
14926: EMPTY
14927: LIST
14928: LIST
14929: PUSH
14930: LD_INT 2
14932: NEG
14933: PUSH
14934: LD_INT 0
14936: PUSH
14937: EMPTY
14938: LIST
14939: LIST
14940: PUSH
14941: LD_INT 2
14943: NEG
14944: PUSH
14945: LD_INT 1
14947: NEG
14948: PUSH
14949: EMPTY
14950: LIST
14951: LIST
14952: PUSH
14953: LD_INT 1
14955: NEG
14956: PUSH
14957: LD_INT 3
14959: NEG
14960: PUSH
14961: EMPTY
14962: LIST
14963: LIST
14964: PUSH
14965: LD_INT 1
14967: PUSH
14968: LD_INT 2
14970: NEG
14971: PUSH
14972: EMPTY
14973: LIST
14974: LIST
14975: PUSH
14976: LD_INT 3
14978: PUSH
14979: LD_INT 2
14981: PUSH
14982: EMPTY
14983: LIST
14984: LIST
14985: PUSH
14986: LD_INT 2
14988: PUSH
14989: LD_INT 3
14991: PUSH
14992: EMPTY
14993: LIST
14994: LIST
14995: PUSH
14996: LD_INT 2
14998: NEG
14999: PUSH
15000: LD_INT 1
15002: PUSH
15003: EMPTY
15004: LIST
15005: LIST
15006: PUSH
15007: LD_INT 3
15009: NEG
15010: PUSH
15011: LD_INT 1
15013: NEG
15014: PUSH
15015: EMPTY
15016: LIST
15017: LIST
15018: PUSH
15019: EMPTY
15020: LIST
15021: LIST
15022: LIST
15023: LIST
15024: LIST
15025: LIST
15026: LIST
15027: LIST
15028: LIST
15029: LIST
15030: LIST
15031: LIST
15032: LIST
15033: LIST
15034: LIST
15035: LIST
15036: LIST
15037: LIST
15038: LIST
15039: LIST
15040: LIST
15041: LIST
15042: LIST
15043: ST_TO_ADDR
// Factory4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] ] ;
15044: LD_ADDR_VAR 0 33
15048: PUSH
15049: LD_INT 0
15051: PUSH
15052: LD_INT 0
15054: PUSH
15055: EMPTY
15056: LIST
15057: LIST
15058: PUSH
15059: LD_INT 0
15061: PUSH
15062: LD_INT 1
15064: NEG
15065: PUSH
15066: EMPTY
15067: LIST
15068: LIST
15069: PUSH
15070: LD_INT 1
15072: PUSH
15073: LD_INT 0
15075: PUSH
15076: EMPTY
15077: LIST
15078: LIST
15079: PUSH
15080: LD_INT 1
15082: PUSH
15083: LD_INT 1
15085: PUSH
15086: EMPTY
15087: LIST
15088: LIST
15089: PUSH
15090: LD_INT 0
15092: PUSH
15093: LD_INT 1
15095: PUSH
15096: EMPTY
15097: LIST
15098: LIST
15099: PUSH
15100: LD_INT 1
15102: NEG
15103: PUSH
15104: LD_INT 0
15106: PUSH
15107: EMPTY
15108: LIST
15109: LIST
15110: PUSH
15111: LD_INT 1
15113: NEG
15114: PUSH
15115: LD_INT 1
15117: NEG
15118: PUSH
15119: EMPTY
15120: LIST
15121: LIST
15122: PUSH
15123: LD_INT 1
15125: NEG
15126: PUSH
15127: LD_INT 2
15129: NEG
15130: PUSH
15131: EMPTY
15132: LIST
15133: LIST
15134: PUSH
15135: LD_INT 1
15137: PUSH
15138: LD_INT 1
15140: NEG
15141: PUSH
15142: EMPTY
15143: LIST
15144: LIST
15145: PUSH
15146: LD_INT 2
15148: PUSH
15149: LD_INT 0
15151: PUSH
15152: EMPTY
15153: LIST
15154: LIST
15155: PUSH
15156: LD_INT 2
15158: PUSH
15159: LD_INT 1
15161: PUSH
15162: EMPTY
15163: LIST
15164: LIST
15165: PUSH
15166: LD_INT 1
15168: PUSH
15169: LD_INT 2
15171: PUSH
15172: EMPTY
15173: LIST
15174: LIST
15175: PUSH
15176: LD_INT 0
15178: PUSH
15179: LD_INT 2
15181: PUSH
15182: EMPTY
15183: LIST
15184: LIST
15185: PUSH
15186: LD_INT 1
15188: NEG
15189: PUSH
15190: LD_INT 1
15192: PUSH
15193: EMPTY
15194: LIST
15195: LIST
15196: PUSH
15197: LD_INT 2
15199: NEG
15200: PUSH
15201: LD_INT 0
15203: PUSH
15204: EMPTY
15205: LIST
15206: LIST
15207: PUSH
15208: LD_INT 2
15210: NEG
15211: PUSH
15212: LD_INT 1
15214: NEG
15215: PUSH
15216: EMPTY
15217: LIST
15218: LIST
15219: PUSH
15220: LD_INT 2
15222: NEG
15223: PUSH
15224: LD_INT 2
15226: NEG
15227: PUSH
15228: EMPTY
15229: LIST
15230: LIST
15231: PUSH
15232: LD_INT 2
15234: NEG
15235: PUSH
15236: LD_INT 3
15238: NEG
15239: PUSH
15240: EMPTY
15241: LIST
15242: LIST
15243: PUSH
15244: LD_INT 2
15246: PUSH
15247: LD_INT 1
15249: NEG
15250: PUSH
15251: EMPTY
15252: LIST
15253: LIST
15254: PUSH
15255: LD_INT 3
15257: PUSH
15258: LD_INT 1
15260: PUSH
15261: EMPTY
15262: LIST
15263: LIST
15264: PUSH
15265: LD_INT 1
15267: PUSH
15268: LD_INT 3
15270: PUSH
15271: EMPTY
15272: LIST
15273: LIST
15274: PUSH
15275: LD_INT 1
15277: NEG
15278: PUSH
15279: LD_INT 2
15281: PUSH
15282: EMPTY
15283: LIST
15284: LIST
15285: PUSH
15286: LD_INT 3
15288: NEG
15289: PUSH
15290: LD_INT 2
15292: NEG
15293: PUSH
15294: EMPTY
15295: LIST
15296: LIST
15297: PUSH
15298: EMPTY
15299: LIST
15300: LIST
15301: LIST
15302: LIST
15303: LIST
15304: LIST
15305: LIST
15306: LIST
15307: LIST
15308: LIST
15309: LIST
15310: LIST
15311: LIST
15312: LIST
15313: LIST
15314: LIST
15315: LIST
15316: LIST
15317: LIST
15318: LIST
15319: LIST
15320: LIST
15321: LIST
15322: ST_TO_ADDR
// Factory5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
15323: LD_ADDR_VAR 0 34
15327: PUSH
15328: LD_INT 0
15330: PUSH
15331: LD_INT 0
15333: PUSH
15334: EMPTY
15335: LIST
15336: LIST
15337: PUSH
15338: LD_INT 0
15340: PUSH
15341: LD_INT 1
15343: NEG
15344: PUSH
15345: EMPTY
15346: LIST
15347: LIST
15348: PUSH
15349: LD_INT 1
15351: PUSH
15352: LD_INT 0
15354: PUSH
15355: EMPTY
15356: LIST
15357: LIST
15358: PUSH
15359: LD_INT 1
15361: PUSH
15362: LD_INT 1
15364: PUSH
15365: EMPTY
15366: LIST
15367: LIST
15368: PUSH
15369: LD_INT 0
15371: PUSH
15372: LD_INT 1
15374: PUSH
15375: EMPTY
15376: LIST
15377: LIST
15378: PUSH
15379: LD_INT 1
15381: NEG
15382: PUSH
15383: LD_INT 0
15385: PUSH
15386: EMPTY
15387: LIST
15388: LIST
15389: PUSH
15390: LD_INT 1
15392: NEG
15393: PUSH
15394: LD_INT 1
15396: NEG
15397: PUSH
15398: EMPTY
15399: LIST
15400: LIST
15401: PUSH
15402: LD_INT 1
15404: NEG
15405: PUSH
15406: LD_INT 2
15408: NEG
15409: PUSH
15410: EMPTY
15411: LIST
15412: LIST
15413: PUSH
15414: LD_INT 0
15416: PUSH
15417: LD_INT 2
15419: NEG
15420: PUSH
15421: EMPTY
15422: LIST
15423: LIST
15424: PUSH
15425: LD_INT 1
15427: PUSH
15428: LD_INT 1
15430: NEG
15431: PUSH
15432: EMPTY
15433: LIST
15434: LIST
15435: PUSH
15436: LD_INT 2
15438: PUSH
15439: LD_INT 1
15441: PUSH
15442: EMPTY
15443: LIST
15444: LIST
15445: PUSH
15446: LD_INT 2
15448: PUSH
15449: LD_INT 2
15451: PUSH
15452: EMPTY
15453: LIST
15454: LIST
15455: PUSH
15456: LD_INT 1
15458: PUSH
15459: LD_INT 2
15461: PUSH
15462: EMPTY
15463: LIST
15464: LIST
15465: PUSH
15466: LD_INT 1
15468: NEG
15469: PUSH
15470: LD_INT 1
15472: PUSH
15473: EMPTY
15474: LIST
15475: LIST
15476: PUSH
15477: LD_INT 2
15479: NEG
15480: PUSH
15481: LD_INT 0
15483: PUSH
15484: EMPTY
15485: LIST
15486: LIST
15487: PUSH
15488: LD_INT 2
15490: NEG
15491: PUSH
15492: LD_INT 1
15494: NEG
15495: PUSH
15496: EMPTY
15497: LIST
15498: LIST
15499: PUSH
15500: LD_INT 2
15502: NEG
15503: PUSH
15504: LD_INT 2
15506: NEG
15507: PUSH
15508: EMPTY
15509: LIST
15510: LIST
15511: PUSH
15512: LD_INT 1
15514: NEG
15515: PUSH
15516: LD_INT 3
15518: NEG
15519: PUSH
15520: EMPTY
15521: LIST
15522: LIST
15523: PUSH
15524: LD_INT 1
15526: PUSH
15527: LD_INT 2
15529: NEG
15530: PUSH
15531: EMPTY
15532: LIST
15533: LIST
15534: PUSH
15535: LD_INT 3
15537: PUSH
15538: LD_INT 2
15540: PUSH
15541: EMPTY
15542: LIST
15543: LIST
15544: PUSH
15545: LD_INT 2
15547: PUSH
15548: LD_INT 3
15550: PUSH
15551: EMPTY
15552: LIST
15553: LIST
15554: PUSH
15555: LD_INT 2
15557: NEG
15558: PUSH
15559: LD_INT 1
15561: PUSH
15562: EMPTY
15563: LIST
15564: LIST
15565: PUSH
15566: LD_INT 3
15568: NEG
15569: PUSH
15570: LD_INT 1
15572: NEG
15573: PUSH
15574: EMPTY
15575: LIST
15576: LIST
15577: PUSH
15578: EMPTY
15579: LIST
15580: LIST
15581: LIST
15582: LIST
15583: LIST
15584: LIST
15585: LIST
15586: LIST
15587: LIST
15588: LIST
15589: LIST
15590: LIST
15591: LIST
15592: LIST
15593: LIST
15594: LIST
15595: LIST
15596: LIST
15597: LIST
15598: LIST
15599: LIST
15600: LIST
15601: LIST
15602: ST_TO_ADDR
// Ext0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 2 , 1 ] , [ - 2 , - 1 ] ] ;
15603: LD_ADDR_VAR 0 35
15607: PUSH
15608: LD_INT 0
15610: PUSH
15611: LD_INT 0
15613: PUSH
15614: EMPTY
15615: LIST
15616: LIST
15617: PUSH
15618: LD_INT 0
15620: PUSH
15621: LD_INT 1
15623: NEG
15624: PUSH
15625: EMPTY
15626: LIST
15627: LIST
15628: PUSH
15629: LD_INT 1
15631: PUSH
15632: LD_INT 0
15634: PUSH
15635: EMPTY
15636: LIST
15637: LIST
15638: PUSH
15639: LD_INT 1
15641: PUSH
15642: LD_INT 1
15644: PUSH
15645: EMPTY
15646: LIST
15647: LIST
15648: PUSH
15649: LD_INT 0
15651: PUSH
15652: LD_INT 1
15654: PUSH
15655: EMPTY
15656: LIST
15657: LIST
15658: PUSH
15659: LD_INT 1
15661: NEG
15662: PUSH
15663: LD_INT 0
15665: PUSH
15666: EMPTY
15667: LIST
15668: LIST
15669: PUSH
15670: LD_INT 1
15672: NEG
15673: PUSH
15674: LD_INT 1
15676: NEG
15677: PUSH
15678: EMPTY
15679: LIST
15680: LIST
15681: PUSH
15682: LD_INT 2
15684: PUSH
15685: LD_INT 1
15687: PUSH
15688: EMPTY
15689: LIST
15690: LIST
15691: PUSH
15692: LD_INT 2
15694: NEG
15695: PUSH
15696: LD_INT 1
15698: NEG
15699: PUSH
15700: EMPTY
15701: LIST
15702: LIST
15703: PUSH
15704: EMPTY
15705: LIST
15706: LIST
15707: LIST
15708: LIST
15709: LIST
15710: LIST
15711: LIST
15712: LIST
15713: LIST
15714: ST_TO_ADDR
// Ext1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , 2 ] ] ;
15715: LD_ADDR_VAR 0 36
15719: PUSH
15720: LD_INT 0
15722: PUSH
15723: LD_INT 0
15725: PUSH
15726: EMPTY
15727: LIST
15728: LIST
15729: PUSH
15730: LD_INT 0
15732: PUSH
15733: LD_INT 1
15735: NEG
15736: PUSH
15737: EMPTY
15738: LIST
15739: LIST
15740: PUSH
15741: LD_INT 1
15743: PUSH
15744: LD_INT 0
15746: PUSH
15747: EMPTY
15748: LIST
15749: LIST
15750: PUSH
15751: LD_INT 1
15753: PUSH
15754: LD_INT 1
15756: PUSH
15757: EMPTY
15758: LIST
15759: LIST
15760: PUSH
15761: LD_INT 0
15763: PUSH
15764: LD_INT 1
15766: PUSH
15767: EMPTY
15768: LIST
15769: LIST
15770: PUSH
15771: LD_INT 1
15773: NEG
15774: PUSH
15775: LD_INT 0
15777: PUSH
15778: EMPTY
15779: LIST
15780: LIST
15781: PUSH
15782: LD_INT 1
15784: NEG
15785: PUSH
15786: LD_INT 1
15788: NEG
15789: PUSH
15790: EMPTY
15791: LIST
15792: LIST
15793: PUSH
15794: LD_INT 1
15796: NEG
15797: PUSH
15798: LD_INT 2
15800: NEG
15801: PUSH
15802: EMPTY
15803: LIST
15804: LIST
15805: PUSH
15806: LD_INT 1
15808: PUSH
15809: LD_INT 2
15811: PUSH
15812: EMPTY
15813: LIST
15814: LIST
15815: PUSH
15816: EMPTY
15817: LIST
15818: LIST
15819: LIST
15820: LIST
15821: LIST
15822: LIST
15823: LIST
15824: LIST
15825: LIST
15826: ST_TO_ADDR
// Ext2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ - 1 , 1 ] ] ;
15827: LD_ADDR_VAR 0 37
15831: PUSH
15832: LD_INT 0
15834: PUSH
15835: LD_INT 0
15837: PUSH
15838: EMPTY
15839: LIST
15840: LIST
15841: PUSH
15842: LD_INT 0
15844: PUSH
15845: LD_INT 1
15847: NEG
15848: PUSH
15849: EMPTY
15850: LIST
15851: LIST
15852: PUSH
15853: LD_INT 1
15855: PUSH
15856: LD_INT 0
15858: PUSH
15859: EMPTY
15860: LIST
15861: LIST
15862: PUSH
15863: LD_INT 1
15865: PUSH
15866: LD_INT 1
15868: PUSH
15869: EMPTY
15870: LIST
15871: LIST
15872: PUSH
15873: LD_INT 0
15875: PUSH
15876: LD_INT 1
15878: PUSH
15879: EMPTY
15880: LIST
15881: LIST
15882: PUSH
15883: LD_INT 1
15885: NEG
15886: PUSH
15887: LD_INT 0
15889: PUSH
15890: EMPTY
15891: LIST
15892: LIST
15893: PUSH
15894: LD_INT 1
15896: NEG
15897: PUSH
15898: LD_INT 1
15900: NEG
15901: PUSH
15902: EMPTY
15903: LIST
15904: LIST
15905: PUSH
15906: LD_INT 1
15908: PUSH
15909: LD_INT 1
15911: NEG
15912: PUSH
15913: EMPTY
15914: LIST
15915: LIST
15916: PUSH
15917: LD_INT 1
15919: NEG
15920: PUSH
15921: LD_INT 1
15923: PUSH
15924: EMPTY
15925: LIST
15926: LIST
15927: PUSH
15928: EMPTY
15929: LIST
15930: LIST
15931: LIST
15932: LIST
15933: LIST
15934: LIST
15935: LIST
15936: LIST
15937: LIST
15938: ST_TO_ADDR
// Ext3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 2 , 1 ] , [ - 2 , - 1 ] ] ;
15939: LD_ADDR_VAR 0 38
15943: PUSH
15944: LD_INT 0
15946: PUSH
15947: LD_INT 0
15949: PUSH
15950: EMPTY
15951: LIST
15952: LIST
15953: PUSH
15954: LD_INT 0
15956: PUSH
15957: LD_INT 1
15959: NEG
15960: PUSH
15961: EMPTY
15962: LIST
15963: LIST
15964: PUSH
15965: LD_INT 1
15967: PUSH
15968: LD_INT 0
15970: PUSH
15971: EMPTY
15972: LIST
15973: LIST
15974: PUSH
15975: LD_INT 1
15977: PUSH
15978: LD_INT 1
15980: PUSH
15981: EMPTY
15982: LIST
15983: LIST
15984: PUSH
15985: LD_INT 0
15987: PUSH
15988: LD_INT 1
15990: PUSH
15991: EMPTY
15992: LIST
15993: LIST
15994: PUSH
15995: LD_INT 1
15997: NEG
15998: PUSH
15999: LD_INT 0
16001: PUSH
16002: EMPTY
16003: LIST
16004: LIST
16005: PUSH
16006: LD_INT 1
16008: NEG
16009: PUSH
16010: LD_INT 1
16012: NEG
16013: PUSH
16014: EMPTY
16015: LIST
16016: LIST
16017: PUSH
16018: LD_INT 2
16020: PUSH
16021: LD_INT 1
16023: PUSH
16024: EMPTY
16025: LIST
16026: LIST
16027: PUSH
16028: LD_INT 2
16030: NEG
16031: PUSH
16032: LD_INT 1
16034: NEG
16035: PUSH
16036: EMPTY
16037: LIST
16038: LIST
16039: PUSH
16040: EMPTY
16041: LIST
16042: LIST
16043: LIST
16044: LIST
16045: LIST
16046: LIST
16047: LIST
16048: LIST
16049: LIST
16050: ST_TO_ADDR
// Ext4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , 2 ] ] ;
16051: LD_ADDR_VAR 0 39
16055: PUSH
16056: LD_INT 0
16058: PUSH
16059: LD_INT 0
16061: PUSH
16062: EMPTY
16063: LIST
16064: LIST
16065: PUSH
16066: LD_INT 0
16068: PUSH
16069: LD_INT 1
16071: NEG
16072: PUSH
16073: EMPTY
16074: LIST
16075: LIST
16076: PUSH
16077: LD_INT 1
16079: PUSH
16080: LD_INT 0
16082: PUSH
16083: EMPTY
16084: LIST
16085: LIST
16086: PUSH
16087: LD_INT 1
16089: PUSH
16090: LD_INT 1
16092: PUSH
16093: EMPTY
16094: LIST
16095: LIST
16096: PUSH
16097: LD_INT 0
16099: PUSH
16100: LD_INT 1
16102: PUSH
16103: EMPTY
16104: LIST
16105: LIST
16106: PUSH
16107: LD_INT 1
16109: NEG
16110: PUSH
16111: LD_INT 0
16113: PUSH
16114: EMPTY
16115: LIST
16116: LIST
16117: PUSH
16118: LD_INT 1
16120: NEG
16121: PUSH
16122: LD_INT 1
16124: NEG
16125: PUSH
16126: EMPTY
16127: LIST
16128: LIST
16129: PUSH
16130: LD_INT 1
16132: NEG
16133: PUSH
16134: LD_INT 2
16136: NEG
16137: PUSH
16138: EMPTY
16139: LIST
16140: LIST
16141: PUSH
16142: LD_INT 1
16144: PUSH
16145: LD_INT 2
16147: PUSH
16148: EMPTY
16149: LIST
16150: LIST
16151: PUSH
16152: EMPTY
16153: LIST
16154: LIST
16155: LIST
16156: LIST
16157: LIST
16158: LIST
16159: LIST
16160: LIST
16161: LIST
16162: ST_TO_ADDR
// Ext5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ - 1 , 1 ] ] ;
16163: LD_ADDR_VAR 0 40
16167: PUSH
16168: LD_INT 0
16170: PUSH
16171: LD_INT 0
16173: PUSH
16174: EMPTY
16175: LIST
16176: LIST
16177: PUSH
16178: LD_INT 0
16180: PUSH
16181: LD_INT 1
16183: NEG
16184: PUSH
16185: EMPTY
16186: LIST
16187: LIST
16188: PUSH
16189: LD_INT 1
16191: PUSH
16192: LD_INT 0
16194: PUSH
16195: EMPTY
16196: LIST
16197: LIST
16198: PUSH
16199: LD_INT 1
16201: PUSH
16202: LD_INT 1
16204: PUSH
16205: EMPTY
16206: LIST
16207: LIST
16208: PUSH
16209: LD_INT 0
16211: PUSH
16212: LD_INT 1
16214: PUSH
16215: EMPTY
16216: LIST
16217: LIST
16218: PUSH
16219: LD_INT 1
16221: NEG
16222: PUSH
16223: LD_INT 0
16225: PUSH
16226: EMPTY
16227: LIST
16228: LIST
16229: PUSH
16230: LD_INT 1
16232: NEG
16233: PUSH
16234: LD_INT 1
16236: NEG
16237: PUSH
16238: EMPTY
16239: LIST
16240: LIST
16241: PUSH
16242: LD_INT 1
16244: PUSH
16245: LD_INT 1
16247: NEG
16248: PUSH
16249: EMPTY
16250: LIST
16251: LIST
16252: PUSH
16253: LD_INT 1
16255: NEG
16256: PUSH
16257: LD_INT 1
16259: PUSH
16260: EMPTY
16261: LIST
16262: LIST
16263: PUSH
16264: EMPTY
16265: LIST
16266: LIST
16267: LIST
16268: LIST
16269: LIST
16270: LIST
16271: LIST
16272: LIST
16273: LIST
16274: ST_TO_ADDR
// Lab0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
16275: LD_ADDR_VAR 0 41
16279: PUSH
16280: LD_INT 0
16282: PUSH
16283: LD_INT 0
16285: PUSH
16286: EMPTY
16287: LIST
16288: LIST
16289: PUSH
16290: LD_INT 0
16292: PUSH
16293: LD_INT 1
16295: NEG
16296: PUSH
16297: EMPTY
16298: LIST
16299: LIST
16300: PUSH
16301: LD_INT 1
16303: PUSH
16304: LD_INT 0
16306: PUSH
16307: EMPTY
16308: LIST
16309: LIST
16310: PUSH
16311: LD_INT 1
16313: PUSH
16314: LD_INT 1
16316: PUSH
16317: EMPTY
16318: LIST
16319: LIST
16320: PUSH
16321: LD_INT 0
16323: PUSH
16324: LD_INT 1
16326: PUSH
16327: EMPTY
16328: LIST
16329: LIST
16330: PUSH
16331: LD_INT 1
16333: NEG
16334: PUSH
16335: LD_INT 0
16337: PUSH
16338: EMPTY
16339: LIST
16340: LIST
16341: PUSH
16342: LD_INT 1
16344: NEG
16345: PUSH
16346: LD_INT 1
16348: NEG
16349: PUSH
16350: EMPTY
16351: LIST
16352: LIST
16353: PUSH
16354: LD_INT 1
16356: NEG
16357: PUSH
16358: LD_INT 2
16360: NEG
16361: PUSH
16362: EMPTY
16363: LIST
16364: LIST
16365: PUSH
16366: LD_INT 1
16368: PUSH
16369: LD_INT 1
16371: NEG
16372: PUSH
16373: EMPTY
16374: LIST
16375: LIST
16376: PUSH
16377: LD_INT 2
16379: PUSH
16380: LD_INT 0
16382: PUSH
16383: EMPTY
16384: LIST
16385: LIST
16386: PUSH
16387: LD_INT 2
16389: PUSH
16390: LD_INT 1
16392: PUSH
16393: EMPTY
16394: LIST
16395: LIST
16396: PUSH
16397: LD_INT 2
16399: PUSH
16400: LD_INT 2
16402: PUSH
16403: EMPTY
16404: LIST
16405: LIST
16406: PUSH
16407: LD_INT 1
16409: PUSH
16410: LD_INT 2
16412: PUSH
16413: EMPTY
16414: LIST
16415: LIST
16416: PUSH
16417: LD_INT 1
16419: NEG
16420: PUSH
16421: LD_INT 1
16423: PUSH
16424: EMPTY
16425: LIST
16426: LIST
16427: PUSH
16428: LD_INT 2
16430: NEG
16431: PUSH
16432: LD_INT 0
16434: PUSH
16435: EMPTY
16436: LIST
16437: LIST
16438: PUSH
16439: LD_INT 2
16441: NEG
16442: PUSH
16443: LD_INT 1
16445: NEG
16446: PUSH
16447: EMPTY
16448: LIST
16449: LIST
16450: PUSH
16451: LD_INT 2
16453: NEG
16454: PUSH
16455: LD_INT 2
16457: NEG
16458: PUSH
16459: EMPTY
16460: LIST
16461: LIST
16462: PUSH
16463: LD_INT 2
16465: NEG
16466: PUSH
16467: LD_INT 3
16469: NEG
16470: PUSH
16471: EMPTY
16472: LIST
16473: LIST
16474: PUSH
16475: LD_INT 2
16477: PUSH
16478: LD_INT 1
16480: NEG
16481: PUSH
16482: EMPTY
16483: LIST
16484: LIST
16485: PUSH
16486: LD_INT 3
16488: PUSH
16489: LD_INT 0
16491: PUSH
16492: EMPTY
16493: LIST
16494: LIST
16495: PUSH
16496: LD_INT 3
16498: PUSH
16499: LD_INT 1
16501: PUSH
16502: EMPTY
16503: LIST
16504: LIST
16505: PUSH
16506: LD_INT 3
16508: PUSH
16509: LD_INT 2
16511: PUSH
16512: EMPTY
16513: LIST
16514: LIST
16515: PUSH
16516: LD_INT 3
16518: PUSH
16519: LD_INT 3
16521: PUSH
16522: EMPTY
16523: LIST
16524: LIST
16525: PUSH
16526: LD_INT 2
16528: PUSH
16529: LD_INT 3
16531: PUSH
16532: EMPTY
16533: LIST
16534: LIST
16535: PUSH
16536: LD_INT 2
16538: NEG
16539: PUSH
16540: LD_INT 1
16542: PUSH
16543: EMPTY
16544: LIST
16545: LIST
16546: PUSH
16547: LD_INT 3
16549: NEG
16550: PUSH
16551: LD_INT 0
16553: PUSH
16554: EMPTY
16555: LIST
16556: LIST
16557: PUSH
16558: LD_INT 3
16560: NEG
16561: PUSH
16562: LD_INT 1
16564: NEG
16565: PUSH
16566: EMPTY
16567: LIST
16568: LIST
16569: PUSH
16570: LD_INT 3
16572: NEG
16573: PUSH
16574: LD_INT 2
16576: NEG
16577: PUSH
16578: EMPTY
16579: LIST
16580: LIST
16581: PUSH
16582: LD_INT 3
16584: NEG
16585: PUSH
16586: LD_INT 3
16588: NEG
16589: PUSH
16590: EMPTY
16591: LIST
16592: LIST
16593: PUSH
16594: EMPTY
16595: LIST
16596: LIST
16597: LIST
16598: LIST
16599: LIST
16600: LIST
16601: LIST
16602: LIST
16603: LIST
16604: LIST
16605: LIST
16606: LIST
16607: LIST
16608: LIST
16609: LIST
16610: LIST
16611: LIST
16612: LIST
16613: LIST
16614: LIST
16615: LIST
16616: LIST
16617: LIST
16618: LIST
16619: LIST
16620: LIST
16621: LIST
16622: LIST
16623: LIST
16624: ST_TO_ADDR
// Lab1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
16625: LD_ADDR_VAR 0 42
16629: PUSH
16630: LD_INT 0
16632: PUSH
16633: LD_INT 0
16635: PUSH
16636: EMPTY
16637: LIST
16638: LIST
16639: PUSH
16640: LD_INT 0
16642: PUSH
16643: LD_INT 1
16645: NEG
16646: PUSH
16647: EMPTY
16648: LIST
16649: LIST
16650: PUSH
16651: LD_INT 1
16653: PUSH
16654: LD_INT 0
16656: PUSH
16657: EMPTY
16658: LIST
16659: LIST
16660: PUSH
16661: LD_INT 1
16663: PUSH
16664: LD_INT 1
16666: PUSH
16667: EMPTY
16668: LIST
16669: LIST
16670: PUSH
16671: LD_INT 0
16673: PUSH
16674: LD_INT 1
16676: PUSH
16677: EMPTY
16678: LIST
16679: LIST
16680: PUSH
16681: LD_INT 1
16683: NEG
16684: PUSH
16685: LD_INT 0
16687: PUSH
16688: EMPTY
16689: LIST
16690: LIST
16691: PUSH
16692: LD_INT 1
16694: NEG
16695: PUSH
16696: LD_INT 1
16698: NEG
16699: PUSH
16700: EMPTY
16701: LIST
16702: LIST
16703: PUSH
16704: LD_INT 1
16706: NEG
16707: PUSH
16708: LD_INT 2
16710: NEG
16711: PUSH
16712: EMPTY
16713: LIST
16714: LIST
16715: PUSH
16716: LD_INT 0
16718: PUSH
16719: LD_INT 2
16721: NEG
16722: PUSH
16723: EMPTY
16724: LIST
16725: LIST
16726: PUSH
16727: LD_INT 1
16729: PUSH
16730: LD_INT 1
16732: NEG
16733: PUSH
16734: EMPTY
16735: LIST
16736: LIST
16737: PUSH
16738: LD_INT 2
16740: PUSH
16741: LD_INT 1
16743: PUSH
16744: EMPTY
16745: LIST
16746: LIST
16747: PUSH
16748: LD_INT 2
16750: PUSH
16751: LD_INT 2
16753: PUSH
16754: EMPTY
16755: LIST
16756: LIST
16757: PUSH
16758: LD_INT 1
16760: PUSH
16761: LD_INT 2
16763: PUSH
16764: EMPTY
16765: LIST
16766: LIST
16767: PUSH
16768: LD_INT 0
16770: PUSH
16771: LD_INT 2
16773: PUSH
16774: EMPTY
16775: LIST
16776: LIST
16777: PUSH
16778: LD_INT 1
16780: NEG
16781: PUSH
16782: LD_INT 1
16784: PUSH
16785: EMPTY
16786: LIST
16787: LIST
16788: PUSH
16789: LD_INT 2
16791: NEG
16792: PUSH
16793: LD_INT 1
16795: NEG
16796: PUSH
16797: EMPTY
16798: LIST
16799: LIST
16800: PUSH
16801: LD_INT 2
16803: NEG
16804: PUSH
16805: LD_INT 2
16807: NEG
16808: PUSH
16809: EMPTY
16810: LIST
16811: LIST
16812: PUSH
16813: LD_INT 2
16815: NEG
16816: PUSH
16817: LD_INT 3
16819: NEG
16820: PUSH
16821: EMPTY
16822: LIST
16823: LIST
16824: PUSH
16825: LD_INT 1
16827: NEG
16828: PUSH
16829: LD_INT 3
16831: NEG
16832: PUSH
16833: EMPTY
16834: LIST
16835: LIST
16836: PUSH
16837: LD_INT 0
16839: PUSH
16840: LD_INT 3
16842: NEG
16843: PUSH
16844: EMPTY
16845: LIST
16846: LIST
16847: PUSH
16848: LD_INT 1
16850: PUSH
16851: LD_INT 2
16853: NEG
16854: PUSH
16855: EMPTY
16856: LIST
16857: LIST
16858: PUSH
16859: LD_INT 3
16861: PUSH
16862: LD_INT 2
16864: PUSH
16865: EMPTY
16866: LIST
16867: LIST
16868: PUSH
16869: LD_INT 3
16871: PUSH
16872: LD_INT 3
16874: PUSH
16875: EMPTY
16876: LIST
16877: LIST
16878: PUSH
16879: LD_INT 2
16881: PUSH
16882: LD_INT 3
16884: PUSH
16885: EMPTY
16886: LIST
16887: LIST
16888: PUSH
16889: LD_INT 1
16891: PUSH
16892: LD_INT 3
16894: PUSH
16895: EMPTY
16896: LIST
16897: LIST
16898: PUSH
16899: LD_INT 0
16901: PUSH
16902: LD_INT 3
16904: PUSH
16905: EMPTY
16906: LIST
16907: LIST
16908: PUSH
16909: LD_INT 1
16911: NEG
16912: PUSH
16913: LD_INT 2
16915: PUSH
16916: EMPTY
16917: LIST
16918: LIST
16919: PUSH
16920: LD_INT 3
16922: NEG
16923: PUSH
16924: LD_INT 2
16926: NEG
16927: PUSH
16928: EMPTY
16929: LIST
16930: LIST
16931: PUSH
16932: LD_INT 3
16934: NEG
16935: PUSH
16936: LD_INT 3
16938: NEG
16939: PUSH
16940: EMPTY
16941: LIST
16942: LIST
16943: PUSH
16944: EMPTY
16945: LIST
16946: LIST
16947: LIST
16948: LIST
16949: LIST
16950: LIST
16951: LIST
16952: LIST
16953: LIST
16954: LIST
16955: LIST
16956: LIST
16957: LIST
16958: LIST
16959: LIST
16960: LIST
16961: LIST
16962: LIST
16963: LIST
16964: LIST
16965: LIST
16966: LIST
16967: LIST
16968: LIST
16969: LIST
16970: LIST
16971: LIST
16972: LIST
16973: LIST
16974: ST_TO_ADDR
// Lab2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
16975: LD_ADDR_VAR 0 43
16979: PUSH
16980: LD_INT 0
16982: PUSH
16983: LD_INT 0
16985: PUSH
16986: EMPTY
16987: LIST
16988: LIST
16989: PUSH
16990: LD_INT 0
16992: PUSH
16993: LD_INT 1
16995: NEG
16996: PUSH
16997: EMPTY
16998: LIST
16999: LIST
17000: PUSH
17001: LD_INT 1
17003: PUSH
17004: LD_INT 0
17006: PUSH
17007: EMPTY
17008: LIST
17009: LIST
17010: PUSH
17011: LD_INT 1
17013: PUSH
17014: LD_INT 1
17016: PUSH
17017: EMPTY
17018: LIST
17019: LIST
17020: PUSH
17021: LD_INT 0
17023: PUSH
17024: LD_INT 1
17026: PUSH
17027: EMPTY
17028: LIST
17029: LIST
17030: PUSH
17031: LD_INT 1
17033: NEG
17034: PUSH
17035: LD_INT 0
17037: PUSH
17038: EMPTY
17039: LIST
17040: LIST
17041: PUSH
17042: LD_INT 1
17044: NEG
17045: PUSH
17046: LD_INT 1
17048: NEG
17049: PUSH
17050: EMPTY
17051: LIST
17052: LIST
17053: PUSH
17054: LD_INT 1
17056: NEG
17057: PUSH
17058: LD_INT 2
17060: NEG
17061: PUSH
17062: EMPTY
17063: LIST
17064: LIST
17065: PUSH
17066: LD_INT 0
17068: PUSH
17069: LD_INT 2
17071: NEG
17072: PUSH
17073: EMPTY
17074: LIST
17075: LIST
17076: PUSH
17077: LD_INT 1
17079: PUSH
17080: LD_INT 1
17082: NEG
17083: PUSH
17084: EMPTY
17085: LIST
17086: LIST
17087: PUSH
17088: LD_INT 2
17090: PUSH
17091: LD_INT 0
17093: PUSH
17094: EMPTY
17095: LIST
17096: LIST
17097: PUSH
17098: LD_INT 2
17100: PUSH
17101: LD_INT 1
17103: PUSH
17104: EMPTY
17105: LIST
17106: LIST
17107: PUSH
17108: LD_INT 1
17110: PUSH
17111: LD_INT 2
17113: PUSH
17114: EMPTY
17115: LIST
17116: LIST
17117: PUSH
17118: LD_INT 0
17120: PUSH
17121: LD_INT 2
17123: PUSH
17124: EMPTY
17125: LIST
17126: LIST
17127: PUSH
17128: LD_INT 1
17130: NEG
17131: PUSH
17132: LD_INT 1
17134: PUSH
17135: EMPTY
17136: LIST
17137: LIST
17138: PUSH
17139: LD_INT 2
17141: NEG
17142: PUSH
17143: LD_INT 0
17145: PUSH
17146: EMPTY
17147: LIST
17148: LIST
17149: PUSH
17150: LD_INT 2
17152: NEG
17153: PUSH
17154: LD_INT 1
17156: NEG
17157: PUSH
17158: EMPTY
17159: LIST
17160: LIST
17161: PUSH
17162: LD_INT 1
17164: NEG
17165: PUSH
17166: LD_INT 3
17168: NEG
17169: PUSH
17170: EMPTY
17171: LIST
17172: LIST
17173: PUSH
17174: LD_INT 0
17176: PUSH
17177: LD_INT 3
17179: NEG
17180: PUSH
17181: EMPTY
17182: LIST
17183: LIST
17184: PUSH
17185: LD_INT 1
17187: PUSH
17188: LD_INT 2
17190: NEG
17191: PUSH
17192: EMPTY
17193: LIST
17194: LIST
17195: PUSH
17196: LD_INT 2
17198: PUSH
17199: LD_INT 1
17201: NEG
17202: PUSH
17203: EMPTY
17204: LIST
17205: LIST
17206: PUSH
17207: LD_INT 3
17209: PUSH
17210: LD_INT 0
17212: PUSH
17213: EMPTY
17214: LIST
17215: LIST
17216: PUSH
17217: LD_INT 3
17219: PUSH
17220: LD_INT 1
17222: PUSH
17223: EMPTY
17224: LIST
17225: LIST
17226: PUSH
17227: LD_INT 1
17229: PUSH
17230: LD_INT 3
17232: PUSH
17233: EMPTY
17234: LIST
17235: LIST
17236: PUSH
17237: LD_INT 0
17239: PUSH
17240: LD_INT 3
17242: PUSH
17243: EMPTY
17244: LIST
17245: LIST
17246: PUSH
17247: LD_INT 1
17249: NEG
17250: PUSH
17251: LD_INT 2
17253: PUSH
17254: EMPTY
17255: LIST
17256: LIST
17257: PUSH
17258: LD_INT 2
17260: NEG
17261: PUSH
17262: LD_INT 1
17264: PUSH
17265: EMPTY
17266: LIST
17267: LIST
17268: PUSH
17269: LD_INT 3
17271: NEG
17272: PUSH
17273: LD_INT 0
17275: PUSH
17276: EMPTY
17277: LIST
17278: LIST
17279: PUSH
17280: LD_INT 3
17282: NEG
17283: PUSH
17284: LD_INT 1
17286: NEG
17287: PUSH
17288: EMPTY
17289: LIST
17290: LIST
17291: PUSH
17292: EMPTY
17293: LIST
17294: LIST
17295: LIST
17296: LIST
17297: LIST
17298: LIST
17299: LIST
17300: LIST
17301: LIST
17302: LIST
17303: LIST
17304: LIST
17305: LIST
17306: LIST
17307: LIST
17308: LIST
17309: LIST
17310: LIST
17311: LIST
17312: LIST
17313: LIST
17314: LIST
17315: LIST
17316: LIST
17317: LIST
17318: LIST
17319: LIST
17320: LIST
17321: LIST
17322: ST_TO_ADDR
// Lab3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
17323: LD_ADDR_VAR 0 44
17327: PUSH
17328: LD_INT 0
17330: PUSH
17331: LD_INT 0
17333: PUSH
17334: EMPTY
17335: LIST
17336: LIST
17337: PUSH
17338: LD_INT 0
17340: PUSH
17341: LD_INT 1
17343: NEG
17344: PUSH
17345: EMPTY
17346: LIST
17347: LIST
17348: PUSH
17349: LD_INT 1
17351: PUSH
17352: LD_INT 0
17354: PUSH
17355: EMPTY
17356: LIST
17357: LIST
17358: PUSH
17359: LD_INT 1
17361: PUSH
17362: LD_INT 1
17364: PUSH
17365: EMPTY
17366: LIST
17367: LIST
17368: PUSH
17369: LD_INT 0
17371: PUSH
17372: LD_INT 1
17374: PUSH
17375: EMPTY
17376: LIST
17377: LIST
17378: PUSH
17379: LD_INT 1
17381: NEG
17382: PUSH
17383: LD_INT 0
17385: PUSH
17386: EMPTY
17387: LIST
17388: LIST
17389: PUSH
17390: LD_INT 1
17392: NEG
17393: PUSH
17394: LD_INT 1
17396: NEG
17397: PUSH
17398: EMPTY
17399: LIST
17400: LIST
17401: PUSH
17402: LD_INT 1
17404: NEG
17405: PUSH
17406: LD_INT 2
17408: NEG
17409: PUSH
17410: EMPTY
17411: LIST
17412: LIST
17413: PUSH
17414: LD_INT 1
17416: PUSH
17417: LD_INT 1
17419: NEG
17420: PUSH
17421: EMPTY
17422: LIST
17423: LIST
17424: PUSH
17425: LD_INT 2
17427: PUSH
17428: LD_INT 0
17430: PUSH
17431: EMPTY
17432: LIST
17433: LIST
17434: PUSH
17435: LD_INT 2
17437: PUSH
17438: LD_INT 1
17440: PUSH
17441: EMPTY
17442: LIST
17443: LIST
17444: PUSH
17445: LD_INT 2
17447: PUSH
17448: LD_INT 2
17450: PUSH
17451: EMPTY
17452: LIST
17453: LIST
17454: PUSH
17455: LD_INT 1
17457: PUSH
17458: LD_INT 2
17460: PUSH
17461: EMPTY
17462: LIST
17463: LIST
17464: PUSH
17465: LD_INT 1
17467: NEG
17468: PUSH
17469: LD_INT 1
17471: PUSH
17472: EMPTY
17473: LIST
17474: LIST
17475: PUSH
17476: LD_INT 2
17478: NEG
17479: PUSH
17480: LD_INT 0
17482: PUSH
17483: EMPTY
17484: LIST
17485: LIST
17486: PUSH
17487: LD_INT 2
17489: NEG
17490: PUSH
17491: LD_INT 1
17493: NEG
17494: PUSH
17495: EMPTY
17496: LIST
17497: LIST
17498: PUSH
17499: LD_INT 2
17501: NEG
17502: PUSH
17503: LD_INT 2
17505: NEG
17506: PUSH
17507: EMPTY
17508: LIST
17509: LIST
17510: PUSH
17511: LD_INT 2
17513: NEG
17514: PUSH
17515: LD_INT 3
17517: NEG
17518: PUSH
17519: EMPTY
17520: LIST
17521: LIST
17522: PUSH
17523: LD_INT 2
17525: PUSH
17526: LD_INT 1
17528: NEG
17529: PUSH
17530: EMPTY
17531: LIST
17532: LIST
17533: PUSH
17534: LD_INT 3
17536: PUSH
17537: LD_INT 0
17539: PUSH
17540: EMPTY
17541: LIST
17542: LIST
17543: PUSH
17544: LD_INT 3
17546: PUSH
17547: LD_INT 1
17549: PUSH
17550: EMPTY
17551: LIST
17552: LIST
17553: PUSH
17554: LD_INT 3
17556: PUSH
17557: LD_INT 2
17559: PUSH
17560: EMPTY
17561: LIST
17562: LIST
17563: PUSH
17564: LD_INT 3
17566: PUSH
17567: LD_INT 3
17569: PUSH
17570: EMPTY
17571: LIST
17572: LIST
17573: PUSH
17574: LD_INT 2
17576: PUSH
17577: LD_INT 3
17579: PUSH
17580: EMPTY
17581: LIST
17582: LIST
17583: PUSH
17584: LD_INT 2
17586: NEG
17587: PUSH
17588: LD_INT 1
17590: PUSH
17591: EMPTY
17592: LIST
17593: LIST
17594: PUSH
17595: LD_INT 3
17597: NEG
17598: PUSH
17599: LD_INT 0
17601: PUSH
17602: EMPTY
17603: LIST
17604: LIST
17605: PUSH
17606: LD_INT 3
17608: NEG
17609: PUSH
17610: LD_INT 1
17612: NEG
17613: PUSH
17614: EMPTY
17615: LIST
17616: LIST
17617: PUSH
17618: LD_INT 3
17620: NEG
17621: PUSH
17622: LD_INT 2
17624: NEG
17625: PUSH
17626: EMPTY
17627: LIST
17628: LIST
17629: PUSH
17630: LD_INT 3
17632: NEG
17633: PUSH
17634: LD_INT 3
17636: NEG
17637: PUSH
17638: EMPTY
17639: LIST
17640: LIST
17641: PUSH
17642: EMPTY
17643: LIST
17644: LIST
17645: LIST
17646: LIST
17647: LIST
17648: LIST
17649: LIST
17650: LIST
17651: LIST
17652: LIST
17653: LIST
17654: LIST
17655: LIST
17656: LIST
17657: LIST
17658: LIST
17659: LIST
17660: LIST
17661: LIST
17662: LIST
17663: LIST
17664: LIST
17665: LIST
17666: LIST
17667: LIST
17668: LIST
17669: LIST
17670: LIST
17671: LIST
17672: ST_TO_ADDR
// Lab4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
17673: LD_ADDR_VAR 0 45
17677: PUSH
17678: LD_INT 0
17680: PUSH
17681: LD_INT 0
17683: PUSH
17684: EMPTY
17685: LIST
17686: LIST
17687: PUSH
17688: LD_INT 0
17690: PUSH
17691: LD_INT 1
17693: NEG
17694: PUSH
17695: EMPTY
17696: LIST
17697: LIST
17698: PUSH
17699: LD_INT 1
17701: PUSH
17702: LD_INT 0
17704: PUSH
17705: EMPTY
17706: LIST
17707: LIST
17708: PUSH
17709: LD_INT 1
17711: PUSH
17712: LD_INT 1
17714: PUSH
17715: EMPTY
17716: LIST
17717: LIST
17718: PUSH
17719: LD_INT 0
17721: PUSH
17722: LD_INT 1
17724: PUSH
17725: EMPTY
17726: LIST
17727: LIST
17728: PUSH
17729: LD_INT 1
17731: NEG
17732: PUSH
17733: LD_INT 0
17735: PUSH
17736: EMPTY
17737: LIST
17738: LIST
17739: PUSH
17740: LD_INT 1
17742: NEG
17743: PUSH
17744: LD_INT 1
17746: NEG
17747: PUSH
17748: EMPTY
17749: LIST
17750: LIST
17751: PUSH
17752: LD_INT 1
17754: NEG
17755: PUSH
17756: LD_INT 2
17758: NEG
17759: PUSH
17760: EMPTY
17761: LIST
17762: LIST
17763: PUSH
17764: LD_INT 0
17766: PUSH
17767: LD_INT 2
17769: NEG
17770: PUSH
17771: EMPTY
17772: LIST
17773: LIST
17774: PUSH
17775: LD_INT 1
17777: PUSH
17778: LD_INT 1
17780: NEG
17781: PUSH
17782: EMPTY
17783: LIST
17784: LIST
17785: PUSH
17786: LD_INT 2
17788: PUSH
17789: LD_INT 1
17791: PUSH
17792: EMPTY
17793: LIST
17794: LIST
17795: PUSH
17796: LD_INT 2
17798: PUSH
17799: LD_INT 2
17801: PUSH
17802: EMPTY
17803: LIST
17804: LIST
17805: PUSH
17806: LD_INT 1
17808: PUSH
17809: LD_INT 2
17811: PUSH
17812: EMPTY
17813: LIST
17814: LIST
17815: PUSH
17816: LD_INT 0
17818: PUSH
17819: LD_INT 2
17821: PUSH
17822: EMPTY
17823: LIST
17824: LIST
17825: PUSH
17826: LD_INT 1
17828: NEG
17829: PUSH
17830: LD_INT 1
17832: PUSH
17833: EMPTY
17834: LIST
17835: LIST
17836: PUSH
17837: LD_INT 2
17839: NEG
17840: PUSH
17841: LD_INT 1
17843: NEG
17844: PUSH
17845: EMPTY
17846: LIST
17847: LIST
17848: PUSH
17849: LD_INT 2
17851: NEG
17852: PUSH
17853: LD_INT 2
17855: NEG
17856: PUSH
17857: EMPTY
17858: LIST
17859: LIST
17860: PUSH
17861: LD_INT 2
17863: NEG
17864: PUSH
17865: LD_INT 3
17867: NEG
17868: PUSH
17869: EMPTY
17870: LIST
17871: LIST
17872: PUSH
17873: LD_INT 1
17875: NEG
17876: PUSH
17877: LD_INT 3
17879: NEG
17880: PUSH
17881: EMPTY
17882: LIST
17883: LIST
17884: PUSH
17885: LD_INT 0
17887: PUSH
17888: LD_INT 3
17890: NEG
17891: PUSH
17892: EMPTY
17893: LIST
17894: LIST
17895: PUSH
17896: LD_INT 1
17898: PUSH
17899: LD_INT 2
17901: NEG
17902: PUSH
17903: EMPTY
17904: LIST
17905: LIST
17906: PUSH
17907: LD_INT 3
17909: PUSH
17910: LD_INT 2
17912: PUSH
17913: EMPTY
17914: LIST
17915: LIST
17916: PUSH
17917: LD_INT 3
17919: PUSH
17920: LD_INT 3
17922: PUSH
17923: EMPTY
17924: LIST
17925: LIST
17926: PUSH
17927: LD_INT 2
17929: PUSH
17930: LD_INT 3
17932: PUSH
17933: EMPTY
17934: LIST
17935: LIST
17936: PUSH
17937: LD_INT 1
17939: PUSH
17940: LD_INT 3
17942: PUSH
17943: EMPTY
17944: LIST
17945: LIST
17946: PUSH
17947: LD_INT 0
17949: PUSH
17950: LD_INT 3
17952: PUSH
17953: EMPTY
17954: LIST
17955: LIST
17956: PUSH
17957: LD_INT 1
17959: NEG
17960: PUSH
17961: LD_INT 2
17963: PUSH
17964: EMPTY
17965: LIST
17966: LIST
17967: PUSH
17968: LD_INT 3
17970: NEG
17971: PUSH
17972: LD_INT 2
17974: NEG
17975: PUSH
17976: EMPTY
17977: LIST
17978: LIST
17979: PUSH
17980: LD_INT 3
17982: NEG
17983: PUSH
17984: LD_INT 3
17986: NEG
17987: PUSH
17988: EMPTY
17989: LIST
17990: LIST
17991: PUSH
17992: EMPTY
17993: LIST
17994: LIST
17995: LIST
17996: LIST
17997: LIST
17998: LIST
17999: LIST
18000: LIST
18001: LIST
18002: LIST
18003: LIST
18004: LIST
18005: LIST
18006: LIST
18007: LIST
18008: LIST
18009: LIST
18010: LIST
18011: LIST
18012: LIST
18013: LIST
18014: LIST
18015: LIST
18016: LIST
18017: LIST
18018: LIST
18019: LIST
18020: LIST
18021: LIST
18022: ST_TO_ADDR
// Lab5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
18023: LD_ADDR_VAR 0 46
18027: PUSH
18028: LD_INT 0
18030: PUSH
18031: LD_INT 0
18033: PUSH
18034: EMPTY
18035: LIST
18036: LIST
18037: PUSH
18038: LD_INT 0
18040: PUSH
18041: LD_INT 1
18043: NEG
18044: PUSH
18045: EMPTY
18046: LIST
18047: LIST
18048: PUSH
18049: LD_INT 1
18051: PUSH
18052: LD_INT 0
18054: PUSH
18055: EMPTY
18056: LIST
18057: LIST
18058: PUSH
18059: LD_INT 1
18061: PUSH
18062: LD_INT 1
18064: PUSH
18065: EMPTY
18066: LIST
18067: LIST
18068: PUSH
18069: LD_INT 0
18071: PUSH
18072: LD_INT 1
18074: PUSH
18075: EMPTY
18076: LIST
18077: LIST
18078: PUSH
18079: LD_INT 1
18081: NEG
18082: PUSH
18083: LD_INT 0
18085: PUSH
18086: EMPTY
18087: LIST
18088: LIST
18089: PUSH
18090: LD_INT 1
18092: NEG
18093: PUSH
18094: LD_INT 1
18096: NEG
18097: PUSH
18098: EMPTY
18099: LIST
18100: LIST
18101: PUSH
18102: LD_INT 1
18104: NEG
18105: PUSH
18106: LD_INT 2
18108: NEG
18109: PUSH
18110: EMPTY
18111: LIST
18112: LIST
18113: PUSH
18114: LD_INT 0
18116: PUSH
18117: LD_INT 2
18119: NEG
18120: PUSH
18121: EMPTY
18122: LIST
18123: LIST
18124: PUSH
18125: LD_INT 1
18127: PUSH
18128: LD_INT 1
18130: NEG
18131: PUSH
18132: EMPTY
18133: LIST
18134: LIST
18135: PUSH
18136: LD_INT 2
18138: PUSH
18139: LD_INT 0
18141: PUSH
18142: EMPTY
18143: LIST
18144: LIST
18145: PUSH
18146: LD_INT 2
18148: PUSH
18149: LD_INT 1
18151: PUSH
18152: EMPTY
18153: LIST
18154: LIST
18155: PUSH
18156: LD_INT 1
18158: PUSH
18159: LD_INT 2
18161: PUSH
18162: EMPTY
18163: LIST
18164: LIST
18165: PUSH
18166: LD_INT 0
18168: PUSH
18169: LD_INT 2
18171: PUSH
18172: EMPTY
18173: LIST
18174: LIST
18175: PUSH
18176: LD_INT 1
18178: NEG
18179: PUSH
18180: LD_INT 1
18182: PUSH
18183: EMPTY
18184: LIST
18185: LIST
18186: PUSH
18187: LD_INT 2
18189: NEG
18190: PUSH
18191: LD_INT 0
18193: PUSH
18194: EMPTY
18195: LIST
18196: LIST
18197: PUSH
18198: LD_INT 2
18200: NEG
18201: PUSH
18202: LD_INT 1
18204: NEG
18205: PUSH
18206: EMPTY
18207: LIST
18208: LIST
18209: PUSH
18210: LD_INT 1
18212: NEG
18213: PUSH
18214: LD_INT 3
18216: NEG
18217: PUSH
18218: EMPTY
18219: LIST
18220: LIST
18221: PUSH
18222: LD_INT 0
18224: PUSH
18225: LD_INT 3
18227: NEG
18228: PUSH
18229: EMPTY
18230: LIST
18231: LIST
18232: PUSH
18233: LD_INT 1
18235: PUSH
18236: LD_INT 2
18238: NEG
18239: PUSH
18240: EMPTY
18241: LIST
18242: LIST
18243: PUSH
18244: LD_INT 2
18246: PUSH
18247: LD_INT 1
18249: NEG
18250: PUSH
18251: EMPTY
18252: LIST
18253: LIST
18254: PUSH
18255: LD_INT 3
18257: PUSH
18258: LD_INT 0
18260: PUSH
18261: EMPTY
18262: LIST
18263: LIST
18264: PUSH
18265: LD_INT 3
18267: PUSH
18268: LD_INT 1
18270: PUSH
18271: EMPTY
18272: LIST
18273: LIST
18274: PUSH
18275: LD_INT 1
18277: PUSH
18278: LD_INT 3
18280: PUSH
18281: EMPTY
18282: LIST
18283: LIST
18284: PUSH
18285: LD_INT 0
18287: PUSH
18288: LD_INT 3
18290: PUSH
18291: EMPTY
18292: LIST
18293: LIST
18294: PUSH
18295: LD_INT 1
18297: NEG
18298: PUSH
18299: LD_INT 2
18301: PUSH
18302: EMPTY
18303: LIST
18304: LIST
18305: PUSH
18306: LD_INT 2
18308: NEG
18309: PUSH
18310: LD_INT 1
18312: PUSH
18313: EMPTY
18314: LIST
18315: LIST
18316: PUSH
18317: LD_INT 3
18319: NEG
18320: PUSH
18321: LD_INT 0
18323: PUSH
18324: EMPTY
18325: LIST
18326: LIST
18327: PUSH
18328: LD_INT 3
18330: NEG
18331: PUSH
18332: LD_INT 1
18334: NEG
18335: PUSH
18336: EMPTY
18337: LIST
18338: LIST
18339: PUSH
18340: EMPTY
18341: LIST
18342: LIST
18343: LIST
18344: LIST
18345: LIST
18346: LIST
18347: LIST
18348: LIST
18349: LIST
18350: LIST
18351: LIST
18352: LIST
18353: LIST
18354: LIST
18355: LIST
18356: LIST
18357: LIST
18358: LIST
18359: LIST
18360: LIST
18361: LIST
18362: LIST
18363: LIST
18364: LIST
18365: LIST
18366: LIST
18367: LIST
18368: LIST
18369: LIST
18370: ST_TO_ADDR
// ControlTower0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
18371: LD_ADDR_VAR 0 47
18375: PUSH
18376: LD_INT 0
18378: PUSH
18379: LD_INT 0
18381: PUSH
18382: EMPTY
18383: LIST
18384: LIST
18385: PUSH
18386: LD_INT 0
18388: PUSH
18389: LD_INT 1
18391: NEG
18392: PUSH
18393: EMPTY
18394: LIST
18395: LIST
18396: PUSH
18397: LD_INT 1
18399: PUSH
18400: LD_INT 0
18402: PUSH
18403: EMPTY
18404: LIST
18405: LIST
18406: PUSH
18407: LD_INT 1
18409: PUSH
18410: LD_INT 1
18412: PUSH
18413: EMPTY
18414: LIST
18415: LIST
18416: PUSH
18417: LD_INT 0
18419: PUSH
18420: LD_INT 1
18422: PUSH
18423: EMPTY
18424: LIST
18425: LIST
18426: PUSH
18427: LD_INT 1
18429: NEG
18430: PUSH
18431: LD_INT 0
18433: PUSH
18434: EMPTY
18435: LIST
18436: LIST
18437: PUSH
18438: LD_INT 1
18440: NEG
18441: PUSH
18442: LD_INT 1
18444: NEG
18445: PUSH
18446: EMPTY
18447: LIST
18448: LIST
18449: PUSH
18450: LD_INT 1
18452: NEG
18453: PUSH
18454: LD_INT 2
18456: NEG
18457: PUSH
18458: EMPTY
18459: LIST
18460: LIST
18461: PUSH
18462: LD_INT 0
18464: PUSH
18465: LD_INT 2
18467: NEG
18468: PUSH
18469: EMPTY
18470: LIST
18471: LIST
18472: PUSH
18473: LD_INT 1
18475: PUSH
18476: LD_INT 1
18478: NEG
18479: PUSH
18480: EMPTY
18481: LIST
18482: LIST
18483: PUSH
18484: LD_INT 2
18486: NEG
18487: PUSH
18488: LD_INT 1
18490: NEG
18491: PUSH
18492: EMPTY
18493: LIST
18494: LIST
18495: PUSH
18496: LD_INT 2
18498: NEG
18499: PUSH
18500: LD_INT 2
18502: NEG
18503: PUSH
18504: EMPTY
18505: LIST
18506: LIST
18507: PUSH
18508: EMPTY
18509: LIST
18510: LIST
18511: LIST
18512: LIST
18513: LIST
18514: LIST
18515: LIST
18516: LIST
18517: LIST
18518: LIST
18519: LIST
18520: LIST
18521: ST_TO_ADDR
// ControlTower1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] ] ;
18522: LD_ADDR_VAR 0 48
18526: PUSH
18527: LD_INT 0
18529: PUSH
18530: LD_INT 0
18532: PUSH
18533: EMPTY
18534: LIST
18535: LIST
18536: PUSH
18537: LD_INT 0
18539: PUSH
18540: LD_INT 1
18542: NEG
18543: PUSH
18544: EMPTY
18545: LIST
18546: LIST
18547: PUSH
18548: LD_INT 1
18550: PUSH
18551: LD_INT 0
18553: PUSH
18554: EMPTY
18555: LIST
18556: LIST
18557: PUSH
18558: LD_INT 1
18560: PUSH
18561: LD_INT 1
18563: PUSH
18564: EMPTY
18565: LIST
18566: LIST
18567: PUSH
18568: LD_INT 0
18570: PUSH
18571: LD_INT 1
18573: PUSH
18574: EMPTY
18575: LIST
18576: LIST
18577: PUSH
18578: LD_INT 1
18580: NEG
18581: PUSH
18582: LD_INT 0
18584: PUSH
18585: EMPTY
18586: LIST
18587: LIST
18588: PUSH
18589: LD_INT 1
18591: NEG
18592: PUSH
18593: LD_INT 1
18595: NEG
18596: PUSH
18597: EMPTY
18598: LIST
18599: LIST
18600: PUSH
18601: LD_INT 1
18603: NEG
18604: PUSH
18605: LD_INT 2
18607: NEG
18608: PUSH
18609: EMPTY
18610: LIST
18611: LIST
18612: PUSH
18613: LD_INT 0
18615: PUSH
18616: LD_INT 2
18618: NEG
18619: PUSH
18620: EMPTY
18621: LIST
18622: LIST
18623: PUSH
18624: LD_INT 1
18626: PUSH
18627: LD_INT 1
18629: NEG
18630: PUSH
18631: EMPTY
18632: LIST
18633: LIST
18634: PUSH
18635: LD_INT 2
18637: PUSH
18638: LD_INT 0
18640: PUSH
18641: EMPTY
18642: LIST
18643: LIST
18644: PUSH
18645: LD_INT 2
18647: PUSH
18648: LD_INT 1
18650: PUSH
18651: EMPTY
18652: LIST
18653: LIST
18654: PUSH
18655: EMPTY
18656: LIST
18657: LIST
18658: LIST
18659: LIST
18660: LIST
18661: LIST
18662: LIST
18663: LIST
18664: LIST
18665: LIST
18666: LIST
18667: LIST
18668: ST_TO_ADDR
// ControlTower2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] ] ;
18669: LD_ADDR_VAR 0 49
18673: PUSH
18674: LD_INT 0
18676: PUSH
18677: LD_INT 0
18679: PUSH
18680: EMPTY
18681: LIST
18682: LIST
18683: PUSH
18684: LD_INT 0
18686: PUSH
18687: LD_INT 1
18689: NEG
18690: PUSH
18691: EMPTY
18692: LIST
18693: LIST
18694: PUSH
18695: LD_INT 1
18697: PUSH
18698: LD_INT 0
18700: PUSH
18701: EMPTY
18702: LIST
18703: LIST
18704: PUSH
18705: LD_INT 1
18707: PUSH
18708: LD_INT 1
18710: PUSH
18711: EMPTY
18712: LIST
18713: LIST
18714: PUSH
18715: LD_INT 0
18717: PUSH
18718: LD_INT 1
18720: PUSH
18721: EMPTY
18722: LIST
18723: LIST
18724: PUSH
18725: LD_INT 1
18727: NEG
18728: PUSH
18729: LD_INT 0
18731: PUSH
18732: EMPTY
18733: LIST
18734: LIST
18735: PUSH
18736: LD_INT 1
18738: NEG
18739: PUSH
18740: LD_INT 1
18742: NEG
18743: PUSH
18744: EMPTY
18745: LIST
18746: LIST
18747: PUSH
18748: LD_INT 1
18750: PUSH
18751: LD_INT 1
18753: NEG
18754: PUSH
18755: EMPTY
18756: LIST
18757: LIST
18758: PUSH
18759: LD_INT 2
18761: PUSH
18762: LD_INT 0
18764: PUSH
18765: EMPTY
18766: LIST
18767: LIST
18768: PUSH
18769: LD_INT 2
18771: PUSH
18772: LD_INT 1
18774: PUSH
18775: EMPTY
18776: LIST
18777: LIST
18778: PUSH
18779: LD_INT 2
18781: PUSH
18782: LD_INT 2
18784: PUSH
18785: EMPTY
18786: LIST
18787: LIST
18788: PUSH
18789: LD_INT 1
18791: PUSH
18792: LD_INT 2
18794: PUSH
18795: EMPTY
18796: LIST
18797: LIST
18798: PUSH
18799: EMPTY
18800: LIST
18801: LIST
18802: LIST
18803: LIST
18804: LIST
18805: LIST
18806: LIST
18807: LIST
18808: LIST
18809: LIST
18810: LIST
18811: LIST
18812: ST_TO_ADDR
// ControlTower3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] ] ;
18813: LD_ADDR_VAR 0 50
18817: PUSH
18818: LD_INT 0
18820: PUSH
18821: LD_INT 0
18823: PUSH
18824: EMPTY
18825: LIST
18826: LIST
18827: PUSH
18828: LD_INT 0
18830: PUSH
18831: LD_INT 1
18833: NEG
18834: PUSH
18835: EMPTY
18836: LIST
18837: LIST
18838: PUSH
18839: LD_INT 1
18841: PUSH
18842: LD_INT 0
18844: PUSH
18845: EMPTY
18846: LIST
18847: LIST
18848: PUSH
18849: LD_INT 1
18851: PUSH
18852: LD_INT 1
18854: PUSH
18855: EMPTY
18856: LIST
18857: LIST
18858: PUSH
18859: LD_INT 0
18861: PUSH
18862: LD_INT 1
18864: PUSH
18865: EMPTY
18866: LIST
18867: LIST
18868: PUSH
18869: LD_INT 1
18871: NEG
18872: PUSH
18873: LD_INT 0
18875: PUSH
18876: EMPTY
18877: LIST
18878: LIST
18879: PUSH
18880: LD_INT 1
18882: NEG
18883: PUSH
18884: LD_INT 1
18886: NEG
18887: PUSH
18888: EMPTY
18889: LIST
18890: LIST
18891: PUSH
18892: LD_INT 2
18894: PUSH
18895: LD_INT 1
18897: PUSH
18898: EMPTY
18899: LIST
18900: LIST
18901: PUSH
18902: LD_INT 2
18904: PUSH
18905: LD_INT 2
18907: PUSH
18908: EMPTY
18909: LIST
18910: LIST
18911: PUSH
18912: LD_INT 1
18914: PUSH
18915: LD_INT 2
18917: PUSH
18918: EMPTY
18919: LIST
18920: LIST
18921: PUSH
18922: LD_INT 0
18924: PUSH
18925: LD_INT 2
18927: PUSH
18928: EMPTY
18929: LIST
18930: LIST
18931: PUSH
18932: LD_INT 1
18934: NEG
18935: PUSH
18936: LD_INT 1
18938: PUSH
18939: EMPTY
18940: LIST
18941: LIST
18942: PUSH
18943: EMPTY
18944: LIST
18945: LIST
18946: LIST
18947: LIST
18948: LIST
18949: LIST
18950: LIST
18951: LIST
18952: LIST
18953: LIST
18954: LIST
18955: LIST
18956: ST_TO_ADDR
// ControlTower4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] ] ;
18957: LD_ADDR_VAR 0 51
18961: PUSH
18962: LD_INT 0
18964: PUSH
18965: LD_INT 0
18967: PUSH
18968: EMPTY
18969: LIST
18970: LIST
18971: PUSH
18972: LD_INT 0
18974: PUSH
18975: LD_INT 1
18977: NEG
18978: PUSH
18979: EMPTY
18980: LIST
18981: LIST
18982: PUSH
18983: LD_INT 1
18985: PUSH
18986: LD_INT 0
18988: PUSH
18989: EMPTY
18990: LIST
18991: LIST
18992: PUSH
18993: LD_INT 1
18995: PUSH
18996: LD_INT 1
18998: PUSH
18999: EMPTY
19000: LIST
19001: LIST
19002: PUSH
19003: LD_INT 0
19005: PUSH
19006: LD_INT 1
19008: PUSH
19009: EMPTY
19010: LIST
19011: LIST
19012: PUSH
19013: LD_INT 1
19015: NEG
19016: PUSH
19017: LD_INT 0
19019: PUSH
19020: EMPTY
19021: LIST
19022: LIST
19023: PUSH
19024: LD_INT 1
19026: NEG
19027: PUSH
19028: LD_INT 1
19030: NEG
19031: PUSH
19032: EMPTY
19033: LIST
19034: LIST
19035: PUSH
19036: LD_INT 1
19038: PUSH
19039: LD_INT 2
19041: PUSH
19042: EMPTY
19043: LIST
19044: LIST
19045: PUSH
19046: LD_INT 0
19048: PUSH
19049: LD_INT 2
19051: PUSH
19052: EMPTY
19053: LIST
19054: LIST
19055: PUSH
19056: LD_INT 1
19058: NEG
19059: PUSH
19060: LD_INT 1
19062: PUSH
19063: EMPTY
19064: LIST
19065: LIST
19066: PUSH
19067: LD_INT 2
19069: NEG
19070: PUSH
19071: LD_INT 0
19073: PUSH
19074: EMPTY
19075: LIST
19076: LIST
19077: PUSH
19078: LD_INT 2
19080: NEG
19081: PUSH
19082: LD_INT 1
19084: NEG
19085: PUSH
19086: EMPTY
19087: LIST
19088: LIST
19089: PUSH
19090: EMPTY
19091: LIST
19092: LIST
19093: LIST
19094: LIST
19095: LIST
19096: LIST
19097: LIST
19098: LIST
19099: LIST
19100: LIST
19101: LIST
19102: LIST
19103: ST_TO_ADDR
// ControlTower5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19104: LD_ADDR_VAR 0 52
19108: PUSH
19109: LD_INT 0
19111: PUSH
19112: LD_INT 0
19114: PUSH
19115: EMPTY
19116: LIST
19117: LIST
19118: PUSH
19119: LD_INT 0
19121: PUSH
19122: LD_INT 1
19124: NEG
19125: PUSH
19126: EMPTY
19127: LIST
19128: LIST
19129: PUSH
19130: LD_INT 1
19132: PUSH
19133: LD_INT 0
19135: PUSH
19136: EMPTY
19137: LIST
19138: LIST
19139: PUSH
19140: LD_INT 1
19142: PUSH
19143: LD_INT 1
19145: PUSH
19146: EMPTY
19147: LIST
19148: LIST
19149: PUSH
19150: LD_INT 0
19152: PUSH
19153: LD_INT 1
19155: PUSH
19156: EMPTY
19157: LIST
19158: LIST
19159: PUSH
19160: LD_INT 1
19162: NEG
19163: PUSH
19164: LD_INT 0
19166: PUSH
19167: EMPTY
19168: LIST
19169: LIST
19170: PUSH
19171: LD_INT 1
19173: NEG
19174: PUSH
19175: LD_INT 1
19177: NEG
19178: PUSH
19179: EMPTY
19180: LIST
19181: LIST
19182: PUSH
19183: LD_INT 1
19185: NEG
19186: PUSH
19187: LD_INT 2
19189: NEG
19190: PUSH
19191: EMPTY
19192: LIST
19193: LIST
19194: PUSH
19195: LD_INT 1
19197: NEG
19198: PUSH
19199: LD_INT 1
19201: PUSH
19202: EMPTY
19203: LIST
19204: LIST
19205: PUSH
19206: LD_INT 2
19208: NEG
19209: PUSH
19210: LD_INT 0
19212: PUSH
19213: EMPTY
19214: LIST
19215: LIST
19216: PUSH
19217: LD_INT 2
19219: NEG
19220: PUSH
19221: LD_INT 1
19223: NEG
19224: PUSH
19225: EMPTY
19226: LIST
19227: LIST
19228: PUSH
19229: LD_INT 2
19231: NEG
19232: PUSH
19233: LD_INT 2
19235: NEG
19236: PUSH
19237: EMPTY
19238: LIST
19239: LIST
19240: PUSH
19241: EMPTY
19242: LIST
19243: LIST
19244: LIST
19245: LIST
19246: LIST
19247: LIST
19248: LIST
19249: LIST
19250: LIST
19251: LIST
19252: LIST
19253: LIST
19254: ST_TO_ADDR
// Barracks0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19255: LD_ADDR_VAR 0 53
19259: PUSH
19260: LD_INT 0
19262: PUSH
19263: LD_INT 0
19265: PUSH
19266: EMPTY
19267: LIST
19268: LIST
19269: PUSH
19270: LD_INT 0
19272: PUSH
19273: LD_INT 1
19275: NEG
19276: PUSH
19277: EMPTY
19278: LIST
19279: LIST
19280: PUSH
19281: LD_INT 1
19283: PUSH
19284: LD_INT 0
19286: PUSH
19287: EMPTY
19288: LIST
19289: LIST
19290: PUSH
19291: LD_INT 1
19293: PUSH
19294: LD_INT 1
19296: PUSH
19297: EMPTY
19298: LIST
19299: LIST
19300: PUSH
19301: LD_INT 0
19303: PUSH
19304: LD_INT 1
19306: PUSH
19307: EMPTY
19308: LIST
19309: LIST
19310: PUSH
19311: LD_INT 1
19313: NEG
19314: PUSH
19315: LD_INT 0
19317: PUSH
19318: EMPTY
19319: LIST
19320: LIST
19321: PUSH
19322: LD_INT 1
19324: NEG
19325: PUSH
19326: LD_INT 1
19328: NEG
19329: PUSH
19330: EMPTY
19331: LIST
19332: LIST
19333: PUSH
19334: LD_INT 1
19336: NEG
19337: PUSH
19338: LD_INT 2
19340: NEG
19341: PUSH
19342: EMPTY
19343: LIST
19344: LIST
19345: PUSH
19346: LD_INT 0
19348: PUSH
19349: LD_INT 2
19351: NEG
19352: PUSH
19353: EMPTY
19354: LIST
19355: LIST
19356: PUSH
19357: LD_INT 1
19359: PUSH
19360: LD_INT 1
19362: NEG
19363: PUSH
19364: EMPTY
19365: LIST
19366: LIST
19367: PUSH
19368: LD_INT 2
19370: PUSH
19371: LD_INT 0
19373: PUSH
19374: EMPTY
19375: LIST
19376: LIST
19377: PUSH
19378: LD_INT 2
19380: PUSH
19381: LD_INT 1
19383: PUSH
19384: EMPTY
19385: LIST
19386: LIST
19387: PUSH
19388: LD_INT 2
19390: PUSH
19391: LD_INT 2
19393: PUSH
19394: EMPTY
19395: LIST
19396: LIST
19397: PUSH
19398: LD_INT 1
19400: PUSH
19401: LD_INT 2
19403: PUSH
19404: EMPTY
19405: LIST
19406: LIST
19407: PUSH
19408: LD_INT 0
19410: PUSH
19411: LD_INT 2
19413: PUSH
19414: EMPTY
19415: LIST
19416: LIST
19417: PUSH
19418: LD_INT 1
19420: NEG
19421: PUSH
19422: LD_INT 1
19424: PUSH
19425: EMPTY
19426: LIST
19427: LIST
19428: PUSH
19429: LD_INT 2
19431: NEG
19432: PUSH
19433: LD_INT 0
19435: PUSH
19436: EMPTY
19437: LIST
19438: LIST
19439: PUSH
19440: LD_INT 2
19442: NEG
19443: PUSH
19444: LD_INT 1
19446: NEG
19447: PUSH
19448: EMPTY
19449: LIST
19450: LIST
19451: PUSH
19452: LD_INT 2
19454: NEG
19455: PUSH
19456: LD_INT 2
19458: NEG
19459: PUSH
19460: EMPTY
19461: LIST
19462: LIST
19463: PUSH
19464: EMPTY
19465: LIST
19466: LIST
19467: LIST
19468: LIST
19469: LIST
19470: LIST
19471: LIST
19472: LIST
19473: LIST
19474: LIST
19475: LIST
19476: LIST
19477: LIST
19478: LIST
19479: LIST
19480: LIST
19481: LIST
19482: LIST
19483: LIST
19484: ST_TO_ADDR
// Barracks1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19485: LD_ADDR_VAR 0 54
19489: PUSH
19490: LD_INT 0
19492: PUSH
19493: LD_INT 0
19495: PUSH
19496: EMPTY
19497: LIST
19498: LIST
19499: PUSH
19500: LD_INT 0
19502: PUSH
19503: LD_INT 1
19505: NEG
19506: PUSH
19507: EMPTY
19508: LIST
19509: LIST
19510: PUSH
19511: LD_INT 1
19513: PUSH
19514: LD_INT 0
19516: PUSH
19517: EMPTY
19518: LIST
19519: LIST
19520: PUSH
19521: LD_INT 1
19523: PUSH
19524: LD_INT 1
19526: PUSH
19527: EMPTY
19528: LIST
19529: LIST
19530: PUSH
19531: LD_INT 0
19533: PUSH
19534: LD_INT 1
19536: PUSH
19537: EMPTY
19538: LIST
19539: LIST
19540: PUSH
19541: LD_INT 1
19543: NEG
19544: PUSH
19545: LD_INT 0
19547: PUSH
19548: EMPTY
19549: LIST
19550: LIST
19551: PUSH
19552: LD_INT 1
19554: NEG
19555: PUSH
19556: LD_INT 1
19558: NEG
19559: PUSH
19560: EMPTY
19561: LIST
19562: LIST
19563: PUSH
19564: LD_INT 1
19566: NEG
19567: PUSH
19568: LD_INT 2
19570: NEG
19571: PUSH
19572: EMPTY
19573: LIST
19574: LIST
19575: PUSH
19576: LD_INT 0
19578: PUSH
19579: LD_INT 2
19581: NEG
19582: PUSH
19583: EMPTY
19584: LIST
19585: LIST
19586: PUSH
19587: LD_INT 1
19589: PUSH
19590: LD_INT 1
19592: NEG
19593: PUSH
19594: EMPTY
19595: LIST
19596: LIST
19597: PUSH
19598: LD_INT 2
19600: PUSH
19601: LD_INT 0
19603: PUSH
19604: EMPTY
19605: LIST
19606: LIST
19607: PUSH
19608: LD_INT 2
19610: PUSH
19611: LD_INT 1
19613: PUSH
19614: EMPTY
19615: LIST
19616: LIST
19617: PUSH
19618: LD_INT 2
19620: PUSH
19621: LD_INT 2
19623: PUSH
19624: EMPTY
19625: LIST
19626: LIST
19627: PUSH
19628: LD_INT 1
19630: PUSH
19631: LD_INT 2
19633: PUSH
19634: EMPTY
19635: LIST
19636: LIST
19637: PUSH
19638: LD_INT 0
19640: PUSH
19641: LD_INT 2
19643: PUSH
19644: EMPTY
19645: LIST
19646: LIST
19647: PUSH
19648: LD_INT 1
19650: NEG
19651: PUSH
19652: LD_INT 1
19654: PUSH
19655: EMPTY
19656: LIST
19657: LIST
19658: PUSH
19659: LD_INT 2
19661: NEG
19662: PUSH
19663: LD_INT 0
19665: PUSH
19666: EMPTY
19667: LIST
19668: LIST
19669: PUSH
19670: LD_INT 2
19672: NEG
19673: PUSH
19674: LD_INT 1
19676: NEG
19677: PUSH
19678: EMPTY
19679: LIST
19680: LIST
19681: PUSH
19682: LD_INT 2
19684: NEG
19685: PUSH
19686: LD_INT 2
19688: NEG
19689: PUSH
19690: EMPTY
19691: LIST
19692: LIST
19693: PUSH
19694: EMPTY
19695: LIST
19696: LIST
19697: LIST
19698: LIST
19699: LIST
19700: LIST
19701: LIST
19702: LIST
19703: LIST
19704: LIST
19705: LIST
19706: LIST
19707: LIST
19708: LIST
19709: LIST
19710: LIST
19711: LIST
19712: LIST
19713: LIST
19714: ST_TO_ADDR
// Barracks2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19715: LD_ADDR_VAR 0 55
19719: PUSH
19720: LD_INT 0
19722: PUSH
19723: LD_INT 0
19725: PUSH
19726: EMPTY
19727: LIST
19728: LIST
19729: PUSH
19730: LD_INT 0
19732: PUSH
19733: LD_INT 1
19735: NEG
19736: PUSH
19737: EMPTY
19738: LIST
19739: LIST
19740: PUSH
19741: LD_INT 1
19743: PUSH
19744: LD_INT 0
19746: PUSH
19747: EMPTY
19748: LIST
19749: LIST
19750: PUSH
19751: LD_INT 1
19753: PUSH
19754: LD_INT 1
19756: PUSH
19757: EMPTY
19758: LIST
19759: LIST
19760: PUSH
19761: LD_INT 0
19763: PUSH
19764: LD_INT 1
19766: PUSH
19767: EMPTY
19768: LIST
19769: LIST
19770: PUSH
19771: LD_INT 1
19773: NEG
19774: PUSH
19775: LD_INT 0
19777: PUSH
19778: EMPTY
19779: LIST
19780: LIST
19781: PUSH
19782: LD_INT 1
19784: NEG
19785: PUSH
19786: LD_INT 1
19788: NEG
19789: PUSH
19790: EMPTY
19791: LIST
19792: LIST
19793: PUSH
19794: LD_INT 1
19796: NEG
19797: PUSH
19798: LD_INT 2
19800: NEG
19801: PUSH
19802: EMPTY
19803: LIST
19804: LIST
19805: PUSH
19806: LD_INT 0
19808: PUSH
19809: LD_INT 2
19811: NEG
19812: PUSH
19813: EMPTY
19814: LIST
19815: LIST
19816: PUSH
19817: LD_INT 1
19819: PUSH
19820: LD_INT 1
19822: NEG
19823: PUSH
19824: EMPTY
19825: LIST
19826: LIST
19827: PUSH
19828: LD_INT 2
19830: PUSH
19831: LD_INT 0
19833: PUSH
19834: EMPTY
19835: LIST
19836: LIST
19837: PUSH
19838: LD_INT 2
19840: PUSH
19841: LD_INT 1
19843: PUSH
19844: EMPTY
19845: LIST
19846: LIST
19847: PUSH
19848: LD_INT 2
19850: PUSH
19851: LD_INT 2
19853: PUSH
19854: EMPTY
19855: LIST
19856: LIST
19857: PUSH
19858: LD_INT 1
19860: PUSH
19861: LD_INT 2
19863: PUSH
19864: EMPTY
19865: LIST
19866: LIST
19867: PUSH
19868: LD_INT 0
19870: PUSH
19871: LD_INT 2
19873: PUSH
19874: EMPTY
19875: LIST
19876: LIST
19877: PUSH
19878: LD_INT 1
19880: NEG
19881: PUSH
19882: LD_INT 1
19884: PUSH
19885: EMPTY
19886: LIST
19887: LIST
19888: PUSH
19889: LD_INT 2
19891: NEG
19892: PUSH
19893: LD_INT 0
19895: PUSH
19896: EMPTY
19897: LIST
19898: LIST
19899: PUSH
19900: LD_INT 2
19902: NEG
19903: PUSH
19904: LD_INT 1
19906: NEG
19907: PUSH
19908: EMPTY
19909: LIST
19910: LIST
19911: PUSH
19912: LD_INT 2
19914: NEG
19915: PUSH
19916: LD_INT 2
19918: NEG
19919: PUSH
19920: EMPTY
19921: LIST
19922: LIST
19923: PUSH
19924: EMPTY
19925: LIST
19926: LIST
19927: LIST
19928: LIST
19929: LIST
19930: LIST
19931: LIST
19932: LIST
19933: LIST
19934: LIST
19935: LIST
19936: LIST
19937: LIST
19938: LIST
19939: LIST
19940: LIST
19941: LIST
19942: LIST
19943: LIST
19944: ST_TO_ADDR
// Barracks3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19945: LD_ADDR_VAR 0 56
19949: PUSH
19950: LD_INT 0
19952: PUSH
19953: LD_INT 0
19955: PUSH
19956: EMPTY
19957: LIST
19958: LIST
19959: PUSH
19960: LD_INT 0
19962: PUSH
19963: LD_INT 1
19965: NEG
19966: PUSH
19967: EMPTY
19968: LIST
19969: LIST
19970: PUSH
19971: LD_INT 1
19973: PUSH
19974: LD_INT 0
19976: PUSH
19977: EMPTY
19978: LIST
19979: LIST
19980: PUSH
19981: LD_INT 1
19983: PUSH
19984: LD_INT 1
19986: PUSH
19987: EMPTY
19988: LIST
19989: LIST
19990: PUSH
19991: LD_INT 0
19993: PUSH
19994: LD_INT 1
19996: PUSH
19997: EMPTY
19998: LIST
19999: LIST
20000: PUSH
20001: LD_INT 1
20003: NEG
20004: PUSH
20005: LD_INT 0
20007: PUSH
20008: EMPTY
20009: LIST
20010: LIST
20011: PUSH
20012: LD_INT 1
20014: NEG
20015: PUSH
20016: LD_INT 1
20018: NEG
20019: PUSH
20020: EMPTY
20021: LIST
20022: LIST
20023: PUSH
20024: LD_INT 1
20026: NEG
20027: PUSH
20028: LD_INT 2
20030: NEG
20031: PUSH
20032: EMPTY
20033: LIST
20034: LIST
20035: PUSH
20036: LD_INT 0
20038: PUSH
20039: LD_INT 2
20041: NEG
20042: PUSH
20043: EMPTY
20044: LIST
20045: LIST
20046: PUSH
20047: LD_INT 1
20049: PUSH
20050: LD_INT 1
20052: NEG
20053: PUSH
20054: EMPTY
20055: LIST
20056: LIST
20057: PUSH
20058: LD_INT 2
20060: PUSH
20061: LD_INT 0
20063: PUSH
20064: EMPTY
20065: LIST
20066: LIST
20067: PUSH
20068: LD_INT 2
20070: PUSH
20071: LD_INT 1
20073: PUSH
20074: EMPTY
20075: LIST
20076: LIST
20077: PUSH
20078: LD_INT 2
20080: PUSH
20081: LD_INT 2
20083: PUSH
20084: EMPTY
20085: LIST
20086: LIST
20087: PUSH
20088: LD_INT 1
20090: PUSH
20091: LD_INT 2
20093: PUSH
20094: EMPTY
20095: LIST
20096: LIST
20097: PUSH
20098: LD_INT 0
20100: PUSH
20101: LD_INT 2
20103: PUSH
20104: EMPTY
20105: LIST
20106: LIST
20107: PUSH
20108: LD_INT 1
20110: NEG
20111: PUSH
20112: LD_INT 1
20114: PUSH
20115: EMPTY
20116: LIST
20117: LIST
20118: PUSH
20119: LD_INT 2
20121: NEG
20122: PUSH
20123: LD_INT 0
20125: PUSH
20126: EMPTY
20127: LIST
20128: LIST
20129: PUSH
20130: LD_INT 2
20132: NEG
20133: PUSH
20134: LD_INT 1
20136: NEG
20137: PUSH
20138: EMPTY
20139: LIST
20140: LIST
20141: PUSH
20142: LD_INT 2
20144: NEG
20145: PUSH
20146: LD_INT 2
20148: NEG
20149: PUSH
20150: EMPTY
20151: LIST
20152: LIST
20153: PUSH
20154: EMPTY
20155: LIST
20156: LIST
20157: LIST
20158: LIST
20159: LIST
20160: LIST
20161: LIST
20162: LIST
20163: LIST
20164: LIST
20165: LIST
20166: LIST
20167: LIST
20168: LIST
20169: LIST
20170: LIST
20171: LIST
20172: LIST
20173: LIST
20174: ST_TO_ADDR
// Barracks4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
20175: LD_ADDR_VAR 0 57
20179: PUSH
20180: LD_INT 0
20182: PUSH
20183: LD_INT 0
20185: PUSH
20186: EMPTY
20187: LIST
20188: LIST
20189: PUSH
20190: LD_INT 0
20192: PUSH
20193: LD_INT 1
20195: NEG
20196: PUSH
20197: EMPTY
20198: LIST
20199: LIST
20200: PUSH
20201: LD_INT 1
20203: PUSH
20204: LD_INT 0
20206: PUSH
20207: EMPTY
20208: LIST
20209: LIST
20210: PUSH
20211: LD_INT 1
20213: PUSH
20214: LD_INT 1
20216: PUSH
20217: EMPTY
20218: LIST
20219: LIST
20220: PUSH
20221: LD_INT 0
20223: PUSH
20224: LD_INT 1
20226: PUSH
20227: EMPTY
20228: LIST
20229: LIST
20230: PUSH
20231: LD_INT 1
20233: NEG
20234: PUSH
20235: LD_INT 0
20237: PUSH
20238: EMPTY
20239: LIST
20240: LIST
20241: PUSH
20242: LD_INT 1
20244: NEG
20245: PUSH
20246: LD_INT 1
20248: NEG
20249: PUSH
20250: EMPTY
20251: LIST
20252: LIST
20253: PUSH
20254: LD_INT 1
20256: NEG
20257: PUSH
20258: LD_INT 2
20260: NEG
20261: PUSH
20262: EMPTY
20263: LIST
20264: LIST
20265: PUSH
20266: LD_INT 0
20268: PUSH
20269: LD_INT 2
20271: NEG
20272: PUSH
20273: EMPTY
20274: LIST
20275: LIST
20276: PUSH
20277: LD_INT 1
20279: PUSH
20280: LD_INT 1
20282: NEG
20283: PUSH
20284: EMPTY
20285: LIST
20286: LIST
20287: PUSH
20288: LD_INT 2
20290: PUSH
20291: LD_INT 0
20293: PUSH
20294: EMPTY
20295: LIST
20296: LIST
20297: PUSH
20298: LD_INT 2
20300: PUSH
20301: LD_INT 1
20303: PUSH
20304: EMPTY
20305: LIST
20306: LIST
20307: PUSH
20308: LD_INT 2
20310: PUSH
20311: LD_INT 2
20313: PUSH
20314: EMPTY
20315: LIST
20316: LIST
20317: PUSH
20318: LD_INT 1
20320: PUSH
20321: LD_INT 2
20323: PUSH
20324: EMPTY
20325: LIST
20326: LIST
20327: PUSH
20328: LD_INT 0
20330: PUSH
20331: LD_INT 2
20333: PUSH
20334: EMPTY
20335: LIST
20336: LIST
20337: PUSH
20338: LD_INT 1
20340: NEG
20341: PUSH
20342: LD_INT 1
20344: PUSH
20345: EMPTY
20346: LIST
20347: LIST
20348: PUSH
20349: LD_INT 2
20351: NEG
20352: PUSH
20353: LD_INT 0
20355: PUSH
20356: EMPTY
20357: LIST
20358: LIST
20359: PUSH
20360: LD_INT 2
20362: NEG
20363: PUSH
20364: LD_INT 1
20366: NEG
20367: PUSH
20368: EMPTY
20369: LIST
20370: LIST
20371: PUSH
20372: LD_INT 2
20374: NEG
20375: PUSH
20376: LD_INT 2
20378: NEG
20379: PUSH
20380: EMPTY
20381: LIST
20382: LIST
20383: PUSH
20384: EMPTY
20385: LIST
20386: LIST
20387: LIST
20388: LIST
20389: LIST
20390: LIST
20391: LIST
20392: LIST
20393: LIST
20394: LIST
20395: LIST
20396: LIST
20397: LIST
20398: LIST
20399: LIST
20400: LIST
20401: LIST
20402: LIST
20403: LIST
20404: ST_TO_ADDR
// Barracks5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
20405: LD_ADDR_VAR 0 58
20409: PUSH
20410: LD_INT 0
20412: PUSH
20413: LD_INT 0
20415: PUSH
20416: EMPTY
20417: LIST
20418: LIST
20419: PUSH
20420: LD_INT 0
20422: PUSH
20423: LD_INT 1
20425: NEG
20426: PUSH
20427: EMPTY
20428: LIST
20429: LIST
20430: PUSH
20431: LD_INT 1
20433: PUSH
20434: LD_INT 0
20436: PUSH
20437: EMPTY
20438: LIST
20439: LIST
20440: PUSH
20441: LD_INT 1
20443: PUSH
20444: LD_INT 1
20446: PUSH
20447: EMPTY
20448: LIST
20449: LIST
20450: PUSH
20451: LD_INT 0
20453: PUSH
20454: LD_INT 1
20456: PUSH
20457: EMPTY
20458: LIST
20459: LIST
20460: PUSH
20461: LD_INT 1
20463: NEG
20464: PUSH
20465: LD_INT 0
20467: PUSH
20468: EMPTY
20469: LIST
20470: LIST
20471: PUSH
20472: LD_INT 1
20474: NEG
20475: PUSH
20476: LD_INT 1
20478: NEG
20479: PUSH
20480: EMPTY
20481: LIST
20482: LIST
20483: PUSH
20484: LD_INT 1
20486: NEG
20487: PUSH
20488: LD_INT 2
20490: NEG
20491: PUSH
20492: EMPTY
20493: LIST
20494: LIST
20495: PUSH
20496: LD_INT 0
20498: PUSH
20499: LD_INT 2
20501: NEG
20502: PUSH
20503: EMPTY
20504: LIST
20505: LIST
20506: PUSH
20507: LD_INT 1
20509: PUSH
20510: LD_INT 1
20512: NEG
20513: PUSH
20514: EMPTY
20515: LIST
20516: LIST
20517: PUSH
20518: LD_INT 2
20520: PUSH
20521: LD_INT 0
20523: PUSH
20524: EMPTY
20525: LIST
20526: LIST
20527: PUSH
20528: LD_INT 2
20530: PUSH
20531: LD_INT 1
20533: PUSH
20534: EMPTY
20535: LIST
20536: LIST
20537: PUSH
20538: LD_INT 2
20540: PUSH
20541: LD_INT 2
20543: PUSH
20544: EMPTY
20545: LIST
20546: LIST
20547: PUSH
20548: LD_INT 1
20550: PUSH
20551: LD_INT 2
20553: PUSH
20554: EMPTY
20555: LIST
20556: LIST
20557: PUSH
20558: LD_INT 0
20560: PUSH
20561: LD_INT 2
20563: PUSH
20564: EMPTY
20565: LIST
20566: LIST
20567: PUSH
20568: LD_INT 1
20570: NEG
20571: PUSH
20572: LD_INT 1
20574: PUSH
20575: EMPTY
20576: LIST
20577: LIST
20578: PUSH
20579: LD_INT 2
20581: NEG
20582: PUSH
20583: LD_INT 0
20585: PUSH
20586: EMPTY
20587: LIST
20588: LIST
20589: PUSH
20590: LD_INT 2
20592: NEG
20593: PUSH
20594: LD_INT 1
20596: NEG
20597: PUSH
20598: EMPTY
20599: LIST
20600: LIST
20601: PUSH
20602: LD_INT 2
20604: NEG
20605: PUSH
20606: LD_INT 2
20608: NEG
20609: PUSH
20610: EMPTY
20611: LIST
20612: LIST
20613: PUSH
20614: EMPTY
20615: LIST
20616: LIST
20617: LIST
20618: LIST
20619: LIST
20620: LIST
20621: LIST
20622: LIST
20623: LIST
20624: LIST
20625: LIST
20626: LIST
20627: LIST
20628: LIST
20629: LIST
20630: LIST
20631: LIST
20632: LIST
20633: LIST
20634: ST_TO_ADDR
// Bunker0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20635: LD_ADDR_VAR 0 59
20639: PUSH
20640: LD_INT 0
20642: PUSH
20643: LD_INT 0
20645: PUSH
20646: EMPTY
20647: LIST
20648: LIST
20649: PUSH
20650: LD_INT 0
20652: PUSH
20653: LD_INT 1
20655: NEG
20656: PUSH
20657: EMPTY
20658: LIST
20659: LIST
20660: PUSH
20661: LD_INT 1
20663: PUSH
20664: LD_INT 0
20666: PUSH
20667: EMPTY
20668: LIST
20669: LIST
20670: PUSH
20671: LD_INT 1
20673: PUSH
20674: LD_INT 1
20676: PUSH
20677: EMPTY
20678: LIST
20679: LIST
20680: PUSH
20681: LD_INT 0
20683: PUSH
20684: LD_INT 1
20686: PUSH
20687: EMPTY
20688: LIST
20689: LIST
20690: PUSH
20691: LD_INT 1
20693: NEG
20694: PUSH
20695: LD_INT 0
20697: PUSH
20698: EMPTY
20699: LIST
20700: LIST
20701: PUSH
20702: LD_INT 1
20704: NEG
20705: PUSH
20706: LD_INT 1
20708: NEG
20709: PUSH
20710: EMPTY
20711: LIST
20712: LIST
20713: PUSH
20714: EMPTY
20715: LIST
20716: LIST
20717: LIST
20718: LIST
20719: LIST
20720: LIST
20721: LIST
20722: ST_TO_ADDR
// Bunker1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20723: LD_ADDR_VAR 0 60
20727: PUSH
20728: LD_INT 0
20730: PUSH
20731: LD_INT 0
20733: PUSH
20734: EMPTY
20735: LIST
20736: LIST
20737: PUSH
20738: LD_INT 0
20740: PUSH
20741: LD_INT 1
20743: NEG
20744: PUSH
20745: EMPTY
20746: LIST
20747: LIST
20748: PUSH
20749: LD_INT 1
20751: PUSH
20752: LD_INT 0
20754: PUSH
20755: EMPTY
20756: LIST
20757: LIST
20758: PUSH
20759: LD_INT 1
20761: PUSH
20762: LD_INT 1
20764: PUSH
20765: EMPTY
20766: LIST
20767: LIST
20768: PUSH
20769: LD_INT 0
20771: PUSH
20772: LD_INT 1
20774: PUSH
20775: EMPTY
20776: LIST
20777: LIST
20778: PUSH
20779: LD_INT 1
20781: NEG
20782: PUSH
20783: LD_INT 0
20785: PUSH
20786: EMPTY
20787: LIST
20788: LIST
20789: PUSH
20790: LD_INT 1
20792: NEG
20793: PUSH
20794: LD_INT 1
20796: NEG
20797: PUSH
20798: EMPTY
20799: LIST
20800: LIST
20801: PUSH
20802: EMPTY
20803: LIST
20804: LIST
20805: LIST
20806: LIST
20807: LIST
20808: LIST
20809: LIST
20810: ST_TO_ADDR
// Bunker2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20811: LD_ADDR_VAR 0 61
20815: PUSH
20816: LD_INT 0
20818: PUSH
20819: LD_INT 0
20821: PUSH
20822: EMPTY
20823: LIST
20824: LIST
20825: PUSH
20826: LD_INT 0
20828: PUSH
20829: LD_INT 1
20831: NEG
20832: PUSH
20833: EMPTY
20834: LIST
20835: LIST
20836: PUSH
20837: LD_INT 1
20839: PUSH
20840: LD_INT 0
20842: PUSH
20843: EMPTY
20844: LIST
20845: LIST
20846: PUSH
20847: LD_INT 1
20849: PUSH
20850: LD_INT 1
20852: PUSH
20853: EMPTY
20854: LIST
20855: LIST
20856: PUSH
20857: LD_INT 0
20859: PUSH
20860: LD_INT 1
20862: PUSH
20863: EMPTY
20864: LIST
20865: LIST
20866: PUSH
20867: LD_INT 1
20869: NEG
20870: PUSH
20871: LD_INT 0
20873: PUSH
20874: EMPTY
20875: LIST
20876: LIST
20877: PUSH
20878: LD_INT 1
20880: NEG
20881: PUSH
20882: LD_INT 1
20884: NEG
20885: PUSH
20886: EMPTY
20887: LIST
20888: LIST
20889: PUSH
20890: EMPTY
20891: LIST
20892: LIST
20893: LIST
20894: LIST
20895: LIST
20896: LIST
20897: LIST
20898: ST_TO_ADDR
// Bunker3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20899: LD_ADDR_VAR 0 62
20903: PUSH
20904: LD_INT 0
20906: PUSH
20907: LD_INT 0
20909: PUSH
20910: EMPTY
20911: LIST
20912: LIST
20913: PUSH
20914: LD_INT 0
20916: PUSH
20917: LD_INT 1
20919: NEG
20920: PUSH
20921: EMPTY
20922: LIST
20923: LIST
20924: PUSH
20925: LD_INT 1
20927: PUSH
20928: LD_INT 0
20930: PUSH
20931: EMPTY
20932: LIST
20933: LIST
20934: PUSH
20935: LD_INT 1
20937: PUSH
20938: LD_INT 1
20940: PUSH
20941: EMPTY
20942: LIST
20943: LIST
20944: PUSH
20945: LD_INT 0
20947: PUSH
20948: LD_INT 1
20950: PUSH
20951: EMPTY
20952: LIST
20953: LIST
20954: PUSH
20955: LD_INT 1
20957: NEG
20958: PUSH
20959: LD_INT 0
20961: PUSH
20962: EMPTY
20963: LIST
20964: LIST
20965: PUSH
20966: LD_INT 1
20968: NEG
20969: PUSH
20970: LD_INT 1
20972: NEG
20973: PUSH
20974: EMPTY
20975: LIST
20976: LIST
20977: PUSH
20978: EMPTY
20979: LIST
20980: LIST
20981: LIST
20982: LIST
20983: LIST
20984: LIST
20985: LIST
20986: ST_TO_ADDR
// Bunker4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20987: LD_ADDR_VAR 0 63
20991: PUSH
20992: LD_INT 0
20994: PUSH
20995: LD_INT 0
20997: PUSH
20998: EMPTY
20999: LIST
21000: LIST
21001: PUSH
21002: LD_INT 0
21004: PUSH
21005: LD_INT 1
21007: NEG
21008: PUSH
21009: EMPTY
21010: LIST
21011: LIST
21012: PUSH
21013: LD_INT 1
21015: PUSH
21016: LD_INT 0
21018: PUSH
21019: EMPTY
21020: LIST
21021: LIST
21022: PUSH
21023: LD_INT 1
21025: PUSH
21026: LD_INT 1
21028: PUSH
21029: EMPTY
21030: LIST
21031: LIST
21032: PUSH
21033: LD_INT 0
21035: PUSH
21036: LD_INT 1
21038: PUSH
21039: EMPTY
21040: LIST
21041: LIST
21042: PUSH
21043: LD_INT 1
21045: NEG
21046: PUSH
21047: LD_INT 0
21049: PUSH
21050: EMPTY
21051: LIST
21052: LIST
21053: PUSH
21054: LD_INT 1
21056: NEG
21057: PUSH
21058: LD_INT 1
21060: NEG
21061: PUSH
21062: EMPTY
21063: LIST
21064: LIST
21065: PUSH
21066: EMPTY
21067: LIST
21068: LIST
21069: LIST
21070: LIST
21071: LIST
21072: LIST
21073: LIST
21074: ST_TO_ADDR
// Bunker5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
21075: LD_ADDR_VAR 0 64
21079: PUSH
21080: LD_INT 0
21082: PUSH
21083: LD_INT 0
21085: PUSH
21086: EMPTY
21087: LIST
21088: LIST
21089: PUSH
21090: LD_INT 0
21092: PUSH
21093: LD_INT 1
21095: NEG
21096: PUSH
21097: EMPTY
21098: LIST
21099: LIST
21100: PUSH
21101: LD_INT 1
21103: PUSH
21104: LD_INT 0
21106: PUSH
21107: EMPTY
21108: LIST
21109: LIST
21110: PUSH
21111: LD_INT 1
21113: PUSH
21114: LD_INT 1
21116: PUSH
21117: EMPTY
21118: LIST
21119: LIST
21120: PUSH
21121: LD_INT 0
21123: PUSH
21124: LD_INT 1
21126: PUSH
21127: EMPTY
21128: LIST
21129: LIST
21130: PUSH
21131: LD_INT 1
21133: NEG
21134: PUSH
21135: LD_INT 0
21137: PUSH
21138: EMPTY
21139: LIST
21140: LIST
21141: PUSH
21142: LD_INT 1
21144: NEG
21145: PUSH
21146: LD_INT 1
21148: NEG
21149: PUSH
21150: EMPTY
21151: LIST
21152: LIST
21153: PUSH
21154: EMPTY
21155: LIST
21156: LIST
21157: LIST
21158: LIST
21159: LIST
21160: LIST
21161: LIST
21162: ST_TO_ADDR
// end ; 1 :
21163: GO 27060
21165: LD_INT 1
21167: DOUBLE
21168: EQUAL
21169: IFTRUE 21173
21171: GO 23796
21173: POP
// begin DepotAm0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
21174: LD_ADDR_VAR 0 11
21178: PUSH
21179: LD_INT 1
21181: NEG
21182: PUSH
21183: LD_INT 3
21185: NEG
21186: PUSH
21187: EMPTY
21188: LIST
21189: LIST
21190: PUSH
21191: LD_INT 0
21193: PUSH
21194: LD_INT 3
21196: NEG
21197: PUSH
21198: EMPTY
21199: LIST
21200: LIST
21201: PUSH
21202: LD_INT 1
21204: PUSH
21205: LD_INT 2
21207: NEG
21208: PUSH
21209: EMPTY
21210: LIST
21211: LIST
21212: PUSH
21213: EMPTY
21214: LIST
21215: LIST
21216: LIST
21217: ST_TO_ADDR
// DepotAm1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
21218: LD_ADDR_VAR 0 12
21222: PUSH
21223: LD_INT 2
21225: PUSH
21226: LD_INT 1
21228: NEG
21229: PUSH
21230: EMPTY
21231: LIST
21232: LIST
21233: PUSH
21234: LD_INT 3
21236: PUSH
21237: LD_INT 0
21239: PUSH
21240: EMPTY
21241: LIST
21242: LIST
21243: PUSH
21244: LD_INT 3
21246: PUSH
21247: LD_INT 1
21249: PUSH
21250: EMPTY
21251: LIST
21252: LIST
21253: PUSH
21254: EMPTY
21255: LIST
21256: LIST
21257: LIST
21258: ST_TO_ADDR
// DepotAm2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
21259: LD_ADDR_VAR 0 13
21263: PUSH
21264: LD_INT 3
21266: PUSH
21267: LD_INT 2
21269: PUSH
21270: EMPTY
21271: LIST
21272: LIST
21273: PUSH
21274: LD_INT 3
21276: PUSH
21277: LD_INT 3
21279: PUSH
21280: EMPTY
21281: LIST
21282: LIST
21283: PUSH
21284: LD_INT 2
21286: PUSH
21287: LD_INT 3
21289: PUSH
21290: EMPTY
21291: LIST
21292: LIST
21293: PUSH
21294: EMPTY
21295: LIST
21296: LIST
21297: LIST
21298: ST_TO_ADDR
// DepotAm3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
21299: LD_ADDR_VAR 0 14
21303: PUSH
21304: LD_INT 1
21306: PUSH
21307: LD_INT 3
21309: PUSH
21310: EMPTY
21311: LIST
21312: LIST
21313: PUSH
21314: LD_INT 0
21316: PUSH
21317: LD_INT 3
21319: PUSH
21320: EMPTY
21321: LIST
21322: LIST
21323: PUSH
21324: LD_INT 1
21326: NEG
21327: PUSH
21328: LD_INT 2
21330: PUSH
21331: EMPTY
21332: LIST
21333: LIST
21334: PUSH
21335: EMPTY
21336: LIST
21337: LIST
21338: LIST
21339: ST_TO_ADDR
// DepotAm4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
21340: LD_ADDR_VAR 0 15
21344: PUSH
21345: LD_INT 2
21347: NEG
21348: PUSH
21349: LD_INT 1
21351: PUSH
21352: EMPTY
21353: LIST
21354: LIST
21355: PUSH
21356: LD_INT 3
21358: NEG
21359: PUSH
21360: LD_INT 0
21362: PUSH
21363: EMPTY
21364: LIST
21365: LIST
21366: PUSH
21367: LD_INT 3
21369: NEG
21370: PUSH
21371: LD_INT 1
21373: NEG
21374: PUSH
21375: EMPTY
21376: LIST
21377: LIST
21378: PUSH
21379: EMPTY
21380: LIST
21381: LIST
21382: LIST
21383: ST_TO_ADDR
// DepotAm5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
21384: LD_ADDR_VAR 0 16
21388: PUSH
21389: LD_INT 2
21391: NEG
21392: PUSH
21393: LD_INT 3
21395: NEG
21396: PUSH
21397: EMPTY
21398: LIST
21399: LIST
21400: PUSH
21401: LD_INT 3
21403: NEG
21404: PUSH
21405: LD_INT 2
21407: NEG
21408: PUSH
21409: EMPTY
21410: LIST
21411: LIST
21412: PUSH
21413: LD_INT 3
21415: NEG
21416: PUSH
21417: LD_INT 3
21419: NEG
21420: PUSH
21421: EMPTY
21422: LIST
21423: LIST
21424: PUSH
21425: EMPTY
21426: LIST
21427: LIST
21428: LIST
21429: ST_TO_ADDR
// DepotAr0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
21430: LD_ADDR_VAR 0 17
21434: PUSH
21435: LD_INT 1
21437: NEG
21438: PUSH
21439: LD_INT 3
21441: NEG
21442: PUSH
21443: EMPTY
21444: LIST
21445: LIST
21446: PUSH
21447: LD_INT 0
21449: PUSH
21450: LD_INT 3
21452: NEG
21453: PUSH
21454: EMPTY
21455: LIST
21456: LIST
21457: PUSH
21458: LD_INT 1
21460: PUSH
21461: LD_INT 2
21463: NEG
21464: PUSH
21465: EMPTY
21466: LIST
21467: LIST
21468: PUSH
21469: EMPTY
21470: LIST
21471: LIST
21472: LIST
21473: ST_TO_ADDR
// DepotAr1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
21474: LD_ADDR_VAR 0 18
21478: PUSH
21479: LD_INT 2
21481: PUSH
21482: LD_INT 1
21484: NEG
21485: PUSH
21486: EMPTY
21487: LIST
21488: LIST
21489: PUSH
21490: LD_INT 3
21492: PUSH
21493: LD_INT 0
21495: PUSH
21496: EMPTY
21497: LIST
21498: LIST
21499: PUSH
21500: LD_INT 3
21502: PUSH
21503: LD_INT 1
21505: PUSH
21506: EMPTY
21507: LIST
21508: LIST
21509: PUSH
21510: EMPTY
21511: LIST
21512: LIST
21513: LIST
21514: ST_TO_ADDR
// DepotAr2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
21515: LD_ADDR_VAR 0 19
21519: PUSH
21520: LD_INT 3
21522: PUSH
21523: LD_INT 2
21525: PUSH
21526: EMPTY
21527: LIST
21528: LIST
21529: PUSH
21530: LD_INT 3
21532: PUSH
21533: LD_INT 3
21535: PUSH
21536: EMPTY
21537: LIST
21538: LIST
21539: PUSH
21540: LD_INT 2
21542: PUSH
21543: LD_INT 3
21545: PUSH
21546: EMPTY
21547: LIST
21548: LIST
21549: PUSH
21550: EMPTY
21551: LIST
21552: LIST
21553: LIST
21554: ST_TO_ADDR
// DepotAr3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
21555: LD_ADDR_VAR 0 20
21559: PUSH
21560: LD_INT 1
21562: PUSH
21563: LD_INT 3
21565: PUSH
21566: EMPTY
21567: LIST
21568: LIST
21569: PUSH
21570: LD_INT 0
21572: PUSH
21573: LD_INT 3
21575: PUSH
21576: EMPTY
21577: LIST
21578: LIST
21579: PUSH
21580: LD_INT 1
21582: NEG
21583: PUSH
21584: LD_INT 2
21586: PUSH
21587: EMPTY
21588: LIST
21589: LIST
21590: PUSH
21591: EMPTY
21592: LIST
21593: LIST
21594: LIST
21595: ST_TO_ADDR
// DepotAr4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
21596: LD_ADDR_VAR 0 21
21600: PUSH
21601: LD_INT 2
21603: NEG
21604: PUSH
21605: LD_INT 1
21607: PUSH
21608: EMPTY
21609: LIST
21610: LIST
21611: PUSH
21612: LD_INT 3
21614: NEG
21615: PUSH
21616: LD_INT 0
21618: PUSH
21619: EMPTY
21620: LIST
21621: LIST
21622: PUSH
21623: LD_INT 3
21625: NEG
21626: PUSH
21627: LD_INT 1
21629: NEG
21630: PUSH
21631: EMPTY
21632: LIST
21633: LIST
21634: PUSH
21635: EMPTY
21636: LIST
21637: LIST
21638: LIST
21639: ST_TO_ADDR
// DepotAr5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
21640: LD_ADDR_VAR 0 22
21644: PUSH
21645: LD_INT 2
21647: NEG
21648: PUSH
21649: LD_INT 3
21651: NEG
21652: PUSH
21653: EMPTY
21654: LIST
21655: LIST
21656: PUSH
21657: LD_INT 3
21659: NEG
21660: PUSH
21661: LD_INT 2
21663: NEG
21664: PUSH
21665: EMPTY
21666: LIST
21667: LIST
21668: PUSH
21669: LD_INT 3
21671: NEG
21672: PUSH
21673: LD_INT 3
21675: NEG
21676: PUSH
21677: EMPTY
21678: LIST
21679: LIST
21680: PUSH
21681: EMPTY
21682: LIST
21683: LIST
21684: LIST
21685: ST_TO_ADDR
// DepotRu0 = [ [ 0 , - 3 ] , [ - 1 , - 4 ] , [ 1 , - 3 ] ] ;
21686: LD_ADDR_VAR 0 23
21690: PUSH
21691: LD_INT 0
21693: PUSH
21694: LD_INT 3
21696: NEG
21697: PUSH
21698: EMPTY
21699: LIST
21700: LIST
21701: PUSH
21702: LD_INT 1
21704: NEG
21705: PUSH
21706: LD_INT 4
21708: NEG
21709: PUSH
21710: EMPTY
21711: LIST
21712: LIST
21713: PUSH
21714: LD_INT 1
21716: PUSH
21717: LD_INT 3
21719: NEG
21720: PUSH
21721: EMPTY
21722: LIST
21723: LIST
21724: PUSH
21725: EMPTY
21726: LIST
21727: LIST
21728: LIST
21729: ST_TO_ADDR
// DepotRu1 = [ [ 3 , 0 ] , [ 3 , - 1 ] , [ 4 , 1 ] ] ;
21730: LD_ADDR_VAR 0 24
21734: PUSH
21735: LD_INT 3
21737: PUSH
21738: LD_INT 0
21740: PUSH
21741: EMPTY
21742: LIST
21743: LIST
21744: PUSH
21745: LD_INT 3
21747: PUSH
21748: LD_INT 1
21750: NEG
21751: PUSH
21752: EMPTY
21753: LIST
21754: LIST
21755: PUSH
21756: LD_INT 4
21758: PUSH
21759: LD_INT 1
21761: PUSH
21762: EMPTY
21763: LIST
21764: LIST
21765: PUSH
21766: EMPTY
21767: LIST
21768: LIST
21769: LIST
21770: ST_TO_ADDR
// DepotRu2 = [ [ 3 , 3 ] , [ 4 , 3 ] , [ 3 , 4 ] ] ;
21771: LD_ADDR_VAR 0 25
21775: PUSH
21776: LD_INT 3
21778: PUSH
21779: LD_INT 3
21781: PUSH
21782: EMPTY
21783: LIST
21784: LIST
21785: PUSH
21786: LD_INT 4
21788: PUSH
21789: LD_INT 3
21791: PUSH
21792: EMPTY
21793: LIST
21794: LIST
21795: PUSH
21796: LD_INT 3
21798: PUSH
21799: LD_INT 4
21801: PUSH
21802: EMPTY
21803: LIST
21804: LIST
21805: PUSH
21806: EMPTY
21807: LIST
21808: LIST
21809: LIST
21810: ST_TO_ADDR
// DepotRu3 = [ [ 0 , 3 ] , [ 1 , 4 ] , [ - 1 , 3 ] ] ;
21811: LD_ADDR_VAR 0 26
21815: PUSH
21816: LD_INT 0
21818: PUSH
21819: LD_INT 3
21821: PUSH
21822: EMPTY
21823: LIST
21824: LIST
21825: PUSH
21826: LD_INT 1
21828: PUSH
21829: LD_INT 4
21831: PUSH
21832: EMPTY
21833: LIST
21834: LIST
21835: PUSH
21836: LD_INT 1
21838: NEG
21839: PUSH
21840: LD_INT 3
21842: PUSH
21843: EMPTY
21844: LIST
21845: LIST
21846: PUSH
21847: EMPTY
21848: LIST
21849: LIST
21850: LIST
21851: ST_TO_ADDR
// DepotRu4 = [ [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , - 1 ] ] ;
21852: LD_ADDR_VAR 0 27
21856: PUSH
21857: LD_INT 3
21859: NEG
21860: PUSH
21861: LD_INT 0
21863: PUSH
21864: EMPTY
21865: LIST
21866: LIST
21867: PUSH
21868: LD_INT 3
21870: NEG
21871: PUSH
21872: LD_INT 1
21874: PUSH
21875: EMPTY
21876: LIST
21877: LIST
21878: PUSH
21879: LD_INT 4
21881: NEG
21882: PUSH
21883: LD_INT 1
21885: NEG
21886: PUSH
21887: EMPTY
21888: LIST
21889: LIST
21890: PUSH
21891: EMPTY
21892: LIST
21893: LIST
21894: LIST
21895: ST_TO_ADDR
// DepotRu5 = [ [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 4 , - 3 ] ] ;
21896: LD_ADDR_VAR 0 28
21900: PUSH
21901: LD_INT 3
21903: NEG
21904: PUSH
21905: LD_INT 3
21907: NEG
21908: PUSH
21909: EMPTY
21910: LIST
21911: LIST
21912: PUSH
21913: LD_INT 3
21915: NEG
21916: PUSH
21917: LD_INT 4
21919: NEG
21920: PUSH
21921: EMPTY
21922: LIST
21923: LIST
21924: PUSH
21925: LD_INT 4
21927: NEG
21928: PUSH
21929: LD_INT 3
21931: NEG
21932: PUSH
21933: EMPTY
21934: LIST
21935: LIST
21936: PUSH
21937: EMPTY
21938: LIST
21939: LIST
21940: LIST
21941: ST_TO_ADDR
// Factory0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ - 1 , - 4 ] , [ 0 , - 4 ] , [ 1 , - 3 ] , [ - 1 , - 5 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ - 1 , - 6 ] , [ 0 , - 6 ] , [ 1 , - 5 ] ] ;
21942: LD_ADDR_VAR 0 29
21946: PUSH
21947: LD_INT 1
21949: NEG
21950: PUSH
21951: LD_INT 3
21953: NEG
21954: PUSH
21955: EMPTY
21956: LIST
21957: LIST
21958: PUSH
21959: LD_INT 0
21961: PUSH
21962: LD_INT 3
21964: NEG
21965: PUSH
21966: EMPTY
21967: LIST
21968: LIST
21969: PUSH
21970: LD_INT 1
21972: PUSH
21973: LD_INT 2
21975: NEG
21976: PUSH
21977: EMPTY
21978: LIST
21979: LIST
21980: PUSH
21981: LD_INT 1
21983: NEG
21984: PUSH
21985: LD_INT 4
21987: NEG
21988: PUSH
21989: EMPTY
21990: LIST
21991: LIST
21992: PUSH
21993: LD_INT 0
21995: PUSH
21996: LD_INT 4
21998: NEG
21999: PUSH
22000: EMPTY
22001: LIST
22002: LIST
22003: PUSH
22004: LD_INT 1
22006: PUSH
22007: LD_INT 3
22009: NEG
22010: PUSH
22011: EMPTY
22012: LIST
22013: LIST
22014: PUSH
22015: LD_INT 1
22017: NEG
22018: PUSH
22019: LD_INT 5
22021: NEG
22022: PUSH
22023: EMPTY
22024: LIST
22025: LIST
22026: PUSH
22027: LD_INT 0
22029: PUSH
22030: LD_INT 5
22032: NEG
22033: PUSH
22034: EMPTY
22035: LIST
22036: LIST
22037: PUSH
22038: LD_INT 1
22040: PUSH
22041: LD_INT 4
22043: NEG
22044: PUSH
22045: EMPTY
22046: LIST
22047: LIST
22048: PUSH
22049: LD_INT 1
22051: NEG
22052: PUSH
22053: LD_INT 6
22055: NEG
22056: PUSH
22057: EMPTY
22058: LIST
22059: LIST
22060: PUSH
22061: LD_INT 0
22063: PUSH
22064: LD_INT 6
22066: NEG
22067: PUSH
22068: EMPTY
22069: LIST
22070: LIST
22071: PUSH
22072: LD_INT 1
22074: PUSH
22075: LD_INT 5
22077: NEG
22078: PUSH
22079: EMPTY
22080: LIST
22081: LIST
22082: PUSH
22083: EMPTY
22084: LIST
22085: LIST
22086: LIST
22087: LIST
22088: LIST
22089: LIST
22090: LIST
22091: LIST
22092: LIST
22093: LIST
22094: LIST
22095: LIST
22096: ST_TO_ADDR
// Factory1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 3 , - 1 ] , [ 4 , 0 ] , [ 4 , 1 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 5 , - 1 ] , [ 6 , 0 ] , [ 6 , 1 ] ] ;
22097: LD_ADDR_VAR 0 30
22101: PUSH
22102: LD_INT 2
22104: PUSH
22105: LD_INT 1
22107: NEG
22108: PUSH
22109: EMPTY
22110: LIST
22111: LIST
22112: PUSH
22113: LD_INT 3
22115: PUSH
22116: LD_INT 0
22118: PUSH
22119: EMPTY
22120: LIST
22121: LIST
22122: PUSH
22123: LD_INT 3
22125: PUSH
22126: LD_INT 1
22128: PUSH
22129: EMPTY
22130: LIST
22131: LIST
22132: PUSH
22133: LD_INT 3
22135: PUSH
22136: LD_INT 1
22138: NEG
22139: PUSH
22140: EMPTY
22141: LIST
22142: LIST
22143: PUSH
22144: LD_INT 4
22146: PUSH
22147: LD_INT 0
22149: PUSH
22150: EMPTY
22151: LIST
22152: LIST
22153: PUSH
22154: LD_INT 4
22156: PUSH
22157: LD_INT 1
22159: PUSH
22160: EMPTY
22161: LIST
22162: LIST
22163: PUSH
22164: LD_INT 4
22166: PUSH
22167: LD_INT 1
22169: NEG
22170: PUSH
22171: EMPTY
22172: LIST
22173: LIST
22174: PUSH
22175: LD_INT 5
22177: PUSH
22178: LD_INT 0
22180: PUSH
22181: EMPTY
22182: LIST
22183: LIST
22184: PUSH
22185: LD_INT 5
22187: PUSH
22188: LD_INT 1
22190: PUSH
22191: EMPTY
22192: LIST
22193: LIST
22194: PUSH
22195: LD_INT 5
22197: PUSH
22198: LD_INT 1
22200: NEG
22201: PUSH
22202: EMPTY
22203: LIST
22204: LIST
22205: PUSH
22206: LD_INT 6
22208: PUSH
22209: LD_INT 0
22211: PUSH
22212: EMPTY
22213: LIST
22214: LIST
22215: PUSH
22216: LD_INT 6
22218: PUSH
22219: LD_INT 1
22221: PUSH
22222: EMPTY
22223: LIST
22224: LIST
22225: PUSH
22226: EMPTY
22227: LIST
22228: LIST
22229: LIST
22230: LIST
22231: LIST
22232: LIST
22233: LIST
22234: LIST
22235: LIST
22236: LIST
22237: LIST
22238: LIST
22239: ST_TO_ADDR
// Factory2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ 4 , 3 ] , [ 4 , 4 ] , [ 3 , 4 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 6 , 5 ] , [ 6 , 6 ] , [ 5 , 6 ] ] ;
22240: LD_ADDR_VAR 0 31
22244: PUSH
22245: LD_INT 3
22247: PUSH
22248: LD_INT 2
22250: PUSH
22251: EMPTY
22252: LIST
22253: LIST
22254: PUSH
22255: LD_INT 3
22257: PUSH
22258: LD_INT 3
22260: PUSH
22261: EMPTY
22262: LIST
22263: LIST
22264: PUSH
22265: LD_INT 2
22267: PUSH
22268: LD_INT 3
22270: PUSH
22271: EMPTY
22272: LIST
22273: LIST
22274: PUSH
22275: LD_INT 4
22277: PUSH
22278: LD_INT 3
22280: PUSH
22281: EMPTY
22282: LIST
22283: LIST
22284: PUSH
22285: LD_INT 4
22287: PUSH
22288: LD_INT 4
22290: PUSH
22291: EMPTY
22292: LIST
22293: LIST
22294: PUSH
22295: LD_INT 3
22297: PUSH
22298: LD_INT 4
22300: PUSH
22301: EMPTY
22302: LIST
22303: LIST
22304: PUSH
22305: LD_INT 5
22307: PUSH
22308: LD_INT 4
22310: PUSH
22311: EMPTY
22312: LIST
22313: LIST
22314: PUSH
22315: LD_INT 5
22317: PUSH
22318: LD_INT 5
22320: PUSH
22321: EMPTY
22322: LIST
22323: LIST
22324: PUSH
22325: LD_INT 4
22327: PUSH
22328: LD_INT 5
22330: PUSH
22331: EMPTY
22332: LIST
22333: LIST
22334: PUSH
22335: LD_INT 6
22337: PUSH
22338: LD_INT 5
22340: PUSH
22341: EMPTY
22342: LIST
22343: LIST
22344: PUSH
22345: LD_INT 6
22347: PUSH
22348: LD_INT 6
22350: PUSH
22351: EMPTY
22352: LIST
22353: LIST
22354: PUSH
22355: LD_INT 5
22357: PUSH
22358: LD_INT 6
22360: PUSH
22361: EMPTY
22362: LIST
22363: LIST
22364: PUSH
22365: EMPTY
22366: LIST
22367: LIST
22368: LIST
22369: LIST
22370: LIST
22371: LIST
22372: LIST
22373: LIST
22374: LIST
22375: LIST
22376: LIST
22377: LIST
22378: ST_TO_ADDR
// Factory3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ 1 , 4 ] , [ 0 , 4 ] , [ - 1 , 3 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ 1 , 6 ] , [ 0 , 6 ] , [ - 1 , 5 ] ] ;
22379: LD_ADDR_VAR 0 32
22383: PUSH
22384: LD_INT 1
22386: PUSH
22387: LD_INT 3
22389: PUSH
22390: EMPTY
22391: LIST
22392: LIST
22393: PUSH
22394: LD_INT 0
22396: PUSH
22397: LD_INT 3
22399: PUSH
22400: EMPTY
22401: LIST
22402: LIST
22403: PUSH
22404: LD_INT 1
22406: NEG
22407: PUSH
22408: LD_INT 2
22410: PUSH
22411: EMPTY
22412: LIST
22413: LIST
22414: PUSH
22415: LD_INT 1
22417: PUSH
22418: LD_INT 4
22420: PUSH
22421: EMPTY
22422: LIST
22423: LIST
22424: PUSH
22425: LD_INT 0
22427: PUSH
22428: LD_INT 4
22430: PUSH
22431: EMPTY
22432: LIST
22433: LIST
22434: PUSH
22435: LD_INT 1
22437: NEG
22438: PUSH
22439: LD_INT 3
22441: PUSH
22442: EMPTY
22443: LIST
22444: LIST
22445: PUSH
22446: LD_INT 1
22448: PUSH
22449: LD_INT 5
22451: PUSH
22452: EMPTY
22453: LIST
22454: LIST
22455: PUSH
22456: LD_INT 0
22458: PUSH
22459: LD_INT 5
22461: PUSH
22462: EMPTY
22463: LIST
22464: LIST
22465: PUSH
22466: LD_INT 1
22468: NEG
22469: PUSH
22470: LD_INT 4
22472: PUSH
22473: EMPTY
22474: LIST
22475: LIST
22476: PUSH
22477: LD_INT 1
22479: PUSH
22480: LD_INT 6
22482: PUSH
22483: EMPTY
22484: LIST
22485: LIST
22486: PUSH
22487: LD_INT 0
22489: PUSH
22490: LD_INT 6
22492: PUSH
22493: EMPTY
22494: LIST
22495: LIST
22496: PUSH
22497: LD_INT 1
22499: NEG
22500: PUSH
22501: LD_INT 5
22503: PUSH
22504: EMPTY
22505: LIST
22506: LIST
22507: PUSH
22508: EMPTY
22509: LIST
22510: LIST
22511: LIST
22512: LIST
22513: LIST
22514: LIST
22515: LIST
22516: LIST
22517: LIST
22518: LIST
22519: LIST
22520: LIST
22521: ST_TO_ADDR
// Factory4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 3 , 1 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , 1 ] , [ - 6 , 0 ] , [ - 6 , - 1 ] ] ;
22522: LD_ADDR_VAR 0 33
22526: PUSH
22527: LD_INT 2
22529: NEG
22530: PUSH
22531: LD_INT 1
22533: PUSH
22534: EMPTY
22535: LIST
22536: LIST
22537: PUSH
22538: LD_INT 3
22540: NEG
22541: PUSH
22542: LD_INT 0
22544: PUSH
22545: EMPTY
22546: LIST
22547: LIST
22548: PUSH
22549: LD_INT 3
22551: NEG
22552: PUSH
22553: LD_INT 1
22555: NEG
22556: PUSH
22557: EMPTY
22558: LIST
22559: LIST
22560: PUSH
22561: LD_INT 3
22563: NEG
22564: PUSH
22565: LD_INT 1
22567: PUSH
22568: EMPTY
22569: LIST
22570: LIST
22571: PUSH
22572: LD_INT 4
22574: NEG
22575: PUSH
22576: LD_INT 0
22578: PUSH
22579: EMPTY
22580: LIST
22581: LIST
22582: PUSH
22583: LD_INT 4
22585: NEG
22586: PUSH
22587: LD_INT 1
22589: NEG
22590: PUSH
22591: EMPTY
22592: LIST
22593: LIST
22594: PUSH
22595: LD_INT 4
22597: NEG
22598: PUSH
22599: LD_INT 1
22601: PUSH
22602: EMPTY
22603: LIST
22604: LIST
22605: PUSH
22606: LD_INT 5
22608: NEG
22609: PUSH
22610: LD_INT 0
22612: PUSH
22613: EMPTY
22614: LIST
22615: LIST
22616: PUSH
22617: LD_INT 5
22619: NEG
22620: PUSH
22621: LD_INT 1
22623: NEG
22624: PUSH
22625: EMPTY
22626: LIST
22627: LIST
22628: PUSH
22629: LD_INT 5
22631: NEG
22632: PUSH
22633: LD_INT 1
22635: PUSH
22636: EMPTY
22637: LIST
22638: LIST
22639: PUSH
22640: LD_INT 6
22642: NEG
22643: PUSH
22644: LD_INT 0
22646: PUSH
22647: EMPTY
22648: LIST
22649: LIST
22650: PUSH
22651: LD_INT 6
22653: NEG
22654: PUSH
22655: LD_INT 1
22657: NEG
22658: PUSH
22659: EMPTY
22660: LIST
22661: LIST
22662: PUSH
22663: EMPTY
22664: LIST
22665: LIST
22666: LIST
22667: LIST
22668: LIST
22669: LIST
22670: LIST
22671: LIST
22672: LIST
22673: LIST
22674: LIST
22675: LIST
22676: ST_TO_ADDR
// Factory5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 4 , - 3 ] , [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 5 , - 6 ] , [ - 6 , - 5 ] , [ - 6 , - 6 ] ] ;
22677: LD_ADDR_VAR 0 34
22681: PUSH
22682: LD_INT 2
22684: NEG
22685: PUSH
22686: LD_INT 3
22688: NEG
22689: PUSH
22690: EMPTY
22691: LIST
22692: LIST
22693: PUSH
22694: LD_INT 3
22696: NEG
22697: PUSH
22698: LD_INT 2
22700: NEG
22701: PUSH
22702: EMPTY
22703: LIST
22704: LIST
22705: PUSH
22706: LD_INT 3
22708: NEG
22709: PUSH
22710: LD_INT 3
22712: NEG
22713: PUSH
22714: EMPTY
22715: LIST
22716: LIST
22717: PUSH
22718: LD_INT 3
22720: NEG
22721: PUSH
22722: LD_INT 4
22724: NEG
22725: PUSH
22726: EMPTY
22727: LIST
22728: LIST
22729: PUSH
22730: LD_INT 4
22732: NEG
22733: PUSH
22734: LD_INT 3
22736: NEG
22737: PUSH
22738: EMPTY
22739: LIST
22740: LIST
22741: PUSH
22742: LD_INT 4
22744: NEG
22745: PUSH
22746: LD_INT 4
22748: NEG
22749: PUSH
22750: EMPTY
22751: LIST
22752: LIST
22753: PUSH
22754: LD_INT 4
22756: NEG
22757: PUSH
22758: LD_INT 5
22760: NEG
22761: PUSH
22762: EMPTY
22763: LIST
22764: LIST
22765: PUSH
22766: LD_INT 5
22768: NEG
22769: PUSH
22770: LD_INT 4
22772: NEG
22773: PUSH
22774: EMPTY
22775: LIST
22776: LIST
22777: PUSH
22778: LD_INT 5
22780: NEG
22781: PUSH
22782: LD_INT 5
22784: NEG
22785: PUSH
22786: EMPTY
22787: LIST
22788: LIST
22789: PUSH
22790: LD_INT 5
22792: NEG
22793: PUSH
22794: LD_INT 6
22796: NEG
22797: PUSH
22798: EMPTY
22799: LIST
22800: LIST
22801: PUSH
22802: LD_INT 6
22804: NEG
22805: PUSH
22806: LD_INT 5
22808: NEG
22809: PUSH
22810: EMPTY
22811: LIST
22812: LIST
22813: PUSH
22814: LD_INT 6
22816: NEG
22817: PUSH
22818: LD_INT 6
22820: NEG
22821: PUSH
22822: EMPTY
22823: LIST
22824: LIST
22825: PUSH
22826: EMPTY
22827: LIST
22828: LIST
22829: LIST
22830: LIST
22831: LIST
22832: LIST
22833: LIST
22834: LIST
22835: LIST
22836: LIST
22837: LIST
22838: LIST
22839: ST_TO_ADDR
// Lab0 = [ [ 0 , - 2 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] ] ;
22840: LD_ADDR_VAR 0 41
22844: PUSH
22845: LD_INT 0
22847: PUSH
22848: LD_INT 2
22850: NEG
22851: PUSH
22852: EMPTY
22853: LIST
22854: LIST
22855: PUSH
22856: LD_INT 1
22858: NEG
22859: PUSH
22860: LD_INT 3
22862: NEG
22863: PUSH
22864: EMPTY
22865: LIST
22866: LIST
22867: PUSH
22868: LD_INT 1
22870: PUSH
22871: LD_INT 2
22873: NEG
22874: PUSH
22875: EMPTY
22876: LIST
22877: LIST
22878: PUSH
22879: EMPTY
22880: LIST
22881: LIST
22882: LIST
22883: ST_TO_ADDR
// Lab1 = [ [ 2 , 0 ] , [ 2 , - 1 ] , [ 3 , 1 ] ] ;
22884: LD_ADDR_VAR 0 42
22888: PUSH
22889: LD_INT 2
22891: PUSH
22892: LD_INT 0
22894: PUSH
22895: EMPTY
22896: LIST
22897: LIST
22898: PUSH
22899: LD_INT 2
22901: PUSH
22902: LD_INT 1
22904: NEG
22905: PUSH
22906: EMPTY
22907: LIST
22908: LIST
22909: PUSH
22910: LD_INT 3
22912: PUSH
22913: LD_INT 1
22915: PUSH
22916: EMPTY
22917: LIST
22918: LIST
22919: PUSH
22920: EMPTY
22921: LIST
22922: LIST
22923: LIST
22924: ST_TO_ADDR
// Lab2 = [ [ 2 , 2 ] , [ 3 , 2 ] , [ 2 , 3 ] ] ;
22925: LD_ADDR_VAR 0 43
22929: PUSH
22930: LD_INT 2
22932: PUSH
22933: LD_INT 2
22935: PUSH
22936: EMPTY
22937: LIST
22938: LIST
22939: PUSH
22940: LD_INT 3
22942: PUSH
22943: LD_INT 2
22945: PUSH
22946: EMPTY
22947: LIST
22948: LIST
22949: PUSH
22950: LD_INT 2
22952: PUSH
22953: LD_INT 3
22955: PUSH
22956: EMPTY
22957: LIST
22958: LIST
22959: PUSH
22960: EMPTY
22961: LIST
22962: LIST
22963: LIST
22964: ST_TO_ADDR
// Lab3 = [ [ 0 , 2 ] , [ 1 , 3 ] , [ - 1 , 2 ] ] ;
22965: LD_ADDR_VAR 0 44
22969: PUSH
22970: LD_INT 0
22972: PUSH
22973: LD_INT 2
22975: PUSH
22976: EMPTY
22977: LIST
22978: LIST
22979: PUSH
22980: LD_INT 1
22982: PUSH
22983: LD_INT 3
22985: PUSH
22986: EMPTY
22987: LIST
22988: LIST
22989: PUSH
22990: LD_INT 1
22992: NEG
22993: PUSH
22994: LD_INT 2
22996: PUSH
22997: EMPTY
22998: LIST
22999: LIST
23000: PUSH
23001: EMPTY
23002: LIST
23003: LIST
23004: LIST
23005: ST_TO_ADDR
// Lab4 = [ [ - 2 , 0 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
23006: LD_ADDR_VAR 0 45
23010: PUSH
23011: LD_INT 2
23013: NEG
23014: PUSH
23015: LD_INT 0
23017: PUSH
23018: EMPTY
23019: LIST
23020: LIST
23021: PUSH
23022: LD_INT 2
23024: NEG
23025: PUSH
23026: LD_INT 1
23028: PUSH
23029: EMPTY
23030: LIST
23031: LIST
23032: PUSH
23033: LD_INT 3
23035: NEG
23036: PUSH
23037: LD_INT 1
23039: NEG
23040: PUSH
23041: EMPTY
23042: LIST
23043: LIST
23044: PUSH
23045: EMPTY
23046: LIST
23047: LIST
23048: LIST
23049: ST_TO_ADDR
// Lab5 = [ [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 3 , - 2 ] ] ;
23050: LD_ADDR_VAR 0 46
23054: PUSH
23055: LD_INT 2
23057: NEG
23058: PUSH
23059: LD_INT 2
23061: NEG
23062: PUSH
23063: EMPTY
23064: LIST
23065: LIST
23066: PUSH
23067: LD_INT 2
23069: NEG
23070: PUSH
23071: LD_INT 3
23073: NEG
23074: PUSH
23075: EMPTY
23076: LIST
23077: LIST
23078: PUSH
23079: LD_INT 3
23081: NEG
23082: PUSH
23083: LD_INT 2
23085: NEG
23086: PUSH
23087: EMPTY
23088: LIST
23089: LIST
23090: PUSH
23091: EMPTY
23092: LIST
23093: LIST
23094: LIST
23095: ST_TO_ADDR
// ControlTower0 = [ [ - 2 , - 3 ] , [ - 1 , - 3 ] ] ;
23096: LD_ADDR_VAR 0 47
23100: PUSH
23101: LD_INT 2
23103: NEG
23104: PUSH
23105: LD_INT 3
23107: NEG
23108: PUSH
23109: EMPTY
23110: LIST
23111: LIST
23112: PUSH
23113: LD_INT 1
23115: NEG
23116: PUSH
23117: LD_INT 3
23119: NEG
23120: PUSH
23121: EMPTY
23122: LIST
23123: LIST
23124: PUSH
23125: EMPTY
23126: LIST
23127: LIST
23128: ST_TO_ADDR
// ControlTower1 = [ [ 1 , - 2 ] , [ 2 , - 1 ] ] ;
23129: LD_ADDR_VAR 0 48
23133: PUSH
23134: LD_INT 1
23136: PUSH
23137: LD_INT 2
23139: NEG
23140: PUSH
23141: EMPTY
23142: LIST
23143: LIST
23144: PUSH
23145: LD_INT 2
23147: PUSH
23148: LD_INT 1
23150: NEG
23151: PUSH
23152: EMPTY
23153: LIST
23154: LIST
23155: PUSH
23156: EMPTY
23157: LIST
23158: LIST
23159: ST_TO_ADDR
// ControlTower2 = [ [ 3 , 1 ] , [ 3 , 2 ] ] ;
23160: LD_ADDR_VAR 0 49
23164: PUSH
23165: LD_INT 3
23167: PUSH
23168: LD_INT 1
23170: PUSH
23171: EMPTY
23172: LIST
23173: LIST
23174: PUSH
23175: LD_INT 3
23177: PUSH
23178: LD_INT 2
23180: PUSH
23181: EMPTY
23182: LIST
23183: LIST
23184: PUSH
23185: EMPTY
23186: LIST
23187: LIST
23188: ST_TO_ADDR
// ControlTower3 = [ [ 2 , 3 ] , [ 1 , 3 ] ] ;
23189: LD_ADDR_VAR 0 50
23193: PUSH
23194: LD_INT 2
23196: PUSH
23197: LD_INT 3
23199: PUSH
23200: EMPTY
23201: LIST
23202: LIST
23203: PUSH
23204: LD_INT 1
23206: PUSH
23207: LD_INT 3
23209: PUSH
23210: EMPTY
23211: LIST
23212: LIST
23213: PUSH
23214: EMPTY
23215: LIST
23216: LIST
23217: ST_TO_ADDR
// ControlTower4 = [ [ - 1 , 2 ] , [ - 2 , 1 ] ] ;
23218: LD_ADDR_VAR 0 51
23222: PUSH
23223: LD_INT 1
23225: NEG
23226: PUSH
23227: LD_INT 2
23229: PUSH
23230: EMPTY
23231: LIST
23232: LIST
23233: PUSH
23234: LD_INT 2
23236: NEG
23237: PUSH
23238: LD_INT 1
23240: PUSH
23241: EMPTY
23242: LIST
23243: LIST
23244: PUSH
23245: EMPTY
23246: LIST
23247: LIST
23248: ST_TO_ADDR
// ControlTower5 = [ [ - 3 , - 1 ] , [ - 3 , - 2 ] ] ;
23249: LD_ADDR_VAR 0 52
23253: PUSH
23254: LD_INT 3
23256: NEG
23257: PUSH
23258: LD_INT 1
23260: NEG
23261: PUSH
23262: EMPTY
23263: LIST
23264: LIST
23265: PUSH
23266: LD_INT 3
23268: NEG
23269: PUSH
23270: LD_INT 2
23272: NEG
23273: PUSH
23274: EMPTY
23275: LIST
23276: LIST
23277: PUSH
23278: EMPTY
23279: LIST
23280: LIST
23281: ST_TO_ADDR
// Barracks0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
23282: LD_ADDR_VAR 0 53
23286: PUSH
23287: LD_INT 1
23289: NEG
23290: PUSH
23291: LD_INT 3
23293: NEG
23294: PUSH
23295: EMPTY
23296: LIST
23297: LIST
23298: PUSH
23299: LD_INT 0
23301: PUSH
23302: LD_INT 3
23304: NEG
23305: PUSH
23306: EMPTY
23307: LIST
23308: LIST
23309: PUSH
23310: LD_INT 1
23312: PUSH
23313: LD_INT 2
23315: NEG
23316: PUSH
23317: EMPTY
23318: LIST
23319: LIST
23320: PUSH
23321: EMPTY
23322: LIST
23323: LIST
23324: LIST
23325: ST_TO_ADDR
// Barracks1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
23326: LD_ADDR_VAR 0 54
23330: PUSH
23331: LD_INT 2
23333: PUSH
23334: LD_INT 1
23336: NEG
23337: PUSH
23338: EMPTY
23339: LIST
23340: LIST
23341: PUSH
23342: LD_INT 3
23344: PUSH
23345: LD_INT 0
23347: PUSH
23348: EMPTY
23349: LIST
23350: LIST
23351: PUSH
23352: LD_INT 3
23354: PUSH
23355: LD_INT 1
23357: PUSH
23358: EMPTY
23359: LIST
23360: LIST
23361: PUSH
23362: EMPTY
23363: LIST
23364: LIST
23365: LIST
23366: ST_TO_ADDR
// Barracks2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
23367: LD_ADDR_VAR 0 55
23371: PUSH
23372: LD_INT 3
23374: PUSH
23375: LD_INT 2
23377: PUSH
23378: EMPTY
23379: LIST
23380: LIST
23381: PUSH
23382: LD_INT 3
23384: PUSH
23385: LD_INT 3
23387: PUSH
23388: EMPTY
23389: LIST
23390: LIST
23391: PUSH
23392: LD_INT 2
23394: PUSH
23395: LD_INT 3
23397: PUSH
23398: EMPTY
23399: LIST
23400: LIST
23401: PUSH
23402: EMPTY
23403: LIST
23404: LIST
23405: LIST
23406: ST_TO_ADDR
// Barracks3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
23407: LD_ADDR_VAR 0 56
23411: PUSH
23412: LD_INT 1
23414: PUSH
23415: LD_INT 3
23417: PUSH
23418: EMPTY
23419: LIST
23420: LIST
23421: PUSH
23422: LD_INT 0
23424: PUSH
23425: LD_INT 3
23427: PUSH
23428: EMPTY
23429: LIST
23430: LIST
23431: PUSH
23432: LD_INT 1
23434: NEG
23435: PUSH
23436: LD_INT 2
23438: PUSH
23439: EMPTY
23440: LIST
23441: LIST
23442: PUSH
23443: EMPTY
23444: LIST
23445: LIST
23446: LIST
23447: ST_TO_ADDR
// Barracks4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
23448: LD_ADDR_VAR 0 57
23452: PUSH
23453: LD_INT 2
23455: NEG
23456: PUSH
23457: LD_INT 1
23459: PUSH
23460: EMPTY
23461: LIST
23462: LIST
23463: PUSH
23464: LD_INT 3
23466: NEG
23467: PUSH
23468: LD_INT 0
23470: PUSH
23471: EMPTY
23472: LIST
23473: LIST
23474: PUSH
23475: LD_INT 3
23477: NEG
23478: PUSH
23479: LD_INT 1
23481: NEG
23482: PUSH
23483: EMPTY
23484: LIST
23485: LIST
23486: PUSH
23487: EMPTY
23488: LIST
23489: LIST
23490: LIST
23491: ST_TO_ADDR
// Barracks5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
23492: LD_ADDR_VAR 0 58
23496: PUSH
23497: LD_INT 2
23499: NEG
23500: PUSH
23501: LD_INT 3
23503: NEG
23504: PUSH
23505: EMPTY
23506: LIST
23507: LIST
23508: PUSH
23509: LD_INT 3
23511: NEG
23512: PUSH
23513: LD_INT 2
23515: NEG
23516: PUSH
23517: EMPTY
23518: LIST
23519: LIST
23520: PUSH
23521: LD_INT 3
23523: NEG
23524: PUSH
23525: LD_INT 3
23527: NEG
23528: PUSH
23529: EMPTY
23530: LIST
23531: LIST
23532: PUSH
23533: EMPTY
23534: LIST
23535: LIST
23536: LIST
23537: ST_TO_ADDR
// Bunker0 = [ [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] ] ;
23538: LD_ADDR_VAR 0 59
23542: PUSH
23543: LD_INT 1
23545: NEG
23546: PUSH
23547: LD_INT 2
23549: NEG
23550: PUSH
23551: EMPTY
23552: LIST
23553: LIST
23554: PUSH
23555: LD_INT 0
23557: PUSH
23558: LD_INT 2
23560: NEG
23561: PUSH
23562: EMPTY
23563: LIST
23564: LIST
23565: PUSH
23566: LD_INT 1
23568: PUSH
23569: LD_INT 1
23571: NEG
23572: PUSH
23573: EMPTY
23574: LIST
23575: LIST
23576: PUSH
23577: EMPTY
23578: LIST
23579: LIST
23580: LIST
23581: ST_TO_ADDR
// Bunker1 = [ [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] ] ;
23582: LD_ADDR_VAR 0 60
23586: PUSH
23587: LD_INT 1
23589: PUSH
23590: LD_INT 1
23592: NEG
23593: PUSH
23594: EMPTY
23595: LIST
23596: LIST
23597: PUSH
23598: LD_INT 2
23600: PUSH
23601: LD_INT 0
23603: PUSH
23604: EMPTY
23605: LIST
23606: LIST
23607: PUSH
23608: LD_INT 2
23610: PUSH
23611: LD_INT 1
23613: PUSH
23614: EMPTY
23615: LIST
23616: LIST
23617: PUSH
23618: EMPTY
23619: LIST
23620: LIST
23621: LIST
23622: ST_TO_ADDR
// Bunker2 = [ [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] ] ;
23623: LD_ADDR_VAR 0 61
23627: PUSH
23628: LD_INT 2
23630: PUSH
23631: LD_INT 1
23633: PUSH
23634: EMPTY
23635: LIST
23636: LIST
23637: PUSH
23638: LD_INT 2
23640: PUSH
23641: LD_INT 2
23643: PUSH
23644: EMPTY
23645: LIST
23646: LIST
23647: PUSH
23648: LD_INT 1
23650: PUSH
23651: LD_INT 2
23653: PUSH
23654: EMPTY
23655: LIST
23656: LIST
23657: PUSH
23658: EMPTY
23659: LIST
23660: LIST
23661: LIST
23662: ST_TO_ADDR
// Bunker3 = [ [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] ] ;
23663: LD_ADDR_VAR 0 62
23667: PUSH
23668: LD_INT 1
23670: PUSH
23671: LD_INT 2
23673: PUSH
23674: EMPTY
23675: LIST
23676: LIST
23677: PUSH
23678: LD_INT 0
23680: PUSH
23681: LD_INT 2
23683: PUSH
23684: EMPTY
23685: LIST
23686: LIST
23687: PUSH
23688: LD_INT 1
23690: NEG
23691: PUSH
23692: LD_INT 1
23694: PUSH
23695: EMPTY
23696: LIST
23697: LIST
23698: PUSH
23699: EMPTY
23700: LIST
23701: LIST
23702: LIST
23703: ST_TO_ADDR
// Bunker4 = [ [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] ] ;
23704: LD_ADDR_VAR 0 63
23708: PUSH
23709: LD_INT 1
23711: NEG
23712: PUSH
23713: LD_INT 1
23715: PUSH
23716: EMPTY
23717: LIST
23718: LIST
23719: PUSH
23720: LD_INT 2
23722: NEG
23723: PUSH
23724: LD_INT 0
23726: PUSH
23727: EMPTY
23728: LIST
23729: LIST
23730: PUSH
23731: LD_INT 2
23733: NEG
23734: PUSH
23735: LD_INT 1
23737: NEG
23738: PUSH
23739: EMPTY
23740: LIST
23741: LIST
23742: PUSH
23743: EMPTY
23744: LIST
23745: LIST
23746: LIST
23747: ST_TO_ADDR
// Bunker5 = [ [ - 1 , - 2 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
23748: LD_ADDR_VAR 0 64
23752: PUSH
23753: LD_INT 1
23755: NEG
23756: PUSH
23757: LD_INT 2
23759: NEG
23760: PUSH
23761: EMPTY
23762: LIST
23763: LIST
23764: PUSH
23765: LD_INT 2
23767: NEG
23768: PUSH
23769: LD_INT 1
23771: NEG
23772: PUSH
23773: EMPTY
23774: LIST
23775: LIST
23776: PUSH
23777: LD_INT 2
23779: NEG
23780: PUSH
23781: LD_INT 2
23783: NEG
23784: PUSH
23785: EMPTY
23786: LIST
23787: LIST
23788: PUSH
23789: EMPTY
23790: LIST
23791: LIST
23792: LIST
23793: ST_TO_ADDR
// end ; 2 :
23794: GO 27060
23796: LD_INT 2
23798: DOUBLE
23799: EQUAL
23800: IFTRUE 23804
23802: GO 27059
23804: POP
// begin Factory0 = [ [ 4 , 0 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 4 , 1 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 3 , - 2 ] , [ 5 , 2 ] , [ 3 , 3 ] , [ 3 , 2 ] , [ 4 , 3 ] , [ 4 , 4 ] , [ 3 , 4 ] , [ 2 , 3 ] , [ 2 , 2 ] , [ 4 , 2 ] , [ 2 , 4 ] , [ 0 , 4 ] , [ 0 , 3 ] , [ 1 , 4 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ - 1 , 3 ] , [ 2 , 5 ] , [ - 2 , 3 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 2 , 0 ] , [ - 2 , 1 ] , [ - 3 , 1 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 4 , - 2 ] , [ - 2 , 2 ] , [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 3 , - 4 ] , [ - 3 , - 3 ] , [ - 4 , - 3 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 3 , - 5 ] , [ - 5 , - 3 ] ] ;
23805: LD_ADDR_VAR 0 29
23809: PUSH
23810: LD_INT 4
23812: PUSH
23813: LD_INT 0
23815: PUSH
23816: EMPTY
23817: LIST
23818: LIST
23819: PUSH
23820: LD_INT 4
23822: PUSH
23823: LD_INT 1
23825: NEG
23826: PUSH
23827: EMPTY
23828: LIST
23829: LIST
23830: PUSH
23831: LD_INT 5
23833: PUSH
23834: LD_INT 0
23836: PUSH
23837: EMPTY
23838: LIST
23839: LIST
23840: PUSH
23841: LD_INT 5
23843: PUSH
23844: LD_INT 1
23846: PUSH
23847: EMPTY
23848: LIST
23849: LIST
23850: PUSH
23851: LD_INT 4
23853: PUSH
23854: LD_INT 1
23856: PUSH
23857: EMPTY
23858: LIST
23859: LIST
23860: PUSH
23861: LD_INT 3
23863: PUSH
23864: LD_INT 0
23866: PUSH
23867: EMPTY
23868: LIST
23869: LIST
23870: PUSH
23871: LD_INT 3
23873: PUSH
23874: LD_INT 1
23876: NEG
23877: PUSH
23878: EMPTY
23879: LIST
23880: LIST
23881: PUSH
23882: LD_INT 3
23884: PUSH
23885: LD_INT 2
23887: NEG
23888: PUSH
23889: EMPTY
23890: LIST
23891: LIST
23892: PUSH
23893: LD_INT 5
23895: PUSH
23896: LD_INT 2
23898: PUSH
23899: EMPTY
23900: LIST
23901: LIST
23902: PUSH
23903: LD_INT 3
23905: PUSH
23906: LD_INT 3
23908: PUSH
23909: EMPTY
23910: LIST
23911: LIST
23912: PUSH
23913: LD_INT 3
23915: PUSH
23916: LD_INT 2
23918: PUSH
23919: EMPTY
23920: LIST
23921: LIST
23922: PUSH
23923: LD_INT 4
23925: PUSH
23926: LD_INT 3
23928: PUSH
23929: EMPTY
23930: LIST
23931: LIST
23932: PUSH
23933: LD_INT 4
23935: PUSH
23936: LD_INT 4
23938: PUSH
23939: EMPTY
23940: LIST
23941: LIST
23942: PUSH
23943: LD_INT 3
23945: PUSH
23946: LD_INT 4
23948: PUSH
23949: EMPTY
23950: LIST
23951: LIST
23952: PUSH
23953: LD_INT 2
23955: PUSH
23956: LD_INT 3
23958: PUSH
23959: EMPTY
23960: LIST
23961: LIST
23962: PUSH
23963: LD_INT 2
23965: PUSH
23966: LD_INT 2
23968: PUSH
23969: EMPTY
23970: LIST
23971: LIST
23972: PUSH
23973: LD_INT 4
23975: PUSH
23976: LD_INT 2
23978: PUSH
23979: EMPTY
23980: LIST
23981: LIST
23982: PUSH
23983: LD_INT 2
23985: PUSH
23986: LD_INT 4
23988: PUSH
23989: EMPTY
23990: LIST
23991: LIST
23992: PUSH
23993: LD_INT 0
23995: PUSH
23996: LD_INT 4
23998: PUSH
23999: EMPTY
24000: LIST
24001: LIST
24002: PUSH
24003: LD_INT 0
24005: PUSH
24006: LD_INT 3
24008: PUSH
24009: EMPTY
24010: LIST
24011: LIST
24012: PUSH
24013: LD_INT 1
24015: PUSH
24016: LD_INT 4
24018: PUSH
24019: EMPTY
24020: LIST
24021: LIST
24022: PUSH
24023: LD_INT 1
24025: PUSH
24026: LD_INT 5
24028: PUSH
24029: EMPTY
24030: LIST
24031: LIST
24032: PUSH
24033: LD_INT 0
24035: PUSH
24036: LD_INT 5
24038: PUSH
24039: EMPTY
24040: LIST
24041: LIST
24042: PUSH
24043: LD_INT 1
24045: NEG
24046: PUSH
24047: LD_INT 4
24049: PUSH
24050: EMPTY
24051: LIST
24052: LIST
24053: PUSH
24054: LD_INT 1
24056: NEG
24057: PUSH
24058: LD_INT 3
24060: PUSH
24061: EMPTY
24062: LIST
24063: LIST
24064: PUSH
24065: LD_INT 2
24067: PUSH
24068: LD_INT 5
24070: PUSH
24071: EMPTY
24072: LIST
24073: LIST
24074: PUSH
24075: LD_INT 2
24077: NEG
24078: PUSH
24079: LD_INT 3
24081: PUSH
24082: EMPTY
24083: LIST
24084: LIST
24085: PUSH
24086: LD_INT 3
24088: NEG
24089: PUSH
24090: LD_INT 0
24092: PUSH
24093: EMPTY
24094: LIST
24095: LIST
24096: PUSH
24097: LD_INT 3
24099: NEG
24100: PUSH
24101: LD_INT 1
24103: NEG
24104: PUSH
24105: EMPTY
24106: LIST
24107: LIST
24108: PUSH
24109: LD_INT 2
24111: NEG
24112: PUSH
24113: LD_INT 0
24115: PUSH
24116: EMPTY
24117: LIST
24118: LIST
24119: PUSH
24120: LD_INT 2
24122: NEG
24123: PUSH
24124: LD_INT 1
24126: PUSH
24127: EMPTY
24128: LIST
24129: LIST
24130: PUSH
24131: LD_INT 3
24133: NEG
24134: PUSH
24135: LD_INT 1
24137: PUSH
24138: EMPTY
24139: LIST
24140: LIST
24141: PUSH
24142: LD_INT 4
24144: NEG
24145: PUSH
24146: LD_INT 0
24148: PUSH
24149: EMPTY
24150: LIST
24151: LIST
24152: PUSH
24153: LD_INT 4
24155: NEG
24156: PUSH
24157: LD_INT 1
24159: NEG
24160: PUSH
24161: EMPTY
24162: LIST
24163: LIST
24164: PUSH
24165: LD_INT 4
24167: NEG
24168: PUSH
24169: LD_INT 2
24171: NEG
24172: PUSH
24173: EMPTY
24174: LIST
24175: LIST
24176: PUSH
24177: LD_INT 2
24179: NEG
24180: PUSH
24181: LD_INT 2
24183: PUSH
24184: EMPTY
24185: LIST
24186: LIST
24187: PUSH
24188: LD_INT 4
24190: NEG
24191: PUSH
24192: LD_INT 4
24194: NEG
24195: PUSH
24196: EMPTY
24197: LIST
24198: LIST
24199: PUSH
24200: LD_INT 4
24202: NEG
24203: PUSH
24204: LD_INT 5
24206: NEG
24207: PUSH
24208: EMPTY
24209: LIST
24210: LIST
24211: PUSH
24212: LD_INT 3
24214: NEG
24215: PUSH
24216: LD_INT 4
24218: NEG
24219: PUSH
24220: EMPTY
24221: LIST
24222: LIST
24223: PUSH
24224: LD_INT 3
24226: NEG
24227: PUSH
24228: LD_INT 3
24230: NEG
24231: PUSH
24232: EMPTY
24233: LIST
24234: LIST
24235: PUSH
24236: LD_INT 4
24238: NEG
24239: PUSH
24240: LD_INT 3
24242: NEG
24243: PUSH
24244: EMPTY
24245: LIST
24246: LIST
24247: PUSH
24248: LD_INT 5
24250: NEG
24251: PUSH
24252: LD_INT 4
24254: NEG
24255: PUSH
24256: EMPTY
24257: LIST
24258: LIST
24259: PUSH
24260: LD_INT 5
24262: NEG
24263: PUSH
24264: LD_INT 5
24266: NEG
24267: PUSH
24268: EMPTY
24269: LIST
24270: LIST
24271: PUSH
24272: LD_INT 3
24274: NEG
24275: PUSH
24276: LD_INT 5
24278: NEG
24279: PUSH
24280: EMPTY
24281: LIST
24282: LIST
24283: PUSH
24284: LD_INT 5
24286: NEG
24287: PUSH
24288: LD_INT 3
24290: NEG
24291: PUSH
24292: EMPTY
24293: LIST
24294: LIST
24295: PUSH
24296: EMPTY
24297: LIST
24298: LIST
24299: LIST
24300: LIST
24301: LIST
24302: LIST
24303: LIST
24304: LIST
24305: LIST
24306: LIST
24307: LIST
24308: LIST
24309: LIST
24310: LIST
24311: LIST
24312: LIST
24313: LIST
24314: LIST
24315: LIST
24316: LIST
24317: LIST
24318: LIST
24319: LIST
24320: LIST
24321: LIST
24322: LIST
24323: LIST
24324: LIST
24325: LIST
24326: LIST
24327: LIST
24328: LIST
24329: LIST
24330: LIST
24331: LIST
24332: LIST
24333: LIST
24334: LIST
24335: LIST
24336: LIST
24337: LIST
24338: LIST
24339: LIST
24340: LIST
24341: LIST
24342: ST_TO_ADDR
// Factory1 = [ [ 4 , 4 ] , [ 4 , 3 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 3 , 4 ] , [ 3 , 3 ] , [ 5 , 3 ] , [ 3 , 5 ] , [ 0 , 3 ] , [ 0 , 2 ] , [ 1 , 3 ] , [ 1 , 4 ] , [ 0 , 4 ] , [ - 1 , 3 ] , [ - 1 , 2 ] , [ 2 , 4 ] , [ - 2 , 2 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , - 2 ] , [ - 3 , 2 ] , [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 2 , - 3 ] , [ - 2 , - 2 ] , [ - 3 , - 2 ] , [ - 4 , - 3 ] , [ - 4 , - 4 ] , [ - 2 , - 4 ] , [ - 4 , - 2 ] , [ 0 , - 4 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ 1 , - 3 ] , [ 0 , - 3 ] , [ - 1 , - 4 ] , [ - 1 , - 5 ] , [ 2 , - 3 ] , [ - 2 , - 5 ] ] ;
24343: LD_ADDR_VAR 0 30
24347: PUSH
24348: LD_INT 4
24350: PUSH
24351: LD_INT 4
24353: PUSH
24354: EMPTY
24355: LIST
24356: LIST
24357: PUSH
24358: LD_INT 4
24360: PUSH
24361: LD_INT 3
24363: PUSH
24364: EMPTY
24365: LIST
24366: LIST
24367: PUSH
24368: LD_INT 5
24370: PUSH
24371: LD_INT 4
24373: PUSH
24374: EMPTY
24375: LIST
24376: LIST
24377: PUSH
24378: LD_INT 5
24380: PUSH
24381: LD_INT 5
24383: PUSH
24384: EMPTY
24385: LIST
24386: LIST
24387: PUSH
24388: LD_INT 4
24390: PUSH
24391: LD_INT 5
24393: PUSH
24394: EMPTY
24395: LIST
24396: LIST
24397: PUSH
24398: LD_INT 3
24400: PUSH
24401: LD_INT 4
24403: PUSH
24404: EMPTY
24405: LIST
24406: LIST
24407: PUSH
24408: LD_INT 3
24410: PUSH
24411: LD_INT 3
24413: PUSH
24414: EMPTY
24415: LIST
24416: LIST
24417: PUSH
24418: LD_INT 5
24420: PUSH
24421: LD_INT 3
24423: PUSH
24424: EMPTY
24425: LIST
24426: LIST
24427: PUSH
24428: LD_INT 3
24430: PUSH
24431: LD_INT 5
24433: PUSH
24434: EMPTY
24435: LIST
24436: LIST
24437: PUSH
24438: LD_INT 0
24440: PUSH
24441: LD_INT 3
24443: PUSH
24444: EMPTY
24445: LIST
24446: LIST
24447: PUSH
24448: LD_INT 0
24450: PUSH
24451: LD_INT 2
24453: PUSH
24454: EMPTY
24455: LIST
24456: LIST
24457: PUSH
24458: LD_INT 1
24460: PUSH
24461: LD_INT 3
24463: PUSH
24464: EMPTY
24465: LIST
24466: LIST
24467: PUSH
24468: LD_INT 1
24470: PUSH
24471: LD_INT 4
24473: PUSH
24474: EMPTY
24475: LIST
24476: LIST
24477: PUSH
24478: LD_INT 0
24480: PUSH
24481: LD_INT 4
24483: PUSH
24484: EMPTY
24485: LIST
24486: LIST
24487: PUSH
24488: LD_INT 1
24490: NEG
24491: PUSH
24492: LD_INT 3
24494: PUSH
24495: EMPTY
24496: LIST
24497: LIST
24498: PUSH
24499: LD_INT 1
24501: NEG
24502: PUSH
24503: LD_INT 2
24505: PUSH
24506: EMPTY
24507: LIST
24508: LIST
24509: PUSH
24510: LD_INT 2
24512: PUSH
24513: LD_INT 4
24515: PUSH
24516: EMPTY
24517: LIST
24518: LIST
24519: PUSH
24520: LD_INT 2
24522: NEG
24523: PUSH
24524: LD_INT 2
24526: PUSH
24527: EMPTY
24528: LIST
24529: LIST
24530: PUSH
24531: LD_INT 4
24533: NEG
24534: PUSH
24535: LD_INT 0
24537: PUSH
24538: EMPTY
24539: LIST
24540: LIST
24541: PUSH
24542: LD_INT 4
24544: NEG
24545: PUSH
24546: LD_INT 1
24548: NEG
24549: PUSH
24550: EMPTY
24551: LIST
24552: LIST
24553: PUSH
24554: LD_INT 3
24556: NEG
24557: PUSH
24558: LD_INT 0
24560: PUSH
24561: EMPTY
24562: LIST
24563: LIST
24564: PUSH
24565: LD_INT 3
24567: NEG
24568: PUSH
24569: LD_INT 1
24571: PUSH
24572: EMPTY
24573: LIST
24574: LIST
24575: PUSH
24576: LD_INT 4
24578: NEG
24579: PUSH
24580: LD_INT 1
24582: PUSH
24583: EMPTY
24584: LIST
24585: LIST
24586: PUSH
24587: LD_INT 5
24589: NEG
24590: PUSH
24591: LD_INT 0
24593: PUSH
24594: EMPTY
24595: LIST
24596: LIST
24597: PUSH
24598: LD_INT 5
24600: NEG
24601: PUSH
24602: LD_INT 1
24604: NEG
24605: PUSH
24606: EMPTY
24607: LIST
24608: LIST
24609: PUSH
24610: LD_INT 5
24612: NEG
24613: PUSH
24614: LD_INT 2
24616: NEG
24617: PUSH
24618: EMPTY
24619: LIST
24620: LIST
24621: PUSH
24622: LD_INT 3
24624: NEG
24625: PUSH
24626: LD_INT 2
24628: PUSH
24629: EMPTY
24630: LIST
24631: LIST
24632: PUSH
24633: LD_INT 3
24635: NEG
24636: PUSH
24637: LD_INT 3
24639: NEG
24640: PUSH
24641: EMPTY
24642: LIST
24643: LIST
24644: PUSH
24645: LD_INT 3
24647: NEG
24648: PUSH
24649: LD_INT 4
24651: NEG
24652: PUSH
24653: EMPTY
24654: LIST
24655: LIST
24656: PUSH
24657: LD_INT 2
24659: NEG
24660: PUSH
24661: LD_INT 3
24663: NEG
24664: PUSH
24665: EMPTY
24666: LIST
24667: LIST
24668: PUSH
24669: LD_INT 2
24671: NEG
24672: PUSH
24673: LD_INT 2
24675: NEG
24676: PUSH
24677: EMPTY
24678: LIST
24679: LIST
24680: PUSH
24681: LD_INT 3
24683: NEG
24684: PUSH
24685: LD_INT 2
24687: NEG
24688: PUSH
24689: EMPTY
24690: LIST
24691: LIST
24692: PUSH
24693: LD_INT 4
24695: NEG
24696: PUSH
24697: LD_INT 3
24699: NEG
24700: PUSH
24701: EMPTY
24702: LIST
24703: LIST
24704: PUSH
24705: LD_INT 4
24707: NEG
24708: PUSH
24709: LD_INT 4
24711: NEG
24712: PUSH
24713: EMPTY
24714: LIST
24715: LIST
24716: PUSH
24717: LD_INT 2
24719: NEG
24720: PUSH
24721: LD_INT 4
24723: NEG
24724: PUSH
24725: EMPTY
24726: LIST
24727: LIST
24728: PUSH
24729: LD_INT 4
24731: NEG
24732: PUSH
24733: LD_INT 2
24735: NEG
24736: PUSH
24737: EMPTY
24738: LIST
24739: LIST
24740: PUSH
24741: LD_INT 0
24743: PUSH
24744: LD_INT 4
24746: NEG
24747: PUSH
24748: EMPTY
24749: LIST
24750: LIST
24751: PUSH
24752: LD_INT 0
24754: PUSH
24755: LD_INT 5
24757: NEG
24758: PUSH
24759: EMPTY
24760: LIST
24761: LIST
24762: PUSH
24763: LD_INT 1
24765: PUSH
24766: LD_INT 4
24768: NEG
24769: PUSH
24770: EMPTY
24771: LIST
24772: LIST
24773: PUSH
24774: LD_INT 1
24776: PUSH
24777: LD_INT 3
24779: NEG
24780: PUSH
24781: EMPTY
24782: LIST
24783: LIST
24784: PUSH
24785: LD_INT 0
24787: PUSH
24788: LD_INT 3
24790: NEG
24791: PUSH
24792: EMPTY
24793: LIST
24794: LIST
24795: PUSH
24796: LD_INT 1
24798: NEG
24799: PUSH
24800: LD_INT 4
24802: NEG
24803: PUSH
24804: EMPTY
24805: LIST
24806: LIST
24807: PUSH
24808: LD_INT 1
24810: NEG
24811: PUSH
24812: LD_INT 5
24814: NEG
24815: PUSH
24816: EMPTY
24817: LIST
24818: LIST
24819: PUSH
24820: LD_INT 2
24822: PUSH
24823: LD_INT 3
24825: NEG
24826: PUSH
24827: EMPTY
24828: LIST
24829: LIST
24830: PUSH
24831: LD_INT 2
24833: NEG
24834: PUSH
24835: LD_INT 5
24837: NEG
24838: PUSH
24839: EMPTY
24840: LIST
24841: LIST
24842: PUSH
24843: EMPTY
24844: LIST
24845: LIST
24846: LIST
24847: LIST
24848: LIST
24849: LIST
24850: LIST
24851: LIST
24852: LIST
24853: LIST
24854: LIST
24855: LIST
24856: LIST
24857: LIST
24858: LIST
24859: LIST
24860: LIST
24861: LIST
24862: LIST
24863: LIST
24864: LIST
24865: LIST
24866: LIST
24867: LIST
24868: LIST
24869: LIST
24870: LIST
24871: LIST
24872: LIST
24873: LIST
24874: LIST
24875: LIST
24876: LIST
24877: LIST
24878: LIST
24879: LIST
24880: LIST
24881: LIST
24882: LIST
24883: LIST
24884: LIST
24885: LIST
24886: LIST
24887: LIST
24888: LIST
24889: ST_TO_ADDR
// Factory2 = [ [ 0 , 4 ] , [ 0 , 3 ] , [ 1 , 4 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ - 1 , 3 ] , [ 2 , 5 ] , [ - 2 , 3 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 2 , 0 ] , [ - 2 , 1 ] , [ - 3 , 1 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 4 , - 2 ] , [ - 2 , 2 ] , [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 3 , - 4 ] , [ - 3 , - 3 ] , [ - 4 , - 3 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 3 , - 5 ] , [ - 5 , - 3 ] , [ 0 , - 3 ] , [ 0 , - 4 ] , [ 1 , - 3 ] , [ 1 , - 2 ] , [ 0 , - 2 ] , [ - 1 , - 3 ] , [ - 1 , - 4 ] , [ 2 , - 2 ] , [ - 2 , - 4 ] , [ 4 , 0 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 4 , 1 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 3 , - 2 ] , [ 5 , 2 ] ] ;
24890: LD_ADDR_VAR 0 31
24894: PUSH
24895: LD_INT 0
24897: PUSH
24898: LD_INT 4
24900: PUSH
24901: EMPTY
24902: LIST
24903: LIST
24904: PUSH
24905: LD_INT 0
24907: PUSH
24908: LD_INT 3
24910: PUSH
24911: EMPTY
24912: LIST
24913: LIST
24914: PUSH
24915: LD_INT 1
24917: PUSH
24918: LD_INT 4
24920: PUSH
24921: EMPTY
24922: LIST
24923: LIST
24924: PUSH
24925: LD_INT 1
24927: PUSH
24928: LD_INT 5
24930: PUSH
24931: EMPTY
24932: LIST
24933: LIST
24934: PUSH
24935: LD_INT 0
24937: PUSH
24938: LD_INT 5
24940: PUSH
24941: EMPTY
24942: LIST
24943: LIST
24944: PUSH
24945: LD_INT 1
24947: NEG
24948: PUSH
24949: LD_INT 4
24951: PUSH
24952: EMPTY
24953: LIST
24954: LIST
24955: PUSH
24956: LD_INT 1
24958: NEG
24959: PUSH
24960: LD_INT 3
24962: PUSH
24963: EMPTY
24964: LIST
24965: LIST
24966: PUSH
24967: LD_INT 2
24969: PUSH
24970: LD_INT 5
24972: PUSH
24973: EMPTY
24974: LIST
24975: LIST
24976: PUSH
24977: LD_INT 2
24979: NEG
24980: PUSH
24981: LD_INT 3
24983: PUSH
24984: EMPTY
24985: LIST
24986: LIST
24987: PUSH
24988: LD_INT 3
24990: NEG
24991: PUSH
24992: LD_INT 0
24994: PUSH
24995: EMPTY
24996: LIST
24997: LIST
24998: PUSH
24999: LD_INT 3
25001: NEG
25002: PUSH
25003: LD_INT 1
25005: NEG
25006: PUSH
25007: EMPTY
25008: LIST
25009: LIST
25010: PUSH
25011: LD_INT 2
25013: NEG
25014: PUSH
25015: LD_INT 0
25017: PUSH
25018: EMPTY
25019: LIST
25020: LIST
25021: PUSH
25022: LD_INT 2
25024: NEG
25025: PUSH
25026: LD_INT 1
25028: PUSH
25029: EMPTY
25030: LIST
25031: LIST
25032: PUSH
25033: LD_INT 3
25035: NEG
25036: PUSH
25037: LD_INT 1
25039: PUSH
25040: EMPTY
25041: LIST
25042: LIST
25043: PUSH
25044: LD_INT 4
25046: NEG
25047: PUSH
25048: LD_INT 0
25050: PUSH
25051: EMPTY
25052: LIST
25053: LIST
25054: PUSH
25055: LD_INT 4
25057: NEG
25058: PUSH
25059: LD_INT 1
25061: NEG
25062: PUSH
25063: EMPTY
25064: LIST
25065: LIST
25066: PUSH
25067: LD_INT 4
25069: NEG
25070: PUSH
25071: LD_INT 2
25073: NEG
25074: PUSH
25075: EMPTY
25076: LIST
25077: LIST
25078: PUSH
25079: LD_INT 2
25081: NEG
25082: PUSH
25083: LD_INT 2
25085: PUSH
25086: EMPTY
25087: LIST
25088: LIST
25089: PUSH
25090: LD_INT 4
25092: NEG
25093: PUSH
25094: LD_INT 4
25096: NEG
25097: PUSH
25098: EMPTY
25099: LIST
25100: LIST
25101: PUSH
25102: LD_INT 4
25104: NEG
25105: PUSH
25106: LD_INT 5
25108: NEG
25109: PUSH
25110: EMPTY
25111: LIST
25112: LIST
25113: PUSH
25114: LD_INT 3
25116: NEG
25117: PUSH
25118: LD_INT 4
25120: NEG
25121: PUSH
25122: EMPTY
25123: LIST
25124: LIST
25125: PUSH
25126: LD_INT 3
25128: NEG
25129: PUSH
25130: LD_INT 3
25132: NEG
25133: PUSH
25134: EMPTY
25135: LIST
25136: LIST
25137: PUSH
25138: LD_INT 4
25140: NEG
25141: PUSH
25142: LD_INT 3
25144: NEG
25145: PUSH
25146: EMPTY
25147: LIST
25148: LIST
25149: PUSH
25150: LD_INT 5
25152: NEG
25153: PUSH
25154: LD_INT 4
25156: NEG
25157: PUSH
25158: EMPTY
25159: LIST
25160: LIST
25161: PUSH
25162: LD_INT 5
25164: NEG
25165: PUSH
25166: LD_INT 5
25168: NEG
25169: PUSH
25170: EMPTY
25171: LIST
25172: LIST
25173: PUSH
25174: LD_INT 3
25176: NEG
25177: PUSH
25178: LD_INT 5
25180: NEG
25181: PUSH
25182: EMPTY
25183: LIST
25184: LIST
25185: PUSH
25186: LD_INT 5
25188: NEG
25189: PUSH
25190: LD_INT 3
25192: NEG
25193: PUSH
25194: EMPTY
25195: LIST
25196: LIST
25197: PUSH
25198: LD_INT 0
25200: PUSH
25201: LD_INT 3
25203: NEG
25204: PUSH
25205: EMPTY
25206: LIST
25207: LIST
25208: PUSH
25209: LD_INT 0
25211: PUSH
25212: LD_INT 4
25214: NEG
25215: PUSH
25216: EMPTY
25217: LIST
25218: LIST
25219: PUSH
25220: LD_INT 1
25222: PUSH
25223: LD_INT 3
25225: NEG
25226: PUSH
25227: EMPTY
25228: LIST
25229: LIST
25230: PUSH
25231: LD_INT 1
25233: PUSH
25234: LD_INT 2
25236: NEG
25237: PUSH
25238: EMPTY
25239: LIST
25240: LIST
25241: PUSH
25242: LD_INT 0
25244: PUSH
25245: LD_INT 2
25247: NEG
25248: PUSH
25249: EMPTY
25250: LIST
25251: LIST
25252: PUSH
25253: LD_INT 1
25255: NEG
25256: PUSH
25257: LD_INT 3
25259: NEG
25260: PUSH
25261: EMPTY
25262: LIST
25263: LIST
25264: PUSH
25265: LD_INT 1
25267: NEG
25268: PUSH
25269: LD_INT 4
25271: NEG
25272: PUSH
25273: EMPTY
25274: LIST
25275: LIST
25276: PUSH
25277: LD_INT 2
25279: PUSH
25280: LD_INT 2
25282: NEG
25283: PUSH
25284: EMPTY
25285: LIST
25286: LIST
25287: PUSH
25288: LD_INT 2
25290: NEG
25291: PUSH
25292: LD_INT 4
25294: NEG
25295: PUSH
25296: EMPTY
25297: LIST
25298: LIST
25299: PUSH
25300: LD_INT 4
25302: PUSH
25303: LD_INT 0
25305: PUSH
25306: EMPTY
25307: LIST
25308: LIST
25309: PUSH
25310: LD_INT 4
25312: PUSH
25313: LD_INT 1
25315: NEG
25316: PUSH
25317: EMPTY
25318: LIST
25319: LIST
25320: PUSH
25321: LD_INT 5
25323: PUSH
25324: LD_INT 0
25326: PUSH
25327: EMPTY
25328: LIST
25329: LIST
25330: PUSH
25331: LD_INT 5
25333: PUSH
25334: LD_INT 1
25336: PUSH
25337: EMPTY
25338: LIST
25339: LIST
25340: PUSH
25341: LD_INT 4
25343: PUSH
25344: LD_INT 1
25346: PUSH
25347: EMPTY
25348: LIST
25349: LIST
25350: PUSH
25351: LD_INT 3
25353: PUSH
25354: LD_INT 0
25356: PUSH
25357: EMPTY
25358: LIST
25359: LIST
25360: PUSH
25361: LD_INT 3
25363: PUSH
25364: LD_INT 1
25366: NEG
25367: PUSH
25368: EMPTY
25369: LIST
25370: LIST
25371: PUSH
25372: LD_INT 3
25374: PUSH
25375: LD_INT 2
25377: NEG
25378: PUSH
25379: EMPTY
25380: LIST
25381: LIST
25382: PUSH
25383: LD_INT 5
25385: PUSH
25386: LD_INT 2
25388: PUSH
25389: EMPTY
25390: LIST
25391: LIST
25392: PUSH
25393: EMPTY
25394: LIST
25395: LIST
25396: LIST
25397: LIST
25398: LIST
25399: LIST
25400: LIST
25401: LIST
25402: LIST
25403: LIST
25404: LIST
25405: LIST
25406: LIST
25407: LIST
25408: LIST
25409: LIST
25410: LIST
25411: LIST
25412: LIST
25413: LIST
25414: LIST
25415: LIST
25416: LIST
25417: LIST
25418: LIST
25419: LIST
25420: LIST
25421: LIST
25422: LIST
25423: LIST
25424: LIST
25425: LIST
25426: LIST
25427: LIST
25428: LIST
25429: LIST
25430: LIST
25431: LIST
25432: LIST
25433: LIST
25434: LIST
25435: LIST
25436: LIST
25437: LIST
25438: LIST
25439: ST_TO_ADDR
// Factory3 = [ [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , - 2 ] , [ - 3 , 2 ] , [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 2 , - 3 ] , [ - 2 , - 2 ] , [ - 3 , - 2 ] , [ - 4 , - 3 ] , [ - 4 , - 4 ] , [ - 2 , - 4 ] , [ - 4 , - 2 ] , [ 0 , - 4 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ 1 , - 3 ] , [ 0 , - 3 ] , [ - 1 , - 4 ] , [ - 1 , - 5 ] , [ 2 , - 3 ] , [ - 2 , - 5 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 4 , 0 ] , [ 4 , 1 ] , [ 3 , 1 ] , [ 2 , 0 ] , [ 2 , - 1 ] , [ 2 , - 2 ] , [ 4 , 2 ] , [ 4 , 4 ] , [ 4 , 3 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 3 , 4 ] , [ 3 , 3 ] , [ 5 , 3 ] , [ 3 , 5 ] ] ;
25440: LD_ADDR_VAR 0 32
25444: PUSH
25445: LD_INT 4
25447: NEG
25448: PUSH
25449: LD_INT 0
25451: PUSH
25452: EMPTY
25453: LIST
25454: LIST
25455: PUSH
25456: LD_INT 4
25458: NEG
25459: PUSH
25460: LD_INT 1
25462: NEG
25463: PUSH
25464: EMPTY
25465: LIST
25466: LIST
25467: PUSH
25468: LD_INT 3
25470: NEG
25471: PUSH
25472: LD_INT 0
25474: PUSH
25475: EMPTY
25476: LIST
25477: LIST
25478: PUSH
25479: LD_INT 3
25481: NEG
25482: PUSH
25483: LD_INT 1
25485: PUSH
25486: EMPTY
25487: LIST
25488: LIST
25489: PUSH
25490: LD_INT 4
25492: NEG
25493: PUSH
25494: LD_INT 1
25496: PUSH
25497: EMPTY
25498: LIST
25499: LIST
25500: PUSH
25501: LD_INT 5
25503: NEG
25504: PUSH
25505: LD_INT 0
25507: PUSH
25508: EMPTY
25509: LIST
25510: LIST
25511: PUSH
25512: LD_INT 5
25514: NEG
25515: PUSH
25516: LD_INT 1
25518: NEG
25519: PUSH
25520: EMPTY
25521: LIST
25522: LIST
25523: PUSH
25524: LD_INT 5
25526: NEG
25527: PUSH
25528: LD_INT 2
25530: NEG
25531: PUSH
25532: EMPTY
25533: LIST
25534: LIST
25535: PUSH
25536: LD_INT 3
25538: NEG
25539: PUSH
25540: LD_INT 2
25542: PUSH
25543: EMPTY
25544: LIST
25545: LIST
25546: PUSH
25547: LD_INT 3
25549: NEG
25550: PUSH
25551: LD_INT 3
25553: NEG
25554: PUSH
25555: EMPTY
25556: LIST
25557: LIST
25558: PUSH
25559: LD_INT 3
25561: NEG
25562: PUSH
25563: LD_INT 4
25565: NEG
25566: PUSH
25567: EMPTY
25568: LIST
25569: LIST
25570: PUSH
25571: LD_INT 2
25573: NEG
25574: PUSH
25575: LD_INT 3
25577: NEG
25578: PUSH
25579: EMPTY
25580: LIST
25581: LIST
25582: PUSH
25583: LD_INT 2
25585: NEG
25586: PUSH
25587: LD_INT 2
25589: NEG
25590: PUSH
25591: EMPTY
25592: LIST
25593: LIST
25594: PUSH
25595: LD_INT 3
25597: NEG
25598: PUSH
25599: LD_INT 2
25601: NEG
25602: PUSH
25603: EMPTY
25604: LIST
25605: LIST
25606: PUSH
25607: LD_INT 4
25609: NEG
25610: PUSH
25611: LD_INT 3
25613: NEG
25614: PUSH
25615: EMPTY
25616: LIST
25617: LIST
25618: PUSH
25619: LD_INT 4
25621: NEG
25622: PUSH
25623: LD_INT 4
25625: NEG
25626: PUSH
25627: EMPTY
25628: LIST
25629: LIST
25630: PUSH
25631: LD_INT 2
25633: NEG
25634: PUSH
25635: LD_INT 4
25637: NEG
25638: PUSH
25639: EMPTY
25640: LIST
25641: LIST
25642: PUSH
25643: LD_INT 4
25645: NEG
25646: PUSH
25647: LD_INT 2
25649: NEG
25650: PUSH
25651: EMPTY
25652: LIST
25653: LIST
25654: PUSH
25655: LD_INT 0
25657: PUSH
25658: LD_INT 4
25660: NEG
25661: PUSH
25662: EMPTY
25663: LIST
25664: LIST
25665: PUSH
25666: LD_INT 0
25668: PUSH
25669: LD_INT 5
25671: NEG
25672: PUSH
25673: EMPTY
25674: LIST
25675: LIST
25676: PUSH
25677: LD_INT 1
25679: PUSH
25680: LD_INT 4
25682: NEG
25683: PUSH
25684: EMPTY
25685: LIST
25686: LIST
25687: PUSH
25688: LD_INT 1
25690: PUSH
25691: LD_INT 3
25693: NEG
25694: PUSH
25695: EMPTY
25696: LIST
25697: LIST
25698: PUSH
25699: LD_INT 0
25701: PUSH
25702: LD_INT 3
25704: NEG
25705: PUSH
25706: EMPTY
25707: LIST
25708: LIST
25709: PUSH
25710: LD_INT 1
25712: NEG
25713: PUSH
25714: LD_INT 4
25716: NEG
25717: PUSH
25718: EMPTY
25719: LIST
25720: LIST
25721: PUSH
25722: LD_INT 1
25724: NEG
25725: PUSH
25726: LD_INT 5
25728: NEG
25729: PUSH
25730: EMPTY
25731: LIST
25732: LIST
25733: PUSH
25734: LD_INT 2
25736: PUSH
25737: LD_INT 3
25739: NEG
25740: PUSH
25741: EMPTY
25742: LIST
25743: LIST
25744: PUSH
25745: LD_INT 2
25747: NEG
25748: PUSH
25749: LD_INT 5
25751: NEG
25752: PUSH
25753: EMPTY
25754: LIST
25755: LIST
25756: PUSH
25757: LD_INT 3
25759: PUSH
25760: LD_INT 0
25762: PUSH
25763: EMPTY
25764: LIST
25765: LIST
25766: PUSH
25767: LD_INT 3
25769: PUSH
25770: LD_INT 1
25772: NEG
25773: PUSH
25774: EMPTY
25775: LIST
25776: LIST
25777: PUSH
25778: LD_INT 4
25780: PUSH
25781: LD_INT 0
25783: PUSH
25784: EMPTY
25785: LIST
25786: LIST
25787: PUSH
25788: LD_INT 4
25790: PUSH
25791: LD_INT 1
25793: PUSH
25794: EMPTY
25795: LIST
25796: LIST
25797: PUSH
25798: LD_INT 3
25800: PUSH
25801: LD_INT 1
25803: PUSH
25804: EMPTY
25805: LIST
25806: LIST
25807: PUSH
25808: LD_INT 2
25810: PUSH
25811: LD_INT 0
25813: PUSH
25814: EMPTY
25815: LIST
25816: LIST
25817: PUSH
25818: LD_INT 2
25820: PUSH
25821: LD_INT 1
25823: NEG
25824: PUSH
25825: EMPTY
25826: LIST
25827: LIST
25828: PUSH
25829: LD_INT 2
25831: PUSH
25832: LD_INT 2
25834: NEG
25835: PUSH
25836: EMPTY
25837: LIST
25838: LIST
25839: PUSH
25840: LD_INT 4
25842: PUSH
25843: LD_INT 2
25845: PUSH
25846: EMPTY
25847: LIST
25848: LIST
25849: PUSH
25850: LD_INT 4
25852: PUSH
25853: LD_INT 4
25855: PUSH
25856: EMPTY
25857: LIST
25858: LIST
25859: PUSH
25860: LD_INT 4
25862: PUSH
25863: LD_INT 3
25865: PUSH
25866: EMPTY
25867: LIST
25868: LIST
25869: PUSH
25870: LD_INT 5
25872: PUSH
25873: LD_INT 4
25875: PUSH
25876: EMPTY
25877: LIST
25878: LIST
25879: PUSH
25880: LD_INT 5
25882: PUSH
25883: LD_INT 5
25885: PUSH
25886: EMPTY
25887: LIST
25888: LIST
25889: PUSH
25890: LD_INT 4
25892: PUSH
25893: LD_INT 5
25895: PUSH
25896: EMPTY
25897: LIST
25898: LIST
25899: PUSH
25900: LD_INT 3
25902: PUSH
25903: LD_INT 4
25905: PUSH
25906: EMPTY
25907: LIST
25908: LIST
25909: PUSH
25910: LD_INT 3
25912: PUSH
25913: LD_INT 3
25915: PUSH
25916: EMPTY
25917: LIST
25918: LIST
25919: PUSH
25920: LD_INT 5
25922: PUSH
25923: LD_INT 3
25925: PUSH
25926: EMPTY
25927: LIST
25928: LIST
25929: PUSH
25930: LD_INT 3
25932: PUSH
25933: LD_INT 5
25935: PUSH
25936: EMPTY
25937: LIST
25938: LIST
25939: PUSH
25940: EMPTY
25941: LIST
25942: LIST
25943: LIST
25944: LIST
25945: LIST
25946: LIST
25947: LIST
25948: LIST
25949: LIST
25950: LIST
25951: LIST
25952: LIST
25953: LIST
25954: LIST
25955: LIST
25956: LIST
25957: LIST
25958: LIST
25959: LIST
25960: LIST
25961: LIST
25962: LIST
25963: LIST
25964: LIST
25965: LIST
25966: LIST
25967: LIST
25968: LIST
25969: LIST
25970: LIST
25971: LIST
25972: LIST
25973: LIST
25974: LIST
25975: LIST
25976: LIST
25977: LIST
25978: LIST
25979: LIST
25980: LIST
25981: LIST
25982: LIST
25983: LIST
25984: LIST
25985: LIST
25986: ST_TO_ADDR
// Factory4 = [ [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 3 , - 4 ] , [ - 3 , - 3 ] , [ - 4 , - 3 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 3 , - 5 ] , [ - 5 , - 3 ] , [ 0 , - 3 ] , [ 0 , - 4 ] , [ 1 , - 3 ] , [ 1 , - 2 ] , [ 0 , - 2 ] , [ - 1 , - 3 ] , [ - 1 , - 4 ] , [ 2 , - 2 ] , [ - 2 , - 4 ] , [ 4 , 0 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 4 , 1 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 3 , - 2 ] , [ 5 , 2 ] , [ 3 , 3 ] , [ 3 , 2 ] , [ 4 , 3 ] , [ 4 , 4 ] , [ 3 , 4 ] , [ 2 , 3 ] , [ 2 , 2 ] , [ 4 , 2 ] , [ 2 , 4 ] , [ 0 , 4 ] , [ 0 , 3 ] , [ 1 , 4 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ - 1 , 3 ] , [ 2 , 5 ] , [ - 2 , 3 ] ] ;
25987: LD_ADDR_VAR 0 33
25991: PUSH
25992: LD_INT 4
25994: NEG
25995: PUSH
25996: LD_INT 4
25998: NEG
25999: PUSH
26000: EMPTY
26001: LIST
26002: LIST
26003: PUSH
26004: LD_INT 4
26006: NEG
26007: PUSH
26008: LD_INT 5
26010: NEG
26011: PUSH
26012: EMPTY
26013: LIST
26014: LIST
26015: PUSH
26016: LD_INT 3
26018: NEG
26019: PUSH
26020: LD_INT 4
26022: NEG
26023: PUSH
26024: EMPTY
26025: LIST
26026: LIST
26027: PUSH
26028: LD_INT 3
26030: NEG
26031: PUSH
26032: LD_INT 3
26034: NEG
26035: PUSH
26036: EMPTY
26037: LIST
26038: LIST
26039: PUSH
26040: LD_INT 4
26042: NEG
26043: PUSH
26044: LD_INT 3
26046: NEG
26047: PUSH
26048: EMPTY
26049: LIST
26050: LIST
26051: PUSH
26052: LD_INT 5
26054: NEG
26055: PUSH
26056: LD_INT 4
26058: NEG
26059: PUSH
26060: EMPTY
26061: LIST
26062: LIST
26063: PUSH
26064: LD_INT 5
26066: NEG
26067: PUSH
26068: LD_INT 5
26070: NEG
26071: PUSH
26072: EMPTY
26073: LIST
26074: LIST
26075: PUSH
26076: LD_INT 3
26078: NEG
26079: PUSH
26080: LD_INT 5
26082: NEG
26083: PUSH
26084: EMPTY
26085: LIST
26086: LIST
26087: PUSH
26088: LD_INT 5
26090: NEG
26091: PUSH
26092: LD_INT 3
26094: NEG
26095: PUSH
26096: EMPTY
26097: LIST
26098: LIST
26099: PUSH
26100: LD_INT 0
26102: PUSH
26103: LD_INT 3
26105: NEG
26106: PUSH
26107: EMPTY
26108: LIST
26109: LIST
26110: PUSH
26111: LD_INT 0
26113: PUSH
26114: LD_INT 4
26116: NEG
26117: PUSH
26118: EMPTY
26119: LIST
26120: LIST
26121: PUSH
26122: LD_INT 1
26124: PUSH
26125: LD_INT 3
26127: NEG
26128: PUSH
26129: EMPTY
26130: LIST
26131: LIST
26132: PUSH
26133: LD_INT 1
26135: PUSH
26136: LD_INT 2
26138: NEG
26139: PUSH
26140: EMPTY
26141: LIST
26142: LIST
26143: PUSH
26144: LD_INT 0
26146: PUSH
26147: LD_INT 2
26149: NEG
26150: PUSH
26151: EMPTY
26152: LIST
26153: LIST
26154: PUSH
26155: LD_INT 1
26157: NEG
26158: PUSH
26159: LD_INT 3
26161: NEG
26162: PUSH
26163: EMPTY
26164: LIST
26165: LIST
26166: PUSH
26167: LD_INT 1
26169: NEG
26170: PUSH
26171: LD_INT 4
26173: NEG
26174: PUSH
26175: EMPTY
26176: LIST
26177: LIST
26178: PUSH
26179: LD_INT 2
26181: PUSH
26182: LD_INT 2
26184: NEG
26185: PUSH
26186: EMPTY
26187: LIST
26188: LIST
26189: PUSH
26190: LD_INT 2
26192: NEG
26193: PUSH
26194: LD_INT 4
26196: NEG
26197: PUSH
26198: EMPTY
26199: LIST
26200: LIST
26201: PUSH
26202: LD_INT 4
26204: PUSH
26205: LD_INT 0
26207: PUSH
26208: EMPTY
26209: LIST
26210: LIST
26211: PUSH
26212: LD_INT 4
26214: PUSH
26215: LD_INT 1
26217: NEG
26218: PUSH
26219: EMPTY
26220: LIST
26221: LIST
26222: PUSH
26223: LD_INT 5
26225: PUSH
26226: LD_INT 0
26228: PUSH
26229: EMPTY
26230: LIST
26231: LIST
26232: PUSH
26233: LD_INT 5
26235: PUSH
26236: LD_INT 1
26238: PUSH
26239: EMPTY
26240: LIST
26241: LIST
26242: PUSH
26243: LD_INT 4
26245: PUSH
26246: LD_INT 1
26248: PUSH
26249: EMPTY
26250: LIST
26251: LIST
26252: PUSH
26253: LD_INT 3
26255: PUSH
26256: LD_INT 0
26258: PUSH
26259: EMPTY
26260: LIST
26261: LIST
26262: PUSH
26263: LD_INT 3
26265: PUSH
26266: LD_INT 1
26268: NEG
26269: PUSH
26270: EMPTY
26271: LIST
26272: LIST
26273: PUSH
26274: LD_INT 3
26276: PUSH
26277: LD_INT 2
26279: NEG
26280: PUSH
26281: EMPTY
26282: LIST
26283: LIST
26284: PUSH
26285: LD_INT 5
26287: PUSH
26288: LD_INT 2
26290: PUSH
26291: EMPTY
26292: LIST
26293: LIST
26294: PUSH
26295: LD_INT 3
26297: PUSH
26298: LD_INT 3
26300: PUSH
26301: EMPTY
26302: LIST
26303: LIST
26304: PUSH
26305: LD_INT 3
26307: PUSH
26308: LD_INT 2
26310: PUSH
26311: EMPTY
26312: LIST
26313: LIST
26314: PUSH
26315: LD_INT 4
26317: PUSH
26318: LD_INT 3
26320: PUSH
26321: EMPTY
26322: LIST
26323: LIST
26324: PUSH
26325: LD_INT 4
26327: PUSH
26328: LD_INT 4
26330: PUSH
26331: EMPTY
26332: LIST
26333: LIST
26334: PUSH
26335: LD_INT 3
26337: PUSH
26338: LD_INT 4
26340: PUSH
26341: EMPTY
26342: LIST
26343: LIST
26344: PUSH
26345: LD_INT 2
26347: PUSH
26348: LD_INT 3
26350: PUSH
26351: EMPTY
26352: LIST
26353: LIST
26354: PUSH
26355: LD_INT 2
26357: PUSH
26358: LD_INT 2
26360: PUSH
26361: EMPTY
26362: LIST
26363: LIST
26364: PUSH
26365: LD_INT 4
26367: PUSH
26368: LD_INT 2
26370: PUSH
26371: EMPTY
26372: LIST
26373: LIST
26374: PUSH
26375: LD_INT 2
26377: PUSH
26378: LD_INT 4
26380: PUSH
26381: EMPTY
26382: LIST
26383: LIST
26384: PUSH
26385: LD_INT 0
26387: PUSH
26388: LD_INT 4
26390: PUSH
26391: EMPTY
26392: LIST
26393: LIST
26394: PUSH
26395: LD_INT 0
26397: PUSH
26398: LD_INT 3
26400: PUSH
26401: EMPTY
26402: LIST
26403: LIST
26404: PUSH
26405: LD_INT 1
26407: PUSH
26408: LD_INT 4
26410: PUSH
26411: EMPTY
26412: LIST
26413: LIST
26414: PUSH
26415: LD_INT 1
26417: PUSH
26418: LD_INT 5
26420: PUSH
26421: EMPTY
26422: LIST
26423: LIST
26424: PUSH
26425: LD_INT 0
26427: PUSH
26428: LD_INT 5
26430: PUSH
26431: EMPTY
26432: LIST
26433: LIST
26434: PUSH
26435: LD_INT 1
26437: NEG
26438: PUSH
26439: LD_INT 4
26441: PUSH
26442: EMPTY
26443: LIST
26444: LIST
26445: PUSH
26446: LD_INT 1
26448: NEG
26449: PUSH
26450: LD_INT 3
26452: PUSH
26453: EMPTY
26454: LIST
26455: LIST
26456: PUSH
26457: LD_INT 2
26459: PUSH
26460: LD_INT 5
26462: PUSH
26463: EMPTY
26464: LIST
26465: LIST
26466: PUSH
26467: LD_INT 2
26469: NEG
26470: PUSH
26471: LD_INT 3
26473: PUSH
26474: EMPTY
26475: LIST
26476: LIST
26477: PUSH
26478: EMPTY
26479: LIST
26480: LIST
26481: LIST
26482: LIST
26483: LIST
26484: LIST
26485: LIST
26486: LIST
26487: LIST
26488: LIST
26489: LIST
26490: LIST
26491: LIST
26492: LIST
26493: LIST
26494: LIST
26495: LIST
26496: LIST
26497: LIST
26498: LIST
26499: LIST
26500: LIST
26501: LIST
26502: LIST
26503: LIST
26504: LIST
26505: LIST
26506: LIST
26507: LIST
26508: LIST
26509: LIST
26510: LIST
26511: LIST
26512: LIST
26513: LIST
26514: LIST
26515: LIST
26516: LIST
26517: LIST
26518: LIST
26519: LIST
26520: LIST
26521: LIST
26522: LIST
26523: LIST
26524: ST_TO_ADDR
// Factory5 = [ [ 0 , - 4 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ 1 , - 3 ] , [ 0 , - 3 ] , [ - 1 , - 4 ] , [ - 1 , - 5 ] , [ 2 , - 3 ] , [ - 2 , - 5 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 4 , 0 ] , [ 4 , 1 ] , [ 3 , 1 ] , [ 2 , 0 ] , [ 2 , - 1 ] , [ 2 , - 2 ] , [ 4 , 2 ] , [ 4 , 4 ] , [ 4 , 3 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 3 , 4 ] , [ 3 , 3 ] , [ 5 , 3 ] , [ 3 , 5 ] , [ 0 , 3 ] , [ 0 , 2 ] , [ 1 , 3 ] , [ 1 , 4 ] , [ 0 , 4 ] , [ - 1 , 3 ] , [ - 1 , 2 ] , [ 2 , 4 ] , [ - 2 , 2 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , - 2 ] , [ - 3 , 2 ] ] ;
26525: LD_ADDR_VAR 0 34
26529: PUSH
26530: LD_INT 0
26532: PUSH
26533: LD_INT 4
26535: NEG
26536: PUSH
26537: EMPTY
26538: LIST
26539: LIST
26540: PUSH
26541: LD_INT 0
26543: PUSH
26544: LD_INT 5
26546: NEG
26547: PUSH
26548: EMPTY
26549: LIST
26550: LIST
26551: PUSH
26552: LD_INT 1
26554: PUSH
26555: LD_INT 4
26557: NEG
26558: PUSH
26559: EMPTY
26560: LIST
26561: LIST
26562: PUSH
26563: LD_INT 1
26565: PUSH
26566: LD_INT 3
26568: NEG
26569: PUSH
26570: EMPTY
26571: LIST
26572: LIST
26573: PUSH
26574: LD_INT 0
26576: PUSH
26577: LD_INT 3
26579: NEG
26580: PUSH
26581: EMPTY
26582: LIST
26583: LIST
26584: PUSH
26585: LD_INT 1
26587: NEG
26588: PUSH
26589: LD_INT 4
26591: NEG
26592: PUSH
26593: EMPTY
26594: LIST
26595: LIST
26596: PUSH
26597: LD_INT 1
26599: NEG
26600: PUSH
26601: LD_INT 5
26603: NEG
26604: PUSH
26605: EMPTY
26606: LIST
26607: LIST
26608: PUSH
26609: LD_INT 2
26611: PUSH
26612: LD_INT 3
26614: NEG
26615: PUSH
26616: EMPTY
26617: LIST
26618: LIST
26619: PUSH
26620: LD_INT 2
26622: NEG
26623: PUSH
26624: LD_INT 5
26626: NEG
26627: PUSH
26628: EMPTY
26629: LIST
26630: LIST
26631: PUSH
26632: LD_INT 3
26634: PUSH
26635: LD_INT 0
26637: PUSH
26638: EMPTY
26639: LIST
26640: LIST
26641: PUSH
26642: LD_INT 3
26644: PUSH
26645: LD_INT 1
26647: NEG
26648: PUSH
26649: EMPTY
26650: LIST
26651: LIST
26652: PUSH
26653: LD_INT 4
26655: PUSH
26656: LD_INT 0
26658: PUSH
26659: EMPTY
26660: LIST
26661: LIST
26662: PUSH
26663: LD_INT 4
26665: PUSH
26666: LD_INT 1
26668: PUSH
26669: EMPTY
26670: LIST
26671: LIST
26672: PUSH
26673: LD_INT 3
26675: PUSH
26676: LD_INT 1
26678: PUSH
26679: EMPTY
26680: LIST
26681: LIST
26682: PUSH
26683: LD_INT 2
26685: PUSH
26686: LD_INT 0
26688: PUSH
26689: EMPTY
26690: LIST
26691: LIST
26692: PUSH
26693: LD_INT 2
26695: PUSH
26696: LD_INT 1
26698: NEG
26699: PUSH
26700: EMPTY
26701: LIST
26702: LIST
26703: PUSH
26704: LD_INT 2
26706: PUSH
26707: LD_INT 2
26709: NEG
26710: PUSH
26711: EMPTY
26712: LIST
26713: LIST
26714: PUSH
26715: LD_INT 4
26717: PUSH
26718: LD_INT 2
26720: PUSH
26721: EMPTY
26722: LIST
26723: LIST
26724: PUSH
26725: LD_INT 4
26727: PUSH
26728: LD_INT 4
26730: PUSH
26731: EMPTY
26732: LIST
26733: LIST
26734: PUSH
26735: LD_INT 4
26737: PUSH
26738: LD_INT 3
26740: PUSH
26741: EMPTY
26742: LIST
26743: LIST
26744: PUSH
26745: LD_INT 5
26747: PUSH
26748: LD_INT 4
26750: PUSH
26751: EMPTY
26752: LIST
26753: LIST
26754: PUSH
26755: LD_INT 5
26757: PUSH
26758: LD_INT 5
26760: PUSH
26761: EMPTY
26762: LIST
26763: LIST
26764: PUSH
26765: LD_INT 4
26767: PUSH
26768: LD_INT 5
26770: PUSH
26771: EMPTY
26772: LIST
26773: LIST
26774: PUSH
26775: LD_INT 3
26777: PUSH
26778: LD_INT 4
26780: PUSH
26781: EMPTY
26782: LIST
26783: LIST
26784: PUSH
26785: LD_INT 3
26787: PUSH
26788: LD_INT 3
26790: PUSH
26791: EMPTY
26792: LIST
26793: LIST
26794: PUSH
26795: LD_INT 5
26797: PUSH
26798: LD_INT 3
26800: PUSH
26801: EMPTY
26802: LIST
26803: LIST
26804: PUSH
26805: LD_INT 3
26807: PUSH
26808: LD_INT 5
26810: PUSH
26811: EMPTY
26812: LIST
26813: LIST
26814: PUSH
26815: LD_INT 0
26817: PUSH
26818: LD_INT 3
26820: PUSH
26821: EMPTY
26822: LIST
26823: LIST
26824: PUSH
26825: LD_INT 0
26827: PUSH
26828: LD_INT 2
26830: PUSH
26831: EMPTY
26832: LIST
26833: LIST
26834: PUSH
26835: LD_INT 1
26837: PUSH
26838: LD_INT 3
26840: PUSH
26841: EMPTY
26842: LIST
26843: LIST
26844: PUSH
26845: LD_INT 1
26847: PUSH
26848: LD_INT 4
26850: PUSH
26851: EMPTY
26852: LIST
26853: LIST
26854: PUSH
26855: LD_INT 0
26857: PUSH
26858: LD_INT 4
26860: PUSH
26861: EMPTY
26862: LIST
26863: LIST
26864: PUSH
26865: LD_INT 1
26867: NEG
26868: PUSH
26869: LD_INT 3
26871: PUSH
26872: EMPTY
26873: LIST
26874: LIST
26875: PUSH
26876: LD_INT 1
26878: NEG
26879: PUSH
26880: LD_INT 2
26882: PUSH
26883: EMPTY
26884: LIST
26885: LIST
26886: PUSH
26887: LD_INT 2
26889: PUSH
26890: LD_INT 4
26892: PUSH
26893: EMPTY
26894: LIST
26895: LIST
26896: PUSH
26897: LD_INT 2
26899: NEG
26900: PUSH
26901: LD_INT 2
26903: PUSH
26904: EMPTY
26905: LIST
26906: LIST
26907: PUSH
26908: LD_INT 4
26910: NEG
26911: PUSH
26912: LD_INT 0
26914: PUSH
26915: EMPTY
26916: LIST
26917: LIST
26918: PUSH
26919: LD_INT 4
26921: NEG
26922: PUSH
26923: LD_INT 1
26925: NEG
26926: PUSH
26927: EMPTY
26928: LIST
26929: LIST
26930: PUSH
26931: LD_INT 3
26933: NEG
26934: PUSH
26935: LD_INT 0
26937: PUSH
26938: EMPTY
26939: LIST
26940: LIST
26941: PUSH
26942: LD_INT 3
26944: NEG
26945: PUSH
26946: LD_INT 1
26948: PUSH
26949: EMPTY
26950: LIST
26951: LIST
26952: PUSH
26953: LD_INT 4
26955: NEG
26956: PUSH
26957: LD_INT 1
26959: PUSH
26960: EMPTY
26961: LIST
26962: LIST
26963: PUSH
26964: LD_INT 5
26966: NEG
26967: PUSH
26968: LD_INT 0
26970: PUSH
26971: EMPTY
26972: LIST
26973: LIST
26974: PUSH
26975: LD_INT 5
26977: NEG
26978: PUSH
26979: LD_INT 1
26981: NEG
26982: PUSH
26983: EMPTY
26984: LIST
26985: LIST
26986: PUSH
26987: LD_INT 5
26989: NEG
26990: PUSH
26991: LD_INT 2
26993: NEG
26994: PUSH
26995: EMPTY
26996: LIST
26997: LIST
26998: PUSH
26999: LD_INT 3
27001: NEG
27002: PUSH
27003: LD_INT 2
27005: PUSH
27006: EMPTY
27007: LIST
27008: LIST
27009: PUSH
27010: EMPTY
27011: LIST
27012: LIST
27013: LIST
27014: LIST
27015: LIST
27016: LIST
27017: LIST
27018: LIST
27019: LIST
27020: LIST
27021: LIST
27022: LIST
27023: LIST
27024: LIST
27025: LIST
27026: LIST
27027: LIST
27028: LIST
27029: LIST
27030: LIST
27031: LIST
27032: LIST
27033: LIST
27034: LIST
27035: LIST
27036: LIST
27037: LIST
27038: LIST
27039: LIST
27040: LIST
27041: LIST
27042: LIST
27043: LIST
27044: LIST
27045: LIST
27046: LIST
27047: LIST
27048: LIST
27049: LIST
27050: LIST
27051: LIST
27052: LIST
27053: LIST
27054: LIST
27055: LIST
27056: ST_TO_ADDR
// end ; end ;
27057: GO 27060
27059: POP
// case btype of b_depot , b_warehouse :
27060: LD_VAR 0 1
27064: PUSH
27065: LD_INT 0
27067: DOUBLE
27068: EQUAL
27069: IFTRUE 27079
27071: LD_INT 1
27073: DOUBLE
27074: EQUAL
27075: IFTRUE 27079
27077: GO 27280
27079: POP
// case nation of nation_american :
27080: LD_VAR 0 5
27084: PUSH
27085: LD_INT 1
27087: DOUBLE
27088: EQUAL
27089: IFTRUE 27093
27091: GO 27149
27093: POP
// temp_list = [ DepotAm0 , DepotAm1 , DepotAm2 , DepotAm3 , DepotAm4 , DepotAm5 ] [ dir + 1 ] ; nation_arabian :
27094: LD_ADDR_VAR 0 9
27098: PUSH
27099: LD_VAR 0 11
27103: PUSH
27104: LD_VAR 0 12
27108: PUSH
27109: LD_VAR 0 13
27113: PUSH
27114: LD_VAR 0 14
27118: PUSH
27119: LD_VAR 0 15
27123: PUSH
27124: LD_VAR 0 16
27128: PUSH
27129: EMPTY
27130: LIST
27131: LIST
27132: LIST
27133: LIST
27134: LIST
27135: LIST
27136: PUSH
27137: LD_VAR 0 4
27141: PUSH
27142: LD_INT 1
27144: PLUS
27145: ARRAY
27146: ST_TO_ADDR
27147: GO 27278
27149: LD_INT 2
27151: DOUBLE
27152: EQUAL
27153: IFTRUE 27157
27155: GO 27213
27157: POP
// temp_list = [ DepotAr0 , DepotAr1 , DepotAr2 , DepotAr3 , DepotAr4 , DepotAr5 ] [ dir + 1 ] ; nation_russian :
27158: LD_ADDR_VAR 0 9
27162: PUSH
27163: LD_VAR 0 17
27167: PUSH
27168: LD_VAR 0 18
27172: PUSH
27173: LD_VAR 0 19
27177: PUSH
27178: LD_VAR 0 20
27182: PUSH
27183: LD_VAR 0 21
27187: PUSH
27188: LD_VAR 0 22
27192: PUSH
27193: EMPTY
27194: LIST
27195: LIST
27196: LIST
27197: LIST
27198: LIST
27199: LIST
27200: PUSH
27201: LD_VAR 0 4
27205: PUSH
27206: LD_INT 1
27208: PLUS
27209: ARRAY
27210: ST_TO_ADDR
27211: GO 27278
27213: LD_INT 3
27215: DOUBLE
27216: EQUAL
27217: IFTRUE 27221
27219: GO 27277
27221: POP
// temp_list = [ DepotRu0 , DepotRu1 , DepotRu2 , DepotRu3 , DepotRu4 , DepotRu5 ] [ dir + 1 ] ; end ; b_workshop , b_factory :
27222: LD_ADDR_VAR 0 9
27226: PUSH
27227: LD_VAR 0 23
27231: PUSH
27232: LD_VAR 0 24
27236: PUSH
27237: LD_VAR 0 25
27241: PUSH
27242: LD_VAR 0 26
27246: PUSH
27247: LD_VAR 0 27
27251: PUSH
27252: LD_VAR 0 28
27256: PUSH
27257: EMPTY
27258: LIST
27259: LIST
27260: LIST
27261: LIST
27262: LIST
27263: LIST
27264: PUSH
27265: LD_VAR 0 4
27269: PUSH
27270: LD_INT 1
27272: PLUS
27273: ARRAY
27274: ST_TO_ADDR
27275: GO 27278
27277: POP
27278: GO 27827
27280: LD_INT 2
27282: DOUBLE
27283: EQUAL
27284: IFTRUE 27294
27286: LD_INT 3
27288: DOUBLE
27289: EQUAL
27290: IFTRUE 27294
27292: GO 27350
27294: POP
// temp_list = [ Factory0 , Factory1 , Factory2 , Factory3 , Factory4 , Factory5 ] [ dir + 1 ] ; b_ext_track , b_ext_gun , b_ext_rocket , b_ext_noncombat , b_ext_radar , b_ext_siberium , b_ext_stitch , b_ext_computer , b_ext_laser :
27295: LD_ADDR_VAR 0 9
27299: PUSH
27300: LD_VAR 0 29
27304: PUSH
27305: LD_VAR 0 30
27309: PUSH
27310: LD_VAR 0 31
27314: PUSH
27315: LD_VAR 0 32
27319: PUSH
27320: LD_VAR 0 33
27324: PUSH
27325: LD_VAR 0 34
27329: PUSH
27330: EMPTY
27331: LIST
27332: LIST
27333: LIST
27334: LIST
27335: LIST
27336: LIST
27337: PUSH
27338: LD_VAR 0 4
27342: PUSH
27343: LD_INT 1
27345: PLUS
27346: ARRAY
27347: ST_TO_ADDR
27348: GO 27827
27350: LD_INT 16
27352: DOUBLE
27353: EQUAL
27354: IFTRUE 27406
27356: LD_INT 17
27358: DOUBLE
27359: EQUAL
27360: IFTRUE 27406
27362: LD_INT 18
27364: DOUBLE
27365: EQUAL
27366: IFTRUE 27406
27368: LD_INT 19
27370: DOUBLE
27371: EQUAL
27372: IFTRUE 27406
27374: LD_INT 20
27376: DOUBLE
27377: EQUAL
27378: IFTRUE 27406
27380: LD_INT 21
27382: DOUBLE
27383: EQUAL
27384: IFTRUE 27406
27386: LD_INT 23
27388: DOUBLE
27389: EQUAL
27390: IFTRUE 27406
27392: LD_INT 24
27394: DOUBLE
27395: EQUAL
27396: IFTRUE 27406
27398: LD_INT 25
27400: DOUBLE
27401: EQUAL
27402: IFTRUE 27406
27404: GO 27462
27406: POP
// temp_list = [ Ext0 , Ext1 , Ext2 , Ext3 , Ext4 , Ext5 ] [ dir + 1 ] ; b_lab , b_lab_half , b_lab_full , b_lab_biological , b_lab_computer , b_lab_opto , b_lab_siberium , b_lab_spacetime , b_lab_weapon :
27407: LD_ADDR_VAR 0 9
27411: PUSH
27412: LD_VAR 0 35
27416: PUSH
27417: LD_VAR 0 36
27421: PUSH
27422: LD_VAR 0 37
27426: PUSH
27427: LD_VAR 0 38
27431: PUSH
27432: LD_VAR 0 39
27436: PUSH
27437: LD_VAR 0 40
27441: PUSH
27442: EMPTY
27443: LIST
27444: LIST
27445: LIST
27446: LIST
27447: LIST
27448: LIST
27449: PUSH
27450: LD_VAR 0 4
27454: PUSH
27455: LD_INT 1
27457: PLUS
27458: ARRAY
27459: ST_TO_ADDR
27460: GO 27827
27462: LD_INT 6
27464: DOUBLE
27465: EQUAL
27466: IFTRUE 27518
27468: LD_INT 7
27470: DOUBLE
27471: EQUAL
27472: IFTRUE 27518
27474: LD_INT 8
27476: DOUBLE
27477: EQUAL
27478: IFTRUE 27518
27480: LD_INT 13
27482: DOUBLE
27483: EQUAL
27484: IFTRUE 27518
27486: LD_INT 12
27488: DOUBLE
27489: EQUAL
27490: IFTRUE 27518
27492: LD_INT 15
27494: DOUBLE
27495: EQUAL
27496: IFTRUE 27518
27498: LD_INT 11
27500: DOUBLE
27501: EQUAL
27502: IFTRUE 27518
27504: LD_INT 14
27506: DOUBLE
27507: EQUAL
27508: IFTRUE 27518
27510: LD_INT 10
27512: DOUBLE
27513: EQUAL
27514: IFTRUE 27518
27516: GO 27574
27518: POP
// temp_list = [ Lab0 , Lab1 , Lab2 , Lab3 , Lab4 , Lab5 ] [ dir + 1 ] ; b_control_tower :
27519: LD_ADDR_VAR 0 9
27523: PUSH
27524: LD_VAR 0 41
27528: PUSH
27529: LD_VAR 0 42
27533: PUSH
27534: LD_VAR 0 43
27538: PUSH
27539: LD_VAR 0 44
27543: PUSH
27544: LD_VAR 0 45
27548: PUSH
27549: LD_VAR 0 46
27553: PUSH
27554: EMPTY
27555: LIST
27556: LIST
27557: LIST
27558: LIST
27559: LIST
27560: LIST
27561: PUSH
27562: LD_VAR 0 4
27566: PUSH
27567: LD_INT 1
27569: PLUS
27570: ARRAY
27571: ST_TO_ADDR
27572: GO 27827
27574: LD_INT 36
27576: DOUBLE
27577: EQUAL
27578: IFTRUE 27582
27580: GO 27638
27582: POP
// temp_list = [ ControlTower0 , ControlTower1 , ControlTower2 , ControlTower3 , ControlTower4 , ControlTower5 ] [ dir + 1 ] ; b_armoury , b_barracks , b_teleport , b_behemoth :
27583: LD_ADDR_VAR 0 9
27587: PUSH
27588: LD_VAR 0 47
27592: PUSH
27593: LD_VAR 0 48
27597: PUSH
27598: LD_VAR 0 49
27602: PUSH
27603: LD_VAR 0 50
27607: PUSH
27608: LD_VAR 0 51
27612: PUSH
27613: LD_VAR 0 52
27617: PUSH
27618: EMPTY
27619: LIST
27620: LIST
27621: LIST
27622: LIST
27623: LIST
27624: LIST
27625: PUSH
27626: LD_VAR 0 4
27630: PUSH
27631: LD_INT 1
27633: PLUS
27634: ARRAY
27635: ST_TO_ADDR
27636: GO 27827
27638: LD_INT 4
27640: DOUBLE
27641: EQUAL
27642: IFTRUE 27664
27644: LD_INT 5
27646: DOUBLE
27647: EQUAL
27648: IFTRUE 27664
27650: LD_INT 34
27652: DOUBLE
27653: EQUAL
27654: IFTRUE 27664
27656: LD_INT 37
27658: DOUBLE
27659: EQUAL
27660: IFTRUE 27664
27662: GO 27720
27664: POP
// temp_list = [ Barracks0 , Barracks1 , Barracks2 , Barracks3 , Barracks4 , Barracks5 ] [ dir + 1 ] ; b_breastwork , b_bunker , b_turret , b_solar_power , b_oil_power , b_siberite_power , b_oil_mine , b_siberite_mine :
27665: LD_ADDR_VAR 0 9
27669: PUSH
27670: LD_VAR 0 53
27674: PUSH
27675: LD_VAR 0 54
27679: PUSH
27680: LD_VAR 0 55
27684: PUSH
27685: LD_VAR 0 56
27689: PUSH
27690: LD_VAR 0 57
27694: PUSH
27695: LD_VAR 0 58
27699: PUSH
27700: EMPTY
27701: LIST
27702: LIST
27703: LIST
27704: LIST
27705: LIST
27706: LIST
27707: PUSH
27708: LD_VAR 0 4
27712: PUSH
27713: LD_INT 1
27715: PLUS
27716: ARRAY
27717: ST_TO_ADDR
27718: GO 27827
27720: LD_INT 31
27722: DOUBLE
27723: EQUAL
27724: IFTRUE 27770
27726: LD_INT 32
27728: DOUBLE
27729: EQUAL
27730: IFTRUE 27770
27732: LD_INT 33
27734: DOUBLE
27735: EQUAL
27736: IFTRUE 27770
27738: LD_INT 27
27740: DOUBLE
27741: EQUAL
27742: IFTRUE 27770
27744: LD_INT 26
27746: DOUBLE
27747: EQUAL
27748: IFTRUE 27770
27750: LD_INT 28
27752: DOUBLE
27753: EQUAL
27754: IFTRUE 27770
27756: LD_INT 29
27758: DOUBLE
27759: EQUAL
27760: IFTRUE 27770
27762: LD_INT 30
27764: DOUBLE
27765: EQUAL
27766: IFTRUE 27770
27768: GO 27826
27770: POP
// temp_list = [ Bunker0 , Bunker1 , Bunker2 , Bunker3 , Bunker4 , Bunker5 ] [ dir + 1 ] ; end ;
27771: LD_ADDR_VAR 0 9
27775: PUSH
27776: LD_VAR 0 59
27780: PUSH
27781: LD_VAR 0 60
27785: PUSH
27786: LD_VAR 0 61
27790: PUSH
27791: LD_VAR 0 62
27795: PUSH
27796: LD_VAR 0 63
27800: PUSH
27801: LD_VAR 0 64
27805: PUSH
27806: EMPTY
27807: LIST
27808: LIST
27809: LIST
27810: LIST
27811: LIST
27812: LIST
27813: PUSH
27814: LD_VAR 0 4
27818: PUSH
27819: LD_INT 1
27821: PLUS
27822: ARRAY
27823: ST_TO_ADDR
27824: GO 27827
27826: POP
// temp_list2 = [ ] ;
27827: LD_ADDR_VAR 0 10
27831: PUSH
27832: EMPTY
27833: ST_TO_ADDR
// for i in temp_list do
27834: LD_ADDR_VAR 0 8
27838: PUSH
27839: LD_VAR 0 9
27843: PUSH
27844: FOR_IN
27845: IFFALSE 27897
// temp_list2 = temp_list2 ^ [ [ i [ 1 ] + x , i [ 2 ] + y ] ] ;
27847: LD_ADDR_VAR 0 10
27851: PUSH
27852: LD_VAR 0 10
27856: PUSH
27857: LD_VAR 0 8
27861: PUSH
27862: LD_INT 1
27864: ARRAY
27865: PUSH
27866: LD_VAR 0 2
27870: PLUS
27871: PUSH
27872: LD_VAR 0 8
27876: PUSH
27877: LD_INT 2
27879: ARRAY
27880: PUSH
27881: LD_VAR 0 3
27885: PLUS
27886: PUSH
27887: EMPTY
27888: LIST
27889: LIST
27890: PUSH
27891: EMPTY
27892: LIST
27893: ADD
27894: ST_TO_ADDR
27895: GO 27844
27897: POP
27898: POP
// result = temp_list2 ;
27899: LD_ADDR_VAR 0 7
27903: PUSH
27904: LD_VAR 0 10
27908: ST_TO_ADDR
// end ;
27909: LD_VAR 0 7
27913: RET
// export function IsNearbyEntrance ( unit , building , distance ) ; var i , entrance ; begin
27914: LD_INT 0
27916: PPUSH
27917: PPUSH
27918: PPUSH
// result := false ;
27919: LD_ADDR_VAR 0 4
27923: PUSH
27924: LD_INT 0
27926: ST_TO_ADDR
// if not unit or not building or IsInUnit ( unit ) then
27927: LD_VAR 0 1
27931: NOT
27932: PUSH
27933: LD_VAR 0 2
27937: NOT
27938: OR
27939: PUSH
27940: LD_VAR 0 1
27944: PPUSH
27945: CALL_OW 310
27949: OR
27950: IFFALSE 27954
// exit ;
27952: GO 28158
// if distance < 0 then
27954: LD_VAR 0 3
27958: PUSH
27959: LD_INT 0
27961: LESS
27962: IFFALSE 27972
// distance := 0 ;
27964: LD_ADDR_VAR 0 3
27968: PUSH
27969: LD_INT 0
27971: ST_TO_ADDR
// entrance := GetBuildingHexes ( GetBType ( building ) , GetX ( building ) , GetY ( building ) , GetDir ( building ) , GetNation ( building ) , 1 ) ;
27972: LD_ADDR_VAR 0 6
27976: PUSH
27977: LD_VAR 0 2
27981: PPUSH
27982: CALL_OW 266
27986: PPUSH
27987: LD_VAR 0 2
27991: PPUSH
27992: CALL_OW 250
27996: PPUSH
27997: LD_VAR 0 2
28001: PPUSH
28002: CALL_OW 251
28006: PPUSH
28007: LD_VAR 0 2
28011: PPUSH
28012: CALL_OW 254
28016: PPUSH
28017: LD_VAR 0 2
28021: PPUSH
28022: CALL_OW 248
28026: PPUSH
28027: LD_INT 1
28029: PPUSH
28030: CALL 9375 0 6
28034: ST_TO_ADDR
// if not entrance then
28035: LD_VAR 0 6
28039: NOT
28040: IFFALSE 28044
// exit ;
28042: GO 28158
// for i in entrance do
28044: LD_ADDR_VAR 0 5
28048: PUSH
28049: LD_VAR 0 6
28053: PUSH
28054: FOR_IN
28055: IFFALSE 28156
// begin if not distance then
28057: LD_VAR 0 3
28061: NOT
28062: IFFALSE 28107
// begin if IsAt ( unit , i [ 1 ] , i [ 2 ] ) then
28064: LD_VAR 0 1
28068: PPUSH
28069: LD_VAR 0 5
28073: PUSH
28074: LD_INT 1
28076: ARRAY
28077: PPUSH
28078: LD_VAR 0 5
28082: PUSH
28083: LD_INT 2
28085: ARRAY
28086: PPUSH
28087: CALL_OW 307
28091: IFFALSE 28105
// begin result := true ;
28093: LD_ADDR_VAR 0 4
28097: PUSH
28098: LD_INT 1
28100: ST_TO_ADDR
// exit ;
28101: POP
28102: POP
28103: GO 28158
// end ; end else
28105: GO 28154
// begin if GetDistUnitXY ( unit , i [ 1 ] , i [ 2 ] ) <= distance then
28107: LD_VAR 0 1
28111: PPUSH
28112: LD_VAR 0 5
28116: PUSH
28117: LD_INT 1
28119: ARRAY
28120: PPUSH
28121: LD_VAR 0 5
28125: PUSH
28126: LD_INT 2
28128: ARRAY
28129: PPUSH
28130: CALL_OW 297
28134: PUSH
28135: LD_VAR 0 3
28139: LESSEQUAL
28140: IFFALSE 28154
// begin result := true ;
28142: LD_ADDR_VAR 0 4
28146: PUSH
28147: LD_INT 1
28149: ST_TO_ADDR
// exit ;
28150: POP
28151: POP
28152: GO 28158
// end ; end ; end ;
28154: GO 28054
28156: POP
28157: POP
// end ;
28158: LD_VAR 0 4
28162: RET
// export function CanSpot ( unit , unit2 ) ; var i , building ; begin
28163: LD_INT 0
28165: PPUSH
28166: PPUSH
28167: PPUSH
// result := false ;
28168: LD_ADDR_VAR 0 3
28172: PUSH
28173: LD_INT 0
28175: ST_TO_ADDR
// if not unit or not unit2 or not IsOk ( unit ) or not IsOk ( unit2 ) then
28176: LD_VAR 0 1
28180: NOT
28181: PUSH
28182: LD_VAR 0 2
28186: NOT
28187: OR
28188: PUSH
28189: LD_VAR 0 1
28193: PPUSH
28194: CALL_OW 302
28198: NOT
28199: OR
28200: PUSH
28201: LD_VAR 0 2
28205: PPUSH
28206: CALL_OW 302
28210: NOT
28211: OR
28212: IFFALSE 28216
// exit ;
28214: GO 28377
// if GetDistUnits ( unit , NearestUnitToUnit ( FilterAllUnits ( [ [ f_enemy , GetSide ( unit ) ] , [ f_not , [ f_type , unit_building ] ] ] ) , unit ) ) < 8 then
28216: LD_VAR 0 1
28220: PPUSH
28221: LD_INT 81
28223: PUSH
28224: LD_VAR 0 1
28228: PPUSH
28229: CALL_OW 255
28233: PUSH
28234: EMPTY
28235: LIST
28236: LIST
28237: PUSH
28238: LD_INT 3
28240: PUSH
28241: LD_INT 21
28243: PUSH
28244: LD_INT 3
28246: PUSH
28247: EMPTY
28248: LIST
28249: LIST
28250: PUSH
28251: EMPTY
28252: LIST
28253: LIST
28254: PUSH
28255: EMPTY
28256: LIST
28257: LIST
28258: PPUSH
28259: CALL_OW 69
28263: PPUSH
28264: LD_VAR 0 1
28268: PPUSH
28269: CALL_OW 74
28273: PPUSH
28274: CALL_OW 296
28278: PUSH
28279: LD_INT 8
28281: LESS
28282: IFFALSE 28286
// exit ;
28284: GO 28377
// building := IsInUnit ( unit2 ) ;
28286: LD_ADDR_VAR 0 5
28290: PUSH
28291: LD_VAR 0 2
28295: PPUSH
28296: CALL_OW 310
28300: ST_TO_ADDR
// if building then
28301: LD_VAR 0 5
28305: IFFALSE 28332
// result := IsNearbyEntrance ( unit , building , 2 ) else
28307: LD_ADDR_VAR 0 3
28311: PUSH
28312: LD_VAR 0 1
28316: PPUSH
28317: LD_VAR 0 5
28321: PPUSH
28322: LD_INT 2
28324: PPUSH
28325: CALL 27914 0 3
28329: ST_TO_ADDR
28330: GO 28377
// result := ( GetDistUnits ( unit , unit2 ) < 6 and See ( GetSide ( unit2 ) , unit ) ) ;
28332: LD_ADDR_VAR 0 3
28336: PUSH
28337: LD_VAR 0 1
28341: PPUSH
28342: LD_VAR 0 2
28346: PPUSH
28347: CALL_OW 296
28351: PUSH
28352: LD_INT 6
28354: LESS
28355: PUSH
28356: LD_VAR 0 2
28360: PPUSH
28361: CALL_OW 255
28365: PPUSH
28366: LD_VAR 0 1
28370: PPUSH
28371: CALL_OW 292
28375: AND
28376: ST_TO_ADDR
// end ;
28377: LD_VAR 0 3
28381: RET
// export function GetFacExt ( factory ) ; var tmp , i , list ; begin
28382: LD_INT 0
28384: PPUSH
28385: PPUSH
28386: PPUSH
28387: PPUSH
// tmp := [ ] ;
28388: LD_ADDR_VAR 0 3
28392: PUSH
28393: EMPTY
28394: ST_TO_ADDR
// list := [ ] ;
28395: LD_ADDR_VAR 0 5
28399: PUSH
28400: EMPTY
28401: ST_TO_ADDR
// for i = 16 to 25 do
28402: LD_ADDR_VAR 0 4
28406: PUSH
28407: DOUBLE
28408: LD_INT 16
28410: DEC
28411: ST_TO_ADDR
28412: LD_INT 25
28414: PUSH
28415: FOR_TO
28416: IFFALSE 28489
// tmp := tmp ^ FilterAllUnits ( [ [ [ f_side , GetSide ( factory ) ] , [ f_dist , factory , 6 ] , [ f_btype , i ] ] ] ) ;
28418: LD_ADDR_VAR 0 3
28422: PUSH
28423: LD_VAR 0 3
28427: PUSH
28428: LD_INT 22
28430: PUSH
28431: LD_VAR 0 1
28435: PPUSH
28436: CALL_OW 255
28440: PUSH
28441: EMPTY
28442: LIST
28443: LIST
28444: PUSH
28445: LD_INT 91
28447: PUSH
28448: LD_VAR 0 1
28452: PUSH
28453: LD_INT 6
28455: PUSH
28456: EMPTY
28457: LIST
28458: LIST
28459: LIST
28460: PUSH
28461: LD_INT 30
28463: PUSH
28464: LD_VAR 0 4
28468: PUSH
28469: EMPTY
28470: LIST
28471: LIST
28472: PUSH
28473: EMPTY
28474: LIST
28475: LIST
28476: LIST
28477: PUSH
28478: EMPTY
28479: LIST
28480: PPUSH
28481: CALL_OW 69
28485: ADD
28486: ST_TO_ADDR
28487: GO 28415
28489: POP
28490: POP
// for i = 1 to tmp do
28491: LD_ADDR_VAR 0 4
28495: PUSH
28496: DOUBLE
28497: LD_INT 1
28499: DEC
28500: ST_TO_ADDR
28501: LD_VAR 0 3
28505: PUSH
28506: FOR_TO
28507: IFFALSE 28595
// list := list ^ [ [ GetBType ( tmp [ i ] ) , GetX ( tmp [ i ] ) , GetY ( tmp [ i ] ) , GetDir ( tmp [ i ] ) ] ] ;
28509: LD_ADDR_VAR 0 5
28513: PUSH
28514: LD_VAR 0 5
28518: PUSH
28519: LD_VAR 0 3
28523: PUSH
28524: LD_VAR 0 4
28528: ARRAY
28529: PPUSH
28530: CALL_OW 266
28534: PUSH
28535: LD_VAR 0 3
28539: PUSH
28540: LD_VAR 0 4
28544: ARRAY
28545: PPUSH
28546: CALL_OW 250
28550: PUSH
28551: LD_VAR 0 3
28555: PUSH
28556: LD_VAR 0 4
28560: ARRAY
28561: PPUSH
28562: CALL_OW 251
28566: PUSH
28567: LD_VAR 0 3
28571: PUSH
28572: LD_VAR 0 4
28576: ARRAY
28577: PPUSH
28578: CALL_OW 254
28582: PUSH
28583: EMPTY
28584: LIST
28585: LIST
28586: LIST
28587: LIST
28588: PUSH
28589: EMPTY
28590: LIST
28591: ADD
28592: ST_TO_ADDR
28593: GO 28506
28595: POP
28596: POP
// result := list ;
28597: LD_ADDR_VAR 0 2
28601: PUSH
28602: LD_VAR 0 5
28606: ST_TO_ADDR
// end ;
28607: LD_VAR 0 2
28611: RET
// export function Produce ( factory , chassis , engine , control , weapon ) ; var i , tmp , _chassis , _weapon , _engine , _control ; begin
28612: LD_INT 0
28614: PPUSH
28615: PPUSH
28616: PPUSH
28617: PPUSH
28618: PPUSH
28619: PPUSH
28620: PPUSH
// if not factory then
28621: LD_VAR 0 1
28625: NOT
28626: IFFALSE 28630
// exit ;
28628: GO 29155
// if control = control_apeman then
28630: LD_VAR 0 4
28634: PUSH
28635: LD_INT 5
28637: EQUAL
28638: IFFALSE 28747
// begin tmp := UnitsInside ( factory ) ;
28640: LD_ADDR_VAR 0 8
28644: PUSH
28645: LD_VAR 0 1
28649: PPUSH
28650: CALL_OW 313
28654: ST_TO_ADDR
// if not UnitFilter ( tmp , [ f_class , class_apeman ] ) then
28655: LD_VAR 0 8
28659: PPUSH
28660: LD_INT 25
28662: PUSH
28663: LD_INT 12
28665: PUSH
28666: EMPTY
28667: LIST
28668: LIST
28669: PPUSH
28670: CALL_OW 72
28674: NOT
28675: IFFALSE 28685
// control := control_manual ;
28677: LD_ADDR_VAR 0 4
28681: PUSH
28682: LD_INT 1
28684: ST_TO_ADDR
// tmp := GetFacExt ( factory ) ;
28685: LD_ADDR_VAR 0 8
28689: PUSH
28690: LD_VAR 0 1
28694: PPUSH
28695: CALL 28382 0 1
28699: ST_TO_ADDR
// if tmp then
28700: LD_VAR 0 8
28704: IFFALSE 28747
// begin for i in tmp do
28706: LD_ADDR_VAR 0 7
28710: PUSH
28711: LD_VAR 0 8
28715: PUSH
28716: FOR_IN
28717: IFFALSE 28745
// if i [ 1 ] = b_ext_radar then
28719: LD_VAR 0 7
28723: PUSH
28724: LD_INT 1
28726: ARRAY
28727: PUSH
28728: LD_INT 20
28730: EQUAL
28731: IFFALSE 28743
// begin control := control_remote ;
28733: LD_ADDR_VAR 0 4
28737: PUSH
28738: LD_INT 2
28740: ST_TO_ADDR
// break ;
28741: GO 28745
// end ;
28743: GO 28716
28745: POP
28746: POP
// end ; end ; if CanBeConstructed ( factory , chassis , engine , control , weapon ) then
28747: LD_VAR 0 1
28751: PPUSH
28752: LD_VAR 0 2
28756: PPUSH
28757: LD_VAR 0 3
28761: PPUSH
28762: LD_VAR 0 4
28766: PPUSH
28767: LD_VAR 0 5
28771: PPUSH
28772: CALL_OW 448
28776: IFFALSE 28811
// begin result := [ chassis , engine , control , weapon ] ;
28778: LD_ADDR_VAR 0 6
28782: PUSH
28783: LD_VAR 0 2
28787: PUSH
28788: LD_VAR 0 3
28792: PUSH
28793: LD_VAR 0 4
28797: PUSH
28798: LD_VAR 0 5
28802: PUSH
28803: EMPTY
28804: LIST
28805: LIST
28806: LIST
28807: LIST
28808: ST_TO_ADDR
// exit ;
28809: GO 29155
// end ; _chassis := AvailableChassisList ( factory ) ;
28811: LD_ADDR_VAR 0 9
28815: PUSH
28816: LD_VAR 0 1
28820: PPUSH
28821: CALL_OW 475
28825: ST_TO_ADDR
// _engine := AvailableEngineList ( factory ) ;
28826: LD_ADDR_VAR 0 11
28830: PUSH
28831: LD_VAR 0 1
28835: PPUSH
28836: CALL_OW 476
28840: ST_TO_ADDR
// _control := AvailableControlList ( factory ) ;
28841: LD_ADDR_VAR 0 12
28845: PUSH
28846: LD_VAR 0 1
28850: PPUSH
28851: CALL_OW 477
28855: ST_TO_ADDR
// _weapon := AvailableWeaponList ( factory ) ;
28856: LD_ADDR_VAR 0 10
28860: PUSH
28861: LD_VAR 0 1
28865: PPUSH
28866: CALL_OW 478
28870: ST_TO_ADDR
// if not chassis in _chassis then
28871: LD_VAR 0 2
28875: PUSH
28876: LD_VAR 0 9
28880: IN
28881: NOT
28882: IFFALSE 28908
// chassis := _chassis [ rand ( 1 , _chassis ) ] ;
28884: LD_ADDR_VAR 0 2
28888: PUSH
28889: LD_VAR 0 9
28893: PUSH
28894: LD_INT 1
28896: PPUSH
28897: LD_VAR 0 9
28901: PPUSH
28902: CALL_OW 12
28906: ARRAY
28907: ST_TO_ADDR
// if not EngineCanBeMount ( chassis , engine ) then
28908: LD_VAR 0 2
28912: PPUSH
28913: LD_VAR 0 3
28917: PPUSH
28918: CALL 29160 0 2
28922: NOT
28923: IFFALSE 28982
// repeat engine := _engine [ 1 ] ;
28925: LD_ADDR_VAR 0 3
28929: PUSH
28930: LD_VAR 0 11
28934: PUSH
28935: LD_INT 1
28937: ARRAY
28938: ST_TO_ADDR
// _engine := Delete ( _engine , 1 ) ;
28939: LD_ADDR_VAR 0 11
28943: PUSH
28944: LD_VAR 0 11
28948: PPUSH
28949: LD_INT 1
28951: PPUSH
28952: CALL_OW 3
28956: ST_TO_ADDR
// until EngineCanBeMount ( chassis , engine ) or _engine = [ ] ;
28957: LD_VAR 0 2
28961: PPUSH
28962: LD_VAR 0 3
28966: PPUSH
28967: CALL 29160 0 2
28971: PUSH
28972: LD_VAR 0 11
28976: PUSH
28977: EMPTY
28978: EQUAL
28979: OR
28980: IFFALSE 28925
// if not control in _control then
28982: LD_VAR 0 4
28986: PUSH
28987: LD_VAR 0 12
28991: IN
28992: NOT
28993: IFFALSE 29019
// control := _control [ rand ( 1 , _control ) ] ;
28995: LD_ADDR_VAR 0 4
28999: PUSH
29000: LD_VAR 0 12
29004: PUSH
29005: LD_INT 1
29007: PPUSH
29008: LD_VAR 0 12
29012: PPUSH
29013: CALL_OW 12
29017: ARRAY
29018: ST_TO_ADDR
// if not WeaponCanBeMount ( chassis , weapon ) then
29019: LD_VAR 0 2
29023: PPUSH
29024: LD_VAR 0 5
29028: PPUSH
29029: CALL 29380 0 2
29033: NOT
29034: IFFALSE 29093
// repeat weapon := _weapon [ 1 ] ;
29036: LD_ADDR_VAR 0 5
29040: PUSH
29041: LD_VAR 0 10
29045: PUSH
29046: LD_INT 1
29048: ARRAY
29049: ST_TO_ADDR
// _weapon := Delete ( _weapon , 1 ) ;
29050: LD_ADDR_VAR 0 10
29054: PUSH
29055: LD_VAR 0 10
29059: PPUSH
29060: LD_INT 1
29062: PPUSH
29063: CALL_OW 3
29067: ST_TO_ADDR
// until WeaponCanBeMount ( chassis , weapon ) or _weapon = [ ] ;
29068: LD_VAR 0 2
29072: PPUSH
29073: LD_VAR 0 5
29077: PPUSH
29078: CALL 29380 0 2
29082: PUSH
29083: LD_VAR 0 10
29087: PUSH
29088: EMPTY
29089: EQUAL
29090: OR
29091: IFFALSE 29036
// if CanBeConstructed ( factory , chassis , engine , control , weapon ) then
29093: LD_VAR 0 1
29097: PPUSH
29098: LD_VAR 0 2
29102: PPUSH
29103: LD_VAR 0 3
29107: PPUSH
29108: LD_VAR 0 4
29112: PPUSH
29113: LD_VAR 0 5
29117: PPUSH
29118: CALL_OW 448
29122: IFFALSE 29155
// result := [ chassis , engine , control , weapon ] ;
29124: LD_ADDR_VAR 0 6
29128: PUSH
29129: LD_VAR 0 2
29133: PUSH
29134: LD_VAR 0 3
29138: PUSH
29139: LD_VAR 0 4
29143: PUSH
29144: LD_VAR 0 5
29148: PUSH
29149: EMPTY
29150: LIST
29151: LIST
29152: LIST
29153: LIST
29154: ST_TO_ADDR
// end ;
29155: LD_VAR 0 6
29159: RET
// export function EngineCanBeMount ( chassis , engine ) ; begin
29160: LD_INT 0
29162: PPUSH
// if not chassis or not engine then
29163: LD_VAR 0 1
29167: NOT
29168: PUSH
29169: LD_VAR 0 2
29173: NOT
29174: OR
29175: IFFALSE 29179
// exit ;
29177: GO 29375
// case engine of engine_solar :
29179: LD_VAR 0 2
29183: PUSH
29184: LD_INT 2
29186: DOUBLE
29187: EQUAL
29188: IFTRUE 29192
29190: GO 29230
29192: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked , us_light_wheeled , us_medium_wheeled , us_medium_tracked ] ; engine_combustion :
29193: LD_ADDR_VAR 0 3
29197: PUSH
29198: LD_INT 11
29200: PUSH
29201: LD_INT 12
29203: PUSH
29204: LD_INT 13
29206: PUSH
29207: LD_INT 14
29209: PUSH
29210: LD_INT 1
29212: PUSH
29213: LD_INT 2
29215: PUSH
29216: LD_INT 3
29218: PUSH
29219: EMPTY
29220: LIST
29221: LIST
29222: LIST
29223: LIST
29224: LIST
29225: LIST
29226: LIST
29227: ST_TO_ADDR
29228: GO 29359
29230: LD_INT 1
29232: DOUBLE
29233: EQUAL
29234: IFTRUE 29238
29236: GO 29300
29238: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked , us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling , ru_medium_wheeled , ru_heavy_wheeled , ru_medium_tracked , ru_heavy_tracked ] ; engine_siberite :
29239: LD_ADDR_VAR 0 3
29243: PUSH
29244: LD_INT 11
29246: PUSH
29247: LD_INT 12
29249: PUSH
29250: LD_INT 13
29252: PUSH
29253: LD_INT 14
29255: PUSH
29256: LD_INT 1
29258: PUSH
29259: LD_INT 2
29261: PUSH
29262: LD_INT 3
29264: PUSH
29265: LD_INT 4
29267: PUSH
29268: LD_INT 5
29270: PUSH
29271: LD_INT 21
29273: PUSH
29274: LD_INT 23
29276: PUSH
29277: LD_INT 22
29279: PUSH
29280: LD_INT 24
29282: PUSH
29283: EMPTY
29284: LIST
29285: LIST
29286: LIST
29287: LIST
29288: LIST
29289: LIST
29290: LIST
29291: LIST
29292: LIST
29293: LIST
29294: LIST
29295: LIST
29296: LIST
29297: ST_TO_ADDR
29298: GO 29359
29300: LD_INT 3
29302: DOUBLE
29303: EQUAL
29304: IFTRUE 29308
29306: GO 29358
29308: POP
// result := [ ar_medium_trike , ar_half_tracked , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling , ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; end ;
29309: LD_ADDR_VAR 0 3
29313: PUSH
29314: LD_INT 13
29316: PUSH
29317: LD_INT 14
29319: PUSH
29320: LD_INT 2
29322: PUSH
29323: LD_INT 3
29325: PUSH
29326: LD_INT 4
29328: PUSH
29329: LD_INT 5
29331: PUSH
29332: LD_INT 21
29334: PUSH
29335: LD_INT 22
29337: PUSH
29338: LD_INT 23
29340: PUSH
29341: LD_INT 24
29343: PUSH
29344: EMPTY
29345: LIST
29346: LIST
29347: LIST
29348: LIST
29349: LIST
29350: LIST
29351: LIST
29352: LIST
29353: LIST
29354: LIST
29355: ST_TO_ADDR
29356: GO 29359
29358: POP
// result := ( chassis in result ) ;
29359: LD_ADDR_VAR 0 3
29363: PUSH
29364: LD_VAR 0 1
29368: PUSH
29369: LD_VAR 0 3
29373: IN
29374: ST_TO_ADDR
// end ;
29375: LD_VAR 0 3
29379: RET
// export function WeaponCanBeMount ( chassis , weapon ) ; begin
29380: LD_INT 0
29382: PPUSH
// if not chassis or not weapon then
29383: LD_VAR 0 1
29387: NOT
29388: PUSH
29389: LD_VAR 0 2
29393: NOT
29394: OR
29395: IFFALSE 29399
// exit ;
29397: GO 30425
// case weapon of us_machine_gun :
29399: LD_VAR 0 2
29403: PUSH
29404: LD_INT 2
29406: DOUBLE
29407: EQUAL
29408: IFTRUE 29412
29410: GO 29442
29412: POP
// result := [ us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_light_gun :
29413: LD_ADDR_VAR 0 3
29417: PUSH
29418: LD_INT 1
29420: PUSH
29421: LD_INT 2
29423: PUSH
29424: LD_INT 3
29426: PUSH
29427: LD_INT 4
29429: PUSH
29430: LD_INT 5
29432: PUSH
29433: EMPTY
29434: LIST
29435: LIST
29436: LIST
29437: LIST
29438: LIST
29439: ST_TO_ADDR
29440: GO 30409
29442: LD_INT 3
29444: DOUBLE
29445: EQUAL
29446: IFTRUE 29450
29448: GO 29480
29450: POP
// result := [ us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_radar :
29451: LD_ADDR_VAR 0 3
29455: PUSH
29456: LD_INT 1
29458: PUSH
29459: LD_INT 2
29461: PUSH
29462: LD_INT 3
29464: PUSH
29465: LD_INT 4
29467: PUSH
29468: LD_INT 5
29470: PUSH
29471: EMPTY
29472: LIST
29473: LIST
29474: LIST
29475: LIST
29476: LIST
29477: ST_TO_ADDR
29478: GO 30409
29480: LD_INT 11
29482: DOUBLE
29483: EQUAL
29484: IFTRUE 29488
29486: GO 29518
29488: POP
// result := [ us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_gatling_gun :
29489: LD_ADDR_VAR 0 3
29493: PUSH
29494: LD_INT 1
29496: PUSH
29497: LD_INT 2
29499: PUSH
29500: LD_INT 3
29502: PUSH
29503: LD_INT 4
29505: PUSH
29506: LD_INT 5
29508: PUSH
29509: EMPTY
29510: LIST
29511: LIST
29512: LIST
29513: LIST
29514: LIST
29515: ST_TO_ADDR
29516: GO 30409
29518: LD_INT 4
29520: DOUBLE
29521: EQUAL
29522: IFTRUE 29526
29524: GO 29552
29526: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_double_gun :
29527: LD_ADDR_VAR 0 3
29531: PUSH
29532: LD_INT 2
29534: PUSH
29535: LD_INT 3
29537: PUSH
29538: LD_INT 4
29540: PUSH
29541: LD_INT 5
29543: PUSH
29544: EMPTY
29545: LIST
29546: LIST
29547: LIST
29548: LIST
29549: ST_TO_ADDR
29550: GO 30409
29552: LD_INT 5
29554: DOUBLE
29555: EQUAL
29556: IFTRUE 29560
29558: GO 29586
29560: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_laser :
29561: LD_ADDR_VAR 0 3
29565: PUSH
29566: LD_INT 2
29568: PUSH
29569: LD_INT 3
29571: PUSH
29572: LD_INT 4
29574: PUSH
29575: LD_INT 5
29577: PUSH
29578: EMPTY
29579: LIST
29580: LIST
29581: LIST
29582: LIST
29583: ST_TO_ADDR
29584: GO 30409
29586: LD_INT 9
29588: DOUBLE
29589: EQUAL
29590: IFTRUE 29594
29592: GO 29620
29594: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_rocket_launcher :
29595: LD_ADDR_VAR 0 3
29599: PUSH
29600: LD_INT 2
29602: PUSH
29603: LD_INT 3
29605: PUSH
29606: LD_INT 4
29608: PUSH
29609: LD_INT 5
29611: PUSH
29612: EMPTY
29613: LIST
29614: LIST
29615: LIST
29616: LIST
29617: ST_TO_ADDR
29618: GO 30409
29620: LD_INT 7
29622: DOUBLE
29623: EQUAL
29624: IFTRUE 29628
29626: GO 29654
29628: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_cargo_bay :
29629: LD_ADDR_VAR 0 3
29633: PUSH
29634: LD_INT 2
29636: PUSH
29637: LD_INT 3
29639: PUSH
29640: LD_INT 4
29642: PUSH
29643: LD_INT 5
29645: PUSH
29646: EMPTY
29647: LIST
29648: LIST
29649: LIST
29650: LIST
29651: ST_TO_ADDR
29652: GO 30409
29654: LD_INT 12
29656: DOUBLE
29657: EQUAL
29658: IFTRUE 29662
29660: GO 29688
29662: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_crane :
29663: LD_ADDR_VAR 0 3
29667: PUSH
29668: LD_INT 2
29670: PUSH
29671: LD_INT 3
29673: PUSH
29674: LD_INT 4
29676: PUSH
29677: LD_INT 5
29679: PUSH
29680: EMPTY
29681: LIST
29682: LIST
29683: LIST
29684: LIST
29685: ST_TO_ADDR
29686: GO 30409
29688: LD_INT 13
29690: DOUBLE
29691: EQUAL
29692: IFTRUE 29696
29694: GO 29722
29696: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_bulldozer :
29697: LD_ADDR_VAR 0 3
29701: PUSH
29702: LD_INT 2
29704: PUSH
29705: LD_INT 3
29707: PUSH
29708: LD_INT 4
29710: PUSH
29711: LD_INT 5
29713: PUSH
29714: EMPTY
29715: LIST
29716: LIST
29717: LIST
29718: LIST
29719: ST_TO_ADDR
29720: GO 30409
29722: LD_INT 14
29724: DOUBLE
29725: EQUAL
29726: IFTRUE 29730
29728: GO 29748
29730: POP
// result := [ us_heavy_tracked , us_morphling ] ; us_heavy_gun :
29731: LD_ADDR_VAR 0 3
29735: PUSH
29736: LD_INT 4
29738: PUSH
29739: LD_INT 5
29741: PUSH
29742: EMPTY
29743: LIST
29744: LIST
29745: ST_TO_ADDR
29746: GO 30409
29748: LD_INT 6
29750: DOUBLE
29751: EQUAL
29752: IFTRUE 29756
29754: GO 29774
29756: POP
// result := [ us_heavy_tracked , us_morphling ] ; us_double_laser :
29757: LD_ADDR_VAR 0 3
29761: PUSH
29762: LD_INT 4
29764: PUSH
29765: LD_INT 5
29767: PUSH
29768: EMPTY
29769: LIST
29770: LIST
29771: ST_TO_ADDR
29772: GO 30409
29774: LD_INT 10
29776: DOUBLE
29777: EQUAL
29778: IFTRUE 29782
29780: GO 29800
29782: POP
// result := [ us_heavy_tracked , us_morphling ] ; ar_multimissile_ballista :
29783: LD_ADDR_VAR 0 3
29787: PUSH
29788: LD_INT 4
29790: PUSH
29791: LD_INT 5
29793: PUSH
29794: EMPTY
29795: LIST
29796: LIST
29797: ST_TO_ADDR
29798: GO 30409
29800: LD_INT 22
29802: DOUBLE
29803: EQUAL
29804: IFTRUE 29808
29806: GO 29834
29808: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_light_gun :
29809: LD_ADDR_VAR 0 3
29813: PUSH
29814: LD_INT 11
29816: PUSH
29817: LD_INT 12
29819: PUSH
29820: LD_INT 13
29822: PUSH
29823: LD_INT 14
29825: PUSH
29826: EMPTY
29827: LIST
29828: LIST
29829: LIST
29830: LIST
29831: ST_TO_ADDR
29832: GO 30409
29834: LD_INT 23
29836: DOUBLE
29837: EQUAL
29838: IFTRUE 29842
29840: GO 29868
29842: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_double_machine_gun :
29843: LD_ADDR_VAR 0 3
29847: PUSH
29848: LD_INT 11
29850: PUSH
29851: LD_INT 12
29853: PUSH
29854: LD_INT 13
29856: PUSH
29857: LD_INT 14
29859: PUSH
29860: EMPTY
29861: LIST
29862: LIST
29863: LIST
29864: LIST
29865: ST_TO_ADDR
29866: GO 30409
29868: LD_INT 24
29870: DOUBLE
29871: EQUAL
29872: IFTRUE 29876
29874: GO 29902
29876: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_radar :
29877: LD_ADDR_VAR 0 3
29881: PUSH
29882: LD_INT 11
29884: PUSH
29885: LD_INT 12
29887: PUSH
29888: LD_INT 13
29890: PUSH
29891: LD_INT 14
29893: PUSH
29894: EMPTY
29895: LIST
29896: LIST
29897: LIST
29898: LIST
29899: ST_TO_ADDR
29900: GO 30409
29902: LD_INT 30
29904: DOUBLE
29905: EQUAL
29906: IFTRUE 29910
29908: GO 29936
29910: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_gatling_gun :
29911: LD_ADDR_VAR 0 3
29915: PUSH
29916: LD_INT 11
29918: PUSH
29919: LD_INT 12
29921: PUSH
29922: LD_INT 13
29924: PUSH
29925: LD_INT 14
29927: PUSH
29928: EMPTY
29929: LIST
29930: LIST
29931: LIST
29932: LIST
29933: ST_TO_ADDR
29934: GO 30409
29936: LD_INT 25
29938: DOUBLE
29939: EQUAL
29940: IFTRUE 29944
29942: GO 29962
29944: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_gun :
29945: LD_ADDR_VAR 0 3
29949: PUSH
29950: LD_INT 13
29952: PUSH
29953: LD_INT 14
29955: PUSH
29956: EMPTY
29957: LIST
29958: LIST
29959: ST_TO_ADDR
29960: GO 30409
29962: LD_INT 27
29964: DOUBLE
29965: EQUAL
29966: IFTRUE 29970
29968: GO 29988
29970: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_rocket_launcher :
29971: LD_ADDR_VAR 0 3
29975: PUSH
29976: LD_INT 13
29978: PUSH
29979: LD_INT 14
29981: PUSH
29982: EMPTY
29983: LIST
29984: LIST
29985: ST_TO_ADDR
29986: GO 30409
29988: LD_INT 28
29990: DOUBLE
29991: EQUAL
29992: IFTRUE 29996
29994: GO 30014
29996: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_selfpropelled_bomb :
29997: LD_ADDR_VAR 0 3
30001: PUSH
30002: LD_INT 13
30004: PUSH
30005: LD_INT 14
30007: PUSH
30008: EMPTY
30009: LIST
30010: LIST
30011: ST_TO_ADDR
30012: GO 30409
30014: LD_INT 29
30016: DOUBLE
30017: EQUAL
30018: IFTRUE 30022
30020: GO 30040
30022: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_control_tower :
30023: LD_ADDR_VAR 0 3
30027: PUSH
30028: LD_INT 13
30030: PUSH
30031: LD_INT 14
30033: PUSH
30034: EMPTY
30035: LIST
30036: LIST
30037: ST_TO_ADDR
30038: GO 30409
30040: LD_INT 31
30042: DOUBLE
30043: EQUAL
30044: IFTRUE 30048
30046: GO 30066
30048: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_flame_thrower :
30049: LD_ADDR_VAR 0 3
30053: PUSH
30054: LD_INT 13
30056: PUSH
30057: LD_INT 14
30059: PUSH
30060: EMPTY
30061: LIST
30062: LIST
30063: ST_TO_ADDR
30064: GO 30409
30066: LD_INT 26
30068: DOUBLE
30069: EQUAL
30070: IFTRUE 30074
30072: GO 30092
30074: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ru_heavy_machine_gun :
30075: LD_ADDR_VAR 0 3
30079: PUSH
30080: LD_INT 13
30082: PUSH
30083: LD_INT 14
30085: PUSH
30086: EMPTY
30087: LIST
30088: LIST
30089: ST_TO_ADDR
30090: GO 30409
30092: LD_INT 42
30094: DOUBLE
30095: EQUAL
30096: IFTRUE 30100
30098: GO 30126
30100: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_gatling_gun :
30101: LD_ADDR_VAR 0 3
30105: PUSH
30106: LD_INT 21
30108: PUSH
30109: LD_INT 22
30111: PUSH
30112: LD_INT 23
30114: PUSH
30115: LD_INT 24
30117: PUSH
30118: EMPTY
30119: LIST
30120: LIST
30121: LIST
30122: LIST
30123: ST_TO_ADDR
30124: GO 30409
30126: LD_INT 43
30128: DOUBLE
30129: EQUAL
30130: IFTRUE 30134
30132: GO 30160
30134: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_gun :
30135: LD_ADDR_VAR 0 3
30139: PUSH
30140: LD_INT 21
30142: PUSH
30143: LD_INT 22
30145: PUSH
30146: LD_INT 23
30148: PUSH
30149: LD_INT 24
30151: PUSH
30152: EMPTY
30153: LIST
30154: LIST
30155: LIST
30156: LIST
30157: ST_TO_ADDR
30158: GO 30409
30160: LD_INT 44
30162: DOUBLE
30163: EQUAL
30164: IFTRUE 30168
30166: GO 30194
30168: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_rocket_launcher :
30169: LD_ADDR_VAR 0 3
30173: PUSH
30174: LD_INT 21
30176: PUSH
30177: LD_INT 22
30179: PUSH
30180: LD_INT 23
30182: PUSH
30183: LD_INT 24
30185: PUSH
30186: EMPTY
30187: LIST
30188: LIST
30189: LIST
30190: LIST
30191: ST_TO_ADDR
30192: GO 30409
30194: LD_INT 45
30196: DOUBLE
30197: EQUAL
30198: IFTRUE 30202
30200: GO 30228
30202: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_time_lapser :
30203: LD_ADDR_VAR 0 3
30207: PUSH
30208: LD_INT 21
30210: PUSH
30211: LD_INT 22
30213: PUSH
30214: LD_INT 23
30216: PUSH
30217: LD_INT 24
30219: PUSH
30220: EMPTY
30221: LIST
30222: LIST
30223: LIST
30224: LIST
30225: ST_TO_ADDR
30226: GO 30409
30228: LD_INT 49
30230: DOUBLE
30231: EQUAL
30232: IFTRUE 30236
30234: GO 30262
30236: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_cargo_bay :
30237: LD_ADDR_VAR 0 3
30241: PUSH
30242: LD_INT 21
30244: PUSH
30245: LD_INT 22
30247: PUSH
30248: LD_INT 23
30250: PUSH
30251: LD_INT 24
30253: PUSH
30254: EMPTY
30255: LIST
30256: LIST
30257: LIST
30258: LIST
30259: ST_TO_ADDR
30260: GO 30409
30262: LD_INT 51
30264: DOUBLE
30265: EQUAL
30266: IFTRUE 30270
30268: GO 30296
30270: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_crane :
30271: LD_ADDR_VAR 0 3
30275: PUSH
30276: LD_INT 21
30278: PUSH
30279: LD_INT 22
30281: PUSH
30282: LD_INT 23
30284: PUSH
30285: LD_INT 24
30287: PUSH
30288: EMPTY
30289: LIST
30290: LIST
30291: LIST
30292: LIST
30293: ST_TO_ADDR
30294: GO 30409
30296: LD_INT 52
30298: DOUBLE
30299: EQUAL
30300: IFTRUE 30304
30302: GO 30330
30304: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_bulldozer :
30305: LD_ADDR_VAR 0 3
30309: PUSH
30310: LD_INT 21
30312: PUSH
30313: LD_INT 22
30315: PUSH
30316: LD_INT 23
30318: PUSH
30319: LD_INT 24
30321: PUSH
30322: EMPTY
30323: LIST
30324: LIST
30325: LIST
30326: LIST
30327: ST_TO_ADDR
30328: GO 30409
30330: LD_INT 53
30332: DOUBLE
30333: EQUAL
30334: IFTRUE 30338
30336: GO 30356
30338: POP
// result := [ ru_heavy_wheeled , ru_heavy_tracked ] ; ru_heavy_gun :
30339: LD_ADDR_VAR 0 3
30343: PUSH
30344: LD_INT 23
30346: PUSH
30347: LD_INT 24
30349: PUSH
30350: EMPTY
30351: LIST
30352: LIST
30353: ST_TO_ADDR
30354: GO 30409
30356: LD_INT 46
30358: DOUBLE
30359: EQUAL
30360: IFTRUE 30364
30362: GO 30382
30364: POP
// result := [ ru_heavy_wheeled , ru_heavy_tracked ] ; ru_rocket :
30365: LD_ADDR_VAR 0 3
30369: PUSH
30370: LD_INT 23
30372: PUSH
30373: LD_INT 24
30375: PUSH
30376: EMPTY
30377: LIST
30378: LIST
30379: ST_TO_ADDR
30380: GO 30409
30382: LD_INT 47
30384: DOUBLE
30385: EQUAL
30386: IFTRUE 30390
30388: GO 30408
30390: POP
// result := [ ru_heavy_wheeled , ru_heavy_tracked ] ; end ;
30391: LD_ADDR_VAR 0 3
30395: PUSH
30396: LD_INT 23
30398: PUSH
30399: LD_INT 24
30401: PUSH
30402: EMPTY
30403: LIST
30404: LIST
30405: ST_TO_ADDR
30406: GO 30409
30408: POP
// result := ( chassis in result ) ;
30409: LD_ADDR_VAR 0 3
30413: PUSH
30414: LD_VAR 0 1
30418: PUSH
30419: LD_VAR 0 3
30423: IN
30424: ST_TO_ADDR
// end ;
30425: LD_VAR 0 3
30429: RET
// export function PrepareNature ; var i , animal , nat_area ; begin
30430: LD_INT 0
30432: PPUSH
30433: PPUSH
30434: PPUSH
30435: PPUSH
// uc_side = 0 ;
30436: LD_ADDR_OWVAR 20
30440: PUSH
30441: LD_INT 0
30443: ST_TO_ADDR
// uc_nation = 0 ;
30444: LD_ADDR_OWVAR 21
30448: PUSH
30449: LD_INT 0
30451: ST_TO_ADDR
// nat_area := nature_area ;
30452: LD_ADDR_VAR 0 4
30456: PUSH
30457: LD_INT 24
30459: ST_TO_ADDR
// InitHc ;
30460: CALL_OW 19
// for i = 1 to 4 do
30464: LD_ADDR_VAR 0 2
30468: PUSH
30469: DOUBLE
30470: LD_INT 1
30472: DEC
30473: ST_TO_ADDR
30474: LD_INT 4
30476: PUSH
30477: FOR_TO
30478: IFFALSE 30525
// begin hc_class = 18 ;
30480: LD_ADDR_OWVAR 28
30484: PUSH
30485: LD_INT 18
30487: ST_TO_ADDR
// hc_gallery =  ;
30488: LD_ADDR_OWVAR 33
30492: PUSH
30493: LD_STRING 
30495: ST_TO_ADDR
// animal := CreateHuman ;
30496: LD_ADDR_VAR 0 3
30500: PUSH
30501: CALL_OW 44
30505: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
30506: LD_VAR 0 3
30510: PPUSH
30511: LD_VAR 0 4
30515: PPUSH
30516: LD_INT 0
30518: PPUSH
30519: CALL_OW 49
// end ;
30523: GO 30477
30525: POP
30526: POP
// for i = 1 to 3 do
30527: LD_ADDR_VAR 0 2
30531: PUSH
30532: DOUBLE
30533: LD_INT 1
30535: DEC
30536: ST_TO_ADDR
30537: LD_INT 3
30539: PUSH
30540: FOR_TO
30541: IFFALSE 30635
// begin hc_class = class_apeman ;
30543: LD_ADDR_OWVAR 28
30547: PUSH
30548: LD_INT 12
30550: ST_TO_ADDR
// hc_gallery =  ;
30551: LD_ADDR_OWVAR 33
30555: PUSH
30556: LD_STRING 
30558: ST_TO_ADDR
// hc_agressivity = 0 ;
30559: LD_ADDR_OWVAR 35
30563: PUSH
30564: LD_INT 0
30566: ST_TO_ADDR
// hc_skills := [ rand ( 1 , 3 ) , rand ( 1 , 3 ) , 0 , 0 ] ;
30567: LD_ADDR_OWVAR 31
30571: PUSH
30572: LD_INT 1
30574: PPUSH
30575: LD_INT 3
30577: PPUSH
30578: CALL_OW 12
30582: PUSH
30583: LD_INT 1
30585: PPUSH
30586: LD_INT 3
30588: PPUSH
30589: CALL_OW 12
30593: PUSH
30594: LD_INT 0
30596: PUSH
30597: LD_INT 0
30599: PUSH
30600: EMPTY
30601: LIST
30602: LIST
30603: LIST
30604: LIST
30605: ST_TO_ADDR
// animal := CreateHuman ;
30606: LD_ADDR_VAR 0 3
30610: PUSH
30611: CALL_OW 44
30615: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
30616: LD_VAR 0 3
30620: PPUSH
30621: LD_VAR 0 4
30625: PPUSH
30626: LD_INT 0
30628: PPUSH
30629: CALL_OW 49
// end ;
30633: GO 30540
30635: POP
30636: POP
// for i = 1 to 3 do
30637: LD_ADDR_VAR 0 2
30641: PUSH
30642: DOUBLE
30643: LD_INT 1
30645: DEC
30646: ST_TO_ADDR
30647: LD_INT 3
30649: PUSH
30650: FOR_TO
30651: IFFALSE 30698
// begin hc_class = 13 ;
30653: LD_ADDR_OWVAR 28
30657: PUSH
30658: LD_INT 13
30660: ST_TO_ADDR
// hc_gallery =  ;
30661: LD_ADDR_OWVAR 33
30665: PUSH
30666: LD_STRING 
30668: ST_TO_ADDR
// animal := CreateHuman ;
30669: LD_ADDR_VAR 0 3
30673: PUSH
30674: CALL_OW 44
30678: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
30679: LD_VAR 0 3
30683: PPUSH
30684: LD_VAR 0 4
30688: PPUSH
30689: LD_INT 0
30691: PPUSH
30692: CALL_OW 49
// end ;
30696: GO 30650
30698: POP
30699: POP
// for i = 1 to 3 do
30700: LD_ADDR_VAR 0 2
30704: PUSH
30705: DOUBLE
30706: LD_INT 1
30708: DEC
30709: ST_TO_ADDR
30710: LD_INT 3
30712: PUSH
30713: FOR_TO
30714: IFFALSE 30759
// begin hc_class = 20 ;
30716: LD_ADDR_OWVAR 28
30720: PUSH
30721: LD_INT 20
30723: ST_TO_ADDR
// hc_gallery =  ;
30724: LD_ADDR_OWVAR 33
30728: PUSH
30729: LD_STRING 
30731: ST_TO_ADDR
// animal := CreateHuman ;
30732: LD_ADDR_VAR 0 3
30736: PUSH
30737: CALL_OW 44
30741: ST_TO_ADDR
// PlaceUnitArea ( animal , lake_area , false ) ;
30742: LD_VAR 0 3
30746: PPUSH
30747: LD_INT 4
30749: PPUSH
30750: LD_INT 0
30752: PPUSH
30753: CALL_OW 49
// end ;
30757: GO 30713
30759: POP
30760: POP
// end ; end_of_file
30761: LD_VAR 0 1
30765: RET
// export function Action ; begin
30766: LD_INT 0
30768: PPUSH
// InGameOn ;
30769: CALL_OW 8
// CenterNowOnUnits ( JMM ) ;
30773: LD_EXP 12
30777: PPUSH
30778: CALL_OW 87
// Say ( JMM , D1-JMM-1 ) ;
30782: LD_EXP 12
30786: PPUSH
30787: LD_STRING D1-JMM-1
30789: PPUSH
30790: CALL_OW 88
// Say ( Roth , D1-Roth-1 ) ;
30794: LD_EXP 13
30798: PPUSH
30799: LD_STRING D1-Roth-1
30801: PPUSH
30802: CALL_OW 88
// Say ( JMM , D1-JMM-2 ) ;
30806: LD_EXP 12
30810: PPUSH
30811: LD_STRING D1-JMM-2
30813: PPUSH
30814: CALL_OW 88
// Say ( Roth , D1-Roth-2 ) ;
30818: LD_EXP 13
30822: PPUSH
30823: LD_STRING D1-Roth-2
30825: PPUSH
30826: CALL_OW 88
// Say ( JMM , D1-JMM-3 ) ;
30830: LD_EXP 12
30834: PPUSH
30835: LD_STRING D1-JMM-3
30837: PPUSH
30838: CALL_OW 88
// Say ( Roth , D1-Roth-3 ) ;
30842: LD_EXP 13
30846: PPUSH
30847: LD_STRING D1-Roth-3
30849: PPUSH
30850: CALL_OW 88
// ComInvisible ( Roth ) ;
30854: LD_EXP 13
30858: PPUSH
30859: CALL_OW 152
// wait ( 0 0$1.3 ) ;
30863: LD_INT 46
30865: PPUSH
30866: CALL_OW 67
// Say ( JMM , D1-JMM-4 ) ;
30870: LD_EXP 12
30874: PPUSH
30875: LD_STRING D1-JMM-4
30877: PPUSH
30878: CALL_OW 88
// wait ( 0 0$0.3 ) ;
30882: LD_INT 10
30884: PPUSH
30885: CALL_OW 67
// ComTurnUnit ( Roth , JMM ) ;
30889: LD_EXP 13
30893: PPUSH
30894: LD_EXP 12
30898: PPUSH
30899: CALL_OW 119
// Say ( JMM , D1-JMM-4a ) ;
30903: LD_EXP 12
30907: PPUSH
30908: LD_STRING D1-JMM-4a
30910: PPUSH
30911: CALL_OW 88
// Say ( Roth , D1-Roth-4 ) ;
30915: LD_EXP 13
30919: PPUSH
30920: LD_STRING D1-Roth-4
30922: PPUSH
30923: CALL_OW 88
// Say ( JMM , D1-JMM-5 ) ;
30927: LD_EXP 12
30931: PPUSH
30932: LD_STRING D1-JMM-5
30934: PPUSH
30935: CALL_OW 88
// Say ( Roth , D1-Roth-5 ) ;
30939: LD_EXP 13
30943: PPUSH
30944: LD_STRING D1-Roth-5
30946: PPUSH
30947: CALL_OW 88
// Say ( JMM , D1-JMM-6 ) ;
30951: LD_EXP 12
30955: PPUSH
30956: LD_STRING D1-JMM-6
30958: PPUSH
30959: CALL_OW 88
// Say ( Roth , D1-Roth-6 ) ;
30963: LD_EXP 13
30967: PPUSH
30968: LD_STRING D1-Roth-6
30970: PPUSH
30971: CALL_OW 88
// Say ( JMM , D1-JMM-7 ) ;
30975: LD_EXP 12
30979: PPUSH
30980: LD_STRING D1-JMM-7
30982: PPUSH
30983: CALL_OW 88
// ComMoveXY ( Powell , GetX ( JMM ) , GetY ( JMM ) ) ;
30987: LD_EXP 14
30991: PPUSH
30992: LD_EXP 12
30996: PPUSH
30997: CALL_OW 250
31001: PPUSH
31002: LD_EXP 12
31006: PPUSH
31007: CALL_OW 251
31011: PPUSH
31012: CALL_OW 111
// Say ( Roth , D1-Roth-7 ) ;
31016: LD_EXP 13
31020: PPUSH
31021: LD_STRING D1-Roth-7
31023: PPUSH
31024: CALL_OW 88
// repeat wait ( 0 0$0.3 ) ;
31028: LD_INT 10
31030: PPUSH
31031: CALL_OW 67
// until GetDistUnits ( Powell , JMM ) < 6 ;
31035: LD_EXP 14
31039: PPUSH
31040: LD_EXP 12
31044: PPUSH
31045: CALL_OW 296
31049: PUSH
31050: LD_INT 6
31052: LESS
31053: IFFALSE 31028
// ComTurnUnit ( Powell , JMM ) ;
31055: LD_EXP 14
31059: PPUSH
31060: LD_EXP 12
31064: PPUSH
31065: CALL_OW 119
// Say ( Powell , D1-Pow-7 ) ;
31069: LD_EXP 14
31073: PPUSH
31074: LD_STRING D1-Pow-7
31076: PPUSH
31077: CALL_OW 88
// ComTurnUnit ( JMM , Powell ) ;
31081: LD_EXP 12
31085: PPUSH
31086: LD_EXP 14
31090: PPUSH
31091: CALL_OW 119
// ComTurnUnit ( Roth , Powell ) ;
31095: LD_EXP 13
31099: PPUSH
31100: LD_EXP 14
31104: PPUSH
31105: CALL_OW 119
// Say ( JMM , D1-JMM-8 ) ;
31109: LD_EXP 12
31113: PPUSH
31114: LD_STRING D1-JMM-8
31116: PPUSH
31117: CALL_OW 88
// Say ( Powell , D1-Pow-8 ) ;
31121: LD_EXP 14
31125: PPUSH
31126: LD_STRING D1-Pow-8
31128: PPUSH
31129: CALL_OW 88
// Say ( JMM , D1-JMM-9 ) ;
31133: LD_EXP 12
31137: PPUSH
31138: LD_STRING D1-JMM-9
31140: PPUSH
31141: CALL_OW 88
// ComMoveXY ( Powell , 124 , 61 ) ;
31145: LD_EXP 14
31149: PPUSH
31150: LD_INT 124
31152: PPUSH
31153: LD_INT 61
31155: PPUSH
31156: CALL_OW 111
// repeat wait ( 0 0$1 ) ;
31160: LD_INT 35
31162: PPUSH
31163: CALL_OW 67
// until GetDistUnits ( JMM , Powell ) > 6 ;
31167: LD_EXP 12
31171: PPUSH
31172: LD_EXP 14
31176: PPUSH
31177: CALL_OW 296
31181: PUSH
31182: LD_INT 6
31184: GREATER
31185: IFFALSE 31160
// SayRadio ( Powell , D1-Pow-9 ) ;
31187: LD_EXP 14
31191: PPUSH
31192: LD_STRING D1-Pow-9
31194: PPUSH
31195: CALL_OW 94
// RemoveUnit ( Powell ) ;
31199: LD_EXP 14
31203: PPUSH
31204: CALL_OW 64
// PlaceHumanInUnit ( Powell , ambar0 ) ;
31208: LD_EXP 14
31212: PPUSH
31213: LD_INT 18
31215: PPUSH
31216: CALL_OW 52
// if Joan and not Joan in selected then
31220: LD_EXP 34
31224: PUSH
31225: LD_EXP 34
31229: PUSH
31230: LD_EXP 3
31234: IN
31235: NOT
31236: AND
31237: IFFALSE 31251
// SayRadio ( Joan , D1-Joan-9 ) ;
31239: LD_EXP 34
31243: PPUSH
31244: LD_STRING D1-Joan-9
31246: PPUSH
31247: CALL_OW 94
// ComTurnUnit ( Roth , JMM ) ;
31251: LD_EXP 13
31255: PPUSH
31256: LD_EXP 12
31260: PPUSH
31261: CALL_OW 119
// ComTurnUnit ( JMM , Roth ) ;
31265: LD_EXP 12
31269: PPUSH
31270: LD_EXP 13
31274: PPUSH
31275: CALL_OW 119
// Say ( Roth , D1-Roth-9 ) ;
31279: LD_EXP 13
31283: PPUSH
31284: LD_STRING D1-Roth-9
31286: PPUSH
31287: CALL_OW 88
// Say ( JMM , D1-JMM-10 ) ;
31291: LD_EXP 12
31295: PPUSH
31296: LD_STRING D1-JMM-10
31298: PPUSH
31299: CALL_OW 88
// InGameOff ;
31303: CALL_OW 9
// ChangeMissionObjectives ( M1 ) ;
31307: LD_STRING M1
31309: PPUSH
31310: CALL_OW 337
// if Difficulty < 3 then
31314: LD_OWVAR 67
31318: PUSH
31319: LD_INT 3
31321: LESS
31322: IFFALSE 31334
// ChangeSideFog ( 4 , 7 ) ;
31324: LD_INT 4
31326: PPUSH
31327: LD_INT 7
31329: PPUSH
31330: CALL_OW 343
// SaveForQuickRestart ;
31334: CALL_OW 22
// SetAttitude ( 7 , 1 , att_enemy , true ) ;
31338: LD_INT 7
31340: PPUSH
31341: LD_INT 1
31343: PPUSH
31344: LD_INT 2
31346: PPUSH
31347: LD_INT 1
31349: PPUSH
31350: CALL_OW 80
// wait ( 0 0$3 ) ;
31354: LD_INT 105
31356: PPUSH
31357: CALL_OW 67
// ComMoveXY ( Roth , 124 , 18 ) ;
31361: LD_EXP 13
31365: PPUSH
31366: LD_INT 124
31368: PPUSH
31369: LD_INT 18
31371: PPUSH
31372: CALL_OW 111
// AddComInvisible ( Roth ) ;
31376: LD_EXP 13
31380: PPUSH
31381: CALL_OW 212
// wait ( 0 0$30 ) ;
31385: LD_INT 1050
31387: PPUSH
31388: CALL_OW 67
// AddComWait ( Roth , 1 1$00 ) ;
31392: LD_EXP 13
31396: PPUSH
31397: LD_INT 2100
31399: PPUSH
31400: CALL_OW 202
// AddComMoveXY ( Roth , 156 , 20 ) ;
31404: LD_EXP 13
31408: PPUSH
31409: LD_INT 156
31411: PPUSH
31412: LD_INT 20
31414: PPUSH
31415: CALL_OW 171
// AddComMoveXY ( Roth , 178 , 42 ) ;
31419: LD_EXP 13
31423: PPUSH
31424: LD_INT 178
31426: PPUSH
31427: LD_INT 42
31429: PPUSH
31430: CALL_OW 171
// AddComInvisible ( Roth ) ;
31434: LD_EXP 13
31438: PPUSH
31439: CALL_OW 212
// end ;
31443: LD_VAR 0 1
31447: RET
// every 0 0$1 do var i , tmp ;
31448: GO 31450
31450: DISABLE
31451: LD_INT 0
31453: PPUSH
31454: PPUSH
// begin tmp := selected union friends ;
31455: LD_ADDR_VAR 0 2
31459: PUSH
31460: LD_EXP 3
31464: PUSH
31465: LD_EXP 4
31469: UNION
31470: ST_TO_ADDR
// if not tmp then
31471: LD_VAR 0 2
31475: NOT
31476: IFFALSE 31480
// exit ;
31478: GO 31552
// repeat wait ( 0 0$1 ) ;
31480: LD_INT 35
31482: PPUSH
31483: CALL_OW 67
// for i in tmp do
31487: LD_ADDR_VAR 0 1
31491: PUSH
31492: LD_VAR 0 2
31496: PUSH
31497: FOR_IN
31498: IFFALSE 31543
// if CanSpot ( JMM , i ) then
31500: LD_EXP 12
31504: PPUSH
31505: LD_VAR 0 1
31509: PPUSH
31510: CALL 28163 0 2
31514: IFFALSE 31541
// begin tmp := tmp diff i ;
31516: LD_ADDR_VAR 0 2
31520: PUSH
31521: LD_VAR 0 2
31525: PUSH
31526: LD_VAR 0 1
31530: DIFF
31531: ST_TO_ADDR
// Spot ( i ) ;
31532: LD_VAR 0 1
31536: PPUSH
31537: CALL 31555 0 1
// end ;
31541: GO 31497
31543: POP
31544: POP
// until not tmp ;
31545: LD_VAR 0 2
31549: NOT
31550: IFFALSE 31480
// end ;
31552: PPOPN 2
31554: END
// export function Spot ( unit ) ; var building , side , joined ; begin
31555: LD_INT 0
31557: PPUSH
31558: PPUSH
31559: PPUSH
31560: PPUSH
// if not unit or GetSide ( unit ) <> 4 or IsSleeping ( unit ) or not IsOk ( unit ) then
31561: LD_VAR 0 1
31565: NOT
31566: PUSH
31567: LD_VAR 0 1
31571: PPUSH
31572: CALL_OW 255
31576: PUSH
31577: LD_INT 4
31579: NONEQUAL
31580: OR
31581: PUSH
31582: LD_VAR 0 1
31586: PPUSH
31587: CALL_OW 555
31591: OR
31592: PUSH
31593: LD_VAR 0 1
31597: PPUSH
31598: CALL_OW 302
31602: NOT
31603: OR
31604: IFFALSE 31608
// exit ;
31606: GO 33497
// InGameOn ;
31608: CALL_OW 8
// side := GetSide ( JMM ) ;
31612: LD_ADDR_VAR 0 4
31616: PUSH
31617: LD_EXP 12
31621: PPUSH
31622: CALL_OW 255
31626: ST_TO_ADDR
// joined := false ;
31627: LD_ADDR_VAR 0 5
31631: PUSH
31632: LD_INT 0
31634: ST_TO_ADDR
// building := IsInUnit ( unit ) ;
31635: LD_ADDR_VAR 0 3
31639: PUSH
31640: LD_VAR 0 1
31644: PPUSH
31645: CALL_OW 310
31649: ST_TO_ADDR
// if building then
31650: LD_VAR 0 3
31654: IFFALSE 31713
// begin SetSide ( JMM , GetSide ( unit ) ) ;
31656: LD_EXP 12
31660: PPUSH
31661: LD_VAR 0 1
31665: PPUSH
31666: CALL_OW 255
31670: PPUSH
31671: CALL_OW 235
// ComEnterUnit ( JMM , building ) ;
31675: LD_EXP 12
31679: PPUSH
31680: LD_VAR 0 3
31684: PPUSH
31685: CALL_OW 120
// repeat wait ( 3 ) ;
31689: LD_INT 3
31691: PPUSH
31692: CALL_OW 67
// until IsInUnit ( JMM ) ;
31696: LD_EXP 12
31700: PPUSH
31701: CALL_OW 310
31705: IFFALSE 31689
// DialogueOn ;
31707: CALL_OW 6
// end else
31711: GO 31745
// begin ComTurnUnit ( JMM , unit ) ;
31713: LD_EXP 12
31717: PPUSH
31718: LD_VAR 0 1
31722: PPUSH
31723: CALL_OW 119
// ComTurnUnit ( unit , JMM ) ;
31727: LD_VAR 0 1
31731: PPUSH
31732: LD_EXP 12
31736: PPUSH
31737: CALL_OW 119
// DialogueOn ;
31741: CALL_OW 6
// end ; if unit = Joan then
31745: LD_VAR 0 1
31749: PUSH
31750: LD_EXP 34
31754: EQUAL
31755: IFFALSE 31865
// begin joined := true ;
31757: LD_ADDR_VAR 0 5
31761: PUSH
31762: LD_INT 1
31764: ST_TO_ADDR
// if Joan in selected then
31765: LD_EXP 34
31769: PUSH
31770: LD_EXP 3
31774: IN
31775: IFFALSE 31803
// begin Say ( Joan , D3-Joan-Joan-1 ) ;
31777: LD_EXP 34
31781: PPUSH
31782: LD_STRING D3-Joan-Joan-1
31784: PPUSH
31785: CALL_OW 88
// Say ( JMM , D3-Joan-JMM-1 ) ;
31789: LD_EXP 12
31793: PPUSH
31794: LD_STRING D3-Joan-JMM-1
31796: PPUSH
31797: CALL_OW 88
// end else
31801: GO 31863
// begin Say ( Joan , D4-Joan-Joan-1 ) ;
31803: LD_EXP 34
31807: PPUSH
31808: LD_STRING D4-Joan-Joan-1
31810: PPUSH
31811: CALL_OW 88
// Say ( JMM , D4-Joan-JMM-1 ) ;
31815: LD_EXP 12
31819: PPUSH
31820: LD_STRING D4-Joan-JMM-1
31822: PPUSH
31823: CALL_OW 88
// Say ( Joan , D4-Joan-Joan-2 ) ;
31827: LD_EXP 34
31831: PPUSH
31832: LD_STRING D4-Joan-Joan-2
31834: PPUSH
31835: CALL_OW 88
// Say ( JMM , D4-Joan-JMM-2 ) ;
31839: LD_EXP 12
31843: PPUSH
31844: LD_STRING D4-Joan-JMM-2
31846: PPUSH
31847: CALL_OW 88
// Say ( Joan , D4-Joan-Joan-3 ) ;
31851: LD_EXP 34
31855: PPUSH
31856: LD_STRING D4-Joan-Joan-3
31858: PPUSH
31859: CALL_OW 88
// end ; end else
31863: GO 33305
// if unit = Lisa then
31865: LD_VAR 0 1
31869: PUSH
31870: LD_EXP 21
31874: EQUAL
31875: IFFALSE 32067
// begin if Lisa in selected then
31877: LD_EXP 21
31881: PUSH
31882: LD_EXP 3
31886: IN
31887: IFFALSE 32000
// begin if GetSide ( Joan ) = 7 then
31889: LD_EXP 34
31893: PPUSH
31894: CALL_OW 255
31898: PUSH
31899: LD_INT 7
31901: EQUAL
31902: IFFALSE 31966
// begin Say ( Lisa , D3-LisaJ-Lisa-1 ) ;
31904: LD_EXP 21
31908: PPUSH
31909: LD_STRING D3-LisaJ-Lisa-1
31911: PPUSH
31912: CALL_OW 88
// Say ( JMM , D3-LisaJ-JMM-1 ) ;
31916: LD_EXP 12
31920: PPUSH
31921: LD_STRING D3-LisaJ-JMM-1
31923: PPUSH
31924: CALL_OW 88
// Say ( Lisa , D3-LisaJ-Lisa-2 ) ;
31928: LD_EXP 21
31932: PPUSH
31933: LD_STRING D3-LisaJ-Lisa-2
31935: PPUSH
31936: CALL_OW 88
// Say ( JMM , D3-LisaJ-JMM-2 ) ;
31940: LD_EXP 12
31944: PPUSH
31945: LD_STRING D3-LisaJ-JMM-2
31947: PPUSH
31948: CALL_OW 88
// Say ( Lisa , D3-LisaJ-Lisa-3 ) ;
31952: LD_EXP 21
31956: PPUSH
31957: LD_STRING D3-LisaJ-Lisa-3
31959: PPUSH
31960: CALL_OW 88
// end else
31964: GO 31998
// begin Say ( Lisa , D3-LisaL-Lisa-1 ) ;
31966: LD_EXP 21
31970: PPUSH
31971: LD_STRING D3-LisaL-Lisa-1
31973: PPUSH
31974: CALL_OW 88
// Say ( JMM , D3-LisaL-JMM-1 ) ;
31978: LD_EXP 12
31982: PPUSH
31983: LD_STRING D3-LisaL-JMM-1
31985: PPUSH
31986: CALL_OW 88
// joined := true ;
31990: LD_ADDR_VAR 0 5
31994: PUSH
31995: LD_INT 1
31997: ST_TO_ADDR
// end ; end else
31998: GO 32065
// begin if GetSide ( Joan ) = 7 then
32000: LD_EXP 34
32004: PPUSH
32005: CALL_OW 255
32009: PUSH
32010: LD_INT 7
32012: EQUAL
32013: IFFALSE 32053
// begin Say ( Lisa , D4-LisaJ-Lisa-1 ) ;
32015: LD_EXP 21
32019: PPUSH
32020: LD_STRING D4-LisaJ-Lisa-1
32022: PPUSH
32023: CALL_OW 88
// Say ( JMM , D4-LisaJ-JMM-1 ) ;
32027: LD_EXP 12
32031: PPUSH
32032: LD_STRING D4-LisaJ-JMM-1
32034: PPUSH
32035: CALL_OW 88
// Say ( Lisa , D4-LisaJ-Lisa-2 ) ;
32039: LD_EXP 21
32043: PPUSH
32044: LD_STRING D4-LisaJ-Lisa-2
32046: PPUSH
32047: CALL_OW 88
// end else
32051: GO 32065
// begin Say ( Lisa , D4-LisaL-Lisa-1 ) ;
32053: LD_EXP 21
32057: PPUSH
32058: LD_STRING D4-LisaL-Lisa-1
32060: PPUSH
32061: CALL_OW 88
// end ; end ; end else
32065: GO 33305
// if unit = Frank then
32067: LD_VAR 0 1
32071: PUSH
32072: LD_EXP 31
32076: EQUAL
32077: IFFALSE 32217
// begin joined := true ;
32079: LD_ADDR_VAR 0 5
32083: PUSH
32084: LD_INT 1
32086: ST_TO_ADDR
// if Frank in selected then
32087: LD_EXP 31
32091: PUSH
32092: LD_EXP 3
32096: IN
32097: IFFALSE 32167
// begin Say ( Frank , D3-Frank-Frank-1 ) ;
32099: LD_EXP 31
32103: PPUSH
32104: LD_STRING D3-Frank-Frank-1
32106: PPUSH
32107: CALL_OW 88
// Say ( JMM , D3-Frank-JMM-1 ) ;
32111: LD_EXP 12
32115: PPUSH
32116: LD_STRING D3-Frank-JMM-1
32118: PPUSH
32119: CALL_OW 88
// Say ( Frank , D3-Frank-Frank-2 ) ;
32123: LD_EXP 31
32127: PPUSH
32128: LD_STRING D3-Frank-Frank-2
32130: PPUSH
32131: CALL_OW 88
// if reached_lab then
32135: LD_EXP 5
32139: IFFALSE 32165
// begin Say ( JMM , D3-Frank-JMM-2 ) ;
32141: LD_EXP 12
32145: PPUSH
32146: LD_STRING D3-Frank-JMM-2
32148: PPUSH
32149: CALL_OW 88
// Say ( Frank , D3-Frank-Frank-3 ) ;
32153: LD_EXP 31
32157: PPUSH
32158: LD_STRING D3-Frank-Frank-3
32160: PPUSH
32161: CALL_OW 88
// end ; end else
32165: GO 32215
// begin Say ( Frank , D4-Frank-Frank-1 ) ;
32167: LD_EXP 31
32171: PPUSH
32172: LD_STRING D4-Frank-Frank-1
32174: PPUSH
32175: CALL_OW 88
// Say ( JMM , D4-Frank-JMM-1 ) ;
32179: LD_EXP 12
32183: PPUSH
32184: LD_STRING D4-Frank-JMM-1
32186: PPUSH
32187: CALL_OW 88
// Say ( Frank , D4-Frank-Frank-2 ) ;
32191: LD_EXP 31
32195: PPUSH
32196: LD_STRING D4-Frank-Frank-2
32198: PPUSH
32199: CALL_OW 88
// Say ( JMM , D4-Frank-JMM-2 ) ;
32203: LD_EXP 12
32207: PPUSH
32208: LD_STRING D4-Frank-JMM-2
32210: PPUSH
32211: CALL_OW 88
// end ; end else
32215: GO 33305
// if unit = Brown then
32217: LD_VAR 0 1
32221: PUSH
32222: LD_EXP 26
32226: EQUAL
32227: IFFALSE 32323
// begin if Brown in selected or gamma_commander = 2 then
32229: LD_EXP 26
32233: PUSH
32234: LD_EXP 3
32238: IN
32239: PUSH
32240: LD_EXP 10
32244: PUSH
32245: LD_INT 2
32247: EQUAL
32248: OR
32249: IFFALSE 32285
// begin Say ( Brown , D3-Soldier1-Sol1-1 ) ;
32251: LD_EXP 26
32255: PPUSH
32256: LD_STRING D3-Soldier1-Sol1-1
32258: PPUSH
32259: CALL_OW 88
// Say ( JMM , D3-Soldier1-JMM-1 ) ;
32263: LD_EXP 12
32267: PPUSH
32268: LD_STRING D3-Soldier1-JMM-1
32270: PPUSH
32271: CALL_OW 88
// joined := true ;
32275: LD_ADDR_VAR 0 5
32279: PUSH
32280: LD_INT 1
32282: ST_TO_ADDR
// end else
32283: GO 32321
// begin Say ( Brown , D4-Soldier2-Sol1-1 ) ;
32285: LD_EXP 26
32289: PPUSH
32290: LD_STRING D4-Soldier2-Sol1-1
32292: PPUSH
32293: CALL_OW 88
// Say ( JMM , D4-Soldier1-JMM-1 ) ;
32297: LD_EXP 12
32301: PPUSH
32302: LD_STRING D4-Soldier1-JMM-1
32304: PPUSH
32305: CALL_OW 88
// Say ( Brown , D4-Soldier2-Sol1-2 ) ;
32309: LD_EXP 26
32313: PPUSH
32314: LD_STRING D4-Soldier2-Sol1-2
32316: PPUSH
32317: CALL_OW 88
// end ; end else
32321: GO 33305
// if unit = Donaldson then
32323: LD_VAR 0 1
32327: PUSH
32328: LD_EXP 22
32332: EQUAL
32333: IFFALSE 32429
// begin if Donaldson in selected or gamma_commander = 1 then
32335: LD_EXP 22
32339: PUSH
32340: LD_EXP 3
32344: IN
32345: PUSH
32346: LD_EXP 10
32350: PUSH
32351: LD_INT 1
32353: EQUAL
32354: OR
32355: IFFALSE 32391
// begin Say ( Donaldson , D3-Soldier2-FSol2-1 ) ;
32357: LD_EXP 22
32361: PPUSH
32362: LD_STRING D3-Soldier2-FSol2-1
32364: PPUSH
32365: CALL_OW 88
// Say ( JMM , D3-Soldier2-JMM-1 ) ;
32369: LD_EXP 12
32373: PPUSH
32374: LD_STRING D3-Soldier2-JMM-1
32376: PPUSH
32377: CALL_OW 88
// joined := true ;
32381: LD_ADDR_VAR 0 5
32385: PUSH
32386: LD_INT 1
32388: ST_TO_ADDR
// end else
32389: GO 32427
// begin Say ( unit , D4-Soldier1-FSol1-1 ) ;
32391: LD_VAR 0 1
32395: PPUSH
32396: LD_STRING D4-Soldier1-FSol1-1
32398: PPUSH
32399: CALL_OW 88
// Say ( JMM , D4-Soldier1-JMM-1 ) ;
32403: LD_EXP 12
32407: PPUSH
32408: LD_STRING D4-Soldier1-JMM-1
32410: PPUSH
32411: CALL_OW 88
// Say ( unit , D4-Soldier1-FSol1-2 ) ;
32415: LD_VAR 0 1
32419: PPUSH
32420: LD_STRING D4-Soldier1-FSol1-2
32422: PPUSH
32423: CALL_OW 88
// end ; end else
32427: GO 33305
// if unit = Cyrus then
32429: LD_VAR 0 1
32433: PUSH
32434: LD_EXP 24
32438: EQUAL
32439: IFFALSE 32513
// begin if Cyrus in selected then
32441: LD_EXP 24
32445: PUSH
32446: LD_EXP 3
32450: IN
32451: IFFALSE 32487
// begin Say ( Cyrus , D3-Cyrus-Cyrus-1 ) ;
32453: LD_EXP 24
32457: PPUSH
32458: LD_STRING D3-Cyrus-Cyrus-1
32460: PPUSH
32461: CALL_OW 88
// Say ( JMM , D3-Cyrus-JMM-1 ) ;
32465: LD_EXP 12
32469: PPUSH
32470: LD_STRING D3-Cyrus-JMM-1
32472: PPUSH
32473: CALL_OW 88
// joined := true ;
32477: LD_ADDR_VAR 0 5
32481: PUSH
32482: LD_INT 1
32484: ST_TO_ADDR
// end else
32485: GO 32511
// begin Say ( Cyrus , D4-Cyrus-Cyrus-1 ) ;
32487: LD_EXP 24
32491: PPUSH
32492: LD_STRING D4-Cyrus-Cyrus-1
32494: PPUSH
32495: CALL_OW 88
// Say ( JMM , D4-Cyrus-JMM-1 ) ;
32499: LD_EXP 12
32503: PPUSH
32504: LD_STRING D4-Cyrus-JMM-1
32506: PPUSH
32507: CALL_OW 88
// end ; end else
32511: GO 33305
// if unit = Bobby then
32513: LD_VAR 0 1
32517: PUSH
32518: LD_EXP 23
32522: EQUAL
32523: IFFALSE 32609
// begin if Bobby in selected then
32525: LD_EXP 23
32529: PUSH
32530: LD_EXP 3
32534: IN
32535: IFFALSE 32571
// begin Say ( Bobby , D3-Bobby-Bobby-1 ) ;
32537: LD_EXP 23
32541: PPUSH
32542: LD_STRING D3-Bobby-Bobby-1
32544: PPUSH
32545: CALL_OW 88
// Say ( JMM , D3-Bobby-JMM-1 ) ;
32549: LD_EXP 12
32553: PPUSH
32554: LD_STRING D3-Bobby-JMM-1
32556: PPUSH
32557: CALL_OW 88
// joined := true ;
32561: LD_ADDR_VAR 0 5
32565: PUSH
32566: LD_INT 1
32568: ST_TO_ADDR
// end else
32569: GO 32607
// begin Say ( Bobby , D4-Bobby-Bobby-1 ) ;
32571: LD_EXP 23
32575: PPUSH
32576: LD_STRING D4-Bobby-Bobby-1
32578: PPUSH
32579: CALL_OW 88
// Say ( JMM , D4-Bobby-JMM-1 ) ;
32583: LD_EXP 12
32587: PPUSH
32588: LD_STRING D4-Bobby-JMM-1
32590: PPUSH
32591: CALL_OW 88
// Say ( Bobby , D4-Bobby-Bobby-2 ) ;
32595: LD_EXP 23
32599: PPUSH
32600: LD_STRING D4-Bobby-Bobby-2
32602: PPUSH
32603: CALL_OW 88
// end ; end else
32607: GO 33305
// if unit = Cornel then
32609: LD_VAR 0 1
32613: PUSH
32614: LD_EXP 29
32618: EQUAL
32619: IFFALSE 32717
// begin if Cornel in selected then
32621: LD_EXP 29
32625: PUSH
32626: LD_EXP 3
32630: IN
32631: IFFALSE 32679
// begin Say ( Cornel , D3-Mark-Corn-1 ) ;
32633: LD_EXP 29
32637: PPUSH
32638: LD_STRING D3-Mark-Corn-1
32640: PPUSH
32641: CALL_OW 88
// Say ( JMM , D3-Mark-JMM-1 ) ;
32645: LD_EXP 12
32649: PPUSH
32650: LD_STRING D3-Mark-JMM-1
32652: PPUSH
32653: CALL_OW 88
// Say ( Cornel , D3-Mark-Corn-2 ) ;
32657: LD_EXP 29
32661: PPUSH
32662: LD_STRING D3-Mark-Corn-2
32664: PPUSH
32665: CALL_OW 88
// joined := true ;
32669: LD_ADDR_VAR 0 5
32673: PUSH
32674: LD_INT 1
32676: ST_TO_ADDR
// end else
32677: GO 32715
// begin Say ( Cornel , D4-Mark-Corn-1 ) ;
32679: LD_EXP 29
32683: PPUSH
32684: LD_STRING D4-Mark-Corn-1
32686: PPUSH
32687: CALL_OW 88
// Say ( JMM , D3-Joan-JMM-1 ) ;
32691: LD_EXP 12
32695: PPUSH
32696: LD_STRING D3-Joan-JMM-1
32698: PPUSH
32699: CALL_OW 88
// Say ( Cornel , D4-Mark-Corn-2 ) ;
32703: LD_EXP 29
32707: PPUSH
32708: LD_STRING D4-Mark-Corn-2
32710: PPUSH
32711: CALL_OW 88
// end ; end else
32715: GO 33305
// if unit = Gary then
32717: LD_VAR 0 1
32721: PUSH
32722: LD_EXP 30
32726: EQUAL
32727: IFFALSE 32811
// begin if Gary in selected then
32729: LD_EXP 30
32733: PUSH
32734: LD_EXP 3
32738: IN
32739: IFFALSE 32775
// begin Say ( Gary , D3-Gary-Gary-1 ) ;
32741: LD_EXP 30
32745: PPUSH
32746: LD_STRING D3-Gary-Gary-1
32748: PPUSH
32749: CALL_OW 88
// Say ( JMM , D3-Gary-JMM-1 ) ;
32753: LD_EXP 12
32757: PPUSH
32758: LD_STRING D3-Gary-JMM-1
32760: PPUSH
32761: CALL_OW 88
// joined := true ;
32765: LD_ADDR_VAR 0 5
32769: PUSH
32770: LD_INT 1
32772: ST_TO_ADDR
// end else
32773: GO 32809
// begin Say ( Gary , D4-Gary-Gary-1 ) ;
32775: LD_EXP 30
32779: PPUSH
32780: LD_STRING D4-Gary-Gary-1
32782: PPUSH
32783: CALL_OW 88
// SetSide ( Gary , 1 ) ;
32787: LD_EXP 30
32791: PPUSH
32792: LD_INT 1
32794: PPUSH
32795: CALL_OW 235
// DialogueOff ;
32799: CALL_OW 7
// InGameOff ;
32803: CALL_OW 9
// exit ;
32807: GO 33497
// end ; end else
32809: GO 33305
// if unit = Kikuchi then
32811: LD_VAR 0 1
32815: PUSH
32816: LD_EXP 32
32820: EQUAL
32821: IFFALSE 32905
// begin if Kikuchi in selected then
32823: LD_EXP 32
32827: PUSH
32828: LD_EXP 3
32832: IN
32833: IFFALSE 32869
// begin Say ( Kikuchi , D3-Yamako-Yam-1 ) ;
32835: LD_EXP 32
32839: PPUSH
32840: LD_STRING D3-Yamako-Yam-1
32842: PPUSH
32843: CALL_OW 88
// Say ( JMM , D3-Soldier2-JMM-1 ) ;
32847: LD_EXP 12
32851: PPUSH
32852: LD_STRING D3-Soldier2-JMM-1
32854: PPUSH
32855: CALL_OW 88
// joined := true ;
32859: LD_ADDR_VAR 0 5
32863: PUSH
32864: LD_INT 1
32866: ST_TO_ADDR
// end else
32867: GO 32903
// begin Say ( Kikuchi , D4-Yamako-Yam-1 ) ;
32869: LD_EXP 32
32873: PPUSH
32874: LD_STRING D4-Yamako-Yam-1
32876: PPUSH
32877: CALL_OW 88
// SetSide ( Kikuchi , 1 ) ;
32881: LD_EXP 32
32885: PPUSH
32886: LD_INT 1
32888: PPUSH
32889: CALL_OW 235
// DialogueOff ;
32893: CALL_OW 7
// InGameOff ;
32897: CALL_OW 9
// exit ;
32901: GO 33497
// end ; end else
32903: GO 33305
// if unit = Gladstone then
32905: LD_VAR 0 1
32909: PUSH
32910: LD_EXP 27
32914: EQUAL
32915: IFFALSE 32989
// begin if Gladstone in selected then
32917: LD_EXP 27
32921: PUSH
32922: LD_EXP 3
32926: IN
32927: IFFALSE 32963
// begin joined := true ;
32929: LD_ADDR_VAR 0 5
32933: PUSH
32934: LD_INT 1
32936: ST_TO_ADDR
// Say ( JMM , D3-Tim-JMM-1 ) ;
32937: LD_EXP 12
32941: PPUSH
32942: LD_STRING D3-Tim-JMM-1
32944: PPUSH
32945: CALL_OW 88
// Say ( Gladstone , D3-Tim-Glad-1 ) ;
32949: LD_EXP 27
32953: PPUSH
32954: LD_STRING D3-Tim-Glad-1
32956: PPUSH
32957: CALL_OW 88
// end else
32961: GO 32987
// begin Say ( JMM , D4-Tim-JMM-1 ) ;
32963: LD_EXP 12
32967: PPUSH
32968: LD_STRING D4-Tim-JMM-1
32970: PPUSH
32971: CALL_OW 88
// Say ( Gladstone , D4-Tim-Glad-1 ) ;
32975: LD_EXP 27
32979: PPUSH
32980: LD_STRING D4-Tim-Glad-1
32982: PPUSH
32983: CALL_OW 88
// end ; end else
32987: GO 33305
// if unit = Denis then
32989: LD_VAR 0 1
32993: PUSH
32994: LD_EXP 25
32998: EQUAL
32999: IFFALSE 33035
// begin joined := true ;
33001: LD_ADDR_VAR 0 5
33005: PUSH
33006: LD_INT 1
33008: ST_TO_ADDR
// Say ( Denis , D3-Denis-Den-1 ) ;
33009: LD_EXP 25
33013: PPUSH
33014: LD_STRING D3-Denis-Den-1
33016: PPUSH
33017: CALL_OW 88
// Say ( JMM , D3-Denis-JMM-1 ) ;
33021: LD_EXP 12
33025: PPUSH
33026: LD_STRING D3-Denis-JMM-1
33028: PPUSH
33029: CALL_OW 88
// end else
33033: GO 33305
// if unit = Simms then
33035: LD_VAR 0 1
33039: PUSH
33040: LD_EXP 33
33044: EQUAL
33045: IFFALSE 33081
// begin joined := true ;
33047: LD_ADDR_VAR 0 5
33051: PUSH
33052: LD_INT 1
33054: ST_TO_ADDR
// Say ( Simms , D3-Simms-Sim-1 ) ;
33055: LD_EXP 33
33059: PPUSH
33060: LD_STRING D3-Simms-Sim-1
33062: PPUSH
33063: CALL_OW 88
// Say ( JMM , D3-Simms-JMM-1 ) ;
33067: LD_EXP 12
33071: PPUSH
33072: LD_STRING D3-Simms-JMM-1
33074: PPUSH
33075: CALL_OW 88
// end else
33079: GO 33305
// if unit = DeltaDoctor then
33081: LD_VAR 0 1
33085: PUSH
33086: LD_EXP 35
33090: EQUAL
33091: IFFALSE 33127
// begin joined := true ;
33093: LD_ADDR_VAR 0 5
33097: PUSH
33098: LD_INT 1
33100: ST_TO_ADDR
// Say ( DeltaDoctor , D3-Soldier1-Sol1-1 ) ;
33101: LD_EXP 35
33105: PPUSH
33106: LD_STRING D3-Soldier1-Sol1-1
33108: PPUSH
33109: CALL_OW 88
// Say ( JMM , D3-Soldier1-JMM-1 ) ;
33113: LD_EXP 12
33117: PPUSH
33118: LD_STRING D3-Soldier1-JMM-1
33120: PPUSH
33121: CALL_OW 88
// end else
33125: GO 33305
// begin joined := unit in selected ;
33127: LD_ADDR_VAR 0 5
33131: PUSH
33132: LD_VAR 0 1
33136: PUSH
33137: LD_EXP 3
33141: IN
33142: ST_TO_ADDR
// if joined then
33143: LD_VAR 0 5
33147: IFFALSE 33216
// begin if GetSex ( unit ) = sex_male then
33149: LD_VAR 0 1
33153: PPUSH
33154: CALL_OW 258
33158: PUSH
33159: LD_INT 1
33161: EQUAL
33162: IFFALSE 33190
// begin Say ( unit , D3-Soldier1-Sol1-1 ) ;
33164: LD_VAR 0 1
33168: PPUSH
33169: LD_STRING D3-Soldier1-Sol1-1
33171: PPUSH
33172: CALL_OW 88
// Say ( JMM , D3-Soldier1-JMM-1 ) ;
33176: LD_EXP 12
33180: PPUSH
33181: LD_STRING D3-Soldier1-JMM-1
33183: PPUSH
33184: CALL_OW 88
// end else
33188: GO 33214
// begin Say ( unit , D3-Soldier2-FSol2-1 ) ;
33190: LD_VAR 0 1
33194: PPUSH
33195: LD_STRING D3-Soldier2-FSol2-1
33197: PPUSH
33198: CALL_OW 88
// Say ( JMM , D3-Soldier2-JMM-1 ) ;
33202: LD_EXP 12
33206: PPUSH
33207: LD_STRING D3-Soldier2-JMM-1
33209: PPUSH
33210: CALL_OW 88
// end ; end else
33214: GO 33305
// begin if GetSex ( unit ) = sex_male then
33216: LD_VAR 0 1
33220: PPUSH
33221: CALL_OW 258
33225: PUSH
33226: LD_INT 1
33228: EQUAL
33229: IFFALSE 33269
// begin Say ( unit , D4-Soldier2-Sol1-1 ) ;
33231: LD_VAR 0 1
33235: PPUSH
33236: LD_STRING D4-Soldier2-Sol1-1
33238: PPUSH
33239: CALL_OW 88
// Say ( JMM , D4-Soldier2-JMM-1 ) ;
33243: LD_EXP 12
33247: PPUSH
33248: LD_STRING D4-Soldier2-JMM-1
33250: PPUSH
33251: CALL_OW 88
// Say ( unit , D4-Soldier2-Sol2-1 ) ;
33255: LD_VAR 0 1
33259: PPUSH
33260: LD_STRING D4-Soldier2-Sol2-1
33262: PPUSH
33263: CALL_OW 88
// end else
33267: GO 33305
// begin Say ( unit , D4-Soldier1-FSol1-1 ) ;
33269: LD_VAR 0 1
33273: PPUSH
33274: LD_STRING D4-Soldier1-FSol1-1
33276: PPUSH
33277: CALL_OW 88
// Say ( JMM , D4-Soldier1-JMM-1 ) ;
33281: LD_EXP 12
33285: PPUSH
33286: LD_STRING D4-Soldier1-JMM-1
33288: PPUSH
33289: CALL_OW 88
// Say ( unit , D4-Soldier1-FSol1-2 ) ;
33293: LD_VAR 0 1
33297: PPUSH
33298: LD_STRING D4-Soldier1-FSol1-2
33300: PPUSH
33301: CALL_OW 88
// end ; end ; end ; DialogueOff ;
33305: CALL_OW 7
// InGameOff ;
33309: CALL_OW 9
// if building then
33313: LD_VAR 0 3
33317: IFFALSE 33418
// begin SetSide ( JMM , side ) ;
33319: LD_EXP 12
33323: PPUSH
33324: LD_VAR 0 4
33328: PPUSH
33329: CALL_OW 235
// ComExitBuilding ( JMM ) ;
33333: LD_EXP 12
33337: PPUSH
33338: CALL_OW 122
// if joined then
33342: LD_VAR 0 5
33346: IFFALSE 33385
// begin SetSide ( unit , side ) ;
33348: LD_VAR 0 1
33352: PPUSH
33353: LD_VAR 0 4
33357: PPUSH
33358: CALL_OW 235
// SetSide ( building , 1 ) ;
33362: LD_VAR 0 3
33366: PPUSH
33367: LD_INT 1
33369: PPUSH
33370: CALL_OW 235
// ComExitBuilding ( unit ) ;
33374: LD_VAR 0 1
33378: PPUSH
33379: CALL_OW 122
// end else
33383: GO 33416
// begin wait ( 0 0$10 ) ;
33385: LD_INT 350
33387: PPUSH
33388: CALL_OW 67
// SetSide ( unit , 1 ) ;
33392: LD_VAR 0 1
33396: PPUSH
33397: LD_INT 1
33399: PPUSH
33400: CALL_OW 235
// SetSide ( building , 1 ) ;
33404: LD_VAR 0 3
33408: PPUSH
33409: LD_INT 1
33411: PPUSH
33412: CALL_OW 235
// end ; end else
33416: GO 33497
// begin ComStop ( [ JMM , unit ] ) ;
33418: LD_EXP 12
33422: PUSH
33423: LD_VAR 0 1
33427: PUSH
33428: EMPTY
33429: LIST
33430: LIST
33431: PPUSH
33432: CALL_OW 141
// if joined then
33436: LD_VAR 0 5
33440: IFFALSE 33458
// SetSide ( unit , side ) else
33442: LD_VAR 0 1
33446: PPUSH
33447: LD_VAR 0 4
33451: PPUSH
33452: CALL_OW 235
33456: GO 33497
// begin repeat wait ( 0 0$1 ) ;
33458: LD_INT 35
33460: PPUSH
33461: CALL_OW 67
// until GetDistUnits ( JMM , unit ) > 11 ;
33465: LD_EXP 12
33469: PPUSH
33470: LD_VAR 0 1
33474: PPUSH
33475: CALL_OW 296
33479: PUSH
33480: LD_INT 11
33482: GREATER
33483: IFFALSE 33458
// SetSide ( unit , 1 ) ;
33485: LD_VAR 0 1
33489: PPUSH
33490: LD_INT 1
33492: PPUSH
33493: CALL_OW 235
// end ; end ; end ;
33497: LD_VAR 0 2
33501: RET
// every 0 0$01 trigger IsInUnit ( JMM ) = amlab do
33502: LD_EXP 12
33506: PPUSH
33507: CALL_OW 310
33511: PUSH
33512: LD_INT 47
33514: EQUAL
33515: IFFALSE 33583
33517: GO 33519
33519: DISABLE
// begin ChangeMissionObjectives ( M1a ) ;
33520: LD_STRING M1a
33522: PPUSH
33523: CALL_OW 337
// SetTech ( tech_Soporific , 7 , state_researched ) ;
33527: LD_INT 13
33529: PPUSH
33530: LD_INT 7
33532: PPUSH
33533: LD_INT 2
33535: PPUSH
33536: CALL_OW 322
// SetTech ( tech_SpacAnom , 7 , state_researched ) ;
33540: LD_INT 29
33542: PPUSH
33543: LD_INT 7
33545: PPUSH
33546: LD_INT 2
33548: PPUSH
33549: CALL_OW 322
// SetClass ( JMM , class_bazooker ) ;
33553: LD_EXP 12
33557: PPUSH
33558: LD_INT 9
33560: PPUSH
33561: CALL_OW 336
// can_escape := true ;
33565: LD_ADDR_EXP 6
33569: PUSH
33570: LD_INT 1
33572: ST_TO_ADDR
// SetAreaMapShow ( escape_area , 1 ) ;
33573: LD_INT 19
33575: PPUSH
33576: LD_INT 1
33578: PPUSH
33579: CALL_OW 424
// end ;
33583: END
// every 0 0$01 trigger FilterAllUnits ( [ [ f_side , 4 ] , [ f_weapon , us_cargo_bay ] ] ) do var i ;
33584: LD_INT 22
33586: PUSH
33587: LD_INT 4
33589: PUSH
33590: EMPTY
33591: LIST
33592: LIST
33593: PUSH
33594: LD_INT 34
33596: PUSH
33597: LD_INT 12
33599: PUSH
33600: EMPTY
33601: LIST
33602: LIST
33603: PUSH
33604: EMPTY
33605: LIST
33606: LIST
33607: PPUSH
33608: CALL_OW 69
33612: IFFALSE 33694
33614: GO 33616
33616: DISABLE
33617: LD_INT 0
33619: PPUSH
// begin enable ;
33620: ENABLE
// for i in FilterAllUnits ( [ [ f_side , 4 ] , [ f_weapon , us_cargo_bay ] ] ) do
33621: LD_ADDR_VAR 0 1
33625: PUSH
33626: LD_INT 22
33628: PUSH
33629: LD_INT 4
33631: PUSH
33632: EMPTY
33633: LIST
33634: LIST
33635: PUSH
33636: LD_INT 34
33638: PUSH
33639: LD_INT 12
33641: PUSH
33642: EMPTY
33643: LIST
33644: LIST
33645: PUSH
33646: EMPTY
33647: LIST
33648: LIST
33649: PPUSH
33650: CALL_OW 69
33654: PUSH
33655: FOR_IN
33656: IFFALSE 33692
// if GetDistUnits ( i , JMM ) < 6 then
33658: LD_VAR 0 1
33662: PPUSH
33663: LD_EXP 12
33667: PPUSH
33668: CALL_OW 296
33672: PUSH
33673: LD_INT 6
33675: LESS
33676: IFFALSE 33690
// SetSide ( i , 7 ) ;
33678: LD_VAR 0 1
33682: PPUSH
33683: LD_INT 7
33685: PPUSH
33686: CALL_OW 235
33690: GO 33655
33692: POP
33693: POP
// end ;
33694: PPOPN 1
33696: END
// every 0 0$01 trigger can_escape and not FilterUnitsExceptArea ( escape_area , [ [ f_side , 7 ] , [ f_type , unit_human ] ] ) and not FindArtifact ( 3 ) and not FindArtifact ( 5 ) do var all_taken , tmp , m1 , m2 , m3 ;
33697: LD_EXP 6
33701: PUSH
33702: LD_INT 19
33704: PPUSH
33705: LD_INT 22
33707: PUSH
33708: LD_INT 7
33710: PUSH
33711: EMPTY
33712: LIST
33713: LIST
33714: PUSH
33715: LD_INT 21
33717: PUSH
33718: LD_INT 1
33720: PUSH
33721: EMPTY
33722: LIST
33723: LIST
33724: PUSH
33725: EMPTY
33726: LIST
33727: LIST
33728: PPUSH
33729: CALL_OW 71
33733: NOT
33734: AND
33735: PUSH
33736: LD_INT 3
33738: PPUSH
33739: CALL_OW 469
33743: NOT
33744: AND
33745: PUSH
33746: LD_INT 5
33748: PPUSH
33749: CALL_OW 469
33753: NOT
33754: AND
33755: IFFALSE 35244
33757: GO 33759
33759: DISABLE
33760: LD_INT 0
33762: PPUSH
33763: PPUSH
33764: PPUSH
33765: PPUSH
33766: PPUSH
// begin m1 := false ;
33767: LD_ADDR_VAR 0 3
33771: PUSH
33772: LD_INT 0
33774: ST_TO_ADDR
// m2 := false ;
33775: LD_ADDR_VAR 0 4
33779: PUSH
33780: LD_INT 0
33782: ST_TO_ADDR
// m3 := false ;
33783: LD_ADDR_VAR 0 5
33787: PUSH
33788: LD_INT 0
33790: ST_TO_ADDR
// all_taken := ( UnitFilter ( selected , [ [ f_side , 4 ] , [ f_type , unit_human ] ] ) = 0 ) ;
33791: LD_ADDR_VAR 0 1
33795: PUSH
33796: LD_EXP 3
33800: PPUSH
33801: LD_INT 22
33803: PUSH
33804: LD_INT 4
33806: PUSH
33807: EMPTY
33808: LIST
33809: LIST
33810: PUSH
33811: LD_INT 21
33813: PUSH
33814: LD_INT 1
33816: PUSH
33817: EMPTY
33818: LIST
33819: LIST
33820: PUSH
33821: EMPTY
33822: LIST
33823: LIST
33824: PPUSH
33825: CALL_OW 72
33829: PUSH
33830: LD_INT 0
33832: EQUAL
33833: ST_TO_ADDR
// if not all_taken then
33834: LD_VAR 0 1
33838: NOT
33839: IFFALSE 33980
// case query ( Q1 ) of 1 :
33841: LD_STRING Q1
33843: PPUSH
33844: CALL_OW 97
33848: PUSH
33849: LD_INT 1
33851: DOUBLE
33852: EQUAL
33853: IFTRUE 33857
33855: GO 33968
33857: POP
// begin repeat wait ( 0 0$1 ) ;
33858: LD_INT 35
33860: PPUSH
33861: CALL_OW 67
// until UnitFilter ( selected , [ [ f_side , 4 ] , [ f_type , unit_human ] ] ) = 0 and not FilterUnitsExceptArea ( escape_area , [ [ f_side , 7 ] , [ f_type , unit_human ] ] ) and not FindArtifact ( 3 ) and not FindArtifact ( 5 ) ;
33865: LD_EXP 3
33869: PPUSH
33870: LD_INT 22
33872: PUSH
33873: LD_INT 4
33875: PUSH
33876: EMPTY
33877: LIST
33878: LIST
33879: PUSH
33880: LD_INT 21
33882: PUSH
33883: LD_INT 1
33885: PUSH
33886: EMPTY
33887: LIST
33888: LIST
33889: PUSH
33890: EMPTY
33891: LIST
33892: LIST
33893: PPUSH
33894: CALL_OW 72
33898: PUSH
33899: LD_INT 0
33901: EQUAL
33902: PUSH
33903: LD_INT 19
33905: PPUSH
33906: LD_INT 22
33908: PUSH
33909: LD_INT 7
33911: PUSH
33912: EMPTY
33913: LIST
33914: LIST
33915: PUSH
33916: LD_INT 21
33918: PUSH
33919: LD_INT 1
33921: PUSH
33922: EMPTY
33923: LIST
33924: LIST
33925: PUSH
33926: EMPTY
33927: LIST
33928: LIST
33929: PPUSH
33930: CALL_OW 71
33934: NOT
33935: AND
33936: PUSH
33937: LD_INT 3
33939: PPUSH
33940: CALL_OW 469
33944: NOT
33945: AND
33946: PUSH
33947: LD_INT 5
33949: PPUSH
33950: CALL_OW 469
33954: NOT
33955: AND
33956: IFFALSE 33858
// all_taken := true ;
33958: LD_ADDR_VAR 0 1
33962: PUSH
33963: LD_INT 1
33965: ST_TO_ADDR
// end ; 2 :
33966: GO 33980
33968: LD_INT 2
33970: DOUBLE
33971: EQUAL
33972: IFTRUE 33976
33974: GO 33979
33976: POP
// ; end ;
33977: GO 33980
33979: POP
// if team_kill_counter then
33980: LD_EXP 9
33984: IFFALSE 34000
// Say ( JMM , D5-JMM-1 ) else
33986: LD_EXP 12
33990: PPUSH
33991: LD_STRING D5-JMM-1
33993: PPUSH
33994: CALL_OW 88
33998: GO 34012
// Say ( JMM , D5-JMM-1a ) ;
34000: LD_EXP 12
34004: PPUSH
34005: LD_STRING D5-JMM-1a
34007: PPUSH
34008: CALL_OW 88
// if all_taken then
34012: LD_VAR 0 1
34016: IFFALSE 34038
// begin AddMedal ( All , 1 ) ;
34018: LD_STRING All
34020: PPUSH
34021: LD_INT 1
34023: PPUSH
34024: CALL_OW 101
// m1 := true ;
34028: LD_ADDR_VAR 0 3
34032: PUSH
34033: LD_INT 1
34035: ST_TO_ADDR
// end else
34036: GO 34049
// AddMedal ( All , - 1 ) ;
34038: LD_STRING All
34040: PPUSH
34041: LD_INT 1
34043: NEG
34044: PPUSH
34045: CALL_OW 101
// if team_kill_counter then
34049: LD_EXP 9
34053: IFFALSE 34068
// AddMedal ( Save , - 1 ) else
34055: LD_STRING Save
34057: PPUSH
34058: LD_INT 1
34060: NEG
34061: PPUSH
34062: CALL_OW 101
34066: GO 34086
// begin AddMedal ( Save , 1 ) ;
34068: LD_STRING Save
34070: PPUSH
34071: LD_INT 1
34073: PPUSH
34074: CALL_OW 101
// m2 := true ;
34078: LD_ADDR_VAR 0 4
34082: PUSH
34083: LD_INT 1
34085: ST_TO_ADDR
// end ; if friends_kill_counter >= [ 2 , 1 , 1 ] [ Difficulty ] then
34086: LD_EXP 8
34090: PUSH
34091: LD_INT 2
34093: PUSH
34094: LD_INT 1
34096: PUSH
34097: LD_INT 1
34099: PUSH
34100: EMPTY
34101: LIST
34102: LIST
34103: LIST
34104: PUSH
34105: LD_OWVAR 67
34109: ARRAY
34110: GREATEREQUAL
34111: IFFALSE 34126
// AddMedal ( Friendship , - 1 ) else
34113: LD_STRING Friendship
34115: PPUSH
34116: LD_INT 1
34118: NEG
34119: PPUSH
34120: CALL_OW 101
34124: GO 34144
// begin AddMedal ( Friendship , 1 ) ;
34126: LD_STRING Friendship
34128: PPUSH
34129: LD_INT 1
34131: PPUSH
34132: CALL_OW 101
// m3 := true ;
34136: LD_ADDR_VAR 0 5
34140: PUSH
34141: LD_INT 1
34143: ST_TO_ADDR
// end ; if m1 and m2 and m3 and Difficulty = 3 then
34144: LD_VAR 0 3
34148: PUSH
34149: LD_VAR 0 4
34153: AND
34154: PUSH
34155: LD_VAR 0 5
34159: AND
34160: PUSH
34161: LD_OWVAR 67
34165: PUSH
34166: LD_INT 3
34168: EQUAL
34169: AND
34170: IFFALSE 34182
// SetAchievementEX ( ACH_AMER , 16 ) ;
34172: LD_STRING ACH_AMER
34174: PPUSH
34175: LD_INT 16
34177: PPUSH
34178: CALL_OW 564
// GiveMedals ( MAIN ) ;
34182: LD_STRING MAIN
34184: PPUSH
34185: CALL_OW 102
// tmp := FilterAllUnits ( [ [ [ f_side , 7 ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] , [ f_class , 5 ] , [ f_class , 8 ] , [ f_class , 9 ] ] ] ] ) ;
34189: LD_ADDR_VAR 0 2
34193: PUSH
34194: LD_INT 22
34196: PUSH
34197: LD_INT 7
34199: PUSH
34200: EMPTY
34201: LIST
34202: LIST
34203: PUSH
34204: LD_INT 2
34206: PUSH
34207: LD_INT 25
34209: PUSH
34210: LD_INT 1
34212: PUSH
34213: EMPTY
34214: LIST
34215: LIST
34216: PUSH
34217: LD_INT 25
34219: PUSH
34220: LD_INT 2
34222: PUSH
34223: EMPTY
34224: LIST
34225: LIST
34226: PUSH
34227: LD_INT 25
34229: PUSH
34230: LD_INT 3
34232: PUSH
34233: EMPTY
34234: LIST
34235: LIST
34236: PUSH
34237: LD_INT 25
34239: PUSH
34240: LD_INT 4
34242: PUSH
34243: EMPTY
34244: LIST
34245: LIST
34246: PUSH
34247: LD_INT 25
34249: PUSH
34250: LD_INT 5
34252: PUSH
34253: EMPTY
34254: LIST
34255: LIST
34256: PUSH
34257: LD_INT 25
34259: PUSH
34260: LD_INT 8
34262: PUSH
34263: EMPTY
34264: LIST
34265: LIST
34266: PUSH
34267: LD_INT 25
34269: PUSH
34270: LD_INT 9
34272: PUSH
34273: EMPTY
34274: LIST
34275: LIST
34276: PUSH
34277: EMPTY
34278: LIST
34279: LIST
34280: LIST
34281: LIST
34282: LIST
34283: LIST
34284: LIST
34285: LIST
34286: PUSH
34287: EMPTY
34288: LIST
34289: LIST
34290: PUSH
34291: EMPTY
34292: LIST
34293: PPUSH
34294: CALL_OW 69
34298: ST_TO_ADDR
// RewardPeople ( tmp ^ Roth ) ;
34299: LD_VAR 0 2
34303: PUSH
34304: LD_EXP 13
34308: ADD
34309: PPUSH
34310: CALL_OW 43
// SaveCharacters ( JMM , 12a_JMM ) ;
34314: LD_EXP 12
34318: PPUSH
34319: LD_STRING 12a_JMM
34321: PPUSH
34322: CALL_OW 38
// if IsLive ( Roth ) then
34326: LD_EXP 13
34330: PPUSH
34331: CALL_OW 300
34335: IFFALSE 34349
// SaveCharacters ( Roth , 12a_Roth ) ;
34337: LD_EXP 13
34341: PPUSH
34342: LD_STRING 12a_Roth
34344: PPUSH
34345: CALL_OW 38
// if Lisa in tmp then
34349: LD_EXP 21
34353: PUSH
34354: LD_VAR 0 2
34358: IN
34359: IFFALSE 34375
// SaveCharacters ( Lisa , 12a_Lisa ) else
34361: LD_EXP 21
34365: PPUSH
34366: LD_STRING 12a_Lisa
34368: PPUSH
34369: CALL_OW 38
34373: GO 34393
// if Lisa then
34375: LD_EXP 21
34379: IFFALSE 34393
// SaveCharacters ( Lisa , 12p_Lisa ) ;
34381: LD_EXP 21
34385: PPUSH
34386: LD_STRING 12p_Lisa
34388: PPUSH
34389: CALL_OW 38
// if Donaldson in tmp then
34393: LD_EXP 22
34397: PUSH
34398: LD_VAR 0 2
34402: IN
34403: IFFALSE 34419
// SaveCharacters ( Donaldson , 12a_Donaldson ) else
34405: LD_EXP 22
34409: PPUSH
34410: LD_STRING 12a_Donaldson
34412: PPUSH
34413: CALL_OW 38
34417: GO 34437
// if Donaldson then
34419: LD_EXP 22
34423: IFFALSE 34437
// SaveCharacters ( Donaldson , 12p_Donaldson ) ;
34425: LD_EXP 22
34429: PPUSH
34430: LD_STRING 12p_Donaldson
34432: PPUSH
34433: CALL_OW 38
// if Bobby in tmp then
34437: LD_EXP 23
34441: PUSH
34442: LD_VAR 0 2
34446: IN
34447: IFFALSE 34463
// SaveCharacters ( Bobby , 12a_Bobby ) else
34449: LD_EXP 23
34453: PPUSH
34454: LD_STRING 12a_Bobby
34456: PPUSH
34457: CALL_OW 38
34461: GO 34481
// if Bobby then
34463: LD_EXP 23
34467: IFFALSE 34481
// SaveCharacters ( Bobby , 12p_Bobby ) ;
34469: LD_EXP 23
34473: PPUSH
34474: LD_STRING 12p_Bobby
34476: PPUSH
34477: CALL_OW 38
// if Cyrus in tmp then
34481: LD_EXP 24
34485: PUSH
34486: LD_VAR 0 2
34490: IN
34491: IFFALSE 34507
// SaveCharacters ( Cyrus , 12a_Cyrus ) else
34493: LD_EXP 24
34497: PPUSH
34498: LD_STRING 12a_Cyrus
34500: PPUSH
34501: CALL_OW 38
34505: GO 34525
// if Cyrus then
34507: LD_EXP 24
34511: IFFALSE 34525
// SaveCharacters ( Cyrus , 12p_Cyrus ) ;
34513: LD_EXP 24
34517: PPUSH
34518: LD_STRING 12p_Cyrus
34520: PPUSH
34521: CALL_OW 38
// if Denis in tmp then
34525: LD_EXP 25
34529: PUSH
34530: LD_VAR 0 2
34534: IN
34535: IFFALSE 34549
// SaveCharacters ( Denis , 12a_Denis ) ;
34537: LD_EXP 25
34541: PPUSH
34542: LD_STRING 12a_Denis
34544: PPUSH
34545: CALL_OW 38
// if Brown in tmp then
34549: LD_EXP 26
34553: PUSH
34554: LD_VAR 0 2
34558: IN
34559: IFFALSE 34575
// SaveCharacters ( Brown , 12a_Brown ) else
34561: LD_EXP 26
34565: PPUSH
34566: LD_STRING 12a_Brown
34568: PPUSH
34569: CALL_OW 38
34573: GO 34599
// if Brown in tmp then
34575: LD_EXP 26
34579: PUSH
34580: LD_VAR 0 2
34584: IN
34585: IFFALSE 34599
// SaveCharacters ( Brown , 12p_Brown ) ;
34587: LD_EXP 26
34591: PPUSH
34592: LD_STRING 12p_Brown
34594: PPUSH
34595: CALL_OW 38
// if Gladstone in tmp then
34599: LD_EXP 27
34603: PUSH
34604: LD_VAR 0 2
34608: IN
34609: IFFALSE 34625
// SaveCharacters ( Gladstone , 12a_Gladstone ) else
34611: LD_EXP 27
34615: PPUSH
34616: LD_STRING 12a_Gladstone
34618: PPUSH
34619: CALL_OW 38
34623: GO 34643
// if Gladstone then
34625: LD_EXP 27
34629: IFFALSE 34643
// SaveCharacters ( Gladstone , 12p_Gladstone ) ;
34631: LD_EXP 27
34635: PPUSH
34636: LD_STRING 12p_Gladstone
34638: PPUSH
34639: CALL_OW 38
// if Houten in tmp then
34643: LD_EXP 28
34647: PUSH
34648: LD_VAR 0 2
34652: IN
34653: IFFALSE 34669
// SaveCharacters ( Houten , 12a_Houten ) else
34655: LD_EXP 28
34659: PPUSH
34660: LD_STRING 12a_Houten
34662: PPUSH
34663: CALL_OW 38
34667: GO 34687
// if Houten then
34669: LD_EXP 28
34673: IFFALSE 34687
// SaveCharacters ( Houten , 12p_Houten ) ;
34675: LD_EXP 28
34679: PPUSH
34680: LD_STRING 12p_Houten
34682: PPUSH
34683: CALL_OW 38
// if Cornel in tmp then
34687: LD_EXP 29
34691: PUSH
34692: LD_VAR 0 2
34696: IN
34697: IFFALSE 34713
// SaveCharacters ( Cornel , 12a_Cornell ) else
34699: LD_EXP 29
34703: PPUSH
34704: LD_STRING 12a_Cornell
34706: PPUSH
34707: CALL_OW 38
34711: GO 34731
// if Cornel then
34713: LD_EXP 29
34717: IFFALSE 34731
// SaveCharacters ( Cornel , 12p_Cornell ) ;
34719: LD_EXP 29
34723: PPUSH
34724: LD_STRING 12p_Cornell
34726: PPUSH
34727: CALL_OW 38
// if Gary in tmp then
34731: LD_EXP 30
34735: PUSH
34736: LD_VAR 0 2
34740: IN
34741: IFFALSE 34757
// SaveCharacters ( Gary , 12a_Gary ) else
34743: LD_EXP 30
34747: PPUSH
34748: LD_STRING 12a_Gary
34750: PPUSH
34751: CALL_OW 38
34755: GO 34775
// if Gary then
34757: LD_EXP 30
34761: IFFALSE 34775
// SaveCharacters ( Gary , 12p_Gary ) ;
34763: LD_EXP 30
34767: PPUSH
34768: LD_STRING 12p_Gary
34770: PPUSH
34771: CALL_OW 38
// if Frank in tmp then
34775: LD_EXP 31
34779: PUSH
34780: LD_VAR 0 2
34784: IN
34785: IFFALSE 34799
// SaveCharacters ( Frank , 12a_Frank ) ;
34787: LD_EXP 31
34791: PPUSH
34792: LD_STRING 12a_Frank
34794: PPUSH
34795: CALL_OW 38
// if Kikuchi in tmp then
34799: LD_EXP 32
34803: PUSH
34804: LD_VAR 0 2
34808: IN
34809: IFFALSE 34825
// SaveCharacters ( Kikuchi , 12a_Kikuchi ) else
34811: LD_EXP 32
34815: PPUSH
34816: LD_STRING 12a_Kikuchi
34818: PPUSH
34819: CALL_OW 38
34823: GO 34843
// if Kikuchi then
34825: LD_EXP 32
34829: IFFALSE 34843
// SaveCharacters ( Kikuchi , 12p_Kikuchi ) ;
34831: LD_EXP 32
34835: PPUSH
34836: LD_STRING 12p_Kikuchi
34838: PPUSH
34839: CALL_OW 38
// if Simms in tmp then
34843: LD_EXP 33
34847: PUSH
34848: LD_VAR 0 2
34852: IN
34853: IFFALSE 34867
// SaveCharacters ( Simms , 12a_Simms ) ;
34855: LD_EXP 33
34859: PPUSH
34860: LD_STRING 12a_Simms
34862: PPUSH
34863: CALL_OW 38
// if Joan in tmp then
34867: LD_EXP 34
34871: PUSH
34872: LD_VAR 0 2
34876: IN
34877: IFFALSE 34891
// SaveCharacters ( Joan , 12a_Joan ) ;
34879: LD_EXP 34
34883: PPUSH
34884: LD_STRING 12a_Joan
34886: PPUSH
34887: CALL_OW 38
// if DeltaDoctor in tmp then
34891: LD_EXP 35
34895: PUSH
34896: LD_VAR 0 2
34900: IN
34901: IFFALSE 34915
// SaveCharacters ( DeltaDoctor , 12a_DeltaDoctor ) ;
34903: LD_EXP 35
34907: PPUSH
34908: LD_STRING 12a_DeltaDoctor
34910: PPUSH
34911: CALL_OW 38
// tmp := tmp diff [ JMM , Roth , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi , Simms , Joan , DeltaDoctor ] ;
34915: LD_ADDR_VAR 0 2
34919: PUSH
34920: LD_VAR 0 2
34924: PUSH
34925: LD_EXP 12
34929: PUSH
34930: LD_EXP 13
34934: PUSH
34935: LD_EXP 21
34939: PUSH
34940: LD_EXP 22
34944: PUSH
34945: LD_EXP 23
34949: PUSH
34950: LD_EXP 24
34954: PUSH
34955: LD_EXP 25
34959: PUSH
34960: LD_EXP 26
34964: PUSH
34965: LD_EXP 27
34969: PUSH
34970: LD_EXP 28
34974: PUSH
34975: LD_EXP 29
34979: PUSH
34980: LD_EXP 30
34984: PUSH
34985: LD_EXP 31
34989: PUSH
34990: LD_EXP 32
34994: PUSH
34995: LD_EXP 33
34999: PUSH
35000: LD_EXP 34
35004: PUSH
35005: LD_EXP 35
35009: PUSH
35010: EMPTY
35011: LIST
35012: LIST
35013: LIST
35014: LIST
35015: LIST
35016: LIST
35017: LIST
35018: LIST
35019: LIST
35020: LIST
35021: LIST
35022: LIST
35023: LIST
35024: LIST
35025: LIST
35026: LIST
35027: LIST
35028: DIFF
35029: ST_TO_ADDR
// if tmp then
35030: LD_VAR 0 2
35034: IFFALSE 35048
// SaveCharacters ( tmp , 12a_others ) ;
35036: LD_VAR 0 2
35040: PPUSH
35041: LD_STRING 12a_others
35043: PPUSH
35044: CALL_OW 38
// tmp := FilterAllUnits ( [ [ f_type , unit_human ] , [ f_nation , 1 ] , [ f_or , [ f_side , 1 ] , [ f_side , 4 ] ] ] ) diff [ JMM , Roth , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi , Simms , Joan , DeltaDoctor , Powell ] ;
35048: LD_ADDR_VAR 0 2
35052: PUSH
35053: LD_INT 21
35055: PUSH
35056: LD_INT 1
35058: PUSH
35059: EMPTY
35060: LIST
35061: LIST
35062: PUSH
35063: LD_INT 23
35065: PUSH
35066: LD_INT 1
35068: PUSH
35069: EMPTY
35070: LIST
35071: LIST
35072: PUSH
35073: LD_INT 2
35075: PUSH
35076: LD_INT 22
35078: PUSH
35079: LD_INT 1
35081: PUSH
35082: EMPTY
35083: LIST
35084: LIST
35085: PUSH
35086: LD_INT 22
35088: PUSH
35089: LD_INT 4
35091: PUSH
35092: EMPTY
35093: LIST
35094: LIST
35095: PUSH
35096: EMPTY
35097: LIST
35098: LIST
35099: LIST
35100: PUSH
35101: EMPTY
35102: LIST
35103: LIST
35104: LIST
35105: PPUSH
35106: CALL_OW 69
35110: PUSH
35111: LD_EXP 12
35115: PUSH
35116: LD_EXP 13
35120: PUSH
35121: LD_EXP 21
35125: PUSH
35126: LD_EXP 22
35130: PUSH
35131: LD_EXP 23
35135: PUSH
35136: LD_EXP 24
35140: PUSH
35141: LD_EXP 25
35145: PUSH
35146: LD_EXP 26
35150: PUSH
35151: LD_EXP 27
35155: PUSH
35156: LD_EXP 28
35160: PUSH
35161: LD_EXP 29
35165: PUSH
35166: LD_EXP 30
35170: PUSH
35171: LD_EXP 31
35175: PUSH
35176: LD_EXP 32
35180: PUSH
35181: LD_EXP 33
35185: PUSH
35186: LD_EXP 34
35190: PUSH
35191: LD_EXP 35
35195: PUSH
35196: LD_EXP 14
35200: PUSH
35201: EMPTY
35202: LIST
35203: LIST
35204: LIST
35205: LIST
35206: LIST
35207: LIST
35208: LIST
35209: LIST
35210: LIST
35211: LIST
35212: LIST
35213: LIST
35214: LIST
35215: LIST
35216: LIST
35217: LIST
35218: LIST
35219: LIST
35220: DIFF
35221: ST_TO_ADDR
// if tmp then
35222: LD_VAR 0 2
35226: IFFALSE 35240
// SaveCharacters ( tmp , 12p_others ) ;
35228: LD_VAR 0 2
35232: PPUSH
35233: LD_STRING 12p_others
35235: PPUSH
35236: CALL_OW 38
// YouWin ;
35240: CALL_OW 103
// end ; end_of_file
35244: PPOPN 5
35246: END
// on SailEvent ( event ) do var tmp ;
35247: LD_INT 0
35249: PPUSH
// begin if event = 1 then
35250: LD_VAR 0 1
35254: PUSH
35255: LD_INT 1
35257: EQUAL
35258: IFFALSE 35331
// begin if not mobile_patrol then
35260: LD_EXP 15
35264: NOT
35265: IFFALSE 35269
// exit ;
35267: GO 35331
// tmp := mobile_patrol [ mobile_patrol ] ;
35269: LD_ADDR_VAR 0 2
35273: PUSH
35274: LD_EXP 15
35278: PUSH
35279: LD_EXP 15
35283: ARRAY
35284: ST_TO_ADDR
// mobile_patrol := Delete ( mobile_patrol , mobile_patrol ) ;
35285: LD_ADDR_EXP 15
35289: PUSH
35290: LD_EXP 15
35294: PPUSH
35295: LD_EXP 15
35299: PPUSH
35300: CALL_OW 3
35304: ST_TO_ADDR
// Patrol ( tmp , mobile_points [ mobile_patrol + 1 ] , [ ] ) ;
35305: LD_VAR 0 2
35309: PPUSH
35310: LD_EXP 16
35314: PUSH
35315: LD_EXP 15
35319: PUSH
35320: LD_INT 1
35322: PLUS
35323: ARRAY
35324: PPUSH
35325: EMPTY
35326: PPUSH
35327: CALL 6958 0 3
// end ; end ;
35331: PPOPN 2
35333: END
// on UnitDestroyed ( un ) do begin if un = JMM then
35334: LD_VAR 0 1
35338: PUSH
35339: LD_EXP 12
35343: EQUAL
35344: IFFALSE 35353
// YouLost ( JMM ) ;
35346: LD_STRING JMM
35348: PPUSH
35349: CALL_OW 104
// if GetSide ( un ) = 7 and GetWeapon ( un ) = us_cargo_bay then
35353: LD_VAR 0 1
35357: PPUSH
35358: CALL_OW 255
35362: PUSH
35363: LD_INT 7
35365: EQUAL
35366: PUSH
35367: LD_VAR 0 1
35371: PPUSH
35372: CALL_OW 264
35376: PUSH
35377: LD_INT 12
35379: EQUAL
35380: AND
35381: IFFALSE 35390
// YouLost ( Artifact ) ;
35383: LD_STRING Artifact
35385: PPUSH
35386: CALL_OW 104
// if ( GetSide ( un ) = 7 and GetType ( un ) = unit_human ) or un = Roth then
35390: LD_VAR 0 1
35394: PPUSH
35395: CALL_OW 255
35399: PUSH
35400: LD_INT 7
35402: EQUAL
35403: PUSH
35404: LD_VAR 0 1
35408: PPUSH
35409: CALL_OW 247
35413: PUSH
35414: LD_INT 1
35416: EQUAL
35417: AND
35418: PUSH
35419: LD_VAR 0 1
35423: PUSH
35424: LD_EXP 13
35428: EQUAL
35429: OR
35430: IFFALSE 35446
// team_kill_counter := team_kill_counter + 1 ;
35432: LD_ADDR_EXP 9
35436: PUSH
35437: LD_EXP 9
35441: PUSH
35442: LD_INT 1
35444: PLUS
35445: ST_TO_ADDR
// if GetSide ( un ) = 1 and GetType ( un ) = unit_human then
35446: LD_VAR 0 1
35450: PPUSH
35451: CALL_OW 255
35455: PUSH
35456: LD_INT 1
35458: EQUAL
35459: PUSH
35460: LD_VAR 0 1
35464: PPUSH
35465: CALL_OW 247
35469: PUSH
35470: LD_INT 1
35472: EQUAL
35473: AND
35474: IFFALSE 35490
// friends_kill_counter := friends_kill_counter + 1 ;
35476: LD_ADDR_EXP 8
35480: PUSH
35481: LD_EXP 8
35485: PUSH
35486: LD_INT 1
35488: PLUS
35489: ST_TO_ADDR
// if GetSide ( un ) <> 1 then
35490: LD_VAR 0 1
35494: PPUSH
35495: CALL_OW 255
35499: PUSH
35500: LD_INT 1
35502: NONEQUAL
35503: IFFALSE 35507
// exit ;
35505: GO 35584
// if GetControl ( un ) = control_remote then
35507: LD_VAR 0 1
35511: PPUSH
35512: CALL_OW 263
35516: PUSH
35517: LD_INT 2
35519: EQUAL
35520: IFFALSE 35538
// defenders := defenders diff un ;
35522: LD_ADDR_EXP 18
35526: PUSH
35527: LD_EXP 18
35531: PUSH
35532: LD_VAR 0 1
35536: DIFF
35537: ST_TO_ADDR
// if not un in defenders then
35538: LD_VAR 0 1
35542: PUSH
35543: LD_EXP 18
35547: IN
35548: NOT
35549: IFFALSE 35584
// begin defcon := [ GetX ( un ) , GetY ( un ) ] ;
35551: LD_ADDR_EXP 19
35555: PUSH
35556: LD_VAR 0 1
35560: PPUSH
35561: CALL_OW 250
35565: PUSH
35566: LD_VAR 0 1
35570: PPUSH
35571: CALL_OW 251
35575: PUSH
35576: EMPTY
35577: LIST
35578: LIST
35579: ST_TO_ADDR
// Defend ;
35580: CALL 2660 0 0
// end ; end ;
35584: PPOPN 1
35586: END
// on VehicleConstructed ( veh , fac ) do begin if GetSide ( veh ) <> 1 then
35587: LD_VAR 0 1
35591: PPUSH
35592: CALL_OW 255
35596: PUSH
35597: LD_INT 1
35599: NONEQUAL
35600: IFFALSE 35604
// exit ;
35602: GO 35628
// if GetControl ( veh ) = control_remote then
35604: LD_VAR 0 1
35608: PPUSH
35609: CALL_OW 263
35613: PUSH
35614: LD_INT 2
35616: EQUAL
35617: IFFALSE 35628
// Connect ( veh ) ;
35619: LD_VAR 0 1
35623: PPUSH
35624: CALL 6153 0 1
// end ;
35628: PPOPN 2
35630: END
// on UnitGoesToRed ( un ) do var i , veh ;
35631: LD_INT 0
35633: PPUSH
35634: PPUSH
// begin if GetSide ( un ) = 1 and GetControl ( un ) = control_remote then
35635: LD_VAR 0 1
35639: PPUSH
35640: CALL_OW 255
35644: PUSH
35645: LD_INT 1
35647: EQUAL
35648: PUSH
35649: LD_VAR 0 1
35653: PPUSH
35654: CALL_OW 263
35658: PUSH
35659: LD_INT 2
35661: EQUAL
35662: AND
35663: IFFALSE 35674
// ComUnlink ( un ) ;
35665: LD_VAR 0 1
35669: PPUSH
35670: CALL_OW 136
// if un = ambar0 then
35674: LD_VAR 0 1
35678: PUSH
35679: LD_INT 18
35681: EQUAL
35682: IFFALSE 35792
// begin uc_side := 1 ;
35684: LD_ADDR_OWVAR 20
35688: PUSH
35689: LD_INT 1
35691: ST_TO_ADDR
// uc_nation := 1 ;
35692: LD_ADDR_OWVAR 21
35696: PUSH
35697: LD_INT 1
35699: ST_TO_ADDR
// for i = 1 to 6 do
35700: LD_ADDR_VAR 0 2
35704: PUSH
35705: DOUBLE
35706: LD_INT 1
35708: DEC
35709: ST_TO_ADDR
35710: LD_INT 6
35712: PUSH
35713: FOR_TO
35714: IFFALSE 35790
// begin PrepareVehicle ( us_medium_tracked , engine_combustion , control_computer , us_gatling_gun , 100 ) ;
35716: LD_INT 3
35718: PPUSH
35719: LD_INT 1
35721: PPUSH
35722: LD_INT 3
35724: PPUSH
35725: LD_INT 4
35727: PPUSH
35728: LD_INT 100
35730: PPUSH
35731: CALL 5917 0 5
// veh := CreateVehicle ;
35735: LD_ADDR_VAR 0 3
35739: PUSH
35740: CALL_OW 45
35744: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
35745: LD_VAR 0 3
35749: PPUSH
35750: LD_INT 1
35752: PPUSH
35753: CALL_OW 233
// PlaceUnitArea ( veh , west_spawn , false ) ;
35757: LD_VAR 0 3
35761: PPUSH
35762: LD_INT 25
35764: PPUSH
35765: LD_INT 0
35767: PPUSH
35768: CALL_OW 49
// defenders := defenders ^ veh ;
35772: LD_ADDR_EXP 18
35776: PUSH
35777: LD_EXP 18
35781: PUSH
35782: LD_VAR 0 3
35786: ADD
35787: ST_TO_ADDR
// end ;
35788: GO 35713
35790: POP
35791: POP
// end ; end ;
35792: PPOPN 3
35794: END
// on EnterBuilding ( building , unit ) do begin if unit = Powell then
35795: LD_VAR 0 2
35799: PUSH
35800: LD_EXP 14
35804: EQUAL
35805: IFFALSE 35816
// RemoveUnit ( Powell ) ;
35807: LD_EXP 14
35811: PPUSH
35812: CALL_OW 64
// end ;
35816: PPOPN 2
35818: END
// on Command ( cmd ) do begin SOS_Command ( cmd ) ;
35819: LD_VAR 0 1
35823: PPUSH
35824: CALL 35973 0 1
// end ; end_of_file
35828: PPOPN 1
35830: END
// export ru_radar , ru_big_cargo_bay , us_hack , us_artillery , ar_bio_bomb ; every 1 do
35831: GO 35833
35833: DISABLE
// begin ru_radar := 98 ;
35834: LD_ADDR_EXP 36
35838: PUSH
35839: LD_INT 98
35841: ST_TO_ADDR
// ru_big_cargo_bay := 89 ;
35842: LD_ADDR_EXP 37
35846: PUSH
35847: LD_INT 89
35849: ST_TO_ADDR
// us_hack := 99 ;
35850: LD_ADDR_EXP 38
35854: PUSH
35855: LD_INT 99
35857: ST_TO_ADDR
// us_artillery := 97 ;
35858: LD_ADDR_EXP 39
35862: PUSH
35863: LD_INT 97
35865: ST_TO_ADDR
// ar_bio_bomb := 91 ;
35866: LD_ADDR_EXP 40
35870: PUSH
35871: LD_INT 91
35873: ST_TO_ADDR
// end ; end_of_file end_of_file end_of_file
35874: END
// export function SOS_UnitExtraDestroyed ( un , killerSide , killerUnit ) ; var i , eff , side ; begin
35875: LD_INT 0
35877: PPUSH
35878: PPUSH
35879: PPUSH
35880: PPUSH
// if GetWeapon ( un ) = ar_bio_bomb then
35881: LD_VAR 0 1
35885: PPUSH
35886: CALL_OW 264
35890: PUSH
35891: LD_EXP 40
35895: EQUAL
35896: IFFALSE 35968
// begin if GetTech ( tech_bio3 , GetSide ( un ) ) = state_researched then
35898: LD_INT 68
35900: PPUSH
35901: LD_VAR 0 1
35905: PPUSH
35906: CALL_OW 255
35910: PPUSH
35911: CALL_OW 321
35915: PUSH
35916: LD_INT 2
35918: EQUAL
35919: IFFALSE 35931
// eff := 70 else
35921: LD_ADDR_VAR 0 6
35925: PUSH
35926: LD_INT 70
35928: ST_TO_ADDR
35929: GO 35939
// eff := 30 ;
35931: LD_ADDR_VAR 0 6
35935: PUSH
35936: LD_INT 30
35938: ST_TO_ADDR
// ArtContamination ( GetX ( un ) , GetY ( un ) , eff ) ;
35939: LD_VAR 0 1
35943: PPUSH
35944: CALL_OW 250
35948: PPUSH
35949: LD_VAR 0 1
35953: PPUSH
35954: CALL_OW 251
35958: PPUSH
35959: LD_VAR 0 6
35963: PPUSH
35964: CALL_OW 495
// end ; end ;
35968: LD_VAR 0 4
35972: RET
// export function SOS_Command ( cmd ) ; var i , j , tmp , taskList , _taskList ; begin
35973: LD_INT 0
35975: PPUSH
35976: PPUSH
35977: PPUSH
35978: PPUSH
35979: PPUSH
35980: PPUSH
// if cmd = 124 then
35981: LD_VAR 0 1
35985: PUSH
35986: LD_INT 124
35988: EQUAL
35989: IFFALSE 36195
// begin tmp := FilterAllUnits ( [ f_or , [ f_weapon , ru_bulldozer ] , [ f_weapon , us_bulldozer ] ] ) ;
35991: LD_ADDR_VAR 0 5
35995: PUSH
35996: LD_INT 2
35998: PUSH
35999: LD_INT 34
36001: PUSH
36002: LD_INT 53
36004: PUSH
36005: EMPTY
36006: LIST
36007: LIST
36008: PUSH
36009: LD_INT 34
36011: PUSH
36012: LD_INT 14
36014: PUSH
36015: EMPTY
36016: LIST
36017: LIST
36018: PUSH
36019: EMPTY
36020: LIST
36021: LIST
36022: LIST
36023: PPUSH
36024: CALL_OW 69
36028: ST_TO_ADDR
// if not tmp then
36029: LD_VAR 0 5
36033: NOT
36034: IFFALSE 36038
// exit ;
36036: GO 36195
// for i in tmp do
36038: LD_ADDR_VAR 0 3
36042: PUSH
36043: LD_VAR 0 5
36047: PUSH
36048: FOR_IN
36049: IFFALSE 36193
// begin taskList := GetTaskList ( i ) ;
36051: LD_ADDR_VAR 0 6
36055: PUSH
36056: LD_VAR 0 3
36060: PPUSH
36061: CALL_OW 437
36065: ST_TO_ADDR
// if not taskList then
36066: LD_VAR 0 6
36070: NOT
36071: IFFALSE 36075
// continue ;
36073: GO 36048
// for j = 1 to taskList do
36075: LD_ADDR_VAR 0 4
36079: PUSH
36080: DOUBLE
36081: LD_INT 1
36083: DEC
36084: ST_TO_ADDR
36085: LD_VAR 0 6
36089: PUSH
36090: FOR_TO
36091: IFFALSE 36189
// if taskList [ j ] [ 1 ] = | then
36093: LD_VAR 0 6
36097: PUSH
36098: LD_VAR 0 4
36102: ARRAY
36103: PUSH
36104: LD_INT 1
36106: ARRAY
36107: PUSH
36108: LD_STRING |
36110: EQUAL
36111: IFFALSE 36187
// begin _taskList := Delete ( taskList , 1 ) ;
36113: LD_ADDR_VAR 0 7
36117: PUSH
36118: LD_VAR 0 6
36122: PPUSH
36123: LD_INT 1
36125: PPUSH
36126: CALL_OW 3
36130: ST_TO_ADDR
// SetTaskList ( i , _taskList ) ;
36131: LD_VAR 0 3
36135: PPUSH
36136: LD_VAR 0 7
36140: PPUSH
36141: CALL_OW 446
// CutTreeXYR ( i , taskList [ j ] [ 2 ] , taskList [ j ] [ 3 ] , 8 ) ;
36145: LD_VAR 0 3
36149: PPUSH
36150: LD_VAR 0 6
36154: PUSH
36155: LD_VAR 0 4
36159: ARRAY
36160: PUSH
36161: LD_INT 2
36163: ARRAY
36164: PPUSH
36165: LD_VAR 0 6
36169: PUSH
36170: LD_VAR 0 4
36174: ARRAY
36175: PUSH
36176: LD_INT 3
36178: ARRAY
36179: PPUSH
36180: LD_INT 8
36182: PPUSH
36183: CALL 36200 0 4
// end ;
36187: GO 36090
36189: POP
36190: POP
// end ;
36191: GO 36048
36193: POP
36194: POP
// end ; end ;
36195: LD_VAR 0 2
36199: RET
// function CutTreeXYR ( bulldozer , x , y , r ) ; var i , min_x , min_y , max_x , max_y , _x , _y , list ; begin
36200: LD_INT 0
36202: PPUSH
36203: PPUSH
36204: PPUSH
36205: PPUSH
36206: PPUSH
36207: PPUSH
36208: PPUSH
36209: PPUSH
36210: PPUSH
// if not bulldozer or not ValidHex ( x , y ) or not r then
36211: LD_VAR 0 1
36215: NOT
36216: PUSH
36217: LD_VAR 0 2
36221: PPUSH
36222: LD_VAR 0 3
36226: PPUSH
36227: CALL_OW 488
36231: NOT
36232: OR
36233: PUSH
36234: LD_VAR 0 4
36238: NOT
36239: OR
36240: IFFALSE 36244
// exit ;
36242: GO 36584
// list := [ ] ;
36244: LD_ADDR_VAR 0 13
36248: PUSH
36249: EMPTY
36250: ST_TO_ADDR
// if x - r < 0 then
36251: LD_VAR 0 2
36255: PUSH
36256: LD_VAR 0 4
36260: MINUS
36261: PUSH
36262: LD_INT 0
36264: LESS
36265: IFFALSE 36277
// min_x := 0 else
36267: LD_ADDR_VAR 0 7
36271: PUSH
36272: LD_INT 0
36274: ST_TO_ADDR
36275: GO 36293
// min_x := x - r ;
36277: LD_ADDR_VAR 0 7
36281: PUSH
36282: LD_VAR 0 2
36286: PUSH
36287: LD_VAR 0 4
36291: MINUS
36292: ST_TO_ADDR
// if y - r < 0 then
36293: LD_VAR 0 3
36297: PUSH
36298: LD_VAR 0 4
36302: MINUS
36303: PUSH
36304: LD_INT 0
36306: LESS
36307: IFFALSE 36319
// min_y := 0 else
36309: LD_ADDR_VAR 0 8
36313: PUSH
36314: LD_INT 0
36316: ST_TO_ADDR
36317: GO 36335
// min_y := y - r ;
36319: LD_ADDR_VAR 0 8
36323: PUSH
36324: LD_VAR 0 3
36328: PUSH
36329: LD_VAR 0 4
36333: MINUS
36334: ST_TO_ADDR
// max_x := x + r ;
36335: LD_ADDR_VAR 0 9
36339: PUSH
36340: LD_VAR 0 2
36344: PUSH
36345: LD_VAR 0 4
36349: PLUS
36350: ST_TO_ADDR
// max_y := y + r ;
36351: LD_ADDR_VAR 0 10
36355: PUSH
36356: LD_VAR 0 3
36360: PUSH
36361: LD_VAR 0 4
36365: PLUS
36366: ST_TO_ADDR
// for _x = min_x to max_x do
36367: LD_ADDR_VAR 0 11
36371: PUSH
36372: DOUBLE
36373: LD_VAR 0 7
36377: DEC
36378: ST_TO_ADDR
36379: LD_VAR 0 9
36383: PUSH
36384: FOR_TO
36385: IFFALSE 36502
// for _y = min_y to max_y do
36387: LD_ADDR_VAR 0 12
36391: PUSH
36392: DOUBLE
36393: LD_VAR 0 8
36397: DEC
36398: ST_TO_ADDR
36399: LD_VAR 0 10
36403: PUSH
36404: FOR_TO
36405: IFFALSE 36498
// begin if not ValidHex ( _x , _y ) then
36407: LD_VAR 0 11
36411: PPUSH
36412: LD_VAR 0 12
36416: PPUSH
36417: CALL_OW 488
36421: NOT
36422: IFFALSE 36426
// continue ;
36424: GO 36404
// if IsEnvironment ( _x , _y ) and IsEnvironmentDestroyable ( _x , _y ) then
36426: LD_VAR 0 11
36430: PPUSH
36431: LD_VAR 0 12
36435: PPUSH
36436: CALL_OW 351
36440: PUSH
36441: LD_VAR 0 11
36445: PPUSH
36446: LD_VAR 0 12
36450: PPUSH
36451: CALL_OW 554
36455: AND
36456: IFFALSE 36496
// list := Insert ( list , list + 1 , [ _x , _y ] ) ;
36458: LD_ADDR_VAR 0 13
36462: PUSH
36463: LD_VAR 0 13
36467: PPUSH
36468: LD_VAR 0 13
36472: PUSH
36473: LD_INT 1
36475: PLUS
36476: PPUSH
36477: LD_VAR 0 11
36481: PUSH
36482: LD_VAR 0 12
36486: PUSH
36487: EMPTY
36488: LIST
36489: LIST
36490: PPUSH
36491: CALL_OW 2
36495: ST_TO_ADDR
// end ;
36496: GO 36404
36498: POP
36499: POP
36500: GO 36384
36502: POP
36503: POP
// if not list then
36504: LD_VAR 0 13
36508: NOT
36509: IFFALSE 36513
// exit ;
36511: GO 36584
// for i in list do
36513: LD_ADDR_VAR 0 6
36517: PUSH
36518: LD_VAR 0 13
36522: PUSH
36523: FOR_IN
36524: IFFALSE 36582
// AddTaskList ( bulldozer , [ [ M , i [ 1 ] , i [ 2 ] , 0 , 0 , 0 , 0 ] ] ) ;
36526: LD_VAR 0 1
36530: PPUSH
36531: LD_STRING M
36533: PUSH
36534: LD_VAR 0 6
36538: PUSH
36539: LD_INT 1
36541: ARRAY
36542: PUSH
36543: LD_VAR 0 6
36547: PUSH
36548: LD_INT 2
36550: ARRAY
36551: PUSH
36552: LD_INT 0
36554: PUSH
36555: LD_INT 0
36557: PUSH
36558: LD_INT 0
36560: PUSH
36561: LD_INT 0
36563: PUSH
36564: EMPTY
36565: LIST
36566: LIST
36567: LIST
36568: LIST
36569: LIST
36570: LIST
36571: LIST
36572: PUSH
36573: EMPTY
36574: LIST
36575: PPUSH
36576: CALL_OW 447
36580: GO 36523
36582: POP
36583: POP
// end ;
36584: LD_VAR 0 5
36588: RET
