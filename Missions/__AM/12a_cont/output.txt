// starting begin ResetFog ;
   0: CALL_OW 335
// AnimateTrees ( true ) ;
   4: LD_INT 1
   6: PPUSH
   7: CALL_OW 573
// InitVariables ;
  11: CALL 123 0 0
// PrepareNature ;
  15: CALL 30352 0 0
// PrepareAlliance ;
  19: CALL 225 0 0
// PrepareFriends ;
  23: CALL 3491 0 0
// PrepareAmerican ;
  27: CALL 662 0 0
// PlaceSeeing ( 91 , 70 , 7 , - 32178 ) ;
  31: LD_INT 91
  33: PPUSH
  34: LD_INT 70
  36: PPUSH
  37: LD_INT 7
  39: PPUSH
  40: LD_INT 32178
  42: NEG
  43: PPUSH
  44: CALL_OW 330
// RemoveSeeing ( 91 , 70 , 7 ) ;
  48: LD_INT 91
  50: PPUSH
  51: LD_INT 70
  53: PPUSH
  54: LD_INT 7
  56: PPUSH
  57: CALL_OW 331
// if debug then
  61: LD_EXP 1
  65: IFFALSE 106
// begin SetAttitude ( 1 , 7 , att_enemy , true ) ;
  67: LD_INT 1
  69: PPUSH
  70: LD_INT 7
  72: PPUSH
  73: LD_INT 2
  75: PPUSH
  76: LD_INT 1
  78: PPUSH
  79: CALL_OW 80
// RemoveUnit ( Powell ) ;
  83: LD_EXP 14
  87: PPUSH
  88: CALL_OW 64
// DoNotAttack ( 1 , JMM ) ;
  92: LD_INT 1
  94: PPUSH
  95: LD_EXP 12
  99: PPUSH
 100: CALL_OW 471
// end else
 104: GO 110
// Action ;
 106: CALL 30688 0 0
// PreparePatrol ;
 110: CALL 1127 0 0
// game := true ;
 114: LD_ADDR_EXP 2
 118: PUSH
 119: LD_INT 1
 121: ST_TO_ADDR
// end ;
 122: END
// export debug , game , selected , friends , reached_lab , can_escape , on_hill , friends_kill_counter , team_kill_counter , gamma_commander , extra_patrol ; export function InitVariables ; begin
 123: LD_INT 0
 125: PPUSH
// debug := false ;
 126: LD_ADDR_EXP 1
 130: PUSH
 131: LD_INT 0
 133: ST_TO_ADDR
// friends := [ ] ;
 134: LD_ADDR_EXP 4
 138: PUSH
 139: EMPTY
 140: ST_TO_ADDR
// selected := [ ] ;
 141: LD_ADDR_EXP 3
 145: PUSH
 146: EMPTY
 147: ST_TO_ADDR
// reached_lab := false ;
 148: LD_ADDR_EXP 5
 152: PUSH
 153: LD_INT 0
 155: ST_TO_ADDR
// can_escape := false ;
 156: LD_ADDR_EXP 6
 160: PUSH
 161: LD_INT 0
 163: ST_TO_ADDR
// game := false ;
 164: LD_ADDR_EXP 2
 168: PUSH
 169: LD_INT 0
 171: ST_TO_ADDR
// gamma_commander := LoadVariable ( GammaCommander , 2 ) ;
 172: LD_ADDR_EXP 10
 176: PUSH
 177: LD_STRING GammaCommander
 179: PPUSH
 180: LD_INT 2
 182: PPUSH
 183: CALL_OW 30
 187: ST_TO_ADDR
// friends_kill_counter := 0 ;
 188: LD_ADDR_EXP 8
 192: PUSH
 193: LD_INT 0
 195: ST_TO_ADDR
// team_kill_counter := 0 ;
 196: LD_ADDR_EXP 9
 200: PUSH
 201: LD_INT 0
 203: ST_TO_ADDR
// extra_patrol := true ;
 204: LD_ADDR_EXP 11
 208: PUSH
 209: LD_INT 1
 211: ST_TO_ADDR
// on_hill := false ;
 212: LD_ADDR_EXP 7
 216: PUSH
 217: LD_INT 0
 219: ST_TO_ADDR
// end ; end_of_file
 220: LD_VAR 0 1
 224: RET
// export JMM , Roth ; export function PrepareAlliance ; var cargo ; begin
 225: LD_INT 0
 227: PPUSH
 228: PPUSH
// uc_side := 7 ;
 229: LD_ADDR_OWVAR 20
 233: PUSH
 234: LD_INT 7
 236: ST_TO_ADDR
// uc_nation := 1 ;
 237: LD_ADDR_OWVAR 21
 241: PUSH
 242: LD_INT 1
 244: ST_TO_ADDR
// JMM := PrepareUnit ( JMM , ( not debug ) , 11_ ) ;
 245: LD_ADDR_EXP 12
 249: PUSH
 250: LD_STRING JMM
 252: PPUSH
 253: LD_EXP 1
 257: NOT
 258: PPUSH
 259: LD_STRING 11_
 261: PPUSH
 262: CALL 5776 0 3
 266: ST_TO_ADDR
// uc_side := 4 ;
 267: LD_ADDR_OWVAR 20
 271: PUSH
 272: LD_INT 4
 274: ST_TO_ADDR
// Roth := NewCharacter ( Roth ) ;
 275: LD_ADDR_EXP 13
 279: PUSH
 280: LD_STRING Roth
 282: PPUSH
 283: CALL_OW 25
 287: ST_TO_ADDR
// SetDir ( JMM , 1 ) ;
 288: LD_EXP 12
 292: PPUSH
 293: LD_INT 1
 295: PPUSH
 296: CALL_OW 233
// SetClass ( JMM , 1 ) ;
 300: LD_EXP 12
 304: PPUSH
 305: LD_INT 1
 307: PPUSH
 308: CALL_OW 336
// PlaceUnitXY ( JMM , 105 , 10 , false ) ;
 312: LD_EXP 12
 316: PPUSH
 317: LD_INT 105
 319: PPUSH
 320: LD_INT 10
 322: PPUSH
 323: LD_INT 0
 325: PPUSH
 326: CALL_OW 48
// SetDir ( Roth , 4 ) ;
 330: LD_EXP 13
 334: PPUSH
 335: LD_INT 4
 337: PPUSH
 338: CALL_OW 233
// PlaceUnitXY ( Roth , 109 , 10 , false ) ;
 342: LD_EXP 13
 346: PPUSH
 347: LD_INT 109
 349: PPUSH
 350: LD_INT 10
 352: PPUSH
 353: LD_INT 0
 355: PPUSH
 356: CALL_OW 48
// ComTurnUnit ( JMM , Roth ) ;
 360: LD_EXP 12
 364: PPUSH
 365: LD_EXP 13
 369: PPUSH
 370: CALL_OW 119
// ComTurnUnit ( Roth , JMM ) ;
 374: LD_EXP 13
 378: PPUSH
 379: LD_EXP 12
 383: PPUSH
 384: CALL_OW 119
// PrepareVehicle ( us_medium_tracked , engine_siberite , control_computer , us_cargo_bay , 100 ) ;
 388: LD_INT 3
 390: PPUSH
 391: LD_INT 3
 393: PPUSH
 394: LD_INT 3
 396: PPUSH
 397: LD_INT 12
 399: PPUSH
 400: LD_INT 100
 402: PPUSH
 403: CALL 5839 0 5
// cargo := CreateVehicle ;
 407: LD_ADDR_VAR 0 2
 411: PUSH
 412: CALL_OW 45
 416: ST_TO_ADDR
// SetDir ( cargo , 1 ) ;
 417: LD_VAR 0 2
 421: PPUSH
 422: LD_INT 1
 424: PPUSH
 425: CALL_OW 233
// PlaceUnitXY ( cargo , 179 , 45 , false ) ;
 429: LD_VAR 0 2
 433: PPUSH
 434: LD_INT 179
 436: PPUSH
 437: LD_INT 45
 439: PPUSH
 440: LD_INT 0
 442: PPUSH
 443: CALL_OW 48
// SetCargo ( cargo , mat_artifact , 30 ) ;
 447: LD_VAR 0 2
 451: PPUSH
 452: LD_INT 4
 454: PPUSH
 455: LD_INT 30
 457: PPUSH
 458: CALL_OW 290
// if LoadVariable ( 11_artifact_captured , 0 ) then
 462: LD_STRING 11_artifact_captured
 464: PPUSH
 465: LD_INT 0
 467: PPUSH
 468: CALL_OW 30
 472: IFFALSE 529
// begin cargo := CreateVehicle ;
 474: LD_ADDR_VAR 0 2
 478: PUSH
 479: CALL_OW 45
 483: ST_TO_ADDR
// SetDir ( cargo , 0 ) ;
 484: LD_VAR 0 2
 488: PPUSH
 489: LD_INT 0
 491: PPUSH
 492: CALL_OW 233
// PlaceUnitXY ( cargo , 171 , 85 , false ) ;
 496: LD_VAR 0 2
 500: PPUSH
 501: LD_INT 171
 503: PPUSH
 504: LD_INT 85
 506: PPUSH
 507: LD_INT 0
 509: PPUSH
 510: CALL_OW 48
// SetCargo ( cargo , mat_artifact , 50 ) ;
 514: LD_VAR 0 2
 518: PPUSH
 519: LD_INT 4
 521: PPUSH
 522: LD_INT 50
 524: PPUSH
 525: CALL_OW 290
// end ; SetSide ( amlab , 7 ) ;
 529: LD_INT 47
 531: PPUSH
 532: LD_INT 7
 534: PPUSH
 535: CALL_OW 235
// DoNotAttack ( 1 , amlab ) ;
 539: LD_INT 1
 541: PPUSH
 542: LD_INT 47
 544: PPUSH
 545: CALL_OW 471
// end ;
 549: LD_VAR 0 1
 553: RET
// every 0 0$1 trigger FilterUnitsInArea ( hill , [ f_side , 7 ] ) and not on_hill do
 554: LD_INT 38
 556: PPUSH
 557: LD_INT 22
 559: PUSH
 560: LD_INT 7
 562: PUSH
 563: EMPTY
 564: LIST
 565: LIST
 566: PPUSH
 567: CALL_OW 70
 571: PUSH
 572: LD_EXP 7
 576: NOT
 577: AND
 578: IFFALSE 609
 580: GO 582
 582: DISABLE
// begin enable ;
 583: ENABLE
// on_hill := true ;
 584: LD_ADDR_EXP 7
 588: PUSH
 589: LD_INT 1
 591: ST_TO_ADDR
// PlaceSeeing ( 126 , 13 , 7 , - 90 ) ;
 592: LD_INT 126
 594: PPUSH
 595: LD_INT 13
 597: PPUSH
 598: LD_INT 7
 600: PPUSH
 601: LD_INT 90
 603: NEG
 604: PPUSH
 605: CALL_OW 330
// end ;
 609: END
// every 0 0$1 trigger not FilterUnitsInArea ( hill , [ f_side , 7 ] ) and on_hill do
 610: LD_INT 38
 612: PPUSH
 613: LD_INT 22
 615: PUSH
 616: LD_INT 7
 618: PUSH
 619: EMPTY
 620: LIST
 621: LIST
 622: PPUSH
 623: CALL_OW 70
 627: NOT
 628: PUSH
 629: LD_EXP 7
 633: AND
 634: IFFALSE 661
 636: GO 638
 638: DISABLE
// begin enable ;
 639: ENABLE
// on_hill := false ;
 640: LD_ADDR_EXP 7
 644: PUSH
 645: LD_INT 0
 647: ST_TO_ADDR
// RemoveSeeing ( 126 , 13 , 7 ) ;
 648: LD_INT 126
 650: PPUSH
 651: LD_INT 13
 653: PPUSH
 654: LD_INT 7
 656: PPUSH
 657: CALL_OW 331
// end ; end_of_file
 661: END
// export Powell , mobile_patrol , mobile_points , powell_guards , defenders , defcon , defcon_wave ; export function PrepareAmerican ; var i , j , b , un , tmp ; begin
 662: LD_INT 0
 664: PPUSH
 665: PPUSH
 666: PPUSH
 667: PPUSH
 668: PPUSH
 669: PPUSH
// if Difficulty = 1 then
 670: LD_OWVAR 67
 674: PUSH
 675: LD_INT 1
 677: EQUAL
 678: IFFALSE 786
// begin tmp := [ [ 155 , 77 ] , [ 193 , 93 ] , [ 188 , 81 ] , [ 56 , 85 ] , [ 98 , 87 ] ] ;
 680: LD_ADDR_VAR 0 6
 684: PUSH
 685: LD_INT 155
 687: PUSH
 688: LD_INT 77
 690: PUSH
 691: EMPTY
 692: LIST
 693: LIST
 694: PUSH
 695: LD_INT 193
 697: PUSH
 698: LD_INT 93
 700: PUSH
 701: EMPTY
 702: LIST
 703: LIST
 704: PUSH
 705: LD_INT 188
 707: PUSH
 708: LD_INT 81
 710: PUSH
 711: EMPTY
 712: LIST
 713: LIST
 714: PUSH
 715: LD_INT 56
 717: PUSH
 718: LD_INT 85
 720: PUSH
 721: EMPTY
 722: LIST
 723: LIST
 724: PUSH
 725: LD_INT 98
 727: PUSH
 728: LD_INT 87
 730: PUSH
 731: EMPTY
 732: LIST
 733: LIST
 734: PUSH
 735: EMPTY
 736: LIST
 737: LIST
 738: LIST
 739: LIST
 740: LIST
 741: ST_TO_ADDR
// for i in tmp do
 742: LD_ADDR_VAR 0 2
 746: PUSH
 747: LD_VAR 0 6
 751: PUSH
 752: FOR_IN
 753: IFFALSE 784
// RemoveUnit ( HexInfo ( i [ 1 ] , i [ 2 ] ) ) ;
 755: LD_VAR 0 2
 759: PUSH
 760: LD_INT 1
 762: ARRAY
 763: PPUSH
 764: LD_VAR 0 2
 768: PUSH
 769: LD_INT 2
 771: ARRAY
 772: PPUSH
 773: CALL_OW 428
 777: PPUSH
 778: CALL_OW 64
 782: GO 752
 784: POP
 785: POP
// end ; defcon := 0 ;
 786: LD_ADDR_EXP 19
 790: PUSH
 791: LD_INT 0
 793: ST_TO_ADDR
// defcon_wave := 0 ;
 794: LD_ADDR_EXP 20
 798: PUSH
 799: LD_INT 0
 801: ST_TO_ADDR
// defenders := [ ] ;
 802: LD_ADDR_EXP 18
 806: PUSH
 807: EMPTY
 808: ST_TO_ADDR
// SetBName ( alfa , alpha ) ;
 809: LD_INT 5
 811: PPUSH
 812: LD_STRING alpha
 814: PPUSH
 815: CALL_OW 500
// uc_side := 1 ;
 819: LD_ADDR_OWVAR 20
 823: PUSH
 824: LD_INT 1
 826: ST_TO_ADDR
// uc_nation := 1 ;
 827: LD_ADDR_OWVAR 21
 831: PUSH
 832: LD_INT 1
 834: ST_TO_ADDR
// Powell := NewCharacter ( Powell ) ;
 835: LD_ADDR_EXP 14
 839: PUSH
 840: LD_STRING Powell
 842: PPUSH
 843: CALL_OW 25
 847: ST_TO_ADDR
// PlaceUnitXY ( Powell , 110 , 26 , false ) ;
 848: LD_EXP 14
 852: PPUSH
 853: LD_INT 110
 855: PPUSH
 856: LD_INT 26
 858: PPUSH
 859: LD_INT 0
 861: PPUSH
 862: CALL_OW 48
// ComHold ( Powell ) ;
 866: LD_EXP 14
 870: PPUSH
 871: CALL_OW 140
// for i = 1 to 5 do
 875: LD_ADDR_VAR 0 2
 879: PUSH
 880: DOUBLE
 881: LD_INT 1
 883: DEC
 884: ST_TO_ADDR
 885: LD_INT 5
 887: PUSH
 888: FOR_TO
 889: IFFALSE 945
// begin PrepareHuman ( false , 1 , 10 ) ;
 891: LD_INT 0
 893: PPUSH
 894: LD_INT 1
 896: PPUSH
 897: LD_INT 10
 899: PPUSH
 900: CALL_OW 380
// powell_guards := Insert ( powell_guards , 1 , CreateHuman ) ;
 904: LD_ADDR_EXP 17
 908: PUSH
 909: LD_EXP 17
 913: PPUSH
 914: LD_INT 1
 916: PPUSH
 917: CALL_OW 44
 921: PPUSH
 922: CALL_OW 2
 926: ST_TO_ADDR
// PlaceHumanInUnit ( powell_guards [ 1 ] , ambar0 ) ;
 927: LD_EXP 17
 931: PUSH
 932: LD_INT 1
 934: ARRAY
 935: PPUSH
 936: LD_INT 18
 938: PPUSH
 939: CALL_OW 52
// end ;
 943: GO 888
 945: POP
 946: POP
// if Difficulty > 2 then
 947: LD_OWVAR 67
 951: PUSH
 952: LD_INT 2
 954: GREATER
 955: IFFALSE 1004
// begin bc_type := b_turret ;
 957: LD_ADDR_OWVAR 42
 961: PUSH
 962: LD_INT 33
 964: ST_TO_ADDR
// bc_level := 7 ;
 965: LD_ADDR_OWVAR 43
 969: PUSH
 970: LD_INT 7
 972: ST_TO_ADDR
// b := CreateAndPlaceBuildingXYD ( 107 , 55 , 5 ) ;
 973: LD_ADDR_VAR 0 4
 977: PUSH
 978: LD_INT 107
 980: PPUSH
 981: LD_INT 55
 983: PPUSH
 984: LD_INT 5
 986: PPUSH
 987: CALL_OW 47
 991: ST_TO_ADDR
// PlaceWeaponTurret ( b , us_rocket_launcher ) ;
 992: LD_VAR 0 4
 996: PPUSH
 997: LD_INT 7
 999: PPUSH
1000: CALL_OW 431
// end ; for i in FilterAllUnits ( [ [ f_side , 1 ] , [ f_btype , b_factory ] ] ) ^ FilterAllUnits ( [ [ f_side , 1 ] , [ f_btype , b_control_tower ] ] ) do
1004: LD_ADDR_VAR 0 2
1008: PUSH
1009: LD_INT 22
1011: PUSH
1012: LD_INT 1
1014: PUSH
1015: EMPTY
1016: LIST
1017: LIST
1018: PUSH
1019: LD_INT 30
1021: PUSH
1022: LD_INT 3
1024: PUSH
1025: EMPTY
1026: LIST
1027: LIST
1028: PUSH
1029: EMPTY
1030: LIST
1031: LIST
1032: PPUSH
1033: CALL_OW 69
1037: PUSH
1038: LD_INT 22
1040: PUSH
1041: LD_INT 1
1043: PUSH
1044: EMPTY
1045: LIST
1046: LIST
1047: PUSH
1048: LD_INT 30
1050: PUSH
1051: LD_INT 36
1053: PUSH
1054: EMPTY
1055: LIST
1056: LIST
1057: PUSH
1058: EMPTY
1059: LIST
1060: LIST
1061: PPUSH
1062: CALL_OW 69
1066: ADD
1067: PUSH
1068: FOR_IN
1069: IFFALSE 1120
// for j = 1 to 3 do
1071: LD_ADDR_VAR 0 3
1075: PUSH
1076: DOUBLE
1077: LD_INT 1
1079: DEC
1080: ST_TO_ADDR
1081: LD_INT 3
1083: PUSH
1084: FOR_TO
1085: IFFALSE 1116
// begin PrepareHuman ( false , 3 , 6 ) ;
1087: LD_INT 0
1089: PPUSH
1090: LD_INT 3
1092: PPUSH
1093: LD_INT 6
1095: PPUSH
1096: CALL_OW 380
// PlaceHumanInUnit ( CreateHuman , i ) ;
1100: CALL_OW 44
1104: PPUSH
1105: LD_VAR 0 2
1109: PPUSH
1110: CALL_OW 52
// end ;
1114: GO 1084
1116: POP
1117: POP
1118: GO 1068
1120: POP
1121: POP
// end ;
1122: LD_VAR 0 1
1126: RET
// export function PreparePatrol ; var i , un ; begin
1127: LD_INT 0
1129: PPUSH
1130: PPUSH
1131: PPUSH
// uc_side := 1 ;
1132: LD_ADDR_OWVAR 20
1136: PUSH
1137: LD_INT 1
1139: ST_TO_ADDR
// uc_nation := 1 ;
1140: LD_ADDR_OWVAR 21
1144: PUSH
1145: LD_INT 1
1147: ST_TO_ADDR
// mobile_points := [ [ [ 99 , 55 ] , [ 113 , 67 ] , [ 129 , 68 ] , [ 135 , 62 ] , [ 103 , 41 ] ] , [ [ 27 , 49 ] , [ 46 , 49 ] , [ 87 , 70 ] , [ 99 , 79 ] , [ 118 , 111 ] , [ 99 , 79 ] , [ 87 , 70 ] , [ 46 , 49 ] ] , [ [ 200 , 88 ] , [ 175 , 80 ] , [ 135 , 62 ] , [ 117 , 53 ] , [ 103 , 41 ] , [ 99 , 24 ] , [ 85 , 3 ] , [ 99 , 24 ] , [ 103 , 41 ] , [ 98 , 47 ] , [ 99 , 56 ] , [ 96 , 66 ] , [ 99 , 56 ] , [ 112 , 66 ] , [ 129 , 68 ] , [ 135 , 62 ] , [ 156 , 71 ] , [ 168 , 76 ] , [ 168 , 61 ] , [ 168 , 75 ] , [ 185 , 85 ] ] ] ;
1148: LD_ADDR_EXP 16
1152: PUSH
1153: LD_INT 99
1155: PUSH
1156: LD_INT 55
1158: PUSH
1159: EMPTY
1160: LIST
1161: LIST
1162: PUSH
1163: LD_INT 113
1165: PUSH
1166: LD_INT 67
1168: PUSH
1169: EMPTY
1170: LIST
1171: LIST
1172: PUSH
1173: LD_INT 129
1175: PUSH
1176: LD_INT 68
1178: PUSH
1179: EMPTY
1180: LIST
1181: LIST
1182: PUSH
1183: LD_INT 135
1185: PUSH
1186: LD_INT 62
1188: PUSH
1189: EMPTY
1190: LIST
1191: LIST
1192: PUSH
1193: LD_INT 103
1195: PUSH
1196: LD_INT 41
1198: PUSH
1199: EMPTY
1200: LIST
1201: LIST
1202: PUSH
1203: EMPTY
1204: LIST
1205: LIST
1206: LIST
1207: LIST
1208: LIST
1209: PUSH
1210: LD_INT 27
1212: PUSH
1213: LD_INT 49
1215: PUSH
1216: EMPTY
1217: LIST
1218: LIST
1219: PUSH
1220: LD_INT 46
1222: PUSH
1223: LD_INT 49
1225: PUSH
1226: EMPTY
1227: LIST
1228: LIST
1229: PUSH
1230: LD_INT 87
1232: PUSH
1233: LD_INT 70
1235: PUSH
1236: EMPTY
1237: LIST
1238: LIST
1239: PUSH
1240: LD_INT 99
1242: PUSH
1243: LD_INT 79
1245: PUSH
1246: EMPTY
1247: LIST
1248: LIST
1249: PUSH
1250: LD_INT 118
1252: PUSH
1253: LD_INT 111
1255: PUSH
1256: EMPTY
1257: LIST
1258: LIST
1259: PUSH
1260: LD_INT 99
1262: PUSH
1263: LD_INT 79
1265: PUSH
1266: EMPTY
1267: LIST
1268: LIST
1269: PUSH
1270: LD_INT 87
1272: PUSH
1273: LD_INT 70
1275: PUSH
1276: EMPTY
1277: LIST
1278: LIST
1279: PUSH
1280: LD_INT 46
1282: PUSH
1283: LD_INT 49
1285: PUSH
1286: EMPTY
1287: LIST
1288: LIST
1289: PUSH
1290: EMPTY
1291: LIST
1292: LIST
1293: LIST
1294: LIST
1295: LIST
1296: LIST
1297: LIST
1298: LIST
1299: PUSH
1300: LD_INT 200
1302: PUSH
1303: LD_INT 88
1305: PUSH
1306: EMPTY
1307: LIST
1308: LIST
1309: PUSH
1310: LD_INT 175
1312: PUSH
1313: LD_INT 80
1315: PUSH
1316: EMPTY
1317: LIST
1318: LIST
1319: PUSH
1320: LD_INT 135
1322: PUSH
1323: LD_INT 62
1325: PUSH
1326: EMPTY
1327: LIST
1328: LIST
1329: PUSH
1330: LD_INT 117
1332: PUSH
1333: LD_INT 53
1335: PUSH
1336: EMPTY
1337: LIST
1338: LIST
1339: PUSH
1340: LD_INT 103
1342: PUSH
1343: LD_INT 41
1345: PUSH
1346: EMPTY
1347: LIST
1348: LIST
1349: PUSH
1350: LD_INT 99
1352: PUSH
1353: LD_INT 24
1355: PUSH
1356: EMPTY
1357: LIST
1358: LIST
1359: PUSH
1360: LD_INT 85
1362: PUSH
1363: LD_INT 3
1365: PUSH
1366: EMPTY
1367: LIST
1368: LIST
1369: PUSH
1370: LD_INT 99
1372: PUSH
1373: LD_INT 24
1375: PUSH
1376: EMPTY
1377: LIST
1378: LIST
1379: PUSH
1380: LD_INT 103
1382: PUSH
1383: LD_INT 41
1385: PUSH
1386: EMPTY
1387: LIST
1388: LIST
1389: PUSH
1390: LD_INT 98
1392: PUSH
1393: LD_INT 47
1395: PUSH
1396: EMPTY
1397: LIST
1398: LIST
1399: PUSH
1400: LD_INT 99
1402: PUSH
1403: LD_INT 56
1405: PUSH
1406: EMPTY
1407: LIST
1408: LIST
1409: PUSH
1410: LD_INT 96
1412: PUSH
1413: LD_INT 66
1415: PUSH
1416: EMPTY
1417: LIST
1418: LIST
1419: PUSH
1420: LD_INT 99
1422: PUSH
1423: LD_INT 56
1425: PUSH
1426: EMPTY
1427: LIST
1428: LIST
1429: PUSH
1430: LD_INT 112
1432: PUSH
1433: LD_INT 66
1435: PUSH
1436: EMPTY
1437: LIST
1438: LIST
1439: PUSH
1440: LD_INT 129
1442: PUSH
1443: LD_INT 68
1445: PUSH
1446: EMPTY
1447: LIST
1448: LIST
1449: PUSH
1450: LD_INT 135
1452: PUSH
1453: LD_INT 62
1455: PUSH
1456: EMPTY
1457: LIST
1458: LIST
1459: PUSH
1460: LD_INT 156
1462: PUSH
1463: LD_INT 71
1465: PUSH
1466: EMPTY
1467: LIST
1468: LIST
1469: PUSH
1470: LD_INT 168
1472: PUSH
1473: LD_INT 76
1475: PUSH
1476: EMPTY
1477: LIST
1478: LIST
1479: PUSH
1480: LD_INT 168
1482: PUSH
1483: LD_INT 61
1485: PUSH
1486: EMPTY
1487: LIST
1488: LIST
1489: PUSH
1490: LD_INT 168
1492: PUSH
1493: LD_INT 75
1495: PUSH
1496: EMPTY
1497: LIST
1498: LIST
1499: PUSH
1500: LD_INT 185
1502: PUSH
1503: LD_INT 85
1505: PUSH
1506: EMPTY
1507: LIST
1508: LIST
1509: PUSH
1510: EMPTY
1511: LIST
1512: LIST
1513: LIST
1514: LIST
1515: LIST
1516: LIST
1517: LIST
1518: LIST
1519: LIST
1520: LIST
1521: LIST
1522: LIST
1523: LIST
1524: LIST
1525: LIST
1526: LIST
1527: LIST
1528: LIST
1529: LIST
1530: LIST
1531: LIST
1532: PUSH
1533: EMPTY
1534: LIST
1535: LIST
1536: LIST
1537: ST_TO_ADDR
// mobile_patrol := [ ] ;
1538: LD_ADDR_EXP 15
1542: PUSH
1543: EMPTY
1544: ST_TO_ADDR
// PrepareVehicle ( us_medium_tracked , engine_combustion , control_computer , us_gatling_gun , 100 ) ;
1545: LD_INT 3
1547: PPUSH
1548: LD_INT 1
1550: PPUSH
1551: LD_INT 3
1553: PPUSH
1554: LD_INT 4
1556: PPUSH
1557: LD_INT 100
1559: PPUSH
1560: CALL 5839 0 5
// mobile_patrol := Insert ( mobile_patrol , 1 , CreateVehicle ) ;
1564: LD_ADDR_EXP 15
1568: PUSH
1569: LD_EXP 15
1573: PPUSH
1574: LD_INT 1
1576: PPUSH
1577: CALL_OW 45
1581: PPUSH
1582: CALL_OW 2
1586: ST_TO_ADDR
// PlaceUnitXY ( mobile_patrol [ 1 ] , 99 , 55 , false ) ;
1587: LD_EXP 15
1591: PUSH
1592: LD_INT 1
1594: ARRAY
1595: PPUSH
1596: LD_INT 99
1598: PPUSH
1599: LD_INT 55
1601: PPUSH
1602: LD_INT 0
1604: PPUSH
1605: CALL_OW 48
// PrepareVehicle ( us_medium_wheeled , engine_combustion , control_computer , us_gatling_gun , 100 ) ;
1609: LD_INT 2
1611: PPUSH
1612: LD_INT 1
1614: PPUSH
1615: LD_INT 3
1617: PPUSH
1618: LD_INT 4
1620: PPUSH
1621: LD_INT 100
1623: PPUSH
1624: CALL 5839 0 5
// mobile_patrol := Insert ( mobile_patrol , 2 , CreateVehicle ) ;
1628: LD_ADDR_EXP 15
1632: PUSH
1633: LD_EXP 15
1637: PPUSH
1638: LD_INT 2
1640: PPUSH
1641: CALL_OW 45
1645: PPUSH
1646: CALL_OW 2
1650: ST_TO_ADDR
// PlaceUnitXY ( mobile_patrol [ 2 ] , 27 , 49 , false ) ;
1651: LD_EXP 15
1655: PUSH
1656: LD_INT 2
1658: ARRAY
1659: PPUSH
1660: LD_INT 27
1662: PPUSH
1663: LD_INT 49
1665: PPUSH
1666: LD_INT 0
1668: PPUSH
1669: CALL_OW 48
// PrepareVehicle ( us_medium_tracked , engine_combustion , control_computer , [ us_laser , us_rocket_launcher , us_rocket_launcher ] [ Difficulty ] , 100 ) ;
1673: LD_INT 3
1675: PPUSH
1676: LD_INT 1
1678: PPUSH
1679: LD_INT 3
1681: PPUSH
1682: LD_INT 9
1684: PUSH
1685: LD_INT 7
1687: PUSH
1688: LD_INT 7
1690: PUSH
1691: EMPTY
1692: LIST
1693: LIST
1694: LIST
1695: PUSH
1696: LD_OWVAR 67
1700: ARRAY
1701: PPUSH
1702: LD_INT 100
1704: PPUSH
1705: CALL 5839 0 5
// mobile_patrol := Insert ( mobile_patrol , 3 , CreateVehicle ) ;
1709: LD_ADDR_EXP 15
1713: PUSH
1714: LD_EXP 15
1718: PPUSH
1719: LD_INT 3
1721: PPUSH
1722: CALL_OW 45
1726: PPUSH
1727: CALL_OW 2
1731: ST_TO_ADDR
// PlaceUnitXY ( mobile_patrol [ 3 ] , 200 , 88 , false ) ;
1732: LD_EXP 15
1736: PUSH
1737: LD_INT 3
1739: ARRAY
1740: PPUSH
1741: LD_INT 200
1743: PPUSH
1744: LD_INT 88
1746: PPUSH
1747: LD_INT 0
1749: PPUSH
1750: CALL_OW 48
// for i = mobile_patrol downto 1 do
1754: LD_ADDR_VAR 0 2
1758: PUSH
1759: DOUBLE
1760: LD_EXP 15
1764: INC
1765: ST_TO_ADDR
1766: LD_INT 1
1768: PUSH
1769: FOR_DOWNTO
1770: IFFALSE 1781
// RaiseSailEvent ( 1 ) ;
1772: LD_INT 1
1774: PPUSH
1775: CALL_OW 427
1779: GO 1769
1781: POP
1782: POP
// end ;
1783: LD_VAR 0 1
1787: RET
// export function SpawnCargo ( ) ; var i , c , k , areas , road , tmp , veh ; begin
1788: LD_INT 0
1790: PPUSH
1791: PPUSH
1792: PPUSH
1793: PPUSH
1794: PPUSH
1795: PPUSH
1796: PPUSH
1797: PPUSH
// areas := [ [ road_east , 4 ] , [ road_south , 5 ] , [ road_west , 1 ] ] ;
1798: LD_ADDR_VAR 0 5
1802: PUSH
1803: LD_INT 20
1805: PUSH
1806: LD_INT 4
1808: PUSH
1809: EMPTY
1810: LIST
1811: LIST
1812: PUSH
1813: LD_INT 21
1815: PUSH
1816: LD_INT 5
1818: PUSH
1819: EMPTY
1820: LIST
1821: LIST
1822: PUSH
1823: LD_INT 22
1825: PUSH
1826: LD_INT 1
1828: PUSH
1829: EMPTY
1830: LIST
1831: LIST
1832: PUSH
1833: EMPTY
1834: LIST
1835: LIST
1836: LIST
1837: ST_TO_ADDR
// road := [ [ 176 , 81 , 135 , 62 , 114 , 67 , 93 , 71 , 76 , 67 ] , [ 107 , 92 , 92 , 72 , 77 , 68 ] , [ 45 , 49 , 67 , 59 , 77 , 68 ] ] ;
1838: LD_ADDR_VAR 0 6
1842: PUSH
1843: LD_INT 176
1845: PUSH
1846: LD_INT 81
1848: PUSH
1849: LD_INT 135
1851: PUSH
1852: LD_INT 62
1854: PUSH
1855: LD_INT 114
1857: PUSH
1858: LD_INT 67
1860: PUSH
1861: LD_INT 93
1863: PUSH
1864: LD_INT 71
1866: PUSH
1867: LD_INT 76
1869: PUSH
1870: LD_INT 67
1872: PUSH
1873: EMPTY
1874: LIST
1875: LIST
1876: LIST
1877: LIST
1878: LIST
1879: LIST
1880: LIST
1881: LIST
1882: LIST
1883: LIST
1884: PUSH
1885: LD_INT 107
1887: PUSH
1888: LD_INT 92
1890: PUSH
1891: LD_INT 92
1893: PUSH
1894: LD_INT 72
1896: PUSH
1897: LD_INT 77
1899: PUSH
1900: LD_INT 68
1902: PUSH
1903: EMPTY
1904: LIST
1905: LIST
1906: LIST
1907: LIST
1908: LIST
1909: LIST
1910: PUSH
1911: LD_INT 45
1913: PUSH
1914: LD_INT 49
1916: PUSH
1917: LD_INT 67
1919: PUSH
1920: LD_INT 59
1922: PUSH
1923: LD_INT 77
1925: PUSH
1926: LD_INT 68
1928: PUSH
1929: EMPTY
1930: LIST
1931: LIST
1932: LIST
1933: LIST
1934: LIST
1935: LIST
1936: PUSH
1937: EMPTY
1938: LIST
1939: LIST
1940: LIST
1941: ST_TO_ADDR
// k := rand ( 1 , areas ) ;
1942: LD_ADDR_VAR 0 4
1946: PUSH
1947: LD_INT 1
1949: PPUSH
1950: LD_VAR 0 5
1954: PPUSH
1955: CALL_OW 12
1959: ST_TO_ADDR
// c := rand ( 1 , 2 ) ;
1960: LD_ADDR_VAR 0 3
1964: PUSH
1965: LD_INT 1
1967: PPUSH
1968: LD_INT 2
1970: PPUSH
1971: CALL_OW 12
1975: ST_TO_ADDR
// uc_side := 1 ;
1976: LD_ADDR_OWVAR 20
1980: PUSH
1981: LD_INT 1
1983: ST_TO_ADDR
// uc_nation := 1 ;
1984: LD_ADDR_OWVAR 21
1988: PUSH
1989: LD_INT 1
1991: ST_TO_ADDR
// PrepareVehicle ( us_medium_wheeled , engine_siberite , control_computer , us_cargo_bay , 100 ) ;
1992: LD_INT 2
1994: PPUSH
1995: LD_INT 3
1997: PPUSH
1998: LD_INT 3
2000: PPUSH
2001: LD_INT 12
2003: PPUSH
2004: LD_INT 100
2006: PPUSH
2007: CALL 5839 0 5
// veh := CreateVehicle ;
2011: LD_ADDR_VAR 0 8
2015: PUSH
2016: CALL_OW 45
2020: ST_TO_ADDR
// SetDir ( veh , areas [ k ] [ 2 ] ) ;
2021: LD_VAR 0 8
2025: PPUSH
2026: LD_VAR 0 5
2030: PUSH
2031: LD_VAR 0 4
2035: ARRAY
2036: PUSH
2037: LD_INT 2
2039: ARRAY
2040: PPUSH
2041: CALL_OW 233
// PlaceUnitArea ( veh , areas [ k ] [ 1 ] , false ) ;
2045: LD_VAR 0 8
2049: PPUSH
2050: LD_VAR 0 5
2054: PUSH
2055: LD_VAR 0 4
2059: ARRAY
2060: PUSH
2061: LD_INT 1
2063: ARRAY
2064: PPUSH
2065: LD_INT 0
2067: PPUSH
2068: CALL_OW 49
// SetCargo ( veh , [ mat_cans , mat_siberit ] [ c ] , 100 ) ;
2072: LD_VAR 0 8
2076: PPUSH
2077: LD_INT 1
2079: PUSH
2080: LD_INT 3
2082: PUSH
2083: EMPTY
2084: LIST
2085: LIST
2086: PUSH
2087: LD_VAR 0 3
2091: ARRAY
2092: PPUSH
2093: LD_INT 100
2095: PPUSH
2096: CALL_OW 290
// tmp := road [ k ] ;
2100: LD_ADDR_VAR 0 7
2104: PUSH
2105: LD_VAR 0 6
2109: PUSH
2110: LD_VAR 0 4
2114: ARRAY
2115: ST_TO_ADDR
// for i = 1 to tmp div 2 do
2116: LD_ADDR_VAR 0 2
2120: PUSH
2121: DOUBLE
2122: LD_INT 1
2124: DEC
2125: ST_TO_ADDR
2126: LD_VAR 0 7
2130: PUSH
2131: LD_INT 2
2133: DIV
2134: PUSH
2135: FOR_TO
2136: IFFALSE 2183
// AddComMoveXY ( veh , tmp [ i * 2 - 1 ] , tmp [ i * 2 ] ) ;
2138: LD_VAR 0 8
2142: PPUSH
2143: LD_VAR 0 7
2147: PUSH
2148: LD_VAR 0 2
2152: PUSH
2153: LD_INT 2
2155: MUL
2156: PUSH
2157: LD_INT 1
2159: MINUS
2160: ARRAY
2161: PPUSH
2162: LD_VAR 0 7
2166: PUSH
2167: LD_VAR 0 2
2171: PUSH
2172: LD_INT 2
2174: MUL
2175: ARRAY
2176: PPUSH
2177: CALL_OW 171
2181: GO 2135
2183: POP
2184: POP
// AddComGive ( veh , alfa ) ;
2185: LD_VAR 0 8
2189: PPUSH
2190: LD_INT 5
2192: PPUSH
2193: CALL_OW 221
// AddComWait ( veh , 0 0$2 ) ;
2197: LD_VAR 0 8
2201: PPUSH
2202: LD_INT 70
2204: PPUSH
2205: CALL_OW 202
// for i = tmp div 2 downto 1 do
2209: LD_ADDR_VAR 0 2
2213: PUSH
2214: DOUBLE
2215: LD_VAR 0 7
2219: PUSH
2220: LD_INT 2
2222: DIV
2223: INC
2224: ST_TO_ADDR
2225: LD_INT 1
2227: PUSH
2228: FOR_DOWNTO
2229: IFFALSE 2276
// AddComMoveXY ( veh , tmp [ i * 2 - 1 ] , tmp [ i * 2 ] ) ;
2231: LD_VAR 0 8
2235: PPUSH
2236: LD_VAR 0 7
2240: PUSH
2241: LD_VAR 0 2
2245: PUSH
2246: LD_INT 2
2248: MUL
2249: PUSH
2250: LD_INT 1
2252: MINUS
2253: ARRAY
2254: PPUSH
2255: LD_VAR 0 7
2259: PUSH
2260: LD_VAR 0 2
2264: PUSH
2265: LD_INT 2
2267: MUL
2268: ARRAY
2269: PPUSH
2270: CALL_OW 171
2274: GO 2228
2276: POP
2277: POP
// AddComMoveToArea ( veh , areas [ k ] [ 1 ] ) ;
2278: LD_VAR 0 8
2282: PPUSH
2283: LD_VAR 0 5
2287: PUSH
2288: LD_VAR 0 4
2292: ARRAY
2293: PUSH
2294: LD_INT 1
2296: ARRAY
2297: PPUSH
2298: CALL_OW 173
// repeat wait ( 0 0$1 ) ;
2302: LD_INT 35
2304: PPUSH
2305: CALL_OW 67
// until IsInArea ( veh , areas [ k ] [ 1 ] ) and GetCargo ( veh , c ) = 0 ;
2309: LD_VAR 0 8
2313: PPUSH
2314: LD_VAR 0 5
2318: PUSH
2319: LD_VAR 0 4
2323: ARRAY
2324: PUSH
2325: LD_INT 1
2327: ARRAY
2328: PPUSH
2329: CALL_OW 308
2333: PUSH
2334: LD_VAR 0 8
2338: PPUSH
2339: LD_VAR 0 3
2343: PPUSH
2344: CALL_OW 289
2348: PUSH
2349: LD_INT 0
2351: EQUAL
2352: AND
2353: IFFALSE 2302
// RemoveUnit ( veh ) ;
2355: LD_VAR 0 8
2359: PPUSH
2360: CALL_OW 64
// end ;
2364: LD_VAR 0 1
2368: RET
// every 3 3$00 do
2369: GO 2371
2371: DISABLE
// begin enable ;
2372: ENABLE
// SpawnCargo ;
2373: CALL 1788 0 0
// end ;
2377: END
// export function PrepareDefenders ; var i , tmp ; begin
2378: LD_INT 0
2380: PPUSH
2381: PPUSH
2382: PPUSH
// if defenders then
2383: LD_EXP 18
2387: IFFALSE 2391
// exit ;
2389: GO 2655
// for i = 1 to [ 4 , 5 , 6 ] [ Difficulty ] do
2391: LD_ADDR_VAR 0 2
2395: PUSH
2396: DOUBLE
2397: LD_INT 1
2399: DEC
2400: ST_TO_ADDR
2401: LD_INT 4
2403: PUSH
2404: LD_INT 5
2406: PUSH
2407: LD_INT 6
2409: PUSH
2410: EMPTY
2411: LIST
2412: LIST
2413: LIST
2414: PUSH
2415: LD_OWVAR 67
2419: ARRAY
2420: PUSH
2421: FOR_TO
2422: IFFALSE 2561
// begin tmp := Produce ( amfac2 , [ us_medium_wheeled , us_medium_tracked ] [ rand ( 1 , 2 ) ] , [ engine_combustion , engine_siberite ] [ rand ( 1 , 2 ) ] , control_remote , [ us_gatling_gun , us_double_gun , us_laser ] [ rand ( 1 , 3 ) ] ) ;
2424: LD_ADDR_VAR 0 3
2428: PUSH
2429: LD_INT 6
2431: PPUSH
2432: LD_INT 2
2434: PUSH
2435: LD_INT 3
2437: PUSH
2438: EMPTY
2439: LIST
2440: LIST
2441: PUSH
2442: LD_INT 1
2444: PPUSH
2445: LD_INT 2
2447: PPUSH
2448: CALL_OW 12
2452: ARRAY
2453: PPUSH
2454: LD_INT 1
2456: PUSH
2457: LD_INT 3
2459: PUSH
2460: EMPTY
2461: LIST
2462: LIST
2463: PUSH
2464: LD_INT 1
2466: PPUSH
2467: LD_INT 2
2469: PPUSH
2470: CALL_OW 12
2474: ARRAY
2475: PPUSH
2476: LD_INT 2
2478: PPUSH
2479: LD_INT 4
2481: PUSH
2482: LD_INT 5
2484: PUSH
2485: LD_INT 9
2487: PUSH
2488: EMPTY
2489: LIST
2490: LIST
2491: LIST
2492: PUSH
2493: LD_INT 1
2495: PPUSH
2496: LD_INT 3
2498: PPUSH
2499: CALL_OW 12
2503: ARRAY
2504: PPUSH
2505: CALL 28534 0 5
2509: ST_TO_ADDR
// if tmp then
2510: LD_VAR 0 3
2514: IFFALSE 2559
// AddComConstruct ( amfac2 , tmp [ 1 ] , tmp [ 2 ] , tmp [ 3 ] , tmp [ 4 ] ) ;
2516: LD_INT 6
2518: PPUSH
2519: LD_VAR 0 3
2523: PUSH
2524: LD_INT 1
2526: ARRAY
2527: PPUSH
2528: LD_VAR 0 3
2532: PUSH
2533: LD_INT 2
2535: ARRAY
2536: PPUSH
2537: LD_VAR 0 3
2541: PUSH
2542: LD_INT 3
2544: ARRAY
2545: PPUSH
2546: LD_VAR 0 3
2550: PUSH
2551: LD_INT 4
2553: ARRAY
2554: PPUSH
2555: CALL_OW 185
// end ;
2559: GO 2421
2561: POP
2562: POP
// repeat wait ( 0 0$1 ) ;
2563: LD_INT 35
2565: PPUSH
2566: CALL_OW 67
// until FilterAllUnits ( [ [ f_side , 1 ] , [ f_control , control_remote ] ] ) >= [ 4 , 5 , 6 ] [ Difficulty ] ;
2570: LD_INT 22
2572: PUSH
2573: LD_INT 1
2575: PUSH
2576: EMPTY
2577: LIST
2578: LIST
2579: PUSH
2580: LD_INT 33
2582: PUSH
2583: LD_INT 2
2585: PUSH
2586: EMPTY
2587: LIST
2588: LIST
2589: PUSH
2590: EMPTY
2591: LIST
2592: LIST
2593: PPUSH
2594: CALL_OW 69
2598: PUSH
2599: LD_INT 4
2601: PUSH
2602: LD_INT 5
2604: PUSH
2605: LD_INT 6
2607: PUSH
2608: EMPTY
2609: LIST
2610: LIST
2611: LIST
2612: PUSH
2613: LD_OWVAR 67
2617: ARRAY
2618: GREATEREQUAL
2619: IFFALSE 2563
// defenders := FilterAllUnits ( [ [ f_side , 1 ] , [ f_control , control_remote ] ] ) ;
2621: LD_ADDR_EXP 18
2625: PUSH
2626: LD_INT 22
2628: PUSH
2629: LD_INT 1
2631: PUSH
2632: EMPTY
2633: LIST
2634: LIST
2635: PUSH
2636: LD_INT 33
2638: PUSH
2639: LD_INT 2
2641: PUSH
2642: EMPTY
2643: LIST
2644: LIST
2645: PUSH
2646: EMPTY
2647: LIST
2648: LIST
2649: PPUSH
2650: CALL_OW 69
2654: ST_TO_ADDR
// end ;
2655: LD_VAR 0 1
2659: RET
// export function Defend ; var i , un , veh , tmp ; begin
2660: LD_INT 0
2662: PPUSH
2663: PPUSH
2664: PPUSH
2665: PPUSH
2666: PPUSH
// defcon_wave := defcon_wave + 1 ;
2667: LD_ADDR_EXP 20
2671: PUSH
2672: LD_EXP 20
2676: PUSH
2677: LD_INT 1
2679: PLUS
2680: ST_TO_ADDR
// if not defenders then
2681: LD_EXP 18
2685: NOT
2686: IFFALSE 2692
// PrepareDefenders ;
2688: CALL 2378 0 0
// if defcon_wave > 1 then
2692: LD_EXP 20
2696: PUSH
2697: LD_INT 1
2699: GREATER
2700: IFFALSE 2926
// begin for i = 1 to defcon_wave + 2 do
2702: LD_ADDR_VAR 0 2
2706: PUSH
2707: DOUBLE
2708: LD_INT 1
2710: DEC
2711: ST_TO_ADDR
2712: LD_EXP 20
2716: PUSH
2717: LD_INT 2
2719: PLUS
2720: PUSH
2721: FOR_TO
2722: IFFALSE 2848
// begin PrepareVehicle ( us_heavy_tracked , engine_siberite , control_manual , [ us_gatling_gun , us_heavy_gun , us_rocket_launcher ] [ rand ( 1 , 3 ) ] , 100 ) ;
2724: LD_INT 4
2726: PPUSH
2727: LD_INT 3
2729: PPUSH
2730: LD_INT 1
2732: PPUSH
2733: LD_INT 4
2735: PUSH
2736: LD_INT 6
2738: PUSH
2739: LD_INT 7
2741: PUSH
2742: EMPTY
2743: LIST
2744: LIST
2745: LIST
2746: PUSH
2747: LD_INT 1
2749: PPUSH
2750: LD_INT 3
2752: PPUSH
2753: CALL_OW 12
2757: ARRAY
2758: PPUSH
2759: LD_INT 100
2761: PPUSH
2762: CALL 5839 0 5
// veh := CreateVehicle ;
2766: LD_ADDR_VAR 0 4
2770: PUSH
2771: CALL_OW 45
2775: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
2776: LD_VAR 0 4
2780: PPUSH
2781: LD_INT 1
2783: PPUSH
2784: CALL_OW 233
// defenders := defenders ^ veh ;
2788: LD_ADDR_EXP 18
2792: PUSH
2793: LD_EXP 18
2797: PUSH
2798: LD_VAR 0 4
2802: ADD
2803: ST_TO_ADDR
// PrepareHuman ( false , 3 , 9 ) ;
2804: LD_INT 0
2806: PPUSH
2807: LD_INT 3
2809: PPUSH
2810: LD_INT 9
2812: PPUSH
2813: CALL_OW 380
// PlaceHumanInUnit ( CreateHuman , veh ) ;
2817: CALL_OW 44
2821: PPUSH
2822: LD_VAR 0 4
2826: PPUSH
2827: CALL_OW 52
// PlaceUnitArea ( veh , west_spawn , false ) ;
2831: LD_VAR 0 4
2835: PPUSH
2836: LD_INT 25
2838: PPUSH
2839: LD_INT 0
2841: PPUSH
2842: CALL_OW 49
// end ;
2846: GO 2721
2848: POP
2849: POP
// for i = 1 to defcon_wave do
2850: LD_ADDR_VAR 0 2
2854: PUSH
2855: DOUBLE
2856: LD_INT 1
2858: DEC
2859: ST_TO_ADDR
2860: LD_EXP 20
2864: PUSH
2865: FOR_TO
2866: IFFALSE 2924
// begin PrepareHuman ( false , 5 , 9 ) ;
2868: LD_INT 0
2870: PPUSH
2871: LD_INT 5
2873: PPUSH
2874: LD_INT 9
2876: PPUSH
2877: CALL_OW 380
// un := CreateHuman ;
2881: LD_ADDR_VAR 0 3
2885: PUSH
2886: CALL_OW 44
2890: ST_TO_ADDR
// PlaceUnitArea ( un , west_spawn , false ) ;
2891: LD_VAR 0 3
2895: PPUSH
2896: LD_INT 25
2898: PPUSH
2899: LD_INT 0
2901: PPUSH
2902: CALL_OW 49
// defenders := defenders ^ un ;
2906: LD_ADDR_EXP 18
2910: PUSH
2911: LD_EXP 18
2915: PUSH
2916: LD_VAR 0 3
2920: ADD
2921: ST_TO_ADDR
// end ;
2922: GO 2865
2924: POP
2925: POP
// end ; repeat wait ( 0 0$1 ) ;
2926: LD_INT 35
2928: PPUSH
2929: CALL_OW 67
// for i in defenders do
2933: LD_ADDR_VAR 0 2
2937: PUSH
2938: LD_EXP 18
2942: PUSH
2943: FOR_IN
2944: IFFALSE 3026
// begin if defcon and GetDistUnitXY ( i , defcon [ 1 ] , defcon [ 2 ] ) > 10 and not HasTask ( i ) then
2946: LD_EXP 19
2950: PUSH
2951: LD_VAR 0 2
2955: PPUSH
2956: LD_EXP 19
2960: PUSH
2961: LD_INT 1
2963: ARRAY
2964: PPUSH
2965: LD_EXP 19
2969: PUSH
2970: LD_INT 2
2972: ARRAY
2973: PPUSH
2974: CALL_OW 297
2978: PUSH
2979: LD_INT 10
2981: GREATER
2982: AND
2983: PUSH
2984: LD_VAR 0 2
2988: PPUSH
2989: CALL_OW 314
2993: NOT
2994: AND
2995: IFFALSE 3024
// ComAgressiveMove ( i , defcon [ 1 ] , defcon [ 2 ] ) ;
2997: LD_VAR 0 2
3001: PPUSH
3002: LD_EXP 19
3006: PUSH
3007: LD_INT 1
3009: ARRAY
3010: PPUSH
3011: LD_EXP 19
3015: PUSH
3016: LD_INT 2
3018: ARRAY
3019: PPUSH
3020: CALL_OW 114
// end ;
3024: GO 2943
3026: POP
3027: POP
// until not defenders ;
3028: LD_EXP 18
3032: NOT
3033: IFFALSE 2926
// end ;
3035: LD_VAR 0 1
3039: RET
// every 0 0$1 do var radar , i ;
3040: GO 3042
3042: DISABLE
3043: LD_INT 0
3045: PPUSH
3046: PPUSH
// begin uc_side := 1 ;
3047: LD_ADDR_OWVAR 20
3051: PUSH
3052: LD_INT 1
3054: ST_TO_ADDR
// uc_nation := 1 ;
3055: LD_ADDR_OWVAR 21
3059: PUSH
3060: LD_INT 1
3062: ST_TO_ADDR
// PrepareVehicle ( us_light_wheeled , engine_solar , control_computer , us_radar , 100 ) ;
3063: LD_INT 1
3065: PPUSH
3066: LD_INT 2
3068: PPUSH
3069: LD_INT 3
3071: PPUSH
3072: LD_INT 11
3074: PPUSH
3075: LD_INT 100
3077: PPUSH
3078: CALL 5839 0 5
// radar := CreateVehicle ;
3082: LD_ADDR_VAR 0 1
3086: PUSH
3087: CALL_OW 45
3091: ST_TO_ADDR
// SetDir ( radar , 4 ) ;
3092: LD_VAR 0 1
3096: PPUSH
3097: LD_INT 4
3099: PPUSH
3100: CALL_OW 233
// PlaceUnitXY ( radar , 51 , 45 , false ) ;
3104: LD_VAR 0 1
3108: PPUSH
3109: LD_INT 51
3111: PPUSH
3112: LD_INT 45
3114: PPUSH
3115: LD_INT 0
3117: PPUSH
3118: CALL_OW 48
// repeat AddComWait ( radar , 0 0$20 ) ;
3122: LD_VAR 0 1
3126: PPUSH
3127: LD_INT 700
3129: PPUSH
3130: CALL_OW 202
// AddComMoveXY ( radar , 65 , 75 ) ;
3134: LD_VAR 0 1
3138: PPUSH
3139: LD_INT 65
3141: PPUSH
3142: LD_INT 75
3144: PPUSH
3145: CALL_OW 171
// AddComWait ( radar , 0 0$10 ) ;
3149: LD_VAR 0 1
3153: PPUSH
3154: LD_INT 350
3156: PPUSH
3157: CALL_OW 202
// AddComMoveXY ( radar , 83 , 87 ) ;
3161: LD_VAR 0 1
3165: PPUSH
3166: LD_INT 83
3168: PPUSH
3169: LD_INT 87
3171: PPUSH
3172: CALL_OW 171
// AddComWait ( radar , 0 0$15 ) ;
3176: LD_VAR 0 1
3180: PPUSH
3181: LD_INT 525
3183: PPUSH
3184: CALL_OW 202
// AddComMoveXY ( radar , 94 , 81 ) ;
3188: LD_VAR 0 1
3192: PPUSH
3193: LD_INT 94
3195: PPUSH
3196: LD_INT 81
3198: PPUSH
3199: CALL_OW 171
// AddComWait ( radar , 0 0$10 ) ;
3203: LD_VAR 0 1
3207: PPUSH
3208: LD_INT 350
3210: PPUSH
3211: CALL_OW 202
// AddComMoveXY ( radar , 55 , 48 ) ;
3215: LD_VAR 0 1
3219: PPUSH
3220: LD_INT 55
3222: PPUSH
3223: LD_INT 48
3225: PPUSH
3226: CALL_OW 171
// wait ( 1 1$00 ) ;
3230: LD_INT 2100
3232: PPUSH
3233: CALL_OW 67
// until not IsOk ( radar ) ;
3237: LD_VAR 0 1
3241: PPUSH
3242: CALL_OW 302
3246: NOT
3247: IFFALSE 3122
// end ;
3249: PPOPN 2
3251: END
// every 7 7$30 trigger Difficulty > 1 and extra_patrol do var un ;
3252: LD_OWVAR 67
3256: PUSH
3257: LD_INT 1
3259: GREATER
3260: PUSH
3261: LD_EXP 11
3265: AND
3266: IFFALSE 3488
3268: GO 3270
3270: DISABLE
3271: LD_INT 0
3273: PPUSH
// begin enable ;
3274: ENABLE
// uc_side := 1 ;
3275: LD_ADDR_OWVAR 20
3279: PUSH
3280: LD_INT 1
3282: ST_TO_ADDR
// uc_nation := 1 ;
3283: LD_ADDR_OWVAR 21
3287: PUSH
3288: LD_INT 1
3290: ST_TO_ADDR
// PrepareVehicle ( us_morphling , engine_siberite , control_computer , us_gatling_gun , 100 ) ;
3291: LD_INT 5
3293: PPUSH
3294: LD_INT 3
3296: PPUSH
3297: LD_INT 3
3299: PPUSH
3300: LD_INT 4
3302: PPUSH
3303: LD_INT 100
3305: PPUSH
3306: CALL 5839 0 5
// un := CreateVehicle ;
3310: LD_ADDR_VAR 0 1
3314: PUSH
3315: CALL_OW 45
3319: ST_TO_ADDR
// SetDir ( un , 3 ) ;
3320: LD_VAR 0 1
3324: PPUSH
3325: LD_INT 3
3327: PPUSH
3328: CALL_OW 233
// PlaceUnitXY ( un , 155 , 2 , false ) ;
3332: LD_VAR 0 1
3336: PPUSH
3337: LD_INT 155
3339: PPUSH
3340: LD_INT 2
3342: PPUSH
3343: LD_INT 0
3345: PPUSH
3346: CALL_OW 48
// ComAgressiveMove ( un , 169 , 77 ) ;
3350: LD_VAR 0 1
3354: PPUSH
3355: LD_INT 169
3357: PPUSH
3358: LD_INT 77
3360: PPUSH
3361: CALL_OW 114
// AddComWait ( un , 0 0$2 ) ;
3365: LD_VAR 0 1
3369: PPUSH
3370: LD_INT 70
3372: PPUSH
3373: CALL_OW 202
// AddComAgressiveMove ( un , 134 , 62 ) ;
3377: LD_VAR 0 1
3381: PPUSH
3382: LD_INT 134
3384: PPUSH
3385: LD_INT 62
3387: PPUSH
3388: CALL_OW 174
// AddComAgressiveMove ( un , 103 , 42 ) ;
3392: LD_VAR 0 1
3396: PPUSH
3397: LD_INT 103
3399: PPUSH
3400: LD_INT 42
3402: PPUSH
3403: CALL_OW 174
// AddComWait ( un , 0 0$2 ) ;
3407: LD_VAR 0 1
3411: PPUSH
3412: LD_INT 70
3414: PPUSH
3415: CALL_OW 202
// AddComAgressiveMove ( un , 84 , 2 ) ;
3419: LD_VAR 0 1
3423: PPUSH
3424: LD_INT 84
3426: PPUSH
3427: LD_INT 2
3429: PPUSH
3430: CALL_OW 174
// repeat wait ( 0 0$1 ) ;
3434: LD_INT 35
3436: PPUSH
3437: CALL_OW 67
// if IsDead ( un ) then
3441: LD_VAR 0 1
3445: PPUSH
3446: CALL_OW 301
3450: IFFALSE 3462
// begin extra_patrol := false ;
3452: LD_ADDR_EXP 11
3456: PUSH
3457: LD_INT 0
3459: ST_TO_ADDR
// exit ;
3460: GO 3488
// end ; until IsAt ( un , 84 , 2 ) ;
3462: LD_VAR 0 1
3466: PPUSH
3467: LD_INT 84
3469: PPUSH
3470: LD_INT 2
3472: PPUSH
3473: CALL_OW 307
3477: IFFALSE 3434
// RemoveUnit ( un ) ;
3479: LD_VAR 0 1
3483: PPUSH
3484: CALL_OW 64
// end ; end_of_file
3488: PPOPN 1
3490: END
// export Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi , Simms , Joan , DeltaDoctor ; export function PrepareFriends ; var i , tmp , buildings , areas , bunkers , cl ; begin
3491: LD_INT 0
3493: PPUSH
3494: PPUSH
3495: PPUSH
3496: PPUSH
3497: PPUSH
3498: PPUSH
3499: PPUSH
// uc_side := 4 ;
3500: LD_ADDR_OWVAR 20
3504: PUSH
3505: LD_INT 4
3507: ST_TO_ADDR
// uc_nation := 1 ;
3508: LD_ADDR_OWVAR 21
3512: PUSH
3513: LD_INT 1
3515: ST_TO_ADDR
// DeltaDoctor := PrepareUnit ( DeltaDoctor , ( not debug ) , 10c_ ) ;
3516: LD_ADDR_EXP 35
3520: PUSH
3521: LD_STRING DeltaDoctor
3523: PPUSH
3524: LD_EXP 1
3528: NOT
3529: PPUSH
3530: LD_STRING 10c_
3532: PPUSH
3533: CALL 5776 0 3
3537: ST_TO_ADDR
// Joan := PrepareUnit ( Joan , ( not debug ) , 10c_ ) ;
3538: LD_ADDR_EXP 34
3542: PUSH
3543: LD_STRING Joan
3545: PPUSH
3546: LD_EXP 1
3550: NOT
3551: PPUSH
3552: LD_STRING 10c_
3554: PPUSH
3555: CALL 5776 0 3
3559: ST_TO_ADDR
// if Joan then
3560: LD_EXP 34
3564: IFFALSE 3595
// friends := Insert ( friends , friends + 1 , Joan ) ;
3566: LD_ADDR_EXP 4
3570: PUSH
3571: LD_EXP 4
3575: PPUSH
3576: LD_EXP 4
3580: PUSH
3581: LD_INT 1
3583: PLUS
3584: PPUSH
3585: LD_EXP 34
3589: PPUSH
3590: CALL_OW 2
3594: ST_TO_ADDR
// Simms := PrepareUnit ( Simms , ( not debug ) , 10c_ ) ;
3595: LD_ADDR_EXP 33
3599: PUSH
3600: LD_STRING Simms
3602: PPUSH
3603: LD_EXP 1
3607: NOT
3608: PPUSH
3609: LD_STRING 10c_
3611: PPUSH
3612: CALL 5776 0 3
3616: ST_TO_ADDR
// Kikuchi := PrepareUnit ( Kikuchi , ( not debug ) , 11_ ) ;
3617: LD_ADDR_EXP 32
3621: PUSH
3622: LD_STRING Kikuchi
3624: PPUSH
3625: LD_EXP 1
3629: NOT
3630: PPUSH
3631: LD_STRING 11_
3633: PPUSH
3634: CALL 5776 0 3
3638: ST_TO_ADDR
// if Kikuchi then
3639: LD_EXP 32
3643: IFFALSE 3674
// friends := Insert ( friends , friends + 1 , Kikuchi ) ;
3645: LD_ADDR_EXP 4
3649: PUSH
3650: LD_EXP 4
3654: PPUSH
3655: LD_EXP 4
3659: PUSH
3660: LD_INT 1
3662: PLUS
3663: PPUSH
3664: LD_EXP 32
3668: PPUSH
3669: CALL_OW 2
3673: ST_TO_ADDR
// Frank := PrepareUnit ( Frank , ( not debug ) , 11_ ) ;
3674: LD_ADDR_EXP 31
3678: PUSH
3679: LD_STRING Frank
3681: PPUSH
3682: LD_EXP 1
3686: NOT
3687: PPUSH
3688: LD_STRING 11_
3690: PPUSH
3691: CALL 5776 0 3
3695: ST_TO_ADDR
// if Frank then
3696: LD_EXP 31
3700: IFFALSE 3731
// friends := Insert ( friends , friends + 1 , Frank ) ;
3702: LD_ADDR_EXP 4
3706: PUSH
3707: LD_EXP 4
3711: PPUSH
3712: LD_EXP 4
3716: PUSH
3717: LD_INT 1
3719: PLUS
3720: PPUSH
3721: LD_EXP 31
3725: PPUSH
3726: CALL_OW 2
3730: ST_TO_ADDR
// Gary := PrepareUnit ( Gary , ( not debug ) , 11_ ) ;
3731: LD_ADDR_EXP 30
3735: PUSH
3736: LD_STRING Gary
3738: PPUSH
3739: LD_EXP 1
3743: NOT
3744: PPUSH
3745: LD_STRING 11_
3747: PPUSH
3748: CALL 5776 0 3
3752: ST_TO_ADDR
// if Gary then
3753: LD_EXP 30
3757: IFFALSE 3788
// friends := Insert ( friends , friends + 1 , Gary ) ;
3759: LD_ADDR_EXP 4
3763: PUSH
3764: LD_EXP 4
3768: PPUSH
3769: LD_EXP 4
3773: PUSH
3774: LD_INT 1
3776: PLUS
3777: PPUSH
3778: LD_EXP 30
3782: PPUSH
3783: CALL_OW 2
3787: ST_TO_ADDR
// Cornel := PrepareUnit ( Cornell , ( not debug ) , 11_ ) ;
3788: LD_ADDR_EXP 29
3792: PUSH
3793: LD_STRING Cornell
3795: PPUSH
3796: LD_EXP 1
3800: NOT
3801: PPUSH
3802: LD_STRING 11_
3804: PPUSH
3805: CALL 5776 0 3
3809: ST_TO_ADDR
// if Cornel then
3810: LD_EXP 29
3814: IFFALSE 3845
// friends := Insert ( friends , friends + 1 , Cornel ) ;
3816: LD_ADDR_EXP 4
3820: PUSH
3821: LD_EXP 4
3825: PPUSH
3826: LD_EXP 4
3830: PUSH
3831: LD_INT 1
3833: PLUS
3834: PPUSH
3835: LD_EXP 29
3839: PPUSH
3840: CALL_OW 2
3844: ST_TO_ADDR
// Houten := PrepareUnit ( Houten , ( not debug ) , 11_ ) ;
3845: LD_ADDR_EXP 28
3849: PUSH
3850: LD_STRING Houten
3852: PPUSH
3853: LD_EXP 1
3857: NOT
3858: PPUSH
3859: LD_STRING 11_
3861: PPUSH
3862: CALL 5776 0 3
3866: ST_TO_ADDR
// if Houten then
3867: LD_EXP 28
3871: IFFALSE 3902
// friends := Insert ( friends , friends + 1 , Houten ) ;
3873: LD_ADDR_EXP 4
3877: PUSH
3878: LD_EXP 4
3882: PPUSH
3883: LD_EXP 4
3887: PUSH
3888: LD_INT 1
3890: PLUS
3891: PPUSH
3892: LD_EXP 28
3896: PPUSH
3897: CALL_OW 2
3901: ST_TO_ADDR
// Gladstone := PrepareUnit ( Gladstone , ( not debug ) , 11_ ) ;
3902: LD_ADDR_EXP 27
3906: PUSH
3907: LD_STRING Gladstone
3909: PPUSH
3910: LD_EXP 1
3914: NOT
3915: PPUSH
3916: LD_STRING 11_
3918: PPUSH
3919: CALL 5776 0 3
3923: ST_TO_ADDR
// if Gladstone then
3924: LD_EXP 27
3928: IFFALSE 3959
// friends := Insert ( friends , friends + 1 , Gladstone ) ;
3930: LD_ADDR_EXP 4
3934: PUSH
3935: LD_EXP 4
3939: PPUSH
3940: LD_EXP 4
3944: PUSH
3945: LD_INT 1
3947: PLUS
3948: PPUSH
3949: LD_EXP 27
3953: PPUSH
3954: CALL_OW 2
3958: ST_TO_ADDR
// Lisa := PrepareUnit ( Lisa , ( not debug ) , 11_ ) ;
3959: LD_ADDR_EXP 21
3963: PUSH
3964: LD_STRING Lisa
3966: PPUSH
3967: LD_EXP 1
3971: NOT
3972: PPUSH
3973: LD_STRING 11_
3975: PPUSH
3976: CALL 5776 0 3
3980: ST_TO_ADDR
// if Lisa then
3981: LD_EXP 21
3985: IFFALSE 4010
// friends := Insert ( friends , 1 , Lisa ) ;
3987: LD_ADDR_EXP 4
3991: PUSH
3992: LD_EXP 4
3996: PPUSH
3997: LD_INT 1
3999: PPUSH
4000: LD_EXP 21
4004: PPUSH
4005: CALL_OW 2
4009: ST_TO_ADDR
// Donaldson := PrepareUnit ( Donaldson , ( not debug ) , 11_ ) ;
4010: LD_ADDR_EXP 22
4014: PUSH
4015: LD_STRING Donaldson
4017: PPUSH
4018: LD_EXP 1
4022: NOT
4023: PPUSH
4024: LD_STRING 11_
4026: PPUSH
4027: CALL 5776 0 3
4031: ST_TO_ADDR
// if Donaldson then
4032: LD_EXP 22
4036: IFFALSE 4067
// friends := Insert ( friends , friends + 1 , Donaldson ) ;
4038: LD_ADDR_EXP 4
4042: PUSH
4043: LD_EXP 4
4047: PPUSH
4048: LD_EXP 4
4052: PUSH
4053: LD_INT 1
4055: PLUS
4056: PPUSH
4057: LD_EXP 22
4061: PPUSH
4062: CALL_OW 2
4066: ST_TO_ADDR
// Bobby := PrepareUnit ( Bobby , ( not debug ) , 11_ ) ;
4067: LD_ADDR_EXP 23
4071: PUSH
4072: LD_STRING Bobby
4074: PPUSH
4075: LD_EXP 1
4079: NOT
4080: PPUSH
4081: LD_STRING 11_
4083: PPUSH
4084: CALL 5776 0 3
4088: ST_TO_ADDR
// if Bobby then
4089: LD_EXP 23
4093: IFFALSE 4124
// friends := Insert ( friends , friends + 1 , Bobby ) ;
4095: LD_ADDR_EXP 4
4099: PUSH
4100: LD_EXP 4
4104: PPUSH
4105: LD_EXP 4
4109: PUSH
4110: LD_INT 1
4112: PLUS
4113: PPUSH
4114: LD_EXP 23
4118: PPUSH
4119: CALL_OW 2
4123: ST_TO_ADDR
// Cyrus := PrepareUnit ( Cyrus , ( not debug ) , 11_ ) ;
4124: LD_ADDR_EXP 24
4128: PUSH
4129: LD_STRING Cyrus
4131: PPUSH
4132: LD_EXP 1
4136: NOT
4137: PPUSH
4138: LD_STRING 11_
4140: PPUSH
4141: CALL 5776 0 3
4145: ST_TO_ADDR
// if Cyrus then
4146: LD_EXP 24
4150: IFFALSE 4181
// friends := Insert ( friends , friends + 1 , Cyrus ) ;
4152: LD_ADDR_EXP 4
4156: PUSH
4157: LD_EXP 4
4161: PPUSH
4162: LD_EXP 4
4166: PUSH
4167: LD_INT 1
4169: PLUS
4170: PPUSH
4171: LD_EXP 24
4175: PPUSH
4176: CALL_OW 2
4180: ST_TO_ADDR
// Denis := PrepareUnit ( Denis , ( not debug ) , 11_ ) ;
4181: LD_ADDR_EXP 25
4185: PUSH
4186: LD_STRING Denis
4188: PPUSH
4189: LD_EXP 1
4193: NOT
4194: PPUSH
4195: LD_STRING 11_
4197: PPUSH
4198: CALL 5776 0 3
4202: ST_TO_ADDR
// Brown := PrepareUnit ( Brown , ( not debug ) , 11_ ) ;
4203: LD_ADDR_EXP 26
4207: PUSH
4208: LD_STRING Brown
4210: PPUSH
4211: LD_EXP 1
4215: NOT
4216: PPUSH
4217: LD_STRING 11_
4219: PPUSH
4220: CALL 5776 0 3
4224: ST_TO_ADDR
// if Brown then
4225: LD_EXP 26
4229: IFFALSE 4260
// friends := Insert ( friends , friends + 1 , Brown ) ;
4231: LD_ADDR_EXP 4
4235: PUSH
4236: LD_EXP 4
4240: PPUSH
4241: LD_EXP 4
4245: PUSH
4246: LD_INT 1
4248: PLUS
4249: PPUSH
4250: LD_EXP 26
4254: PPUSH
4255: CALL_OW 2
4259: ST_TO_ADDR
// friends := friends ^ CreateCharacterSet ( 11c_others ) ^ CreateCharacterSet ( 11_others ) ;
4260: LD_ADDR_EXP 4
4264: PUSH
4265: LD_EXP 4
4269: PUSH
4270: LD_STRING 11c_others
4272: PPUSH
4273: CALL_OW 31
4277: ADD
4278: PUSH
4279: LD_STRING 11_others
4281: PPUSH
4282: CALL_OW 31
4286: ADD
4287: ST_TO_ADDR
// if friends < 18 then
4288: LD_EXP 4
4292: PUSH
4293: LD_INT 18
4295: LESS
4296: IFFALSE 4368
// for i = 1 to 18 do
4298: LD_ADDR_VAR 0 2
4302: PUSH
4303: DOUBLE
4304: LD_INT 1
4306: DEC
4307: ST_TO_ADDR
4308: LD_INT 18
4310: PUSH
4311: FOR_TO
4312: IFFALSE 4366
// begin PrepareHuman ( false , rand ( 1 , 4 ) , 7 ) ;
4314: LD_INT 0
4316: PPUSH
4317: LD_INT 1
4319: PPUSH
4320: LD_INT 4
4322: PPUSH
4323: CALL_OW 12
4327: PPUSH
4328: LD_INT 7
4330: PPUSH
4331: CALL_OW 380
// friends := Insert ( friends , friends + 1 , CreateHuman ) ;
4335: LD_ADDR_EXP 4
4339: PUSH
4340: LD_EXP 4
4344: PPUSH
4345: LD_EXP 4
4349: PUSH
4350: LD_INT 1
4352: PLUS
4353: PPUSH
4354: CALL_OW 44
4358: PPUSH
4359: CALL_OW 2
4363: ST_TO_ADDR
// end ;
4364: GO 4311
4366: POP
4367: POP
// for i in friends do
4368: LD_ADDR_VAR 0 2
4372: PUSH
4373: LD_EXP 4
4377: PUSH
4378: FOR_IN
4379: IFFALSE 4437
// if GetSkill ( i , 1 ) >= GetSkill ( i , 4 ) then
4381: LD_VAR 0 2
4385: PPUSH
4386: LD_INT 1
4388: PPUSH
4389: CALL_OW 259
4393: PUSH
4394: LD_VAR 0 2
4398: PPUSH
4399: LD_INT 4
4401: PPUSH
4402: CALL_OW 259
4406: GREATEREQUAL
4407: IFFALSE 4423
// SetClass ( i , class_soldier ) else
4409: LD_VAR 0 2
4413: PPUSH
4414: LD_INT 1
4416: PPUSH
4417: CALL_OW 336
4421: GO 4435
// SetClass ( i , class_scientistic ) ;
4423: LD_VAR 0 2
4427: PPUSH
4428: LD_INT 4
4430: PPUSH
4431: CALL_OW 336
4435: GO 4378
4437: POP
4438: POP
// if Frank then
4439: LD_EXP 31
4443: IFFALSE 4457
// SetClass ( Frank , class_sniper ) ;
4445: LD_EXP 31
4449: PPUSH
4450: LD_INT 5
4452: PPUSH
4453: CALL_OW 336
// SetClass ( [ Joan , Denis , DeltaDoctor , Simms ] , class_scientistic ) ;
4457: LD_EXP 34
4461: PUSH
4462: LD_EXP 25
4466: PUSH
4467: LD_EXP 35
4471: PUSH
4472: LD_EXP 33
4476: PUSH
4477: EMPTY
4478: LIST
4479: LIST
4480: LIST
4481: LIST
4482: PPUSH
4483: LD_INT 4
4485: PPUSH
4486: CALL_OW 336
// selected = CharacterSelection (  , 7 , 7 , [ sel_dont_change_class , JMM , Roth , Simms , Denis , DeltaDoctor , sel_not_hired , sel_changeable , sel_change_class ] ^ friends , [ class_soldier , [ class_scientistic , 2 ] , [ class_sniper , 0 , 3 ] ] ) ;
4490: LD_ADDR_EXP 3
4494: PUSH
4495: LD_STRING 
4497: PPUSH
4498: LD_INT 7
4500: PPUSH
4501: LD_INT 7
4503: PPUSH
4504: LD_INT -6
4506: PUSH
4507: LD_EXP 12
4511: PUSH
4512: LD_EXP 13
4516: PUSH
4517: LD_EXP 33
4521: PUSH
4522: LD_EXP 25
4526: PUSH
4527: LD_EXP 35
4531: PUSH
4532: LD_INT -2
4534: PUSH
4535: LD_INT -3
4537: PUSH
4538: LD_INT -5
4540: PUSH
4541: EMPTY
4542: LIST
4543: LIST
4544: LIST
4545: LIST
4546: LIST
4547: LIST
4548: LIST
4549: LIST
4550: LIST
4551: PUSH
4552: LD_EXP 4
4556: ADD
4557: PPUSH
4558: LD_INT 1
4560: PUSH
4561: LD_INT 4
4563: PUSH
4564: LD_INT 2
4566: PUSH
4567: EMPTY
4568: LIST
4569: LIST
4570: PUSH
4571: LD_INT 5
4573: PUSH
4574: LD_INT 0
4576: PUSH
4577: LD_INT 3
4579: PUSH
4580: EMPTY
4581: LIST
4582: LIST
4583: LIST
4584: PUSH
4585: EMPTY
4586: LIST
4587: LIST
4588: LIST
4589: PPUSH
4590: CALL_OW 42
4594: ST_TO_ADDR
// if Simms then
4595: LD_EXP 33
4599: IFFALSE 4617
// selected := selected ^ Simms ;
4601: LD_ADDR_EXP 3
4605: PUSH
4606: LD_EXP 3
4610: PUSH
4611: LD_EXP 33
4615: ADD
4616: ST_TO_ADDR
// if Denis then
4617: LD_EXP 25
4621: IFFALSE 4639
// selected := selected ^ Denis ;
4623: LD_ADDR_EXP 3
4627: PUSH
4628: LD_EXP 3
4632: PUSH
4633: LD_EXP 25
4637: ADD
4638: ST_TO_ADDR
// if DeltaDoctor then
4639: LD_EXP 35
4643: IFFALSE 4661
// selected := selected ^ DeltaDoctor ;
4645: LD_ADDR_EXP 3
4649: PUSH
4650: LD_EXP 3
4654: PUSH
4655: LD_EXP 35
4659: ADD
4660: ST_TO_ADDR
// friends := friends diff selected ;
4661: LD_ADDR_EXP 4
4665: PUSH
4666: LD_EXP 4
4670: PUSH
4671: LD_EXP 3
4675: DIFF
4676: ST_TO_ADDR
// buildings := [ [ ambar1 , ambar2 , ambar3 ] , [ amlab2 , amlab3 , amlab4 ] ] ;
4677: LD_ADDR_VAR 0 4
4681: PUSH
4682: LD_INT 111
4684: PUSH
4685: LD_INT 137
4687: PUSH
4688: LD_INT 51
4690: PUSH
4691: EMPTY
4692: LIST
4693: LIST
4694: LIST
4695: PUSH
4696: LD_INT 147
4698: PUSH
4699: LD_INT 129
4701: PUSH
4702: LD_INT 25
4704: PUSH
4705: EMPTY
4706: LIST
4707: LIST
4708: LIST
4709: PUSH
4710: EMPTY
4711: LIST
4712: LIST
4713: ST_TO_ADDR
// areas := [ friends_spawn_1 , friends_spawn_2 , friends_spawn_3 , friends_spawn_4 , friends_spawn_5 , friends_spawn_6 ] ;
4714: LD_ADDR_VAR 0 5
4718: PUSH
4719: LD_INT 5
4721: PUSH
4722: LD_INT 6
4724: PUSH
4725: LD_INT 7
4727: PUSH
4728: LD_INT 8
4730: PUSH
4731: LD_INT 17
4733: PUSH
4734: LD_INT 18
4736: PUSH
4737: EMPTY
4738: LIST
4739: LIST
4740: LIST
4741: LIST
4742: LIST
4743: LIST
4744: ST_TO_ADDR
// for i in buildings do
4745: LD_ADDR_VAR 0 2
4749: PUSH
4750: LD_VAR 0 4
4754: PUSH
4755: FOR_IN
4756: IFFALSE 4772
// SetSide ( i , 4 ) ;
4758: LD_VAR 0 2
4762: PPUSH
4763: LD_INT 4
4765: PPUSH
4766: CALL_OW 235
4770: GO 4755
4772: POP
4773: POP
// for i in selected do
4774: LD_ADDR_VAR 0 2
4778: PUSH
4779: LD_EXP 3
4783: PUSH
4784: FOR_IN
4785: IFFALSE 5047
// begin if GetClass ( i ) in [ 1 , 5 ] then
4787: LD_VAR 0 2
4791: PPUSH
4792: CALL_OW 257
4796: PUSH
4797: LD_INT 1
4799: PUSH
4800: LD_INT 5
4802: PUSH
4803: EMPTY
4804: LIST
4805: LIST
4806: IN
4807: IFFALSE 4928
// begin if buildings [ 1 ] then
4809: LD_VAR 0 4
4813: PUSH
4814: LD_INT 1
4816: ARRAY
4817: IFFALSE 4878
// begin PlaceHumanInUnit ( i , buildings [ 1 ] [ 1 ] ) ;
4819: LD_VAR 0 2
4823: PPUSH
4824: LD_VAR 0 4
4828: PUSH
4829: LD_INT 1
4831: ARRAY
4832: PUSH
4833: LD_INT 1
4835: ARRAY
4836: PPUSH
4837: CALL_OW 52
// buildings := Replace ( buildings , 1 , Delete ( buildings [ 1 ] , 1 ) ) ;
4841: LD_ADDR_VAR 0 4
4845: PUSH
4846: LD_VAR 0 4
4850: PPUSH
4851: LD_INT 1
4853: PPUSH
4854: LD_VAR 0 4
4858: PUSH
4859: LD_INT 1
4861: ARRAY
4862: PPUSH
4863: LD_INT 1
4865: PPUSH
4866: CALL_OW 3
4870: PPUSH
4871: CALL_OW 1
4875: ST_TO_ADDR
// end else
4876: GO 4926
// begin PlaceUnitArea ( i , areas [ 1 ] , false ) ;
4878: LD_VAR 0 2
4882: PPUSH
4883: LD_VAR 0 5
4887: PUSH
4888: LD_INT 1
4890: ARRAY
4891: PPUSH
4892: LD_INT 0
4894: PPUSH
4895: CALL_OW 49
// ComHold ( i ) ;
4899: LD_VAR 0 2
4903: PPUSH
4904: CALL_OW 140
// areas := Delete ( areas , 1 ) ;
4908: LD_ADDR_VAR 0 5
4912: PUSH
4913: LD_VAR 0 5
4917: PPUSH
4918: LD_INT 1
4920: PPUSH
4921: CALL_OW 3
4925: ST_TO_ADDR
// end ; end else
4926: GO 5045
// begin if buildings [ 2 ] then
4928: LD_VAR 0 4
4932: PUSH
4933: LD_INT 2
4935: ARRAY
4936: IFFALSE 4997
// begin PlaceHumanInUnit ( i , buildings [ 2 ] [ 1 ] ) ;
4938: LD_VAR 0 2
4942: PPUSH
4943: LD_VAR 0 4
4947: PUSH
4948: LD_INT 2
4950: ARRAY
4951: PUSH
4952: LD_INT 1
4954: ARRAY
4955: PPUSH
4956: CALL_OW 52
// buildings := Replace ( buildings , 2 , Delete ( buildings [ 2 ] , 1 ) ) ;
4960: LD_ADDR_VAR 0 4
4964: PUSH
4965: LD_VAR 0 4
4969: PPUSH
4970: LD_INT 2
4972: PPUSH
4973: LD_VAR 0 4
4977: PUSH
4978: LD_INT 2
4980: ARRAY
4981: PPUSH
4982: LD_INT 1
4984: PPUSH
4985: CALL_OW 3
4989: PPUSH
4990: CALL_OW 1
4994: ST_TO_ADDR
// end else
4995: GO 5045
// begin PlaceUnitArea ( i , areas [ 1 ] , false ) ;
4997: LD_VAR 0 2
5001: PPUSH
5002: LD_VAR 0 5
5006: PUSH
5007: LD_INT 1
5009: ARRAY
5010: PPUSH
5011: LD_INT 0
5013: PPUSH
5014: CALL_OW 49
// ComHold ( i ) ;
5018: LD_VAR 0 2
5022: PPUSH
5023: CALL_OW 140
// areas := Delete ( areas , 1 ) ;
5027: LD_ADDR_VAR 0 5
5031: PUSH
5032: LD_VAR 0 5
5036: PPUSH
5037: LD_INT 1
5039: PPUSH
5040: CALL_OW 3
5044: ST_TO_ADDR
// end ; end ; end ;
5045: GO 4784
5047: POP
5048: POP
// bunkers := FilterAllUnits ( [ [ f_side , 1 ] , [ f_btype , b_bunker ] ] ) ;
5049: LD_ADDR_VAR 0 6
5053: PUSH
5054: LD_INT 22
5056: PUSH
5057: LD_INT 1
5059: PUSH
5060: EMPTY
5061: LIST
5062: LIST
5063: PUSH
5064: LD_INT 30
5066: PUSH
5067: LD_INT 32
5069: PUSH
5070: EMPTY
5071: LIST
5072: LIST
5073: PUSH
5074: EMPTY
5075: LIST
5076: LIST
5077: PPUSH
5078: CALL_OW 69
5082: ST_TO_ADDR
// for i = bunkers - friends downto 1 do
5083: LD_ADDR_VAR 0 2
5087: PUSH
5088: DOUBLE
5089: LD_VAR 0 6
5093: PUSH
5094: LD_EXP 4
5098: MINUS
5099: INC
5100: ST_TO_ADDR
5101: LD_INT 1
5103: PUSH
5104: FOR_DOWNTO
5105: IFFALSE 5168
// begin PrepareHuman ( false , 1 , [ 7 , 8 , 9 ] [ Difficulty ] ) ;
5107: LD_INT 0
5109: PPUSH
5110: LD_INT 1
5112: PPUSH
5113: LD_INT 7
5115: PUSH
5116: LD_INT 8
5118: PUSH
5119: LD_INT 9
5121: PUSH
5122: EMPTY
5123: LIST
5124: LIST
5125: LIST
5126: PUSH
5127: LD_OWVAR 67
5131: ARRAY
5132: PPUSH
5133: CALL_OW 380
// friends := Insert ( friends , friends + 1 , CreateHuman ) ;
5137: LD_ADDR_EXP 4
5141: PUSH
5142: LD_EXP 4
5146: PPUSH
5147: LD_EXP 4
5151: PUSH
5152: LD_INT 1
5154: PLUS
5155: PPUSH
5156: CALL_OW 44
5160: PPUSH
5161: CALL_OW 2
5165: ST_TO_ADDR
// end ;
5166: GO 5104
5168: POP
5169: POP
// if friends then
5170: LD_EXP 4
5174: IFFALSE 5290
// begin tmp := friends ;
5176: LD_ADDR_VAR 0 3
5180: PUSH
5181: LD_EXP 4
5185: ST_TO_ADDR
// for i = 1 to bunkers do
5186: LD_ADDR_VAR 0 2
5190: PUSH
5191: DOUBLE
5192: LD_INT 1
5194: DEC
5195: ST_TO_ADDR
5196: LD_VAR 0 6
5200: PUSH
5201: FOR_TO
5202: IFFALSE 5288
// begin SetSide ( tmp [ tmp ] , 1 ) ;
5204: LD_VAR 0 3
5208: PUSH
5209: LD_VAR 0 3
5213: ARRAY
5214: PPUSH
5215: LD_INT 1
5217: PPUSH
5218: CALL_OW 235
// SetClass ( tmp [ tmp ] , 1 ) ;
5222: LD_VAR 0 3
5226: PUSH
5227: LD_VAR 0 3
5231: ARRAY
5232: PPUSH
5233: LD_INT 1
5235: PPUSH
5236: CALL_OW 336
// PlaceHumanInUnit ( tmp [ tmp ] , bunkers [ i ] ) ;
5240: LD_VAR 0 3
5244: PUSH
5245: LD_VAR 0 3
5249: ARRAY
5250: PPUSH
5251: LD_VAR 0 6
5255: PUSH
5256: LD_VAR 0 2
5260: ARRAY
5261: PPUSH
5262: CALL_OW 52
// tmp := Delete ( tmp , tmp ) ;
5266: LD_ADDR_VAR 0 3
5270: PUSH
5271: LD_VAR 0 3
5275: PPUSH
5276: LD_VAR 0 3
5280: PPUSH
5281: CALL_OW 3
5285: ST_TO_ADDR
// end ;
5286: GO 5201
5288: POP
5289: POP
// end ; areas := areas union [ guard_spawn_1 , guard_spawn_2 , guard_spawn_3 , guard_spawn_4 , guard_spawn_5 , guard_spawn_6 , guard_spawn_7 , guard_spawn_8 , guard_spawn_9 , guard_spawn_10 , guard_spawn_11 , guard_spawn_12 , guard_spawn_13 , guard_spawn_14 , guard_spawn_15 , guard_spawn_16 , guard_spawn_17 , guard_spawn_18 , guard_spawn_19 , guard_spawn_20 ] ;
5290: LD_ADDR_VAR 0 5
5294: PUSH
5295: LD_VAR 0 5
5299: PUSH
5300: LD_INT 9
5302: PUSH
5303: LD_INT 10
5305: PUSH
5306: LD_INT 11
5308: PUSH
5309: LD_INT 12
5311: PUSH
5312: LD_INT 13
5314: PUSH
5315: LD_INT 14
5317: PUSH
5318: LD_INT 15
5320: PUSH
5321: LD_INT 16
5323: PUSH
5324: LD_INT 26
5326: PUSH
5327: LD_INT 27
5329: PUSH
5330: LD_INT 28
5332: PUSH
5333: LD_INT 29
5335: PUSH
5336: LD_INT 30
5338: PUSH
5339: LD_INT 31
5341: PUSH
5342: LD_INT 32
5344: PUSH
5345: LD_INT 33
5347: PUSH
5348: LD_INT 34
5350: PUSH
5351: LD_INT 35
5353: PUSH
5354: LD_INT 36
5356: PUSH
5357: LD_INT 37
5359: PUSH
5360: EMPTY
5361: LIST
5362: LIST
5363: LIST
5364: LIST
5365: LIST
5366: LIST
5367: LIST
5368: LIST
5369: LIST
5370: LIST
5371: LIST
5372: LIST
5373: LIST
5374: LIST
5375: LIST
5376: LIST
5377: LIST
5378: LIST
5379: LIST
5380: LIST
5381: UNION
5382: ST_TO_ADDR
// for i in friends do
5383: LD_ADDR_VAR 0 2
5387: PUSH
5388: LD_EXP 4
5392: PUSH
5393: FOR_IN
5394: IFFALSE 5662
// begin SetTag ( i , 2 ) ;
5396: LD_VAR 0 2
5400: PPUSH
5401: LD_INT 2
5403: PPUSH
5404: CALL_OW 109
// if GetClass ( i ) = 1 and buildings [ 1 ] then
5408: LD_VAR 0 2
5412: PPUSH
5413: CALL_OW 257
5417: PUSH
5418: LD_INT 1
5420: EQUAL
5421: PUSH
5422: LD_VAR 0 4
5426: PUSH
5427: LD_INT 1
5429: ARRAY
5430: AND
5431: IFFALSE 5492
// begin PlaceHumanInUnit ( i , buildings [ 1 ] [ 1 ] ) ;
5433: LD_VAR 0 2
5437: PPUSH
5438: LD_VAR 0 4
5442: PUSH
5443: LD_INT 1
5445: ARRAY
5446: PUSH
5447: LD_INT 1
5449: ARRAY
5450: PPUSH
5451: CALL_OW 52
// buildings := Replace ( buildings , 1 , Delete ( buildings [ 1 ] , 1 ) ) ;
5455: LD_ADDR_VAR 0 4
5459: PUSH
5460: LD_VAR 0 4
5464: PPUSH
5465: LD_INT 1
5467: PPUSH
5468: LD_VAR 0 4
5472: PUSH
5473: LD_INT 1
5475: ARRAY
5476: PPUSH
5477: LD_INT 1
5479: PPUSH
5480: CALL_OW 3
5484: PPUSH
5485: CALL_OW 1
5489: ST_TO_ADDR
// continue ;
5490: GO 5393
// end ; if GetClass ( i ) = 4 and buildings [ 2 ] then
5492: LD_VAR 0 2
5496: PPUSH
5497: CALL_OW 257
5501: PUSH
5502: LD_INT 4
5504: EQUAL
5505: PUSH
5506: LD_VAR 0 4
5510: PUSH
5511: LD_INT 2
5513: ARRAY
5514: AND
5515: IFFALSE 5576
// begin PlaceHumanInUnit ( i , buildings [ 2 ] [ 1 ] ) ;
5517: LD_VAR 0 2
5521: PPUSH
5522: LD_VAR 0 4
5526: PUSH
5527: LD_INT 2
5529: ARRAY
5530: PUSH
5531: LD_INT 1
5533: ARRAY
5534: PPUSH
5535: CALL_OW 52
// buildings := Replace ( buildings , 2 , Delete ( buildings [ 2 ] , 1 ) ) ;
5539: LD_ADDR_VAR 0 4
5543: PUSH
5544: LD_VAR 0 4
5548: PPUSH
5549: LD_INT 2
5551: PPUSH
5552: LD_VAR 0 4
5556: PUSH
5557: LD_INT 2
5559: ARRAY
5560: PPUSH
5561: LD_INT 1
5563: PPUSH
5564: CALL_OW 3
5568: PPUSH
5569: CALL_OW 1
5573: ST_TO_ADDR
// continue ;
5574: GO 5393
// end ; PlaceUnitArea ( i , areas [ 1 ] , false ) ;
5576: LD_VAR 0 2
5580: PPUSH
5581: LD_VAR 0 5
5585: PUSH
5586: LD_INT 1
5588: ARRAY
5589: PPUSH
5590: LD_INT 0
5592: PPUSH
5593: CALL_OW 49
// areas := Delete ( areas , 1 ) ;
5597: LD_ADDR_VAR 0 5
5601: PUSH
5602: LD_VAR 0 5
5606: PPUSH
5607: LD_INT 1
5609: PPUSH
5610: CALL_OW 3
5614: ST_TO_ADDR
// if GetClass ( i ) <> 1 then
5615: LD_VAR 0 2
5619: PPUSH
5620: CALL_OW 257
5624: PUSH
5625: LD_INT 1
5627: NONEQUAL
5628: IFFALSE 5642
// SetClass ( i , 1 ) ;
5630: LD_VAR 0 2
5634: PPUSH
5635: LD_INT 1
5637: PPUSH
5638: CALL_OW 336
// ComHold ( i ) ;
5642: LD_VAR 0 2
5646: PPUSH
5647: CALL_OW 140
// if not areas then
5651: LD_VAR 0 5
5655: NOT
5656: IFFALSE 5660
// break ;
5658: GO 5662
// end ;
5660: GO 5393
5662: POP
5663: POP
// if UnitFilter ( friends , [ f_not , [ f_placed ] ] ) then
5664: LD_EXP 4
5668: PPUSH
5669: LD_INT 3
5671: PUSH
5672: LD_INT 52
5674: PUSH
5675: EMPTY
5676: LIST
5677: PUSH
5678: EMPTY
5679: LIST
5680: LIST
5681: PPUSH
5682: CALL_OW 72
5686: IFFALSE 5753
// for i in UnitFilter ( friends , [ f_not , [ f_placed ] ] ) do
5688: LD_ADDR_VAR 0 2
5692: PUSH
5693: LD_EXP 4
5697: PPUSH
5698: LD_INT 3
5700: PUSH
5701: LD_INT 52
5703: PUSH
5704: EMPTY
5705: LIST
5706: PUSH
5707: EMPTY
5708: LIST
5709: LIST
5710: PPUSH
5711: CALL_OW 72
5715: PUSH
5716: FOR_IN
5717: IFFALSE 5751
// begin PlaceUnitXYR ( i , 65 , 58 , 7 , false ) ;
5719: LD_VAR 0 2
5723: PPUSH
5724: LD_INT 65
5726: PPUSH
5727: LD_INT 58
5729: PPUSH
5730: LD_INT 7
5732: PPUSH
5733: LD_INT 0
5735: PPUSH
5736: CALL_OW 50
// ComHold ( i ) ;
5740: LD_VAR 0 2
5744: PPUSH
5745: CALL_OW 140
// end ;
5749: GO 5716
5751: POP
5752: POP
// if Frank then
5753: LD_EXP 31
5757: IFFALSE 5771
// SetClass ( Frank , class_sniper ) ;
5759: LD_EXP 31
5763: PPUSH
5764: LD_INT 5
5766: PPUSH
5767: CALL_OW 336
// end ; end_of_file
5771: LD_VAR 0 1
5775: RET
// export function PrepareUnit ( ident , exist_mode , prefix ) ; var unit ; begin
5776: LD_INT 0
5778: PPUSH
5779: PPUSH
// if exist_mode then
5780: LD_VAR 0 2
5784: IFFALSE 5809
// unit := CreateCharacter ( prefix & ident ) else
5786: LD_ADDR_VAR 0 5
5790: PUSH
5791: LD_VAR 0 3
5795: PUSH
5796: LD_VAR 0 1
5800: STR
5801: PPUSH
5802: CALL_OW 34
5806: ST_TO_ADDR
5807: GO 5824
// unit := NewCharacter ( ident ) ;
5809: LD_ADDR_VAR 0 5
5813: PUSH
5814: LD_VAR 0 1
5818: PPUSH
5819: CALL_OW 25
5823: ST_TO_ADDR
// result := unit ;
5824: LD_ADDR_VAR 0 4
5828: PUSH
5829: LD_VAR 0 5
5833: ST_TO_ADDR
// end ;
5834: LD_VAR 0 4
5838: RET
// export function PrepareVehicle ( chassis , engine , control , weapon , fuel ) ; begin
5839: LD_INT 0
5841: PPUSH
// vc_chassis := chassis ;
5842: LD_ADDR_OWVAR 37
5846: PUSH
5847: LD_VAR 0 1
5851: ST_TO_ADDR
// vc_engine := engine ;
5852: LD_ADDR_OWVAR 39
5856: PUSH
5857: LD_VAR 0 2
5861: ST_TO_ADDR
// vc_control := control ;
5862: LD_ADDR_OWVAR 38
5866: PUSH
5867: LD_VAR 0 3
5871: ST_TO_ADDR
// vc_weapon := weapon ;
5872: LD_ADDR_OWVAR 40
5876: PUSH
5877: LD_VAR 0 4
5881: ST_TO_ADDR
// vc_fuel_battery := fuel ;
5882: LD_ADDR_OWVAR 41
5886: PUSH
5887: LD_VAR 0 5
5891: ST_TO_ADDR
// end ;
5892: LD_VAR 0 6
5896: RET
// export function CanSayRand ( side ) ; begin
5897: LD_INT 0
5899: PPUSH
// result := FilterAllUnits ( [ [ f_placed ] , [ f_side , side ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] ] ] ) diff [ JMM , Frank , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Powell , Cornel , Gary , Kikuchi ] ;
5900: LD_ADDR_VAR 0 2
5904: PUSH
5905: LD_INT 52
5907: PUSH
5908: EMPTY
5909: LIST
5910: PUSH
5911: LD_INT 22
5913: PUSH
5914: LD_VAR 0 1
5918: PUSH
5919: EMPTY
5920: LIST
5921: LIST
5922: PUSH
5923: LD_INT 2
5925: PUSH
5926: LD_INT 25
5928: PUSH
5929: LD_INT 1
5931: PUSH
5932: EMPTY
5933: LIST
5934: LIST
5935: PUSH
5936: LD_INT 25
5938: PUSH
5939: LD_INT 2
5941: PUSH
5942: EMPTY
5943: LIST
5944: LIST
5945: PUSH
5946: LD_INT 25
5948: PUSH
5949: LD_INT 3
5951: PUSH
5952: EMPTY
5953: LIST
5954: LIST
5955: PUSH
5956: LD_INT 25
5958: PUSH
5959: LD_INT 4
5961: PUSH
5962: EMPTY
5963: LIST
5964: LIST
5965: PUSH
5966: EMPTY
5967: LIST
5968: LIST
5969: LIST
5970: LIST
5971: LIST
5972: PUSH
5973: EMPTY
5974: LIST
5975: LIST
5976: LIST
5977: PPUSH
5978: CALL_OW 69
5982: PUSH
5983: LD_EXP 12
5987: PUSH
5988: LD_EXP 31
5992: PUSH
5993: LD_EXP 21
5997: PUSH
5998: LD_EXP 22
6002: PUSH
6003: LD_EXP 23
6007: PUSH
6008: LD_EXP 24
6012: PUSH
6013: LD_EXP 25
6017: PUSH
6018: LD_EXP 26
6022: PUSH
6023: LD_EXP 27
6027: PUSH
6028: LD_EXP 28
6032: PUSH
6033: LD_EXP 14
6037: PUSH
6038: LD_EXP 29
6042: PUSH
6043: LD_EXP 30
6047: PUSH
6048: LD_EXP 32
6052: PUSH
6053: EMPTY
6054: LIST
6055: LIST
6056: LIST
6057: LIST
6058: LIST
6059: LIST
6060: LIST
6061: LIST
6062: LIST
6063: LIST
6064: LIST
6065: LIST
6066: LIST
6067: LIST
6068: DIFF
6069: ST_TO_ADDR
// end ;
6070: LD_VAR 0 2
6074: RET
// export function Connect ( vehicle ) ; var i , t , mech , tmp , j ; begin
6075: LD_INT 0
6077: PPUSH
6078: PPUSH
6079: PPUSH
6080: PPUSH
6081: PPUSH
6082: PPUSH
// if not vehicle or not GetControl ( vehicle ) = control_remote then
6083: LD_VAR 0 1
6087: NOT
6088: PUSH
6089: LD_VAR 0 1
6093: PPUSH
6094: CALL_OW 263
6098: PUSH
6099: LD_INT 2
6101: EQUAL
6102: NOT
6103: OR
6104: IFFALSE 6108
// exit ;
6106: GO 6424
// tmp := FilterAllUnits ( [ [ f_side , GetSide ( vehicle ) ] , [ f_or , [ f_btype , b_control_tower ] , [ f_weapon , ar_control_tower ] ] ] ) ;
6108: LD_ADDR_VAR 0 6
6112: PUSH
6113: LD_INT 22
6115: PUSH
6116: LD_VAR 0 1
6120: PPUSH
6121: CALL_OW 255
6125: PUSH
6126: EMPTY
6127: LIST
6128: LIST
6129: PUSH
6130: LD_INT 2
6132: PUSH
6133: LD_INT 30
6135: PUSH
6136: LD_INT 36
6138: PUSH
6139: EMPTY
6140: LIST
6141: LIST
6142: PUSH
6143: LD_INT 34
6145: PUSH
6146: LD_INT 31
6148: PUSH
6149: EMPTY
6150: LIST
6151: LIST
6152: PUSH
6153: EMPTY
6154: LIST
6155: LIST
6156: LIST
6157: PUSH
6158: EMPTY
6159: LIST
6160: LIST
6161: PPUSH
6162: CALL_OW 69
6166: ST_TO_ADDR
// if not tmp then
6167: LD_VAR 0 6
6171: NOT
6172: IFFALSE 6176
// exit ;
6174: GO 6424
// result := [ ] ;
6176: LD_ADDR_VAR 0 2
6180: PUSH
6181: EMPTY
6182: ST_TO_ADDR
// for i in tmp do
6183: LD_ADDR_VAR 0 3
6187: PUSH
6188: LD_VAR 0 6
6192: PUSH
6193: FOR_IN
6194: IFFALSE 6265
// begin t := UnitsInside ( i ) ;
6196: LD_ADDR_VAR 0 4
6200: PUSH
6201: LD_VAR 0 3
6205: PPUSH
6206: CALL_OW 313
6210: ST_TO_ADDR
// if t then
6211: LD_VAR 0 4
6215: IFFALSE 6263
// for j in t do
6217: LD_ADDR_VAR 0 7
6221: PUSH
6222: LD_VAR 0 4
6226: PUSH
6227: FOR_IN
6228: IFFALSE 6261
// result := Insert ( result , result + 1 , j ) ;
6230: LD_ADDR_VAR 0 2
6234: PUSH
6235: LD_VAR 0 2
6239: PPUSH
6240: LD_VAR 0 2
6244: PUSH
6245: LD_INT 1
6247: PLUS
6248: PPUSH
6249: LD_VAR 0 7
6253: PPUSH
6254: CALL_OW 2
6258: ST_TO_ADDR
6259: GO 6227
6261: POP
6262: POP
// end ;
6263: GO 6193
6265: POP
6266: POP
// if not result then
6267: LD_VAR 0 2
6271: NOT
6272: IFFALSE 6276
// exit ;
6274: GO 6424
// mech := result [ 1 ] ;
6276: LD_ADDR_VAR 0 5
6280: PUSH
6281: LD_VAR 0 2
6285: PUSH
6286: LD_INT 1
6288: ARRAY
6289: ST_TO_ADDR
// if result > 1 then
6290: LD_VAR 0 2
6294: PUSH
6295: LD_INT 1
6297: GREATER
6298: IFFALSE 6410
// for i = 2 to result do
6300: LD_ADDR_VAR 0 3
6304: PUSH
6305: DOUBLE
6306: LD_INT 2
6308: DEC
6309: ST_TO_ADDR
6310: LD_VAR 0 2
6314: PUSH
6315: FOR_TO
6316: IFFALSE 6408
// begin t := GetSkill ( result [ i ] , 3 ) - UnitsLinked ( result [ i ] ) ;
6318: LD_ADDR_VAR 0 4
6322: PUSH
6323: LD_VAR 0 2
6327: PUSH
6328: LD_VAR 0 3
6332: ARRAY
6333: PPUSH
6334: LD_INT 3
6336: PPUSH
6337: CALL_OW 259
6341: PUSH
6342: LD_VAR 0 2
6346: PUSH
6347: LD_VAR 0 3
6351: ARRAY
6352: PPUSH
6353: CALL_OW 432
6357: MINUS
6358: ST_TO_ADDR
// if t >= ( GetSkill ( mech , 3 ) - UnitsLinked ( mech ) ) then
6359: LD_VAR 0 4
6363: PUSH
6364: LD_VAR 0 5
6368: PPUSH
6369: LD_INT 3
6371: PPUSH
6372: CALL_OW 259
6376: PUSH
6377: LD_VAR 0 5
6381: PPUSH
6382: CALL_OW 432
6386: MINUS
6387: GREATEREQUAL
6388: IFFALSE 6406
// mech := result [ i ] ;
6390: LD_ADDR_VAR 0 5
6394: PUSH
6395: LD_VAR 0 2
6399: PUSH
6400: LD_VAR 0 3
6404: ARRAY
6405: ST_TO_ADDR
// end ;
6406: GO 6315
6408: POP
6409: POP
// ComLinkTo ( vehicle , mech ) ;
6410: LD_VAR 0 1
6414: PPUSH
6415: LD_VAR 0 5
6419: PPUSH
6420: CALL_OW 135
// end ;
6424: LD_VAR 0 2
6428: RET
// export function SayRand ( sex , dial ) ; begin
6429: LD_INT 0
6431: PPUSH
// result := FilterAllUnits ( [ [ f_placed ] , [ f_side , 1 ] , [ f_sex , sex ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] ] ] ) diff [ JMM , Frank , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Powell , Cornel , Gary , Kikuchi ] ;
6432: LD_ADDR_VAR 0 3
6436: PUSH
6437: LD_INT 52
6439: PUSH
6440: EMPTY
6441: LIST
6442: PUSH
6443: LD_INT 22
6445: PUSH
6446: LD_INT 1
6448: PUSH
6449: EMPTY
6450: LIST
6451: LIST
6452: PUSH
6453: LD_INT 26
6455: PUSH
6456: LD_VAR 0 1
6460: PUSH
6461: EMPTY
6462: LIST
6463: LIST
6464: PUSH
6465: LD_INT 2
6467: PUSH
6468: LD_INT 25
6470: PUSH
6471: LD_INT 1
6473: PUSH
6474: EMPTY
6475: LIST
6476: LIST
6477: PUSH
6478: LD_INT 25
6480: PUSH
6481: LD_INT 2
6483: PUSH
6484: EMPTY
6485: LIST
6486: LIST
6487: PUSH
6488: LD_INT 25
6490: PUSH
6491: LD_INT 3
6493: PUSH
6494: EMPTY
6495: LIST
6496: LIST
6497: PUSH
6498: LD_INT 25
6500: PUSH
6501: LD_INT 4
6503: PUSH
6504: EMPTY
6505: LIST
6506: LIST
6507: PUSH
6508: EMPTY
6509: LIST
6510: LIST
6511: LIST
6512: LIST
6513: LIST
6514: PUSH
6515: EMPTY
6516: LIST
6517: LIST
6518: LIST
6519: LIST
6520: PPUSH
6521: CALL_OW 69
6525: PUSH
6526: LD_EXP 12
6530: PUSH
6531: LD_EXP 31
6535: PUSH
6536: LD_EXP 21
6540: PUSH
6541: LD_EXP 22
6545: PUSH
6546: LD_EXP 23
6550: PUSH
6551: LD_EXP 24
6555: PUSH
6556: LD_EXP 25
6560: PUSH
6561: LD_EXP 26
6565: PUSH
6566: LD_EXP 27
6570: PUSH
6571: LD_EXP 28
6575: PUSH
6576: LD_EXP 14
6580: PUSH
6581: LD_EXP 29
6585: PUSH
6586: LD_EXP 30
6590: PUSH
6591: LD_EXP 32
6595: PUSH
6596: EMPTY
6597: LIST
6598: LIST
6599: LIST
6600: LIST
6601: LIST
6602: LIST
6603: LIST
6604: LIST
6605: LIST
6606: LIST
6607: LIST
6608: LIST
6609: LIST
6610: LIST
6611: DIFF
6612: ST_TO_ADDR
// if not result then
6613: LD_VAR 0 3
6617: NOT
6618: IFFALSE 6622
// exit ;
6620: GO 6650
// result := result [ 1 ] ;
6622: LD_ADDR_VAR 0 3
6626: PUSH
6627: LD_VAR 0 3
6631: PUSH
6632: LD_INT 1
6634: ARRAY
6635: ST_TO_ADDR
// Say ( result , dial ) ;
6636: LD_VAR 0 3
6640: PPUSH
6641: LD_VAR 0 2
6645: PPUSH
6646: CALL_OW 88
// end ;
6650: LD_VAR 0 3
6654: RET
// export function SayRand2 ( sex , dial , filter ) ; begin
6655: LD_INT 0
6657: PPUSH
// result := FilterAllUnits ( [ [ f_side , 1 ] , [ f_sex , sex ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] ] ] ) diff [ JMM , Frank , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Powell , Cornel , Gary , Kikuchi ] ^ filter ;
6658: LD_ADDR_VAR 0 4
6662: PUSH
6663: LD_INT 22
6665: PUSH
6666: LD_INT 1
6668: PUSH
6669: EMPTY
6670: LIST
6671: LIST
6672: PUSH
6673: LD_INT 26
6675: PUSH
6676: LD_VAR 0 1
6680: PUSH
6681: EMPTY
6682: LIST
6683: LIST
6684: PUSH
6685: LD_INT 2
6687: PUSH
6688: LD_INT 25
6690: PUSH
6691: LD_INT 1
6693: PUSH
6694: EMPTY
6695: LIST
6696: LIST
6697: PUSH
6698: LD_INT 25
6700: PUSH
6701: LD_INT 2
6703: PUSH
6704: EMPTY
6705: LIST
6706: LIST
6707: PUSH
6708: LD_INT 25
6710: PUSH
6711: LD_INT 3
6713: PUSH
6714: EMPTY
6715: LIST
6716: LIST
6717: PUSH
6718: LD_INT 25
6720: PUSH
6721: LD_INT 4
6723: PUSH
6724: EMPTY
6725: LIST
6726: LIST
6727: PUSH
6728: EMPTY
6729: LIST
6730: LIST
6731: LIST
6732: LIST
6733: LIST
6734: PUSH
6735: EMPTY
6736: LIST
6737: LIST
6738: LIST
6739: PPUSH
6740: CALL_OW 69
6744: PUSH
6745: LD_EXP 12
6749: PUSH
6750: LD_EXP 31
6754: PUSH
6755: LD_EXP 21
6759: PUSH
6760: LD_EXP 22
6764: PUSH
6765: LD_EXP 23
6769: PUSH
6770: LD_EXP 24
6774: PUSH
6775: LD_EXP 25
6779: PUSH
6780: LD_EXP 26
6784: PUSH
6785: LD_EXP 27
6789: PUSH
6790: LD_EXP 28
6794: PUSH
6795: LD_EXP 14
6799: PUSH
6800: LD_EXP 29
6804: PUSH
6805: LD_EXP 30
6809: PUSH
6810: LD_EXP 32
6814: PUSH
6815: EMPTY
6816: LIST
6817: LIST
6818: LIST
6819: LIST
6820: LIST
6821: LIST
6822: LIST
6823: LIST
6824: LIST
6825: LIST
6826: LIST
6827: LIST
6828: LIST
6829: LIST
6830: PUSH
6831: LD_VAR 0 3
6835: ADD
6836: DIFF
6837: ST_TO_ADDR
// if not result then
6838: LD_VAR 0 4
6842: NOT
6843: IFFALSE 6847
// exit ;
6845: GO 6875
// result := result [ 1 ] ;
6847: LD_ADDR_VAR 0 4
6851: PUSH
6852: LD_VAR 0 4
6856: PUSH
6857: LD_INT 1
6859: ARRAY
6860: ST_TO_ADDR
// Say ( result , dial ) ;
6861: LD_VAR 0 4
6865: PPUSH
6866: LD_VAR 0 2
6870: PPUSH
6871: CALL_OW 88
// end ;
6875: LD_VAR 0 4
6879: RET
// export function Patrol ( unit , path , flags ) ; var i , x , y , c , p , station , tmp_path , status , enemy , e , spot_dist , safe_place , chase_range , need_refuel ; begin
6880: LD_INT 0
6882: PPUSH
6883: PPUSH
6884: PPUSH
6885: PPUSH
6886: PPUSH
6887: PPUSH
6888: PPUSH
6889: PPUSH
6890: PPUSH
6891: PPUSH
6892: PPUSH
6893: PPUSH
6894: PPUSH
6895: PPUSH
6896: PPUSH
// if not unit or not path or GetType ( unit ) = unit_building then
6897: LD_VAR 0 1
6901: NOT
6902: PUSH
6903: LD_VAR 0 2
6907: NOT
6908: OR
6909: PUSH
6910: LD_VAR 0 1
6914: PPUSH
6915: CALL_OW 247
6919: PUSH
6920: LD_INT 3
6922: EQUAL
6923: OR
6924: IFFALSE 6928
// exit ;
6926: GO 8467
// for i = path downto 1 do
6928: LD_ADDR_VAR 0 5
6932: PUSH
6933: DOUBLE
6934: LD_VAR 0 2
6938: INC
6939: ST_TO_ADDR
6940: LD_INT 1
6942: PUSH
6943: FOR_DOWNTO
6944: IFFALSE 7005
// begin if not ValidHex ( path [ i ] [ 1 ] , path [ i ] [ 2 ] ) then
6946: LD_VAR 0 2
6950: PUSH
6951: LD_VAR 0 5
6955: ARRAY
6956: PUSH
6957: LD_INT 1
6959: ARRAY
6960: PPUSH
6961: LD_VAR 0 2
6965: PUSH
6966: LD_VAR 0 5
6970: ARRAY
6971: PUSH
6972: LD_INT 2
6974: ARRAY
6975: PPUSH
6976: CALL_OW 488
6980: NOT
6981: IFFALSE 7003
// path = Delete ( path , i ) ;
6983: LD_ADDR_VAR 0 2
6987: PUSH
6988: LD_VAR 0 2
6992: PPUSH
6993: LD_VAR 0 5
6997: PPUSH
6998: CALL_OW 3
7002: ST_TO_ADDR
// end ;
7003: GO 6943
7005: POP
7006: POP
// if not path then
7007: LD_VAR 0 2
7011: NOT
7012: IFFALSE 7016
// exit ;
7014: GO 8467
// tmp_path := [ ] ;
7016: LD_ADDR_VAR 0 11
7020: PUSH
7021: EMPTY
7022: ST_TO_ADDR
// if flags then
7023: LD_VAR 0 3
7027: IFFALSE 7101
// begin if flags [ 1 ] then
7029: LD_VAR 0 3
7033: PUSH
7034: LD_INT 1
7036: ARRAY
7037: IFFALSE 7053
// safe_place = flags [ 1 ] ;
7039: LD_ADDR_VAR 0 16
7043: PUSH
7044: LD_VAR 0 3
7048: PUSH
7049: LD_INT 1
7051: ARRAY
7052: ST_TO_ADDR
// if flags [ 2 ] then
7053: LD_VAR 0 3
7057: PUSH
7058: LD_INT 2
7060: ARRAY
7061: IFFALSE 7077
// spot_dist = flags [ 2 ] ;
7063: LD_ADDR_VAR 0 15
7067: PUSH
7068: LD_VAR 0 3
7072: PUSH
7073: LD_INT 2
7075: ARRAY
7076: ST_TO_ADDR
// if flags [ 3 ] then
7077: LD_VAR 0 3
7081: PUSH
7082: LD_INT 3
7084: ARRAY
7085: IFFALSE 7101
// chase_range = flags [ 3 ] ;
7087: LD_ADDR_VAR 0 17
7091: PUSH
7092: LD_VAR 0 3
7096: PUSH
7097: LD_INT 3
7099: ARRAY
7100: ST_TO_ADDR
// end ; if not chase_range then
7101: LD_VAR 0 17
7105: NOT
7106: IFFALSE 7116
// chase_range = 8 ;
7108: LD_ADDR_VAR 0 17
7112: PUSH
7113: LD_INT 8
7115: ST_TO_ADDR
// if not spot_dist then
7116: LD_VAR 0 15
7120: NOT
7121: IFFALSE 7131
// spot_dist := 8 ;
7123: LD_ADDR_VAR 0 15
7127: PUSH
7128: LD_INT 8
7130: ST_TO_ADDR
// need_refuel = ( GetType ( unit ) = unit_vehicle and GetEngine ( unit ) <> engine_siberite ) ;
7131: LD_ADDR_VAR 0 18
7135: PUSH
7136: LD_VAR 0 1
7140: PPUSH
7141: CALL_OW 247
7145: PUSH
7146: LD_INT 2
7148: EQUAL
7149: PUSH
7150: LD_VAR 0 1
7154: PPUSH
7155: CALL_OW 262
7159: PUSH
7160: LD_INT 3
7162: NONEQUAL
7163: AND
7164: ST_TO_ADDR
// status = 1 ;
7165: LD_ADDR_VAR 0 12
7169: PUSH
7170: LD_INT 1
7172: ST_TO_ADDR
// tmp_path = [ 1 , path [ 1 ] ] ;
7173: LD_ADDR_VAR 0 11
7177: PUSH
7178: LD_INT 1
7180: PUSH
7181: LD_VAR 0 2
7185: PUSH
7186: LD_INT 1
7188: ARRAY
7189: PUSH
7190: EMPTY
7191: LIST
7192: LIST
7193: ST_TO_ADDR
// repeat wait ( 0 0$1 ) ;
7194: LD_INT 35
7196: PPUSH
7197: CALL_OW 67
// if need_refuel and GetFuel ( unit ) < 20 then
7201: LD_VAR 0 18
7205: PUSH
7206: LD_VAR 0 1
7210: PPUSH
7211: CALL_OW 261
7215: PUSH
7216: LD_INT 20
7218: LESS
7219: AND
7220: IFFALSE 7413
// begin station := FilterAllUnits ( [ [ f_side , GetSide ( unit ) ] , [ f_or , [ f_btype , b_depot ] , [ f_btype , b_warehouse ] , [ f_btype , b_oil_mine ] , [ f_btype , b_factory ] ] ] ) ;
7222: LD_ADDR_VAR 0 10
7226: PUSH
7227: LD_INT 22
7229: PUSH
7230: LD_VAR 0 1
7234: PPUSH
7235: CALL_OW 255
7239: PUSH
7240: EMPTY
7241: LIST
7242: LIST
7243: PUSH
7244: LD_INT 2
7246: PUSH
7247: LD_INT 30
7249: PUSH
7250: LD_INT 0
7252: PUSH
7253: EMPTY
7254: LIST
7255: LIST
7256: PUSH
7257: LD_INT 30
7259: PUSH
7260: LD_INT 1
7262: PUSH
7263: EMPTY
7264: LIST
7265: LIST
7266: PUSH
7267: LD_INT 30
7269: PUSH
7270: LD_INT 29
7272: PUSH
7273: EMPTY
7274: LIST
7275: LIST
7276: PUSH
7277: LD_INT 30
7279: PUSH
7280: LD_INT 3
7282: PUSH
7283: EMPTY
7284: LIST
7285: LIST
7286: PUSH
7287: EMPTY
7288: LIST
7289: LIST
7290: LIST
7291: LIST
7292: LIST
7293: PUSH
7294: EMPTY
7295: LIST
7296: LIST
7297: PPUSH
7298: CALL_OW 69
7302: ST_TO_ADDR
// if not station then
7303: LD_VAR 0 10
7307: NOT
7308: IFFALSE 7324
// begin SetFuel ( unit , 40 ) ;
7310: LD_VAR 0 1
7314: PPUSH
7315: LD_INT 40
7317: PPUSH
7318: CALL_OW 240
// continue ;
7322: GO 7194
// end ; status := 6 ;
7324: LD_ADDR_VAR 0 12
7328: PUSH
7329: LD_INT 6
7331: ST_TO_ADDR
// station := NearestUnitToUnit ( station , unit ) ;
7332: LD_ADDR_VAR 0 10
7336: PUSH
7337: LD_VAR 0 10
7341: PPUSH
7342: LD_VAR 0 1
7346: PPUSH
7347: CALL_OW 74
7351: ST_TO_ADDR
// repeat wait ( 0 0$1 ) ;
7352: LD_INT 35
7354: PPUSH
7355: CALL_OW 67
// ComMoveUnit ( unit , station ) ;
7359: LD_VAR 0 1
7363: PPUSH
7364: LD_VAR 0 10
7368: PPUSH
7369: CALL_OW 112
// until GetDistUnits ( unit , station ) < 6 ;
7373: LD_VAR 0 1
7377: PPUSH
7378: LD_VAR 0 10
7382: PPUSH
7383: CALL_OW 296
7387: PUSH
7388: LD_INT 6
7390: LESS
7391: IFFALSE 7352
// SetFuel ( unit , 100 ) ;
7393: LD_VAR 0 1
7397: PPUSH
7398: LD_INT 100
7400: PPUSH
7401: CALL_OW 240
// status := 5 ;
7405: LD_ADDR_VAR 0 12
7409: PUSH
7410: LD_INT 5
7412: ST_TO_ADDR
// end ; if status = 1 then
7413: LD_VAR 0 12
7417: PUSH
7418: LD_INT 1
7420: EQUAL
7421: IFFALSE 7797
// begin enemy := FilterAllUnits ( [ [ f_enemy , GetSide ( unit ) ] , [ f_not , [ f_type , unit_building ] ] , [ f_dist , unit , spot_dist ] , [ f_see , 1 ] ] ) ;
7423: LD_ADDR_VAR 0 13
7427: PUSH
7428: LD_INT 81
7430: PUSH
7431: LD_VAR 0 1
7435: PPUSH
7436: CALL_OW 255
7440: PUSH
7441: EMPTY
7442: LIST
7443: LIST
7444: PUSH
7445: LD_INT 3
7447: PUSH
7448: LD_INT 21
7450: PUSH
7451: LD_INT 3
7453: PUSH
7454: EMPTY
7455: LIST
7456: LIST
7457: PUSH
7458: EMPTY
7459: LIST
7460: LIST
7461: PUSH
7462: LD_INT 91
7464: PUSH
7465: LD_VAR 0 1
7469: PUSH
7470: LD_VAR 0 15
7474: PUSH
7475: EMPTY
7476: LIST
7477: LIST
7478: LIST
7479: PUSH
7480: LD_INT 101
7482: PUSH
7483: LD_INT 1
7485: PUSH
7486: EMPTY
7487: LIST
7488: LIST
7489: PUSH
7490: EMPTY
7491: LIST
7492: LIST
7493: LIST
7494: LIST
7495: PPUSH
7496: CALL_OW 69
7500: ST_TO_ADDR
// for i in enemy do
7501: LD_ADDR_VAR 0 5
7505: PUSH
7506: LD_VAR 0 13
7510: PUSH
7511: FOR_IN
7512: IFFALSE 7543
// if IsInvisible ( i ) then
7514: LD_VAR 0 5
7518: PPUSH
7519: CALL_OW 571
7523: IFFALSE 7541
// enemy := enemy diff i ;
7525: LD_ADDR_VAR 0 13
7529: PUSH
7530: LD_VAR 0 13
7534: PUSH
7535: LD_VAR 0 5
7539: DIFF
7540: ST_TO_ADDR
7541: GO 7511
7543: POP
7544: POP
// if enemy then
7545: LD_VAR 0 13
7549: IFFALSE 7599
// begin SetRememberedX ( unit , GetX ( unit ) ) ;
7551: LD_VAR 0 1
7555: PPUSH
7556: LD_VAR 0 1
7560: PPUSH
7561: CALL_OW 250
7565: PPUSH
7566: CALL_OW 231
// SetRememberedY ( unit , GetY ( unit ) ) ;
7570: LD_VAR 0 1
7574: PPUSH
7575: LD_VAR 0 1
7579: PPUSH
7580: CALL_OW 251
7584: PPUSH
7585: CALL_OW 232
// status = 2 ;
7589: LD_ADDR_VAR 0 12
7593: PUSH
7594: LD_INT 2
7596: ST_TO_ADDR
// end else
7597: GO 7797
// begin if IsAt ( unit , tmp_path [ 2 ] [ 1 ] , tmp_path [ 2 ] [ 2 ] ) or not HasTask ( unit ) then
7599: LD_VAR 0 1
7603: PPUSH
7604: LD_VAR 0 11
7608: PUSH
7609: LD_INT 2
7611: ARRAY
7612: PUSH
7613: LD_INT 1
7615: ARRAY
7616: PPUSH
7617: LD_VAR 0 11
7621: PUSH
7622: LD_INT 2
7624: ARRAY
7625: PUSH
7626: LD_INT 2
7628: ARRAY
7629: PPUSH
7630: CALL_OW 307
7634: PUSH
7635: LD_VAR 0 1
7639: PPUSH
7640: CALL_OW 314
7644: NOT
7645: OR
7646: IFFALSE 7797
// begin wait ( 0 0$2 ) ;
7648: LD_INT 70
7650: PPUSH
7651: CALL_OW 67
// if tmp_path [ 1 ] + 1 > path then
7655: LD_VAR 0 11
7659: PUSH
7660: LD_INT 1
7662: ARRAY
7663: PUSH
7664: LD_INT 1
7666: PLUS
7667: PUSH
7668: LD_VAR 0 2
7672: GREATER
7673: IFFALSE 7698
// tmp_path := Replace ( tmp_path , 1 , 1 ) else
7675: LD_ADDR_VAR 0 11
7679: PUSH
7680: LD_VAR 0 11
7684: PPUSH
7685: LD_INT 1
7687: PPUSH
7688: LD_INT 1
7690: PPUSH
7691: CALL_OW 1
7695: ST_TO_ADDR
7696: GO 7729
// tmp_path := Replace ( tmp_path , 1 , tmp_path [ 1 ] + 1 ) ;
7698: LD_ADDR_VAR 0 11
7702: PUSH
7703: LD_VAR 0 11
7707: PPUSH
7708: LD_INT 1
7710: PPUSH
7711: LD_VAR 0 11
7715: PUSH
7716: LD_INT 1
7718: ARRAY
7719: PUSH
7720: LD_INT 1
7722: PLUS
7723: PPUSH
7724: CALL_OW 1
7728: ST_TO_ADDR
// tmp_path := Replace ( tmp_path , 2 , path [ tmp_path [ 1 ] ] ) ;
7729: LD_ADDR_VAR 0 11
7733: PUSH
7734: LD_VAR 0 11
7738: PPUSH
7739: LD_INT 2
7741: PPUSH
7742: LD_VAR 0 2
7746: PUSH
7747: LD_VAR 0 11
7751: PUSH
7752: LD_INT 1
7754: ARRAY
7755: ARRAY
7756: PPUSH
7757: CALL_OW 1
7761: ST_TO_ADDR
// ComAgressiveMove ( unit , tmp_path [ 2 ] [ 1 ] , tmp_path [ 2 ] [ 2 ] ) ;
7762: LD_VAR 0 1
7766: PPUSH
7767: LD_VAR 0 11
7771: PUSH
7772: LD_INT 2
7774: ARRAY
7775: PUSH
7776: LD_INT 1
7778: ARRAY
7779: PPUSH
7780: LD_VAR 0 11
7784: PUSH
7785: LD_INT 2
7787: ARRAY
7788: PUSH
7789: LD_INT 2
7791: ARRAY
7792: PPUSH
7793: CALL_OW 114
// end ; end ; end ; if status = 2 then
7797: LD_VAR 0 12
7801: PUSH
7802: LD_INT 2
7804: EQUAL
7805: IFFALSE 8026
// begin if GetLives ( unit ) < 650 and safe_place then
7807: LD_VAR 0 1
7811: PPUSH
7812: CALL_OW 256
7816: PUSH
7817: LD_INT 650
7819: LESS
7820: PUSH
7821: LD_VAR 0 16
7825: AND
7826: IFFALSE 7838
// begin status = 3 ;
7828: LD_ADDR_VAR 0 12
7832: PUSH
7833: LD_INT 3
7835: ST_TO_ADDR
// continue ;
7836: GO 7194
// end ; x := GetRememberedX ( unit ) ;
7838: LD_ADDR_VAR 0 6
7842: PUSH
7843: LD_VAR 0 1
7847: PPUSH
7848: CALL_OW 252
7852: ST_TO_ADDR
// y := GetRememberedY ( unit ) ;
7853: LD_ADDR_VAR 0 7
7857: PUSH
7858: LD_VAR 0 1
7862: PPUSH
7863: CALL_OW 253
7867: ST_TO_ADDR
// enemy := FilterAllUnits ( [ [ f_enemy , GetSide ( unit ) ] , [ f_distxy , x , y , spot_dist ] , [ f_see , 1 ] ] ) ;
7868: LD_ADDR_VAR 0 13
7872: PUSH
7873: LD_INT 81
7875: PUSH
7876: LD_VAR 0 1
7880: PPUSH
7881: CALL_OW 255
7885: PUSH
7886: EMPTY
7887: LIST
7888: LIST
7889: PUSH
7890: LD_INT 92
7892: PUSH
7893: LD_VAR 0 6
7897: PUSH
7898: LD_VAR 0 7
7902: PUSH
7903: LD_VAR 0 15
7907: PUSH
7908: EMPTY
7909: LIST
7910: LIST
7911: LIST
7912: LIST
7913: PUSH
7914: LD_INT 101
7916: PUSH
7917: LD_INT 1
7919: PUSH
7920: EMPTY
7921: LIST
7922: LIST
7923: PUSH
7924: EMPTY
7925: LIST
7926: LIST
7927: LIST
7928: PPUSH
7929: CALL_OW 69
7933: ST_TO_ADDR
// if enemy then
7934: LD_VAR 0 13
7938: IFFALSE 8009
// begin e := NearestUnitToUnit ( enemy , unit ) ;
7940: LD_ADDR_VAR 0 14
7944: PUSH
7945: LD_VAR 0 13
7949: PPUSH
7950: LD_VAR 0 1
7954: PPUSH
7955: CALL_OW 74
7959: ST_TO_ADDR
// if GetDistUnitXY ( e , x , y ) < spot_dist + chase_range then
7960: LD_VAR 0 14
7964: PPUSH
7965: LD_VAR 0 6
7969: PPUSH
7970: LD_VAR 0 7
7974: PPUSH
7975: CALL_OW 297
7979: PUSH
7980: LD_VAR 0 15
7984: PUSH
7985: LD_VAR 0 17
7989: PLUS
7990: LESS
7991: IFFALSE 8007
// ComAttackUnit ( unit , e ) ;
7993: LD_VAR 0 1
7997: PPUSH
7998: LD_VAR 0 14
8002: PPUSH
8003: CALL_OW 115
// end else
8007: GO 8026
// begin ComStop ( unit ) ;
8009: LD_VAR 0 1
8013: PPUSH
8014: CALL_OW 141
// status = 5 ;
8018: LD_ADDR_VAR 0 12
8022: PUSH
8023: LD_INT 5
8025: ST_TO_ADDR
// end ; end ; if status = 3 and safe_place then
8026: LD_VAR 0 12
8030: PUSH
8031: LD_INT 3
8033: EQUAL
8034: PUSH
8035: LD_VAR 0 16
8039: AND
8040: IFFALSE 8126
// begin repeat ComMoveXY ( unit , safe_place [ 1 ] , safe_place [ 2 ] ) ;
8042: LD_VAR 0 1
8046: PPUSH
8047: LD_VAR 0 16
8051: PUSH
8052: LD_INT 1
8054: ARRAY
8055: PPUSH
8056: LD_VAR 0 16
8060: PUSH
8061: LD_INT 2
8063: ARRAY
8064: PPUSH
8065: CALL_OW 111
// wait ( 0 0$1 ) ;
8069: LD_INT 35
8071: PPUSH
8072: CALL_OW 67
// until GetDistUnitXY ( unit , safe_place [ 1 ] , safe_place [ 2 ] ) < 4 ;
8076: LD_VAR 0 1
8080: PPUSH
8081: LD_VAR 0 16
8085: PUSH
8086: LD_INT 1
8088: ARRAY
8089: PPUSH
8090: LD_VAR 0 16
8094: PUSH
8095: LD_INT 2
8097: ARRAY
8098: PPUSH
8099: CALL_OW 297
8103: PUSH
8104: LD_INT 4
8106: LESS
8107: IFFALSE 8042
// ComStop ( unit ) ;
8109: LD_VAR 0 1
8113: PPUSH
8114: CALL_OW 141
// status = 4 ;
8118: LD_ADDR_VAR 0 12
8122: PUSH
8123: LD_INT 4
8125: ST_TO_ADDR
// end ; if status = 4 then
8126: LD_VAR 0 12
8130: PUSH
8131: LD_INT 4
8133: EQUAL
8134: IFFALSE 8166
// begin repeat wait ( 0 0$1 ) ;
8136: LD_INT 35
8138: PPUSH
8139: CALL_OW 67
// until GetLives ( unit ) = 1000 ;
8143: LD_VAR 0 1
8147: PPUSH
8148: CALL_OW 256
8152: PUSH
8153: LD_INT 1000
8155: EQUAL
8156: IFFALSE 8136
// status = 5 ;
8158: LD_ADDR_VAR 0 12
8162: PUSH
8163: LD_INT 5
8165: ST_TO_ADDR
// end ; if status = 5 then
8166: LD_VAR 0 12
8170: PUSH
8171: LD_INT 5
8173: EQUAL
8174: IFFALSE 8456
// begin p := 999 ;
8176: LD_ADDR_VAR 0 9
8180: PUSH
8181: LD_INT 999
8183: ST_TO_ADDR
// e := [ tmp_path [ 2 ] [ 1 ] , tmp_path [ 2 ] [ 2 ] ] ;
8184: LD_ADDR_VAR 0 14
8188: PUSH
8189: LD_VAR 0 11
8193: PUSH
8194: LD_INT 2
8196: ARRAY
8197: PUSH
8198: LD_INT 1
8200: ARRAY
8201: PUSH
8202: LD_VAR 0 11
8206: PUSH
8207: LD_INT 2
8209: ARRAY
8210: PUSH
8211: LD_INT 2
8213: ARRAY
8214: PUSH
8215: EMPTY
8216: LIST
8217: LIST
8218: ST_TO_ADDR
// c := 1 ;
8219: LD_ADDR_VAR 0 8
8223: PUSH
8224: LD_INT 1
8226: ST_TO_ADDR
// for i = 1 to tmp_path [ 2 ] div 2 do
8227: LD_ADDR_VAR 0 5
8231: PUSH
8232: DOUBLE
8233: LD_INT 1
8235: DEC
8236: ST_TO_ADDR
8237: LD_VAR 0 11
8241: PUSH
8242: LD_INT 2
8244: ARRAY
8245: PUSH
8246: LD_INT 2
8248: DIV
8249: PUSH
8250: FOR_TO
8251: IFFALSE 8383
// begin x := GetDistUnitXY ( unit , tmp_path [ 2 ] [ c ] , tmp_path [ 2 ] [ c + 1 ] ) ;
8253: LD_ADDR_VAR 0 6
8257: PUSH
8258: LD_VAR 0 1
8262: PPUSH
8263: LD_VAR 0 11
8267: PUSH
8268: LD_INT 2
8270: ARRAY
8271: PUSH
8272: LD_VAR 0 8
8276: ARRAY
8277: PPUSH
8278: LD_VAR 0 11
8282: PUSH
8283: LD_INT 2
8285: ARRAY
8286: PUSH
8287: LD_VAR 0 8
8291: PUSH
8292: LD_INT 1
8294: PLUS
8295: ARRAY
8296: PPUSH
8297: CALL_OW 297
8301: ST_TO_ADDR
// if x < p then
8302: LD_VAR 0 6
8306: PUSH
8307: LD_VAR 0 9
8311: LESS
8312: IFFALSE 8367
// begin p := x ;
8314: LD_ADDR_VAR 0 9
8318: PUSH
8319: LD_VAR 0 6
8323: ST_TO_ADDR
// e := [ tmp_path [ 2 ] [ c ] , tmp_path [ 2 ] [ c + 1 ] ] ;
8324: LD_ADDR_VAR 0 14
8328: PUSH
8329: LD_VAR 0 11
8333: PUSH
8334: LD_INT 2
8336: ARRAY
8337: PUSH
8338: LD_VAR 0 8
8342: ARRAY
8343: PUSH
8344: LD_VAR 0 11
8348: PUSH
8349: LD_INT 2
8351: ARRAY
8352: PUSH
8353: LD_VAR 0 8
8357: PUSH
8358: LD_INT 1
8360: PLUS
8361: ARRAY
8362: PUSH
8363: EMPTY
8364: LIST
8365: LIST
8366: ST_TO_ADDR
// end ; c = c + 2 ;
8367: LD_ADDR_VAR 0 8
8371: PUSH
8372: LD_VAR 0 8
8376: PUSH
8377: LD_INT 2
8379: PLUS
8380: ST_TO_ADDR
// end ;
8381: GO 8250
8383: POP
8384: POP
// repeat ComMoveXY ( unit , e [ 1 ] , e [ 2 ] ) ;
8385: LD_VAR 0 1
8389: PPUSH
8390: LD_VAR 0 14
8394: PUSH
8395: LD_INT 1
8397: ARRAY
8398: PPUSH
8399: LD_VAR 0 14
8403: PUSH
8404: LD_INT 2
8406: ARRAY
8407: PPUSH
8408: CALL_OW 111
// wait ( 0 0$1 ) ;
8412: LD_INT 35
8414: PPUSH
8415: CALL_OW 67
// until IsAt ( unit , e [ 1 ] , e [ 2 ] ) ;
8419: LD_VAR 0 1
8423: PPUSH
8424: LD_VAR 0 14
8428: PUSH
8429: LD_INT 1
8431: ARRAY
8432: PPUSH
8433: LD_VAR 0 14
8437: PUSH
8438: LD_INT 2
8440: ARRAY
8441: PPUSH
8442: CALL_OW 307
8446: IFFALSE 8385
// status = 1 ;
8448: LD_ADDR_VAR 0 12
8452: PUSH
8453: LD_INT 1
8455: ST_TO_ADDR
// end ; until IsDead ( unit ) ;
8456: LD_VAR 0 1
8460: PPUSH
8461: CALL_OW 301
8465: IFFALSE 7194
// end ;
8467: LD_VAR 0 4
8471: RET
// export function Talk ( units , type , sequence , sex , class , id , order_id ) ; var i , unit , tmp , unit_id , dialog_id , sex_id , class_id ; begin
8472: LD_INT 0
8474: PPUSH
8475: PPUSH
8476: PPUSH
8477: PPUSH
8478: PPUSH
8479: PPUSH
8480: PPUSH
8481: PPUSH
// if not units or not sequence or not sex in [ sex_male , sex_female , 0 ] or not id or not order_id then
8482: LD_VAR 0 1
8486: NOT
8487: PUSH
8488: LD_VAR 0 3
8492: NOT
8493: OR
8494: PUSH
8495: LD_VAR 0 4
8499: PUSH
8500: LD_INT 1
8502: PUSH
8503: LD_INT 2
8505: PUSH
8506: LD_INT 0
8508: PUSH
8509: EMPTY
8510: LIST
8511: LIST
8512: LIST
8513: IN
8514: NOT
8515: OR
8516: PUSH
8517: LD_VAR 0 6
8521: NOT
8522: OR
8523: PUSH
8524: LD_VAR 0 7
8528: NOT
8529: OR
8530: IFFALSE 8534
// exit ;
8532: GO 8925
// sex_id :=  ;
8534: LD_ADDR_VAR 0 14
8538: PUSH
8539: LD_STRING 
8541: ST_TO_ADDR
// case class of 1 :
8542: LD_VAR 0 5
8546: PUSH
8547: LD_INT 1
8549: DOUBLE
8550: EQUAL
8551: IFTRUE 8555
8553: GO 8566
8555: POP
// class_id := Sol ; 2 :
8556: LD_ADDR_VAR 0 15
8560: PUSH
8561: LD_STRING Sol
8563: ST_TO_ADDR
8564: GO 8624
8566: LD_INT 2
8568: DOUBLE
8569: EQUAL
8570: IFTRUE 8574
8572: GO 8585
8574: POP
// class_id := Eng ; 3 :
8575: LD_ADDR_VAR 0 15
8579: PUSH
8580: LD_STRING Eng
8582: ST_TO_ADDR
8583: GO 8624
8585: LD_INT 3
8587: DOUBLE
8588: EQUAL
8589: IFTRUE 8593
8591: GO 8604
8593: POP
// class_id := Mech ; 4 :
8594: LD_ADDR_VAR 0 15
8598: PUSH
8599: LD_STRING Mech
8601: ST_TO_ADDR
8602: GO 8624
8604: LD_INT 4
8606: DOUBLE
8607: EQUAL
8608: IFTRUE 8612
8610: GO 8623
8612: POP
// class_id := Sci ; end ;
8613: LD_ADDR_VAR 0 15
8617: PUSH
8618: LD_STRING Sci
8620: ST_TO_ADDR
8621: GO 8624
8623: POP
// tmp := UnitFilter ( units , [ f_class , class ] ) ;
8624: LD_ADDR_VAR 0 11
8628: PUSH
8629: LD_VAR 0 1
8633: PPUSH
8634: LD_INT 25
8636: PUSH
8637: LD_VAR 0 5
8641: PUSH
8642: EMPTY
8643: LIST
8644: LIST
8645: PPUSH
8646: CALL_OW 72
8650: ST_TO_ADDR
// if tmp then
8651: LD_VAR 0 11
8655: IFFALSE 8667
// units := tmp ;
8657: LD_ADDR_VAR 0 1
8661: PUSH
8662: LD_VAR 0 11
8666: ST_TO_ADDR
// if sex then
8667: LD_VAR 0 4
8671: IFFALSE 8727
// begin if sex = sex_female then
8673: LD_VAR 0 4
8677: PUSH
8678: LD_INT 2
8680: EQUAL
8681: IFFALSE 8691
// sex_id := F ;
8683: LD_ADDR_VAR 0 14
8687: PUSH
8688: LD_STRING F
8690: ST_TO_ADDR
// units := UnitFilter ( units , [ f_sex , sex ] ) ;
8691: LD_ADDR_VAR 0 1
8695: PUSH
8696: LD_VAR 0 1
8700: PPUSH
8701: LD_INT 26
8703: PUSH
8704: LD_VAR 0 4
8708: PUSH
8709: EMPTY
8710: LIST
8711: LIST
8712: PPUSH
8713: CALL_OW 72
8717: ST_TO_ADDR
// if not units then
8718: LD_VAR 0 1
8722: NOT
8723: IFFALSE 8727
// exit ;
8725: GO 8925
// end ; unit_id := id ;
8727: LD_ADDR_VAR 0 12
8731: PUSH
8732: LD_VAR 0 6
8736: ST_TO_ADDR
// if unit_id > units then
8737: LD_VAR 0 12
8741: PUSH
8742: LD_VAR 0 1
8746: GREATER
8747: IFFALSE 8757
// unit_id := 1 ;
8749: LD_ADDR_VAR 0 12
8753: PUSH
8754: LD_INT 1
8756: ST_TO_ADDR
// if not units [ unit_id ] then
8757: LD_VAR 0 1
8761: PUSH
8762: LD_VAR 0 12
8766: ARRAY
8767: NOT
8768: IFFALSE 8772
// exit ;
8770: GO 8925
// unit := units [ unit_id ] ;
8772: LD_ADDR_VAR 0 10
8776: PUSH
8777: LD_VAR 0 1
8781: PUSH
8782: LD_VAR 0 12
8786: ARRAY
8787: ST_TO_ADDR
// dialog_id := D & sequence & - & sex_id & class_id & id & - & order_id ;
8788: LD_ADDR_VAR 0 13
8792: PUSH
8793: LD_STRING D
8795: PUSH
8796: LD_VAR 0 3
8800: STR
8801: PUSH
8802: LD_STRING -
8804: STR
8805: PUSH
8806: LD_VAR 0 14
8810: STR
8811: PUSH
8812: LD_VAR 0 15
8816: STR
8817: PUSH
8818: LD_VAR 0 6
8822: STR
8823: PUSH
8824: LD_STRING -
8826: STR
8827: PUSH
8828: LD_VAR 0 7
8832: STR
8833: ST_TO_ADDR
// case type of 0 :
8834: LD_VAR 0 2
8838: PUSH
8839: LD_INT 0
8841: DOUBLE
8842: EQUAL
8843: IFTRUE 8847
8845: GO 8864
8847: POP
// Say ( unit , dialog_id ) ; 1 :
8848: LD_VAR 0 10
8852: PPUSH
8853: LD_VAR 0 13
8857: PPUSH
8858: CALL_OW 88
8862: GO 8915
8864: LD_INT 1
8866: DOUBLE
8867: EQUAL
8868: IFTRUE 8872
8870: GO 8889
8872: POP
// SayRadio ( unit , dialog_id ) ; 2 :
8873: LD_VAR 0 10
8877: PPUSH
8878: LD_VAR 0 13
8882: PPUSH
8883: CALL_OW 94
8887: GO 8915
8889: LD_INT 2
8891: DOUBLE
8892: EQUAL
8893: IFTRUE 8897
8895: GO 8914
8897: POP
// ForceSay ( unit , dialog_id ) ; end ;
8898: LD_VAR 0 10
8902: PPUSH
8903: LD_VAR 0 13
8907: PPUSH
8908: CALL_OW 91
8912: GO 8915
8914: POP
// result := unit ;
8915: LD_ADDR_VAR 0 8
8919: PUSH
8920: LD_VAR 0 10
8924: ST_TO_ADDR
// end ;
8925: LD_VAR 0 8
8929: RET
// export function Reindex ( array , i_from , i_to , direction ) ; var i , j , k , d , tmp , length ; begin
8930: LD_INT 0
8932: PPUSH
8933: PPUSH
8934: PPUSH
8935: PPUSH
8936: PPUSH
8937: PPUSH
8938: PPUSH
// result := array ;
8939: LD_ADDR_VAR 0 5
8943: PUSH
8944: LD_VAR 0 1
8948: ST_TO_ADDR
// if not array or not i_from or not i_to or i_from > array or i_to > array then
8949: LD_VAR 0 1
8953: NOT
8954: PUSH
8955: LD_VAR 0 2
8959: NOT
8960: OR
8961: PUSH
8962: LD_VAR 0 3
8966: NOT
8967: OR
8968: PUSH
8969: LD_VAR 0 2
8973: PUSH
8974: LD_VAR 0 1
8978: GREATER
8979: OR
8980: PUSH
8981: LD_VAR 0 3
8985: PUSH
8986: LD_VAR 0 1
8990: GREATER
8991: OR
8992: IFFALSE 8996
// exit ;
8994: GO 9292
// if direction then
8996: LD_VAR 0 4
9000: IFFALSE 9064
// begin d := 1 ;
9002: LD_ADDR_VAR 0 9
9006: PUSH
9007: LD_INT 1
9009: ST_TO_ADDR
// if i_from > i_to then
9010: LD_VAR 0 2
9014: PUSH
9015: LD_VAR 0 3
9019: GREATER
9020: IFFALSE 9046
// length := ( array - i_from ) + i_to else
9022: LD_ADDR_VAR 0 11
9026: PUSH
9027: LD_VAR 0 1
9031: PUSH
9032: LD_VAR 0 2
9036: MINUS
9037: PUSH
9038: LD_VAR 0 3
9042: PLUS
9043: ST_TO_ADDR
9044: GO 9062
// length := i_to - i_from ;
9046: LD_ADDR_VAR 0 11
9050: PUSH
9051: LD_VAR 0 3
9055: PUSH
9056: LD_VAR 0 2
9060: MINUS
9061: ST_TO_ADDR
// end else
9062: GO 9125
// begin d := - 1 ;
9064: LD_ADDR_VAR 0 9
9068: PUSH
9069: LD_INT 1
9071: NEG
9072: ST_TO_ADDR
// if i_from > i_to then
9073: LD_VAR 0 2
9077: PUSH
9078: LD_VAR 0 3
9082: GREATER
9083: IFFALSE 9103
// length := i_from - i_to else
9085: LD_ADDR_VAR 0 11
9089: PUSH
9090: LD_VAR 0 2
9094: PUSH
9095: LD_VAR 0 3
9099: MINUS
9100: ST_TO_ADDR
9101: GO 9125
// length := ( array - i_to ) + i_from ;
9103: LD_ADDR_VAR 0 11
9107: PUSH
9108: LD_VAR 0 1
9112: PUSH
9113: LD_VAR 0 3
9117: MINUS
9118: PUSH
9119: LD_VAR 0 2
9123: PLUS
9124: ST_TO_ADDR
// end ; if not length then
9125: LD_VAR 0 11
9129: NOT
9130: IFFALSE 9134
// exit ;
9132: GO 9292
// tmp := array ;
9134: LD_ADDR_VAR 0 10
9138: PUSH
9139: LD_VAR 0 1
9143: ST_TO_ADDR
// for i = 1 to length do
9144: LD_ADDR_VAR 0 6
9148: PUSH
9149: DOUBLE
9150: LD_INT 1
9152: DEC
9153: ST_TO_ADDR
9154: LD_VAR 0 11
9158: PUSH
9159: FOR_TO
9160: IFFALSE 9280
// begin for j = 1 to array do
9162: LD_ADDR_VAR 0 7
9166: PUSH
9167: DOUBLE
9168: LD_INT 1
9170: DEC
9171: ST_TO_ADDR
9172: LD_VAR 0 1
9176: PUSH
9177: FOR_TO
9178: IFFALSE 9266
// begin k := j + d ;
9180: LD_ADDR_VAR 0 8
9184: PUSH
9185: LD_VAR 0 7
9189: PUSH
9190: LD_VAR 0 9
9194: PLUS
9195: ST_TO_ADDR
// if k > array then
9196: LD_VAR 0 8
9200: PUSH
9201: LD_VAR 0 1
9205: GREATER
9206: IFFALSE 9216
// k := 1 ;
9208: LD_ADDR_VAR 0 8
9212: PUSH
9213: LD_INT 1
9215: ST_TO_ADDR
// if not k then
9216: LD_VAR 0 8
9220: NOT
9221: IFFALSE 9233
// k := array ;
9223: LD_ADDR_VAR 0 8
9227: PUSH
9228: LD_VAR 0 1
9232: ST_TO_ADDR
// tmp := Replace ( tmp , k , array [ j ] ) ;
9233: LD_ADDR_VAR 0 10
9237: PUSH
9238: LD_VAR 0 10
9242: PPUSH
9243: LD_VAR 0 8
9247: PPUSH
9248: LD_VAR 0 1
9252: PUSH
9253: LD_VAR 0 7
9257: ARRAY
9258: PPUSH
9259: CALL_OW 1
9263: ST_TO_ADDR
// end ;
9264: GO 9177
9266: POP
9267: POP
// array := tmp ;
9268: LD_ADDR_VAR 0 1
9272: PUSH
9273: LD_VAR 0 10
9277: ST_TO_ADDR
// end ;
9278: GO 9159
9280: POP
9281: POP
// result := array ;
9282: LD_ADDR_VAR 0 5
9286: PUSH
9287: LD_VAR 0 1
9291: ST_TO_ADDR
// end ;
9292: LD_VAR 0 5
9296: RET
// export function GetBuildingHexes ( btype , x , y , dir , nation , mode ) ; var i , temp_list , temp_list2 ; var DepotAm0 , DepotAm1 , DepotAm2 , DepotAm3 , DepotAm4 , DepotAm5 , DepotAr0 , DepotAr1 , DepotAr2 , DepotAr3 , DepotAr4 , DepotAr5 , DepotRu0 , DepotRu1 , DepotRu2 , DepotRu3 , DepotRu4 , DepotRu5 ; var Factory0 , Factory1 , Factory2 , Factory3 , Factory4 , Factory5 , Ext0 , Ext1 , Ext2 , Ext3 , Ext4 , Ext5 ; var Lab0 , Lab1 , Lab2 , Lab3 , Lab4 , Lab5 , ControlTower0 , ControlTower1 , ControlTower2 , ControlTower3 , ControlTower4 , ControlTower5 ; var Barracks0 , Barracks1 , Barracks2 , Barracks3 , Barracks4 , Barracks5 , Bunker0 , Bunker1 , Bunker2 , Bunker3 , Bunker4 , Bunker5 ; begin
9297: LD_INT 0
9299: PPUSH
9300: PPUSH
9301: PPUSH
9302: PPUSH
9303: PPUSH
9304: PPUSH
9305: PPUSH
9306: PPUSH
9307: PPUSH
9308: PPUSH
9309: PPUSH
9310: PPUSH
9311: PPUSH
9312: PPUSH
9313: PPUSH
9314: PPUSH
9315: PPUSH
9316: PPUSH
9317: PPUSH
9318: PPUSH
9319: PPUSH
9320: PPUSH
9321: PPUSH
9322: PPUSH
9323: PPUSH
9324: PPUSH
9325: PPUSH
9326: PPUSH
9327: PPUSH
9328: PPUSH
9329: PPUSH
9330: PPUSH
9331: PPUSH
9332: PPUSH
9333: PPUSH
9334: PPUSH
9335: PPUSH
9336: PPUSH
9337: PPUSH
9338: PPUSH
9339: PPUSH
9340: PPUSH
9341: PPUSH
9342: PPUSH
9343: PPUSH
9344: PPUSH
9345: PPUSH
9346: PPUSH
9347: PPUSH
9348: PPUSH
9349: PPUSH
9350: PPUSH
9351: PPUSH
9352: PPUSH
9353: PPUSH
9354: PPUSH
9355: PPUSH
9356: PPUSH
// result = [ ] ;
9357: LD_ADDR_VAR 0 7
9361: PUSH
9362: EMPTY
9363: ST_TO_ADDR
// temp_list = [ ] ;
9364: LD_ADDR_VAR 0 9
9368: PUSH
9369: EMPTY
9370: ST_TO_ADDR
// if not dir in [ 0 , 1 , 2 , 3 , 4 , 5 ] or ( btype in [ b_depot , b_warehouse ] and not nation in [ nation_american , nation_arabian , nation_russian ] ) then
9371: LD_VAR 0 4
9375: PUSH
9376: LD_INT 0
9378: PUSH
9379: LD_INT 1
9381: PUSH
9382: LD_INT 2
9384: PUSH
9385: LD_INT 3
9387: PUSH
9388: LD_INT 4
9390: PUSH
9391: LD_INT 5
9393: PUSH
9394: EMPTY
9395: LIST
9396: LIST
9397: LIST
9398: LIST
9399: LIST
9400: LIST
9401: IN
9402: NOT
9403: PUSH
9404: LD_VAR 0 1
9408: PUSH
9409: LD_INT 0
9411: PUSH
9412: LD_INT 1
9414: PUSH
9415: EMPTY
9416: LIST
9417: LIST
9418: IN
9419: PUSH
9420: LD_VAR 0 5
9424: PUSH
9425: LD_INT 1
9427: PUSH
9428: LD_INT 2
9430: PUSH
9431: LD_INT 3
9433: PUSH
9434: EMPTY
9435: LIST
9436: LIST
9437: LIST
9438: IN
9439: NOT
9440: AND
9441: OR
9442: IFFALSE 9446
// exit ;
9444: GO 27831
// if btype in [ b_lab , b_lab_half , b_lab_full , b_lab_biological , b_lab_computer , b_lab_opto , b_lab_siberium , b_lab_spacetime , b_lab_weapon ] then
9446: LD_VAR 0 1
9450: PUSH
9451: LD_INT 6
9453: PUSH
9454: LD_INT 7
9456: PUSH
9457: LD_INT 8
9459: PUSH
9460: LD_INT 13
9462: PUSH
9463: LD_INT 12
9465: PUSH
9466: LD_INT 15
9468: PUSH
9469: LD_INT 11
9471: PUSH
9472: LD_INT 14
9474: PUSH
9475: LD_INT 10
9477: PUSH
9478: EMPTY
9479: LIST
9480: LIST
9481: LIST
9482: LIST
9483: LIST
9484: LIST
9485: LIST
9486: LIST
9487: LIST
9488: IN
9489: IFFALSE 9499
// btype = b_lab ;
9491: LD_ADDR_VAR 0 1
9495: PUSH
9496: LD_INT 6
9498: ST_TO_ADDR
// if not mode in [ 0 , 1 , 2 ] or ( not btype in [ b_depot , b_warehouse , b_workshop , b_factory , b_lab , b_control_tower , b_armoury , b_barracks , b_breastwork , b_bunker , b_turret ] and mode = 1 ) or ( not btype in [ b_workshop , b_factory ] and mode = 2 ) then
9499: LD_VAR 0 6
9503: PUSH
9504: LD_INT 0
9506: PUSH
9507: LD_INT 1
9509: PUSH
9510: LD_INT 2
9512: PUSH
9513: EMPTY
9514: LIST
9515: LIST
9516: LIST
9517: IN
9518: NOT
9519: PUSH
9520: LD_VAR 0 1
9524: PUSH
9525: LD_INT 0
9527: PUSH
9528: LD_INT 1
9530: PUSH
9531: LD_INT 2
9533: PUSH
9534: LD_INT 3
9536: PUSH
9537: LD_INT 6
9539: PUSH
9540: LD_INT 36
9542: PUSH
9543: LD_INT 4
9545: PUSH
9546: LD_INT 5
9548: PUSH
9549: LD_INT 31
9551: PUSH
9552: LD_INT 32
9554: PUSH
9555: LD_INT 33
9557: PUSH
9558: EMPTY
9559: LIST
9560: LIST
9561: LIST
9562: LIST
9563: LIST
9564: LIST
9565: LIST
9566: LIST
9567: LIST
9568: LIST
9569: LIST
9570: IN
9571: NOT
9572: PUSH
9573: LD_VAR 0 6
9577: PUSH
9578: LD_INT 1
9580: EQUAL
9581: AND
9582: OR
9583: PUSH
9584: LD_VAR 0 1
9588: PUSH
9589: LD_INT 2
9591: PUSH
9592: LD_INT 3
9594: PUSH
9595: EMPTY
9596: LIST
9597: LIST
9598: IN
9599: NOT
9600: PUSH
9601: LD_VAR 0 6
9605: PUSH
9606: LD_INT 2
9608: EQUAL
9609: AND
9610: OR
9611: IFFALSE 9621
// mode = 0 ;
9613: LD_ADDR_VAR 0 6
9617: PUSH
9618: LD_INT 0
9620: ST_TO_ADDR
// case mode of 0 :
9621: LD_VAR 0 6
9625: PUSH
9626: LD_INT 0
9628: DOUBLE
9629: EQUAL
9630: IFTRUE 9634
9632: GO 21087
9634: POP
// begin DepotAm0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
9635: LD_ADDR_VAR 0 11
9639: PUSH
9640: LD_INT 0
9642: PUSH
9643: LD_INT 0
9645: PUSH
9646: EMPTY
9647: LIST
9648: LIST
9649: PUSH
9650: LD_INT 0
9652: PUSH
9653: LD_INT 1
9655: NEG
9656: PUSH
9657: EMPTY
9658: LIST
9659: LIST
9660: PUSH
9661: LD_INT 1
9663: PUSH
9664: LD_INT 0
9666: PUSH
9667: EMPTY
9668: LIST
9669: LIST
9670: PUSH
9671: LD_INT 1
9673: PUSH
9674: LD_INT 1
9676: PUSH
9677: EMPTY
9678: LIST
9679: LIST
9680: PUSH
9681: LD_INT 0
9683: PUSH
9684: LD_INT 1
9686: PUSH
9687: EMPTY
9688: LIST
9689: LIST
9690: PUSH
9691: LD_INT 1
9693: NEG
9694: PUSH
9695: LD_INT 0
9697: PUSH
9698: EMPTY
9699: LIST
9700: LIST
9701: PUSH
9702: LD_INT 1
9704: NEG
9705: PUSH
9706: LD_INT 1
9708: NEG
9709: PUSH
9710: EMPTY
9711: LIST
9712: LIST
9713: PUSH
9714: LD_INT 1
9716: NEG
9717: PUSH
9718: LD_INT 2
9720: NEG
9721: PUSH
9722: EMPTY
9723: LIST
9724: LIST
9725: PUSH
9726: LD_INT 0
9728: PUSH
9729: LD_INT 2
9731: NEG
9732: PUSH
9733: EMPTY
9734: LIST
9735: LIST
9736: PUSH
9737: LD_INT 1
9739: PUSH
9740: LD_INT 1
9742: NEG
9743: PUSH
9744: EMPTY
9745: LIST
9746: LIST
9747: PUSH
9748: LD_INT 1
9750: PUSH
9751: LD_INT 2
9753: PUSH
9754: EMPTY
9755: LIST
9756: LIST
9757: PUSH
9758: LD_INT 0
9760: PUSH
9761: LD_INT 2
9763: PUSH
9764: EMPTY
9765: LIST
9766: LIST
9767: PUSH
9768: LD_INT 1
9770: NEG
9771: PUSH
9772: LD_INT 1
9774: PUSH
9775: EMPTY
9776: LIST
9777: LIST
9778: PUSH
9779: LD_INT 1
9781: PUSH
9782: LD_INT 3
9784: PUSH
9785: EMPTY
9786: LIST
9787: LIST
9788: PUSH
9789: LD_INT 0
9791: PUSH
9792: LD_INT 3
9794: PUSH
9795: EMPTY
9796: LIST
9797: LIST
9798: PUSH
9799: LD_INT 1
9801: NEG
9802: PUSH
9803: LD_INT 2
9805: PUSH
9806: EMPTY
9807: LIST
9808: LIST
9809: PUSH
9810: EMPTY
9811: LIST
9812: LIST
9813: LIST
9814: LIST
9815: LIST
9816: LIST
9817: LIST
9818: LIST
9819: LIST
9820: LIST
9821: LIST
9822: LIST
9823: LIST
9824: LIST
9825: LIST
9826: LIST
9827: ST_TO_ADDR
// DepotAm1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
9828: LD_ADDR_VAR 0 12
9832: PUSH
9833: LD_INT 0
9835: PUSH
9836: LD_INT 0
9838: PUSH
9839: EMPTY
9840: LIST
9841: LIST
9842: PUSH
9843: LD_INT 0
9845: PUSH
9846: LD_INT 1
9848: NEG
9849: PUSH
9850: EMPTY
9851: LIST
9852: LIST
9853: PUSH
9854: LD_INT 1
9856: PUSH
9857: LD_INT 0
9859: PUSH
9860: EMPTY
9861: LIST
9862: LIST
9863: PUSH
9864: LD_INT 1
9866: PUSH
9867: LD_INT 1
9869: PUSH
9870: EMPTY
9871: LIST
9872: LIST
9873: PUSH
9874: LD_INT 0
9876: PUSH
9877: LD_INT 1
9879: PUSH
9880: EMPTY
9881: LIST
9882: LIST
9883: PUSH
9884: LD_INT 1
9886: NEG
9887: PUSH
9888: LD_INT 0
9890: PUSH
9891: EMPTY
9892: LIST
9893: LIST
9894: PUSH
9895: LD_INT 1
9897: NEG
9898: PUSH
9899: LD_INT 1
9901: NEG
9902: PUSH
9903: EMPTY
9904: LIST
9905: LIST
9906: PUSH
9907: LD_INT 1
9909: PUSH
9910: LD_INT 1
9912: NEG
9913: PUSH
9914: EMPTY
9915: LIST
9916: LIST
9917: PUSH
9918: LD_INT 2
9920: PUSH
9921: LD_INT 0
9923: PUSH
9924: EMPTY
9925: LIST
9926: LIST
9927: PUSH
9928: LD_INT 2
9930: PUSH
9931: LD_INT 1
9933: PUSH
9934: EMPTY
9935: LIST
9936: LIST
9937: PUSH
9938: LD_INT 1
9940: NEG
9941: PUSH
9942: LD_INT 1
9944: PUSH
9945: EMPTY
9946: LIST
9947: LIST
9948: PUSH
9949: LD_INT 2
9951: NEG
9952: PUSH
9953: LD_INT 0
9955: PUSH
9956: EMPTY
9957: LIST
9958: LIST
9959: PUSH
9960: LD_INT 2
9962: NEG
9963: PUSH
9964: LD_INT 1
9966: NEG
9967: PUSH
9968: EMPTY
9969: LIST
9970: LIST
9971: PUSH
9972: LD_INT 2
9974: NEG
9975: PUSH
9976: LD_INT 1
9978: PUSH
9979: EMPTY
9980: LIST
9981: LIST
9982: PUSH
9983: LD_INT 3
9985: NEG
9986: PUSH
9987: LD_INT 0
9989: PUSH
9990: EMPTY
9991: LIST
9992: LIST
9993: PUSH
9994: LD_INT 3
9996: NEG
9997: PUSH
9998: LD_INT 1
10000: NEG
10001: PUSH
10002: EMPTY
10003: LIST
10004: LIST
10005: PUSH
10006: EMPTY
10007: LIST
10008: LIST
10009: LIST
10010: LIST
10011: LIST
10012: LIST
10013: LIST
10014: LIST
10015: LIST
10016: LIST
10017: LIST
10018: LIST
10019: LIST
10020: LIST
10021: LIST
10022: LIST
10023: ST_TO_ADDR
// DepotAm2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
10024: LD_ADDR_VAR 0 13
10028: PUSH
10029: LD_INT 0
10031: PUSH
10032: LD_INT 0
10034: PUSH
10035: EMPTY
10036: LIST
10037: LIST
10038: PUSH
10039: LD_INT 0
10041: PUSH
10042: LD_INT 1
10044: NEG
10045: PUSH
10046: EMPTY
10047: LIST
10048: LIST
10049: PUSH
10050: LD_INT 1
10052: PUSH
10053: LD_INT 0
10055: PUSH
10056: EMPTY
10057: LIST
10058: LIST
10059: PUSH
10060: LD_INT 1
10062: PUSH
10063: LD_INT 1
10065: PUSH
10066: EMPTY
10067: LIST
10068: LIST
10069: PUSH
10070: LD_INT 0
10072: PUSH
10073: LD_INT 1
10075: PUSH
10076: EMPTY
10077: LIST
10078: LIST
10079: PUSH
10080: LD_INT 1
10082: NEG
10083: PUSH
10084: LD_INT 0
10086: PUSH
10087: EMPTY
10088: LIST
10089: LIST
10090: PUSH
10091: LD_INT 1
10093: NEG
10094: PUSH
10095: LD_INT 1
10097: NEG
10098: PUSH
10099: EMPTY
10100: LIST
10101: LIST
10102: PUSH
10103: LD_INT 1
10105: NEG
10106: PUSH
10107: LD_INT 2
10109: NEG
10110: PUSH
10111: EMPTY
10112: LIST
10113: LIST
10114: PUSH
10115: LD_INT 2
10117: PUSH
10118: LD_INT 1
10120: PUSH
10121: EMPTY
10122: LIST
10123: LIST
10124: PUSH
10125: LD_INT 2
10127: PUSH
10128: LD_INT 2
10130: PUSH
10131: EMPTY
10132: LIST
10133: LIST
10134: PUSH
10135: LD_INT 1
10137: PUSH
10138: LD_INT 2
10140: PUSH
10141: EMPTY
10142: LIST
10143: LIST
10144: PUSH
10145: LD_INT 2
10147: NEG
10148: PUSH
10149: LD_INT 1
10151: NEG
10152: PUSH
10153: EMPTY
10154: LIST
10155: LIST
10156: PUSH
10157: LD_INT 2
10159: NEG
10160: PUSH
10161: LD_INT 2
10163: NEG
10164: PUSH
10165: EMPTY
10166: LIST
10167: LIST
10168: PUSH
10169: LD_INT 2
10171: NEG
10172: PUSH
10173: LD_INT 3
10175: NEG
10176: PUSH
10177: EMPTY
10178: LIST
10179: LIST
10180: PUSH
10181: LD_INT 3
10183: NEG
10184: PUSH
10185: LD_INT 2
10187: NEG
10188: PUSH
10189: EMPTY
10190: LIST
10191: LIST
10192: PUSH
10193: LD_INT 3
10195: NEG
10196: PUSH
10197: LD_INT 3
10199: NEG
10200: PUSH
10201: EMPTY
10202: LIST
10203: LIST
10204: PUSH
10205: EMPTY
10206: LIST
10207: LIST
10208: LIST
10209: LIST
10210: LIST
10211: LIST
10212: LIST
10213: LIST
10214: LIST
10215: LIST
10216: LIST
10217: LIST
10218: LIST
10219: LIST
10220: LIST
10221: LIST
10222: ST_TO_ADDR
// DepotAm3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
10223: LD_ADDR_VAR 0 14
10227: PUSH
10228: LD_INT 0
10230: PUSH
10231: LD_INT 0
10233: PUSH
10234: EMPTY
10235: LIST
10236: LIST
10237: PUSH
10238: LD_INT 0
10240: PUSH
10241: LD_INT 1
10243: NEG
10244: PUSH
10245: EMPTY
10246: LIST
10247: LIST
10248: PUSH
10249: LD_INT 1
10251: PUSH
10252: LD_INT 0
10254: PUSH
10255: EMPTY
10256: LIST
10257: LIST
10258: PUSH
10259: LD_INT 1
10261: PUSH
10262: LD_INT 1
10264: PUSH
10265: EMPTY
10266: LIST
10267: LIST
10268: PUSH
10269: LD_INT 0
10271: PUSH
10272: LD_INT 1
10274: PUSH
10275: EMPTY
10276: LIST
10277: LIST
10278: PUSH
10279: LD_INT 1
10281: NEG
10282: PUSH
10283: LD_INT 0
10285: PUSH
10286: EMPTY
10287: LIST
10288: LIST
10289: PUSH
10290: LD_INT 1
10292: NEG
10293: PUSH
10294: LD_INT 1
10296: NEG
10297: PUSH
10298: EMPTY
10299: LIST
10300: LIST
10301: PUSH
10302: LD_INT 1
10304: NEG
10305: PUSH
10306: LD_INT 2
10308: NEG
10309: PUSH
10310: EMPTY
10311: LIST
10312: LIST
10313: PUSH
10314: LD_INT 0
10316: PUSH
10317: LD_INT 2
10319: NEG
10320: PUSH
10321: EMPTY
10322: LIST
10323: LIST
10324: PUSH
10325: LD_INT 1
10327: PUSH
10328: LD_INT 1
10330: NEG
10331: PUSH
10332: EMPTY
10333: LIST
10334: LIST
10335: PUSH
10336: LD_INT 1
10338: PUSH
10339: LD_INT 2
10341: PUSH
10342: EMPTY
10343: LIST
10344: LIST
10345: PUSH
10346: LD_INT 0
10348: PUSH
10349: LD_INT 2
10351: PUSH
10352: EMPTY
10353: LIST
10354: LIST
10355: PUSH
10356: LD_INT 1
10358: NEG
10359: PUSH
10360: LD_INT 1
10362: PUSH
10363: EMPTY
10364: LIST
10365: LIST
10366: PUSH
10367: LD_INT 1
10369: NEG
10370: PUSH
10371: LD_INT 3
10373: NEG
10374: PUSH
10375: EMPTY
10376: LIST
10377: LIST
10378: PUSH
10379: LD_INT 0
10381: PUSH
10382: LD_INT 3
10384: NEG
10385: PUSH
10386: EMPTY
10387: LIST
10388: LIST
10389: PUSH
10390: LD_INT 1
10392: PUSH
10393: LD_INT 2
10395: NEG
10396: PUSH
10397: EMPTY
10398: LIST
10399: LIST
10400: PUSH
10401: EMPTY
10402: LIST
10403: LIST
10404: LIST
10405: LIST
10406: LIST
10407: LIST
10408: LIST
10409: LIST
10410: LIST
10411: LIST
10412: LIST
10413: LIST
10414: LIST
10415: LIST
10416: LIST
10417: LIST
10418: ST_TO_ADDR
// DepotAm4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
10419: LD_ADDR_VAR 0 15
10423: PUSH
10424: LD_INT 0
10426: PUSH
10427: LD_INT 0
10429: PUSH
10430: EMPTY
10431: LIST
10432: LIST
10433: PUSH
10434: LD_INT 0
10436: PUSH
10437: LD_INT 1
10439: NEG
10440: PUSH
10441: EMPTY
10442: LIST
10443: LIST
10444: PUSH
10445: LD_INT 1
10447: PUSH
10448: LD_INT 0
10450: PUSH
10451: EMPTY
10452: LIST
10453: LIST
10454: PUSH
10455: LD_INT 1
10457: PUSH
10458: LD_INT 1
10460: PUSH
10461: EMPTY
10462: LIST
10463: LIST
10464: PUSH
10465: LD_INT 0
10467: PUSH
10468: LD_INT 1
10470: PUSH
10471: EMPTY
10472: LIST
10473: LIST
10474: PUSH
10475: LD_INT 1
10477: NEG
10478: PUSH
10479: LD_INT 0
10481: PUSH
10482: EMPTY
10483: LIST
10484: LIST
10485: PUSH
10486: LD_INT 1
10488: NEG
10489: PUSH
10490: LD_INT 1
10492: NEG
10493: PUSH
10494: EMPTY
10495: LIST
10496: LIST
10497: PUSH
10498: LD_INT 1
10500: PUSH
10501: LD_INT 1
10503: NEG
10504: PUSH
10505: EMPTY
10506: LIST
10507: LIST
10508: PUSH
10509: LD_INT 2
10511: PUSH
10512: LD_INT 0
10514: PUSH
10515: EMPTY
10516: LIST
10517: LIST
10518: PUSH
10519: LD_INT 2
10521: PUSH
10522: LD_INT 1
10524: PUSH
10525: EMPTY
10526: LIST
10527: LIST
10528: PUSH
10529: LD_INT 1
10531: NEG
10532: PUSH
10533: LD_INT 1
10535: PUSH
10536: EMPTY
10537: LIST
10538: LIST
10539: PUSH
10540: LD_INT 2
10542: NEG
10543: PUSH
10544: LD_INT 0
10546: PUSH
10547: EMPTY
10548: LIST
10549: LIST
10550: PUSH
10551: LD_INT 2
10553: NEG
10554: PUSH
10555: LD_INT 1
10557: NEG
10558: PUSH
10559: EMPTY
10560: LIST
10561: LIST
10562: PUSH
10563: LD_INT 2
10565: PUSH
10566: LD_INT 1
10568: NEG
10569: PUSH
10570: EMPTY
10571: LIST
10572: LIST
10573: PUSH
10574: LD_INT 3
10576: PUSH
10577: LD_INT 0
10579: PUSH
10580: EMPTY
10581: LIST
10582: LIST
10583: PUSH
10584: LD_INT 3
10586: PUSH
10587: LD_INT 1
10589: PUSH
10590: EMPTY
10591: LIST
10592: LIST
10593: PUSH
10594: EMPTY
10595: LIST
10596: LIST
10597: LIST
10598: LIST
10599: LIST
10600: LIST
10601: LIST
10602: LIST
10603: LIST
10604: LIST
10605: LIST
10606: LIST
10607: LIST
10608: LIST
10609: LIST
10610: LIST
10611: ST_TO_ADDR
// DepotAm5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
10612: LD_ADDR_VAR 0 16
10616: PUSH
10617: LD_INT 0
10619: PUSH
10620: LD_INT 0
10622: PUSH
10623: EMPTY
10624: LIST
10625: LIST
10626: PUSH
10627: LD_INT 0
10629: PUSH
10630: LD_INT 1
10632: NEG
10633: PUSH
10634: EMPTY
10635: LIST
10636: LIST
10637: PUSH
10638: LD_INT 1
10640: PUSH
10641: LD_INT 0
10643: PUSH
10644: EMPTY
10645: LIST
10646: LIST
10647: PUSH
10648: LD_INT 1
10650: PUSH
10651: LD_INT 1
10653: PUSH
10654: EMPTY
10655: LIST
10656: LIST
10657: PUSH
10658: LD_INT 0
10660: PUSH
10661: LD_INT 1
10663: PUSH
10664: EMPTY
10665: LIST
10666: LIST
10667: PUSH
10668: LD_INT 1
10670: NEG
10671: PUSH
10672: LD_INT 0
10674: PUSH
10675: EMPTY
10676: LIST
10677: LIST
10678: PUSH
10679: LD_INT 1
10681: NEG
10682: PUSH
10683: LD_INT 1
10685: NEG
10686: PUSH
10687: EMPTY
10688: LIST
10689: LIST
10690: PUSH
10691: LD_INT 1
10693: NEG
10694: PUSH
10695: LD_INT 2
10697: NEG
10698: PUSH
10699: EMPTY
10700: LIST
10701: LIST
10702: PUSH
10703: LD_INT 2
10705: PUSH
10706: LD_INT 1
10708: PUSH
10709: EMPTY
10710: LIST
10711: LIST
10712: PUSH
10713: LD_INT 2
10715: PUSH
10716: LD_INT 2
10718: PUSH
10719: EMPTY
10720: LIST
10721: LIST
10722: PUSH
10723: LD_INT 1
10725: PUSH
10726: LD_INT 2
10728: PUSH
10729: EMPTY
10730: LIST
10731: LIST
10732: PUSH
10733: LD_INT 2
10735: NEG
10736: PUSH
10737: LD_INT 1
10739: NEG
10740: PUSH
10741: EMPTY
10742: LIST
10743: LIST
10744: PUSH
10745: LD_INT 2
10747: NEG
10748: PUSH
10749: LD_INT 2
10751: NEG
10752: PUSH
10753: EMPTY
10754: LIST
10755: LIST
10756: PUSH
10757: LD_INT 3
10759: PUSH
10760: LD_INT 2
10762: PUSH
10763: EMPTY
10764: LIST
10765: LIST
10766: PUSH
10767: LD_INT 3
10769: PUSH
10770: LD_INT 3
10772: PUSH
10773: EMPTY
10774: LIST
10775: LIST
10776: PUSH
10777: LD_INT 2
10779: PUSH
10780: LD_INT 3
10782: PUSH
10783: EMPTY
10784: LIST
10785: LIST
10786: PUSH
10787: EMPTY
10788: LIST
10789: LIST
10790: LIST
10791: LIST
10792: LIST
10793: LIST
10794: LIST
10795: LIST
10796: LIST
10797: LIST
10798: LIST
10799: LIST
10800: LIST
10801: LIST
10802: LIST
10803: LIST
10804: ST_TO_ADDR
// DepotAr0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10805: LD_ADDR_VAR 0 17
10809: PUSH
10810: LD_INT 0
10812: PUSH
10813: LD_INT 0
10815: PUSH
10816: EMPTY
10817: LIST
10818: LIST
10819: PUSH
10820: LD_INT 0
10822: PUSH
10823: LD_INT 1
10825: NEG
10826: PUSH
10827: EMPTY
10828: LIST
10829: LIST
10830: PUSH
10831: LD_INT 1
10833: PUSH
10834: LD_INT 0
10836: PUSH
10837: EMPTY
10838: LIST
10839: LIST
10840: PUSH
10841: LD_INT 1
10843: PUSH
10844: LD_INT 1
10846: PUSH
10847: EMPTY
10848: LIST
10849: LIST
10850: PUSH
10851: LD_INT 0
10853: PUSH
10854: LD_INT 1
10856: PUSH
10857: EMPTY
10858: LIST
10859: LIST
10860: PUSH
10861: LD_INT 1
10863: NEG
10864: PUSH
10865: LD_INT 0
10867: PUSH
10868: EMPTY
10869: LIST
10870: LIST
10871: PUSH
10872: LD_INT 1
10874: NEG
10875: PUSH
10876: LD_INT 1
10878: NEG
10879: PUSH
10880: EMPTY
10881: LIST
10882: LIST
10883: PUSH
10884: LD_INT 1
10886: NEG
10887: PUSH
10888: LD_INT 2
10890: NEG
10891: PUSH
10892: EMPTY
10893: LIST
10894: LIST
10895: PUSH
10896: LD_INT 0
10898: PUSH
10899: LD_INT 2
10901: NEG
10902: PUSH
10903: EMPTY
10904: LIST
10905: LIST
10906: PUSH
10907: LD_INT 1
10909: PUSH
10910: LD_INT 1
10912: NEG
10913: PUSH
10914: EMPTY
10915: LIST
10916: LIST
10917: PUSH
10918: LD_INT 2
10920: PUSH
10921: LD_INT 0
10923: PUSH
10924: EMPTY
10925: LIST
10926: LIST
10927: PUSH
10928: LD_INT 2
10930: PUSH
10931: LD_INT 1
10933: PUSH
10934: EMPTY
10935: LIST
10936: LIST
10937: PUSH
10938: LD_INT 2
10940: PUSH
10941: LD_INT 2
10943: PUSH
10944: EMPTY
10945: LIST
10946: LIST
10947: PUSH
10948: LD_INT 1
10950: PUSH
10951: LD_INT 2
10953: PUSH
10954: EMPTY
10955: LIST
10956: LIST
10957: PUSH
10958: LD_INT 0
10960: PUSH
10961: LD_INT 2
10963: PUSH
10964: EMPTY
10965: LIST
10966: LIST
10967: PUSH
10968: LD_INT 1
10970: NEG
10971: PUSH
10972: LD_INT 1
10974: PUSH
10975: EMPTY
10976: LIST
10977: LIST
10978: PUSH
10979: LD_INT 2
10981: NEG
10982: PUSH
10983: LD_INT 0
10985: PUSH
10986: EMPTY
10987: LIST
10988: LIST
10989: PUSH
10990: LD_INT 2
10992: NEG
10993: PUSH
10994: LD_INT 1
10996: NEG
10997: PUSH
10998: EMPTY
10999: LIST
11000: LIST
11001: PUSH
11002: LD_INT 2
11004: NEG
11005: PUSH
11006: LD_INT 2
11008: NEG
11009: PUSH
11010: EMPTY
11011: LIST
11012: LIST
11013: PUSH
11014: EMPTY
11015: LIST
11016: LIST
11017: LIST
11018: LIST
11019: LIST
11020: LIST
11021: LIST
11022: LIST
11023: LIST
11024: LIST
11025: LIST
11026: LIST
11027: LIST
11028: LIST
11029: LIST
11030: LIST
11031: LIST
11032: LIST
11033: LIST
11034: ST_TO_ADDR
// DepotAr1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
11035: LD_ADDR_VAR 0 18
11039: PUSH
11040: LD_INT 0
11042: PUSH
11043: LD_INT 0
11045: PUSH
11046: EMPTY
11047: LIST
11048: LIST
11049: PUSH
11050: LD_INT 0
11052: PUSH
11053: LD_INT 1
11055: NEG
11056: PUSH
11057: EMPTY
11058: LIST
11059: LIST
11060: PUSH
11061: LD_INT 1
11063: PUSH
11064: LD_INT 0
11066: PUSH
11067: EMPTY
11068: LIST
11069: LIST
11070: PUSH
11071: LD_INT 1
11073: PUSH
11074: LD_INT 1
11076: PUSH
11077: EMPTY
11078: LIST
11079: LIST
11080: PUSH
11081: LD_INT 0
11083: PUSH
11084: LD_INT 1
11086: PUSH
11087: EMPTY
11088: LIST
11089: LIST
11090: PUSH
11091: LD_INT 1
11093: NEG
11094: PUSH
11095: LD_INT 0
11097: PUSH
11098: EMPTY
11099: LIST
11100: LIST
11101: PUSH
11102: LD_INT 1
11104: NEG
11105: PUSH
11106: LD_INT 1
11108: NEG
11109: PUSH
11110: EMPTY
11111: LIST
11112: LIST
11113: PUSH
11114: LD_INT 1
11116: NEG
11117: PUSH
11118: LD_INT 2
11120: NEG
11121: PUSH
11122: EMPTY
11123: LIST
11124: LIST
11125: PUSH
11126: LD_INT 0
11128: PUSH
11129: LD_INT 2
11131: NEG
11132: PUSH
11133: EMPTY
11134: LIST
11135: LIST
11136: PUSH
11137: LD_INT 1
11139: PUSH
11140: LD_INT 1
11142: NEG
11143: PUSH
11144: EMPTY
11145: LIST
11146: LIST
11147: PUSH
11148: LD_INT 2
11150: PUSH
11151: LD_INT 0
11153: PUSH
11154: EMPTY
11155: LIST
11156: LIST
11157: PUSH
11158: LD_INT 2
11160: PUSH
11161: LD_INT 1
11163: PUSH
11164: EMPTY
11165: LIST
11166: LIST
11167: PUSH
11168: LD_INT 2
11170: PUSH
11171: LD_INT 2
11173: PUSH
11174: EMPTY
11175: LIST
11176: LIST
11177: PUSH
11178: LD_INT 1
11180: PUSH
11181: LD_INT 2
11183: PUSH
11184: EMPTY
11185: LIST
11186: LIST
11187: PUSH
11188: LD_INT 0
11190: PUSH
11191: LD_INT 2
11193: PUSH
11194: EMPTY
11195: LIST
11196: LIST
11197: PUSH
11198: LD_INT 1
11200: NEG
11201: PUSH
11202: LD_INT 1
11204: PUSH
11205: EMPTY
11206: LIST
11207: LIST
11208: PUSH
11209: LD_INT 2
11211: NEG
11212: PUSH
11213: LD_INT 0
11215: PUSH
11216: EMPTY
11217: LIST
11218: LIST
11219: PUSH
11220: LD_INT 2
11222: NEG
11223: PUSH
11224: LD_INT 1
11226: NEG
11227: PUSH
11228: EMPTY
11229: LIST
11230: LIST
11231: PUSH
11232: LD_INT 2
11234: NEG
11235: PUSH
11236: LD_INT 2
11238: NEG
11239: PUSH
11240: EMPTY
11241: LIST
11242: LIST
11243: PUSH
11244: EMPTY
11245: LIST
11246: LIST
11247: LIST
11248: LIST
11249: LIST
11250: LIST
11251: LIST
11252: LIST
11253: LIST
11254: LIST
11255: LIST
11256: LIST
11257: LIST
11258: LIST
11259: LIST
11260: LIST
11261: LIST
11262: LIST
11263: LIST
11264: ST_TO_ADDR
// DepotAr2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
11265: LD_ADDR_VAR 0 19
11269: PUSH
11270: LD_INT 0
11272: PUSH
11273: LD_INT 0
11275: PUSH
11276: EMPTY
11277: LIST
11278: LIST
11279: PUSH
11280: LD_INT 0
11282: PUSH
11283: LD_INT 1
11285: NEG
11286: PUSH
11287: EMPTY
11288: LIST
11289: LIST
11290: PUSH
11291: LD_INT 1
11293: PUSH
11294: LD_INT 0
11296: PUSH
11297: EMPTY
11298: LIST
11299: LIST
11300: PUSH
11301: LD_INT 1
11303: PUSH
11304: LD_INT 1
11306: PUSH
11307: EMPTY
11308: LIST
11309: LIST
11310: PUSH
11311: LD_INT 0
11313: PUSH
11314: LD_INT 1
11316: PUSH
11317: EMPTY
11318: LIST
11319: LIST
11320: PUSH
11321: LD_INT 1
11323: NEG
11324: PUSH
11325: LD_INT 0
11327: PUSH
11328: EMPTY
11329: LIST
11330: LIST
11331: PUSH
11332: LD_INT 1
11334: NEG
11335: PUSH
11336: LD_INT 1
11338: NEG
11339: PUSH
11340: EMPTY
11341: LIST
11342: LIST
11343: PUSH
11344: LD_INT 1
11346: NEG
11347: PUSH
11348: LD_INT 2
11350: NEG
11351: PUSH
11352: EMPTY
11353: LIST
11354: LIST
11355: PUSH
11356: LD_INT 0
11358: PUSH
11359: LD_INT 2
11361: NEG
11362: PUSH
11363: EMPTY
11364: LIST
11365: LIST
11366: PUSH
11367: LD_INT 1
11369: PUSH
11370: LD_INT 1
11372: NEG
11373: PUSH
11374: EMPTY
11375: LIST
11376: LIST
11377: PUSH
11378: LD_INT 2
11380: PUSH
11381: LD_INT 0
11383: PUSH
11384: EMPTY
11385: LIST
11386: LIST
11387: PUSH
11388: LD_INT 2
11390: PUSH
11391: LD_INT 1
11393: PUSH
11394: EMPTY
11395: LIST
11396: LIST
11397: PUSH
11398: LD_INT 2
11400: PUSH
11401: LD_INT 2
11403: PUSH
11404: EMPTY
11405: LIST
11406: LIST
11407: PUSH
11408: LD_INT 1
11410: PUSH
11411: LD_INT 2
11413: PUSH
11414: EMPTY
11415: LIST
11416: LIST
11417: PUSH
11418: LD_INT 0
11420: PUSH
11421: LD_INT 2
11423: PUSH
11424: EMPTY
11425: LIST
11426: LIST
11427: PUSH
11428: LD_INT 1
11430: NEG
11431: PUSH
11432: LD_INT 1
11434: PUSH
11435: EMPTY
11436: LIST
11437: LIST
11438: PUSH
11439: LD_INT 2
11441: NEG
11442: PUSH
11443: LD_INT 0
11445: PUSH
11446: EMPTY
11447: LIST
11448: LIST
11449: PUSH
11450: LD_INT 2
11452: NEG
11453: PUSH
11454: LD_INT 1
11456: NEG
11457: PUSH
11458: EMPTY
11459: LIST
11460: LIST
11461: PUSH
11462: LD_INT 2
11464: NEG
11465: PUSH
11466: LD_INT 2
11468: NEG
11469: PUSH
11470: EMPTY
11471: LIST
11472: LIST
11473: PUSH
11474: EMPTY
11475: LIST
11476: LIST
11477: LIST
11478: LIST
11479: LIST
11480: LIST
11481: LIST
11482: LIST
11483: LIST
11484: LIST
11485: LIST
11486: LIST
11487: LIST
11488: LIST
11489: LIST
11490: LIST
11491: LIST
11492: LIST
11493: LIST
11494: ST_TO_ADDR
// DepotAr3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
11495: LD_ADDR_VAR 0 20
11499: PUSH
11500: LD_INT 0
11502: PUSH
11503: LD_INT 0
11505: PUSH
11506: EMPTY
11507: LIST
11508: LIST
11509: PUSH
11510: LD_INT 0
11512: PUSH
11513: LD_INT 1
11515: NEG
11516: PUSH
11517: EMPTY
11518: LIST
11519: LIST
11520: PUSH
11521: LD_INT 1
11523: PUSH
11524: LD_INT 0
11526: PUSH
11527: EMPTY
11528: LIST
11529: LIST
11530: PUSH
11531: LD_INT 1
11533: PUSH
11534: LD_INT 1
11536: PUSH
11537: EMPTY
11538: LIST
11539: LIST
11540: PUSH
11541: LD_INT 0
11543: PUSH
11544: LD_INT 1
11546: PUSH
11547: EMPTY
11548: LIST
11549: LIST
11550: PUSH
11551: LD_INT 1
11553: NEG
11554: PUSH
11555: LD_INT 0
11557: PUSH
11558: EMPTY
11559: LIST
11560: LIST
11561: PUSH
11562: LD_INT 1
11564: NEG
11565: PUSH
11566: LD_INT 1
11568: NEG
11569: PUSH
11570: EMPTY
11571: LIST
11572: LIST
11573: PUSH
11574: LD_INT 1
11576: NEG
11577: PUSH
11578: LD_INT 2
11580: NEG
11581: PUSH
11582: EMPTY
11583: LIST
11584: LIST
11585: PUSH
11586: LD_INT 0
11588: PUSH
11589: LD_INT 2
11591: NEG
11592: PUSH
11593: EMPTY
11594: LIST
11595: LIST
11596: PUSH
11597: LD_INT 1
11599: PUSH
11600: LD_INT 1
11602: NEG
11603: PUSH
11604: EMPTY
11605: LIST
11606: LIST
11607: PUSH
11608: LD_INT 2
11610: PUSH
11611: LD_INT 0
11613: PUSH
11614: EMPTY
11615: LIST
11616: LIST
11617: PUSH
11618: LD_INT 2
11620: PUSH
11621: LD_INT 1
11623: PUSH
11624: EMPTY
11625: LIST
11626: LIST
11627: PUSH
11628: LD_INT 2
11630: PUSH
11631: LD_INT 2
11633: PUSH
11634: EMPTY
11635: LIST
11636: LIST
11637: PUSH
11638: LD_INT 1
11640: PUSH
11641: LD_INT 2
11643: PUSH
11644: EMPTY
11645: LIST
11646: LIST
11647: PUSH
11648: LD_INT 0
11650: PUSH
11651: LD_INT 2
11653: PUSH
11654: EMPTY
11655: LIST
11656: LIST
11657: PUSH
11658: LD_INT 1
11660: NEG
11661: PUSH
11662: LD_INT 1
11664: PUSH
11665: EMPTY
11666: LIST
11667: LIST
11668: PUSH
11669: LD_INT 2
11671: NEG
11672: PUSH
11673: LD_INT 0
11675: PUSH
11676: EMPTY
11677: LIST
11678: LIST
11679: PUSH
11680: LD_INT 2
11682: NEG
11683: PUSH
11684: LD_INT 1
11686: NEG
11687: PUSH
11688: EMPTY
11689: LIST
11690: LIST
11691: PUSH
11692: LD_INT 2
11694: NEG
11695: PUSH
11696: LD_INT 2
11698: NEG
11699: PUSH
11700: EMPTY
11701: LIST
11702: LIST
11703: PUSH
11704: EMPTY
11705: LIST
11706: LIST
11707: LIST
11708: LIST
11709: LIST
11710: LIST
11711: LIST
11712: LIST
11713: LIST
11714: LIST
11715: LIST
11716: LIST
11717: LIST
11718: LIST
11719: LIST
11720: LIST
11721: LIST
11722: LIST
11723: LIST
11724: ST_TO_ADDR
// DepotAr4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
11725: LD_ADDR_VAR 0 21
11729: PUSH
11730: LD_INT 0
11732: PUSH
11733: LD_INT 0
11735: PUSH
11736: EMPTY
11737: LIST
11738: LIST
11739: PUSH
11740: LD_INT 0
11742: PUSH
11743: LD_INT 1
11745: NEG
11746: PUSH
11747: EMPTY
11748: LIST
11749: LIST
11750: PUSH
11751: LD_INT 1
11753: PUSH
11754: LD_INT 0
11756: PUSH
11757: EMPTY
11758: LIST
11759: LIST
11760: PUSH
11761: LD_INT 1
11763: PUSH
11764: LD_INT 1
11766: PUSH
11767: EMPTY
11768: LIST
11769: LIST
11770: PUSH
11771: LD_INT 0
11773: PUSH
11774: LD_INT 1
11776: PUSH
11777: EMPTY
11778: LIST
11779: LIST
11780: PUSH
11781: LD_INT 1
11783: NEG
11784: PUSH
11785: LD_INT 0
11787: PUSH
11788: EMPTY
11789: LIST
11790: LIST
11791: PUSH
11792: LD_INT 1
11794: NEG
11795: PUSH
11796: LD_INT 1
11798: NEG
11799: PUSH
11800: EMPTY
11801: LIST
11802: LIST
11803: PUSH
11804: LD_INT 1
11806: NEG
11807: PUSH
11808: LD_INT 2
11810: NEG
11811: PUSH
11812: EMPTY
11813: LIST
11814: LIST
11815: PUSH
11816: LD_INT 0
11818: PUSH
11819: LD_INT 2
11821: NEG
11822: PUSH
11823: EMPTY
11824: LIST
11825: LIST
11826: PUSH
11827: LD_INT 1
11829: PUSH
11830: LD_INT 1
11832: NEG
11833: PUSH
11834: EMPTY
11835: LIST
11836: LIST
11837: PUSH
11838: LD_INT 2
11840: PUSH
11841: LD_INT 0
11843: PUSH
11844: EMPTY
11845: LIST
11846: LIST
11847: PUSH
11848: LD_INT 2
11850: PUSH
11851: LD_INT 1
11853: PUSH
11854: EMPTY
11855: LIST
11856: LIST
11857: PUSH
11858: LD_INT 2
11860: PUSH
11861: LD_INT 2
11863: PUSH
11864: EMPTY
11865: LIST
11866: LIST
11867: PUSH
11868: LD_INT 1
11870: PUSH
11871: LD_INT 2
11873: PUSH
11874: EMPTY
11875: LIST
11876: LIST
11877: PUSH
11878: LD_INT 0
11880: PUSH
11881: LD_INT 2
11883: PUSH
11884: EMPTY
11885: LIST
11886: LIST
11887: PUSH
11888: LD_INT 1
11890: NEG
11891: PUSH
11892: LD_INT 1
11894: PUSH
11895: EMPTY
11896: LIST
11897: LIST
11898: PUSH
11899: LD_INT 2
11901: NEG
11902: PUSH
11903: LD_INT 0
11905: PUSH
11906: EMPTY
11907: LIST
11908: LIST
11909: PUSH
11910: LD_INT 2
11912: NEG
11913: PUSH
11914: LD_INT 1
11916: NEG
11917: PUSH
11918: EMPTY
11919: LIST
11920: LIST
11921: PUSH
11922: LD_INT 2
11924: NEG
11925: PUSH
11926: LD_INT 2
11928: NEG
11929: PUSH
11930: EMPTY
11931: LIST
11932: LIST
11933: PUSH
11934: EMPTY
11935: LIST
11936: LIST
11937: LIST
11938: LIST
11939: LIST
11940: LIST
11941: LIST
11942: LIST
11943: LIST
11944: LIST
11945: LIST
11946: LIST
11947: LIST
11948: LIST
11949: LIST
11950: LIST
11951: LIST
11952: LIST
11953: LIST
11954: ST_TO_ADDR
// DepotAr5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
11955: LD_ADDR_VAR 0 22
11959: PUSH
11960: LD_INT 0
11962: PUSH
11963: LD_INT 0
11965: PUSH
11966: EMPTY
11967: LIST
11968: LIST
11969: PUSH
11970: LD_INT 0
11972: PUSH
11973: LD_INT 1
11975: NEG
11976: PUSH
11977: EMPTY
11978: LIST
11979: LIST
11980: PUSH
11981: LD_INT 1
11983: PUSH
11984: LD_INT 0
11986: PUSH
11987: EMPTY
11988: LIST
11989: LIST
11990: PUSH
11991: LD_INT 1
11993: PUSH
11994: LD_INT 1
11996: PUSH
11997: EMPTY
11998: LIST
11999: LIST
12000: PUSH
12001: LD_INT 0
12003: PUSH
12004: LD_INT 1
12006: PUSH
12007: EMPTY
12008: LIST
12009: LIST
12010: PUSH
12011: LD_INT 1
12013: NEG
12014: PUSH
12015: LD_INT 0
12017: PUSH
12018: EMPTY
12019: LIST
12020: LIST
12021: PUSH
12022: LD_INT 1
12024: NEG
12025: PUSH
12026: LD_INT 1
12028: NEG
12029: PUSH
12030: EMPTY
12031: LIST
12032: LIST
12033: PUSH
12034: LD_INT 1
12036: NEG
12037: PUSH
12038: LD_INT 2
12040: NEG
12041: PUSH
12042: EMPTY
12043: LIST
12044: LIST
12045: PUSH
12046: LD_INT 0
12048: PUSH
12049: LD_INT 2
12051: NEG
12052: PUSH
12053: EMPTY
12054: LIST
12055: LIST
12056: PUSH
12057: LD_INT 1
12059: PUSH
12060: LD_INT 1
12062: NEG
12063: PUSH
12064: EMPTY
12065: LIST
12066: LIST
12067: PUSH
12068: LD_INT 2
12070: PUSH
12071: LD_INT 0
12073: PUSH
12074: EMPTY
12075: LIST
12076: LIST
12077: PUSH
12078: LD_INT 2
12080: PUSH
12081: LD_INT 1
12083: PUSH
12084: EMPTY
12085: LIST
12086: LIST
12087: PUSH
12088: LD_INT 2
12090: PUSH
12091: LD_INT 2
12093: PUSH
12094: EMPTY
12095: LIST
12096: LIST
12097: PUSH
12098: LD_INT 1
12100: PUSH
12101: LD_INT 2
12103: PUSH
12104: EMPTY
12105: LIST
12106: LIST
12107: PUSH
12108: LD_INT 0
12110: PUSH
12111: LD_INT 2
12113: PUSH
12114: EMPTY
12115: LIST
12116: LIST
12117: PUSH
12118: LD_INT 1
12120: NEG
12121: PUSH
12122: LD_INT 1
12124: PUSH
12125: EMPTY
12126: LIST
12127: LIST
12128: PUSH
12129: LD_INT 2
12131: NEG
12132: PUSH
12133: LD_INT 0
12135: PUSH
12136: EMPTY
12137: LIST
12138: LIST
12139: PUSH
12140: LD_INT 2
12142: NEG
12143: PUSH
12144: LD_INT 1
12146: NEG
12147: PUSH
12148: EMPTY
12149: LIST
12150: LIST
12151: PUSH
12152: LD_INT 2
12154: NEG
12155: PUSH
12156: LD_INT 2
12158: NEG
12159: PUSH
12160: EMPTY
12161: LIST
12162: LIST
12163: PUSH
12164: EMPTY
12165: LIST
12166: LIST
12167: LIST
12168: LIST
12169: LIST
12170: LIST
12171: LIST
12172: LIST
12173: LIST
12174: LIST
12175: LIST
12176: LIST
12177: LIST
12178: LIST
12179: LIST
12180: LIST
12181: LIST
12182: LIST
12183: LIST
12184: ST_TO_ADDR
// DepotRu0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 2 , - 1 ] ] ;
12185: LD_ADDR_VAR 0 23
12189: PUSH
12190: LD_INT 0
12192: PUSH
12193: LD_INT 0
12195: PUSH
12196: EMPTY
12197: LIST
12198: LIST
12199: PUSH
12200: LD_INT 0
12202: PUSH
12203: LD_INT 1
12205: NEG
12206: PUSH
12207: EMPTY
12208: LIST
12209: LIST
12210: PUSH
12211: LD_INT 1
12213: PUSH
12214: LD_INT 0
12216: PUSH
12217: EMPTY
12218: LIST
12219: LIST
12220: PUSH
12221: LD_INT 1
12223: PUSH
12224: LD_INT 1
12226: PUSH
12227: EMPTY
12228: LIST
12229: LIST
12230: PUSH
12231: LD_INT 0
12233: PUSH
12234: LD_INT 1
12236: PUSH
12237: EMPTY
12238: LIST
12239: LIST
12240: PUSH
12241: LD_INT 1
12243: NEG
12244: PUSH
12245: LD_INT 0
12247: PUSH
12248: EMPTY
12249: LIST
12250: LIST
12251: PUSH
12252: LD_INT 1
12254: NEG
12255: PUSH
12256: LD_INT 1
12258: NEG
12259: PUSH
12260: EMPTY
12261: LIST
12262: LIST
12263: PUSH
12264: LD_INT 1
12266: NEG
12267: PUSH
12268: LD_INT 2
12270: NEG
12271: PUSH
12272: EMPTY
12273: LIST
12274: LIST
12275: PUSH
12276: LD_INT 0
12278: PUSH
12279: LD_INT 2
12281: NEG
12282: PUSH
12283: EMPTY
12284: LIST
12285: LIST
12286: PUSH
12287: LD_INT 1
12289: PUSH
12290: LD_INT 1
12292: NEG
12293: PUSH
12294: EMPTY
12295: LIST
12296: LIST
12297: PUSH
12298: LD_INT 2
12300: PUSH
12301: LD_INT 0
12303: PUSH
12304: EMPTY
12305: LIST
12306: LIST
12307: PUSH
12308: LD_INT 2
12310: PUSH
12311: LD_INT 1
12313: PUSH
12314: EMPTY
12315: LIST
12316: LIST
12317: PUSH
12318: LD_INT 2
12320: PUSH
12321: LD_INT 2
12323: PUSH
12324: EMPTY
12325: LIST
12326: LIST
12327: PUSH
12328: LD_INT 1
12330: PUSH
12331: LD_INT 2
12333: PUSH
12334: EMPTY
12335: LIST
12336: LIST
12337: PUSH
12338: LD_INT 0
12340: PUSH
12341: LD_INT 2
12343: PUSH
12344: EMPTY
12345: LIST
12346: LIST
12347: PUSH
12348: LD_INT 1
12350: NEG
12351: PUSH
12352: LD_INT 1
12354: PUSH
12355: EMPTY
12356: LIST
12357: LIST
12358: PUSH
12359: LD_INT 2
12361: NEG
12362: PUSH
12363: LD_INT 0
12365: PUSH
12366: EMPTY
12367: LIST
12368: LIST
12369: PUSH
12370: LD_INT 2
12372: NEG
12373: PUSH
12374: LD_INT 1
12376: NEG
12377: PUSH
12378: EMPTY
12379: LIST
12380: LIST
12381: PUSH
12382: LD_INT 2
12384: NEG
12385: PUSH
12386: LD_INT 2
12388: NEG
12389: PUSH
12390: EMPTY
12391: LIST
12392: LIST
12393: PUSH
12394: LD_INT 2
12396: NEG
12397: PUSH
12398: LD_INT 3
12400: NEG
12401: PUSH
12402: EMPTY
12403: LIST
12404: LIST
12405: PUSH
12406: LD_INT 1
12408: NEG
12409: PUSH
12410: LD_INT 3
12412: NEG
12413: PUSH
12414: EMPTY
12415: LIST
12416: LIST
12417: PUSH
12418: LD_INT 1
12420: PUSH
12421: LD_INT 2
12423: NEG
12424: PUSH
12425: EMPTY
12426: LIST
12427: LIST
12428: PUSH
12429: LD_INT 2
12431: PUSH
12432: LD_INT 1
12434: NEG
12435: PUSH
12436: EMPTY
12437: LIST
12438: LIST
12439: PUSH
12440: EMPTY
12441: LIST
12442: LIST
12443: LIST
12444: LIST
12445: LIST
12446: LIST
12447: LIST
12448: LIST
12449: LIST
12450: LIST
12451: LIST
12452: LIST
12453: LIST
12454: LIST
12455: LIST
12456: LIST
12457: LIST
12458: LIST
12459: LIST
12460: LIST
12461: LIST
12462: LIST
12463: LIST
12464: ST_TO_ADDR
// DepotRu1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 1 , - 2 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 3 , 2 ] ] ;
12465: LD_ADDR_VAR 0 24
12469: PUSH
12470: LD_INT 0
12472: PUSH
12473: LD_INT 0
12475: PUSH
12476: EMPTY
12477: LIST
12478: LIST
12479: PUSH
12480: LD_INT 0
12482: PUSH
12483: LD_INT 1
12485: NEG
12486: PUSH
12487: EMPTY
12488: LIST
12489: LIST
12490: PUSH
12491: LD_INT 1
12493: PUSH
12494: LD_INT 0
12496: PUSH
12497: EMPTY
12498: LIST
12499: LIST
12500: PUSH
12501: LD_INT 1
12503: PUSH
12504: LD_INT 1
12506: PUSH
12507: EMPTY
12508: LIST
12509: LIST
12510: PUSH
12511: LD_INT 0
12513: PUSH
12514: LD_INT 1
12516: PUSH
12517: EMPTY
12518: LIST
12519: LIST
12520: PUSH
12521: LD_INT 1
12523: NEG
12524: PUSH
12525: LD_INT 0
12527: PUSH
12528: EMPTY
12529: LIST
12530: LIST
12531: PUSH
12532: LD_INT 1
12534: NEG
12535: PUSH
12536: LD_INT 1
12538: NEG
12539: PUSH
12540: EMPTY
12541: LIST
12542: LIST
12543: PUSH
12544: LD_INT 1
12546: NEG
12547: PUSH
12548: LD_INT 2
12550: NEG
12551: PUSH
12552: EMPTY
12553: LIST
12554: LIST
12555: PUSH
12556: LD_INT 0
12558: PUSH
12559: LD_INT 2
12561: NEG
12562: PUSH
12563: EMPTY
12564: LIST
12565: LIST
12566: PUSH
12567: LD_INT 1
12569: PUSH
12570: LD_INT 1
12572: NEG
12573: PUSH
12574: EMPTY
12575: LIST
12576: LIST
12577: PUSH
12578: LD_INT 2
12580: PUSH
12581: LD_INT 0
12583: PUSH
12584: EMPTY
12585: LIST
12586: LIST
12587: PUSH
12588: LD_INT 2
12590: PUSH
12591: LD_INT 1
12593: PUSH
12594: EMPTY
12595: LIST
12596: LIST
12597: PUSH
12598: LD_INT 2
12600: PUSH
12601: LD_INT 2
12603: PUSH
12604: EMPTY
12605: LIST
12606: LIST
12607: PUSH
12608: LD_INT 1
12610: PUSH
12611: LD_INT 2
12613: PUSH
12614: EMPTY
12615: LIST
12616: LIST
12617: PUSH
12618: LD_INT 0
12620: PUSH
12621: LD_INT 2
12623: PUSH
12624: EMPTY
12625: LIST
12626: LIST
12627: PUSH
12628: LD_INT 1
12630: NEG
12631: PUSH
12632: LD_INT 1
12634: PUSH
12635: EMPTY
12636: LIST
12637: LIST
12638: PUSH
12639: LD_INT 2
12641: NEG
12642: PUSH
12643: LD_INT 0
12645: PUSH
12646: EMPTY
12647: LIST
12648: LIST
12649: PUSH
12650: LD_INT 2
12652: NEG
12653: PUSH
12654: LD_INT 1
12656: NEG
12657: PUSH
12658: EMPTY
12659: LIST
12660: LIST
12661: PUSH
12662: LD_INT 2
12664: NEG
12665: PUSH
12666: LD_INT 2
12668: NEG
12669: PUSH
12670: EMPTY
12671: LIST
12672: LIST
12673: PUSH
12674: LD_INT 1
12676: PUSH
12677: LD_INT 2
12679: NEG
12680: PUSH
12681: EMPTY
12682: LIST
12683: LIST
12684: PUSH
12685: LD_INT 2
12687: PUSH
12688: LD_INT 1
12690: NEG
12691: PUSH
12692: EMPTY
12693: LIST
12694: LIST
12695: PUSH
12696: LD_INT 3
12698: PUSH
12699: LD_INT 1
12701: PUSH
12702: EMPTY
12703: LIST
12704: LIST
12705: PUSH
12706: LD_INT 3
12708: PUSH
12709: LD_INT 2
12711: PUSH
12712: EMPTY
12713: LIST
12714: LIST
12715: PUSH
12716: EMPTY
12717: LIST
12718: LIST
12719: LIST
12720: LIST
12721: LIST
12722: LIST
12723: LIST
12724: LIST
12725: LIST
12726: LIST
12727: LIST
12728: LIST
12729: LIST
12730: LIST
12731: LIST
12732: LIST
12733: LIST
12734: LIST
12735: LIST
12736: LIST
12737: LIST
12738: LIST
12739: LIST
12740: ST_TO_ADDR
// DepotRu2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 3 , 1 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ 1 , 3 ] ] ;
12741: LD_ADDR_VAR 0 25
12745: PUSH
12746: LD_INT 0
12748: PUSH
12749: LD_INT 0
12751: PUSH
12752: EMPTY
12753: LIST
12754: LIST
12755: PUSH
12756: LD_INT 0
12758: PUSH
12759: LD_INT 1
12761: NEG
12762: PUSH
12763: EMPTY
12764: LIST
12765: LIST
12766: PUSH
12767: LD_INT 1
12769: PUSH
12770: LD_INT 0
12772: PUSH
12773: EMPTY
12774: LIST
12775: LIST
12776: PUSH
12777: LD_INT 1
12779: PUSH
12780: LD_INT 1
12782: PUSH
12783: EMPTY
12784: LIST
12785: LIST
12786: PUSH
12787: LD_INT 0
12789: PUSH
12790: LD_INT 1
12792: PUSH
12793: EMPTY
12794: LIST
12795: LIST
12796: PUSH
12797: LD_INT 1
12799: NEG
12800: PUSH
12801: LD_INT 0
12803: PUSH
12804: EMPTY
12805: LIST
12806: LIST
12807: PUSH
12808: LD_INT 1
12810: NEG
12811: PUSH
12812: LD_INT 1
12814: NEG
12815: PUSH
12816: EMPTY
12817: LIST
12818: LIST
12819: PUSH
12820: LD_INT 1
12822: NEG
12823: PUSH
12824: LD_INT 2
12826: NEG
12827: PUSH
12828: EMPTY
12829: LIST
12830: LIST
12831: PUSH
12832: LD_INT 0
12834: PUSH
12835: LD_INT 2
12837: NEG
12838: PUSH
12839: EMPTY
12840: LIST
12841: LIST
12842: PUSH
12843: LD_INT 1
12845: PUSH
12846: LD_INT 1
12848: NEG
12849: PUSH
12850: EMPTY
12851: LIST
12852: LIST
12853: PUSH
12854: LD_INT 2
12856: PUSH
12857: LD_INT 0
12859: PUSH
12860: EMPTY
12861: LIST
12862: LIST
12863: PUSH
12864: LD_INT 2
12866: PUSH
12867: LD_INT 1
12869: PUSH
12870: EMPTY
12871: LIST
12872: LIST
12873: PUSH
12874: LD_INT 2
12876: PUSH
12877: LD_INT 2
12879: PUSH
12880: EMPTY
12881: LIST
12882: LIST
12883: PUSH
12884: LD_INT 1
12886: PUSH
12887: LD_INT 2
12889: PUSH
12890: EMPTY
12891: LIST
12892: LIST
12893: PUSH
12894: LD_INT 0
12896: PUSH
12897: LD_INT 2
12899: PUSH
12900: EMPTY
12901: LIST
12902: LIST
12903: PUSH
12904: LD_INT 1
12906: NEG
12907: PUSH
12908: LD_INT 1
12910: PUSH
12911: EMPTY
12912: LIST
12913: LIST
12914: PUSH
12915: LD_INT 2
12917: NEG
12918: PUSH
12919: LD_INT 0
12921: PUSH
12922: EMPTY
12923: LIST
12924: LIST
12925: PUSH
12926: LD_INT 2
12928: NEG
12929: PUSH
12930: LD_INT 1
12932: NEG
12933: PUSH
12934: EMPTY
12935: LIST
12936: LIST
12937: PUSH
12938: LD_INT 2
12940: NEG
12941: PUSH
12942: LD_INT 2
12944: NEG
12945: PUSH
12946: EMPTY
12947: LIST
12948: LIST
12949: PUSH
12950: LD_INT 3
12952: PUSH
12953: LD_INT 1
12955: PUSH
12956: EMPTY
12957: LIST
12958: LIST
12959: PUSH
12960: LD_INT 3
12962: PUSH
12963: LD_INT 2
12965: PUSH
12966: EMPTY
12967: LIST
12968: LIST
12969: PUSH
12970: LD_INT 2
12972: PUSH
12973: LD_INT 3
12975: PUSH
12976: EMPTY
12977: LIST
12978: LIST
12979: PUSH
12980: LD_INT 1
12982: PUSH
12983: LD_INT 3
12985: PUSH
12986: EMPTY
12987: LIST
12988: LIST
12989: PUSH
12990: EMPTY
12991: LIST
12992: LIST
12993: LIST
12994: LIST
12995: LIST
12996: LIST
12997: LIST
12998: LIST
12999: LIST
13000: LIST
13001: LIST
13002: LIST
13003: LIST
13004: LIST
13005: LIST
13006: LIST
13007: LIST
13008: LIST
13009: LIST
13010: LIST
13011: LIST
13012: LIST
13013: LIST
13014: ST_TO_ADDR
// DepotRu3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 2 , 3 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 2 , 1 ] ] ;
13015: LD_ADDR_VAR 0 26
13019: PUSH
13020: LD_INT 0
13022: PUSH
13023: LD_INT 0
13025: PUSH
13026: EMPTY
13027: LIST
13028: LIST
13029: PUSH
13030: LD_INT 0
13032: PUSH
13033: LD_INT 1
13035: NEG
13036: PUSH
13037: EMPTY
13038: LIST
13039: LIST
13040: PUSH
13041: LD_INT 1
13043: PUSH
13044: LD_INT 0
13046: PUSH
13047: EMPTY
13048: LIST
13049: LIST
13050: PUSH
13051: LD_INT 1
13053: PUSH
13054: LD_INT 1
13056: PUSH
13057: EMPTY
13058: LIST
13059: LIST
13060: PUSH
13061: LD_INT 0
13063: PUSH
13064: LD_INT 1
13066: PUSH
13067: EMPTY
13068: LIST
13069: LIST
13070: PUSH
13071: LD_INT 1
13073: NEG
13074: PUSH
13075: LD_INT 0
13077: PUSH
13078: EMPTY
13079: LIST
13080: LIST
13081: PUSH
13082: LD_INT 1
13084: NEG
13085: PUSH
13086: LD_INT 1
13088: NEG
13089: PUSH
13090: EMPTY
13091: LIST
13092: LIST
13093: PUSH
13094: LD_INT 1
13096: NEG
13097: PUSH
13098: LD_INT 2
13100: NEG
13101: PUSH
13102: EMPTY
13103: LIST
13104: LIST
13105: PUSH
13106: LD_INT 0
13108: PUSH
13109: LD_INT 2
13111: NEG
13112: PUSH
13113: EMPTY
13114: LIST
13115: LIST
13116: PUSH
13117: LD_INT 1
13119: PUSH
13120: LD_INT 1
13122: NEG
13123: PUSH
13124: EMPTY
13125: LIST
13126: LIST
13127: PUSH
13128: LD_INT 2
13130: PUSH
13131: LD_INT 0
13133: PUSH
13134: EMPTY
13135: LIST
13136: LIST
13137: PUSH
13138: LD_INT 2
13140: PUSH
13141: LD_INT 1
13143: PUSH
13144: EMPTY
13145: LIST
13146: LIST
13147: PUSH
13148: LD_INT 2
13150: PUSH
13151: LD_INT 2
13153: PUSH
13154: EMPTY
13155: LIST
13156: LIST
13157: PUSH
13158: LD_INT 1
13160: PUSH
13161: LD_INT 2
13163: PUSH
13164: EMPTY
13165: LIST
13166: LIST
13167: PUSH
13168: LD_INT 0
13170: PUSH
13171: LD_INT 2
13173: PUSH
13174: EMPTY
13175: LIST
13176: LIST
13177: PUSH
13178: LD_INT 1
13180: NEG
13181: PUSH
13182: LD_INT 1
13184: PUSH
13185: EMPTY
13186: LIST
13187: LIST
13188: PUSH
13189: LD_INT 2
13191: NEG
13192: PUSH
13193: LD_INT 0
13195: PUSH
13196: EMPTY
13197: LIST
13198: LIST
13199: PUSH
13200: LD_INT 2
13202: NEG
13203: PUSH
13204: LD_INT 1
13206: NEG
13207: PUSH
13208: EMPTY
13209: LIST
13210: LIST
13211: PUSH
13212: LD_INT 2
13214: NEG
13215: PUSH
13216: LD_INT 2
13218: NEG
13219: PUSH
13220: EMPTY
13221: LIST
13222: LIST
13223: PUSH
13224: LD_INT 2
13226: PUSH
13227: LD_INT 3
13229: PUSH
13230: EMPTY
13231: LIST
13232: LIST
13233: PUSH
13234: LD_INT 1
13236: PUSH
13237: LD_INT 3
13239: PUSH
13240: EMPTY
13241: LIST
13242: LIST
13243: PUSH
13244: LD_INT 1
13246: NEG
13247: PUSH
13248: LD_INT 2
13250: PUSH
13251: EMPTY
13252: LIST
13253: LIST
13254: PUSH
13255: LD_INT 2
13257: NEG
13258: PUSH
13259: LD_INT 1
13261: PUSH
13262: EMPTY
13263: LIST
13264: LIST
13265: PUSH
13266: EMPTY
13267: LIST
13268: LIST
13269: LIST
13270: LIST
13271: LIST
13272: LIST
13273: LIST
13274: LIST
13275: LIST
13276: LIST
13277: LIST
13278: LIST
13279: LIST
13280: LIST
13281: LIST
13282: LIST
13283: LIST
13284: LIST
13285: LIST
13286: LIST
13287: LIST
13288: LIST
13289: LIST
13290: ST_TO_ADDR
// DepotRu4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 1 , 2 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] ] ;
13291: LD_ADDR_VAR 0 27
13295: PUSH
13296: LD_INT 0
13298: PUSH
13299: LD_INT 0
13301: PUSH
13302: EMPTY
13303: LIST
13304: LIST
13305: PUSH
13306: LD_INT 0
13308: PUSH
13309: LD_INT 1
13311: NEG
13312: PUSH
13313: EMPTY
13314: LIST
13315: LIST
13316: PUSH
13317: LD_INT 1
13319: PUSH
13320: LD_INT 0
13322: PUSH
13323: EMPTY
13324: LIST
13325: LIST
13326: PUSH
13327: LD_INT 1
13329: PUSH
13330: LD_INT 1
13332: PUSH
13333: EMPTY
13334: LIST
13335: LIST
13336: PUSH
13337: LD_INT 0
13339: PUSH
13340: LD_INT 1
13342: PUSH
13343: EMPTY
13344: LIST
13345: LIST
13346: PUSH
13347: LD_INT 1
13349: NEG
13350: PUSH
13351: LD_INT 0
13353: PUSH
13354: EMPTY
13355: LIST
13356: LIST
13357: PUSH
13358: LD_INT 1
13360: NEG
13361: PUSH
13362: LD_INT 1
13364: NEG
13365: PUSH
13366: EMPTY
13367: LIST
13368: LIST
13369: PUSH
13370: LD_INT 1
13372: NEG
13373: PUSH
13374: LD_INT 2
13376: NEG
13377: PUSH
13378: EMPTY
13379: LIST
13380: LIST
13381: PUSH
13382: LD_INT 0
13384: PUSH
13385: LD_INT 2
13387: NEG
13388: PUSH
13389: EMPTY
13390: LIST
13391: LIST
13392: PUSH
13393: LD_INT 1
13395: PUSH
13396: LD_INT 1
13398: NEG
13399: PUSH
13400: EMPTY
13401: LIST
13402: LIST
13403: PUSH
13404: LD_INT 2
13406: PUSH
13407: LD_INT 0
13409: PUSH
13410: EMPTY
13411: LIST
13412: LIST
13413: PUSH
13414: LD_INT 2
13416: PUSH
13417: LD_INT 1
13419: PUSH
13420: EMPTY
13421: LIST
13422: LIST
13423: PUSH
13424: LD_INT 2
13426: PUSH
13427: LD_INT 2
13429: PUSH
13430: EMPTY
13431: LIST
13432: LIST
13433: PUSH
13434: LD_INT 1
13436: PUSH
13437: LD_INT 2
13439: PUSH
13440: EMPTY
13441: LIST
13442: LIST
13443: PUSH
13444: LD_INT 0
13446: PUSH
13447: LD_INT 2
13449: PUSH
13450: EMPTY
13451: LIST
13452: LIST
13453: PUSH
13454: LD_INT 1
13456: NEG
13457: PUSH
13458: LD_INT 1
13460: PUSH
13461: EMPTY
13462: LIST
13463: LIST
13464: PUSH
13465: LD_INT 2
13467: NEG
13468: PUSH
13469: LD_INT 0
13471: PUSH
13472: EMPTY
13473: LIST
13474: LIST
13475: PUSH
13476: LD_INT 2
13478: NEG
13479: PUSH
13480: LD_INT 1
13482: NEG
13483: PUSH
13484: EMPTY
13485: LIST
13486: LIST
13487: PUSH
13488: LD_INT 2
13490: NEG
13491: PUSH
13492: LD_INT 2
13494: NEG
13495: PUSH
13496: EMPTY
13497: LIST
13498: LIST
13499: PUSH
13500: LD_INT 1
13502: NEG
13503: PUSH
13504: LD_INT 2
13506: PUSH
13507: EMPTY
13508: LIST
13509: LIST
13510: PUSH
13511: LD_INT 2
13513: NEG
13514: PUSH
13515: LD_INT 1
13517: PUSH
13518: EMPTY
13519: LIST
13520: LIST
13521: PUSH
13522: LD_INT 3
13524: NEG
13525: PUSH
13526: LD_INT 1
13528: NEG
13529: PUSH
13530: EMPTY
13531: LIST
13532: LIST
13533: PUSH
13534: LD_INT 3
13536: NEG
13537: PUSH
13538: LD_INT 2
13540: NEG
13541: PUSH
13542: EMPTY
13543: LIST
13544: LIST
13545: PUSH
13546: EMPTY
13547: LIST
13548: LIST
13549: LIST
13550: LIST
13551: LIST
13552: LIST
13553: LIST
13554: LIST
13555: LIST
13556: LIST
13557: LIST
13558: LIST
13559: LIST
13560: LIST
13561: LIST
13562: LIST
13563: LIST
13564: LIST
13565: LIST
13566: LIST
13567: LIST
13568: LIST
13569: LIST
13570: ST_TO_ADDR
// DepotRu5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] ] ;
13571: LD_ADDR_VAR 0 28
13575: PUSH
13576: LD_INT 0
13578: PUSH
13579: LD_INT 0
13581: PUSH
13582: EMPTY
13583: LIST
13584: LIST
13585: PUSH
13586: LD_INT 0
13588: PUSH
13589: LD_INT 1
13591: NEG
13592: PUSH
13593: EMPTY
13594: LIST
13595: LIST
13596: PUSH
13597: LD_INT 1
13599: PUSH
13600: LD_INT 0
13602: PUSH
13603: EMPTY
13604: LIST
13605: LIST
13606: PUSH
13607: LD_INT 1
13609: PUSH
13610: LD_INT 1
13612: PUSH
13613: EMPTY
13614: LIST
13615: LIST
13616: PUSH
13617: LD_INT 0
13619: PUSH
13620: LD_INT 1
13622: PUSH
13623: EMPTY
13624: LIST
13625: LIST
13626: PUSH
13627: LD_INT 1
13629: NEG
13630: PUSH
13631: LD_INT 0
13633: PUSH
13634: EMPTY
13635: LIST
13636: LIST
13637: PUSH
13638: LD_INT 1
13640: NEG
13641: PUSH
13642: LD_INT 1
13644: NEG
13645: PUSH
13646: EMPTY
13647: LIST
13648: LIST
13649: PUSH
13650: LD_INT 1
13652: NEG
13653: PUSH
13654: LD_INT 2
13656: NEG
13657: PUSH
13658: EMPTY
13659: LIST
13660: LIST
13661: PUSH
13662: LD_INT 0
13664: PUSH
13665: LD_INT 2
13667: NEG
13668: PUSH
13669: EMPTY
13670: LIST
13671: LIST
13672: PUSH
13673: LD_INT 1
13675: PUSH
13676: LD_INT 1
13678: NEG
13679: PUSH
13680: EMPTY
13681: LIST
13682: LIST
13683: PUSH
13684: LD_INT 2
13686: PUSH
13687: LD_INT 0
13689: PUSH
13690: EMPTY
13691: LIST
13692: LIST
13693: PUSH
13694: LD_INT 2
13696: PUSH
13697: LD_INT 1
13699: PUSH
13700: EMPTY
13701: LIST
13702: LIST
13703: PUSH
13704: LD_INT 2
13706: PUSH
13707: LD_INT 2
13709: PUSH
13710: EMPTY
13711: LIST
13712: LIST
13713: PUSH
13714: LD_INT 1
13716: PUSH
13717: LD_INT 2
13719: PUSH
13720: EMPTY
13721: LIST
13722: LIST
13723: PUSH
13724: LD_INT 0
13726: PUSH
13727: LD_INT 2
13729: PUSH
13730: EMPTY
13731: LIST
13732: LIST
13733: PUSH
13734: LD_INT 1
13736: NEG
13737: PUSH
13738: LD_INT 1
13740: PUSH
13741: EMPTY
13742: LIST
13743: LIST
13744: PUSH
13745: LD_INT 2
13747: NEG
13748: PUSH
13749: LD_INT 0
13751: PUSH
13752: EMPTY
13753: LIST
13754: LIST
13755: PUSH
13756: LD_INT 2
13758: NEG
13759: PUSH
13760: LD_INT 1
13762: NEG
13763: PUSH
13764: EMPTY
13765: LIST
13766: LIST
13767: PUSH
13768: LD_INT 2
13770: NEG
13771: PUSH
13772: LD_INT 2
13774: NEG
13775: PUSH
13776: EMPTY
13777: LIST
13778: LIST
13779: PUSH
13780: LD_INT 2
13782: NEG
13783: PUSH
13784: LD_INT 3
13786: NEG
13787: PUSH
13788: EMPTY
13789: LIST
13790: LIST
13791: PUSH
13792: LD_INT 1
13794: NEG
13795: PUSH
13796: LD_INT 3
13798: NEG
13799: PUSH
13800: EMPTY
13801: LIST
13802: LIST
13803: PUSH
13804: LD_INT 3
13806: NEG
13807: PUSH
13808: LD_INT 1
13810: NEG
13811: PUSH
13812: EMPTY
13813: LIST
13814: LIST
13815: PUSH
13816: LD_INT 3
13818: NEG
13819: PUSH
13820: LD_INT 2
13822: NEG
13823: PUSH
13824: EMPTY
13825: LIST
13826: LIST
13827: PUSH
13828: EMPTY
13829: LIST
13830: LIST
13831: LIST
13832: LIST
13833: LIST
13834: LIST
13835: LIST
13836: LIST
13837: LIST
13838: LIST
13839: LIST
13840: LIST
13841: LIST
13842: LIST
13843: LIST
13844: LIST
13845: LIST
13846: LIST
13847: LIST
13848: LIST
13849: LIST
13850: LIST
13851: LIST
13852: ST_TO_ADDR
// Factory0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] ] ;
13853: LD_ADDR_VAR 0 29
13857: PUSH
13858: LD_INT 0
13860: PUSH
13861: LD_INT 0
13863: PUSH
13864: EMPTY
13865: LIST
13866: LIST
13867: PUSH
13868: LD_INT 0
13870: PUSH
13871: LD_INT 1
13873: NEG
13874: PUSH
13875: EMPTY
13876: LIST
13877: LIST
13878: PUSH
13879: LD_INT 1
13881: PUSH
13882: LD_INT 0
13884: PUSH
13885: EMPTY
13886: LIST
13887: LIST
13888: PUSH
13889: LD_INT 1
13891: PUSH
13892: LD_INT 1
13894: PUSH
13895: EMPTY
13896: LIST
13897: LIST
13898: PUSH
13899: LD_INT 0
13901: PUSH
13902: LD_INT 1
13904: PUSH
13905: EMPTY
13906: LIST
13907: LIST
13908: PUSH
13909: LD_INT 1
13911: NEG
13912: PUSH
13913: LD_INT 0
13915: PUSH
13916: EMPTY
13917: LIST
13918: LIST
13919: PUSH
13920: LD_INT 1
13922: NEG
13923: PUSH
13924: LD_INT 1
13926: NEG
13927: PUSH
13928: EMPTY
13929: LIST
13930: LIST
13931: PUSH
13932: LD_INT 1
13934: NEG
13935: PUSH
13936: LD_INT 2
13938: NEG
13939: PUSH
13940: EMPTY
13941: LIST
13942: LIST
13943: PUSH
13944: LD_INT 0
13946: PUSH
13947: LD_INT 2
13949: NEG
13950: PUSH
13951: EMPTY
13952: LIST
13953: LIST
13954: PUSH
13955: LD_INT 1
13957: PUSH
13958: LD_INT 1
13960: NEG
13961: PUSH
13962: EMPTY
13963: LIST
13964: LIST
13965: PUSH
13966: LD_INT 2
13968: PUSH
13969: LD_INT 0
13971: PUSH
13972: EMPTY
13973: LIST
13974: LIST
13975: PUSH
13976: LD_INT 2
13978: PUSH
13979: LD_INT 1
13981: PUSH
13982: EMPTY
13983: LIST
13984: LIST
13985: PUSH
13986: LD_INT 1
13988: PUSH
13989: LD_INT 2
13991: PUSH
13992: EMPTY
13993: LIST
13994: LIST
13995: PUSH
13996: LD_INT 0
13998: PUSH
13999: LD_INT 2
14001: PUSH
14002: EMPTY
14003: LIST
14004: LIST
14005: PUSH
14006: LD_INT 1
14008: NEG
14009: PUSH
14010: LD_INT 1
14012: PUSH
14013: EMPTY
14014: LIST
14015: LIST
14016: PUSH
14017: LD_INT 2
14019: NEG
14020: PUSH
14021: LD_INT 1
14023: NEG
14024: PUSH
14025: EMPTY
14026: LIST
14027: LIST
14028: PUSH
14029: LD_INT 2
14031: NEG
14032: PUSH
14033: LD_INT 2
14035: NEG
14036: PUSH
14037: EMPTY
14038: LIST
14039: LIST
14040: PUSH
14041: LD_INT 2
14043: NEG
14044: PUSH
14045: LD_INT 3
14047: NEG
14048: PUSH
14049: EMPTY
14050: LIST
14051: LIST
14052: PUSH
14053: LD_INT 2
14055: PUSH
14056: LD_INT 1
14058: NEG
14059: PUSH
14060: EMPTY
14061: LIST
14062: LIST
14063: PUSH
14064: LD_INT 3
14066: PUSH
14067: LD_INT 1
14069: PUSH
14070: EMPTY
14071: LIST
14072: LIST
14073: PUSH
14074: LD_INT 1
14076: PUSH
14077: LD_INT 3
14079: PUSH
14080: EMPTY
14081: LIST
14082: LIST
14083: PUSH
14084: LD_INT 1
14086: NEG
14087: PUSH
14088: LD_INT 2
14090: PUSH
14091: EMPTY
14092: LIST
14093: LIST
14094: PUSH
14095: LD_INT 3
14097: NEG
14098: PUSH
14099: LD_INT 2
14101: NEG
14102: PUSH
14103: EMPTY
14104: LIST
14105: LIST
14106: PUSH
14107: EMPTY
14108: LIST
14109: LIST
14110: LIST
14111: LIST
14112: LIST
14113: LIST
14114: LIST
14115: LIST
14116: LIST
14117: LIST
14118: LIST
14119: LIST
14120: LIST
14121: LIST
14122: LIST
14123: LIST
14124: LIST
14125: LIST
14126: LIST
14127: LIST
14128: LIST
14129: LIST
14130: LIST
14131: ST_TO_ADDR
// Factory1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
14132: LD_ADDR_VAR 0 30
14136: PUSH
14137: LD_INT 0
14139: PUSH
14140: LD_INT 0
14142: PUSH
14143: EMPTY
14144: LIST
14145: LIST
14146: PUSH
14147: LD_INT 0
14149: PUSH
14150: LD_INT 1
14152: NEG
14153: PUSH
14154: EMPTY
14155: LIST
14156: LIST
14157: PUSH
14158: LD_INT 1
14160: PUSH
14161: LD_INT 0
14163: PUSH
14164: EMPTY
14165: LIST
14166: LIST
14167: PUSH
14168: LD_INT 1
14170: PUSH
14171: LD_INT 1
14173: PUSH
14174: EMPTY
14175: LIST
14176: LIST
14177: PUSH
14178: LD_INT 0
14180: PUSH
14181: LD_INT 1
14183: PUSH
14184: EMPTY
14185: LIST
14186: LIST
14187: PUSH
14188: LD_INT 1
14190: NEG
14191: PUSH
14192: LD_INT 0
14194: PUSH
14195: EMPTY
14196: LIST
14197: LIST
14198: PUSH
14199: LD_INT 1
14201: NEG
14202: PUSH
14203: LD_INT 1
14205: NEG
14206: PUSH
14207: EMPTY
14208: LIST
14209: LIST
14210: PUSH
14211: LD_INT 1
14213: NEG
14214: PUSH
14215: LD_INT 2
14217: NEG
14218: PUSH
14219: EMPTY
14220: LIST
14221: LIST
14222: PUSH
14223: LD_INT 0
14225: PUSH
14226: LD_INT 2
14228: NEG
14229: PUSH
14230: EMPTY
14231: LIST
14232: LIST
14233: PUSH
14234: LD_INT 1
14236: PUSH
14237: LD_INT 1
14239: NEG
14240: PUSH
14241: EMPTY
14242: LIST
14243: LIST
14244: PUSH
14245: LD_INT 2
14247: PUSH
14248: LD_INT 0
14250: PUSH
14251: EMPTY
14252: LIST
14253: LIST
14254: PUSH
14255: LD_INT 2
14257: PUSH
14258: LD_INT 1
14260: PUSH
14261: EMPTY
14262: LIST
14263: LIST
14264: PUSH
14265: LD_INT 2
14267: PUSH
14268: LD_INT 2
14270: PUSH
14271: EMPTY
14272: LIST
14273: LIST
14274: PUSH
14275: LD_INT 1
14277: PUSH
14278: LD_INT 2
14280: PUSH
14281: EMPTY
14282: LIST
14283: LIST
14284: PUSH
14285: LD_INT 1
14287: NEG
14288: PUSH
14289: LD_INT 1
14291: PUSH
14292: EMPTY
14293: LIST
14294: LIST
14295: PUSH
14296: LD_INT 2
14298: NEG
14299: PUSH
14300: LD_INT 0
14302: PUSH
14303: EMPTY
14304: LIST
14305: LIST
14306: PUSH
14307: LD_INT 2
14309: NEG
14310: PUSH
14311: LD_INT 1
14313: NEG
14314: PUSH
14315: EMPTY
14316: LIST
14317: LIST
14318: PUSH
14319: LD_INT 1
14321: NEG
14322: PUSH
14323: LD_INT 3
14325: NEG
14326: PUSH
14327: EMPTY
14328: LIST
14329: LIST
14330: PUSH
14331: LD_INT 1
14333: PUSH
14334: LD_INT 2
14336: NEG
14337: PUSH
14338: EMPTY
14339: LIST
14340: LIST
14341: PUSH
14342: LD_INT 3
14344: PUSH
14345: LD_INT 2
14347: PUSH
14348: EMPTY
14349: LIST
14350: LIST
14351: PUSH
14352: LD_INT 2
14354: PUSH
14355: LD_INT 3
14357: PUSH
14358: EMPTY
14359: LIST
14360: LIST
14361: PUSH
14362: LD_INT 2
14364: NEG
14365: PUSH
14366: LD_INT 1
14368: PUSH
14369: EMPTY
14370: LIST
14371: LIST
14372: PUSH
14373: LD_INT 3
14375: NEG
14376: PUSH
14377: LD_INT 1
14379: NEG
14380: PUSH
14381: EMPTY
14382: LIST
14383: LIST
14384: PUSH
14385: EMPTY
14386: LIST
14387: LIST
14388: LIST
14389: LIST
14390: LIST
14391: LIST
14392: LIST
14393: LIST
14394: LIST
14395: LIST
14396: LIST
14397: LIST
14398: LIST
14399: LIST
14400: LIST
14401: LIST
14402: LIST
14403: LIST
14404: LIST
14405: LIST
14406: LIST
14407: LIST
14408: LIST
14409: ST_TO_ADDR
// Factory2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] ] ;
14410: LD_ADDR_VAR 0 31
14414: PUSH
14415: LD_INT 0
14417: PUSH
14418: LD_INT 0
14420: PUSH
14421: EMPTY
14422: LIST
14423: LIST
14424: PUSH
14425: LD_INT 0
14427: PUSH
14428: LD_INT 1
14430: NEG
14431: PUSH
14432: EMPTY
14433: LIST
14434: LIST
14435: PUSH
14436: LD_INT 1
14438: PUSH
14439: LD_INT 0
14441: PUSH
14442: EMPTY
14443: LIST
14444: LIST
14445: PUSH
14446: LD_INT 1
14448: PUSH
14449: LD_INT 1
14451: PUSH
14452: EMPTY
14453: LIST
14454: LIST
14455: PUSH
14456: LD_INT 0
14458: PUSH
14459: LD_INT 1
14461: PUSH
14462: EMPTY
14463: LIST
14464: LIST
14465: PUSH
14466: LD_INT 1
14468: NEG
14469: PUSH
14470: LD_INT 0
14472: PUSH
14473: EMPTY
14474: LIST
14475: LIST
14476: PUSH
14477: LD_INT 1
14479: NEG
14480: PUSH
14481: LD_INT 1
14483: NEG
14484: PUSH
14485: EMPTY
14486: LIST
14487: LIST
14488: PUSH
14489: LD_INT 1
14491: NEG
14492: PUSH
14493: LD_INT 2
14495: NEG
14496: PUSH
14497: EMPTY
14498: LIST
14499: LIST
14500: PUSH
14501: LD_INT 1
14503: PUSH
14504: LD_INT 1
14506: NEG
14507: PUSH
14508: EMPTY
14509: LIST
14510: LIST
14511: PUSH
14512: LD_INT 2
14514: PUSH
14515: LD_INT 0
14517: PUSH
14518: EMPTY
14519: LIST
14520: LIST
14521: PUSH
14522: LD_INT 2
14524: PUSH
14525: LD_INT 1
14527: PUSH
14528: EMPTY
14529: LIST
14530: LIST
14531: PUSH
14532: LD_INT 2
14534: PUSH
14535: LD_INT 2
14537: PUSH
14538: EMPTY
14539: LIST
14540: LIST
14541: PUSH
14542: LD_INT 1
14544: PUSH
14545: LD_INT 2
14547: PUSH
14548: EMPTY
14549: LIST
14550: LIST
14551: PUSH
14552: LD_INT 0
14554: PUSH
14555: LD_INT 2
14557: PUSH
14558: EMPTY
14559: LIST
14560: LIST
14561: PUSH
14562: LD_INT 1
14564: NEG
14565: PUSH
14566: LD_INT 1
14568: PUSH
14569: EMPTY
14570: LIST
14571: LIST
14572: PUSH
14573: LD_INT 2
14575: NEG
14576: PUSH
14577: LD_INT 1
14579: NEG
14580: PUSH
14581: EMPTY
14582: LIST
14583: LIST
14584: PUSH
14585: LD_INT 2
14587: NEG
14588: PUSH
14589: LD_INT 2
14591: NEG
14592: PUSH
14593: EMPTY
14594: LIST
14595: LIST
14596: PUSH
14597: LD_INT 2
14599: NEG
14600: PUSH
14601: LD_INT 3
14603: NEG
14604: PUSH
14605: EMPTY
14606: LIST
14607: LIST
14608: PUSH
14609: LD_INT 2
14611: PUSH
14612: LD_INT 1
14614: NEG
14615: PUSH
14616: EMPTY
14617: LIST
14618: LIST
14619: PUSH
14620: LD_INT 3
14622: PUSH
14623: LD_INT 1
14625: PUSH
14626: EMPTY
14627: LIST
14628: LIST
14629: PUSH
14630: LD_INT 1
14632: PUSH
14633: LD_INT 3
14635: PUSH
14636: EMPTY
14637: LIST
14638: LIST
14639: PUSH
14640: LD_INT 1
14642: NEG
14643: PUSH
14644: LD_INT 2
14646: PUSH
14647: EMPTY
14648: LIST
14649: LIST
14650: PUSH
14651: LD_INT 3
14653: NEG
14654: PUSH
14655: LD_INT 2
14657: NEG
14658: PUSH
14659: EMPTY
14660: LIST
14661: LIST
14662: PUSH
14663: EMPTY
14664: LIST
14665: LIST
14666: LIST
14667: LIST
14668: LIST
14669: LIST
14670: LIST
14671: LIST
14672: LIST
14673: LIST
14674: LIST
14675: LIST
14676: LIST
14677: LIST
14678: LIST
14679: LIST
14680: LIST
14681: LIST
14682: LIST
14683: LIST
14684: LIST
14685: LIST
14686: LIST
14687: ST_TO_ADDR
// Factory3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
14688: LD_ADDR_VAR 0 32
14692: PUSH
14693: LD_INT 0
14695: PUSH
14696: LD_INT 0
14698: PUSH
14699: EMPTY
14700: LIST
14701: LIST
14702: PUSH
14703: LD_INT 0
14705: PUSH
14706: LD_INT 1
14708: NEG
14709: PUSH
14710: EMPTY
14711: LIST
14712: LIST
14713: PUSH
14714: LD_INT 1
14716: PUSH
14717: LD_INT 0
14719: PUSH
14720: EMPTY
14721: LIST
14722: LIST
14723: PUSH
14724: LD_INT 1
14726: PUSH
14727: LD_INT 1
14729: PUSH
14730: EMPTY
14731: LIST
14732: LIST
14733: PUSH
14734: LD_INT 0
14736: PUSH
14737: LD_INT 1
14739: PUSH
14740: EMPTY
14741: LIST
14742: LIST
14743: PUSH
14744: LD_INT 1
14746: NEG
14747: PUSH
14748: LD_INT 0
14750: PUSH
14751: EMPTY
14752: LIST
14753: LIST
14754: PUSH
14755: LD_INT 1
14757: NEG
14758: PUSH
14759: LD_INT 1
14761: NEG
14762: PUSH
14763: EMPTY
14764: LIST
14765: LIST
14766: PUSH
14767: LD_INT 1
14769: NEG
14770: PUSH
14771: LD_INT 2
14773: NEG
14774: PUSH
14775: EMPTY
14776: LIST
14777: LIST
14778: PUSH
14779: LD_INT 0
14781: PUSH
14782: LD_INT 2
14784: NEG
14785: PUSH
14786: EMPTY
14787: LIST
14788: LIST
14789: PUSH
14790: LD_INT 1
14792: PUSH
14793: LD_INT 1
14795: NEG
14796: PUSH
14797: EMPTY
14798: LIST
14799: LIST
14800: PUSH
14801: LD_INT 2
14803: PUSH
14804: LD_INT 1
14806: PUSH
14807: EMPTY
14808: LIST
14809: LIST
14810: PUSH
14811: LD_INT 2
14813: PUSH
14814: LD_INT 2
14816: PUSH
14817: EMPTY
14818: LIST
14819: LIST
14820: PUSH
14821: LD_INT 1
14823: PUSH
14824: LD_INT 2
14826: PUSH
14827: EMPTY
14828: LIST
14829: LIST
14830: PUSH
14831: LD_INT 0
14833: PUSH
14834: LD_INT 2
14836: PUSH
14837: EMPTY
14838: LIST
14839: LIST
14840: PUSH
14841: LD_INT 1
14843: NEG
14844: PUSH
14845: LD_INT 1
14847: PUSH
14848: EMPTY
14849: LIST
14850: LIST
14851: PUSH
14852: LD_INT 2
14854: NEG
14855: PUSH
14856: LD_INT 0
14858: PUSH
14859: EMPTY
14860: LIST
14861: LIST
14862: PUSH
14863: LD_INT 2
14865: NEG
14866: PUSH
14867: LD_INT 1
14869: NEG
14870: PUSH
14871: EMPTY
14872: LIST
14873: LIST
14874: PUSH
14875: LD_INT 1
14877: NEG
14878: PUSH
14879: LD_INT 3
14881: NEG
14882: PUSH
14883: EMPTY
14884: LIST
14885: LIST
14886: PUSH
14887: LD_INT 1
14889: PUSH
14890: LD_INT 2
14892: NEG
14893: PUSH
14894: EMPTY
14895: LIST
14896: LIST
14897: PUSH
14898: LD_INT 3
14900: PUSH
14901: LD_INT 2
14903: PUSH
14904: EMPTY
14905: LIST
14906: LIST
14907: PUSH
14908: LD_INT 2
14910: PUSH
14911: LD_INT 3
14913: PUSH
14914: EMPTY
14915: LIST
14916: LIST
14917: PUSH
14918: LD_INT 2
14920: NEG
14921: PUSH
14922: LD_INT 1
14924: PUSH
14925: EMPTY
14926: LIST
14927: LIST
14928: PUSH
14929: LD_INT 3
14931: NEG
14932: PUSH
14933: LD_INT 1
14935: NEG
14936: PUSH
14937: EMPTY
14938: LIST
14939: LIST
14940: PUSH
14941: EMPTY
14942: LIST
14943: LIST
14944: LIST
14945: LIST
14946: LIST
14947: LIST
14948: LIST
14949: LIST
14950: LIST
14951: LIST
14952: LIST
14953: LIST
14954: LIST
14955: LIST
14956: LIST
14957: LIST
14958: LIST
14959: LIST
14960: LIST
14961: LIST
14962: LIST
14963: LIST
14964: LIST
14965: ST_TO_ADDR
// Factory4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] ] ;
14966: LD_ADDR_VAR 0 33
14970: PUSH
14971: LD_INT 0
14973: PUSH
14974: LD_INT 0
14976: PUSH
14977: EMPTY
14978: LIST
14979: LIST
14980: PUSH
14981: LD_INT 0
14983: PUSH
14984: LD_INT 1
14986: NEG
14987: PUSH
14988: EMPTY
14989: LIST
14990: LIST
14991: PUSH
14992: LD_INT 1
14994: PUSH
14995: LD_INT 0
14997: PUSH
14998: EMPTY
14999: LIST
15000: LIST
15001: PUSH
15002: LD_INT 1
15004: PUSH
15005: LD_INT 1
15007: PUSH
15008: EMPTY
15009: LIST
15010: LIST
15011: PUSH
15012: LD_INT 0
15014: PUSH
15015: LD_INT 1
15017: PUSH
15018: EMPTY
15019: LIST
15020: LIST
15021: PUSH
15022: LD_INT 1
15024: NEG
15025: PUSH
15026: LD_INT 0
15028: PUSH
15029: EMPTY
15030: LIST
15031: LIST
15032: PUSH
15033: LD_INT 1
15035: NEG
15036: PUSH
15037: LD_INT 1
15039: NEG
15040: PUSH
15041: EMPTY
15042: LIST
15043: LIST
15044: PUSH
15045: LD_INT 1
15047: NEG
15048: PUSH
15049: LD_INT 2
15051: NEG
15052: PUSH
15053: EMPTY
15054: LIST
15055: LIST
15056: PUSH
15057: LD_INT 1
15059: PUSH
15060: LD_INT 1
15062: NEG
15063: PUSH
15064: EMPTY
15065: LIST
15066: LIST
15067: PUSH
15068: LD_INT 2
15070: PUSH
15071: LD_INT 0
15073: PUSH
15074: EMPTY
15075: LIST
15076: LIST
15077: PUSH
15078: LD_INT 2
15080: PUSH
15081: LD_INT 1
15083: PUSH
15084: EMPTY
15085: LIST
15086: LIST
15087: PUSH
15088: LD_INT 1
15090: PUSH
15091: LD_INT 2
15093: PUSH
15094: EMPTY
15095: LIST
15096: LIST
15097: PUSH
15098: LD_INT 0
15100: PUSH
15101: LD_INT 2
15103: PUSH
15104: EMPTY
15105: LIST
15106: LIST
15107: PUSH
15108: LD_INT 1
15110: NEG
15111: PUSH
15112: LD_INT 1
15114: PUSH
15115: EMPTY
15116: LIST
15117: LIST
15118: PUSH
15119: LD_INT 2
15121: NEG
15122: PUSH
15123: LD_INT 0
15125: PUSH
15126: EMPTY
15127: LIST
15128: LIST
15129: PUSH
15130: LD_INT 2
15132: NEG
15133: PUSH
15134: LD_INT 1
15136: NEG
15137: PUSH
15138: EMPTY
15139: LIST
15140: LIST
15141: PUSH
15142: LD_INT 2
15144: NEG
15145: PUSH
15146: LD_INT 2
15148: NEG
15149: PUSH
15150: EMPTY
15151: LIST
15152: LIST
15153: PUSH
15154: LD_INT 2
15156: NEG
15157: PUSH
15158: LD_INT 3
15160: NEG
15161: PUSH
15162: EMPTY
15163: LIST
15164: LIST
15165: PUSH
15166: LD_INT 2
15168: PUSH
15169: LD_INT 1
15171: NEG
15172: PUSH
15173: EMPTY
15174: LIST
15175: LIST
15176: PUSH
15177: LD_INT 3
15179: PUSH
15180: LD_INT 1
15182: PUSH
15183: EMPTY
15184: LIST
15185: LIST
15186: PUSH
15187: LD_INT 1
15189: PUSH
15190: LD_INT 3
15192: PUSH
15193: EMPTY
15194: LIST
15195: LIST
15196: PUSH
15197: LD_INT 1
15199: NEG
15200: PUSH
15201: LD_INT 2
15203: PUSH
15204: EMPTY
15205: LIST
15206: LIST
15207: PUSH
15208: LD_INT 3
15210: NEG
15211: PUSH
15212: LD_INT 2
15214: NEG
15215: PUSH
15216: EMPTY
15217: LIST
15218: LIST
15219: PUSH
15220: EMPTY
15221: LIST
15222: LIST
15223: LIST
15224: LIST
15225: LIST
15226: LIST
15227: LIST
15228: LIST
15229: LIST
15230: LIST
15231: LIST
15232: LIST
15233: LIST
15234: LIST
15235: LIST
15236: LIST
15237: LIST
15238: LIST
15239: LIST
15240: LIST
15241: LIST
15242: LIST
15243: LIST
15244: ST_TO_ADDR
// Factory5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
15245: LD_ADDR_VAR 0 34
15249: PUSH
15250: LD_INT 0
15252: PUSH
15253: LD_INT 0
15255: PUSH
15256: EMPTY
15257: LIST
15258: LIST
15259: PUSH
15260: LD_INT 0
15262: PUSH
15263: LD_INT 1
15265: NEG
15266: PUSH
15267: EMPTY
15268: LIST
15269: LIST
15270: PUSH
15271: LD_INT 1
15273: PUSH
15274: LD_INT 0
15276: PUSH
15277: EMPTY
15278: LIST
15279: LIST
15280: PUSH
15281: LD_INT 1
15283: PUSH
15284: LD_INT 1
15286: PUSH
15287: EMPTY
15288: LIST
15289: LIST
15290: PUSH
15291: LD_INT 0
15293: PUSH
15294: LD_INT 1
15296: PUSH
15297: EMPTY
15298: LIST
15299: LIST
15300: PUSH
15301: LD_INT 1
15303: NEG
15304: PUSH
15305: LD_INT 0
15307: PUSH
15308: EMPTY
15309: LIST
15310: LIST
15311: PUSH
15312: LD_INT 1
15314: NEG
15315: PUSH
15316: LD_INT 1
15318: NEG
15319: PUSH
15320: EMPTY
15321: LIST
15322: LIST
15323: PUSH
15324: LD_INT 1
15326: NEG
15327: PUSH
15328: LD_INT 2
15330: NEG
15331: PUSH
15332: EMPTY
15333: LIST
15334: LIST
15335: PUSH
15336: LD_INT 0
15338: PUSH
15339: LD_INT 2
15341: NEG
15342: PUSH
15343: EMPTY
15344: LIST
15345: LIST
15346: PUSH
15347: LD_INT 1
15349: PUSH
15350: LD_INT 1
15352: NEG
15353: PUSH
15354: EMPTY
15355: LIST
15356: LIST
15357: PUSH
15358: LD_INT 2
15360: PUSH
15361: LD_INT 1
15363: PUSH
15364: EMPTY
15365: LIST
15366: LIST
15367: PUSH
15368: LD_INT 2
15370: PUSH
15371: LD_INT 2
15373: PUSH
15374: EMPTY
15375: LIST
15376: LIST
15377: PUSH
15378: LD_INT 1
15380: PUSH
15381: LD_INT 2
15383: PUSH
15384: EMPTY
15385: LIST
15386: LIST
15387: PUSH
15388: LD_INT 1
15390: NEG
15391: PUSH
15392: LD_INT 1
15394: PUSH
15395: EMPTY
15396: LIST
15397: LIST
15398: PUSH
15399: LD_INT 2
15401: NEG
15402: PUSH
15403: LD_INT 0
15405: PUSH
15406: EMPTY
15407: LIST
15408: LIST
15409: PUSH
15410: LD_INT 2
15412: NEG
15413: PUSH
15414: LD_INT 1
15416: NEG
15417: PUSH
15418: EMPTY
15419: LIST
15420: LIST
15421: PUSH
15422: LD_INT 2
15424: NEG
15425: PUSH
15426: LD_INT 2
15428: NEG
15429: PUSH
15430: EMPTY
15431: LIST
15432: LIST
15433: PUSH
15434: LD_INT 1
15436: NEG
15437: PUSH
15438: LD_INT 3
15440: NEG
15441: PUSH
15442: EMPTY
15443: LIST
15444: LIST
15445: PUSH
15446: LD_INT 1
15448: PUSH
15449: LD_INT 2
15451: NEG
15452: PUSH
15453: EMPTY
15454: LIST
15455: LIST
15456: PUSH
15457: LD_INT 3
15459: PUSH
15460: LD_INT 2
15462: PUSH
15463: EMPTY
15464: LIST
15465: LIST
15466: PUSH
15467: LD_INT 2
15469: PUSH
15470: LD_INT 3
15472: PUSH
15473: EMPTY
15474: LIST
15475: LIST
15476: PUSH
15477: LD_INT 2
15479: NEG
15480: PUSH
15481: LD_INT 1
15483: PUSH
15484: EMPTY
15485: LIST
15486: LIST
15487: PUSH
15488: LD_INT 3
15490: NEG
15491: PUSH
15492: LD_INT 1
15494: NEG
15495: PUSH
15496: EMPTY
15497: LIST
15498: LIST
15499: PUSH
15500: EMPTY
15501: LIST
15502: LIST
15503: LIST
15504: LIST
15505: LIST
15506: LIST
15507: LIST
15508: LIST
15509: LIST
15510: LIST
15511: LIST
15512: LIST
15513: LIST
15514: LIST
15515: LIST
15516: LIST
15517: LIST
15518: LIST
15519: LIST
15520: LIST
15521: LIST
15522: LIST
15523: LIST
15524: ST_TO_ADDR
// Ext0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 2 , 1 ] , [ - 2 , - 1 ] ] ;
15525: LD_ADDR_VAR 0 35
15529: PUSH
15530: LD_INT 0
15532: PUSH
15533: LD_INT 0
15535: PUSH
15536: EMPTY
15537: LIST
15538: LIST
15539: PUSH
15540: LD_INT 0
15542: PUSH
15543: LD_INT 1
15545: NEG
15546: PUSH
15547: EMPTY
15548: LIST
15549: LIST
15550: PUSH
15551: LD_INT 1
15553: PUSH
15554: LD_INT 0
15556: PUSH
15557: EMPTY
15558: LIST
15559: LIST
15560: PUSH
15561: LD_INT 1
15563: PUSH
15564: LD_INT 1
15566: PUSH
15567: EMPTY
15568: LIST
15569: LIST
15570: PUSH
15571: LD_INT 0
15573: PUSH
15574: LD_INT 1
15576: PUSH
15577: EMPTY
15578: LIST
15579: LIST
15580: PUSH
15581: LD_INT 1
15583: NEG
15584: PUSH
15585: LD_INT 0
15587: PUSH
15588: EMPTY
15589: LIST
15590: LIST
15591: PUSH
15592: LD_INT 1
15594: NEG
15595: PUSH
15596: LD_INT 1
15598: NEG
15599: PUSH
15600: EMPTY
15601: LIST
15602: LIST
15603: PUSH
15604: LD_INT 2
15606: PUSH
15607: LD_INT 1
15609: PUSH
15610: EMPTY
15611: LIST
15612: LIST
15613: PUSH
15614: LD_INT 2
15616: NEG
15617: PUSH
15618: LD_INT 1
15620: NEG
15621: PUSH
15622: EMPTY
15623: LIST
15624: LIST
15625: PUSH
15626: EMPTY
15627: LIST
15628: LIST
15629: LIST
15630: LIST
15631: LIST
15632: LIST
15633: LIST
15634: LIST
15635: LIST
15636: ST_TO_ADDR
// Ext1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , 2 ] ] ;
15637: LD_ADDR_VAR 0 36
15641: PUSH
15642: LD_INT 0
15644: PUSH
15645: LD_INT 0
15647: PUSH
15648: EMPTY
15649: LIST
15650: LIST
15651: PUSH
15652: LD_INT 0
15654: PUSH
15655: LD_INT 1
15657: NEG
15658: PUSH
15659: EMPTY
15660: LIST
15661: LIST
15662: PUSH
15663: LD_INT 1
15665: PUSH
15666: LD_INT 0
15668: PUSH
15669: EMPTY
15670: LIST
15671: LIST
15672: PUSH
15673: LD_INT 1
15675: PUSH
15676: LD_INT 1
15678: PUSH
15679: EMPTY
15680: LIST
15681: LIST
15682: PUSH
15683: LD_INT 0
15685: PUSH
15686: LD_INT 1
15688: PUSH
15689: EMPTY
15690: LIST
15691: LIST
15692: PUSH
15693: LD_INT 1
15695: NEG
15696: PUSH
15697: LD_INT 0
15699: PUSH
15700: EMPTY
15701: LIST
15702: LIST
15703: PUSH
15704: LD_INT 1
15706: NEG
15707: PUSH
15708: LD_INT 1
15710: NEG
15711: PUSH
15712: EMPTY
15713: LIST
15714: LIST
15715: PUSH
15716: LD_INT 1
15718: NEG
15719: PUSH
15720: LD_INT 2
15722: NEG
15723: PUSH
15724: EMPTY
15725: LIST
15726: LIST
15727: PUSH
15728: LD_INT 1
15730: PUSH
15731: LD_INT 2
15733: PUSH
15734: EMPTY
15735: LIST
15736: LIST
15737: PUSH
15738: EMPTY
15739: LIST
15740: LIST
15741: LIST
15742: LIST
15743: LIST
15744: LIST
15745: LIST
15746: LIST
15747: LIST
15748: ST_TO_ADDR
// Ext2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ - 1 , 1 ] ] ;
15749: LD_ADDR_VAR 0 37
15753: PUSH
15754: LD_INT 0
15756: PUSH
15757: LD_INT 0
15759: PUSH
15760: EMPTY
15761: LIST
15762: LIST
15763: PUSH
15764: LD_INT 0
15766: PUSH
15767: LD_INT 1
15769: NEG
15770: PUSH
15771: EMPTY
15772: LIST
15773: LIST
15774: PUSH
15775: LD_INT 1
15777: PUSH
15778: LD_INT 0
15780: PUSH
15781: EMPTY
15782: LIST
15783: LIST
15784: PUSH
15785: LD_INT 1
15787: PUSH
15788: LD_INT 1
15790: PUSH
15791: EMPTY
15792: LIST
15793: LIST
15794: PUSH
15795: LD_INT 0
15797: PUSH
15798: LD_INT 1
15800: PUSH
15801: EMPTY
15802: LIST
15803: LIST
15804: PUSH
15805: LD_INT 1
15807: NEG
15808: PUSH
15809: LD_INT 0
15811: PUSH
15812: EMPTY
15813: LIST
15814: LIST
15815: PUSH
15816: LD_INT 1
15818: NEG
15819: PUSH
15820: LD_INT 1
15822: NEG
15823: PUSH
15824: EMPTY
15825: LIST
15826: LIST
15827: PUSH
15828: LD_INT 1
15830: PUSH
15831: LD_INT 1
15833: NEG
15834: PUSH
15835: EMPTY
15836: LIST
15837: LIST
15838: PUSH
15839: LD_INT 1
15841: NEG
15842: PUSH
15843: LD_INT 1
15845: PUSH
15846: EMPTY
15847: LIST
15848: LIST
15849: PUSH
15850: EMPTY
15851: LIST
15852: LIST
15853: LIST
15854: LIST
15855: LIST
15856: LIST
15857: LIST
15858: LIST
15859: LIST
15860: ST_TO_ADDR
// Ext3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 2 , 1 ] , [ - 2 , - 1 ] ] ;
15861: LD_ADDR_VAR 0 38
15865: PUSH
15866: LD_INT 0
15868: PUSH
15869: LD_INT 0
15871: PUSH
15872: EMPTY
15873: LIST
15874: LIST
15875: PUSH
15876: LD_INT 0
15878: PUSH
15879: LD_INT 1
15881: NEG
15882: PUSH
15883: EMPTY
15884: LIST
15885: LIST
15886: PUSH
15887: LD_INT 1
15889: PUSH
15890: LD_INT 0
15892: PUSH
15893: EMPTY
15894: LIST
15895: LIST
15896: PUSH
15897: LD_INT 1
15899: PUSH
15900: LD_INT 1
15902: PUSH
15903: EMPTY
15904: LIST
15905: LIST
15906: PUSH
15907: LD_INT 0
15909: PUSH
15910: LD_INT 1
15912: PUSH
15913: EMPTY
15914: LIST
15915: LIST
15916: PUSH
15917: LD_INT 1
15919: NEG
15920: PUSH
15921: LD_INT 0
15923: PUSH
15924: EMPTY
15925: LIST
15926: LIST
15927: PUSH
15928: LD_INT 1
15930: NEG
15931: PUSH
15932: LD_INT 1
15934: NEG
15935: PUSH
15936: EMPTY
15937: LIST
15938: LIST
15939: PUSH
15940: LD_INT 2
15942: PUSH
15943: LD_INT 1
15945: PUSH
15946: EMPTY
15947: LIST
15948: LIST
15949: PUSH
15950: LD_INT 2
15952: NEG
15953: PUSH
15954: LD_INT 1
15956: NEG
15957: PUSH
15958: EMPTY
15959: LIST
15960: LIST
15961: PUSH
15962: EMPTY
15963: LIST
15964: LIST
15965: LIST
15966: LIST
15967: LIST
15968: LIST
15969: LIST
15970: LIST
15971: LIST
15972: ST_TO_ADDR
// Ext4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , 2 ] ] ;
15973: LD_ADDR_VAR 0 39
15977: PUSH
15978: LD_INT 0
15980: PUSH
15981: LD_INT 0
15983: PUSH
15984: EMPTY
15985: LIST
15986: LIST
15987: PUSH
15988: LD_INT 0
15990: PUSH
15991: LD_INT 1
15993: NEG
15994: PUSH
15995: EMPTY
15996: LIST
15997: LIST
15998: PUSH
15999: LD_INT 1
16001: PUSH
16002: LD_INT 0
16004: PUSH
16005: EMPTY
16006: LIST
16007: LIST
16008: PUSH
16009: LD_INT 1
16011: PUSH
16012: LD_INT 1
16014: PUSH
16015: EMPTY
16016: LIST
16017: LIST
16018: PUSH
16019: LD_INT 0
16021: PUSH
16022: LD_INT 1
16024: PUSH
16025: EMPTY
16026: LIST
16027: LIST
16028: PUSH
16029: LD_INT 1
16031: NEG
16032: PUSH
16033: LD_INT 0
16035: PUSH
16036: EMPTY
16037: LIST
16038: LIST
16039: PUSH
16040: LD_INT 1
16042: NEG
16043: PUSH
16044: LD_INT 1
16046: NEG
16047: PUSH
16048: EMPTY
16049: LIST
16050: LIST
16051: PUSH
16052: LD_INT 1
16054: NEG
16055: PUSH
16056: LD_INT 2
16058: NEG
16059: PUSH
16060: EMPTY
16061: LIST
16062: LIST
16063: PUSH
16064: LD_INT 1
16066: PUSH
16067: LD_INT 2
16069: PUSH
16070: EMPTY
16071: LIST
16072: LIST
16073: PUSH
16074: EMPTY
16075: LIST
16076: LIST
16077: LIST
16078: LIST
16079: LIST
16080: LIST
16081: LIST
16082: LIST
16083: LIST
16084: ST_TO_ADDR
// Ext5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ - 1 , 1 ] ] ;
16085: LD_ADDR_VAR 0 40
16089: PUSH
16090: LD_INT 0
16092: PUSH
16093: LD_INT 0
16095: PUSH
16096: EMPTY
16097: LIST
16098: LIST
16099: PUSH
16100: LD_INT 0
16102: PUSH
16103: LD_INT 1
16105: NEG
16106: PUSH
16107: EMPTY
16108: LIST
16109: LIST
16110: PUSH
16111: LD_INT 1
16113: PUSH
16114: LD_INT 0
16116: PUSH
16117: EMPTY
16118: LIST
16119: LIST
16120: PUSH
16121: LD_INT 1
16123: PUSH
16124: LD_INT 1
16126: PUSH
16127: EMPTY
16128: LIST
16129: LIST
16130: PUSH
16131: LD_INT 0
16133: PUSH
16134: LD_INT 1
16136: PUSH
16137: EMPTY
16138: LIST
16139: LIST
16140: PUSH
16141: LD_INT 1
16143: NEG
16144: PUSH
16145: LD_INT 0
16147: PUSH
16148: EMPTY
16149: LIST
16150: LIST
16151: PUSH
16152: LD_INT 1
16154: NEG
16155: PUSH
16156: LD_INT 1
16158: NEG
16159: PUSH
16160: EMPTY
16161: LIST
16162: LIST
16163: PUSH
16164: LD_INT 1
16166: PUSH
16167: LD_INT 1
16169: NEG
16170: PUSH
16171: EMPTY
16172: LIST
16173: LIST
16174: PUSH
16175: LD_INT 1
16177: NEG
16178: PUSH
16179: LD_INT 1
16181: PUSH
16182: EMPTY
16183: LIST
16184: LIST
16185: PUSH
16186: EMPTY
16187: LIST
16188: LIST
16189: LIST
16190: LIST
16191: LIST
16192: LIST
16193: LIST
16194: LIST
16195: LIST
16196: ST_TO_ADDR
// Lab0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
16197: LD_ADDR_VAR 0 41
16201: PUSH
16202: LD_INT 0
16204: PUSH
16205: LD_INT 0
16207: PUSH
16208: EMPTY
16209: LIST
16210: LIST
16211: PUSH
16212: LD_INT 0
16214: PUSH
16215: LD_INT 1
16217: NEG
16218: PUSH
16219: EMPTY
16220: LIST
16221: LIST
16222: PUSH
16223: LD_INT 1
16225: PUSH
16226: LD_INT 0
16228: PUSH
16229: EMPTY
16230: LIST
16231: LIST
16232: PUSH
16233: LD_INT 1
16235: PUSH
16236: LD_INT 1
16238: PUSH
16239: EMPTY
16240: LIST
16241: LIST
16242: PUSH
16243: LD_INT 0
16245: PUSH
16246: LD_INT 1
16248: PUSH
16249: EMPTY
16250: LIST
16251: LIST
16252: PUSH
16253: LD_INT 1
16255: NEG
16256: PUSH
16257: LD_INT 0
16259: PUSH
16260: EMPTY
16261: LIST
16262: LIST
16263: PUSH
16264: LD_INT 1
16266: NEG
16267: PUSH
16268: LD_INT 1
16270: NEG
16271: PUSH
16272: EMPTY
16273: LIST
16274: LIST
16275: PUSH
16276: LD_INT 1
16278: NEG
16279: PUSH
16280: LD_INT 2
16282: NEG
16283: PUSH
16284: EMPTY
16285: LIST
16286: LIST
16287: PUSH
16288: LD_INT 1
16290: PUSH
16291: LD_INT 1
16293: NEG
16294: PUSH
16295: EMPTY
16296: LIST
16297: LIST
16298: PUSH
16299: LD_INT 2
16301: PUSH
16302: LD_INT 0
16304: PUSH
16305: EMPTY
16306: LIST
16307: LIST
16308: PUSH
16309: LD_INT 2
16311: PUSH
16312: LD_INT 1
16314: PUSH
16315: EMPTY
16316: LIST
16317: LIST
16318: PUSH
16319: LD_INT 2
16321: PUSH
16322: LD_INT 2
16324: PUSH
16325: EMPTY
16326: LIST
16327: LIST
16328: PUSH
16329: LD_INT 1
16331: PUSH
16332: LD_INT 2
16334: PUSH
16335: EMPTY
16336: LIST
16337: LIST
16338: PUSH
16339: LD_INT 1
16341: NEG
16342: PUSH
16343: LD_INT 1
16345: PUSH
16346: EMPTY
16347: LIST
16348: LIST
16349: PUSH
16350: LD_INT 2
16352: NEG
16353: PUSH
16354: LD_INT 0
16356: PUSH
16357: EMPTY
16358: LIST
16359: LIST
16360: PUSH
16361: LD_INT 2
16363: NEG
16364: PUSH
16365: LD_INT 1
16367: NEG
16368: PUSH
16369: EMPTY
16370: LIST
16371: LIST
16372: PUSH
16373: LD_INT 2
16375: NEG
16376: PUSH
16377: LD_INT 2
16379: NEG
16380: PUSH
16381: EMPTY
16382: LIST
16383: LIST
16384: PUSH
16385: LD_INT 2
16387: NEG
16388: PUSH
16389: LD_INT 3
16391: NEG
16392: PUSH
16393: EMPTY
16394: LIST
16395: LIST
16396: PUSH
16397: LD_INT 2
16399: PUSH
16400: LD_INT 1
16402: NEG
16403: PUSH
16404: EMPTY
16405: LIST
16406: LIST
16407: PUSH
16408: LD_INT 3
16410: PUSH
16411: LD_INT 0
16413: PUSH
16414: EMPTY
16415: LIST
16416: LIST
16417: PUSH
16418: LD_INT 3
16420: PUSH
16421: LD_INT 1
16423: PUSH
16424: EMPTY
16425: LIST
16426: LIST
16427: PUSH
16428: LD_INT 3
16430: PUSH
16431: LD_INT 2
16433: PUSH
16434: EMPTY
16435: LIST
16436: LIST
16437: PUSH
16438: LD_INT 3
16440: PUSH
16441: LD_INT 3
16443: PUSH
16444: EMPTY
16445: LIST
16446: LIST
16447: PUSH
16448: LD_INT 2
16450: PUSH
16451: LD_INT 3
16453: PUSH
16454: EMPTY
16455: LIST
16456: LIST
16457: PUSH
16458: LD_INT 2
16460: NEG
16461: PUSH
16462: LD_INT 1
16464: PUSH
16465: EMPTY
16466: LIST
16467: LIST
16468: PUSH
16469: LD_INT 3
16471: NEG
16472: PUSH
16473: LD_INT 0
16475: PUSH
16476: EMPTY
16477: LIST
16478: LIST
16479: PUSH
16480: LD_INT 3
16482: NEG
16483: PUSH
16484: LD_INT 1
16486: NEG
16487: PUSH
16488: EMPTY
16489: LIST
16490: LIST
16491: PUSH
16492: LD_INT 3
16494: NEG
16495: PUSH
16496: LD_INT 2
16498: NEG
16499: PUSH
16500: EMPTY
16501: LIST
16502: LIST
16503: PUSH
16504: LD_INT 3
16506: NEG
16507: PUSH
16508: LD_INT 3
16510: NEG
16511: PUSH
16512: EMPTY
16513: LIST
16514: LIST
16515: PUSH
16516: EMPTY
16517: LIST
16518: LIST
16519: LIST
16520: LIST
16521: LIST
16522: LIST
16523: LIST
16524: LIST
16525: LIST
16526: LIST
16527: LIST
16528: LIST
16529: LIST
16530: LIST
16531: LIST
16532: LIST
16533: LIST
16534: LIST
16535: LIST
16536: LIST
16537: LIST
16538: LIST
16539: LIST
16540: LIST
16541: LIST
16542: LIST
16543: LIST
16544: LIST
16545: LIST
16546: ST_TO_ADDR
// Lab1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
16547: LD_ADDR_VAR 0 42
16551: PUSH
16552: LD_INT 0
16554: PUSH
16555: LD_INT 0
16557: PUSH
16558: EMPTY
16559: LIST
16560: LIST
16561: PUSH
16562: LD_INT 0
16564: PUSH
16565: LD_INT 1
16567: NEG
16568: PUSH
16569: EMPTY
16570: LIST
16571: LIST
16572: PUSH
16573: LD_INT 1
16575: PUSH
16576: LD_INT 0
16578: PUSH
16579: EMPTY
16580: LIST
16581: LIST
16582: PUSH
16583: LD_INT 1
16585: PUSH
16586: LD_INT 1
16588: PUSH
16589: EMPTY
16590: LIST
16591: LIST
16592: PUSH
16593: LD_INT 0
16595: PUSH
16596: LD_INT 1
16598: PUSH
16599: EMPTY
16600: LIST
16601: LIST
16602: PUSH
16603: LD_INT 1
16605: NEG
16606: PUSH
16607: LD_INT 0
16609: PUSH
16610: EMPTY
16611: LIST
16612: LIST
16613: PUSH
16614: LD_INT 1
16616: NEG
16617: PUSH
16618: LD_INT 1
16620: NEG
16621: PUSH
16622: EMPTY
16623: LIST
16624: LIST
16625: PUSH
16626: LD_INT 1
16628: NEG
16629: PUSH
16630: LD_INT 2
16632: NEG
16633: PUSH
16634: EMPTY
16635: LIST
16636: LIST
16637: PUSH
16638: LD_INT 0
16640: PUSH
16641: LD_INT 2
16643: NEG
16644: PUSH
16645: EMPTY
16646: LIST
16647: LIST
16648: PUSH
16649: LD_INT 1
16651: PUSH
16652: LD_INT 1
16654: NEG
16655: PUSH
16656: EMPTY
16657: LIST
16658: LIST
16659: PUSH
16660: LD_INT 2
16662: PUSH
16663: LD_INT 1
16665: PUSH
16666: EMPTY
16667: LIST
16668: LIST
16669: PUSH
16670: LD_INT 2
16672: PUSH
16673: LD_INT 2
16675: PUSH
16676: EMPTY
16677: LIST
16678: LIST
16679: PUSH
16680: LD_INT 1
16682: PUSH
16683: LD_INT 2
16685: PUSH
16686: EMPTY
16687: LIST
16688: LIST
16689: PUSH
16690: LD_INT 0
16692: PUSH
16693: LD_INT 2
16695: PUSH
16696: EMPTY
16697: LIST
16698: LIST
16699: PUSH
16700: LD_INT 1
16702: NEG
16703: PUSH
16704: LD_INT 1
16706: PUSH
16707: EMPTY
16708: LIST
16709: LIST
16710: PUSH
16711: LD_INT 2
16713: NEG
16714: PUSH
16715: LD_INT 1
16717: NEG
16718: PUSH
16719: EMPTY
16720: LIST
16721: LIST
16722: PUSH
16723: LD_INT 2
16725: NEG
16726: PUSH
16727: LD_INT 2
16729: NEG
16730: PUSH
16731: EMPTY
16732: LIST
16733: LIST
16734: PUSH
16735: LD_INT 2
16737: NEG
16738: PUSH
16739: LD_INT 3
16741: NEG
16742: PUSH
16743: EMPTY
16744: LIST
16745: LIST
16746: PUSH
16747: LD_INT 1
16749: NEG
16750: PUSH
16751: LD_INT 3
16753: NEG
16754: PUSH
16755: EMPTY
16756: LIST
16757: LIST
16758: PUSH
16759: LD_INT 0
16761: PUSH
16762: LD_INT 3
16764: NEG
16765: PUSH
16766: EMPTY
16767: LIST
16768: LIST
16769: PUSH
16770: LD_INT 1
16772: PUSH
16773: LD_INT 2
16775: NEG
16776: PUSH
16777: EMPTY
16778: LIST
16779: LIST
16780: PUSH
16781: LD_INT 3
16783: PUSH
16784: LD_INT 2
16786: PUSH
16787: EMPTY
16788: LIST
16789: LIST
16790: PUSH
16791: LD_INT 3
16793: PUSH
16794: LD_INT 3
16796: PUSH
16797: EMPTY
16798: LIST
16799: LIST
16800: PUSH
16801: LD_INT 2
16803: PUSH
16804: LD_INT 3
16806: PUSH
16807: EMPTY
16808: LIST
16809: LIST
16810: PUSH
16811: LD_INT 1
16813: PUSH
16814: LD_INT 3
16816: PUSH
16817: EMPTY
16818: LIST
16819: LIST
16820: PUSH
16821: LD_INT 0
16823: PUSH
16824: LD_INT 3
16826: PUSH
16827: EMPTY
16828: LIST
16829: LIST
16830: PUSH
16831: LD_INT 1
16833: NEG
16834: PUSH
16835: LD_INT 2
16837: PUSH
16838: EMPTY
16839: LIST
16840: LIST
16841: PUSH
16842: LD_INT 3
16844: NEG
16845: PUSH
16846: LD_INT 2
16848: NEG
16849: PUSH
16850: EMPTY
16851: LIST
16852: LIST
16853: PUSH
16854: LD_INT 3
16856: NEG
16857: PUSH
16858: LD_INT 3
16860: NEG
16861: PUSH
16862: EMPTY
16863: LIST
16864: LIST
16865: PUSH
16866: EMPTY
16867: LIST
16868: LIST
16869: LIST
16870: LIST
16871: LIST
16872: LIST
16873: LIST
16874: LIST
16875: LIST
16876: LIST
16877: LIST
16878: LIST
16879: LIST
16880: LIST
16881: LIST
16882: LIST
16883: LIST
16884: LIST
16885: LIST
16886: LIST
16887: LIST
16888: LIST
16889: LIST
16890: LIST
16891: LIST
16892: LIST
16893: LIST
16894: LIST
16895: LIST
16896: ST_TO_ADDR
// Lab2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
16897: LD_ADDR_VAR 0 43
16901: PUSH
16902: LD_INT 0
16904: PUSH
16905: LD_INT 0
16907: PUSH
16908: EMPTY
16909: LIST
16910: LIST
16911: PUSH
16912: LD_INT 0
16914: PUSH
16915: LD_INT 1
16917: NEG
16918: PUSH
16919: EMPTY
16920: LIST
16921: LIST
16922: PUSH
16923: LD_INT 1
16925: PUSH
16926: LD_INT 0
16928: PUSH
16929: EMPTY
16930: LIST
16931: LIST
16932: PUSH
16933: LD_INT 1
16935: PUSH
16936: LD_INT 1
16938: PUSH
16939: EMPTY
16940: LIST
16941: LIST
16942: PUSH
16943: LD_INT 0
16945: PUSH
16946: LD_INT 1
16948: PUSH
16949: EMPTY
16950: LIST
16951: LIST
16952: PUSH
16953: LD_INT 1
16955: NEG
16956: PUSH
16957: LD_INT 0
16959: PUSH
16960: EMPTY
16961: LIST
16962: LIST
16963: PUSH
16964: LD_INT 1
16966: NEG
16967: PUSH
16968: LD_INT 1
16970: NEG
16971: PUSH
16972: EMPTY
16973: LIST
16974: LIST
16975: PUSH
16976: LD_INT 1
16978: NEG
16979: PUSH
16980: LD_INT 2
16982: NEG
16983: PUSH
16984: EMPTY
16985: LIST
16986: LIST
16987: PUSH
16988: LD_INT 0
16990: PUSH
16991: LD_INT 2
16993: NEG
16994: PUSH
16995: EMPTY
16996: LIST
16997: LIST
16998: PUSH
16999: LD_INT 1
17001: PUSH
17002: LD_INT 1
17004: NEG
17005: PUSH
17006: EMPTY
17007: LIST
17008: LIST
17009: PUSH
17010: LD_INT 2
17012: PUSH
17013: LD_INT 0
17015: PUSH
17016: EMPTY
17017: LIST
17018: LIST
17019: PUSH
17020: LD_INT 2
17022: PUSH
17023: LD_INT 1
17025: PUSH
17026: EMPTY
17027: LIST
17028: LIST
17029: PUSH
17030: LD_INT 1
17032: PUSH
17033: LD_INT 2
17035: PUSH
17036: EMPTY
17037: LIST
17038: LIST
17039: PUSH
17040: LD_INT 0
17042: PUSH
17043: LD_INT 2
17045: PUSH
17046: EMPTY
17047: LIST
17048: LIST
17049: PUSH
17050: LD_INT 1
17052: NEG
17053: PUSH
17054: LD_INT 1
17056: PUSH
17057: EMPTY
17058: LIST
17059: LIST
17060: PUSH
17061: LD_INT 2
17063: NEG
17064: PUSH
17065: LD_INT 0
17067: PUSH
17068: EMPTY
17069: LIST
17070: LIST
17071: PUSH
17072: LD_INT 2
17074: NEG
17075: PUSH
17076: LD_INT 1
17078: NEG
17079: PUSH
17080: EMPTY
17081: LIST
17082: LIST
17083: PUSH
17084: LD_INT 1
17086: NEG
17087: PUSH
17088: LD_INT 3
17090: NEG
17091: PUSH
17092: EMPTY
17093: LIST
17094: LIST
17095: PUSH
17096: LD_INT 0
17098: PUSH
17099: LD_INT 3
17101: NEG
17102: PUSH
17103: EMPTY
17104: LIST
17105: LIST
17106: PUSH
17107: LD_INT 1
17109: PUSH
17110: LD_INT 2
17112: NEG
17113: PUSH
17114: EMPTY
17115: LIST
17116: LIST
17117: PUSH
17118: LD_INT 2
17120: PUSH
17121: LD_INT 1
17123: NEG
17124: PUSH
17125: EMPTY
17126: LIST
17127: LIST
17128: PUSH
17129: LD_INT 3
17131: PUSH
17132: LD_INT 0
17134: PUSH
17135: EMPTY
17136: LIST
17137: LIST
17138: PUSH
17139: LD_INT 3
17141: PUSH
17142: LD_INT 1
17144: PUSH
17145: EMPTY
17146: LIST
17147: LIST
17148: PUSH
17149: LD_INT 1
17151: PUSH
17152: LD_INT 3
17154: PUSH
17155: EMPTY
17156: LIST
17157: LIST
17158: PUSH
17159: LD_INT 0
17161: PUSH
17162: LD_INT 3
17164: PUSH
17165: EMPTY
17166: LIST
17167: LIST
17168: PUSH
17169: LD_INT 1
17171: NEG
17172: PUSH
17173: LD_INT 2
17175: PUSH
17176: EMPTY
17177: LIST
17178: LIST
17179: PUSH
17180: LD_INT 2
17182: NEG
17183: PUSH
17184: LD_INT 1
17186: PUSH
17187: EMPTY
17188: LIST
17189: LIST
17190: PUSH
17191: LD_INT 3
17193: NEG
17194: PUSH
17195: LD_INT 0
17197: PUSH
17198: EMPTY
17199: LIST
17200: LIST
17201: PUSH
17202: LD_INT 3
17204: NEG
17205: PUSH
17206: LD_INT 1
17208: NEG
17209: PUSH
17210: EMPTY
17211: LIST
17212: LIST
17213: PUSH
17214: EMPTY
17215: LIST
17216: LIST
17217: LIST
17218: LIST
17219: LIST
17220: LIST
17221: LIST
17222: LIST
17223: LIST
17224: LIST
17225: LIST
17226: LIST
17227: LIST
17228: LIST
17229: LIST
17230: LIST
17231: LIST
17232: LIST
17233: LIST
17234: LIST
17235: LIST
17236: LIST
17237: LIST
17238: LIST
17239: LIST
17240: LIST
17241: LIST
17242: LIST
17243: LIST
17244: ST_TO_ADDR
// Lab3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
17245: LD_ADDR_VAR 0 44
17249: PUSH
17250: LD_INT 0
17252: PUSH
17253: LD_INT 0
17255: PUSH
17256: EMPTY
17257: LIST
17258: LIST
17259: PUSH
17260: LD_INT 0
17262: PUSH
17263: LD_INT 1
17265: NEG
17266: PUSH
17267: EMPTY
17268: LIST
17269: LIST
17270: PUSH
17271: LD_INT 1
17273: PUSH
17274: LD_INT 0
17276: PUSH
17277: EMPTY
17278: LIST
17279: LIST
17280: PUSH
17281: LD_INT 1
17283: PUSH
17284: LD_INT 1
17286: PUSH
17287: EMPTY
17288: LIST
17289: LIST
17290: PUSH
17291: LD_INT 0
17293: PUSH
17294: LD_INT 1
17296: PUSH
17297: EMPTY
17298: LIST
17299: LIST
17300: PUSH
17301: LD_INT 1
17303: NEG
17304: PUSH
17305: LD_INT 0
17307: PUSH
17308: EMPTY
17309: LIST
17310: LIST
17311: PUSH
17312: LD_INT 1
17314: NEG
17315: PUSH
17316: LD_INT 1
17318: NEG
17319: PUSH
17320: EMPTY
17321: LIST
17322: LIST
17323: PUSH
17324: LD_INT 1
17326: NEG
17327: PUSH
17328: LD_INT 2
17330: NEG
17331: PUSH
17332: EMPTY
17333: LIST
17334: LIST
17335: PUSH
17336: LD_INT 1
17338: PUSH
17339: LD_INT 1
17341: NEG
17342: PUSH
17343: EMPTY
17344: LIST
17345: LIST
17346: PUSH
17347: LD_INT 2
17349: PUSH
17350: LD_INT 0
17352: PUSH
17353: EMPTY
17354: LIST
17355: LIST
17356: PUSH
17357: LD_INT 2
17359: PUSH
17360: LD_INT 1
17362: PUSH
17363: EMPTY
17364: LIST
17365: LIST
17366: PUSH
17367: LD_INT 2
17369: PUSH
17370: LD_INT 2
17372: PUSH
17373: EMPTY
17374: LIST
17375: LIST
17376: PUSH
17377: LD_INT 1
17379: PUSH
17380: LD_INT 2
17382: PUSH
17383: EMPTY
17384: LIST
17385: LIST
17386: PUSH
17387: LD_INT 1
17389: NEG
17390: PUSH
17391: LD_INT 1
17393: PUSH
17394: EMPTY
17395: LIST
17396: LIST
17397: PUSH
17398: LD_INT 2
17400: NEG
17401: PUSH
17402: LD_INT 0
17404: PUSH
17405: EMPTY
17406: LIST
17407: LIST
17408: PUSH
17409: LD_INT 2
17411: NEG
17412: PUSH
17413: LD_INT 1
17415: NEG
17416: PUSH
17417: EMPTY
17418: LIST
17419: LIST
17420: PUSH
17421: LD_INT 2
17423: NEG
17424: PUSH
17425: LD_INT 2
17427: NEG
17428: PUSH
17429: EMPTY
17430: LIST
17431: LIST
17432: PUSH
17433: LD_INT 2
17435: NEG
17436: PUSH
17437: LD_INT 3
17439: NEG
17440: PUSH
17441: EMPTY
17442: LIST
17443: LIST
17444: PUSH
17445: LD_INT 2
17447: PUSH
17448: LD_INT 1
17450: NEG
17451: PUSH
17452: EMPTY
17453: LIST
17454: LIST
17455: PUSH
17456: LD_INT 3
17458: PUSH
17459: LD_INT 0
17461: PUSH
17462: EMPTY
17463: LIST
17464: LIST
17465: PUSH
17466: LD_INT 3
17468: PUSH
17469: LD_INT 1
17471: PUSH
17472: EMPTY
17473: LIST
17474: LIST
17475: PUSH
17476: LD_INT 3
17478: PUSH
17479: LD_INT 2
17481: PUSH
17482: EMPTY
17483: LIST
17484: LIST
17485: PUSH
17486: LD_INT 3
17488: PUSH
17489: LD_INT 3
17491: PUSH
17492: EMPTY
17493: LIST
17494: LIST
17495: PUSH
17496: LD_INT 2
17498: PUSH
17499: LD_INT 3
17501: PUSH
17502: EMPTY
17503: LIST
17504: LIST
17505: PUSH
17506: LD_INT 2
17508: NEG
17509: PUSH
17510: LD_INT 1
17512: PUSH
17513: EMPTY
17514: LIST
17515: LIST
17516: PUSH
17517: LD_INT 3
17519: NEG
17520: PUSH
17521: LD_INT 0
17523: PUSH
17524: EMPTY
17525: LIST
17526: LIST
17527: PUSH
17528: LD_INT 3
17530: NEG
17531: PUSH
17532: LD_INT 1
17534: NEG
17535: PUSH
17536: EMPTY
17537: LIST
17538: LIST
17539: PUSH
17540: LD_INT 3
17542: NEG
17543: PUSH
17544: LD_INT 2
17546: NEG
17547: PUSH
17548: EMPTY
17549: LIST
17550: LIST
17551: PUSH
17552: LD_INT 3
17554: NEG
17555: PUSH
17556: LD_INT 3
17558: NEG
17559: PUSH
17560: EMPTY
17561: LIST
17562: LIST
17563: PUSH
17564: EMPTY
17565: LIST
17566: LIST
17567: LIST
17568: LIST
17569: LIST
17570: LIST
17571: LIST
17572: LIST
17573: LIST
17574: LIST
17575: LIST
17576: LIST
17577: LIST
17578: LIST
17579: LIST
17580: LIST
17581: LIST
17582: LIST
17583: LIST
17584: LIST
17585: LIST
17586: LIST
17587: LIST
17588: LIST
17589: LIST
17590: LIST
17591: LIST
17592: LIST
17593: LIST
17594: ST_TO_ADDR
// Lab4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
17595: LD_ADDR_VAR 0 45
17599: PUSH
17600: LD_INT 0
17602: PUSH
17603: LD_INT 0
17605: PUSH
17606: EMPTY
17607: LIST
17608: LIST
17609: PUSH
17610: LD_INT 0
17612: PUSH
17613: LD_INT 1
17615: NEG
17616: PUSH
17617: EMPTY
17618: LIST
17619: LIST
17620: PUSH
17621: LD_INT 1
17623: PUSH
17624: LD_INT 0
17626: PUSH
17627: EMPTY
17628: LIST
17629: LIST
17630: PUSH
17631: LD_INT 1
17633: PUSH
17634: LD_INT 1
17636: PUSH
17637: EMPTY
17638: LIST
17639: LIST
17640: PUSH
17641: LD_INT 0
17643: PUSH
17644: LD_INT 1
17646: PUSH
17647: EMPTY
17648: LIST
17649: LIST
17650: PUSH
17651: LD_INT 1
17653: NEG
17654: PUSH
17655: LD_INT 0
17657: PUSH
17658: EMPTY
17659: LIST
17660: LIST
17661: PUSH
17662: LD_INT 1
17664: NEG
17665: PUSH
17666: LD_INT 1
17668: NEG
17669: PUSH
17670: EMPTY
17671: LIST
17672: LIST
17673: PUSH
17674: LD_INT 1
17676: NEG
17677: PUSH
17678: LD_INT 2
17680: NEG
17681: PUSH
17682: EMPTY
17683: LIST
17684: LIST
17685: PUSH
17686: LD_INT 0
17688: PUSH
17689: LD_INT 2
17691: NEG
17692: PUSH
17693: EMPTY
17694: LIST
17695: LIST
17696: PUSH
17697: LD_INT 1
17699: PUSH
17700: LD_INT 1
17702: NEG
17703: PUSH
17704: EMPTY
17705: LIST
17706: LIST
17707: PUSH
17708: LD_INT 2
17710: PUSH
17711: LD_INT 1
17713: PUSH
17714: EMPTY
17715: LIST
17716: LIST
17717: PUSH
17718: LD_INT 2
17720: PUSH
17721: LD_INT 2
17723: PUSH
17724: EMPTY
17725: LIST
17726: LIST
17727: PUSH
17728: LD_INT 1
17730: PUSH
17731: LD_INT 2
17733: PUSH
17734: EMPTY
17735: LIST
17736: LIST
17737: PUSH
17738: LD_INT 0
17740: PUSH
17741: LD_INT 2
17743: PUSH
17744: EMPTY
17745: LIST
17746: LIST
17747: PUSH
17748: LD_INT 1
17750: NEG
17751: PUSH
17752: LD_INT 1
17754: PUSH
17755: EMPTY
17756: LIST
17757: LIST
17758: PUSH
17759: LD_INT 2
17761: NEG
17762: PUSH
17763: LD_INT 1
17765: NEG
17766: PUSH
17767: EMPTY
17768: LIST
17769: LIST
17770: PUSH
17771: LD_INT 2
17773: NEG
17774: PUSH
17775: LD_INT 2
17777: NEG
17778: PUSH
17779: EMPTY
17780: LIST
17781: LIST
17782: PUSH
17783: LD_INT 2
17785: NEG
17786: PUSH
17787: LD_INT 3
17789: NEG
17790: PUSH
17791: EMPTY
17792: LIST
17793: LIST
17794: PUSH
17795: LD_INT 1
17797: NEG
17798: PUSH
17799: LD_INT 3
17801: NEG
17802: PUSH
17803: EMPTY
17804: LIST
17805: LIST
17806: PUSH
17807: LD_INT 0
17809: PUSH
17810: LD_INT 3
17812: NEG
17813: PUSH
17814: EMPTY
17815: LIST
17816: LIST
17817: PUSH
17818: LD_INT 1
17820: PUSH
17821: LD_INT 2
17823: NEG
17824: PUSH
17825: EMPTY
17826: LIST
17827: LIST
17828: PUSH
17829: LD_INT 3
17831: PUSH
17832: LD_INT 2
17834: PUSH
17835: EMPTY
17836: LIST
17837: LIST
17838: PUSH
17839: LD_INT 3
17841: PUSH
17842: LD_INT 3
17844: PUSH
17845: EMPTY
17846: LIST
17847: LIST
17848: PUSH
17849: LD_INT 2
17851: PUSH
17852: LD_INT 3
17854: PUSH
17855: EMPTY
17856: LIST
17857: LIST
17858: PUSH
17859: LD_INT 1
17861: PUSH
17862: LD_INT 3
17864: PUSH
17865: EMPTY
17866: LIST
17867: LIST
17868: PUSH
17869: LD_INT 0
17871: PUSH
17872: LD_INT 3
17874: PUSH
17875: EMPTY
17876: LIST
17877: LIST
17878: PUSH
17879: LD_INT 1
17881: NEG
17882: PUSH
17883: LD_INT 2
17885: PUSH
17886: EMPTY
17887: LIST
17888: LIST
17889: PUSH
17890: LD_INT 3
17892: NEG
17893: PUSH
17894: LD_INT 2
17896: NEG
17897: PUSH
17898: EMPTY
17899: LIST
17900: LIST
17901: PUSH
17902: LD_INT 3
17904: NEG
17905: PUSH
17906: LD_INT 3
17908: NEG
17909: PUSH
17910: EMPTY
17911: LIST
17912: LIST
17913: PUSH
17914: EMPTY
17915: LIST
17916: LIST
17917: LIST
17918: LIST
17919: LIST
17920: LIST
17921: LIST
17922: LIST
17923: LIST
17924: LIST
17925: LIST
17926: LIST
17927: LIST
17928: LIST
17929: LIST
17930: LIST
17931: LIST
17932: LIST
17933: LIST
17934: LIST
17935: LIST
17936: LIST
17937: LIST
17938: LIST
17939: LIST
17940: LIST
17941: LIST
17942: LIST
17943: LIST
17944: ST_TO_ADDR
// Lab5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
17945: LD_ADDR_VAR 0 46
17949: PUSH
17950: LD_INT 0
17952: PUSH
17953: LD_INT 0
17955: PUSH
17956: EMPTY
17957: LIST
17958: LIST
17959: PUSH
17960: LD_INT 0
17962: PUSH
17963: LD_INT 1
17965: NEG
17966: PUSH
17967: EMPTY
17968: LIST
17969: LIST
17970: PUSH
17971: LD_INT 1
17973: PUSH
17974: LD_INT 0
17976: PUSH
17977: EMPTY
17978: LIST
17979: LIST
17980: PUSH
17981: LD_INT 1
17983: PUSH
17984: LD_INT 1
17986: PUSH
17987: EMPTY
17988: LIST
17989: LIST
17990: PUSH
17991: LD_INT 0
17993: PUSH
17994: LD_INT 1
17996: PUSH
17997: EMPTY
17998: LIST
17999: LIST
18000: PUSH
18001: LD_INT 1
18003: NEG
18004: PUSH
18005: LD_INT 0
18007: PUSH
18008: EMPTY
18009: LIST
18010: LIST
18011: PUSH
18012: LD_INT 1
18014: NEG
18015: PUSH
18016: LD_INT 1
18018: NEG
18019: PUSH
18020: EMPTY
18021: LIST
18022: LIST
18023: PUSH
18024: LD_INT 1
18026: NEG
18027: PUSH
18028: LD_INT 2
18030: NEG
18031: PUSH
18032: EMPTY
18033: LIST
18034: LIST
18035: PUSH
18036: LD_INT 0
18038: PUSH
18039: LD_INT 2
18041: NEG
18042: PUSH
18043: EMPTY
18044: LIST
18045: LIST
18046: PUSH
18047: LD_INT 1
18049: PUSH
18050: LD_INT 1
18052: NEG
18053: PUSH
18054: EMPTY
18055: LIST
18056: LIST
18057: PUSH
18058: LD_INT 2
18060: PUSH
18061: LD_INT 0
18063: PUSH
18064: EMPTY
18065: LIST
18066: LIST
18067: PUSH
18068: LD_INT 2
18070: PUSH
18071: LD_INT 1
18073: PUSH
18074: EMPTY
18075: LIST
18076: LIST
18077: PUSH
18078: LD_INT 1
18080: PUSH
18081: LD_INT 2
18083: PUSH
18084: EMPTY
18085: LIST
18086: LIST
18087: PUSH
18088: LD_INT 0
18090: PUSH
18091: LD_INT 2
18093: PUSH
18094: EMPTY
18095: LIST
18096: LIST
18097: PUSH
18098: LD_INT 1
18100: NEG
18101: PUSH
18102: LD_INT 1
18104: PUSH
18105: EMPTY
18106: LIST
18107: LIST
18108: PUSH
18109: LD_INT 2
18111: NEG
18112: PUSH
18113: LD_INT 0
18115: PUSH
18116: EMPTY
18117: LIST
18118: LIST
18119: PUSH
18120: LD_INT 2
18122: NEG
18123: PUSH
18124: LD_INT 1
18126: NEG
18127: PUSH
18128: EMPTY
18129: LIST
18130: LIST
18131: PUSH
18132: LD_INT 1
18134: NEG
18135: PUSH
18136: LD_INT 3
18138: NEG
18139: PUSH
18140: EMPTY
18141: LIST
18142: LIST
18143: PUSH
18144: LD_INT 0
18146: PUSH
18147: LD_INT 3
18149: NEG
18150: PUSH
18151: EMPTY
18152: LIST
18153: LIST
18154: PUSH
18155: LD_INT 1
18157: PUSH
18158: LD_INT 2
18160: NEG
18161: PUSH
18162: EMPTY
18163: LIST
18164: LIST
18165: PUSH
18166: LD_INT 2
18168: PUSH
18169: LD_INT 1
18171: NEG
18172: PUSH
18173: EMPTY
18174: LIST
18175: LIST
18176: PUSH
18177: LD_INT 3
18179: PUSH
18180: LD_INT 0
18182: PUSH
18183: EMPTY
18184: LIST
18185: LIST
18186: PUSH
18187: LD_INT 3
18189: PUSH
18190: LD_INT 1
18192: PUSH
18193: EMPTY
18194: LIST
18195: LIST
18196: PUSH
18197: LD_INT 1
18199: PUSH
18200: LD_INT 3
18202: PUSH
18203: EMPTY
18204: LIST
18205: LIST
18206: PUSH
18207: LD_INT 0
18209: PUSH
18210: LD_INT 3
18212: PUSH
18213: EMPTY
18214: LIST
18215: LIST
18216: PUSH
18217: LD_INT 1
18219: NEG
18220: PUSH
18221: LD_INT 2
18223: PUSH
18224: EMPTY
18225: LIST
18226: LIST
18227: PUSH
18228: LD_INT 2
18230: NEG
18231: PUSH
18232: LD_INT 1
18234: PUSH
18235: EMPTY
18236: LIST
18237: LIST
18238: PUSH
18239: LD_INT 3
18241: NEG
18242: PUSH
18243: LD_INT 0
18245: PUSH
18246: EMPTY
18247: LIST
18248: LIST
18249: PUSH
18250: LD_INT 3
18252: NEG
18253: PUSH
18254: LD_INT 1
18256: NEG
18257: PUSH
18258: EMPTY
18259: LIST
18260: LIST
18261: PUSH
18262: EMPTY
18263: LIST
18264: LIST
18265: LIST
18266: LIST
18267: LIST
18268: LIST
18269: LIST
18270: LIST
18271: LIST
18272: LIST
18273: LIST
18274: LIST
18275: LIST
18276: LIST
18277: LIST
18278: LIST
18279: LIST
18280: LIST
18281: LIST
18282: LIST
18283: LIST
18284: LIST
18285: LIST
18286: LIST
18287: LIST
18288: LIST
18289: LIST
18290: LIST
18291: LIST
18292: ST_TO_ADDR
// ControlTower0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
18293: LD_ADDR_VAR 0 47
18297: PUSH
18298: LD_INT 0
18300: PUSH
18301: LD_INT 0
18303: PUSH
18304: EMPTY
18305: LIST
18306: LIST
18307: PUSH
18308: LD_INT 0
18310: PUSH
18311: LD_INT 1
18313: NEG
18314: PUSH
18315: EMPTY
18316: LIST
18317: LIST
18318: PUSH
18319: LD_INT 1
18321: PUSH
18322: LD_INT 0
18324: PUSH
18325: EMPTY
18326: LIST
18327: LIST
18328: PUSH
18329: LD_INT 1
18331: PUSH
18332: LD_INT 1
18334: PUSH
18335: EMPTY
18336: LIST
18337: LIST
18338: PUSH
18339: LD_INT 0
18341: PUSH
18342: LD_INT 1
18344: PUSH
18345: EMPTY
18346: LIST
18347: LIST
18348: PUSH
18349: LD_INT 1
18351: NEG
18352: PUSH
18353: LD_INT 0
18355: PUSH
18356: EMPTY
18357: LIST
18358: LIST
18359: PUSH
18360: LD_INT 1
18362: NEG
18363: PUSH
18364: LD_INT 1
18366: NEG
18367: PUSH
18368: EMPTY
18369: LIST
18370: LIST
18371: PUSH
18372: LD_INT 1
18374: NEG
18375: PUSH
18376: LD_INT 2
18378: NEG
18379: PUSH
18380: EMPTY
18381: LIST
18382: LIST
18383: PUSH
18384: LD_INT 0
18386: PUSH
18387: LD_INT 2
18389: NEG
18390: PUSH
18391: EMPTY
18392: LIST
18393: LIST
18394: PUSH
18395: LD_INT 1
18397: PUSH
18398: LD_INT 1
18400: NEG
18401: PUSH
18402: EMPTY
18403: LIST
18404: LIST
18405: PUSH
18406: LD_INT 2
18408: NEG
18409: PUSH
18410: LD_INT 1
18412: NEG
18413: PUSH
18414: EMPTY
18415: LIST
18416: LIST
18417: PUSH
18418: LD_INT 2
18420: NEG
18421: PUSH
18422: LD_INT 2
18424: NEG
18425: PUSH
18426: EMPTY
18427: LIST
18428: LIST
18429: PUSH
18430: EMPTY
18431: LIST
18432: LIST
18433: LIST
18434: LIST
18435: LIST
18436: LIST
18437: LIST
18438: LIST
18439: LIST
18440: LIST
18441: LIST
18442: LIST
18443: ST_TO_ADDR
// ControlTower1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] ] ;
18444: LD_ADDR_VAR 0 48
18448: PUSH
18449: LD_INT 0
18451: PUSH
18452: LD_INT 0
18454: PUSH
18455: EMPTY
18456: LIST
18457: LIST
18458: PUSH
18459: LD_INT 0
18461: PUSH
18462: LD_INT 1
18464: NEG
18465: PUSH
18466: EMPTY
18467: LIST
18468: LIST
18469: PUSH
18470: LD_INT 1
18472: PUSH
18473: LD_INT 0
18475: PUSH
18476: EMPTY
18477: LIST
18478: LIST
18479: PUSH
18480: LD_INT 1
18482: PUSH
18483: LD_INT 1
18485: PUSH
18486: EMPTY
18487: LIST
18488: LIST
18489: PUSH
18490: LD_INT 0
18492: PUSH
18493: LD_INT 1
18495: PUSH
18496: EMPTY
18497: LIST
18498: LIST
18499: PUSH
18500: LD_INT 1
18502: NEG
18503: PUSH
18504: LD_INT 0
18506: PUSH
18507: EMPTY
18508: LIST
18509: LIST
18510: PUSH
18511: LD_INT 1
18513: NEG
18514: PUSH
18515: LD_INT 1
18517: NEG
18518: PUSH
18519: EMPTY
18520: LIST
18521: LIST
18522: PUSH
18523: LD_INT 1
18525: NEG
18526: PUSH
18527: LD_INT 2
18529: NEG
18530: PUSH
18531: EMPTY
18532: LIST
18533: LIST
18534: PUSH
18535: LD_INT 0
18537: PUSH
18538: LD_INT 2
18540: NEG
18541: PUSH
18542: EMPTY
18543: LIST
18544: LIST
18545: PUSH
18546: LD_INT 1
18548: PUSH
18549: LD_INT 1
18551: NEG
18552: PUSH
18553: EMPTY
18554: LIST
18555: LIST
18556: PUSH
18557: LD_INT 2
18559: PUSH
18560: LD_INT 0
18562: PUSH
18563: EMPTY
18564: LIST
18565: LIST
18566: PUSH
18567: LD_INT 2
18569: PUSH
18570: LD_INT 1
18572: PUSH
18573: EMPTY
18574: LIST
18575: LIST
18576: PUSH
18577: EMPTY
18578: LIST
18579: LIST
18580: LIST
18581: LIST
18582: LIST
18583: LIST
18584: LIST
18585: LIST
18586: LIST
18587: LIST
18588: LIST
18589: LIST
18590: ST_TO_ADDR
// ControlTower2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] ] ;
18591: LD_ADDR_VAR 0 49
18595: PUSH
18596: LD_INT 0
18598: PUSH
18599: LD_INT 0
18601: PUSH
18602: EMPTY
18603: LIST
18604: LIST
18605: PUSH
18606: LD_INT 0
18608: PUSH
18609: LD_INT 1
18611: NEG
18612: PUSH
18613: EMPTY
18614: LIST
18615: LIST
18616: PUSH
18617: LD_INT 1
18619: PUSH
18620: LD_INT 0
18622: PUSH
18623: EMPTY
18624: LIST
18625: LIST
18626: PUSH
18627: LD_INT 1
18629: PUSH
18630: LD_INT 1
18632: PUSH
18633: EMPTY
18634: LIST
18635: LIST
18636: PUSH
18637: LD_INT 0
18639: PUSH
18640: LD_INT 1
18642: PUSH
18643: EMPTY
18644: LIST
18645: LIST
18646: PUSH
18647: LD_INT 1
18649: NEG
18650: PUSH
18651: LD_INT 0
18653: PUSH
18654: EMPTY
18655: LIST
18656: LIST
18657: PUSH
18658: LD_INT 1
18660: NEG
18661: PUSH
18662: LD_INT 1
18664: NEG
18665: PUSH
18666: EMPTY
18667: LIST
18668: LIST
18669: PUSH
18670: LD_INT 1
18672: PUSH
18673: LD_INT 1
18675: NEG
18676: PUSH
18677: EMPTY
18678: LIST
18679: LIST
18680: PUSH
18681: LD_INT 2
18683: PUSH
18684: LD_INT 0
18686: PUSH
18687: EMPTY
18688: LIST
18689: LIST
18690: PUSH
18691: LD_INT 2
18693: PUSH
18694: LD_INT 1
18696: PUSH
18697: EMPTY
18698: LIST
18699: LIST
18700: PUSH
18701: LD_INT 2
18703: PUSH
18704: LD_INT 2
18706: PUSH
18707: EMPTY
18708: LIST
18709: LIST
18710: PUSH
18711: LD_INT 1
18713: PUSH
18714: LD_INT 2
18716: PUSH
18717: EMPTY
18718: LIST
18719: LIST
18720: PUSH
18721: EMPTY
18722: LIST
18723: LIST
18724: LIST
18725: LIST
18726: LIST
18727: LIST
18728: LIST
18729: LIST
18730: LIST
18731: LIST
18732: LIST
18733: LIST
18734: ST_TO_ADDR
// ControlTower3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] ] ;
18735: LD_ADDR_VAR 0 50
18739: PUSH
18740: LD_INT 0
18742: PUSH
18743: LD_INT 0
18745: PUSH
18746: EMPTY
18747: LIST
18748: LIST
18749: PUSH
18750: LD_INT 0
18752: PUSH
18753: LD_INT 1
18755: NEG
18756: PUSH
18757: EMPTY
18758: LIST
18759: LIST
18760: PUSH
18761: LD_INT 1
18763: PUSH
18764: LD_INT 0
18766: PUSH
18767: EMPTY
18768: LIST
18769: LIST
18770: PUSH
18771: LD_INT 1
18773: PUSH
18774: LD_INT 1
18776: PUSH
18777: EMPTY
18778: LIST
18779: LIST
18780: PUSH
18781: LD_INT 0
18783: PUSH
18784: LD_INT 1
18786: PUSH
18787: EMPTY
18788: LIST
18789: LIST
18790: PUSH
18791: LD_INT 1
18793: NEG
18794: PUSH
18795: LD_INT 0
18797: PUSH
18798: EMPTY
18799: LIST
18800: LIST
18801: PUSH
18802: LD_INT 1
18804: NEG
18805: PUSH
18806: LD_INT 1
18808: NEG
18809: PUSH
18810: EMPTY
18811: LIST
18812: LIST
18813: PUSH
18814: LD_INT 2
18816: PUSH
18817: LD_INT 1
18819: PUSH
18820: EMPTY
18821: LIST
18822: LIST
18823: PUSH
18824: LD_INT 2
18826: PUSH
18827: LD_INT 2
18829: PUSH
18830: EMPTY
18831: LIST
18832: LIST
18833: PUSH
18834: LD_INT 1
18836: PUSH
18837: LD_INT 2
18839: PUSH
18840: EMPTY
18841: LIST
18842: LIST
18843: PUSH
18844: LD_INT 0
18846: PUSH
18847: LD_INT 2
18849: PUSH
18850: EMPTY
18851: LIST
18852: LIST
18853: PUSH
18854: LD_INT 1
18856: NEG
18857: PUSH
18858: LD_INT 1
18860: PUSH
18861: EMPTY
18862: LIST
18863: LIST
18864: PUSH
18865: EMPTY
18866: LIST
18867: LIST
18868: LIST
18869: LIST
18870: LIST
18871: LIST
18872: LIST
18873: LIST
18874: LIST
18875: LIST
18876: LIST
18877: LIST
18878: ST_TO_ADDR
// ControlTower4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] ] ;
18879: LD_ADDR_VAR 0 51
18883: PUSH
18884: LD_INT 0
18886: PUSH
18887: LD_INT 0
18889: PUSH
18890: EMPTY
18891: LIST
18892: LIST
18893: PUSH
18894: LD_INT 0
18896: PUSH
18897: LD_INT 1
18899: NEG
18900: PUSH
18901: EMPTY
18902: LIST
18903: LIST
18904: PUSH
18905: LD_INT 1
18907: PUSH
18908: LD_INT 0
18910: PUSH
18911: EMPTY
18912: LIST
18913: LIST
18914: PUSH
18915: LD_INT 1
18917: PUSH
18918: LD_INT 1
18920: PUSH
18921: EMPTY
18922: LIST
18923: LIST
18924: PUSH
18925: LD_INT 0
18927: PUSH
18928: LD_INT 1
18930: PUSH
18931: EMPTY
18932: LIST
18933: LIST
18934: PUSH
18935: LD_INT 1
18937: NEG
18938: PUSH
18939: LD_INT 0
18941: PUSH
18942: EMPTY
18943: LIST
18944: LIST
18945: PUSH
18946: LD_INT 1
18948: NEG
18949: PUSH
18950: LD_INT 1
18952: NEG
18953: PUSH
18954: EMPTY
18955: LIST
18956: LIST
18957: PUSH
18958: LD_INT 1
18960: PUSH
18961: LD_INT 2
18963: PUSH
18964: EMPTY
18965: LIST
18966: LIST
18967: PUSH
18968: LD_INT 0
18970: PUSH
18971: LD_INT 2
18973: PUSH
18974: EMPTY
18975: LIST
18976: LIST
18977: PUSH
18978: LD_INT 1
18980: NEG
18981: PUSH
18982: LD_INT 1
18984: PUSH
18985: EMPTY
18986: LIST
18987: LIST
18988: PUSH
18989: LD_INT 2
18991: NEG
18992: PUSH
18993: LD_INT 0
18995: PUSH
18996: EMPTY
18997: LIST
18998: LIST
18999: PUSH
19000: LD_INT 2
19002: NEG
19003: PUSH
19004: LD_INT 1
19006: NEG
19007: PUSH
19008: EMPTY
19009: LIST
19010: LIST
19011: PUSH
19012: EMPTY
19013: LIST
19014: LIST
19015: LIST
19016: LIST
19017: LIST
19018: LIST
19019: LIST
19020: LIST
19021: LIST
19022: LIST
19023: LIST
19024: LIST
19025: ST_TO_ADDR
// ControlTower5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19026: LD_ADDR_VAR 0 52
19030: PUSH
19031: LD_INT 0
19033: PUSH
19034: LD_INT 0
19036: PUSH
19037: EMPTY
19038: LIST
19039: LIST
19040: PUSH
19041: LD_INT 0
19043: PUSH
19044: LD_INT 1
19046: NEG
19047: PUSH
19048: EMPTY
19049: LIST
19050: LIST
19051: PUSH
19052: LD_INT 1
19054: PUSH
19055: LD_INT 0
19057: PUSH
19058: EMPTY
19059: LIST
19060: LIST
19061: PUSH
19062: LD_INT 1
19064: PUSH
19065: LD_INT 1
19067: PUSH
19068: EMPTY
19069: LIST
19070: LIST
19071: PUSH
19072: LD_INT 0
19074: PUSH
19075: LD_INT 1
19077: PUSH
19078: EMPTY
19079: LIST
19080: LIST
19081: PUSH
19082: LD_INT 1
19084: NEG
19085: PUSH
19086: LD_INT 0
19088: PUSH
19089: EMPTY
19090: LIST
19091: LIST
19092: PUSH
19093: LD_INT 1
19095: NEG
19096: PUSH
19097: LD_INT 1
19099: NEG
19100: PUSH
19101: EMPTY
19102: LIST
19103: LIST
19104: PUSH
19105: LD_INT 1
19107: NEG
19108: PUSH
19109: LD_INT 2
19111: NEG
19112: PUSH
19113: EMPTY
19114: LIST
19115: LIST
19116: PUSH
19117: LD_INT 1
19119: NEG
19120: PUSH
19121: LD_INT 1
19123: PUSH
19124: EMPTY
19125: LIST
19126: LIST
19127: PUSH
19128: LD_INT 2
19130: NEG
19131: PUSH
19132: LD_INT 0
19134: PUSH
19135: EMPTY
19136: LIST
19137: LIST
19138: PUSH
19139: LD_INT 2
19141: NEG
19142: PUSH
19143: LD_INT 1
19145: NEG
19146: PUSH
19147: EMPTY
19148: LIST
19149: LIST
19150: PUSH
19151: LD_INT 2
19153: NEG
19154: PUSH
19155: LD_INT 2
19157: NEG
19158: PUSH
19159: EMPTY
19160: LIST
19161: LIST
19162: PUSH
19163: EMPTY
19164: LIST
19165: LIST
19166: LIST
19167: LIST
19168: LIST
19169: LIST
19170: LIST
19171: LIST
19172: LIST
19173: LIST
19174: LIST
19175: LIST
19176: ST_TO_ADDR
// Barracks0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19177: LD_ADDR_VAR 0 53
19181: PUSH
19182: LD_INT 0
19184: PUSH
19185: LD_INT 0
19187: PUSH
19188: EMPTY
19189: LIST
19190: LIST
19191: PUSH
19192: LD_INT 0
19194: PUSH
19195: LD_INT 1
19197: NEG
19198: PUSH
19199: EMPTY
19200: LIST
19201: LIST
19202: PUSH
19203: LD_INT 1
19205: PUSH
19206: LD_INT 0
19208: PUSH
19209: EMPTY
19210: LIST
19211: LIST
19212: PUSH
19213: LD_INT 1
19215: PUSH
19216: LD_INT 1
19218: PUSH
19219: EMPTY
19220: LIST
19221: LIST
19222: PUSH
19223: LD_INT 0
19225: PUSH
19226: LD_INT 1
19228: PUSH
19229: EMPTY
19230: LIST
19231: LIST
19232: PUSH
19233: LD_INT 1
19235: NEG
19236: PUSH
19237: LD_INT 0
19239: PUSH
19240: EMPTY
19241: LIST
19242: LIST
19243: PUSH
19244: LD_INT 1
19246: NEG
19247: PUSH
19248: LD_INT 1
19250: NEG
19251: PUSH
19252: EMPTY
19253: LIST
19254: LIST
19255: PUSH
19256: LD_INT 1
19258: NEG
19259: PUSH
19260: LD_INT 2
19262: NEG
19263: PUSH
19264: EMPTY
19265: LIST
19266: LIST
19267: PUSH
19268: LD_INT 0
19270: PUSH
19271: LD_INT 2
19273: NEG
19274: PUSH
19275: EMPTY
19276: LIST
19277: LIST
19278: PUSH
19279: LD_INT 1
19281: PUSH
19282: LD_INT 1
19284: NEG
19285: PUSH
19286: EMPTY
19287: LIST
19288: LIST
19289: PUSH
19290: LD_INT 2
19292: PUSH
19293: LD_INT 0
19295: PUSH
19296: EMPTY
19297: LIST
19298: LIST
19299: PUSH
19300: LD_INT 2
19302: PUSH
19303: LD_INT 1
19305: PUSH
19306: EMPTY
19307: LIST
19308: LIST
19309: PUSH
19310: LD_INT 2
19312: PUSH
19313: LD_INT 2
19315: PUSH
19316: EMPTY
19317: LIST
19318: LIST
19319: PUSH
19320: LD_INT 1
19322: PUSH
19323: LD_INT 2
19325: PUSH
19326: EMPTY
19327: LIST
19328: LIST
19329: PUSH
19330: LD_INT 0
19332: PUSH
19333: LD_INT 2
19335: PUSH
19336: EMPTY
19337: LIST
19338: LIST
19339: PUSH
19340: LD_INT 1
19342: NEG
19343: PUSH
19344: LD_INT 1
19346: PUSH
19347: EMPTY
19348: LIST
19349: LIST
19350: PUSH
19351: LD_INT 2
19353: NEG
19354: PUSH
19355: LD_INT 0
19357: PUSH
19358: EMPTY
19359: LIST
19360: LIST
19361: PUSH
19362: LD_INT 2
19364: NEG
19365: PUSH
19366: LD_INT 1
19368: NEG
19369: PUSH
19370: EMPTY
19371: LIST
19372: LIST
19373: PUSH
19374: LD_INT 2
19376: NEG
19377: PUSH
19378: LD_INT 2
19380: NEG
19381: PUSH
19382: EMPTY
19383: LIST
19384: LIST
19385: PUSH
19386: EMPTY
19387: LIST
19388: LIST
19389: LIST
19390: LIST
19391: LIST
19392: LIST
19393: LIST
19394: LIST
19395: LIST
19396: LIST
19397: LIST
19398: LIST
19399: LIST
19400: LIST
19401: LIST
19402: LIST
19403: LIST
19404: LIST
19405: LIST
19406: ST_TO_ADDR
// Barracks1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19407: LD_ADDR_VAR 0 54
19411: PUSH
19412: LD_INT 0
19414: PUSH
19415: LD_INT 0
19417: PUSH
19418: EMPTY
19419: LIST
19420: LIST
19421: PUSH
19422: LD_INT 0
19424: PUSH
19425: LD_INT 1
19427: NEG
19428: PUSH
19429: EMPTY
19430: LIST
19431: LIST
19432: PUSH
19433: LD_INT 1
19435: PUSH
19436: LD_INT 0
19438: PUSH
19439: EMPTY
19440: LIST
19441: LIST
19442: PUSH
19443: LD_INT 1
19445: PUSH
19446: LD_INT 1
19448: PUSH
19449: EMPTY
19450: LIST
19451: LIST
19452: PUSH
19453: LD_INT 0
19455: PUSH
19456: LD_INT 1
19458: PUSH
19459: EMPTY
19460: LIST
19461: LIST
19462: PUSH
19463: LD_INT 1
19465: NEG
19466: PUSH
19467: LD_INT 0
19469: PUSH
19470: EMPTY
19471: LIST
19472: LIST
19473: PUSH
19474: LD_INT 1
19476: NEG
19477: PUSH
19478: LD_INT 1
19480: NEG
19481: PUSH
19482: EMPTY
19483: LIST
19484: LIST
19485: PUSH
19486: LD_INT 1
19488: NEG
19489: PUSH
19490: LD_INT 2
19492: NEG
19493: PUSH
19494: EMPTY
19495: LIST
19496: LIST
19497: PUSH
19498: LD_INT 0
19500: PUSH
19501: LD_INT 2
19503: NEG
19504: PUSH
19505: EMPTY
19506: LIST
19507: LIST
19508: PUSH
19509: LD_INT 1
19511: PUSH
19512: LD_INT 1
19514: NEG
19515: PUSH
19516: EMPTY
19517: LIST
19518: LIST
19519: PUSH
19520: LD_INT 2
19522: PUSH
19523: LD_INT 0
19525: PUSH
19526: EMPTY
19527: LIST
19528: LIST
19529: PUSH
19530: LD_INT 2
19532: PUSH
19533: LD_INT 1
19535: PUSH
19536: EMPTY
19537: LIST
19538: LIST
19539: PUSH
19540: LD_INT 2
19542: PUSH
19543: LD_INT 2
19545: PUSH
19546: EMPTY
19547: LIST
19548: LIST
19549: PUSH
19550: LD_INT 1
19552: PUSH
19553: LD_INT 2
19555: PUSH
19556: EMPTY
19557: LIST
19558: LIST
19559: PUSH
19560: LD_INT 0
19562: PUSH
19563: LD_INT 2
19565: PUSH
19566: EMPTY
19567: LIST
19568: LIST
19569: PUSH
19570: LD_INT 1
19572: NEG
19573: PUSH
19574: LD_INT 1
19576: PUSH
19577: EMPTY
19578: LIST
19579: LIST
19580: PUSH
19581: LD_INT 2
19583: NEG
19584: PUSH
19585: LD_INT 0
19587: PUSH
19588: EMPTY
19589: LIST
19590: LIST
19591: PUSH
19592: LD_INT 2
19594: NEG
19595: PUSH
19596: LD_INT 1
19598: NEG
19599: PUSH
19600: EMPTY
19601: LIST
19602: LIST
19603: PUSH
19604: LD_INT 2
19606: NEG
19607: PUSH
19608: LD_INT 2
19610: NEG
19611: PUSH
19612: EMPTY
19613: LIST
19614: LIST
19615: PUSH
19616: EMPTY
19617: LIST
19618: LIST
19619: LIST
19620: LIST
19621: LIST
19622: LIST
19623: LIST
19624: LIST
19625: LIST
19626: LIST
19627: LIST
19628: LIST
19629: LIST
19630: LIST
19631: LIST
19632: LIST
19633: LIST
19634: LIST
19635: LIST
19636: ST_TO_ADDR
// Barracks2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19637: LD_ADDR_VAR 0 55
19641: PUSH
19642: LD_INT 0
19644: PUSH
19645: LD_INT 0
19647: PUSH
19648: EMPTY
19649: LIST
19650: LIST
19651: PUSH
19652: LD_INT 0
19654: PUSH
19655: LD_INT 1
19657: NEG
19658: PUSH
19659: EMPTY
19660: LIST
19661: LIST
19662: PUSH
19663: LD_INT 1
19665: PUSH
19666: LD_INT 0
19668: PUSH
19669: EMPTY
19670: LIST
19671: LIST
19672: PUSH
19673: LD_INT 1
19675: PUSH
19676: LD_INT 1
19678: PUSH
19679: EMPTY
19680: LIST
19681: LIST
19682: PUSH
19683: LD_INT 0
19685: PUSH
19686: LD_INT 1
19688: PUSH
19689: EMPTY
19690: LIST
19691: LIST
19692: PUSH
19693: LD_INT 1
19695: NEG
19696: PUSH
19697: LD_INT 0
19699: PUSH
19700: EMPTY
19701: LIST
19702: LIST
19703: PUSH
19704: LD_INT 1
19706: NEG
19707: PUSH
19708: LD_INT 1
19710: NEG
19711: PUSH
19712: EMPTY
19713: LIST
19714: LIST
19715: PUSH
19716: LD_INT 1
19718: NEG
19719: PUSH
19720: LD_INT 2
19722: NEG
19723: PUSH
19724: EMPTY
19725: LIST
19726: LIST
19727: PUSH
19728: LD_INT 0
19730: PUSH
19731: LD_INT 2
19733: NEG
19734: PUSH
19735: EMPTY
19736: LIST
19737: LIST
19738: PUSH
19739: LD_INT 1
19741: PUSH
19742: LD_INT 1
19744: NEG
19745: PUSH
19746: EMPTY
19747: LIST
19748: LIST
19749: PUSH
19750: LD_INT 2
19752: PUSH
19753: LD_INT 0
19755: PUSH
19756: EMPTY
19757: LIST
19758: LIST
19759: PUSH
19760: LD_INT 2
19762: PUSH
19763: LD_INT 1
19765: PUSH
19766: EMPTY
19767: LIST
19768: LIST
19769: PUSH
19770: LD_INT 2
19772: PUSH
19773: LD_INT 2
19775: PUSH
19776: EMPTY
19777: LIST
19778: LIST
19779: PUSH
19780: LD_INT 1
19782: PUSH
19783: LD_INT 2
19785: PUSH
19786: EMPTY
19787: LIST
19788: LIST
19789: PUSH
19790: LD_INT 0
19792: PUSH
19793: LD_INT 2
19795: PUSH
19796: EMPTY
19797: LIST
19798: LIST
19799: PUSH
19800: LD_INT 1
19802: NEG
19803: PUSH
19804: LD_INT 1
19806: PUSH
19807: EMPTY
19808: LIST
19809: LIST
19810: PUSH
19811: LD_INT 2
19813: NEG
19814: PUSH
19815: LD_INT 0
19817: PUSH
19818: EMPTY
19819: LIST
19820: LIST
19821: PUSH
19822: LD_INT 2
19824: NEG
19825: PUSH
19826: LD_INT 1
19828: NEG
19829: PUSH
19830: EMPTY
19831: LIST
19832: LIST
19833: PUSH
19834: LD_INT 2
19836: NEG
19837: PUSH
19838: LD_INT 2
19840: NEG
19841: PUSH
19842: EMPTY
19843: LIST
19844: LIST
19845: PUSH
19846: EMPTY
19847: LIST
19848: LIST
19849: LIST
19850: LIST
19851: LIST
19852: LIST
19853: LIST
19854: LIST
19855: LIST
19856: LIST
19857: LIST
19858: LIST
19859: LIST
19860: LIST
19861: LIST
19862: LIST
19863: LIST
19864: LIST
19865: LIST
19866: ST_TO_ADDR
// Barracks3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19867: LD_ADDR_VAR 0 56
19871: PUSH
19872: LD_INT 0
19874: PUSH
19875: LD_INT 0
19877: PUSH
19878: EMPTY
19879: LIST
19880: LIST
19881: PUSH
19882: LD_INT 0
19884: PUSH
19885: LD_INT 1
19887: NEG
19888: PUSH
19889: EMPTY
19890: LIST
19891: LIST
19892: PUSH
19893: LD_INT 1
19895: PUSH
19896: LD_INT 0
19898: PUSH
19899: EMPTY
19900: LIST
19901: LIST
19902: PUSH
19903: LD_INT 1
19905: PUSH
19906: LD_INT 1
19908: PUSH
19909: EMPTY
19910: LIST
19911: LIST
19912: PUSH
19913: LD_INT 0
19915: PUSH
19916: LD_INT 1
19918: PUSH
19919: EMPTY
19920: LIST
19921: LIST
19922: PUSH
19923: LD_INT 1
19925: NEG
19926: PUSH
19927: LD_INT 0
19929: PUSH
19930: EMPTY
19931: LIST
19932: LIST
19933: PUSH
19934: LD_INT 1
19936: NEG
19937: PUSH
19938: LD_INT 1
19940: NEG
19941: PUSH
19942: EMPTY
19943: LIST
19944: LIST
19945: PUSH
19946: LD_INT 1
19948: NEG
19949: PUSH
19950: LD_INT 2
19952: NEG
19953: PUSH
19954: EMPTY
19955: LIST
19956: LIST
19957: PUSH
19958: LD_INT 0
19960: PUSH
19961: LD_INT 2
19963: NEG
19964: PUSH
19965: EMPTY
19966: LIST
19967: LIST
19968: PUSH
19969: LD_INT 1
19971: PUSH
19972: LD_INT 1
19974: NEG
19975: PUSH
19976: EMPTY
19977: LIST
19978: LIST
19979: PUSH
19980: LD_INT 2
19982: PUSH
19983: LD_INT 0
19985: PUSH
19986: EMPTY
19987: LIST
19988: LIST
19989: PUSH
19990: LD_INT 2
19992: PUSH
19993: LD_INT 1
19995: PUSH
19996: EMPTY
19997: LIST
19998: LIST
19999: PUSH
20000: LD_INT 2
20002: PUSH
20003: LD_INT 2
20005: PUSH
20006: EMPTY
20007: LIST
20008: LIST
20009: PUSH
20010: LD_INT 1
20012: PUSH
20013: LD_INT 2
20015: PUSH
20016: EMPTY
20017: LIST
20018: LIST
20019: PUSH
20020: LD_INT 0
20022: PUSH
20023: LD_INT 2
20025: PUSH
20026: EMPTY
20027: LIST
20028: LIST
20029: PUSH
20030: LD_INT 1
20032: NEG
20033: PUSH
20034: LD_INT 1
20036: PUSH
20037: EMPTY
20038: LIST
20039: LIST
20040: PUSH
20041: LD_INT 2
20043: NEG
20044: PUSH
20045: LD_INT 0
20047: PUSH
20048: EMPTY
20049: LIST
20050: LIST
20051: PUSH
20052: LD_INT 2
20054: NEG
20055: PUSH
20056: LD_INT 1
20058: NEG
20059: PUSH
20060: EMPTY
20061: LIST
20062: LIST
20063: PUSH
20064: LD_INT 2
20066: NEG
20067: PUSH
20068: LD_INT 2
20070: NEG
20071: PUSH
20072: EMPTY
20073: LIST
20074: LIST
20075: PUSH
20076: EMPTY
20077: LIST
20078: LIST
20079: LIST
20080: LIST
20081: LIST
20082: LIST
20083: LIST
20084: LIST
20085: LIST
20086: LIST
20087: LIST
20088: LIST
20089: LIST
20090: LIST
20091: LIST
20092: LIST
20093: LIST
20094: LIST
20095: LIST
20096: ST_TO_ADDR
// Barracks4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
20097: LD_ADDR_VAR 0 57
20101: PUSH
20102: LD_INT 0
20104: PUSH
20105: LD_INT 0
20107: PUSH
20108: EMPTY
20109: LIST
20110: LIST
20111: PUSH
20112: LD_INT 0
20114: PUSH
20115: LD_INT 1
20117: NEG
20118: PUSH
20119: EMPTY
20120: LIST
20121: LIST
20122: PUSH
20123: LD_INT 1
20125: PUSH
20126: LD_INT 0
20128: PUSH
20129: EMPTY
20130: LIST
20131: LIST
20132: PUSH
20133: LD_INT 1
20135: PUSH
20136: LD_INT 1
20138: PUSH
20139: EMPTY
20140: LIST
20141: LIST
20142: PUSH
20143: LD_INT 0
20145: PUSH
20146: LD_INT 1
20148: PUSH
20149: EMPTY
20150: LIST
20151: LIST
20152: PUSH
20153: LD_INT 1
20155: NEG
20156: PUSH
20157: LD_INT 0
20159: PUSH
20160: EMPTY
20161: LIST
20162: LIST
20163: PUSH
20164: LD_INT 1
20166: NEG
20167: PUSH
20168: LD_INT 1
20170: NEG
20171: PUSH
20172: EMPTY
20173: LIST
20174: LIST
20175: PUSH
20176: LD_INT 1
20178: NEG
20179: PUSH
20180: LD_INT 2
20182: NEG
20183: PUSH
20184: EMPTY
20185: LIST
20186: LIST
20187: PUSH
20188: LD_INT 0
20190: PUSH
20191: LD_INT 2
20193: NEG
20194: PUSH
20195: EMPTY
20196: LIST
20197: LIST
20198: PUSH
20199: LD_INT 1
20201: PUSH
20202: LD_INT 1
20204: NEG
20205: PUSH
20206: EMPTY
20207: LIST
20208: LIST
20209: PUSH
20210: LD_INT 2
20212: PUSH
20213: LD_INT 0
20215: PUSH
20216: EMPTY
20217: LIST
20218: LIST
20219: PUSH
20220: LD_INT 2
20222: PUSH
20223: LD_INT 1
20225: PUSH
20226: EMPTY
20227: LIST
20228: LIST
20229: PUSH
20230: LD_INT 2
20232: PUSH
20233: LD_INT 2
20235: PUSH
20236: EMPTY
20237: LIST
20238: LIST
20239: PUSH
20240: LD_INT 1
20242: PUSH
20243: LD_INT 2
20245: PUSH
20246: EMPTY
20247: LIST
20248: LIST
20249: PUSH
20250: LD_INT 0
20252: PUSH
20253: LD_INT 2
20255: PUSH
20256: EMPTY
20257: LIST
20258: LIST
20259: PUSH
20260: LD_INT 1
20262: NEG
20263: PUSH
20264: LD_INT 1
20266: PUSH
20267: EMPTY
20268: LIST
20269: LIST
20270: PUSH
20271: LD_INT 2
20273: NEG
20274: PUSH
20275: LD_INT 0
20277: PUSH
20278: EMPTY
20279: LIST
20280: LIST
20281: PUSH
20282: LD_INT 2
20284: NEG
20285: PUSH
20286: LD_INT 1
20288: NEG
20289: PUSH
20290: EMPTY
20291: LIST
20292: LIST
20293: PUSH
20294: LD_INT 2
20296: NEG
20297: PUSH
20298: LD_INT 2
20300: NEG
20301: PUSH
20302: EMPTY
20303: LIST
20304: LIST
20305: PUSH
20306: EMPTY
20307: LIST
20308: LIST
20309: LIST
20310: LIST
20311: LIST
20312: LIST
20313: LIST
20314: LIST
20315: LIST
20316: LIST
20317: LIST
20318: LIST
20319: LIST
20320: LIST
20321: LIST
20322: LIST
20323: LIST
20324: LIST
20325: LIST
20326: ST_TO_ADDR
// Barracks5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
20327: LD_ADDR_VAR 0 58
20331: PUSH
20332: LD_INT 0
20334: PUSH
20335: LD_INT 0
20337: PUSH
20338: EMPTY
20339: LIST
20340: LIST
20341: PUSH
20342: LD_INT 0
20344: PUSH
20345: LD_INT 1
20347: NEG
20348: PUSH
20349: EMPTY
20350: LIST
20351: LIST
20352: PUSH
20353: LD_INT 1
20355: PUSH
20356: LD_INT 0
20358: PUSH
20359: EMPTY
20360: LIST
20361: LIST
20362: PUSH
20363: LD_INT 1
20365: PUSH
20366: LD_INT 1
20368: PUSH
20369: EMPTY
20370: LIST
20371: LIST
20372: PUSH
20373: LD_INT 0
20375: PUSH
20376: LD_INT 1
20378: PUSH
20379: EMPTY
20380: LIST
20381: LIST
20382: PUSH
20383: LD_INT 1
20385: NEG
20386: PUSH
20387: LD_INT 0
20389: PUSH
20390: EMPTY
20391: LIST
20392: LIST
20393: PUSH
20394: LD_INT 1
20396: NEG
20397: PUSH
20398: LD_INT 1
20400: NEG
20401: PUSH
20402: EMPTY
20403: LIST
20404: LIST
20405: PUSH
20406: LD_INT 1
20408: NEG
20409: PUSH
20410: LD_INT 2
20412: NEG
20413: PUSH
20414: EMPTY
20415: LIST
20416: LIST
20417: PUSH
20418: LD_INT 0
20420: PUSH
20421: LD_INT 2
20423: NEG
20424: PUSH
20425: EMPTY
20426: LIST
20427: LIST
20428: PUSH
20429: LD_INT 1
20431: PUSH
20432: LD_INT 1
20434: NEG
20435: PUSH
20436: EMPTY
20437: LIST
20438: LIST
20439: PUSH
20440: LD_INT 2
20442: PUSH
20443: LD_INT 0
20445: PUSH
20446: EMPTY
20447: LIST
20448: LIST
20449: PUSH
20450: LD_INT 2
20452: PUSH
20453: LD_INT 1
20455: PUSH
20456: EMPTY
20457: LIST
20458: LIST
20459: PUSH
20460: LD_INT 2
20462: PUSH
20463: LD_INT 2
20465: PUSH
20466: EMPTY
20467: LIST
20468: LIST
20469: PUSH
20470: LD_INT 1
20472: PUSH
20473: LD_INT 2
20475: PUSH
20476: EMPTY
20477: LIST
20478: LIST
20479: PUSH
20480: LD_INT 0
20482: PUSH
20483: LD_INT 2
20485: PUSH
20486: EMPTY
20487: LIST
20488: LIST
20489: PUSH
20490: LD_INT 1
20492: NEG
20493: PUSH
20494: LD_INT 1
20496: PUSH
20497: EMPTY
20498: LIST
20499: LIST
20500: PUSH
20501: LD_INT 2
20503: NEG
20504: PUSH
20505: LD_INT 0
20507: PUSH
20508: EMPTY
20509: LIST
20510: LIST
20511: PUSH
20512: LD_INT 2
20514: NEG
20515: PUSH
20516: LD_INT 1
20518: NEG
20519: PUSH
20520: EMPTY
20521: LIST
20522: LIST
20523: PUSH
20524: LD_INT 2
20526: NEG
20527: PUSH
20528: LD_INT 2
20530: NEG
20531: PUSH
20532: EMPTY
20533: LIST
20534: LIST
20535: PUSH
20536: EMPTY
20537: LIST
20538: LIST
20539: LIST
20540: LIST
20541: LIST
20542: LIST
20543: LIST
20544: LIST
20545: LIST
20546: LIST
20547: LIST
20548: LIST
20549: LIST
20550: LIST
20551: LIST
20552: LIST
20553: LIST
20554: LIST
20555: LIST
20556: ST_TO_ADDR
// Bunker0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20557: LD_ADDR_VAR 0 59
20561: PUSH
20562: LD_INT 0
20564: PUSH
20565: LD_INT 0
20567: PUSH
20568: EMPTY
20569: LIST
20570: LIST
20571: PUSH
20572: LD_INT 0
20574: PUSH
20575: LD_INT 1
20577: NEG
20578: PUSH
20579: EMPTY
20580: LIST
20581: LIST
20582: PUSH
20583: LD_INT 1
20585: PUSH
20586: LD_INT 0
20588: PUSH
20589: EMPTY
20590: LIST
20591: LIST
20592: PUSH
20593: LD_INT 1
20595: PUSH
20596: LD_INT 1
20598: PUSH
20599: EMPTY
20600: LIST
20601: LIST
20602: PUSH
20603: LD_INT 0
20605: PUSH
20606: LD_INT 1
20608: PUSH
20609: EMPTY
20610: LIST
20611: LIST
20612: PUSH
20613: LD_INT 1
20615: NEG
20616: PUSH
20617: LD_INT 0
20619: PUSH
20620: EMPTY
20621: LIST
20622: LIST
20623: PUSH
20624: LD_INT 1
20626: NEG
20627: PUSH
20628: LD_INT 1
20630: NEG
20631: PUSH
20632: EMPTY
20633: LIST
20634: LIST
20635: PUSH
20636: EMPTY
20637: LIST
20638: LIST
20639: LIST
20640: LIST
20641: LIST
20642: LIST
20643: LIST
20644: ST_TO_ADDR
// Bunker1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20645: LD_ADDR_VAR 0 60
20649: PUSH
20650: LD_INT 0
20652: PUSH
20653: LD_INT 0
20655: PUSH
20656: EMPTY
20657: LIST
20658: LIST
20659: PUSH
20660: LD_INT 0
20662: PUSH
20663: LD_INT 1
20665: NEG
20666: PUSH
20667: EMPTY
20668: LIST
20669: LIST
20670: PUSH
20671: LD_INT 1
20673: PUSH
20674: LD_INT 0
20676: PUSH
20677: EMPTY
20678: LIST
20679: LIST
20680: PUSH
20681: LD_INT 1
20683: PUSH
20684: LD_INT 1
20686: PUSH
20687: EMPTY
20688: LIST
20689: LIST
20690: PUSH
20691: LD_INT 0
20693: PUSH
20694: LD_INT 1
20696: PUSH
20697: EMPTY
20698: LIST
20699: LIST
20700: PUSH
20701: LD_INT 1
20703: NEG
20704: PUSH
20705: LD_INT 0
20707: PUSH
20708: EMPTY
20709: LIST
20710: LIST
20711: PUSH
20712: LD_INT 1
20714: NEG
20715: PUSH
20716: LD_INT 1
20718: NEG
20719: PUSH
20720: EMPTY
20721: LIST
20722: LIST
20723: PUSH
20724: EMPTY
20725: LIST
20726: LIST
20727: LIST
20728: LIST
20729: LIST
20730: LIST
20731: LIST
20732: ST_TO_ADDR
// Bunker2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20733: LD_ADDR_VAR 0 61
20737: PUSH
20738: LD_INT 0
20740: PUSH
20741: LD_INT 0
20743: PUSH
20744: EMPTY
20745: LIST
20746: LIST
20747: PUSH
20748: LD_INT 0
20750: PUSH
20751: LD_INT 1
20753: NEG
20754: PUSH
20755: EMPTY
20756: LIST
20757: LIST
20758: PUSH
20759: LD_INT 1
20761: PUSH
20762: LD_INT 0
20764: PUSH
20765: EMPTY
20766: LIST
20767: LIST
20768: PUSH
20769: LD_INT 1
20771: PUSH
20772: LD_INT 1
20774: PUSH
20775: EMPTY
20776: LIST
20777: LIST
20778: PUSH
20779: LD_INT 0
20781: PUSH
20782: LD_INT 1
20784: PUSH
20785: EMPTY
20786: LIST
20787: LIST
20788: PUSH
20789: LD_INT 1
20791: NEG
20792: PUSH
20793: LD_INT 0
20795: PUSH
20796: EMPTY
20797: LIST
20798: LIST
20799: PUSH
20800: LD_INT 1
20802: NEG
20803: PUSH
20804: LD_INT 1
20806: NEG
20807: PUSH
20808: EMPTY
20809: LIST
20810: LIST
20811: PUSH
20812: EMPTY
20813: LIST
20814: LIST
20815: LIST
20816: LIST
20817: LIST
20818: LIST
20819: LIST
20820: ST_TO_ADDR
// Bunker3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20821: LD_ADDR_VAR 0 62
20825: PUSH
20826: LD_INT 0
20828: PUSH
20829: LD_INT 0
20831: PUSH
20832: EMPTY
20833: LIST
20834: LIST
20835: PUSH
20836: LD_INT 0
20838: PUSH
20839: LD_INT 1
20841: NEG
20842: PUSH
20843: EMPTY
20844: LIST
20845: LIST
20846: PUSH
20847: LD_INT 1
20849: PUSH
20850: LD_INT 0
20852: PUSH
20853: EMPTY
20854: LIST
20855: LIST
20856: PUSH
20857: LD_INT 1
20859: PUSH
20860: LD_INT 1
20862: PUSH
20863: EMPTY
20864: LIST
20865: LIST
20866: PUSH
20867: LD_INT 0
20869: PUSH
20870: LD_INT 1
20872: PUSH
20873: EMPTY
20874: LIST
20875: LIST
20876: PUSH
20877: LD_INT 1
20879: NEG
20880: PUSH
20881: LD_INT 0
20883: PUSH
20884: EMPTY
20885: LIST
20886: LIST
20887: PUSH
20888: LD_INT 1
20890: NEG
20891: PUSH
20892: LD_INT 1
20894: NEG
20895: PUSH
20896: EMPTY
20897: LIST
20898: LIST
20899: PUSH
20900: EMPTY
20901: LIST
20902: LIST
20903: LIST
20904: LIST
20905: LIST
20906: LIST
20907: LIST
20908: ST_TO_ADDR
// Bunker4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20909: LD_ADDR_VAR 0 63
20913: PUSH
20914: LD_INT 0
20916: PUSH
20917: LD_INT 0
20919: PUSH
20920: EMPTY
20921: LIST
20922: LIST
20923: PUSH
20924: LD_INT 0
20926: PUSH
20927: LD_INT 1
20929: NEG
20930: PUSH
20931: EMPTY
20932: LIST
20933: LIST
20934: PUSH
20935: LD_INT 1
20937: PUSH
20938: LD_INT 0
20940: PUSH
20941: EMPTY
20942: LIST
20943: LIST
20944: PUSH
20945: LD_INT 1
20947: PUSH
20948: LD_INT 1
20950: PUSH
20951: EMPTY
20952: LIST
20953: LIST
20954: PUSH
20955: LD_INT 0
20957: PUSH
20958: LD_INT 1
20960: PUSH
20961: EMPTY
20962: LIST
20963: LIST
20964: PUSH
20965: LD_INT 1
20967: NEG
20968: PUSH
20969: LD_INT 0
20971: PUSH
20972: EMPTY
20973: LIST
20974: LIST
20975: PUSH
20976: LD_INT 1
20978: NEG
20979: PUSH
20980: LD_INT 1
20982: NEG
20983: PUSH
20984: EMPTY
20985: LIST
20986: LIST
20987: PUSH
20988: EMPTY
20989: LIST
20990: LIST
20991: LIST
20992: LIST
20993: LIST
20994: LIST
20995: LIST
20996: ST_TO_ADDR
// Bunker5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20997: LD_ADDR_VAR 0 64
21001: PUSH
21002: LD_INT 0
21004: PUSH
21005: LD_INT 0
21007: PUSH
21008: EMPTY
21009: LIST
21010: LIST
21011: PUSH
21012: LD_INT 0
21014: PUSH
21015: LD_INT 1
21017: NEG
21018: PUSH
21019: EMPTY
21020: LIST
21021: LIST
21022: PUSH
21023: LD_INT 1
21025: PUSH
21026: LD_INT 0
21028: PUSH
21029: EMPTY
21030: LIST
21031: LIST
21032: PUSH
21033: LD_INT 1
21035: PUSH
21036: LD_INT 1
21038: PUSH
21039: EMPTY
21040: LIST
21041: LIST
21042: PUSH
21043: LD_INT 0
21045: PUSH
21046: LD_INT 1
21048: PUSH
21049: EMPTY
21050: LIST
21051: LIST
21052: PUSH
21053: LD_INT 1
21055: NEG
21056: PUSH
21057: LD_INT 0
21059: PUSH
21060: EMPTY
21061: LIST
21062: LIST
21063: PUSH
21064: LD_INT 1
21066: NEG
21067: PUSH
21068: LD_INT 1
21070: NEG
21071: PUSH
21072: EMPTY
21073: LIST
21074: LIST
21075: PUSH
21076: EMPTY
21077: LIST
21078: LIST
21079: LIST
21080: LIST
21081: LIST
21082: LIST
21083: LIST
21084: ST_TO_ADDR
// end ; 1 :
21085: GO 26982
21087: LD_INT 1
21089: DOUBLE
21090: EQUAL
21091: IFTRUE 21095
21093: GO 23718
21095: POP
// begin DepotAm0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
21096: LD_ADDR_VAR 0 11
21100: PUSH
21101: LD_INT 1
21103: NEG
21104: PUSH
21105: LD_INT 3
21107: NEG
21108: PUSH
21109: EMPTY
21110: LIST
21111: LIST
21112: PUSH
21113: LD_INT 0
21115: PUSH
21116: LD_INT 3
21118: NEG
21119: PUSH
21120: EMPTY
21121: LIST
21122: LIST
21123: PUSH
21124: LD_INT 1
21126: PUSH
21127: LD_INT 2
21129: NEG
21130: PUSH
21131: EMPTY
21132: LIST
21133: LIST
21134: PUSH
21135: EMPTY
21136: LIST
21137: LIST
21138: LIST
21139: ST_TO_ADDR
// DepotAm1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
21140: LD_ADDR_VAR 0 12
21144: PUSH
21145: LD_INT 2
21147: PUSH
21148: LD_INT 1
21150: NEG
21151: PUSH
21152: EMPTY
21153: LIST
21154: LIST
21155: PUSH
21156: LD_INT 3
21158: PUSH
21159: LD_INT 0
21161: PUSH
21162: EMPTY
21163: LIST
21164: LIST
21165: PUSH
21166: LD_INT 3
21168: PUSH
21169: LD_INT 1
21171: PUSH
21172: EMPTY
21173: LIST
21174: LIST
21175: PUSH
21176: EMPTY
21177: LIST
21178: LIST
21179: LIST
21180: ST_TO_ADDR
// DepotAm2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
21181: LD_ADDR_VAR 0 13
21185: PUSH
21186: LD_INT 3
21188: PUSH
21189: LD_INT 2
21191: PUSH
21192: EMPTY
21193: LIST
21194: LIST
21195: PUSH
21196: LD_INT 3
21198: PUSH
21199: LD_INT 3
21201: PUSH
21202: EMPTY
21203: LIST
21204: LIST
21205: PUSH
21206: LD_INT 2
21208: PUSH
21209: LD_INT 3
21211: PUSH
21212: EMPTY
21213: LIST
21214: LIST
21215: PUSH
21216: EMPTY
21217: LIST
21218: LIST
21219: LIST
21220: ST_TO_ADDR
// DepotAm3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
21221: LD_ADDR_VAR 0 14
21225: PUSH
21226: LD_INT 1
21228: PUSH
21229: LD_INT 3
21231: PUSH
21232: EMPTY
21233: LIST
21234: LIST
21235: PUSH
21236: LD_INT 0
21238: PUSH
21239: LD_INT 3
21241: PUSH
21242: EMPTY
21243: LIST
21244: LIST
21245: PUSH
21246: LD_INT 1
21248: NEG
21249: PUSH
21250: LD_INT 2
21252: PUSH
21253: EMPTY
21254: LIST
21255: LIST
21256: PUSH
21257: EMPTY
21258: LIST
21259: LIST
21260: LIST
21261: ST_TO_ADDR
// DepotAm4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
21262: LD_ADDR_VAR 0 15
21266: PUSH
21267: LD_INT 2
21269: NEG
21270: PUSH
21271: LD_INT 1
21273: PUSH
21274: EMPTY
21275: LIST
21276: LIST
21277: PUSH
21278: LD_INT 3
21280: NEG
21281: PUSH
21282: LD_INT 0
21284: PUSH
21285: EMPTY
21286: LIST
21287: LIST
21288: PUSH
21289: LD_INT 3
21291: NEG
21292: PUSH
21293: LD_INT 1
21295: NEG
21296: PUSH
21297: EMPTY
21298: LIST
21299: LIST
21300: PUSH
21301: EMPTY
21302: LIST
21303: LIST
21304: LIST
21305: ST_TO_ADDR
// DepotAm5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
21306: LD_ADDR_VAR 0 16
21310: PUSH
21311: LD_INT 2
21313: NEG
21314: PUSH
21315: LD_INT 3
21317: NEG
21318: PUSH
21319: EMPTY
21320: LIST
21321: LIST
21322: PUSH
21323: LD_INT 3
21325: NEG
21326: PUSH
21327: LD_INT 2
21329: NEG
21330: PUSH
21331: EMPTY
21332: LIST
21333: LIST
21334: PUSH
21335: LD_INT 3
21337: NEG
21338: PUSH
21339: LD_INT 3
21341: NEG
21342: PUSH
21343: EMPTY
21344: LIST
21345: LIST
21346: PUSH
21347: EMPTY
21348: LIST
21349: LIST
21350: LIST
21351: ST_TO_ADDR
// DepotAr0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
21352: LD_ADDR_VAR 0 17
21356: PUSH
21357: LD_INT 1
21359: NEG
21360: PUSH
21361: LD_INT 3
21363: NEG
21364: PUSH
21365: EMPTY
21366: LIST
21367: LIST
21368: PUSH
21369: LD_INT 0
21371: PUSH
21372: LD_INT 3
21374: NEG
21375: PUSH
21376: EMPTY
21377: LIST
21378: LIST
21379: PUSH
21380: LD_INT 1
21382: PUSH
21383: LD_INT 2
21385: NEG
21386: PUSH
21387: EMPTY
21388: LIST
21389: LIST
21390: PUSH
21391: EMPTY
21392: LIST
21393: LIST
21394: LIST
21395: ST_TO_ADDR
// DepotAr1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
21396: LD_ADDR_VAR 0 18
21400: PUSH
21401: LD_INT 2
21403: PUSH
21404: LD_INT 1
21406: NEG
21407: PUSH
21408: EMPTY
21409: LIST
21410: LIST
21411: PUSH
21412: LD_INT 3
21414: PUSH
21415: LD_INT 0
21417: PUSH
21418: EMPTY
21419: LIST
21420: LIST
21421: PUSH
21422: LD_INT 3
21424: PUSH
21425: LD_INT 1
21427: PUSH
21428: EMPTY
21429: LIST
21430: LIST
21431: PUSH
21432: EMPTY
21433: LIST
21434: LIST
21435: LIST
21436: ST_TO_ADDR
// DepotAr2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
21437: LD_ADDR_VAR 0 19
21441: PUSH
21442: LD_INT 3
21444: PUSH
21445: LD_INT 2
21447: PUSH
21448: EMPTY
21449: LIST
21450: LIST
21451: PUSH
21452: LD_INT 3
21454: PUSH
21455: LD_INT 3
21457: PUSH
21458: EMPTY
21459: LIST
21460: LIST
21461: PUSH
21462: LD_INT 2
21464: PUSH
21465: LD_INT 3
21467: PUSH
21468: EMPTY
21469: LIST
21470: LIST
21471: PUSH
21472: EMPTY
21473: LIST
21474: LIST
21475: LIST
21476: ST_TO_ADDR
// DepotAr3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
21477: LD_ADDR_VAR 0 20
21481: PUSH
21482: LD_INT 1
21484: PUSH
21485: LD_INT 3
21487: PUSH
21488: EMPTY
21489: LIST
21490: LIST
21491: PUSH
21492: LD_INT 0
21494: PUSH
21495: LD_INT 3
21497: PUSH
21498: EMPTY
21499: LIST
21500: LIST
21501: PUSH
21502: LD_INT 1
21504: NEG
21505: PUSH
21506: LD_INT 2
21508: PUSH
21509: EMPTY
21510: LIST
21511: LIST
21512: PUSH
21513: EMPTY
21514: LIST
21515: LIST
21516: LIST
21517: ST_TO_ADDR
// DepotAr4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
21518: LD_ADDR_VAR 0 21
21522: PUSH
21523: LD_INT 2
21525: NEG
21526: PUSH
21527: LD_INT 1
21529: PUSH
21530: EMPTY
21531: LIST
21532: LIST
21533: PUSH
21534: LD_INT 3
21536: NEG
21537: PUSH
21538: LD_INT 0
21540: PUSH
21541: EMPTY
21542: LIST
21543: LIST
21544: PUSH
21545: LD_INT 3
21547: NEG
21548: PUSH
21549: LD_INT 1
21551: NEG
21552: PUSH
21553: EMPTY
21554: LIST
21555: LIST
21556: PUSH
21557: EMPTY
21558: LIST
21559: LIST
21560: LIST
21561: ST_TO_ADDR
// DepotAr5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
21562: LD_ADDR_VAR 0 22
21566: PUSH
21567: LD_INT 2
21569: NEG
21570: PUSH
21571: LD_INT 3
21573: NEG
21574: PUSH
21575: EMPTY
21576: LIST
21577: LIST
21578: PUSH
21579: LD_INT 3
21581: NEG
21582: PUSH
21583: LD_INT 2
21585: NEG
21586: PUSH
21587: EMPTY
21588: LIST
21589: LIST
21590: PUSH
21591: LD_INT 3
21593: NEG
21594: PUSH
21595: LD_INT 3
21597: NEG
21598: PUSH
21599: EMPTY
21600: LIST
21601: LIST
21602: PUSH
21603: EMPTY
21604: LIST
21605: LIST
21606: LIST
21607: ST_TO_ADDR
// DepotRu0 = [ [ 0 , - 3 ] , [ - 1 , - 4 ] , [ 1 , - 3 ] ] ;
21608: LD_ADDR_VAR 0 23
21612: PUSH
21613: LD_INT 0
21615: PUSH
21616: LD_INT 3
21618: NEG
21619: PUSH
21620: EMPTY
21621: LIST
21622: LIST
21623: PUSH
21624: LD_INT 1
21626: NEG
21627: PUSH
21628: LD_INT 4
21630: NEG
21631: PUSH
21632: EMPTY
21633: LIST
21634: LIST
21635: PUSH
21636: LD_INT 1
21638: PUSH
21639: LD_INT 3
21641: NEG
21642: PUSH
21643: EMPTY
21644: LIST
21645: LIST
21646: PUSH
21647: EMPTY
21648: LIST
21649: LIST
21650: LIST
21651: ST_TO_ADDR
// DepotRu1 = [ [ 3 , 0 ] , [ 3 , - 1 ] , [ 4 , 1 ] ] ;
21652: LD_ADDR_VAR 0 24
21656: PUSH
21657: LD_INT 3
21659: PUSH
21660: LD_INT 0
21662: PUSH
21663: EMPTY
21664: LIST
21665: LIST
21666: PUSH
21667: LD_INT 3
21669: PUSH
21670: LD_INT 1
21672: NEG
21673: PUSH
21674: EMPTY
21675: LIST
21676: LIST
21677: PUSH
21678: LD_INT 4
21680: PUSH
21681: LD_INT 1
21683: PUSH
21684: EMPTY
21685: LIST
21686: LIST
21687: PUSH
21688: EMPTY
21689: LIST
21690: LIST
21691: LIST
21692: ST_TO_ADDR
// DepotRu2 = [ [ 3 , 3 ] , [ 4 , 3 ] , [ 3 , 4 ] ] ;
21693: LD_ADDR_VAR 0 25
21697: PUSH
21698: LD_INT 3
21700: PUSH
21701: LD_INT 3
21703: PUSH
21704: EMPTY
21705: LIST
21706: LIST
21707: PUSH
21708: LD_INT 4
21710: PUSH
21711: LD_INT 3
21713: PUSH
21714: EMPTY
21715: LIST
21716: LIST
21717: PUSH
21718: LD_INT 3
21720: PUSH
21721: LD_INT 4
21723: PUSH
21724: EMPTY
21725: LIST
21726: LIST
21727: PUSH
21728: EMPTY
21729: LIST
21730: LIST
21731: LIST
21732: ST_TO_ADDR
// DepotRu3 = [ [ 0 , 3 ] , [ 1 , 4 ] , [ - 1 , 3 ] ] ;
21733: LD_ADDR_VAR 0 26
21737: PUSH
21738: LD_INT 0
21740: PUSH
21741: LD_INT 3
21743: PUSH
21744: EMPTY
21745: LIST
21746: LIST
21747: PUSH
21748: LD_INT 1
21750: PUSH
21751: LD_INT 4
21753: PUSH
21754: EMPTY
21755: LIST
21756: LIST
21757: PUSH
21758: LD_INT 1
21760: NEG
21761: PUSH
21762: LD_INT 3
21764: PUSH
21765: EMPTY
21766: LIST
21767: LIST
21768: PUSH
21769: EMPTY
21770: LIST
21771: LIST
21772: LIST
21773: ST_TO_ADDR
// DepotRu4 = [ [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , - 1 ] ] ;
21774: LD_ADDR_VAR 0 27
21778: PUSH
21779: LD_INT 3
21781: NEG
21782: PUSH
21783: LD_INT 0
21785: PUSH
21786: EMPTY
21787: LIST
21788: LIST
21789: PUSH
21790: LD_INT 3
21792: NEG
21793: PUSH
21794: LD_INT 1
21796: PUSH
21797: EMPTY
21798: LIST
21799: LIST
21800: PUSH
21801: LD_INT 4
21803: NEG
21804: PUSH
21805: LD_INT 1
21807: NEG
21808: PUSH
21809: EMPTY
21810: LIST
21811: LIST
21812: PUSH
21813: EMPTY
21814: LIST
21815: LIST
21816: LIST
21817: ST_TO_ADDR
// DepotRu5 = [ [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 4 , - 3 ] ] ;
21818: LD_ADDR_VAR 0 28
21822: PUSH
21823: LD_INT 3
21825: NEG
21826: PUSH
21827: LD_INT 3
21829: NEG
21830: PUSH
21831: EMPTY
21832: LIST
21833: LIST
21834: PUSH
21835: LD_INT 3
21837: NEG
21838: PUSH
21839: LD_INT 4
21841: NEG
21842: PUSH
21843: EMPTY
21844: LIST
21845: LIST
21846: PUSH
21847: LD_INT 4
21849: NEG
21850: PUSH
21851: LD_INT 3
21853: NEG
21854: PUSH
21855: EMPTY
21856: LIST
21857: LIST
21858: PUSH
21859: EMPTY
21860: LIST
21861: LIST
21862: LIST
21863: ST_TO_ADDR
// Factory0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ - 1 , - 4 ] , [ 0 , - 4 ] , [ 1 , - 3 ] , [ - 1 , - 5 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ - 1 , - 6 ] , [ 0 , - 6 ] , [ 1 , - 5 ] ] ;
21864: LD_ADDR_VAR 0 29
21868: PUSH
21869: LD_INT 1
21871: NEG
21872: PUSH
21873: LD_INT 3
21875: NEG
21876: PUSH
21877: EMPTY
21878: LIST
21879: LIST
21880: PUSH
21881: LD_INT 0
21883: PUSH
21884: LD_INT 3
21886: NEG
21887: PUSH
21888: EMPTY
21889: LIST
21890: LIST
21891: PUSH
21892: LD_INT 1
21894: PUSH
21895: LD_INT 2
21897: NEG
21898: PUSH
21899: EMPTY
21900: LIST
21901: LIST
21902: PUSH
21903: LD_INT 1
21905: NEG
21906: PUSH
21907: LD_INT 4
21909: NEG
21910: PUSH
21911: EMPTY
21912: LIST
21913: LIST
21914: PUSH
21915: LD_INT 0
21917: PUSH
21918: LD_INT 4
21920: NEG
21921: PUSH
21922: EMPTY
21923: LIST
21924: LIST
21925: PUSH
21926: LD_INT 1
21928: PUSH
21929: LD_INT 3
21931: NEG
21932: PUSH
21933: EMPTY
21934: LIST
21935: LIST
21936: PUSH
21937: LD_INT 1
21939: NEG
21940: PUSH
21941: LD_INT 5
21943: NEG
21944: PUSH
21945: EMPTY
21946: LIST
21947: LIST
21948: PUSH
21949: LD_INT 0
21951: PUSH
21952: LD_INT 5
21954: NEG
21955: PUSH
21956: EMPTY
21957: LIST
21958: LIST
21959: PUSH
21960: LD_INT 1
21962: PUSH
21963: LD_INT 4
21965: NEG
21966: PUSH
21967: EMPTY
21968: LIST
21969: LIST
21970: PUSH
21971: LD_INT 1
21973: NEG
21974: PUSH
21975: LD_INT 6
21977: NEG
21978: PUSH
21979: EMPTY
21980: LIST
21981: LIST
21982: PUSH
21983: LD_INT 0
21985: PUSH
21986: LD_INT 6
21988: NEG
21989: PUSH
21990: EMPTY
21991: LIST
21992: LIST
21993: PUSH
21994: LD_INT 1
21996: PUSH
21997: LD_INT 5
21999: NEG
22000: PUSH
22001: EMPTY
22002: LIST
22003: LIST
22004: PUSH
22005: EMPTY
22006: LIST
22007: LIST
22008: LIST
22009: LIST
22010: LIST
22011: LIST
22012: LIST
22013: LIST
22014: LIST
22015: LIST
22016: LIST
22017: LIST
22018: ST_TO_ADDR
// Factory1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 3 , - 1 ] , [ 4 , 0 ] , [ 4 , 1 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 5 , - 1 ] , [ 6 , 0 ] , [ 6 , 1 ] ] ;
22019: LD_ADDR_VAR 0 30
22023: PUSH
22024: LD_INT 2
22026: PUSH
22027: LD_INT 1
22029: NEG
22030: PUSH
22031: EMPTY
22032: LIST
22033: LIST
22034: PUSH
22035: LD_INT 3
22037: PUSH
22038: LD_INT 0
22040: PUSH
22041: EMPTY
22042: LIST
22043: LIST
22044: PUSH
22045: LD_INT 3
22047: PUSH
22048: LD_INT 1
22050: PUSH
22051: EMPTY
22052: LIST
22053: LIST
22054: PUSH
22055: LD_INT 3
22057: PUSH
22058: LD_INT 1
22060: NEG
22061: PUSH
22062: EMPTY
22063: LIST
22064: LIST
22065: PUSH
22066: LD_INT 4
22068: PUSH
22069: LD_INT 0
22071: PUSH
22072: EMPTY
22073: LIST
22074: LIST
22075: PUSH
22076: LD_INT 4
22078: PUSH
22079: LD_INT 1
22081: PUSH
22082: EMPTY
22083: LIST
22084: LIST
22085: PUSH
22086: LD_INT 4
22088: PUSH
22089: LD_INT 1
22091: NEG
22092: PUSH
22093: EMPTY
22094: LIST
22095: LIST
22096: PUSH
22097: LD_INT 5
22099: PUSH
22100: LD_INT 0
22102: PUSH
22103: EMPTY
22104: LIST
22105: LIST
22106: PUSH
22107: LD_INT 5
22109: PUSH
22110: LD_INT 1
22112: PUSH
22113: EMPTY
22114: LIST
22115: LIST
22116: PUSH
22117: LD_INT 5
22119: PUSH
22120: LD_INT 1
22122: NEG
22123: PUSH
22124: EMPTY
22125: LIST
22126: LIST
22127: PUSH
22128: LD_INT 6
22130: PUSH
22131: LD_INT 0
22133: PUSH
22134: EMPTY
22135: LIST
22136: LIST
22137: PUSH
22138: LD_INT 6
22140: PUSH
22141: LD_INT 1
22143: PUSH
22144: EMPTY
22145: LIST
22146: LIST
22147: PUSH
22148: EMPTY
22149: LIST
22150: LIST
22151: LIST
22152: LIST
22153: LIST
22154: LIST
22155: LIST
22156: LIST
22157: LIST
22158: LIST
22159: LIST
22160: LIST
22161: ST_TO_ADDR
// Factory2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ 4 , 3 ] , [ 4 , 4 ] , [ 3 , 4 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 6 , 5 ] , [ 6 , 6 ] , [ 5 , 6 ] ] ;
22162: LD_ADDR_VAR 0 31
22166: PUSH
22167: LD_INT 3
22169: PUSH
22170: LD_INT 2
22172: PUSH
22173: EMPTY
22174: LIST
22175: LIST
22176: PUSH
22177: LD_INT 3
22179: PUSH
22180: LD_INT 3
22182: PUSH
22183: EMPTY
22184: LIST
22185: LIST
22186: PUSH
22187: LD_INT 2
22189: PUSH
22190: LD_INT 3
22192: PUSH
22193: EMPTY
22194: LIST
22195: LIST
22196: PUSH
22197: LD_INT 4
22199: PUSH
22200: LD_INT 3
22202: PUSH
22203: EMPTY
22204: LIST
22205: LIST
22206: PUSH
22207: LD_INT 4
22209: PUSH
22210: LD_INT 4
22212: PUSH
22213: EMPTY
22214: LIST
22215: LIST
22216: PUSH
22217: LD_INT 3
22219: PUSH
22220: LD_INT 4
22222: PUSH
22223: EMPTY
22224: LIST
22225: LIST
22226: PUSH
22227: LD_INT 5
22229: PUSH
22230: LD_INT 4
22232: PUSH
22233: EMPTY
22234: LIST
22235: LIST
22236: PUSH
22237: LD_INT 5
22239: PUSH
22240: LD_INT 5
22242: PUSH
22243: EMPTY
22244: LIST
22245: LIST
22246: PUSH
22247: LD_INT 4
22249: PUSH
22250: LD_INT 5
22252: PUSH
22253: EMPTY
22254: LIST
22255: LIST
22256: PUSH
22257: LD_INT 6
22259: PUSH
22260: LD_INT 5
22262: PUSH
22263: EMPTY
22264: LIST
22265: LIST
22266: PUSH
22267: LD_INT 6
22269: PUSH
22270: LD_INT 6
22272: PUSH
22273: EMPTY
22274: LIST
22275: LIST
22276: PUSH
22277: LD_INT 5
22279: PUSH
22280: LD_INT 6
22282: PUSH
22283: EMPTY
22284: LIST
22285: LIST
22286: PUSH
22287: EMPTY
22288: LIST
22289: LIST
22290: LIST
22291: LIST
22292: LIST
22293: LIST
22294: LIST
22295: LIST
22296: LIST
22297: LIST
22298: LIST
22299: LIST
22300: ST_TO_ADDR
// Factory3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ 1 , 4 ] , [ 0 , 4 ] , [ - 1 , 3 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ 1 , 6 ] , [ 0 , 6 ] , [ - 1 , 5 ] ] ;
22301: LD_ADDR_VAR 0 32
22305: PUSH
22306: LD_INT 1
22308: PUSH
22309: LD_INT 3
22311: PUSH
22312: EMPTY
22313: LIST
22314: LIST
22315: PUSH
22316: LD_INT 0
22318: PUSH
22319: LD_INT 3
22321: PUSH
22322: EMPTY
22323: LIST
22324: LIST
22325: PUSH
22326: LD_INT 1
22328: NEG
22329: PUSH
22330: LD_INT 2
22332: PUSH
22333: EMPTY
22334: LIST
22335: LIST
22336: PUSH
22337: LD_INT 1
22339: PUSH
22340: LD_INT 4
22342: PUSH
22343: EMPTY
22344: LIST
22345: LIST
22346: PUSH
22347: LD_INT 0
22349: PUSH
22350: LD_INT 4
22352: PUSH
22353: EMPTY
22354: LIST
22355: LIST
22356: PUSH
22357: LD_INT 1
22359: NEG
22360: PUSH
22361: LD_INT 3
22363: PUSH
22364: EMPTY
22365: LIST
22366: LIST
22367: PUSH
22368: LD_INT 1
22370: PUSH
22371: LD_INT 5
22373: PUSH
22374: EMPTY
22375: LIST
22376: LIST
22377: PUSH
22378: LD_INT 0
22380: PUSH
22381: LD_INT 5
22383: PUSH
22384: EMPTY
22385: LIST
22386: LIST
22387: PUSH
22388: LD_INT 1
22390: NEG
22391: PUSH
22392: LD_INT 4
22394: PUSH
22395: EMPTY
22396: LIST
22397: LIST
22398: PUSH
22399: LD_INT 1
22401: PUSH
22402: LD_INT 6
22404: PUSH
22405: EMPTY
22406: LIST
22407: LIST
22408: PUSH
22409: LD_INT 0
22411: PUSH
22412: LD_INT 6
22414: PUSH
22415: EMPTY
22416: LIST
22417: LIST
22418: PUSH
22419: LD_INT 1
22421: NEG
22422: PUSH
22423: LD_INT 5
22425: PUSH
22426: EMPTY
22427: LIST
22428: LIST
22429: PUSH
22430: EMPTY
22431: LIST
22432: LIST
22433: LIST
22434: LIST
22435: LIST
22436: LIST
22437: LIST
22438: LIST
22439: LIST
22440: LIST
22441: LIST
22442: LIST
22443: ST_TO_ADDR
// Factory4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 3 , 1 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , 1 ] , [ - 6 , 0 ] , [ - 6 , - 1 ] ] ;
22444: LD_ADDR_VAR 0 33
22448: PUSH
22449: LD_INT 2
22451: NEG
22452: PUSH
22453: LD_INT 1
22455: PUSH
22456: EMPTY
22457: LIST
22458: LIST
22459: PUSH
22460: LD_INT 3
22462: NEG
22463: PUSH
22464: LD_INT 0
22466: PUSH
22467: EMPTY
22468: LIST
22469: LIST
22470: PUSH
22471: LD_INT 3
22473: NEG
22474: PUSH
22475: LD_INT 1
22477: NEG
22478: PUSH
22479: EMPTY
22480: LIST
22481: LIST
22482: PUSH
22483: LD_INT 3
22485: NEG
22486: PUSH
22487: LD_INT 1
22489: PUSH
22490: EMPTY
22491: LIST
22492: LIST
22493: PUSH
22494: LD_INT 4
22496: NEG
22497: PUSH
22498: LD_INT 0
22500: PUSH
22501: EMPTY
22502: LIST
22503: LIST
22504: PUSH
22505: LD_INT 4
22507: NEG
22508: PUSH
22509: LD_INT 1
22511: NEG
22512: PUSH
22513: EMPTY
22514: LIST
22515: LIST
22516: PUSH
22517: LD_INT 4
22519: NEG
22520: PUSH
22521: LD_INT 1
22523: PUSH
22524: EMPTY
22525: LIST
22526: LIST
22527: PUSH
22528: LD_INT 5
22530: NEG
22531: PUSH
22532: LD_INT 0
22534: PUSH
22535: EMPTY
22536: LIST
22537: LIST
22538: PUSH
22539: LD_INT 5
22541: NEG
22542: PUSH
22543: LD_INT 1
22545: NEG
22546: PUSH
22547: EMPTY
22548: LIST
22549: LIST
22550: PUSH
22551: LD_INT 5
22553: NEG
22554: PUSH
22555: LD_INT 1
22557: PUSH
22558: EMPTY
22559: LIST
22560: LIST
22561: PUSH
22562: LD_INT 6
22564: NEG
22565: PUSH
22566: LD_INT 0
22568: PUSH
22569: EMPTY
22570: LIST
22571: LIST
22572: PUSH
22573: LD_INT 6
22575: NEG
22576: PUSH
22577: LD_INT 1
22579: NEG
22580: PUSH
22581: EMPTY
22582: LIST
22583: LIST
22584: PUSH
22585: EMPTY
22586: LIST
22587: LIST
22588: LIST
22589: LIST
22590: LIST
22591: LIST
22592: LIST
22593: LIST
22594: LIST
22595: LIST
22596: LIST
22597: LIST
22598: ST_TO_ADDR
// Factory5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 4 , - 3 ] , [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 5 , - 6 ] , [ - 6 , - 5 ] , [ - 6 , - 6 ] ] ;
22599: LD_ADDR_VAR 0 34
22603: PUSH
22604: LD_INT 2
22606: NEG
22607: PUSH
22608: LD_INT 3
22610: NEG
22611: PUSH
22612: EMPTY
22613: LIST
22614: LIST
22615: PUSH
22616: LD_INT 3
22618: NEG
22619: PUSH
22620: LD_INT 2
22622: NEG
22623: PUSH
22624: EMPTY
22625: LIST
22626: LIST
22627: PUSH
22628: LD_INT 3
22630: NEG
22631: PUSH
22632: LD_INT 3
22634: NEG
22635: PUSH
22636: EMPTY
22637: LIST
22638: LIST
22639: PUSH
22640: LD_INT 3
22642: NEG
22643: PUSH
22644: LD_INT 4
22646: NEG
22647: PUSH
22648: EMPTY
22649: LIST
22650: LIST
22651: PUSH
22652: LD_INT 4
22654: NEG
22655: PUSH
22656: LD_INT 3
22658: NEG
22659: PUSH
22660: EMPTY
22661: LIST
22662: LIST
22663: PUSH
22664: LD_INT 4
22666: NEG
22667: PUSH
22668: LD_INT 4
22670: NEG
22671: PUSH
22672: EMPTY
22673: LIST
22674: LIST
22675: PUSH
22676: LD_INT 4
22678: NEG
22679: PUSH
22680: LD_INT 5
22682: NEG
22683: PUSH
22684: EMPTY
22685: LIST
22686: LIST
22687: PUSH
22688: LD_INT 5
22690: NEG
22691: PUSH
22692: LD_INT 4
22694: NEG
22695: PUSH
22696: EMPTY
22697: LIST
22698: LIST
22699: PUSH
22700: LD_INT 5
22702: NEG
22703: PUSH
22704: LD_INT 5
22706: NEG
22707: PUSH
22708: EMPTY
22709: LIST
22710: LIST
22711: PUSH
22712: LD_INT 5
22714: NEG
22715: PUSH
22716: LD_INT 6
22718: NEG
22719: PUSH
22720: EMPTY
22721: LIST
22722: LIST
22723: PUSH
22724: LD_INT 6
22726: NEG
22727: PUSH
22728: LD_INT 5
22730: NEG
22731: PUSH
22732: EMPTY
22733: LIST
22734: LIST
22735: PUSH
22736: LD_INT 6
22738: NEG
22739: PUSH
22740: LD_INT 6
22742: NEG
22743: PUSH
22744: EMPTY
22745: LIST
22746: LIST
22747: PUSH
22748: EMPTY
22749: LIST
22750: LIST
22751: LIST
22752: LIST
22753: LIST
22754: LIST
22755: LIST
22756: LIST
22757: LIST
22758: LIST
22759: LIST
22760: LIST
22761: ST_TO_ADDR
// Lab0 = [ [ 0 , - 2 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] ] ;
22762: LD_ADDR_VAR 0 41
22766: PUSH
22767: LD_INT 0
22769: PUSH
22770: LD_INT 2
22772: NEG
22773: PUSH
22774: EMPTY
22775: LIST
22776: LIST
22777: PUSH
22778: LD_INT 1
22780: NEG
22781: PUSH
22782: LD_INT 3
22784: NEG
22785: PUSH
22786: EMPTY
22787: LIST
22788: LIST
22789: PUSH
22790: LD_INT 1
22792: PUSH
22793: LD_INT 2
22795: NEG
22796: PUSH
22797: EMPTY
22798: LIST
22799: LIST
22800: PUSH
22801: EMPTY
22802: LIST
22803: LIST
22804: LIST
22805: ST_TO_ADDR
// Lab1 = [ [ 2 , 0 ] , [ 2 , - 1 ] , [ 3 , 1 ] ] ;
22806: LD_ADDR_VAR 0 42
22810: PUSH
22811: LD_INT 2
22813: PUSH
22814: LD_INT 0
22816: PUSH
22817: EMPTY
22818: LIST
22819: LIST
22820: PUSH
22821: LD_INT 2
22823: PUSH
22824: LD_INT 1
22826: NEG
22827: PUSH
22828: EMPTY
22829: LIST
22830: LIST
22831: PUSH
22832: LD_INT 3
22834: PUSH
22835: LD_INT 1
22837: PUSH
22838: EMPTY
22839: LIST
22840: LIST
22841: PUSH
22842: EMPTY
22843: LIST
22844: LIST
22845: LIST
22846: ST_TO_ADDR
// Lab2 = [ [ 2 , 2 ] , [ 3 , 2 ] , [ 2 , 3 ] ] ;
22847: LD_ADDR_VAR 0 43
22851: PUSH
22852: LD_INT 2
22854: PUSH
22855: LD_INT 2
22857: PUSH
22858: EMPTY
22859: LIST
22860: LIST
22861: PUSH
22862: LD_INT 3
22864: PUSH
22865: LD_INT 2
22867: PUSH
22868: EMPTY
22869: LIST
22870: LIST
22871: PUSH
22872: LD_INT 2
22874: PUSH
22875: LD_INT 3
22877: PUSH
22878: EMPTY
22879: LIST
22880: LIST
22881: PUSH
22882: EMPTY
22883: LIST
22884: LIST
22885: LIST
22886: ST_TO_ADDR
// Lab3 = [ [ 0 , 2 ] , [ 1 , 3 ] , [ - 1 , 2 ] ] ;
22887: LD_ADDR_VAR 0 44
22891: PUSH
22892: LD_INT 0
22894: PUSH
22895: LD_INT 2
22897: PUSH
22898: EMPTY
22899: LIST
22900: LIST
22901: PUSH
22902: LD_INT 1
22904: PUSH
22905: LD_INT 3
22907: PUSH
22908: EMPTY
22909: LIST
22910: LIST
22911: PUSH
22912: LD_INT 1
22914: NEG
22915: PUSH
22916: LD_INT 2
22918: PUSH
22919: EMPTY
22920: LIST
22921: LIST
22922: PUSH
22923: EMPTY
22924: LIST
22925: LIST
22926: LIST
22927: ST_TO_ADDR
// Lab4 = [ [ - 2 , 0 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
22928: LD_ADDR_VAR 0 45
22932: PUSH
22933: LD_INT 2
22935: NEG
22936: PUSH
22937: LD_INT 0
22939: PUSH
22940: EMPTY
22941: LIST
22942: LIST
22943: PUSH
22944: LD_INT 2
22946: NEG
22947: PUSH
22948: LD_INT 1
22950: PUSH
22951: EMPTY
22952: LIST
22953: LIST
22954: PUSH
22955: LD_INT 3
22957: NEG
22958: PUSH
22959: LD_INT 1
22961: NEG
22962: PUSH
22963: EMPTY
22964: LIST
22965: LIST
22966: PUSH
22967: EMPTY
22968: LIST
22969: LIST
22970: LIST
22971: ST_TO_ADDR
// Lab5 = [ [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 3 , - 2 ] ] ;
22972: LD_ADDR_VAR 0 46
22976: PUSH
22977: LD_INT 2
22979: NEG
22980: PUSH
22981: LD_INT 2
22983: NEG
22984: PUSH
22985: EMPTY
22986: LIST
22987: LIST
22988: PUSH
22989: LD_INT 2
22991: NEG
22992: PUSH
22993: LD_INT 3
22995: NEG
22996: PUSH
22997: EMPTY
22998: LIST
22999: LIST
23000: PUSH
23001: LD_INT 3
23003: NEG
23004: PUSH
23005: LD_INT 2
23007: NEG
23008: PUSH
23009: EMPTY
23010: LIST
23011: LIST
23012: PUSH
23013: EMPTY
23014: LIST
23015: LIST
23016: LIST
23017: ST_TO_ADDR
// ControlTower0 = [ [ - 2 , - 3 ] , [ - 1 , - 3 ] ] ;
23018: LD_ADDR_VAR 0 47
23022: PUSH
23023: LD_INT 2
23025: NEG
23026: PUSH
23027: LD_INT 3
23029: NEG
23030: PUSH
23031: EMPTY
23032: LIST
23033: LIST
23034: PUSH
23035: LD_INT 1
23037: NEG
23038: PUSH
23039: LD_INT 3
23041: NEG
23042: PUSH
23043: EMPTY
23044: LIST
23045: LIST
23046: PUSH
23047: EMPTY
23048: LIST
23049: LIST
23050: ST_TO_ADDR
// ControlTower1 = [ [ 1 , - 2 ] , [ 2 , - 1 ] ] ;
23051: LD_ADDR_VAR 0 48
23055: PUSH
23056: LD_INT 1
23058: PUSH
23059: LD_INT 2
23061: NEG
23062: PUSH
23063: EMPTY
23064: LIST
23065: LIST
23066: PUSH
23067: LD_INT 2
23069: PUSH
23070: LD_INT 1
23072: NEG
23073: PUSH
23074: EMPTY
23075: LIST
23076: LIST
23077: PUSH
23078: EMPTY
23079: LIST
23080: LIST
23081: ST_TO_ADDR
// ControlTower2 = [ [ 3 , 1 ] , [ 3 , 2 ] ] ;
23082: LD_ADDR_VAR 0 49
23086: PUSH
23087: LD_INT 3
23089: PUSH
23090: LD_INT 1
23092: PUSH
23093: EMPTY
23094: LIST
23095: LIST
23096: PUSH
23097: LD_INT 3
23099: PUSH
23100: LD_INT 2
23102: PUSH
23103: EMPTY
23104: LIST
23105: LIST
23106: PUSH
23107: EMPTY
23108: LIST
23109: LIST
23110: ST_TO_ADDR
// ControlTower3 = [ [ 2 , 3 ] , [ 1 , 3 ] ] ;
23111: LD_ADDR_VAR 0 50
23115: PUSH
23116: LD_INT 2
23118: PUSH
23119: LD_INT 3
23121: PUSH
23122: EMPTY
23123: LIST
23124: LIST
23125: PUSH
23126: LD_INT 1
23128: PUSH
23129: LD_INT 3
23131: PUSH
23132: EMPTY
23133: LIST
23134: LIST
23135: PUSH
23136: EMPTY
23137: LIST
23138: LIST
23139: ST_TO_ADDR
// ControlTower4 = [ [ - 1 , 2 ] , [ - 2 , 1 ] ] ;
23140: LD_ADDR_VAR 0 51
23144: PUSH
23145: LD_INT 1
23147: NEG
23148: PUSH
23149: LD_INT 2
23151: PUSH
23152: EMPTY
23153: LIST
23154: LIST
23155: PUSH
23156: LD_INT 2
23158: NEG
23159: PUSH
23160: LD_INT 1
23162: PUSH
23163: EMPTY
23164: LIST
23165: LIST
23166: PUSH
23167: EMPTY
23168: LIST
23169: LIST
23170: ST_TO_ADDR
// ControlTower5 = [ [ - 3 , - 1 ] , [ - 3 , - 2 ] ] ;
23171: LD_ADDR_VAR 0 52
23175: PUSH
23176: LD_INT 3
23178: NEG
23179: PUSH
23180: LD_INT 1
23182: NEG
23183: PUSH
23184: EMPTY
23185: LIST
23186: LIST
23187: PUSH
23188: LD_INT 3
23190: NEG
23191: PUSH
23192: LD_INT 2
23194: NEG
23195: PUSH
23196: EMPTY
23197: LIST
23198: LIST
23199: PUSH
23200: EMPTY
23201: LIST
23202: LIST
23203: ST_TO_ADDR
// Barracks0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
23204: LD_ADDR_VAR 0 53
23208: PUSH
23209: LD_INT 1
23211: NEG
23212: PUSH
23213: LD_INT 3
23215: NEG
23216: PUSH
23217: EMPTY
23218: LIST
23219: LIST
23220: PUSH
23221: LD_INT 0
23223: PUSH
23224: LD_INT 3
23226: NEG
23227: PUSH
23228: EMPTY
23229: LIST
23230: LIST
23231: PUSH
23232: LD_INT 1
23234: PUSH
23235: LD_INT 2
23237: NEG
23238: PUSH
23239: EMPTY
23240: LIST
23241: LIST
23242: PUSH
23243: EMPTY
23244: LIST
23245: LIST
23246: LIST
23247: ST_TO_ADDR
// Barracks1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
23248: LD_ADDR_VAR 0 54
23252: PUSH
23253: LD_INT 2
23255: PUSH
23256: LD_INT 1
23258: NEG
23259: PUSH
23260: EMPTY
23261: LIST
23262: LIST
23263: PUSH
23264: LD_INT 3
23266: PUSH
23267: LD_INT 0
23269: PUSH
23270: EMPTY
23271: LIST
23272: LIST
23273: PUSH
23274: LD_INT 3
23276: PUSH
23277: LD_INT 1
23279: PUSH
23280: EMPTY
23281: LIST
23282: LIST
23283: PUSH
23284: EMPTY
23285: LIST
23286: LIST
23287: LIST
23288: ST_TO_ADDR
// Barracks2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
23289: LD_ADDR_VAR 0 55
23293: PUSH
23294: LD_INT 3
23296: PUSH
23297: LD_INT 2
23299: PUSH
23300: EMPTY
23301: LIST
23302: LIST
23303: PUSH
23304: LD_INT 3
23306: PUSH
23307: LD_INT 3
23309: PUSH
23310: EMPTY
23311: LIST
23312: LIST
23313: PUSH
23314: LD_INT 2
23316: PUSH
23317: LD_INT 3
23319: PUSH
23320: EMPTY
23321: LIST
23322: LIST
23323: PUSH
23324: EMPTY
23325: LIST
23326: LIST
23327: LIST
23328: ST_TO_ADDR
// Barracks3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
23329: LD_ADDR_VAR 0 56
23333: PUSH
23334: LD_INT 1
23336: PUSH
23337: LD_INT 3
23339: PUSH
23340: EMPTY
23341: LIST
23342: LIST
23343: PUSH
23344: LD_INT 0
23346: PUSH
23347: LD_INT 3
23349: PUSH
23350: EMPTY
23351: LIST
23352: LIST
23353: PUSH
23354: LD_INT 1
23356: NEG
23357: PUSH
23358: LD_INT 2
23360: PUSH
23361: EMPTY
23362: LIST
23363: LIST
23364: PUSH
23365: EMPTY
23366: LIST
23367: LIST
23368: LIST
23369: ST_TO_ADDR
// Barracks4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
23370: LD_ADDR_VAR 0 57
23374: PUSH
23375: LD_INT 2
23377: NEG
23378: PUSH
23379: LD_INT 1
23381: PUSH
23382: EMPTY
23383: LIST
23384: LIST
23385: PUSH
23386: LD_INT 3
23388: NEG
23389: PUSH
23390: LD_INT 0
23392: PUSH
23393: EMPTY
23394: LIST
23395: LIST
23396: PUSH
23397: LD_INT 3
23399: NEG
23400: PUSH
23401: LD_INT 1
23403: NEG
23404: PUSH
23405: EMPTY
23406: LIST
23407: LIST
23408: PUSH
23409: EMPTY
23410: LIST
23411: LIST
23412: LIST
23413: ST_TO_ADDR
// Barracks5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
23414: LD_ADDR_VAR 0 58
23418: PUSH
23419: LD_INT 2
23421: NEG
23422: PUSH
23423: LD_INT 3
23425: NEG
23426: PUSH
23427: EMPTY
23428: LIST
23429: LIST
23430: PUSH
23431: LD_INT 3
23433: NEG
23434: PUSH
23435: LD_INT 2
23437: NEG
23438: PUSH
23439: EMPTY
23440: LIST
23441: LIST
23442: PUSH
23443: LD_INT 3
23445: NEG
23446: PUSH
23447: LD_INT 3
23449: NEG
23450: PUSH
23451: EMPTY
23452: LIST
23453: LIST
23454: PUSH
23455: EMPTY
23456: LIST
23457: LIST
23458: LIST
23459: ST_TO_ADDR
// Bunker0 = [ [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] ] ;
23460: LD_ADDR_VAR 0 59
23464: PUSH
23465: LD_INT 1
23467: NEG
23468: PUSH
23469: LD_INT 2
23471: NEG
23472: PUSH
23473: EMPTY
23474: LIST
23475: LIST
23476: PUSH
23477: LD_INT 0
23479: PUSH
23480: LD_INT 2
23482: NEG
23483: PUSH
23484: EMPTY
23485: LIST
23486: LIST
23487: PUSH
23488: LD_INT 1
23490: PUSH
23491: LD_INT 1
23493: NEG
23494: PUSH
23495: EMPTY
23496: LIST
23497: LIST
23498: PUSH
23499: EMPTY
23500: LIST
23501: LIST
23502: LIST
23503: ST_TO_ADDR
// Bunker1 = [ [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] ] ;
23504: LD_ADDR_VAR 0 60
23508: PUSH
23509: LD_INT 1
23511: PUSH
23512: LD_INT 1
23514: NEG
23515: PUSH
23516: EMPTY
23517: LIST
23518: LIST
23519: PUSH
23520: LD_INT 2
23522: PUSH
23523: LD_INT 0
23525: PUSH
23526: EMPTY
23527: LIST
23528: LIST
23529: PUSH
23530: LD_INT 2
23532: PUSH
23533: LD_INT 1
23535: PUSH
23536: EMPTY
23537: LIST
23538: LIST
23539: PUSH
23540: EMPTY
23541: LIST
23542: LIST
23543: LIST
23544: ST_TO_ADDR
// Bunker2 = [ [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] ] ;
23545: LD_ADDR_VAR 0 61
23549: PUSH
23550: LD_INT 2
23552: PUSH
23553: LD_INT 1
23555: PUSH
23556: EMPTY
23557: LIST
23558: LIST
23559: PUSH
23560: LD_INT 2
23562: PUSH
23563: LD_INT 2
23565: PUSH
23566: EMPTY
23567: LIST
23568: LIST
23569: PUSH
23570: LD_INT 1
23572: PUSH
23573: LD_INT 2
23575: PUSH
23576: EMPTY
23577: LIST
23578: LIST
23579: PUSH
23580: EMPTY
23581: LIST
23582: LIST
23583: LIST
23584: ST_TO_ADDR
// Bunker3 = [ [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] ] ;
23585: LD_ADDR_VAR 0 62
23589: PUSH
23590: LD_INT 1
23592: PUSH
23593: LD_INT 2
23595: PUSH
23596: EMPTY
23597: LIST
23598: LIST
23599: PUSH
23600: LD_INT 0
23602: PUSH
23603: LD_INT 2
23605: PUSH
23606: EMPTY
23607: LIST
23608: LIST
23609: PUSH
23610: LD_INT 1
23612: NEG
23613: PUSH
23614: LD_INT 1
23616: PUSH
23617: EMPTY
23618: LIST
23619: LIST
23620: PUSH
23621: EMPTY
23622: LIST
23623: LIST
23624: LIST
23625: ST_TO_ADDR
// Bunker4 = [ [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] ] ;
23626: LD_ADDR_VAR 0 63
23630: PUSH
23631: LD_INT 1
23633: NEG
23634: PUSH
23635: LD_INT 1
23637: PUSH
23638: EMPTY
23639: LIST
23640: LIST
23641: PUSH
23642: LD_INT 2
23644: NEG
23645: PUSH
23646: LD_INT 0
23648: PUSH
23649: EMPTY
23650: LIST
23651: LIST
23652: PUSH
23653: LD_INT 2
23655: NEG
23656: PUSH
23657: LD_INT 1
23659: NEG
23660: PUSH
23661: EMPTY
23662: LIST
23663: LIST
23664: PUSH
23665: EMPTY
23666: LIST
23667: LIST
23668: LIST
23669: ST_TO_ADDR
// Bunker5 = [ [ - 1 , - 2 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
23670: LD_ADDR_VAR 0 64
23674: PUSH
23675: LD_INT 1
23677: NEG
23678: PUSH
23679: LD_INT 2
23681: NEG
23682: PUSH
23683: EMPTY
23684: LIST
23685: LIST
23686: PUSH
23687: LD_INT 2
23689: NEG
23690: PUSH
23691: LD_INT 1
23693: NEG
23694: PUSH
23695: EMPTY
23696: LIST
23697: LIST
23698: PUSH
23699: LD_INT 2
23701: NEG
23702: PUSH
23703: LD_INT 2
23705: NEG
23706: PUSH
23707: EMPTY
23708: LIST
23709: LIST
23710: PUSH
23711: EMPTY
23712: LIST
23713: LIST
23714: LIST
23715: ST_TO_ADDR
// end ; 2 :
23716: GO 26982
23718: LD_INT 2
23720: DOUBLE
23721: EQUAL
23722: IFTRUE 23726
23724: GO 26981
23726: POP
// begin Factory0 = [ [ 4 , 0 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 4 , 1 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 3 , - 2 ] , [ 5 , 2 ] , [ 3 , 3 ] , [ 3 , 2 ] , [ 4 , 3 ] , [ 4 , 4 ] , [ 3 , 4 ] , [ 2 , 3 ] , [ 2 , 2 ] , [ 4 , 2 ] , [ 2 , 4 ] , [ 0 , 4 ] , [ 0 , 3 ] , [ 1 , 4 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ - 1 , 3 ] , [ 2 , 5 ] , [ - 2 , 3 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 2 , 0 ] , [ - 2 , 1 ] , [ - 3 , 1 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 4 , - 2 ] , [ - 2 , 2 ] , [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 3 , - 4 ] , [ - 3 , - 3 ] , [ - 4 , - 3 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 3 , - 5 ] , [ - 5 , - 3 ] ] ;
23727: LD_ADDR_VAR 0 29
23731: PUSH
23732: LD_INT 4
23734: PUSH
23735: LD_INT 0
23737: PUSH
23738: EMPTY
23739: LIST
23740: LIST
23741: PUSH
23742: LD_INT 4
23744: PUSH
23745: LD_INT 1
23747: NEG
23748: PUSH
23749: EMPTY
23750: LIST
23751: LIST
23752: PUSH
23753: LD_INT 5
23755: PUSH
23756: LD_INT 0
23758: PUSH
23759: EMPTY
23760: LIST
23761: LIST
23762: PUSH
23763: LD_INT 5
23765: PUSH
23766: LD_INT 1
23768: PUSH
23769: EMPTY
23770: LIST
23771: LIST
23772: PUSH
23773: LD_INT 4
23775: PUSH
23776: LD_INT 1
23778: PUSH
23779: EMPTY
23780: LIST
23781: LIST
23782: PUSH
23783: LD_INT 3
23785: PUSH
23786: LD_INT 0
23788: PUSH
23789: EMPTY
23790: LIST
23791: LIST
23792: PUSH
23793: LD_INT 3
23795: PUSH
23796: LD_INT 1
23798: NEG
23799: PUSH
23800: EMPTY
23801: LIST
23802: LIST
23803: PUSH
23804: LD_INT 3
23806: PUSH
23807: LD_INT 2
23809: NEG
23810: PUSH
23811: EMPTY
23812: LIST
23813: LIST
23814: PUSH
23815: LD_INT 5
23817: PUSH
23818: LD_INT 2
23820: PUSH
23821: EMPTY
23822: LIST
23823: LIST
23824: PUSH
23825: LD_INT 3
23827: PUSH
23828: LD_INT 3
23830: PUSH
23831: EMPTY
23832: LIST
23833: LIST
23834: PUSH
23835: LD_INT 3
23837: PUSH
23838: LD_INT 2
23840: PUSH
23841: EMPTY
23842: LIST
23843: LIST
23844: PUSH
23845: LD_INT 4
23847: PUSH
23848: LD_INT 3
23850: PUSH
23851: EMPTY
23852: LIST
23853: LIST
23854: PUSH
23855: LD_INT 4
23857: PUSH
23858: LD_INT 4
23860: PUSH
23861: EMPTY
23862: LIST
23863: LIST
23864: PUSH
23865: LD_INT 3
23867: PUSH
23868: LD_INT 4
23870: PUSH
23871: EMPTY
23872: LIST
23873: LIST
23874: PUSH
23875: LD_INT 2
23877: PUSH
23878: LD_INT 3
23880: PUSH
23881: EMPTY
23882: LIST
23883: LIST
23884: PUSH
23885: LD_INT 2
23887: PUSH
23888: LD_INT 2
23890: PUSH
23891: EMPTY
23892: LIST
23893: LIST
23894: PUSH
23895: LD_INT 4
23897: PUSH
23898: LD_INT 2
23900: PUSH
23901: EMPTY
23902: LIST
23903: LIST
23904: PUSH
23905: LD_INT 2
23907: PUSH
23908: LD_INT 4
23910: PUSH
23911: EMPTY
23912: LIST
23913: LIST
23914: PUSH
23915: LD_INT 0
23917: PUSH
23918: LD_INT 4
23920: PUSH
23921: EMPTY
23922: LIST
23923: LIST
23924: PUSH
23925: LD_INT 0
23927: PUSH
23928: LD_INT 3
23930: PUSH
23931: EMPTY
23932: LIST
23933: LIST
23934: PUSH
23935: LD_INT 1
23937: PUSH
23938: LD_INT 4
23940: PUSH
23941: EMPTY
23942: LIST
23943: LIST
23944: PUSH
23945: LD_INT 1
23947: PUSH
23948: LD_INT 5
23950: PUSH
23951: EMPTY
23952: LIST
23953: LIST
23954: PUSH
23955: LD_INT 0
23957: PUSH
23958: LD_INT 5
23960: PUSH
23961: EMPTY
23962: LIST
23963: LIST
23964: PUSH
23965: LD_INT 1
23967: NEG
23968: PUSH
23969: LD_INT 4
23971: PUSH
23972: EMPTY
23973: LIST
23974: LIST
23975: PUSH
23976: LD_INT 1
23978: NEG
23979: PUSH
23980: LD_INT 3
23982: PUSH
23983: EMPTY
23984: LIST
23985: LIST
23986: PUSH
23987: LD_INT 2
23989: PUSH
23990: LD_INT 5
23992: PUSH
23993: EMPTY
23994: LIST
23995: LIST
23996: PUSH
23997: LD_INT 2
23999: NEG
24000: PUSH
24001: LD_INT 3
24003: PUSH
24004: EMPTY
24005: LIST
24006: LIST
24007: PUSH
24008: LD_INT 3
24010: NEG
24011: PUSH
24012: LD_INT 0
24014: PUSH
24015: EMPTY
24016: LIST
24017: LIST
24018: PUSH
24019: LD_INT 3
24021: NEG
24022: PUSH
24023: LD_INT 1
24025: NEG
24026: PUSH
24027: EMPTY
24028: LIST
24029: LIST
24030: PUSH
24031: LD_INT 2
24033: NEG
24034: PUSH
24035: LD_INT 0
24037: PUSH
24038: EMPTY
24039: LIST
24040: LIST
24041: PUSH
24042: LD_INT 2
24044: NEG
24045: PUSH
24046: LD_INT 1
24048: PUSH
24049: EMPTY
24050: LIST
24051: LIST
24052: PUSH
24053: LD_INT 3
24055: NEG
24056: PUSH
24057: LD_INT 1
24059: PUSH
24060: EMPTY
24061: LIST
24062: LIST
24063: PUSH
24064: LD_INT 4
24066: NEG
24067: PUSH
24068: LD_INT 0
24070: PUSH
24071: EMPTY
24072: LIST
24073: LIST
24074: PUSH
24075: LD_INT 4
24077: NEG
24078: PUSH
24079: LD_INT 1
24081: NEG
24082: PUSH
24083: EMPTY
24084: LIST
24085: LIST
24086: PUSH
24087: LD_INT 4
24089: NEG
24090: PUSH
24091: LD_INT 2
24093: NEG
24094: PUSH
24095: EMPTY
24096: LIST
24097: LIST
24098: PUSH
24099: LD_INT 2
24101: NEG
24102: PUSH
24103: LD_INT 2
24105: PUSH
24106: EMPTY
24107: LIST
24108: LIST
24109: PUSH
24110: LD_INT 4
24112: NEG
24113: PUSH
24114: LD_INT 4
24116: NEG
24117: PUSH
24118: EMPTY
24119: LIST
24120: LIST
24121: PUSH
24122: LD_INT 4
24124: NEG
24125: PUSH
24126: LD_INT 5
24128: NEG
24129: PUSH
24130: EMPTY
24131: LIST
24132: LIST
24133: PUSH
24134: LD_INT 3
24136: NEG
24137: PUSH
24138: LD_INT 4
24140: NEG
24141: PUSH
24142: EMPTY
24143: LIST
24144: LIST
24145: PUSH
24146: LD_INT 3
24148: NEG
24149: PUSH
24150: LD_INT 3
24152: NEG
24153: PUSH
24154: EMPTY
24155: LIST
24156: LIST
24157: PUSH
24158: LD_INT 4
24160: NEG
24161: PUSH
24162: LD_INT 3
24164: NEG
24165: PUSH
24166: EMPTY
24167: LIST
24168: LIST
24169: PUSH
24170: LD_INT 5
24172: NEG
24173: PUSH
24174: LD_INT 4
24176: NEG
24177: PUSH
24178: EMPTY
24179: LIST
24180: LIST
24181: PUSH
24182: LD_INT 5
24184: NEG
24185: PUSH
24186: LD_INT 5
24188: NEG
24189: PUSH
24190: EMPTY
24191: LIST
24192: LIST
24193: PUSH
24194: LD_INT 3
24196: NEG
24197: PUSH
24198: LD_INT 5
24200: NEG
24201: PUSH
24202: EMPTY
24203: LIST
24204: LIST
24205: PUSH
24206: LD_INT 5
24208: NEG
24209: PUSH
24210: LD_INT 3
24212: NEG
24213: PUSH
24214: EMPTY
24215: LIST
24216: LIST
24217: PUSH
24218: EMPTY
24219: LIST
24220: LIST
24221: LIST
24222: LIST
24223: LIST
24224: LIST
24225: LIST
24226: LIST
24227: LIST
24228: LIST
24229: LIST
24230: LIST
24231: LIST
24232: LIST
24233: LIST
24234: LIST
24235: LIST
24236: LIST
24237: LIST
24238: LIST
24239: LIST
24240: LIST
24241: LIST
24242: LIST
24243: LIST
24244: LIST
24245: LIST
24246: LIST
24247: LIST
24248: LIST
24249: LIST
24250: LIST
24251: LIST
24252: LIST
24253: LIST
24254: LIST
24255: LIST
24256: LIST
24257: LIST
24258: LIST
24259: LIST
24260: LIST
24261: LIST
24262: LIST
24263: LIST
24264: ST_TO_ADDR
// Factory1 = [ [ 4 , 4 ] , [ 4 , 3 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 3 , 4 ] , [ 3 , 3 ] , [ 5 , 3 ] , [ 3 , 5 ] , [ 0 , 3 ] , [ 0 , 2 ] , [ 1 , 3 ] , [ 1 , 4 ] , [ 0 , 4 ] , [ - 1 , 3 ] , [ - 1 , 2 ] , [ 2 , 4 ] , [ - 2 , 2 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , - 2 ] , [ - 3 , 2 ] , [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 2 , - 3 ] , [ - 2 , - 2 ] , [ - 3 , - 2 ] , [ - 4 , - 3 ] , [ - 4 , - 4 ] , [ - 2 , - 4 ] , [ - 4 , - 2 ] , [ 0 , - 4 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ 1 , - 3 ] , [ 0 , - 3 ] , [ - 1 , - 4 ] , [ - 1 , - 5 ] , [ 2 , - 3 ] , [ - 2 , - 5 ] ] ;
24265: LD_ADDR_VAR 0 30
24269: PUSH
24270: LD_INT 4
24272: PUSH
24273: LD_INT 4
24275: PUSH
24276: EMPTY
24277: LIST
24278: LIST
24279: PUSH
24280: LD_INT 4
24282: PUSH
24283: LD_INT 3
24285: PUSH
24286: EMPTY
24287: LIST
24288: LIST
24289: PUSH
24290: LD_INT 5
24292: PUSH
24293: LD_INT 4
24295: PUSH
24296: EMPTY
24297: LIST
24298: LIST
24299: PUSH
24300: LD_INT 5
24302: PUSH
24303: LD_INT 5
24305: PUSH
24306: EMPTY
24307: LIST
24308: LIST
24309: PUSH
24310: LD_INT 4
24312: PUSH
24313: LD_INT 5
24315: PUSH
24316: EMPTY
24317: LIST
24318: LIST
24319: PUSH
24320: LD_INT 3
24322: PUSH
24323: LD_INT 4
24325: PUSH
24326: EMPTY
24327: LIST
24328: LIST
24329: PUSH
24330: LD_INT 3
24332: PUSH
24333: LD_INT 3
24335: PUSH
24336: EMPTY
24337: LIST
24338: LIST
24339: PUSH
24340: LD_INT 5
24342: PUSH
24343: LD_INT 3
24345: PUSH
24346: EMPTY
24347: LIST
24348: LIST
24349: PUSH
24350: LD_INT 3
24352: PUSH
24353: LD_INT 5
24355: PUSH
24356: EMPTY
24357: LIST
24358: LIST
24359: PUSH
24360: LD_INT 0
24362: PUSH
24363: LD_INT 3
24365: PUSH
24366: EMPTY
24367: LIST
24368: LIST
24369: PUSH
24370: LD_INT 0
24372: PUSH
24373: LD_INT 2
24375: PUSH
24376: EMPTY
24377: LIST
24378: LIST
24379: PUSH
24380: LD_INT 1
24382: PUSH
24383: LD_INT 3
24385: PUSH
24386: EMPTY
24387: LIST
24388: LIST
24389: PUSH
24390: LD_INT 1
24392: PUSH
24393: LD_INT 4
24395: PUSH
24396: EMPTY
24397: LIST
24398: LIST
24399: PUSH
24400: LD_INT 0
24402: PUSH
24403: LD_INT 4
24405: PUSH
24406: EMPTY
24407: LIST
24408: LIST
24409: PUSH
24410: LD_INT 1
24412: NEG
24413: PUSH
24414: LD_INT 3
24416: PUSH
24417: EMPTY
24418: LIST
24419: LIST
24420: PUSH
24421: LD_INT 1
24423: NEG
24424: PUSH
24425: LD_INT 2
24427: PUSH
24428: EMPTY
24429: LIST
24430: LIST
24431: PUSH
24432: LD_INT 2
24434: PUSH
24435: LD_INT 4
24437: PUSH
24438: EMPTY
24439: LIST
24440: LIST
24441: PUSH
24442: LD_INT 2
24444: NEG
24445: PUSH
24446: LD_INT 2
24448: PUSH
24449: EMPTY
24450: LIST
24451: LIST
24452: PUSH
24453: LD_INT 4
24455: NEG
24456: PUSH
24457: LD_INT 0
24459: PUSH
24460: EMPTY
24461: LIST
24462: LIST
24463: PUSH
24464: LD_INT 4
24466: NEG
24467: PUSH
24468: LD_INT 1
24470: NEG
24471: PUSH
24472: EMPTY
24473: LIST
24474: LIST
24475: PUSH
24476: LD_INT 3
24478: NEG
24479: PUSH
24480: LD_INT 0
24482: PUSH
24483: EMPTY
24484: LIST
24485: LIST
24486: PUSH
24487: LD_INT 3
24489: NEG
24490: PUSH
24491: LD_INT 1
24493: PUSH
24494: EMPTY
24495: LIST
24496: LIST
24497: PUSH
24498: LD_INT 4
24500: NEG
24501: PUSH
24502: LD_INT 1
24504: PUSH
24505: EMPTY
24506: LIST
24507: LIST
24508: PUSH
24509: LD_INT 5
24511: NEG
24512: PUSH
24513: LD_INT 0
24515: PUSH
24516: EMPTY
24517: LIST
24518: LIST
24519: PUSH
24520: LD_INT 5
24522: NEG
24523: PUSH
24524: LD_INT 1
24526: NEG
24527: PUSH
24528: EMPTY
24529: LIST
24530: LIST
24531: PUSH
24532: LD_INT 5
24534: NEG
24535: PUSH
24536: LD_INT 2
24538: NEG
24539: PUSH
24540: EMPTY
24541: LIST
24542: LIST
24543: PUSH
24544: LD_INT 3
24546: NEG
24547: PUSH
24548: LD_INT 2
24550: PUSH
24551: EMPTY
24552: LIST
24553: LIST
24554: PUSH
24555: LD_INT 3
24557: NEG
24558: PUSH
24559: LD_INT 3
24561: NEG
24562: PUSH
24563: EMPTY
24564: LIST
24565: LIST
24566: PUSH
24567: LD_INT 3
24569: NEG
24570: PUSH
24571: LD_INT 4
24573: NEG
24574: PUSH
24575: EMPTY
24576: LIST
24577: LIST
24578: PUSH
24579: LD_INT 2
24581: NEG
24582: PUSH
24583: LD_INT 3
24585: NEG
24586: PUSH
24587: EMPTY
24588: LIST
24589: LIST
24590: PUSH
24591: LD_INT 2
24593: NEG
24594: PUSH
24595: LD_INT 2
24597: NEG
24598: PUSH
24599: EMPTY
24600: LIST
24601: LIST
24602: PUSH
24603: LD_INT 3
24605: NEG
24606: PUSH
24607: LD_INT 2
24609: NEG
24610: PUSH
24611: EMPTY
24612: LIST
24613: LIST
24614: PUSH
24615: LD_INT 4
24617: NEG
24618: PUSH
24619: LD_INT 3
24621: NEG
24622: PUSH
24623: EMPTY
24624: LIST
24625: LIST
24626: PUSH
24627: LD_INT 4
24629: NEG
24630: PUSH
24631: LD_INT 4
24633: NEG
24634: PUSH
24635: EMPTY
24636: LIST
24637: LIST
24638: PUSH
24639: LD_INT 2
24641: NEG
24642: PUSH
24643: LD_INT 4
24645: NEG
24646: PUSH
24647: EMPTY
24648: LIST
24649: LIST
24650: PUSH
24651: LD_INT 4
24653: NEG
24654: PUSH
24655: LD_INT 2
24657: NEG
24658: PUSH
24659: EMPTY
24660: LIST
24661: LIST
24662: PUSH
24663: LD_INT 0
24665: PUSH
24666: LD_INT 4
24668: NEG
24669: PUSH
24670: EMPTY
24671: LIST
24672: LIST
24673: PUSH
24674: LD_INT 0
24676: PUSH
24677: LD_INT 5
24679: NEG
24680: PUSH
24681: EMPTY
24682: LIST
24683: LIST
24684: PUSH
24685: LD_INT 1
24687: PUSH
24688: LD_INT 4
24690: NEG
24691: PUSH
24692: EMPTY
24693: LIST
24694: LIST
24695: PUSH
24696: LD_INT 1
24698: PUSH
24699: LD_INT 3
24701: NEG
24702: PUSH
24703: EMPTY
24704: LIST
24705: LIST
24706: PUSH
24707: LD_INT 0
24709: PUSH
24710: LD_INT 3
24712: NEG
24713: PUSH
24714: EMPTY
24715: LIST
24716: LIST
24717: PUSH
24718: LD_INT 1
24720: NEG
24721: PUSH
24722: LD_INT 4
24724: NEG
24725: PUSH
24726: EMPTY
24727: LIST
24728: LIST
24729: PUSH
24730: LD_INT 1
24732: NEG
24733: PUSH
24734: LD_INT 5
24736: NEG
24737: PUSH
24738: EMPTY
24739: LIST
24740: LIST
24741: PUSH
24742: LD_INT 2
24744: PUSH
24745: LD_INT 3
24747: NEG
24748: PUSH
24749: EMPTY
24750: LIST
24751: LIST
24752: PUSH
24753: LD_INT 2
24755: NEG
24756: PUSH
24757: LD_INT 5
24759: NEG
24760: PUSH
24761: EMPTY
24762: LIST
24763: LIST
24764: PUSH
24765: EMPTY
24766: LIST
24767: LIST
24768: LIST
24769: LIST
24770: LIST
24771: LIST
24772: LIST
24773: LIST
24774: LIST
24775: LIST
24776: LIST
24777: LIST
24778: LIST
24779: LIST
24780: LIST
24781: LIST
24782: LIST
24783: LIST
24784: LIST
24785: LIST
24786: LIST
24787: LIST
24788: LIST
24789: LIST
24790: LIST
24791: LIST
24792: LIST
24793: LIST
24794: LIST
24795: LIST
24796: LIST
24797: LIST
24798: LIST
24799: LIST
24800: LIST
24801: LIST
24802: LIST
24803: LIST
24804: LIST
24805: LIST
24806: LIST
24807: LIST
24808: LIST
24809: LIST
24810: LIST
24811: ST_TO_ADDR
// Factory2 = [ [ 0 , 4 ] , [ 0 , 3 ] , [ 1 , 4 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ - 1 , 3 ] , [ 2 , 5 ] , [ - 2 , 3 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 2 , 0 ] , [ - 2 , 1 ] , [ - 3 , 1 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 4 , - 2 ] , [ - 2 , 2 ] , [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 3 , - 4 ] , [ - 3 , - 3 ] , [ - 4 , - 3 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 3 , - 5 ] , [ - 5 , - 3 ] , [ 0 , - 3 ] , [ 0 , - 4 ] , [ 1 , - 3 ] , [ 1 , - 2 ] , [ 0 , - 2 ] , [ - 1 , - 3 ] , [ - 1 , - 4 ] , [ 2 , - 2 ] , [ - 2 , - 4 ] , [ 4 , 0 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 4 , 1 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 3 , - 2 ] , [ 5 , 2 ] ] ;
24812: LD_ADDR_VAR 0 31
24816: PUSH
24817: LD_INT 0
24819: PUSH
24820: LD_INT 4
24822: PUSH
24823: EMPTY
24824: LIST
24825: LIST
24826: PUSH
24827: LD_INT 0
24829: PUSH
24830: LD_INT 3
24832: PUSH
24833: EMPTY
24834: LIST
24835: LIST
24836: PUSH
24837: LD_INT 1
24839: PUSH
24840: LD_INT 4
24842: PUSH
24843: EMPTY
24844: LIST
24845: LIST
24846: PUSH
24847: LD_INT 1
24849: PUSH
24850: LD_INT 5
24852: PUSH
24853: EMPTY
24854: LIST
24855: LIST
24856: PUSH
24857: LD_INT 0
24859: PUSH
24860: LD_INT 5
24862: PUSH
24863: EMPTY
24864: LIST
24865: LIST
24866: PUSH
24867: LD_INT 1
24869: NEG
24870: PUSH
24871: LD_INT 4
24873: PUSH
24874: EMPTY
24875: LIST
24876: LIST
24877: PUSH
24878: LD_INT 1
24880: NEG
24881: PUSH
24882: LD_INT 3
24884: PUSH
24885: EMPTY
24886: LIST
24887: LIST
24888: PUSH
24889: LD_INT 2
24891: PUSH
24892: LD_INT 5
24894: PUSH
24895: EMPTY
24896: LIST
24897: LIST
24898: PUSH
24899: LD_INT 2
24901: NEG
24902: PUSH
24903: LD_INT 3
24905: PUSH
24906: EMPTY
24907: LIST
24908: LIST
24909: PUSH
24910: LD_INT 3
24912: NEG
24913: PUSH
24914: LD_INT 0
24916: PUSH
24917: EMPTY
24918: LIST
24919: LIST
24920: PUSH
24921: LD_INT 3
24923: NEG
24924: PUSH
24925: LD_INT 1
24927: NEG
24928: PUSH
24929: EMPTY
24930: LIST
24931: LIST
24932: PUSH
24933: LD_INT 2
24935: NEG
24936: PUSH
24937: LD_INT 0
24939: PUSH
24940: EMPTY
24941: LIST
24942: LIST
24943: PUSH
24944: LD_INT 2
24946: NEG
24947: PUSH
24948: LD_INT 1
24950: PUSH
24951: EMPTY
24952: LIST
24953: LIST
24954: PUSH
24955: LD_INT 3
24957: NEG
24958: PUSH
24959: LD_INT 1
24961: PUSH
24962: EMPTY
24963: LIST
24964: LIST
24965: PUSH
24966: LD_INT 4
24968: NEG
24969: PUSH
24970: LD_INT 0
24972: PUSH
24973: EMPTY
24974: LIST
24975: LIST
24976: PUSH
24977: LD_INT 4
24979: NEG
24980: PUSH
24981: LD_INT 1
24983: NEG
24984: PUSH
24985: EMPTY
24986: LIST
24987: LIST
24988: PUSH
24989: LD_INT 4
24991: NEG
24992: PUSH
24993: LD_INT 2
24995: NEG
24996: PUSH
24997: EMPTY
24998: LIST
24999: LIST
25000: PUSH
25001: LD_INT 2
25003: NEG
25004: PUSH
25005: LD_INT 2
25007: PUSH
25008: EMPTY
25009: LIST
25010: LIST
25011: PUSH
25012: LD_INT 4
25014: NEG
25015: PUSH
25016: LD_INT 4
25018: NEG
25019: PUSH
25020: EMPTY
25021: LIST
25022: LIST
25023: PUSH
25024: LD_INT 4
25026: NEG
25027: PUSH
25028: LD_INT 5
25030: NEG
25031: PUSH
25032: EMPTY
25033: LIST
25034: LIST
25035: PUSH
25036: LD_INT 3
25038: NEG
25039: PUSH
25040: LD_INT 4
25042: NEG
25043: PUSH
25044: EMPTY
25045: LIST
25046: LIST
25047: PUSH
25048: LD_INT 3
25050: NEG
25051: PUSH
25052: LD_INT 3
25054: NEG
25055: PUSH
25056: EMPTY
25057: LIST
25058: LIST
25059: PUSH
25060: LD_INT 4
25062: NEG
25063: PUSH
25064: LD_INT 3
25066: NEG
25067: PUSH
25068: EMPTY
25069: LIST
25070: LIST
25071: PUSH
25072: LD_INT 5
25074: NEG
25075: PUSH
25076: LD_INT 4
25078: NEG
25079: PUSH
25080: EMPTY
25081: LIST
25082: LIST
25083: PUSH
25084: LD_INT 5
25086: NEG
25087: PUSH
25088: LD_INT 5
25090: NEG
25091: PUSH
25092: EMPTY
25093: LIST
25094: LIST
25095: PUSH
25096: LD_INT 3
25098: NEG
25099: PUSH
25100: LD_INT 5
25102: NEG
25103: PUSH
25104: EMPTY
25105: LIST
25106: LIST
25107: PUSH
25108: LD_INT 5
25110: NEG
25111: PUSH
25112: LD_INT 3
25114: NEG
25115: PUSH
25116: EMPTY
25117: LIST
25118: LIST
25119: PUSH
25120: LD_INT 0
25122: PUSH
25123: LD_INT 3
25125: NEG
25126: PUSH
25127: EMPTY
25128: LIST
25129: LIST
25130: PUSH
25131: LD_INT 0
25133: PUSH
25134: LD_INT 4
25136: NEG
25137: PUSH
25138: EMPTY
25139: LIST
25140: LIST
25141: PUSH
25142: LD_INT 1
25144: PUSH
25145: LD_INT 3
25147: NEG
25148: PUSH
25149: EMPTY
25150: LIST
25151: LIST
25152: PUSH
25153: LD_INT 1
25155: PUSH
25156: LD_INT 2
25158: NEG
25159: PUSH
25160: EMPTY
25161: LIST
25162: LIST
25163: PUSH
25164: LD_INT 0
25166: PUSH
25167: LD_INT 2
25169: NEG
25170: PUSH
25171: EMPTY
25172: LIST
25173: LIST
25174: PUSH
25175: LD_INT 1
25177: NEG
25178: PUSH
25179: LD_INT 3
25181: NEG
25182: PUSH
25183: EMPTY
25184: LIST
25185: LIST
25186: PUSH
25187: LD_INT 1
25189: NEG
25190: PUSH
25191: LD_INT 4
25193: NEG
25194: PUSH
25195: EMPTY
25196: LIST
25197: LIST
25198: PUSH
25199: LD_INT 2
25201: PUSH
25202: LD_INT 2
25204: NEG
25205: PUSH
25206: EMPTY
25207: LIST
25208: LIST
25209: PUSH
25210: LD_INT 2
25212: NEG
25213: PUSH
25214: LD_INT 4
25216: NEG
25217: PUSH
25218: EMPTY
25219: LIST
25220: LIST
25221: PUSH
25222: LD_INT 4
25224: PUSH
25225: LD_INT 0
25227: PUSH
25228: EMPTY
25229: LIST
25230: LIST
25231: PUSH
25232: LD_INT 4
25234: PUSH
25235: LD_INT 1
25237: NEG
25238: PUSH
25239: EMPTY
25240: LIST
25241: LIST
25242: PUSH
25243: LD_INT 5
25245: PUSH
25246: LD_INT 0
25248: PUSH
25249: EMPTY
25250: LIST
25251: LIST
25252: PUSH
25253: LD_INT 5
25255: PUSH
25256: LD_INT 1
25258: PUSH
25259: EMPTY
25260: LIST
25261: LIST
25262: PUSH
25263: LD_INT 4
25265: PUSH
25266: LD_INT 1
25268: PUSH
25269: EMPTY
25270: LIST
25271: LIST
25272: PUSH
25273: LD_INT 3
25275: PUSH
25276: LD_INT 0
25278: PUSH
25279: EMPTY
25280: LIST
25281: LIST
25282: PUSH
25283: LD_INT 3
25285: PUSH
25286: LD_INT 1
25288: NEG
25289: PUSH
25290: EMPTY
25291: LIST
25292: LIST
25293: PUSH
25294: LD_INT 3
25296: PUSH
25297: LD_INT 2
25299: NEG
25300: PUSH
25301: EMPTY
25302: LIST
25303: LIST
25304: PUSH
25305: LD_INT 5
25307: PUSH
25308: LD_INT 2
25310: PUSH
25311: EMPTY
25312: LIST
25313: LIST
25314: PUSH
25315: EMPTY
25316: LIST
25317: LIST
25318: LIST
25319: LIST
25320: LIST
25321: LIST
25322: LIST
25323: LIST
25324: LIST
25325: LIST
25326: LIST
25327: LIST
25328: LIST
25329: LIST
25330: LIST
25331: LIST
25332: LIST
25333: LIST
25334: LIST
25335: LIST
25336: LIST
25337: LIST
25338: LIST
25339: LIST
25340: LIST
25341: LIST
25342: LIST
25343: LIST
25344: LIST
25345: LIST
25346: LIST
25347: LIST
25348: LIST
25349: LIST
25350: LIST
25351: LIST
25352: LIST
25353: LIST
25354: LIST
25355: LIST
25356: LIST
25357: LIST
25358: LIST
25359: LIST
25360: LIST
25361: ST_TO_ADDR
// Factory3 = [ [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , - 2 ] , [ - 3 , 2 ] , [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 2 , - 3 ] , [ - 2 , - 2 ] , [ - 3 , - 2 ] , [ - 4 , - 3 ] , [ - 4 , - 4 ] , [ - 2 , - 4 ] , [ - 4 , - 2 ] , [ 0 , - 4 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ 1 , - 3 ] , [ 0 , - 3 ] , [ - 1 , - 4 ] , [ - 1 , - 5 ] , [ 2 , - 3 ] , [ - 2 , - 5 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 4 , 0 ] , [ 4 , 1 ] , [ 3 , 1 ] , [ 2 , 0 ] , [ 2 , - 1 ] , [ 2 , - 2 ] , [ 4 , 2 ] , [ 4 , 4 ] , [ 4 , 3 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 3 , 4 ] , [ 3 , 3 ] , [ 5 , 3 ] , [ 3 , 5 ] ] ;
25362: LD_ADDR_VAR 0 32
25366: PUSH
25367: LD_INT 4
25369: NEG
25370: PUSH
25371: LD_INT 0
25373: PUSH
25374: EMPTY
25375: LIST
25376: LIST
25377: PUSH
25378: LD_INT 4
25380: NEG
25381: PUSH
25382: LD_INT 1
25384: NEG
25385: PUSH
25386: EMPTY
25387: LIST
25388: LIST
25389: PUSH
25390: LD_INT 3
25392: NEG
25393: PUSH
25394: LD_INT 0
25396: PUSH
25397: EMPTY
25398: LIST
25399: LIST
25400: PUSH
25401: LD_INT 3
25403: NEG
25404: PUSH
25405: LD_INT 1
25407: PUSH
25408: EMPTY
25409: LIST
25410: LIST
25411: PUSH
25412: LD_INT 4
25414: NEG
25415: PUSH
25416: LD_INT 1
25418: PUSH
25419: EMPTY
25420: LIST
25421: LIST
25422: PUSH
25423: LD_INT 5
25425: NEG
25426: PUSH
25427: LD_INT 0
25429: PUSH
25430: EMPTY
25431: LIST
25432: LIST
25433: PUSH
25434: LD_INT 5
25436: NEG
25437: PUSH
25438: LD_INT 1
25440: NEG
25441: PUSH
25442: EMPTY
25443: LIST
25444: LIST
25445: PUSH
25446: LD_INT 5
25448: NEG
25449: PUSH
25450: LD_INT 2
25452: NEG
25453: PUSH
25454: EMPTY
25455: LIST
25456: LIST
25457: PUSH
25458: LD_INT 3
25460: NEG
25461: PUSH
25462: LD_INT 2
25464: PUSH
25465: EMPTY
25466: LIST
25467: LIST
25468: PUSH
25469: LD_INT 3
25471: NEG
25472: PUSH
25473: LD_INT 3
25475: NEG
25476: PUSH
25477: EMPTY
25478: LIST
25479: LIST
25480: PUSH
25481: LD_INT 3
25483: NEG
25484: PUSH
25485: LD_INT 4
25487: NEG
25488: PUSH
25489: EMPTY
25490: LIST
25491: LIST
25492: PUSH
25493: LD_INT 2
25495: NEG
25496: PUSH
25497: LD_INT 3
25499: NEG
25500: PUSH
25501: EMPTY
25502: LIST
25503: LIST
25504: PUSH
25505: LD_INT 2
25507: NEG
25508: PUSH
25509: LD_INT 2
25511: NEG
25512: PUSH
25513: EMPTY
25514: LIST
25515: LIST
25516: PUSH
25517: LD_INT 3
25519: NEG
25520: PUSH
25521: LD_INT 2
25523: NEG
25524: PUSH
25525: EMPTY
25526: LIST
25527: LIST
25528: PUSH
25529: LD_INT 4
25531: NEG
25532: PUSH
25533: LD_INT 3
25535: NEG
25536: PUSH
25537: EMPTY
25538: LIST
25539: LIST
25540: PUSH
25541: LD_INT 4
25543: NEG
25544: PUSH
25545: LD_INT 4
25547: NEG
25548: PUSH
25549: EMPTY
25550: LIST
25551: LIST
25552: PUSH
25553: LD_INT 2
25555: NEG
25556: PUSH
25557: LD_INT 4
25559: NEG
25560: PUSH
25561: EMPTY
25562: LIST
25563: LIST
25564: PUSH
25565: LD_INT 4
25567: NEG
25568: PUSH
25569: LD_INT 2
25571: NEG
25572: PUSH
25573: EMPTY
25574: LIST
25575: LIST
25576: PUSH
25577: LD_INT 0
25579: PUSH
25580: LD_INT 4
25582: NEG
25583: PUSH
25584: EMPTY
25585: LIST
25586: LIST
25587: PUSH
25588: LD_INT 0
25590: PUSH
25591: LD_INT 5
25593: NEG
25594: PUSH
25595: EMPTY
25596: LIST
25597: LIST
25598: PUSH
25599: LD_INT 1
25601: PUSH
25602: LD_INT 4
25604: NEG
25605: PUSH
25606: EMPTY
25607: LIST
25608: LIST
25609: PUSH
25610: LD_INT 1
25612: PUSH
25613: LD_INT 3
25615: NEG
25616: PUSH
25617: EMPTY
25618: LIST
25619: LIST
25620: PUSH
25621: LD_INT 0
25623: PUSH
25624: LD_INT 3
25626: NEG
25627: PUSH
25628: EMPTY
25629: LIST
25630: LIST
25631: PUSH
25632: LD_INT 1
25634: NEG
25635: PUSH
25636: LD_INT 4
25638: NEG
25639: PUSH
25640: EMPTY
25641: LIST
25642: LIST
25643: PUSH
25644: LD_INT 1
25646: NEG
25647: PUSH
25648: LD_INT 5
25650: NEG
25651: PUSH
25652: EMPTY
25653: LIST
25654: LIST
25655: PUSH
25656: LD_INT 2
25658: PUSH
25659: LD_INT 3
25661: NEG
25662: PUSH
25663: EMPTY
25664: LIST
25665: LIST
25666: PUSH
25667: LD_INT 2
25669: NEG
25670: PUSH
25671: LD_INT 5
25673: NEG
25674: PUSH
25675: EMPTY
25676: LIST
25677: LIST
25678: PUSH
25679: LD_INT 3
25681: PUSH
25682: LD_INT 0
25684: PUSH
25685: EMPTY
25686: LIST
25687: LIST
25688: PUSH
25689: LD_INT 3
25691: PUSH
25692: LD_INT 1
25694: NEG
25695: PUSH
25696: EMPTY
25697: LIST
25698: LIST
25699: PUSH
25700: LD_INT 4
25702: PUSH
25703: LD_INT 0
25705: PUSH
25706: EMPTY
25707: LIST
25708: LIST
25709: PUSH
25710: LD_INT 4
25712: PUSH
25713: LD_INT 1
25715: PUSH
25716: EMPTY
25717: LIST
25718: LIST
25719: PUSH
25720: LD_INT 3
25722: PUSH
25723: LD_INT 1
25725: PUSH
25726: EMPTY
25727: LIST
25728: LIST
25729: PUSH
25730: LD_INT 2
25732: PUSH
25733: LD_INT 0
25735: PUSH
25736: EMPTY
25737: LIST
25738: LIST
25739: PUSH
25740: LD_INT 2
25742: PUSH
25743: LD_INT 1
25745: NEG
25746: PUSH
25747: EMPTY
25748: LIST
25749: LIST
25750: PUSH
25751: LD_INT 2
25753: PUSH
25754: LD_INT 2
25756: NEG
25757: PUSH
25758: EMPTY
25759: LIST
25760: LIST
25761: PUSH
25762: LD_INT 4
25764: PUSH
25765: LD_INT 2
25767: PUSH
25768: EMPTY
25769: LIST
25770: LIST
25771: PUSH
25772: LD_INT 4
25774: PUSH
25775: LD_INT 4
25777: PUSH
25778: EMPTY
25779: LIST
25780: LIST
25781: PUSH
25782: LD_INT 4
25784: PUSH
25785: LD_INT 3
25787: PUSH
25788: EMPTY
25789: LIST
25790: LIST
25791: PUSH
25792: LD_INT 5
25794: PUSH
25795: LD_INT 4
25797: PUSH
25798: EMPTY
25799: LIST
25800: LIST
25801: PUSH
25802: LD_INT 5
25804: PUSH
25805: LD_INT 5
25807: PUSH
25808: EMPTY
25809: LIST
25810: LIST
25811: PUSH
25812: LD_INT 4
25814: PUSH
25815: LD_INT 5
25817: PUSH
25818: EMPTY
25819: LIST
25820: LIST
25821: PUSH
25822: LD_INT 3
25824: PUSH
25825: LD_INT 4
25827: PUSH
25828: EMPTY
25829: LIST
25830: LIST
25831: PUSH
25832: LD_INT 3
25834: PUSH
25835: LD_INT 3
25837: PUSH
25838: EMPTY
25839: LIST
25840: LIST
25841: PUSH
25842: LD_INT 5
25844: PUSH
25845: LD_INT 3
25847: PUSH
25848: EMPTY
25849: LIST
25850: LIST
25851: PUSH
25852: LD_INT 3
25854: PUSH
25855: LD_INT 5
25857: PUSH
25858: EMPTY
25859: LIST
25860: LIST
25861: PUSH
25862: EMPTY
25863: LIST
25864: LIST
25865: LIST
25866: LIST
25867: LIST
25868: LIST
25869: LIST
25870: LIST
25871: LIST
25872: LIST
25873: LIST
25874: LIST
25875: LIST
25876: LIST
25877: LIST
25878: LIST
25879: LIST
25880: LIST
25881: LIST
25882: LIST
25883: LIST
25884: LIST
25885: LIST
25886: LIST
25887: LIST
25888: LIST
25889: LIST
25890: LIST
25891: LIST
25892: LIST
25893: LIST
25894: LIST
25895: LIST
25896: LIST
25897: LIST
25898: LIST
25899: LIST
25900: LIST
25901: LIST
25902: LIST
25903: LIST
25904: LIST
25905: LIST
25906: LIST
25907: LIST
25908: ST_TO_ADDR
// Factory4 = [ [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 3 , - 4 ] , [ - 3 , - 3 ] , [ - 4 , - 3 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 3 , - 5 ] , [ - 5 , - 3 ] , [ 0 , - 3 ] , [ 0 , - 4 ] , [ 1 , - 3 ] , [ 1 , - 2 ] , [ 0 , - 2 ] , [ - 1 , - 3 ] , [ - 1 , - 4 ] , [ 2 , - 2 ] , [ - 2 , - 4 ] , [ 4 , 0 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 4 , 1 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 3 , - 2 ] , [ 5 , 2 ] , [ 3 , 3 ] , [ 3 , 2 ] , [ 4 , 3 ] , [ 4 , 4 ] , [ 3 , 4 ] , [ 2 , 3 ] , [ 2 , 2 ] , [ 4 , 2 ] , [ 2 , 4 ] , [ 0 , 4 ] , [ 0 , 3 ] , [ 1 , 4 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ - 1 , 3 ] , [ 2 , 5 ] , [ - 2 , 3 ] ] ;
25909: LD_ADDR_VAR 0 33
25913: PUSH
25914: LD_INT 4
25916: NEG
25917: PUSH
25918: LD_INT 4
25920: NEG
25921: PUSH
25922: EMPTY
25923: LIST
25924: LIST
25925: PUSH
25926: LD_INT 4
25928: NEG
25929: PUSH
25930: LD_INT 5
25932: NEG
25933: PUSH
25934: EMPTY
25935: LIST
25936: LIST
25937: PUSH
25938: LD_INT 3
25940: NEG
25941: PUSH
25942: LD_INT 4
25944: NEG
25945: PUSH
25946: EMPTY
25947: LIST
25948: LIST
25949: PUSH
25950: LD_INT 3
25952: NEG
25953: PUSH
25954: LD_INT 3
25956: NEG
25957: PUSH
25958: EMPTY
25959: LIST
25960: LIST
25961: PUSH
25962: LD_INT 4
25964: NEG
25965: PUSH
25966: LD_INT 3
25968: NEG
25969: PUSH
25970: EMPTY
25971: LIST
25972: LIST
25973: PUSH
25974: LD_INT 5
25976: NEG
25977: PUSH
25978: LD_INT 4
25980: NEG
25981: PUSH
25982: EMPTY
25983: LIST
25984: LIST
25985: PUSH
25986: LD_INT 5
25988: NEG
25989: PUSH
25990: LD_INT 5
25992: NEG
25993: PUSH
25994: EMPTY
25995: LIST
25996: LIST
25997: PUSH
25998: LD_INT 3
26000: NEG
26001: PUSH
26002: LD_INT 5
26004: NEG
26005: PUSH
26006: EMPTY
26007: LIST
26008: LIST
26009: PUSH
26010: LD_INT 5
26012: NEG
26013: PUSH
26014: LD_INT 3
26016: NEG
26017: PUSH
26018: EMPTY
26019: LIST
26020: LIST
26021: PUSH
26022: LD_INT 0
26024: PUSH
26025: LD_INT 3
26027: NEG
26028: PUSH
26029: EMPTY
26030: LIST
26031: LIST
26032: PUSH
26033: LD_INT 0
26035: PUSH
26036: LD_INT 4
26038: NEG
26039: PUSH
26040: EMPTY
26041: LIST
26042: LIST
26043: PUSH
26044: LD_INT 1
26046: PUSH
26047: LD_INT 3
26049: NEG
26050: PUSH
26051: EMPTY
26052: LIST
26053: LIST
26054: PUSH
26055: LD_INT 1
26057: PUSH
26058: LD_INT 2
26060: NEG
26061: PUSH
26062: EMPTY
26063: LIST
26064: LIST
26065: PUSH
26066: LD_INT 0
26068: PUSH
26069: LD_INT 2
26071: NEG
26072: PUSH
26073: EMPTY
26074: LIST
26075: LIST
26076: PUSH
26077: LD_INT 1
26079: NEG
26080: PUSH
26081: LD_INT 3
26083: NEG
26084: PUSH
26085: EMPTY
26086: LIST
26087: LIST
26088: PUSH
26089: LD_INT 1
26091: NEG
26092: PUSH
26093: LD_INT 4
26095: NEG
26096: PUSH
26097: EMPTY
26098: LIST
26099: LIST
26100: PUSH
26101: LD_INT 2
26103: PUSH
26104: LD_INT 2
26106: NEG
26107: PUSH
26108: EMPTY
26109: LIST
26110: LIST
26111: PUSH
26112: LD_INT 2
26114: NEG
26115: PUSH
26116: LD_INT 4
26118: NEG
26119: PUSH
26120: EMPTY
26121: LIST
26122: LIST
26123: PUSH
26124: LD_INT 4
26126: PUSH
26127: LD_INT 0
26129: PUSH
26130: EMPTY
26131: LIST
26132: LIST
26133: PUSH
26134: LD_INT 4
26136: PUSH
26137: LD_INT 1
26139: NEG
26140: PUSH
26141: EMPTY
26142: LIST
26143: LIST
26144: PUSH
26145: LD_INT 5
26147: PUSH
26148: LD_INT 0
26150: PUSH
26151: EMPTY
26152: LIST
26153: LIST
26154: PUSH
26155: LD_INT 5
26157: PUSH
26158: LD_INT 1
26160: PUSH
26161: EMPTY
26162: LIST
26163: LIST
26164: PUSH
26165: LD_INT 4
26167: PUSH
26168: LD_INT 1
26170: PUSH
26171: EMPTY
26172: LIST
26173: LIST
26174: PUSH
26175: LD_INT 3
26177: PUSH
26178: LD_INT 0
26180: PUSH
26181: EMPTY
26182: LIST
26183: LIST
26184: PUSH
26185: LD_INT 3
26187: PUSH
26188: LD_INT 1
26190: NEG
26191: PUSH
26192: EMPTY
26193: LIST
26194: LIST
26195: PUSH
26196: LD_INT 3
26198: PUSH
26199: LD_INT 2
26201: NEG
26202: PUSH
26203: EMPTY
26204: LIST
26205: LIST
26206: PUSH
26207: LD_INT 5
26209: PUSH
26210: LD_INT 2
26212: PUSH
26213: EMPTY
26214: LIST
26215: LIST
26216: PUSH
26217: LD_INT 3
26219: PUSH
26220: LD_INT 3
26222: PUSH
26223: EMPTY
26224: LIST
26225: LIST
26226: PUSH
26227: LD_INT 3
26229: PUSH
26230: LD_INT 2
26232: PUSH
26233: EMPTY
26234: LIST
26235: LIST
26236: PUSH
26237: LD_INT 4
26239: PUSH
26240: LD_INT 3
26242: PUSH
26243: EMPTY
26244: LIST
26245: LIST
26246: PUSH
26247: LD_INT 4
26249: PUSH
26250: LD_INT 4
26252: PUSH
26253: EMPTY
26254: LIST
26255: LIST
26256: PUSH
26257: LD_INT 3
26259: PUSH
26260: LD_INT 4
26262: PUSH
26263: EMPTY
26264: LIST
26265: LIST
26266: PUSH
26267: LD_INT 2
26269: PUSH
26270: LD_INT 3
26272: PUSH
26273: EMPTY
26274: LIST
26275: LIST
26276: PUSH
26277: LD_INT 2
26279: PUSH
26280: LD_INT 2
26282: PUSH
26283: EMPTY
26284: LIST
26285: LIST
26286: PUSH
26287: LD_INT 4
26289: PUSH
26290: LD_INT 2
26292: PUSH
26293: EMPTY
26294: LIST
26295: LIST
26296: PUSH
26297: LD_INT 2
26299: PUSH
26300: LD_INT 4
26302: PUSH
26303: EMPTY
26304: LIST
26305: LIST
26306: PUSH
26307: LD_INT 0
26309: PUSH
26310: LD_INT 4
26312: PUSH
26313: EMPTY
26314: LIST
26315: LIST
26316: PUSH
26317: LD_INT 0
26319: PUSH
26320: LD_INT 3
26322: PUSH
26323: EMPTY
26324: LIST
26325: LIST
26326: PUSH
26327: LD_INT 1
26329: PUSH
26330: LD_INT 4
26332: PUSH
26333: EMPTY
26334: LIST
26335: LIST
26336: PUSH
26337: LD_INT 1
26339: PUSH
26340: LD_INT 5
26342: PUSH
26343: EMPTY
26344: LIST
26345: LIST
26346: PUSH
26347: LD_INT 0
26349: PUSH
26350: LD_INT 5
26352: PUSH
26353: EMPTY
26354: LIST
26355: LIST
26356: PUSH
26357: LD_INT 1
26359: NEG
26360: PUSH
26361: LD_INT 4
26363: PUSH
26364: EMPTY
26365: LIST
26366: LIST
26367: PUSH
26368: LD_INT 1
26370: NEG
26371: PUSH
26372: LD_INT 3
26374: PUSH
26375: EMPTY
26376: LIST
26377: LIST
26378: PUSH
26379: LD_INT 2
26381: PUSH
26382: LD_INT 5
26384: PUSH
26385: EMPTY
26386: LIST
26387: LIST
26388: PUSH
26389: LD_INT 2
26391: NEG
26392: PUSH
26393: LD_INT 3
26395: PUSH
26396: EMPTY
26397: LIST
26398: LIST
26399: PUSH
26400: EMPTY
26401: LIST
26402: LIST
26403: LIST
26404: LIST
26405: LIST
26406: LIST
26407: LIST
26408: LIST
26409: LIST
26410: LIST
26411: LIST
26412: LIST
26413: LIST
26414: LIST
26415: LIST
26416: LIST
26417: LIST
26418: LIST
26419: LIST
26420: LIST
26421: LIST
26422: LIST
26423: LIST
26424: LIST
26425: LIST
26426: LIST
26427: LIST
26428: LIST
26429: LIST
26430: LIST
26431: LIST
26432: LIST
26433: LIST
26434: LIST
26435: LIST
26436: LIST
26437: LIST
26438: LIST
26439: LIST
26440: LIST
26441: LIST
26442: LIST
26443: LIST
26444: LIST
26445: LIST
26446: ST_TO_ADDR
// Factory5 = [ [ 0 , - 4 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ 1 , - 3 ] , [ 0 , - 3 ] , [ - 1 , - 4 ] , [ - 1 , - 5 ] , [ 2 , - 3 ] , [ - 2 , - 5 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 4 , 0 ] , [ 4 , 1 ] , [ 3 , 1 ] , [ 2 , 0 ] , [ 2 , - 1 ] , [ 2 , - 2 ] , [ 4 , 2 ] , [ 4 , 4 ] , [ 4 , 3 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 3 , 4 ] , [ 3 , 3 ] , [ 5 , 3 ] , [ 3 , 5 ] , [ 0 , 3 ] , [ 0 , 2 ] , [ 1 , 3 ] , [ 1 , 4 ] , [ 0 , 4 ] , [ - 1 , 3 ] , [ - 1 , 2 ] , [ 2 , 4 ] , [ - 2 , 2 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , - 2 ] , [ - 3 , 2 ] ] ;
26447: LD_ADDR_VAR 0 34
26451: PUSH
26452: LD_INT 0
26454: PUSH
26455: LD_INT 4
26457: NEG
26458: PUSH
26459: EMPTY
26460: LIST
26461: LIST
26462: PUSH
26463: LD_INT 0
26465: PUSH
26466: LD_INT 5
26468: NEG
26469: PUSH
26470: EMPTY
26471: LIST
26472: LIST
26473: PUSH
26474: LD_INT 1
26476: PUSH
26477: LD_INT 4
26479: NEG
26480: PUSH
26481: EMPTY
26482: LIST
26483: LIST
26484: PUSH
26485: LD_INT 1
26487: PUSH
26488: LD_INT 3
26490: NEG
26491: PUSH
26492: EMPTY
26493: LIST
26494: LIST
26495: PUSH
26496: LD_INT 0
26498: PUSH
26499: LD_INT 3
26501: NEG
26502: PUSH
26503: EMPTY
26504: LIST
26505: LIST
26506: PUSH
26507: LD_INT 1
26509: NEG
26510: PUSH
26511: LD_INT 4
26513: NEG
26514: PUSH
26515: EMPTY
26516: LIST
26517: LIST
26518: PUSH
26519: LD_INT 1
26521: NEG
26522: PUSH
26523: LD_INT 5
26525: NEG
26526: PUSH
26527: EMPTY
26528: LIST
26529: LIST
26530: PUSH
26531: LD_INT 2
26533: PUSH
26534: LD_INT 3
26536: NEG
26537: PUSH
26538: EMPTY
26539: LIST
26540: LIST
26541: PUSH
26542: LD_INT 2
26544: NEG
26545: PUSH
26546: LD_INT 5
26548: NEG
26549: PUSH
26550: EMPTY
26551: LIST
26552: LIST
26553: PUSH
26554: LD_INT 3
26556: PUSH
26557: LD_INT 0
26559: PUSH
26560: EMPTY
26561: LIST
26562: LIST
26563: PUSH
26564: LD_INT 3
26566: PUSH
26567: LD_INT 1
26569: NEG
26570: PUSH
26571: EMPTY
26572: LIST
26573: LIST
26574: PUSH
26575: LD_INT 4
26577: PUSH
26578: LD_INT 0
26580: PUSH
26581: EMPTY
26582: LIST
26583: LIST
26584: PUSH
26585: LD_INT 4
26587: PUSH
26588: LD_INT 1
26590: PUSH
26591: EMPTY
26592: LIST
26593: LIST
26594: PUSH
26595: LD_INT 3
26597: PUSH
26598: LD_INT 1
26600: PUSH
26601: EMPTY
26602: LIST
26603: LIST
26604: PUSH
26605: LD_INT 2
26607: PUSH
26608: LD_INT 0
26610: PUSH
26611: EMPTY
26612: LIST
26613: LIST
26614: PUSH
26615: LD_INT 2
26617: PUSH
26618: LD_INT 1
26620: NEG
26621: PUSH
26622: EMPTY
26623: LIST
26624: LIST
26625: PUSH
26626: LD_INT 2
26628: PUSH
26629: LD_INT 2
26631: NEG
26632: PUSH
26633: EMPTY
26634: LIST
26635: LIST
26636: PUSH
26637: LD_INT 4
26639: PUSH
26640: LD_INT 2
26642: PUSH
26643: EMPTY
26644: LIST
26645: LIST
26646: PUSH
26647: LD_INT 4
26649: PUSH
26650: LD_INT 4
26652: PUSH
26653: EMPTY
26654: LIST
26655: LIST
26656: PUSH
26657: LD_INT 4
26659: PUSH
26660: LD_INT 3
26662: PUSH
26663: EMPTY
26664: LIST
26665: LIST
26666: PUSH
26667: LD_INT 5
26669: PUSH
26670: LD_INT 4
26672: PUSH
26673: EMPTY
26674: LIST
26675: LIST
26676: PUSH
26677: LD_INT 5
26679: PUSH
26680: LD_INT 5
26682: PUSH
26683: EMPTY
26684: LIST
26685: LIST
26686: PUSH
26687: LD_INT 4
26689: PUSH
26690: LD_INT 5
26692: PUSH
26693: EMPTY
26694: LIST
26695: LIST
26696: PUSH
26697: LD_INT 3
26699: PUSH
26700: LD_INT 4
26702: PUSH
26703: EMPTY
26704: LIST
26705: LIST
26706: PUSH
26707: LD_INT 3
26709: PUSH
26710: LD_INT 3
26712: PUSH
26713: EMPTY
26714: LIST
26715: LIST
26716: PUSH
26717: LD_INT 5
26719: PUSH
26720: LD_INT 3
26722: PUSH
26723: EMPTY
26724: LIST
26725: LIST
26726: PUSH
26727: LD_INT 3
26729: PUSH
26730: LD_INT 5
26732: PUSH
26733: EMPTY
26734: LIST
26735: LIST
26736: PUSH
26737: LD_INT 0
26739: PUSH
26740: LD_INT 3
26742: PUSH
26743: EMPTY
26744: LIST
26745: LIST
26746: PUSH
26747: LD_INT 0
26749: PUSH
26750: LD_INT 2
26752: PUSH
26753: EMPTY
26754: LIST
26755: LIST
26756: PUSH
26757: LD_INT 1
26759: PUSH
26760: LD_INT 3
26762: PUSH
26763: EMPTY
26764: LIST
26765: LIST
26766: PUSH
26767: LD_INT 1
26769: PUSH
26770: LD_INT 4
26772: PUSH
26773: EMPTY
26774: LIST
26775: LIST
26776: PUSH
26777: LD_INT 0
26779: PUSH
26780: LD_INT 4
26782: PUSH
26783: EMPTY
26784: LIST
26785: LIST
26786: PUSH
26787: LD_INT 1
26789: NEG
26790: PUSH
26791: LD_INT 3
26793: PUSH
26794: EMPTY
26795: LIST
26796: LIST
26797: PUSH
26798: LD_INT 1
26800: NEG
26801: PUSH
26802: LD_INT 2
26804: PUSH
26805: EMPTY
26806: LIST
26807: LIST
26808: PUSH
26809: LD_INT 2
26811: PUSH
26812: LD_INT 4
26814: PUSH
26815: EMPTY
26816: LIST
26817: LIST
26818: PUSH
26819: LD_INT 2
26821: NEG
26822: PUSH
26823: LD_INT 2
26825: PUSH
26826: EMPTY
26827: LIST
26828: LIST
26829: PUSH
26830: LD_INT 4
26832: NEG
26833: PUSH
26834: LD_INT 0
26836: PUSH
26837: EMPTY
26838: LIST
26839: LIST
26840: PUSH
26841: LD_INT 4
26843: NEG
26844: PUSH
26845: LD_INT 1
26847: NEG
26848: PUSH
26849: EMPTY
26850: LIST
26851: LIST
26852: PUSH
26853: LD_INT 3
26855: NEG
26856: PUSH
26857: LD_INT 0
26859: PUSH
26860: EMPTY
26861: LIST
26862: LIST
26863: PUSH
26864: LD_INT 3
26866: NEG
26867: PUSH
26868: LD_INT 1
26870: PUSH
26871: EMPTY
26872: LIST
26873: LIST
26874: PUSH
26875: LD_INT 4
26877: NEG
26878: PUSH
26879: LD_INT 1
26881: PUSH
26882: EMPTY
26883: LIST
26884: LIST
26885: PUSH
26886: LD_INT 5
26888: NEG
26889: PUSH
26890: LD_INT 0
26892: PUSH
26893: EMPTY
26894: LIST
26895: LIST
26896: PUSH
26897: LD_INT 5
26899: NEG
26900: PUSH
26901: LD_INT 1
26903: NEG
26904: PUSH
26905: EMPTY
26906: LIST
26907: LIST
26908: PUSH
26909: LD_INT 5
26911: NEG
26912: PUSH
26913: LD_INT 2
26915: NEG
26916: PUSH
26917: EMPTY
26918: LIST
26919: LIST
26920: PUSH
26921: LD_INT 3
26923: NEG
26924: PUSH
26925: LD_INT 2
26927: PUSH
26928: EMPTY
26929: LIST
26930: LIST
26931: PUSH
26932: EMPTY
26933: LIST
26934: LIST
26935: LIST
26936: LIST
26937: LIST
26938: LIST
26939: LIST
26940: LIST
26941: LIST
26942: LIST
26943: LIST
26944: LIST
26945: LIST
26946: LIST
26947: LIST
26948: LIST
26949: LIST
26950: LIST
26951: LIST
26952: LIST
26953: LIST
26954: LIST
26955: LIST
26956: LIST
26957: LIST
26958: LIST
26959: LIST
26960: LIST
26961: LIST
26962: LIST
26963: LIST
26964: LIST
26965: LIST
26966: LIST
26967: LIST
26968: LIST
26969: LIST
26970: LIST
26971: LIST
26972: LIST
26973: LIST
26974: LIST
26975: LIST
26976: LIST
26977: LIST
26978: ST_TO_ADDR
// end ; end ;
26979: GO 26982
26981: POP
// case btype of b_depot , b_warehouse :
26982: LD_VAR 0 1
26986: PUSH
26987: LD_INT 0
26989: DOUBLE
26990: EQUAL
26991: IFTRUE 27001
26993: LD_INT 1
26995: DOUBLE
26996: EQUAL
26997: IFTRUE 27001
26999: GO 27202
27001: POP
// case nation of nation_american :
27002: LD_VAR 0 5
27006: PUSH
27007: LD_INT 1
27009: DOUBLE
27010: EQUAL
27011: IFTRUE 27015
27013: GO 27071
27015: POP
// temp_list = [ DepotAm0 , DepotAm1 , DepotAm2 , DepotAm3 , DepotAm4 , DepotAm5 ] [ dir + 1 ] ; nation_arabian :
27016: LD_ADDR_VAR 0 9
27020: PUSH
27021: LD_VAR 0 11
27025: PUSH
27026: LD_VAR 0 12
27030: PUSH
27031: LD_VAR 0 13
27035: PUSH
27036: LD_VAR 0 14
27040: PUSH
27041: LD_VAR 0 15
27045: PUSH
27046: LD_VAR 0 16
27050: PUSH
27051: EMPTY
27052: LIST
27053: LIST
27054: LIST
27055: LIST
27056: LIST
27057: LIST
27058: PUSH
27059: LD_VAR 0 4
27063: PUSH
27064: LD_INT 1
27066: PLUS
27067: ARRAY
27068: ST_TO_ADDR
27069: GO 27200
27071: LD_INT 2
27073: DOUBLE
27074: EQUAL
27075: IFTRUE 27079
27077: GO 27135
27079: POP
// temp_list = [ DepotAr0 , DepotAr1 , DepotAr2 , DepotAr3 , DepotAr4 , DepotAr5 ] [ dir + 1 ] ; nation_russian :
27080: LD_ADDR_VAR 0 9
27084: PUSH
27085: LD_VAR 0 17
27089: PUSH
27090: LD_VAR 0 18
27094: PUSH
27095: LD_VAR 0 19
27099: PUSH
27100: LD_VAR 0 20
27104: PUSH
27105: LD_VAR 0 21
27109: PUSH
27110: LD_VAR 0 22
27114: PUSH
27115: EMPTY
27116: LIST
27117: LIST
27118: LIST
27119: LIST
27120: LIST
27121: LIST
27122: PUSH
27123: LD_VAR 0 4
27127: PUSH
27128: LD_INT 1
27130: PLUS
27131: ARRAY
27132: ST_TO_ADDR
27133: GO 27200
27135: LD_INT 3
27137: DOUBLE
27138: EQUAL
27139: IFTRUE 27143
27141: GO 27199
27143: POP
// temp_list = [ DepotRu0 , DepotRu1 , DepotRu2 , DepotRu3 , DepotRu4 , DepotRu5 ] [ dir + 1 ] ; end ; b_workshop , b_factory :
27144: LD_ADDR_VAR 0 9
27148: PUSH
27149: LD_VAR 0 23
27153: PUSH
27154: LD_VAR 0 24
27158: PUSH
27159: LD_VAR 0 25
27163: PUSH
27164: LD_VAR 0 26
27168: PUSH
27169: LD_VAR 0 27
27173: PUSH
27174: LD_VAR 0 28
27178: PUSH
27179: EMPTY
27180: LIST
27181: LIST
27182: LIST
27183: LIST
27184: LIST
27185: LIST
27186: PUSH
27187: LD_VAR 0 4
27191: PUSH
27192: LD_INT 1
27194: PLUS
27195: ARRAY
27196: ST_TO_ADDR
27197: GO 27200
27199: POP
27200: GO 27749
27202: LD_INT 2
27204: DOUBLE
27205: EQUAL
27206: IFTRUE 27216
27208: LD_INT 3
27210: DOUBLE
27211: EQUAL
27212: IFTRUE 27216
27214: GO 27272
27216: POP
// temp_list = [ Factory0 , Factory1 , Factory2 , Factory3 , Factory4 , Factory5 ] [ dir + 1 ] ; b_ext_track , b_ext_gun , b_ext_rocket , b_ext_noncombat , b_ext_radar , b_ext_siberium , b_ext_stitch , b_ext_computer , b_ext_laser :
27217: LD_ADDR_VAR 0 9
27221: PUSH
27222: LD_VAR 0 29
27226: PUSH
27227: LD_VAR 0 30
27231: PUSH
27232: LD_VAR 0 31
27236: PUSH
27237: LD_VAR 0 32
27241: PUSH
27242: LD_VAR 0 33
27246: PUSH
27247: LD_VAR 0 34
27251: PUSH
27252: EMPTY
27253: LIST
27254: LIST
27255: LIST
27256: LIST
27257: LIST
27258: LIST
27259: PUSH
27260: LD_VAR 0 4
27264: PUSH
27265: LD_INT 1
27267: PLUS
27268: ARRAY
27269: ST_TO_ADDR
27270: GO 27749
27272: LD_INT 16
27274: DOUBLE
27275: EQUAL
27276: IFTRUE 27328
27278: LD_INT 17
27280: DOUBLE
27281: EQUAL
27282: IFTRUE 27328
27284: LD_INT 18
27286: DOUBLE
27287: EQUAL
27288: IFTRUE 27328
27290: LD_INT 19
27292: DOUBLE
27293: EQUAL
27294: IFTRUE 27328
27296: LD_INT 20
27298: DOUBLE
27299: EQUAL
27300: IFTRUE 27328
27302: LD_INT 21
27304: DOUBLE
27305: EQUAL
27306: IFTRUE 27328
27308: LD_INT 23
27310: DOUBLE
27311: EQUAL
27312: IFTRUE 27328
27314: LD_INT 24
27316: DOUBLE
27317: EQUAL
27318: IFTRUE 27328
27320: LD_INT 25
27322: DOUBLE
27323: EQUAL
27324: IFTRUE 27328
27326: GO 27384
27328: POP
// temp_list = [ Ext0 , Ext1 , Ext2 , Ext3 , Ext4 , Ext5 ] [ dir + 1 ] ; b_lab , b_lab_half , b_lab_full , b_lab_biological , b_lab_computer , b_lab_opto , b_lab_siberium , b_lab_spacetime , b_lab_weapon :
27329: LD_ADDR_VAR 0 9
27333: PUSH
27334: LD_VAR 0 35
27338: PUSH
27339: LD_VAR 0 36
27343: PUSH
27344: LD_VAR 0 37
27348: PUSH
27349: LD_VAR 0 38
27353: PUSH
27354: LD_VAR 0 39
27358: PUSH
27359: LD_VAR 0 40
27363: PUSH
27364: EMPTY
27365: LIST
27366: LIST
27367: LIST
27368: LIST
27369: LIST
27370: LIST
27371: PUSH
27372: LD_VAR 0 4
27376: PUSH
27377: LD_INT 1
27379: PLUS
27380: ARRAY
27381: ST_TO_ADDR
27382: GO 27749
27384: LD_INT 6
27386: DOUBLE
27387: EQUAL
27388: IFTRUE 27440
27390: LD_INT 7
27392: DOUBLE
27393: EQUAL
27394: IFTRUE 27440
27396: LD_INT 8
27398: DOUBLE
27399: EQUAL
27400: IFTRUE 27440
27402: LD_INT 13
27404: DOUBLE
27405: EQUAL
27406: IFTRUE 27440
27408: LD_INT 12
27410: DOUBLE
27411: EQUAL
27412: IFTRUE 27440
27414: LD_INT 15
27416: DOUBLE
27417: EQUAL
27418: IFTRUE 27440
27420: LD_INT 11
27422: DOUBLE
27423: EQUAL
27424: IFTRUE 27440
27426: LD_INT 14
27428: DOUBLE
27429: EQUAL
27430: IFTRUE 27440
27432: LD_INT 10
27434: DOUBLE
27435: EQUAL
27436: IFTRUE 27440
27438: GO 27496
27440: POP
// temp_list = [ Lab0 , Lab1 , Lab2 , Lab3 , Lab4 , Lab5 ] [ dir + 1 ] ; b_control_tower :
27441: LD_ADDR_VAR 0 9
27445: PUSH
27446: LD_VAR 0 41
27450: PUSH
27451: LD_VAR 0 42
27455: PUSH
27456: LD_VAR 0 43
27460: PUSH
27461: LD_VAR 0 44
27465: PUSH
27466: LD_VAR 0 45
27470: PUSH
27471: LD_VAR 0 46
27475: PUSH
27476: EMPTY
27477: LIST
27478: LIST
27479: LIST
27480: LIST
27481: LIST
27482: LIST
27483: PUSH
27484: LD_VAR 0 4
27488: PUSH
27489: LD_INT 1
27491: PLUS
27492: ARRAY
27493: ST_TO_ADDR
27494: GO 27749
27496: LD_INT 36
27498: DOUBLE
27499: EQUAL
27500: IFTRUE 27504
27502: GO 27560
27504: POP
// temp_list = [ ControlTower0 , ControlTower1 , ControlTower2 , ControlTower3 , ControlTower4 , ControlTower5 ] [ dir + 1 ] ; b_armoury , b_barracks , b_teleport , b_behemoth :
27505: LD_ADDR_VAR 0 9
27509: PUSH
27510: LD_VAR 0 47
27514: PUSH
27515: LD_VAR 0 48
27519: PUSH
27520: LD_VAR 0 49
27524: PUSH
27525: LD_VAR 0 50
27529: PUSH
27530: LD_VAR 0 51
27534: PUSH
27535: LD_VAR 0 52
27539: PUSH
27540: EMPTY
27541: LIST
27542: LIST
27543: LIST
27544: LIST
27545: LIST
27546: LIST
27547: PUSH
27548: LD_VAR 0 4
27552: PUSH
27553: LD_INT 1
27555: PLUS
27556: ARRAY
27557: ST_TO_ADDR
27558: GO 27749
27560: LD_INT 4
27562: DOUBLE
27563: EQUAL
27564: IFTRUE 27586
27566: LD_INT 5
27568: DOUBLE
27569: EQUAL
27570: IFTRUE 27586
27572: LD_INT 34
27574: DOUBLE
27575: EQUAL
27576: IFTRUE 27586
27578: LD_INT 37
27580: DOUBLE
27581: EQUAL
27582: IFTRUE 27586
27584: GO 27642
27586: POP
// temp_list = [ Barracks0 , Barracks1 , Barracks2 , Barracks3 , Barracks4 , Barracks5 ] [ dir + 1 ] ; b_breastwork , b_bunker , b_turret , b_solar_power , b_oil_power , b_siberite_power , b_oil_mine , b_siberite_mine :
27587: LD_ADDR_VAR 0 9
27591: PUSH
27592: LD_VAR 0 53
27596: PUSH
27597: LD_VAR 0 54
27601: PUSH
27602: LD_VAR 0 55
27606: PUSH
27607: LD_VAR 0 56
27611: PUSH
27612: LD_VAR 0 57
27616: PUSH
27617: LD_VAR 0 58
27621: PUSH
27622: EMPTY
27623: LIST
27624: LIST
27625: LIST
27626: LIST
27627: LIST
27628: LIST
27629: PUSH
27630: LD_VAR 0 4
27634: PUSH
27635: LD_INT 1
27637: PLUS
27638: ARRAY
27639: ST_TO_ADDR
27640: GO 27749
27642: LD_INT 31
27644: DOUBLE
27645: EQUAL
27646: IFTRUE 27692
27648: LD_INT 32
27650: DOUBLE
27651: EQUAL
27652: IFTRUE 27692
27654: LD_INT 33
27656: DOUBLE
27657: EQUAL
27658: IFTRUE 27692
27660: LD_INT 27
27662: DOUBLE
27663: EQUAL
27664: IFTRUE 27692
27666: LD_INT 26
27668: DOUBLE
27669: EQUAL
27670: IFTRUE 27692
27672: LD_INT 28
27674: DOUBLE
27675: EQUAL
27676: IFTRUE 27692
27678: LD_INT 29
27680: DOUBLE
27681: EQUAL
27682: IFTRUE 27692
27684: LD_INT 30
27686: DOUBLE
27687: EQUAL
27688: IFTRUE 27692
27690: GO 27748
27692: POP
// temp_list = [ Bunker0 , Bunker1 , Bunker2 , Bunker3 , Bunker4 , Bunker5 ] [ dir + 1 ] ; end ;
27693: LD_ADDR_VAR 0 9
27697: PUSH
27698: LD_VAR 0 59
27702: PUSH
27703: LD_VAR 0 60
27707: PUSH
27708: LD_VAR 0 61
27712: PUSH
27713: LD_VAR 0 62
27717: PUSH
27718: LD_VAR 0 63
27722: PUSH
27723: LD_VAR 0 64
27727: PUSH
27728: EMPTY
27729: LIST
27730: LIST
27731: LIST
27732: LIST
27733: LIST
27734: LIST
27735: PUSH
27736: LD_VAR 0 4
27740: PUSH
27741: LD_INT 1
27743: PLUS
27744: ARRAY
27745: ST_TO_ADDR
27746: GO 27749
27748: POP
// temp_list2 = [ ] ;
27749: LD_ADDR_VAR 0 10
27753: PUSH
27754: EMPTY
27755: ST_TO_ADDR
// for i in temp_list do
27756: LD_ADDR_VAR 0 8
27760: PUSH
27761: LD_VAR 0 9
27765: PUSH
27766: FOR_IN
27767: IFFALSE 27819
// temp_list2 = temp_list2 ^ [ [ i [ 1 ] + x , i [ 2 ] + y ] ] ;
27769: LD_ADDR_VAR 0 10
27773: PUSH
27774: LD_VAR 0 10
27778: PUSH
27779: LD_VAR 0 8
27783: PUSH
27784: LD_INT 1
27786: ARRAY
27787: PUSH
27788: LD_VAR 0 2
27792: PLUS
27793: PUSH
27794: LD_VAR 0 8
27798: PUSH
27799: LD_INT 2
27801: ARRAY
27802: PUSH
27803: LD_VAR 0 3
27807: PLUS
27808: PUSH
27809: EMPTY
27810: LIST
27811: LIST
27812: PUSH
27813: EMPTY
27814: LIST
27815: ADD
27816: ST_TO_ADDR
27817: GO 27766
27819: POP
27820: POP
// result = temp_list2 ;
27821: LD_ADDR_VAR 0 7
27825: PUSH
27826: LD_VAR 0 10
27830: ST_TO_ADDR
// end ;
27831: LD_VAR 0 7
27835: RET
// export function IsNearbyEntrance ( unit , building , distance ) ; var i , entrance ; begin
27836: LD_INT 0
27838: PPUSH
27839: PPUSH
27840: PPUSH
// result := false ;
27841: LD_ADDR_VAR 0 4
27845: PUSH
27846: LD_INT 0
27848: ST_TO_ADDR
// if not unit or not building or IsInUnit ( unit ) then
27849: LD_VAR 0 1
27853: NOT
27854: PUSH
27855: LD_VAR 0 2
27859: NOT
27860: OR
27861: PUSH
27862: LD_VAR 0 1
27866: PPUSH
27867: CALL_OW 310
27871: OR
27872: IFFALSE 27876
// exit ;
27874: GO 28080
// if distance < 0 then
27876: LD_VAR 0 3
27880: PUSH
27881: LD_INT 0
27883: LESS
27884: IFFALSE 27894
// distance := 0 ;
27886: LD_ADDR_VAR 0 3
27890: PUSH
27891: LD_INT 0
27893: ST_TO_ADDR
// entrance := GetBuildingHexes ( GetBType ( building ) , GetX ( building ) , GetY ( building ) , GetDir ( building ) , GetNation ( building ) , 1 ) ;
27894: LD_ADDR_VAR 0 6
27898: PUSH
27899: LD_VAR 0 2
27903: PPUSH
27904: CALL_OW 266
27908: PPUSH
27909: LD_VAR 0 2
27913: PPUSH
27914: CALL_OW 250
27918: PPUSH
27919: LD_VAR 0 2
27923: PPUSH
27924: CALL_OW 251
27928: PPUSH
27929: LD_VAR 0 2
27933: PPUSH
27934: CALL_OW 254
27938: PPUSH
27939: LD_VAR 0 2
27943: PPUSH
27944: CALL_OW 248
27948: PPUSH
27949: LD_INT 1
27951: PPUSH
27952: CALL 9297 0 6
27956: ST_TO_ADDR
// if not entrance then
27957: LD_VAR 0 6
27961: NOT
27962: IFFALSE 27966
// exit ;
27964: GO 28080
// for i in entrance do
27966: LD_ADDR_VAR 0 5
27970: PUSH
27971: LD_VAR 0 6
27975: PUSH
27976: FOR_IN
27977: IFFALSE 28078
// begin if not distance then
27979: LD_VAR 0 3
27983: NOT
27984: IFFALSE 28029
// begin if IsAt ( unit , i [ 1 ] , i [ 2 ] ) then
27986: LD_VAR 0 1
27990: PPUSH
27991: LD_VAR 0 5
27995: PUSH
27996: LD_INT 1
27998: ARRAY
27999: PPUSH
28000: LD_VAR 0 5
28004: PUSH
28005: LD_INT 2
28007: ARRAY
28008: PPUSH
28009: CALL_OW 307
28013: IFFALSE 28027
// begin result := true ;
28015: LD_ADDR_VAR 0 4
28019: PUSH
28020: LD_INT 1
28022: ST_TO_ADDR
// exit ;
28023: POP
28024: POP
28025: GO 28080
// end ; end else
28027: GO 28076
// begin if GetDistUnitXY ( unit , i [ 1 ] , i [ 2 ] ) <= distance then
28029: LD_VAR 0 1
28033: PPUSH
28034: LD_VAR 0 5
28038: PUSH
28039: LD_INT 1
28041: ARRAY
28042: PPUSH
28043: LD_VAR 0 5
28047: PUSH
28048: LD_INT 2
28050: ARRAY
28051: PPUSH
28052: CALL_OW 297
28056: PUSH
28057: LD_VAR 0 3
28061: LESSEQUAL
28062: IFFALSE 28076
// begin result := true ;
28064: LD_ADDR_VAR 0 4
28068: PUSH
28069: LD_INT 1
28071: ST_TO_ADDR
// exit ;
28072: POP
28073: POP
28074: GO 28080
// end ; end ; end ;
28076: GO 27976
28078: POP
28079: POP
// end ;
28080: LD_VAR 0 4
28084: RET
// export function CanSpot ( unit , unit2 ) ; var i , building ; begin
28085: LD_INT 0
28087: PPUSH
28088: PPUSH
28089: PPUSH
// result := false ;
28090: LD_ADDR_VAR 0 3
28094: PUSH
28095: LD_INT 0
28097: ST_TO_ADDR
// if not unit or not unit2 or not IsOk ( unit ) or not IsOk ( unit2 ) then
28098: LD_VAR 0 1
28102: NOT
28103: PUSH
28104: LD_VAR 0 2
28108: NOT
28109: OR
28110: PUSH
28111: LD_VAR 0 1
28115: PPUSH
28116: CALL_OW 302
28120: NOT
28121: OR
28122: PUSH
28123: LD_VAR 0 2
28127: PPUSH
28128: CALL_OW 302
28132: NOT
28133: OR
28134: IFFALSE 28138
// exit ;
28136: GO 28299
// if GetDistUnits ( unit , NearestUnitToUnit ( FilterAllUnits ( [ [ f_enemy , GetSide ( unit ) ] , [ f_not , [ f_type , unit_building ] ] ] ) , unit ) ) < 8 then
28138: LD_VAR 0 1
28142: PPUSH
28143: LD_INT 81
28145: PUSH
28146: LD_VAR 0 1
28150: PPUSH
28151: CALL_OW 255
28155: PUSH
28156: EMPTY
28157: LIST
28158: LIST
28159: PUSH
28160: LD_INT 3
28162: PUSH
28163: LD_INT 21
28165: PUSH
28166: LD_INT 3
28168: PUSH
28169: EMPTY
28170: LIST
28171: LIST
28172: PUSH
28173: EMPTY
28174: LIST
28175: LIST
28176: PUSH
28177: EMPTY
28178: LIST
28179: LIST
28180: PPUSH
28181: CALL_OW 69
28185: PPUSH
28186: LD_VAR 0 1
28190: PPUSH
28191: CALL_OW 74
28195: PPUSH
28196: CALL_OW 296
28200: PUSH
28201: LD_INT 8
28203: LESS
28204: IFFALSE 28208
// exit ;
28206: GO 28299
// building := IsInUnit ( unit2 ) ;
28208: LD_ADDR_VAR 0 5
28212: PUSH
28213: LD_VAR 0 2
28217: PPUSH
28218: CALL_OW 310
28222: ST_TO_ADDR
// if building then
28223: LD_VAR 0 5
28227: IFFALSE 28254
// result := IsNearbyEntrance ( unit , building , 2 ) else
28229: LD_ADDR_VAR 0 3
28233: PUSH
28234: LD_VAR 0 1
28238: PPUSH
28239: LD_VAR 0 5
28243: PPUSH
28244: LD_INT 2
28246: PPUSH
28247: CALL 27836 0 3
28251: ST_TO_ADDR
28252: GO 28299
// result := ( GetDistUnits ( unit , unit2 ) < 6 and See ( GetSide ( unit2 ) , unit ) ) ;
28254: LD_ADDR_VAR 0 3
28258: PUSH
28259: LD_VAR 0 1
28263: PPUSH
28264: LD_VAR 0 2
28268: PPUSH
28269: CALL_OW 296
28273: PUSH
28274: LD_INT 6
28276: LESS
28277: PUSH
28278: LD_VAR 0 2
28282: PPUSH
28283: CALL_OW 255
28287: PPUSH
28288: LD_VAR 0 1
28292: PPUSH
28293: CALL_OW 292
28297: AND
28298: ST_TO_ADDR
// end ;
28299: LD_VAR 0 3
28303: RET
// export function GetFacExt ( factory ) ; var tmp , i , list ; begin
28304: LD_INT 0
28306: PPUSH
28307: PPUSH
28308: PPUSH
28309: PPUSH
// tmp := [ ] ;
28310: LD_ADDR_VAR 0 3
28314: PUSH
28315: EMPTY
28316: ST_TO_ADDR
// list := [ ] ;
28317: LD_ADDR_VAR 0 5
28321: PUSH
28322: EMPTY
28323: ST_TO_ADDR
// for i = 16 to 25 do
28324: LD_ADDR_VAR 0 4
28328: PUSH
28329: DOUBLE
28330: LD_INT 16
28332: DEC
28333: ST_TO_ADDR
28334: LD_INT 25
28336: PUSH
28337: FOR_TO
28338: IFFALSE 28411
// tmp := tmp ^ FilterAllUnits ( [ [ [ f_side , GetSide ( factory ) ] , [ f_dist , factory , 6 ] , [ f_btype , i ] ] ] ) ;
28340: LD_ADDR_VAR 0 3
28344: PUSH
28345: LD_VAR 0 3
28349: PUSH
28350: LD_INT 22
28352: PUSH
28353: LD_VAR 0 1
28357: PPUSH
28358: CALL_OW 255
28362: PUSH
28363: EMPTY
28364: LIST
28365: LIST
28366: PUSH
28367: LD_INT 91
28369: PUSH
28370: LD_VAR 0 1
28374: PUSH
28375: LD_INT 6
28377: PUSH
28378: EMPTY
28379: LIST
28380: LIST
28381: LIST
28382: PUSH
28383: LD_INT 30
28385: PUSH
28386: LD_VAR 0 4
28390: PUSH
28391: EMPTY
28392: LIST
28393: LIST
28394: PUSH
28395: EMPTY
28396: LIST
28397: LIST
28398: LIST
28399: PUSH
28400: EMPTY
28401: LIST
28402: PPUSH
28403: CALL_OW 69
28407: ADD
28408: ST_TO_ADDR
28409: GO 28337
28411: POP
28412: POP
// for i = 1 to tmp do
28413: LD_ADDR_VAR 0 4
28417: PUSH
28418: DOUBLE
28419: LD_INT 1
28421: DEC
28422: ST_TO_ADDR
28423: LD_VAR 0 3
28427: PUSH
28428: FOR_TO
28429: IFFALSE 28517
// list := list ^ [ [ GetBType ( tmp [ i ] ) , GetX ( tmp [ i ] ) , GetY ( tmp [ i ] ) , GetDir ( tmp [ i ] ) ] ] ;
28431: LD_ADDR_VAR 0 5
28435: PUSH
28436: LD_VAR 0 5
28440: PUSH
28441: LD_VAR 0 3
28445: PUSH
28446: LD_VAR 0 4
28450: ARRAY
28451: PPUSH
28452: CALL_OW 266
28456: PUSH
28457: LD_VAR 0 3
28461: PUSH
28462: LD_VAR 0 4
28466: ARRAY
28467: PPUSH
28468: CALL_OW 250
28472: PUSH
28473: LD_VAR 0 3
28477: PUSH
28478: LD_VAR 0 4
28482: ARRAY
28483: PPUSH
28484: CALL_OW 251
28488: PUSH
28489: LD_VAR 0 3
28493: PUSH
28494: LD_VAR 0 4
28498: ARRAY
28499: PPUSH
28500: CALL_OW 254
28504: PUSH
28505: EMPTY
28506: LIST
28507: LIST
28508: LIST
28509: LIST
28510: PUSH
28511: EMPTY
28512: LIST
28513: ADD
28514: ST_TO_ADDR
28515: GO 28428
28517: POP
28518: POP
// result := list ;
28519: LD_ADDR_VAR 0 2
28523: PUSH
28524: LD_VAR 0 5
28528: ST_TO_ADDR
// end ;
28529: LD_VAR 0 2
28533: RET
// export function Produce ( factory , chassis , engine , control , weapon ) ; var i , tmp , _chassis , _weapon , _engine , _control ; begin
28534: LD_INT 0
28536: PPUSH
28537: PPUSH
28538: PPUSH
28539: PPUSH
28540: PPUSH
28541: PPUSH
28542: PPUSH
// if not factory then
28543: LD_VAR 0 1
28547: NOT
28548: IFFALSE 28552
// exit ;
28550: GO 29077
// if control = control_apeman then
28552: LD_VAR 0 4
28556: PUSH
28557: LD_INT 5
28559: EQUAL
28560: IFFALSE 28669
// begin tmp := UnitsInside ( factory ) ;
28562: LD_ADDR_VAR 0 8
28566: PUSH
28567: LD_VAR 0 1
28571: PPUSH
28572: CALL_OW 313
28576: ST_TO_ADDR
// if not UnitFilter ( tmp , [ f_class , class_apeman ] ) then
28577: LD_VAR 0 8
28581: PPUSH
28582: LD_INT 25
28584: PUSH
28585: LD_INT 12
28587: PUSH
28588: EMPTY
28589: LIST
28590: LIST
28591: PPUSH
28592: CALL_OW 72
28596: NOT
28597: IFFALSE 28607
// control := control_manual ;
28599: LD_ADDR_VAR 0 4
28603: PUSH
28604: LD_INT 1
28606: ST_TO_ADDR
// tmp := GetFacExt ( factory ) ;
28607: LD_ADDR_VAR 0 8
28611: PUSH
28612: LD_VAR 0 1
28616: PPUSH
28617: CALL 28304 0 1
28621: ST_TO_ADDR
// if tmp then
28622: LD_VAR 0 8
28626: IFFALSE 28669
// begin for i in tmp do
28628: LD_ADDR_VAR 0 7
28632: PUSH
28633: LD_VAR 0 8
28637: PUSH
28638: FOR_IN
28639: IFFALSE 28667
// if i [ 1 ] = b_ext_radar then
28641: LD_VAR 0 7
28645: PUSH
28646: LD_INT 1
28648: ARRAY
28649: PUSH
28650: LD_INT 20
28652: EQUAL
28653: IFFALSE 28665
// begin control := control_remote ;
28655: LD_ADDR_VAR 0 4
28659: PUSH
28660: LD_INT 2
28662: ST_TO_ADDR
// break ;
28663: GO 28667
// end ;
28665: GO 28638
28667: POP
28668: POP
// end ; end ; if CanBeConstructed ( factory , chassis , engine , control , weapon ) then
28669: LD_VAR 0 1
28673: PPUSH
28674: LD_VAR 0 2
28678: PPUSH
28679: LD_VAR 0 3
28683: PPUSH
28684: LD_VAR 0 4
28688: PPUSH
28689: LD_VAR 0 5
28693: PPUSH
28694: CALL_OW 448
28698: IFFALSE 28733
// begin result := [ chassis , engine , control , weapon ] ;
28700: LD_ADDR_VAR 0 6
28704: PUSH
28705: LD_VAR 0 2
28709: PUSH
28710: LD_VAR 0 3
28714: PUSH
28715: LD_VAR 0 4
28719: PUSH
28720: LD_VAR 0 5
28724: PUSH
28725: EMPTY
28726: LIST
28727: LIST
28728: LIST
28729: LIST
28730: ST_TO_ADDR
// exit ;
28731: GO 29077
// end ; _chassis := AvailableChassisList ( factory ) ;
28733: LD_ADDR_VAR 0 9
28737: PUSH
28738: LD_VAR 0 1
28742: PPUSH
28743: CALL_OW 475
28747: ST_TO_ADDR
// _engine := AvailableEngineList ( factory ) ;
28748: LD_ADDR_VAR 0 11
28752: PUSH
28753: LD_VAR 0 1
28757: PPUSH
28758: CALL_OW 476
28762: ST_TO_ADDR
// _control := AvailableControlList ( factory ) ;
28763: LD_ADDR_VAR 0 12
28767: PUSH
28768: LD_VAR 0 1
28772: PPUSH
28773: CALL_OW 477
28777: ST_TO_ADDR
// _weapon := AvailableWeaponList ( factory ) ;
28778: LD_ADDR_VAR 0 10
28782: PUSH
28783: LD_VAR 0 1
28787: PPUSH
28788: CALL_OW 478
28792: ST_TO_ADDR
// if not chassis in _chassis then
28793: LD_VAR 0 2
28797: PUSH
28798: LD_VAR 0 9
28802: IN
28803: NOT
28804: IFFALSE 28830
// chassis := _chassis [ rand ( 1 , _chassis ) ] ;
28806: LD_ADDR_VAR 0 2
28810: PUSH
28811: LD_VAR 0 9
28815: PUSH
28816: LD_INT 1
28818: PPUSH
28819: LD_VAR 0 9
28823: PPUSH
28824: CALL_OW 12
28828: ARRAY
28829: ST_TO_ADDR
// if not EngineCanBeMount ( chassis , engine ) then
28830: LD_VAR 0 2
28834: PPUSH
28835: LD_VAR 0 3
28839: PPUSH
28840: CALL 29082 0 2
28844: NOT
28845: IFFALSE 28904
// repeat engine := _engine [ 1 ] ;
28847: LD_ADDR_VAR 0 3
28851: PUSH
28852: LD_VAR 0 11
28856: PUSH
28857: LD_INT 1
28859: ARRAY
28860: ST_TO_ADDR
// _engine := Delete ( _engine , 1 ) ;
28861: LD_ADDR_VAR 0 11
28865: PUSH
28866: LD_VAR 0 11
28870: PPUSH
28871: LD_INT 1
28873: PPUSH
28874: CALL_OW 3
28878: ST_TO_ADDR
// until EngineCanBeMount ( chassis , engine ) or _engine = [ ] ;
28879: LD_VAR 0 2
28883: PPUSH
28884: LD_VAR 0 3
28888: PPUSH
28889: CALL 29082 0 2
28893: PUSH
28894: LD_VAR 0 11
28898: PUSH
28899: EMPTY
28900: EQUAL
28901: OR
28902: IFFALSE 28847
// if not control in _control then
28904: LD_VAR 0 4
28908: PUSH
28909: LD_VAR 0 12
28913: IN
28914: NOT
28915: IFFALSE 28941
// control := _control [ rand ( 1 , _control ) ] ;
28917: LD_ADDR_VAR 0 4
28921: PUSH
28922: LD_VAR 0 12
28926: PUSH
28927: LD_INT 1
28929: PPUSH
28930: LD_VAR 0 12
28934: PPUSH
28935: CALL_OW 12
28939: ARRAY
28940: ST_TO_ADDR
// if not WeaponCanBeMount ( chassis , weapon ) then
28941: LD_VAR 0 2
28945: PPUSH
28946: LD_VAR 0 5
28950: PPUSH
28951: CALL 29302 0 2
28955: NOT
28956: IFFALSE 29015
// repeat weapon := _weapon [ 1 ] ;
28958: LD_ADDR_VAR 0 5
28962: PUSH
28963: LD_VAR 0 10
28967: PUSH
28968: LD_INT 1
28970: ARRAY
28971: ST_TO_ADDR
// _weapon := Delete ( _weapon , 1 ) ;
28972: LD_ADDR_VAR 0 10
28976: PUSH
28977: LD_VAR 0 10
28981: PPUSH
28982: LD_INT 1
28984: PPUSH
28985: CALL_OW 3
28989: ST_TO_ADDR
// until WeaponCanBeMount ( chassis , weapon ) or _weapon = [ ] ;
28990: LD_VAR 0 2
28994: PPUSH
28995: LD_VAR 0 5
28999: PPUSH
29000: CALL 29302 0 2
29004: PUSH
29005: LD_VAR 0 10
29009: PUSH
29010: EMPTY
29011: EQUAL
29012: OR
29013: IFFALSE 28958
// if CanBeConstructed ( factory , chassis , engine , control , weapon ) then
29015: LD_VAR 0 1
29019: PPUSH
29020: LD_VAR 0 2
29024: PPUSH
29025: LD_VAR 0 3
29029: PPUSH
29030: LD_VAR 0 4
29034: PPUSH
29035: LD_VAR 0 5
29039: PPUSH
29040: CALL_OW 448
29044: IFFALSE 29077
// result := [ chassis , engine , control , weapon ] ;
29046: LD_ADDR_VAR 0 6
29050: PUSH
29051: LD_VAR 0 2
29055: PUSH
29056: LD_VAR 0 3
29060: PUSH
29061: LD_VAR 0 4
29065: PUSH
29066: LD_VAR 0 5
29070: PUSH
29071: EMPTY
29072: LIST
29073: LIST
29074: LIST
29075: LIST
29076: ST_TO_ADDR
// end ;
29077: LD_VAR 0 6
29081: RET
// export function EngineCanBeMount ( chassis , engine ) ; begin
29082: LD_INT 0
29084: PPUSH
// if not chassis or not engine then
29085: LD_VAR 0 1
29089: NOT
29090: PUSH
29091: LD_VAR 0 2
29095: NOT
29096: OR
29097: IFFALSE 29101
// exit ;
29099: GO 29297
// case engine of engine_solar :
29101: LD_VAR 0 2
29105: PUSH
29106: LD_INT 2
29108: DOUBLE
29109: EQUAL
29110: IFTRUE 29114
29112: GO 29152
29114: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked , us_light_wheeled , us_medium_wheeled , us_medium_tracked ] ; engine_combustion :
29115: LD_ADDR_VAR 0 3
29119: PUSH
29120: LD_INT 11
29122: PUSH
29123: LD_INT 12
29125: PUSH
29126: LD_INT 13
29128: PUSH
29129: LD_INT 14
29131: PUSH
29132: LD_INT 1
29134: PUSH
29135: LD_INT 2
29137: PUSH
29138: LD_INT 3
29140: PUSH
29141: EMPTY
29142: LIST
29143: LIST
29144: LIST
29145: LIST
29146: LIST
29147: LIST
29148: LIST
29149: ST_TO_ADDR
29150: GO 29281
29152: LD_INT 1
29154: DOUBLE
29155: EQUAL
29156: IFTRUE 29160
29158: GO 29222
29160: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked , us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling , ru_medium_wheeled , ru_heavy_wheeled , ru_medium_tracked , ru_heavy_tracked ] ; engine_siberite :
29161: LD_ADDR_VAR 0 3
29165: PUSH
29166: LD_INT 11
29168: PUSH
29169: LD_INT 12
29171: PUSH
29172: LD_INT 13
29174: PUSH
29175: LD_INT 14
29177: PUSH
29178: LD_INT 1
29180: PUSH
29181: LD_INT 2
29183: PUSH
29184: LD_INT 3
29186: PUSH
29187: LD_INT 4
29189: PUSH
29190: LD_INT 5
29192: PUSH
29193: LD_INT 21
29195: PUSH
29196: LD_INT 23
29198: PUSH
29199: LD_INT 22
29201: PUSH
29202: LD_INT 24
29204: PUSH
29205: EMPTY
29206: LIST
29207: LIST
29208: LIST
29209: LIST
29210: LIST
29211: LIST
29212: LIST
29213: LIST
29214: LIST
29215: LIST
29216: LIST
29217: LIST
29218: LIST
29219: ST_TO_ADDR
29220: GO 29281
29222: LD_INT 3
29224: DOUBLE
29225: EQUAL
29226: IFTRUE 29230
29228: GO 29280
29230: POP
// result := [ ar_medium_trike , ar_half_tracked , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling , ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; end ;
29231: LD_ADDR_VAR 0 3
29235: PUSH
29236: LD_INT 13
29238: PUSH
29239: LD_INT 14
29241: PUSH
29242: LD_INT 2
29244: PUSH
29245: LD_INT 3
29247: PUSH
29248: LD_INT 4
29250: PUSH
29251: LD_INT 5
29253: PUSH
29254: LD_INT 21
29256: PUSH
29257: LD_INT 22
29259: PUSH
29260: LD_INT 23
29262: PUSH
29263: LD_INT 24
29265: PUSH
29266: EMPTY
29267: LIST
29268: LIST
29269: LIST
29270: LIST
29271: LIST
29272: LIST
29273: LIST
29274: LIST
29275: LIST
29276: LIST
29277: ST_TO_ADDR
29278: GO 29281
29280: POP
// result := ( chassis in result ) ;
29281: LD_ADDR_VAR 0 3
29285: PUSH
29286: LD_VAR 0 1
29290: PUSH
29291: LD_VAR 0 3
29295: IN
29296: ST_TO_ADDR
// end ;
29297: LD_VAR 0 3
29301: RET
// export function WeaponCanBeMount ( chassis , weapon ) ; begin
29302: LD_INT 0
29304: PPUSH
// if not chassis or not weapon then
29305: LD_VAR 0 1
29309: NOT
29310: PUSH
29311: LD_VAR 0 2
29315: NOT
29316: OR
29317: IFFALSE 29321
// exit ;
29319: GO 30347
// case weapon of us_machine_gun :
29321: LD_VAR 0 2
29325: PUSH
29326: LD_INT 2
29328: DOUBLE
29329: EQUAL
29330: IFTRUE 29334
29332: GO 29364
29334: POP
// result := [ us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_light_gun :
29335: LD_ADDR_VAR 0 3
29339: PUSH
29340: LD_INT 1
29342: PUSH
29343: LD_INT 2
29345: PUSH
29346: LD_INT 3
29348: PUSH
29349: LD_INT 4
29351: PUSH
29352: LD_INT 5
29354: PUSH
29355: EMPTY
29356: LIST
29357: LIST
29358: LIST
29359: LIST
29360: LIST
29361: ST_TO_ADDR
29362: GO 30331
29364: LD_INT 3
29366: DOUBLE
29367: EQUAL
29368: IFTRUE 29372
29370: GO 29402
29372: POP
// result := [ us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_radar :
29373: LD_ADDR_VAR 0 3
29377: PUSH
29378: LD_INT 1
29380: PUSH
29381: LD_INT 2
29383: PUSH
29384: LD_INT 3
29386: PUSH
29387: LD_INT 4
29389: PUSH
29390: LD_INT 5
29392: PUSH
29393: EMPTY
29394: LIST
29395: LIST
29396: LIST
29397: LIST
29398: LIST
29399: ST_TO_ADDR
29400: GO 30331
29402: LD_INT 11
29404: DOUBLE
29405: EQUAL
29406: IFTRUE 29410
29408: GO 29440
29410: POP
// result := [ us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_gatling_gun :
29411: LD_ADDR_VAR 0 3
29415: PUSH
29416: LD_INT 1
29418: PUSH
29419: LD_INT 2
29421: PUSH
29422: LD_INT 3
29424: PUSH
29425: LD_INT 4
29427: PUSH
29428: LD_INT 5
29430: PUSH
29431: EMPTY
29432: LIST
29433: LIST
29434: LIST
29435: LIST
29436: LIST
29437: ST_TO_ADDR
29438: GO 30331
29440: LD_INT 4
29442: DOUBLE
29443: EQUAL
29444: IFTRUE 29448
29446: GO 29474
29448: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_double_gun :
29449: LD_ADDR_VAR 0 3
29453: PUSH
29454: LD_INT 2
29456: PUSH
29457: LD_INT 3
29459: PUSH
29460: LD_INT 4
29462: PUSH
29463: LD_INT 5
29465: PUSH
29466: EMPTY
29467: LIST
29468: LIST
29469: LIST
29470: LIST
29471: ST_TO_ADDR
29472: GO 30331
29474: LD_INT 5
29476: DOUBLE
29477: EQUAL
29478: IFTRUE 29482
29480: GO 29508
29482: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_laser :
29483: LD_ADDR_VAR 0 3
29487: PUSH
29488: LD_INT 2
29490: PUSH
29491: LD_INT 3
29493: PUSH
29494: LD_INT 4
29496: PUSH
29497: LD_INT 5
29499: PUSH
29500: EMPTY
29501: LIST
29502: LIST
29503: LIST
29504: LIST
29505: ST_TO_ADDR
29506: GO 30331
29508: LD_INT 9
29510: DOUBLE
29511: EQUAL
29512: IFTRUE 29516
29514: GO 29542
29516: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_rocket_launcher :
29517: LD_ADDR_VAR 0 3
29521: PUSH
29522: LD_INT 2
29524: PUSH
29525: LD_INT 3
29527: PUSH
29528: LD_INT 4
29530: PUSH
29531: LD_INT 5
29533: PUSH
29534: EMPTY
29535: LIST
29536: LIST
29537: LIST
29538: LIST
29539: ST_TO_ADDR
29540: GO 30331
29542: LD_INT 7
29544: DOUBLE
29545: EQUAL
29546: IFTRUE 29550
29548: GO 29576
29550: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_cargo_bay :
29551: LD_ADDR_VAR 0 3
29555: PUSH
29556: LD_INT 2
29558: PUSH
29559: LD_INT 3
29561: PUSH
29562: LD_INT 4
29564: PUSH
29565: LD_INT 5
29567: PUSH
29568: EMPTY
29569: LIST
29570: LIST
29571: LIST
29572: LIST
29573: ST_TO_ADDR
29574: GO 30331
29576: LD_INT 12
29578: DOUBLE
29579: EQUAL
29580: IFTRUE 29584
29582: GO 29610
29584: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_crane :
29585: LD_ADDR_VAR 0 3
29589: PUSH
29590: LD_INT 2
29592: PUSH
29593: LD_INT 3
29595: PUSH
29596: LD_INT 4
29598: PUSH
29599: LD_INT 5
29601: PUSH
29602: EMPTY
29603: LIST
29604: LIST
29605: LIST
29606: LIST
29607: ST_TO_ADDR
29608: GO 30331
29610: LD_INT 13
29612: DOUBLE
29613: EQUAL
29614: IFTRUE 29618
29616: GO 29644
29618: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_bulldozer :
29619: LD_ADDR_VAR 0 3
29623: PUSH
29624: LD_INT 2
29626: PUSH
29627: LD_INT 3
29629: PUSH
29630: LD_INT 4
29632: PUSH
29633: LD_INT 5
29635: PUSH
29636: EMPTY
29637: LIST
29638: LIST
29639: LIST
29640: LIST
29641: ST_TO_ADDR
29642: GO 30331
29644: LD_INT 14
29646: DOUBLE
29647: EQUAL
29648: IFTRUE 29652
29650: GO 29670
29652: POP
// result := [ us_heavy_tracked , us_morphling ] ; us_heavy_gun :
29653: LD_ADDR_VAR 0 3
29657: PUSH
29658: LD_INT 4
29660: PUSH
29661: LD_INT 5
29663: PUSH
29664: EMPTY
29665: LIST
29666: LIST
29667: ST_TO_ADDR
29668: GO 30331
29670: LD_INT 6
29672: DOUBLE
29673: EQUAL
29674: IFTRUE 29678
29676: GO 29696
29678: POP
// result := [ us_heavy_tracked , us_morphling ] ; us_double_laser :
29679: LD_ADDR_VAR 0 3
29683: PUSH
29684: LD_INT 4
29686: PUSH
29687: LD_INT 5
29689: PUSH
29690: EMPTY
29691: LIST
29692: LIST
29693: ST_TO_ADDR
29694: GO 30331
29696: LD_INT 10
29698: DOUBLE
29699: EQUAL
29700: IFTRUE 29704
29702: GO 29722
29704: POP
// result := [ us_heavy_tracked , us_morphling ] ; ar_multimissile_ballista :
29705: LD_ADDR_VAR 0 3
29709: PUSH
29710: LD_INT 4
29712: PUSH
29713: LD_INT 5
29715: PUSH
29716: EMPTY
29717: LIST
29718: LIST
29719: ST_TO_ADDR
29720: GO 30331
29722: LD_INT 22
29724: DOUBLE
29725: EQUAL
29726: IFTRUE 29730
29728: GO 29756
29730: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_light_gun :
29731: LD_ADDR_VAR 0 3
29735: PUSH
29736: LD_INT 11
29738: PUSH
29739: LD_INT 12
29741: PUSH
29742: LD_INT 13
29744: PUSH
29745: LD_INT 14
29747: PUSH
29748: EMPTY
29749: LIST
29750: LIST
29751: LIST
29752: LIST
29753: ST_TO_ADDR
29754: GO 30331
29756: LD_INT 23
29758: DOUBLE
29759: EQUAL
29760: IFTRUE 29764
29762: GO 29790
29764: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_double_machine_gun :
29765: LD_ADDR_VAR 0 3
29769: PUSH
29770: LD_INT 11
29772: PUSH
29773: LD_INT 12
29775: PUSH
29776: LD_INT 13
29778: PUSH
29779: LD_INT 14
29781: PUSH
29782: EMPTY
29783: LIST
29784: LIST
29785: LIST
29786: LIST
29787: ST_TO_ADDR
29788: GO 30331
29790: LD_INT 24
29792: DOUBLE
29793: EQUAL
29794: IFTRUE 29798
29796: GO 29824
29798: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_radar :
29799: LD_ADDR_VAR 0 3
29803: PUSH
29804: LD_INT 11
29806: PUSH
29807: LD_INT 12
29809: PUSH
29810: LD_INT 13
29812: PUSH
29813: LD_INT 14
29815: PUSH
29816: EMPTY
29817: LIST
29818: LIST
29819: LIST
29820: LIST
29821: ST_TO_ADDR
29822: GO 30331
29824: LD_INT 30
29826: DOUBLE
29827: EQUAL
29828: IFTRUE 29832
29830: GO 29858
29832: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_gatling_gun :
29833: LD_ADDR_VAR 0 3
29837: PUSH
29838: LD_INT 11
29840: PUSH
29841: LD_INT 12
29843: PUSH
29844: LD_INT 13
29846: PUSH
29847: LD_INT 14
29849: PUSH
29850: EMPTY
29851: LIST
29852: LIST
29853: LIST
29854: LIST
29855: ST_TO_ADDR
29856: GO 30331
29858: LD_INT 25
29860: DOUBLE
29861: EQUAL
29862: IFTRUE 29866
29864: GO 29884
29866: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_gun :
29867: LD_ADDR_VAR 0 3
29871: PUSH
29872: LD_INT 13
29874: PUSH
29875: LD_INT 14
29877: PUSH
29878: EMPTY
29879: LIST
29880: LIST
29881: ST_TO_ADDR
29882: GO 30331
29884: LD_INT 27
29886: DOUBLE
29887: EQUAL
29888: IFTRUE 29892
29890: GO 29910
29892: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_rocket_launcher :
29893: LD_ADDR_VAR 0 3
29897: PUSH
29898: LD_INT 13
29900: PUSH
29901: LD_INT 14
29903: PUSH
29904: EMPTY
29905: LIST
29906: LIST
29907: ST_TO_ADDR
29908: GO 30331
29910: LD_INT 28
29912: DOUBLE
29913: EQUAL
29914: IFTRUE 29918
29916: GO 29936
29918: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_selfpropelled_bomb :
29919: LD_ADDR_VAR 0 3
29923: PUSH
29924: LD_INT 13
29926: PUSH
29927: LD_INT 14
29929: PUSH
29930: EMPTY
29931: LIST
29932: LIST
29933: ST_TO_ADDR
29934: GO 30331
29936: LD_INT 29
29938: DOUBLE
29939: EQUAL
29940: IFTRUE 29944
29942: GO 29962
29944: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_control_tower :
29945: LD_ADDR_VAR 0 3
29949: PUSH
29950: LD_INT 13
29952: PUSH
29953: LD_INT 14
29955: PUSH
29956: EMPTY
29957: LIST
29958: LIST
29959: ST_TO_ADDR
29960: GO 30331
29962: LD_INT 31
29964: DOUBLE
29965: EQUAL
29966: IFTRUE 29970
29968: GO 29988
29970: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_flame_thrower :
29971: LD_ADDR_VAR 0 3
29975: PUSH
29976: LD_INT 13
29978: PUSH
29979: LD_INT 14
29981: PUSH
29982: EMPTY
29983: LIST
29984: LIST
29985: ST_TO_ADDR
29986: GO 30331
29988: LD_INT 26
29990: DOUBLE
29991: EQUAL
29992: IFTRUE 29996
29994: GO 30014
29996: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ru_heavy_machine_gun :
29997: LD_ADDR_VAR 0 3
30001: PUSH
30002: LD_INT 13
30004: PUSH
30005: LD_INT 14
30007: PUSH
30008: EMPTY
30009: LIST
30010: LIST
30011: ST_TO_ADDR
30012: GO 30331
30014: LD_INT 42
30016: DOUBLE
30017: EQUAL
30018: IFTRUE 30022
30020: GO 30048
30022: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_gatling_gun :
30023: LD_ADDR_VAR 0 3
30027: PUSH
30028: LD_INT 21
30030: PUSH
30031: LD_INT 22
30033: PUSH
30034: LD_INT 23
30036: PUSH
30037: LD_INT 24
30039: PUSH
30040: EMPTY
30041: LIST
30042: LIST
30043: LIST
30044: LIST
30045: ST_TO_ADDR
30046: GO 30331
30048: LD_INT 43
30050: DOUBLE
30051: EQUAL
30052: IFTRUE 30056
30054: GO 30082
30056: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_gun :
30057: LD_ADDR_VAR 0 3
30061: PUSH
30062: LD_INT 21
30064: PUSH
30065: LD_INT 22
30067: PUSH
30068: LD_INT 23
30070: PUSH
30071: LD_INT 24
30073: PUSH
30074: EMPTY
30075: LIST
30076: LIST
30077: LIST
30078: LIST
30079: ST_TO_ADDR
30080: GO 30331
30082: LD_INT 44
30084: DOUBLE
30085: EQUAL
30086: IFTRUE 30090
30088: GO 30116
30090: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_rocket_launcher :
30091: LD_ADDR_VAR 0 3
30095: PUSH
30096: LD_INT 21
30098: PUSH
30099: LD_INT 22
30101: PUSH
30102: LD_INT 23
30104: PUSH
30105: LD_INT 24
30107: PUSH
30108: EMPTY
30109: LIST
30110: LIST
30111: LIST
30112: LIST
30113: ST_TO_ADDR
30114: GO 30331
30116: LD_INT 45
30118: DOUBLE
30119: EQUAL
30120: IFTRUE 30124
30122: GO 30150
30124: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_time_lapser :
30125: LD_ADDR_VAR 0 3
30129: PUSH
30130: LD_INT 21
30132: PUSH
30133: LD_INT 22
30135: PUSH
30136: LD_INT 23
30138: PUSH
30139: LD_INT 24
30141: PUSH
30142: EMPTY
30143: LIST
30144: LIST
30145: LIST
30146: LIST
30147: ST_TO_ADDR
30148: GO 30331
30150: LD_INT 49
30152: DOUBLE
30153: EQUAL
30154: IFTRUE 30158
30156: GO 30184
30158: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_cargo_bay :
30159: LD_ADDR_VAR 0 3
30163: PUSH
30164: LD_INT 21
30166: PUSH
30167: LD_INT 22
30169: PUSH
30170: LD_INT 23
30172: PUSH
30173: LD_INT 24
30175: PUSH
30176: EMPTY
30177: LIST
30178: LIST
30179: LIST
30180: LIST
30181: ST_TO_ADDR
30182: GO 30331
30184: LD_INT 51
30186: DOUBLE
30187: EQUAL
30188: IFTRUE 30192
30190: GO 30218
30192: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_crane :
30193: LD_ADDR_VAR 0 3
30197: PUSH
30198: LD_INT 21
30200: PUSH
30201: LD_INT 22
30203: PUSH
30204: LD_INT 23
30206: PUSH
30207: LD_INT 24
30209: PUSH
30210: EMPTY
30211: LIST
30212: LIST
30213: LIST
30214: LIST
30215: ST_TO_ADDR
30216: GO 30331
30218: LD_INT 52
30220: DOUBLE
30221: EQUAL
30222: IFTRUE 30226
30224: GO 30252
30226: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_bulldozer :
30227: LD_ADDR_VAR 0 3
30231: PUSH
30232: LD_INT 21
30234: PUSH
30235: LD_INT 22
30237: PUSH
30238: LD_INT 23
30240: PUSH
30241: LD_INT 24
30243: PUSH
30244: EMPTY
30245: LIST
30246: LIST
30247: LIST
30248: LIST
30249: ST_TO_ADDR
30250: GO 30331
30252: LD_INT 53
30254: DOUBLE
30255: EQUAL
30256: IFTRUE 30260
30258: GO 30278
30260: POP
// result := [ ru_heavy_wheeled , ru_heavy_tracked ] ; ru_heavy_gun :
30261: LD_ADDR_VAR 0 3
30265: PUSH
30266: LD_INT 23
30268: PUSH
30269: LD_INT 24
30271: PUSH
30272: EMPTY
30273: LIST
30274: LIST
30275: ST_TO_ADDR
30276: GO 30331
30278: LD_INT 46
30280: DOUBLE
30281: EQUAL
30282: IFTRUE 30286
30284: GO 30304
30286: POP
// result := [ ru_heavy_wheeled , ru_heavy_tracked ] ; ru_rocket :
30287: LD_ADDR_VAR 0 3
30291: PUSH
30292: LD_INT 23
30294: PUSH
30295: LD_INT 24
30297: PUSH
30298: EMPTY
30299: LIST
30300: LIST
30301: ST_TO_ADDR
30302: GO 30331
30304: LD_INT 47
30306: DOUBLE
30307: EQUAL
30308: IFTRUE 30312
30310: GO 30330
30312: POP
// result := [ ru_heavy_wheeled , ru_heavy_tracked ] ; end ;
30313: LD_ADDR_VAR 0 3
30317: PUSH
30318: LD_INT 23
30320: PUSH
30321: LD_INT 24
30323: PUSH
30324: EMPTY
30325: LIST
30326: LIST
30327: ST_TO_ADDR
30328: GO 30331
30330: POP
// result := ( chassis in result ) ;
30331: LD_ADDR_VAR 0 3
30335: PUSH
30336: LD_VAR 0 1
30340: PUSH
30341: LD_VAR 0 3
30345: IN
30346: ST_TO_ADDR
// end ;
30347: LD_VAR 0 3
30351: RET
// export function PrepareNature ; var i , animal , nat_area ; begin
30352: LD_INT 0
30354: PPUSH
30355: PPUSH
30356: PPUSH
30357: PPUSH
// uc_side = 0 ;
30358: LD_ADDR_OWVAR 20
30362: PUSH
30363: LD_INT 0
30365: ST_TO_ADDR
// uc_nation = 0 ;
30366: LD_ADDR_OWVAR 21
30370: PUSH
30371: LD_INT 0
30373: ST_TO_ADDR
// nat_area := nature_area ;
30374: LD_ADDR_VAR 0 4
30378: PUSH
30379: LD_INT 24
30381: ST_TO_ADDR
// InitHc ;
30382: CALL_OW 19
// for i = 1 to 4 do
30386: LD_ADDR_VAR 0 2
30390: PUSH
30391: DOUBLE
30392: LD_INT 1
30394: DEC
30395: ST_TO_ADDR
30396: LD_INT 4
30398: PUSH
30399: FOR_TO
30400: IFFALSE 30447
// begin hc_class = 18 ;
30402: LD_ADDR_OWVAR 28
30406: PUSH
30407: LD_INT 18
30409: ST_TO_ADDR
// hc_gallery =  ;
30410: LD_ADDR_OWVAR 33
30414: PUSH
30415: LD_STRING 
30417: ST_TO_ADDR
// animal := CreateHuman ;
30418: LD_ADDR_VAR 0 3
30422: PUSH
30423: CALL_OW 44
30427: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
30428: LD_VAR 0 3
30432: PPUSH
30433: LD_VAR 0 4
30437: PPUSH
30438: LD_INT 0
30440: PPUSH
30441: CALL_OW 49
// end ;
30445: GO 30399
30447: POP
30448: POP
// for i = 1 to 3 do
30449: LD_ADDR_VAR 0 2
30453: PUSH
30454: DOUBLE
30455: LD_INT 1
30457: DEC
30458: ST_TO_ADDR
30459: LD_INT 3
30461: PUSH
30462: FOR_TO
30463: IFFALSE 30557
// begin hc_class = class_apeman ;
30465: LD_ADDR_OWVAR 28
30469: PUSH
30470: LD_INT 12
30472: ST_TO_ADDR
// hc_gallery =  ;
30473: LD_ADDR_OWVAR 33
30477: PUSH
30478: LD_STRING 
30480: ST_TO_ADDR
// hc_agressivity = 0 ;
30481: LD_ADDR_OWVAR 35
30485: PUSH
30486: LD_INT 0
30488: ST_TO_ADDR
// hc_skills := [ rand ( 1 , 3 ) , rand ( 1 , 3 ) , 0 , 0 ] ;
30489: LD_ADDR_OWVAR 31
30493: PUSH
30494: LD_INT 1
30496: PPUSH
30497: LD_INT 3
30499: PPUSH
30500: CALL_OW 12
30504: PUSH
30505: LD_INT 1
30507: PPUSH
30508: LD_INT 3
30510: PPUSH
30511: CALL_OW 12
30515: PUSH
30516: LD_INT 0
30518: PUSH
30519: LD_INT 0
30521: PUSH
30522: EMPTY
30523: LIST
30524: LIST
30525: LIST
30526: LIST
30527: ST_TO_ADDR
// animal := CreateHuman ;
30528: LD_ADDR_VAR 0 3
30532: PUSH
30533: CALL_OW 44
30537: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
30538: LD_VAR 0 3
30542: PPUSH
30543: LD_VAR 0 4
30547: PPUSH
30548: LD_INT 0
30550: PPUSH
30551: CALL_OW 49
// end ;
30555: GO 30462
30557: POP
30558: POP
// for i = 1 to 3 do
30559: LD_ADDR_VAR 0 2
30563: PUSH
30564: DOUBLE
30565: LD_INT 1
30567: DEC
30568: ST_TO_ADDR
30569: LD_INT 3
30571: PUSH
30572: FOR_TO
30573: IFFALSE 30620
// begin hc_class = 13 ;
30575: LD_ADDR_OWVAR 28
30579: PUSH
30580: LD_INT 13
30582: ST_TO_ADDR
// hc_gallery =  ;
30583: LD_ADDR_OWVAR 33
30587: PUSH
30588: LD_STRING 
30590: ST_TO_ADDR
// animal := CreateHuman ;
30591: LD_ADDR_VAR 0 3
30595: PUSH
30596: CALL_OW 44
30600: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
30601: LD_VAR 0 3
30605: PPUSH
30606: LD_VAR 0 4
30610: PPUSH
30611: LD_INT 0
30613: PPUSH
30614: CALL_OW 49
// end ;
30618: GO 30572
30620: POP
30621: POP
// for i = 1 to 3 do
30622: LD_ADDR_VAR 0 2
30626: PUSH
30627: DOUBLE
30628: LD_INT 1
30630: DEC
30631: ST_TO_ADDR
30632: LD_INT 3
30634: PUSH
30635: FOR_TO
30636: IFFALSE 30681
// begin hc_class = 20 ;
30638: LD_ADDR_OWVAR 28
30642: PUSH
30643: LD_INT 20
30645: ST_TO_ADDR
// hc_gallery =  ;
30646: LD_ADDR_OWVAR 33
30650: PUSH
30651: LD_STRING 
30653: ST_TO_ADDR
// animal := CreateHuman ;
30654: LD_ADDR_VAR 0 3
30658: PUSH
30659: CALL_OW 44
30663: ST_TO_ADDR
// PlaceUnitArea ( animal , lake_area , false ) ;
30664: LD_VAR 0 3
30668: PPUSH
30669: LD_INT 4
30671: PPUSH
30672: LD_INT 0
30674: PPUSH
30675: CALL_OW 49
// end ;
30679: GO 30635
30681: POP
30682: POP
// end ; end_of_file
30683: LD_VAR 0 1
30687: RET
// export function Action ; begin
30688: LD_INT 0
30690: PPUSH
// InGameOn ;
30691: CALL_OW 8
// CenterNowOnUnits ( JMM ) ;
30695: LD_EXP 12
30699: PPUSH
30700: CALL_OW 87
// Say ( JMM , D1-JMM-1 ) ;
30704: LD_EXP 12
30708: PPUSH
30709: LD_STRING D1-JMM-1
30711: PPUSH
30712: CALL_OW 88
// Say ( Roth , D1-Roth-1 ) ;
30716: LD_EXP 13
30720: PPUSH
30721: LD_STRING D1-Roth-1
30723: PPUSH
30724: CALL_OW 88
// Say ( JMM , D1-JMM-2 ) ;
30728: LD_EXP 12
30732: PPUSH
30733: LD_STRING D1-JMM-2
30735: PPUSH
30736: CALL_OW 88
// Say ( Roth , D1-Roth-2 ) ;
30740: LD_EXP 13
30744: PPUSH
30745: LD_STRING D1-Roth-2
30747: PPUSH
30748: CALL_OW 88
// Say ( JMM , D1-JMM-3 ) ;
30752: LD_EXP 12
30756: PPUSH
30757: LD_STRING D1-JMM-3
30759: PPUSH
30760: CALL_OW 88
// Say ( Roth , D1-Roth-3 ) ;
30764: LD_EXP 13
30768: PPUSH
30769: LD_STRING D1-Roth-3
30771: PPUSH
30772: CALL_OW 88
// ComInvisible ( Roth ) ;
30776: LD_EXP 13
30780: PPUSH
30781: CALL_OW 152
// wait ( 0 0$1.3 ) ;
30785: LD_INT 46
30787: PPUSH
30788: CALL_OW 67
// Say ( JMM , D1-JMM-4 ) ;
30792: LD_EXP 12
30796: PPUSH
30797: LD_STRING D1-JMM-4
30799: PPUSH
30800: CALL_OW 88
// wait ( 0 0$0.3 ) ;
30804: LD_INT 10
30806: PPUSH
30807: CALL_OW 67
// ComTurnUnit ( Roth , JMM ) ;
30811: LD_EXP 13
30815: PPUSH
30816: LD_EXP 12
30820: PPUSH
30821: CALL_OW 119
// Say ( JMM , D1-JMM-4a ) ;
30825: LD_EXP 12
30829: PPUSH
30830: LD_STRING D1-JMM-4a
30832: PPUSH
30833: CALL_OW 88
// Say ( Roth , D1-Roth-4 ) ;
30837: LD_EXP 13
30841: PPUSH
30842: LD_STRING D1-Roth-4
30844: PPUSH
30845: CALL_OW 88
// Say ( JMM , D1-JMM-5 ) ;
30849: LD_EXP 12
30853: PPUSH
30854: LD_STRING D1-JMM-5
30856: PPUSH
30857: CALL_OW 88
// Say ( Roth , D1-Roth-5 ) ;
30861: LD_EXP 13
30865: PPUSH
30866: LD_STRING D1-Roth-5
30868: PPUSH
30869: CALL_OW 88
// Say ( JMM , D1-JMM-6 ) ;
30873: LD_EXP 12
30877: PPUSH
30878: LD_STRING D1-JMM-6
30880: PPUSH
30881: CALL_OW 88
// Say ( Roth , D1-Roth-6 ) ;
30885: LD_EXP 13
30889: PPUSH
30890: LD_STRING D1-Roth-6
30892: PPUSH
30893: CALL_OW 88
// Say ( JMM , D1-JMM-7 ) ;
30897: LD_EXP 12
30901: PPUSH
30902: LD_STRING D1-JMM-7
30904: PPUSH
30905: CALL_OW 88
// ComMoveXY ( Powell , GetX ( JMM ) , GetY ( JMM ) ) ;
30909: LD_EXP 14
30913: PPUSH
30914: LD_EXP 12
30918: PPUSH
30919: CALL_OW 250
30923: PPUSH
30924: LD_EXP 12
30928: PPUSH
30929: CALL_OW 251
30933: PPUSH
30934: CALL_OW 111
// Say ( Roth , D1-Roth-7 ) ;
30938: LD_EXP 13
30942: PPUSH
30943: LD_STRING D1-Roth-7
30945: PPUSH
30946: CALL_OW 88
// repeat wait ( 0 0$0.3 ) ;
30950: LD_INT 10
30952: PPUSH
30953: CALL_OW 67
// until GetDistUnits ( Powell , JMM ) < 6 ;
30957: LD_EXP 14
30961: PPUSH
30962: LD_EXP 12
30966: PPUSH
30967: CALL_OW 296
30971: PUSH
30972: LD_INT 6
30974: LESS
30975: IFFALSE 30950
// ComTurnUnit ( Powell , JMM ) ;
30977: LD_EXP 14
30981: PPUSH
30982: LD_EXP 12
30986: PPUSH
30987: CALL_OW 119
// Say ( Powell , D1-Pow-7 ) ;
30991: LD_EXP 14
30995: PPUSH
30996: LD_STRING D1-Pow-7
30998: PPUSH
30999: CALL_OW 88
// ComTurnUnit ( JMM , Powell ) ;
31003: LD_EXP 12
31007: PPUSH
31008: LD_EXP 14
31012: PPUSH
31013: CALL_OW 119
// ComTurnUnit ( Roth , Powell ) ;
31017: LD_EXP 13
31021: PPUSH
31022: LD_EXP 14
31026: PPUSH
31027: CALL_OW 119
// Say ( JMM , D1-JMM-8 ) ;
31031: LD_EXP 12
31035: PPUSH
31036: LD_STRING D1-JMM-8
31038: PPUSH
31039: CALL_OW 88
// Say ( Powell , D1-Pow-8 ) ;
31043: LD_EXP 14
31047: PPUSH
31048: LD_STRING D1-Pow-8
31050: PPUSH
31051: CALL_OW 88
// Say ( JMM , D1-JMM-9 ) ;
31055: LD_EXP 12
31059: PPUSH
31060: LD_STRING D1-JMM-9
31062: PPUSH
31063: CALL_OW 88
// ComMoveXY ( Powell , 124 , 61 ) ;
31067: LD_EXP 14
31071: PPUSH
31072: LD_INT 124
31074: PPUSH
31075: LD_INT 61
31077: PPUSH
31078: CALL_OW 111
// repeat wait ( 0 0$1 ) ;
31082: LD_INT 35
31084: PPUSH
31085: CALL_OW 67
// until GetDistUnits ( JMM , Powell ) > 6 ;
31089: LD_EXP 12
31093: PPUSH
31094: LD_EXP 14
31098: PPUSH
31099: CALL_OW 296
31103: PUSH
31104: LD_INT 6
31106: GREATER
31107: IFFALSE 31082
// SayRadio ( Powell , D1-Pow-9 ) ;
31109: LD_EXP 14
31113: PPUSH
31114: LD_STRING D1-Pow-9
31116: PPUSH
31117: CALL_OW 94
// RemoveUnit ( Powell ) ;
31121: LD_EXP 14
31125: PPUSH
31126: CALL_OW 64
// PlaceHumanInUnit ( Powell , ambar0 ) ;
31130: LD_EXP 14
31134: PPUSH
31135: LD_INT 18
31137: PPUSH
31138: CALL_OW 52
// if Joan and not Joan in selected then
31142: LD_EXP 34
31146: PUSH
31147: LD_EXP 34
31151: PUSH
31152: LD_EXP 3
31156: IN
31157: NOT
31158: AND
31159: IFFALSE 31173
// SayRadio ( Joan , D1-Joan-9 ) ;
31161: LD_EXP 34
31165: PPUSH
31166: LD_STRING D1-Joan-9
31168: PPUSH
31169: CALL_OW 94
// ComTurnUnit ( Roth , JMM ) ;
31173: LD_EXP 13
31177: PPUSH
31178: LD_EXP 12
31182: PPUSH
31183: CALL_OW 119
// ComTurnUnit ( JMM , Roth ) ;
31187: LD_EXP 12
31191: PPUSH
31192: LD_EXP 13
31196: PPUSH
31197: CALL_OW 119
// Say ( Roth , D1-Roth-9 ) ;
31201: LD_EXP 13
31205: PPUSH
31206: LD_STRING D1-Roth-9
31208: PPUSH
31209: CALL_OW 88
// Say ( JMM , D1-JMM-10 ) ;
31213: LD_EXP 12
31217: PPUSH
31218: LD_STRING D1-JMM-10
31220: PPUSH
31221: CALL_OW 88
// InGameOff ;
31225: CALL_OW 9
// ChangeMissionObjectives ( M1 ) ;
31229: LD_STRING M1
31231: PPUSH
31232: CALL_OW 337
// if Difficulty < 3 then
31236: LD_OWVAR 67
31240: PUSH
31241: LD_INT 3
31243: LESS
31244: IFFALSE 31256
// ChangeSideFog ( 4 , 7 ) ;
31246: LD_INT 4
31248: PPUSH
31249: LD_INT 7
31251: PPUSH
31252: CALL_OW 343
// SaveForQuickRestart ;
31256: CALL_OW 22
// SetAttitude ( 7 , 1 , att_enemy , true ) ;
31260: LD_INT 7
31262: PPUSH
31263: LD_INT 1
31265: PPUSH
31266: LD_INT 2
31268: PPUSH
31269: LD_INT 1
31271: PPUSH
31272: CALL_OW 80
// wait ( 0 0$3 ) ;
31276: LD_INT 105
31278: PPUSH
31279: CALL_OW 67
// ComMoveXY ( Roth , 124 , 18 ) ;
31283: LD_EXP 13
31287: PPUSH
31288: LD_INT 124
31290: PPUSH
31291: LD_INT 18
31293: PPUSH
31294: CALL_OW 111
// AddComInvisible ( Roth ) ;
31298: LD_EXP 13
31302: PPUSH
31303: CALL_OW 212
// wait ( 0 0$30 ) ;
31307: LD_INT 1050
31309: PPUSH
31310: CALL_OW 67
// AddComWait ( Roth , 1 1$00 ) ;
31314: LD_EXP 13
31318: PPUSH
31319: LD_INT 2100
31321: PPUSH
31322: CALL_OW 202
// AddComMoveXY ( Roth , 156 , 20 ) ;
31326: LD_EXP 13
31330: PPUSH
31331: LD_INT 156
31333: PPUSH
31334: LD_INT 20
31336: PPUSH
31337: CALL_OW 171
// AddComMoveXY ( Roth , 178 , 42 ) ;
31341: LD_EXP 13
31345: PPUSH
31346: LD_INT 178
31348: PPUSH
31349: LD_INT 42
31351: PPUSH
31352: CALL_OW 171
// AddComInvisible ( Roth ) ;
31356: LD_EXP 13
31360: PPUSH
31361: CALL_OW 212
// end ;
31365: LD_VAR 0 1
31369: RET
// every 0 0$1 do var i , tmp ;
31370: GO 31372
31372: DISABLE
31373: LD_INT 0
31375: PPUSH
31376: PPUSH
// begin tmp := selected union friends ;
31377: LD_ADDR_VAR 0 2
31381: PUSH
31382: LD_EXP 3
31386: PUSH
31387: LD_EXP 4
31391: UNION
31392: ST_TO_ADDR
// if not tmp then
31393: LD_VAR 0 2
31397: NOT
31398: IFFALSE 31402
// exit ;
31400: GO 31474
// repeat wait ( 0 0$1 ) ;
31402: LD_INT 35
31404: PPUSH
31405: CALL_OW 67
// for i in tmp do
31409: LD_ADDR_VAR 0 1
31413: PUSH
31414: LD_VAR 0 2
31418: PUSH
31419: FOR_IN
31420: IFFALSE 31465
// if CanSpot ( JMM , i ) then
31422: LD_EXP 12
31426: PPUSH
31427: LD_VAR 0 1
31431: PPUSH
31432: CALL 28085 0 2
31436: IFFALSE 31463
// begin tmp := tmp diff i ;
31438: LD_ADDR_VAR 0 2
31442: PUSH
31443: LD_VAR 0 2
31447: PUSH
31448: LD_VAR 0 1
31452: DIFF
31453: ST_TO_ADDR
// Spot ( i ) ;
31454: LD_VAR 0 1
31458: PPUSH
31459: CALL 31477 0 1
// end ;
31463: GO 31419
31465: POP
31466: POP
// until not tmp ;
31467: LD_VAR 0 2
31471: NOT
31472: IFFALSE 31402
// end ;
31474: PPOPN 2
31476: END
// export function Spot ( unit ) ; var building , side , joined ; begin
31477: LD_INT 0
31479: PPUSH
31480: PPUSH
31481: PPUSH
31482: PPUSH
// if not unit or GetSide ( unit ) <> 4 or IsSleeping ( unit ) or not IsOk ( unit ) then
31483: LD_VAR 0 1
31487: NOT
31488: PUSH
31489: LD_VAR 0 1
31493: PPUSH
31494: CALL_OW 255
31498: PUSH
31499: LD_INT 4
31501: NONEQUAL
31502: OR
31503: PUSH
31504: LD_VAR 0 1
31508: PPUSH
31509: CALL_OW 555
31513: OR
31514: PUSH
31515: LD_VAR 0 1
31519: PPUSH
31520: CALL_OW 302
31524: NOT
31525: OR
31526: IFFALSE 31530
// exit ;
31528: GO 33419
// InGameOn ;
31530: CALL_OW 8
// side := GetSide ( JMM ) ;
31534: LD_ADDR_VAR 0 4
31538: PUSH
31539: LD_EXP 12
31543: PPUSH
31544: CALL_OW 255
31548: ST_TO_ADDR
// joined := false ;
31549: LD_ADDR_VAR 0 5
31553: PUSH
31554: LD_INT 0
31556: ST_TO_ADDR
// building := IsInUnit ( unit ) ;
31557: LD_ADDR_VAR 0 3
31561: PUSH
31562: LD_VAR 0 1
31566: PPUSH
31567: CALL_OW 310
31571: ST_TO_ADDR
// if building then
31572: LD_VAR 0 3
31576: IFFALSE 31635
// begin SetSide ( JMM , GetSide ( unit ) ) ;
31578: LD_EXP 12
31582: PPUSH
31583: LD_VAR 0 1
31587: PPUSH
31588: CALL_OW 255
31592: PPUSH
31593: CALL_OW 235
// ComEnterUnit ( JMM , building ) ;
31597: LD_EXP 12
31601: PPUSH
31602: LD_VAR 0 3
31606: PPUSH
31607: CALL_OW 120
// repeat wait ( 3 ) ;
31611: LD_INT 3
31613: PPUSH
31614: CALL_OW 67
// until IsInUnit ( JMM ) ;
31618: LD_EXP 12
31622: PPUSH
31623: CALL_OW 310
31627: IFFALSE 31611
// DialogueOn ;
31629: CALL_OW 6
// end else
31633: GO 31667
// begin ComTurnUnit ( JMM , unit ) ;
31635: LD_EXP 12
31639: PPUSH
31640: LD_VAR 0 1
31644: PPUSH
31645: CALL_OW 119
// ComTurnUnit ( unit , JMM ) ;
31649: LD_VAR 0 1
31653: PPUSH
31654: LD_EXP 12
31658: PPUSH
31659: CALL_OW 119
// DialogueOn ;
31663: CALL_OW 6
// end ; if unit = Joan then
31667: LD_VAR 0 1
31671: PUSH
31672: LD_EXP 34
31676: EQUAL
31677: IFFALSE 31787
// begin joined := true ;
31679: LD_ADDR_VAR 0 5
31683: PUSH
31684: LD_INT 1
31686: ST_TO_ADDR
// if Joan in selected then
31687: LD_EXP 34
31691: PUSH
31692: LD_EXP 3
31696: IN
31697: IFFALSE 31725
// begin Say ( Joan , D3-Joan-Joan-1 ) ;
31699: LD_EXP 34
31703: PPUSH
31704: LD_STRING D3-Joan-Joan-1
31706: PPUSH
31707: CALL_OW 88
// Say ( JMM , D3-Joan-JMM-1 ) ;
31711: LD_EXP 12
31715: PPUSH
31716: LD_STRING D3-Joan-JMM-1
31718: PPUSH
31719: CALL_OW 88
// end else
31723: GO 31785
// begin Say ( Joan , D4-Joan-Joan-1 ) ;
31725: LD_EXP 34
31729: PPUSH
31730: LD_STRING D4-Joan-Joan-1
31732: PPUSH
31733: CALL_OW 88
// Say ( JMM , D4-Joan-JMM-1 ) ;
31737: LD_EXP 12
31741: PPUSH
31742: LD_STRING D4-Joan-JMM-1
31744: PPUSH
31745: CALL_OW 88
// Say ( Joan , D4-Joan-Joan-2 ) ;
31749: LD_EXP 34
31753: PPUSH
31754: LD_STRING D4-Joan-Joan-2
31756: PPUSH
31757: CALL_OW 88
// Say ( JMM , D4-Joan-JMM-2 ) ;
31761: LD_EXP 12
31765: PPUSH
31766: LD_STRING D4-Joan-JMM-2
31768: PPUSH
31769: CALL_OW 88
// Say ( Joan , D4-Joan-Joan-3 ) ;
31773: LD_EXP 34
31777: PPUSH
31778: LD_STRING D4-Joan-Joan-3
31780: PPUSH
31781: CALL_OW 88
// end ; end else
31785: GO 33227
// if unit = Lisa then
31787: LD_VAR 0 1
31791: PUSH
31792: LD_EXP 21
31796: EQUAL
31797: IFFALSE 31989
// begin if Lisa in selected then
31799: LD_EXP 21
31803: PUSH
31804: LD_EXP 3
31808: IN
31809: IFFALSE 31922
// begin if GetSide ( Joan ) = 7 then
31811: LD_EXP 34
31815: PPUSH
31816: CALL_OW 255
31820: PUSH
31821: LD_INT 7
31823: EQUAL
31824: IFFALSE 31888
// begin Say ( Lisa , D3-LisaJ-Lisa-1 ) ;
31826: LD_EXP 21
31830: PPUSH
31831: LD_STRING D3-LisaJ-Lisa-1
31833: PPUSH
31834: CALL_OW 88
// Say ( JMM , D3-LisaJ-JMM-1 ) ;
31838: LD_EXP 12
31842: PPUSH
31843: LD_STRING D3-LisaJ-JMM-1
31845: PPUSH
31846: CALL_OW 88
// Say ( Lisa , D3-LisaJ-Lisa-2 ) ;
31850: LD_EXP 21
31854: PPUSH
31855: LD_STRING D3-LisaJ-Lisa-2
31857: PPUSH
31858: CALL_OW 88
// Say ( JMM , D3-LisaJ-JMM-2 ) ;
31862: LD_EXP 12
31866: PPUSH
31867: LD_STRING D3-LisaJ-JMM-2
31869: PPUSH
31870: CALL_OW 88
// Say ( Lisa , D3-LisaJ-Lisa-3 ) ;
31874: LD_EXP 21
31878: PPUSH
31879: LD_STRING D3-LisaJ-Lisa-3
31881: PPUSH
31882: CALL_OW 88
// end else
31886: GO 31920
// begin Say ( Lisa , D3-LisaL-Lisa-1 ) ;
31888: LD_EXP 21
31892: PPUSH
31893: LD_STRING D3-LisaL-Lisa-1
31895: PPUSH
31896: CALL_OW 88
// Say ( JMM , D3-LisaL-JMM-1 ) ;
31900: LD_EXP 12
31904: PPUSH
31905: LD_STRING D3-LisaL-JMM-1
31907: PPUSH
31908: CALL_OW 88
// joined := true ;
31912: LD_ADDR_VAR 0 5
31916: PUSH
31917: LD_INT 1
31919: ST_TO_ADDR
// end ; end else
31920: GO 31987
// begin if GetSide ( Joan ) = 7 then
31922: LD_EXP 34
31926: PPUSH
31927: CALL_OW 255
31931: PUSH
31932: LD_INT 7
31934: EQUAL
31935: IFFALSE 31975
// begin Say ( Lisa , D4-LisaJ-Lisa-1 ) ;
31937: LD_EXP 21
31941: PPUSH
31942: LD_STRING D4-LisaJ-Lisa-1
31944: PPUSH
31945: CALL_OW 88
// Say ( JMM , D4-LisaJ-JMM-1 ) ;
31949: LD_EXP 12
31953: PPUSH
31954: LD_STRING D4-LisaJ-JMM-1
31956: PPUSH
31957: CALL_OW 88
// Say ( Lisa , D4-LisaJ-Lisa-2 ) ;
31961: LD_EXP 21
31965: PPUSH
31966: LD_STRING D4-LisaJ-Lisa-2
31968: PPUSH
31969: CALL_OW 88
// end else
31973: GO 31987
// begin Say ( Lisa , D4-LisaL-Lisa-1 ) ;
31975: LD_EXP 21
31979: PPUSH
31980: LD_STRING D4-LisaL-Lisa-1
31982: PPUSH
31983: CALL_OW 88
// end ; end ; end else
31987: GO 33227
// if unit = Frank then
31989: LD_VAR 0 1
31993: PUSH
31994: LD_EXP 31
31998: EQUAL
31999: IFFALSE 32139
// begin joined := true ;
32001: LD_ADDR_VAR 0 5
32005: PUSH
32006: LD_INT 1
32008: ST_TO_ADDR
// if Frank in selected then
32009: LD_EXP 31
32013: PUSH
32014: LD_EXP 3
32018: IN
32019: IFFALSE 32089
// begin Say ( Frank , D3-Frank-Frank-1 ) ;
32021: LD_EXP 31
32025: PPUSH
32026: LD_STRING D3-Frank-Frank-1
32028: PPUSH
32029: CALL_OW 88
// Say ( JMM , D3-Frank-JMM-1 ) ;
32033: LD_EXP 12
32037: PPUSH
32038: LD_STRING D3-Frank-JMM-1
32040: PPUSH
32041: CALL_OW 88
// Say ( Frank , D3-Frank-Frank-2 ) ;
32045: LD_EXP 31
32049: PPUSH
32050: LD_STRING D3-Frank-Frank-2
32052: PPUSH
32053: CALL_OW 88
// if reached_lab then
32057: LD_EXP 5
32061: IFFALSE 32087
// begin Say ( JMM , D3-Frank-JMM-2 ) ;
32063: LD_EXP 12
32067: PPUSH
32068: LD_STRING D3-Frank-JMM-2
32070: PPUSH
32071: CALL_OW 88
// Say ( Frank , D3-Frank-Frank-3 ) ;
32075: LD_EXP 31
32079: PPUSH
32080: LD_STRING D3-Frank-Frank-3
32082: PPUSH
32083: CALL_OW 88
// end ; end else
32087: GO 32137
// begin Say ( Frank , D4-Frank-Frank-1 ) ;
32089: LD_EXP 31
32093: PPUSH
32094: LD_STRING D4-Frank-Frank-1
32096: PPUSH
32097: CALL_OW 88
// Say ( JMM , D4-Frank-JMM-1 ) ;
32101: LD_EXP 12
32105: PPUSH
32106: LD_STRING D4-Frank-JMM-1
32108: PPUSH
32109: CALL_OW 88
// Say ( Frank , D4-Frank-Frank-2 ) ;
32113: LD_EXP 31
32117: PPUSH
32118: LD_STRING D4-Frank-Frank-2
32120: PPUSH
32121: CALL_OW 88
// Say ( JMM , D4-Frank-JMM-2 ) ;
32125: LD_EXP 12
32129: PPUSH
32130: LD_STRING D4-Frank-JMM-2
32132: PPUSH
32133: CALL_OW 88
// end ; end else
32137: GO 33227
// if unit = Brown then
32139: LD_VAR 0 1
32143: PUSH
32144: LD_EXP 26
32148: EQUAL
32149: IFFALSE 32245
// begin if Brown in selected or gamma_commander = 2 then
32151: LD_EXP 26
32155: PUSH
32156: LD_EXP 3
32160: IN
32161: PUSH
32162: LD_EXP 10
32166: PUSH
32167: LD_INT 2
32169: EQUAL
32170: OR
32171: IFFALSE 32207
// begin Say ( Brown , D3-Soldier1-Sol1-1 ) ;
32173: LD_EXP 26
32177: PPUSH
32178: LD_STRING D3-Soldier1-Sol1-1
32180: PPUSH
32181: CALL_OW 88
// Say ( JMM , D3-Soldier1-JMM-1 ) ;
32185: LD_EXP 12
32189: PPUSH
32190: LD_STRING D3-Soldier1-JMM-1
32192: PPUSH
32193: CALL_OW 88
// joined := true ;
32197: LD_ADDR_VAR 0 5
32201: PUSH
32202: LD_INT 1
32204: ST_TO_ADDR
// end else
32205: GO 32243
// begin Say ( Brown , D4-Soldier2-Sol1-1 ) ;
32207: LD_EXP 26
32211: PPUSH
32212: LD_STRING D4-Soldier2-Sol1-1
32214: PPUSH
32215: CALL_OW 88
// Say ( JMM , D4-Soldier1-JMM-1 ) ;
32219: LD_EXP 12
32223: PPUSH
32224: LD_STRING D4-Soldier1-JMM-1
32226: PPUSH
32227: CALL_OW 88
// Say ( Brown , D4-Soldier2-Sol1-2 ) ;
32231: LD_EXP 26
32235: PPUSH
32236: LD_STRING D4-Soldier2-Sol1-2
32238: PPUSH
32239: CALL_OW 88
// end ; end else
32243: GO 33227
// if unit = Donaldson then
32245: LD_VAR 0 1
32249: PUSH
32250: LD_EXP 22
32254: EQUAL
32255: IFFALSE 32351
// begin if Donaldson in selected or gamma_commander = 1 then
32257: LD_EXP 22
32261: PUSH
32262: LD_EXP 3
32266: IN
32267: PUSH
32268: LD_EXP 10
32272: PUSH
32273: LD_INT 1
32275: EQUAL
32276: OR
32277: IFFALSE 32313
// begin Say ( Donaldson , D3-Soldier2-FSol2-1 ) ;
32279: LD_EXP 22
32283: PPUSH
32284: LD_STRING D3-Soldier2-FSol2-1
32286: PPUSH
32287: CALL_OW 88
// Say ( JMM , D3-Soldier2-JMM-1 ) ;
32291: LD_EXP 12
32295: PPUSH
32296: LD_STRING D3-Soldier2-JMM-1
32298: PPUSH
32299: CALL_OW 88
// joined := true ;
32303: LD_ADDR_VAR 0 5
32307: PUSH
32308: LD_INT 1
32310: ST_TO_ADDR
// end else
32311: GO 32349
// begin Say ( unit , D4-Soldier1-FSol1-1 ) ;
32313: LD_VAR 0 1
32317: PPUSH
32318: LD_STRING D4-Soldier1-FSol1-1
32320: PPUSH
32321: CALL_OW 88
// Say ( JMM , D4-Soldier1-JMM-1 ) ;
32325: LD_EXP 12
32329: PPUSH
32330: LD_STRING D4-Soldier1-JMM-1
32332: PPUSH
32333: CALL_OW 88
// Say ( unit , D4-Soldier1-FSol1-2 ) ;
32337: LD_VAR 0 1
32341: PPUSH
32342: LD_STRING D4-Soldier1-FSol1-2
32344: PPUSH
32345: CALL_OW 88
// end ; end else
32349: GO 33227
// if unit = Cyrus then
32351: LD_VAR 0 1
32355: PUSH
32356: LD_EXP 24
32360: EQUAL
32361: IFFALSE 32435
// begin if Cyrus in selected then
32363: LD_EXP 24
32367: PUSH
32368: LD_EXP 3
32372: IN
32373: IFFALSE 32409
// begin Say ( Cyrus , D3-Cyrus-Cyrus-1 ) ;
32375: LD_EXP 24
32379: PPUSH
32380: LD_STRING D3-Cyrus-Cyrus-1
32382: PPUSH
32383: CALL_OW 88
// Say ( JMM , D3-Cyrus-JMM-1 ) ;
32387: LD_EXP 12
32391: PPUSH
32392: LD_STRING D3-Cyrus-JMM-1
32394: PPUSH
32395: CALL_OW 88
// joined := true ;
32399: LD_ADDR_VAR 0 5
32403: PUSH
32404: LD_INT 1
32406: ST_TO_ADDR
// end else
32407: GO 32433
// begin Say ( Cyrus , D4-Cyrus-Cyrus-1 ) ;
32409: LD_EXP 24
32413: PPUSH
32414: LD_STRING D4-Cyrus-Cyrus-1
32416: PPUSH
32417: CALL_OW 88
// Say ( JMM , D4-Cyrus-JMM-1 ) ;
32421: LD_EXP 12
32425: PPUSH
32426: LD_STRING D4-Cyrus-JMM-1
32428: PPUSH
32429: CALL_OW 88
// end ; end else
32433: GO 33227
// if unit = Bobby then
32435: LD_VAR 0 1
32439: PUSH
32440: LD_EXP 23
32444: EQUAL
32445: IFFALSE 32531
// begin if Bobby in selected then
32447: LD_EXP 23
32451: PUSH
32452: LD_EXP 3
32456: IN
32457: IFFALSE 32493
// begin Say ( Bobby , D3-Bobby-Bobby-1 ) ;
32459: LD_EXP 23
32463: PPUSH
32464: LD_STRING D3-Bobby-Bobby-1
32466: PPUSH
32467: CALL_OW 88
// Say ( JMM , D3-Bobby-JMM-1 ) ;
32471: LD_EXP 12
32475: PPUSH
32476: LD_STRING D3-Bobby-JMM-1
32478: PPUSH
32479: CALL_OW 88
// joined := true ;
32483: LD_ADDR_VAR 0 5
32487: PUSH
32488: LD_INT 1
32490: ST_TO_ADDR
// end else
32491: GO 32529
// begin Say ( Bobby , D4-Bobby-Bobby-1 ) ;
32493: LD_EXP 23
32497: PPUSH
32498: LD_STRING D4-Bobby-Bobby-1
32500: PPUSH
32501: CALL_OW 88
// Say ( JMM , D4-Bobby-JMM-1 ) ;
32505: LD_EXP 12
32509: PPUSH
32510: LD_STRING D4-Bobby-JMM-1
32512: PPUSH
32513: CALL_OW 88
// Say ( Bobby , D4-Bobby-Bobby-2 ) ;
32517: LD_EXP 23
32521: PPUSH
32522: LD_STRING D4-Bobby-Bobby-2
32524: PPUSH
32525: CALL_OW 88
// end ; end else
32529: GO 33227
// if unit = Cornel then
32531: LD_VAR 0 1
32535: PUSH
32536: LD_EXP 29
32540: EQUAL
32541: IFFALSE 32639
// begin if Cornel in selected then
32543: LD_EXP 29
32547: PUSH
32548: LD_EXP 3
32552: IN
32553: IFFALSE 32601
// begin Say ( Cornel , D3-Mark-Corn-1 ) ;
32555: LD_EXP 29
32559: PPUSH
32560: LD_STRING D3-Mark-Corn-1
32562: PPUSH
32563: CALL_OW 88
// Say ( JMM , D3-Mark-JMM-1 ) ;
32567: LD_EXP 12
32571: PPUSH
32572: LD_STRING D3-Mark-JMM-1
32574: PPUSH
32575: CALL_OW 88
// Say ( Cornel , D3-Mark-Corn-2 ) ;
32579: LD_EXP 29
32583: PPUSH
32584: LD_STRING D3-Mark-Corn-2
32586: PPUSH
32587: CALL_OW 88
// joined := true ;
32591: LD_ADDR_VAR 0 5
32595: PUSH
32596: LD_INT 1
32598: ST_TO_ADDR
// end else
32599: GO 32637
// begin Say ( Cornel , D4-Mark-Corn-1 ) ;
32601: LD_EXP 29
32605: PPUSH
32606: LD_STRING D4-Mark-Corn-1
32608: PPUSH
32609: CALL_OW 88
// Say ( JMM , D3-Joan-JMM-1 ) ;
32613: LD_EXP 12
32617: PPUSH
32618: LD_STRING D3-Joan-JMM-1
32620: PPUSH
32621: CALL_OW 88
// Say ( Cornel , D4-Mark-Corn-2 ) ;
32625: LD_EXP 29
32629: PPUSH
32630: LD_STRING D4-Mark-Corn-2
32632: PPUSH
32633: CALL_OW 88
// end ; end else
32637: GO 33227
// if unit = Gary then
32639: LD_VAR 0 1
32643: PUSH
32644: LD_EXP 30
32648: EQUAL
32649: IFFALSE 32733
// begin if Gary in selected then
32651: LD_EXP 30
32655: PUSH
32656: LD_EXP 3
32660: IN
32661: IFFALSE 32697
// begin Say ( Gary , D3-Gary-Gary-1 ) ;
32663: LD_EXP 30
32667: PPUSH
32668: LD_STRING D3-Gary-Gary-1
32670: PPUSH
32671: CALL_OW 88
// Say ( JMM , D3-Gary-JMM-1 ) ;
32675: LD_EXP 12
32679: PPUSH
32680: LD_STRING D3-Gary-JMM-1
32682: PPUSH
32683: CALL_OW 88
// joined := true ;
32687: LD_ADDR_VAR 0 5
32691: PUSH
32692: LD_INT 1
32694: ST_TO_ADDR
// end else
32695: GO 32731
// begin Say ( Gary , D4-Gary-Gary-1 ) ;
32697: LD_EXP 30
32701: PPUSH
32702: LD_STRING D4-Gary-Gary-1
32704: PPUSH
32705: CALL_OW 88
// SetSide ( Gary , 1 ) ;
32709: LD_EXP 30
32713: PPUSH
32714: LD_INT 1
32716: PPUSH
32717: CALL_OW 235
// DialogueOff ;
32721: CALL_OW 7
// InGameOff ;
32725: CALL_OW 9
// exit ;
32729: GO 33419
// end ; end else
32731: GO 33227
// if unit = Kikuchi then
32733: LD_VAR 0 1
32737: PUSH
32738: LD_EXP 32
32742: EQUAL
32743: IFFALSE 32827
// begin if Kikuchi in selected then
32745: LD_EXP 32
32749: PUSH
32750: LD_EXP 3
32754: IN
32755: IFFALSE 32791
// begin Say ( Kikuchi , D3-Yamako-Yam-1 ) ;
32757: LD_EXP 32
32761: PPUSH
32762: LD_STRING D3-Yamako-Yam-1
32764: PPUSH
32765: CALL_OW 88
// Say ( JMM , D3-Soldier2-JMM-1 ) ;
32769: LD_EXP 12
32773: PPUSH
32774: LD_STRING D3-Soldier2-JMM-1
32776: PPUSH
32777: CALL_OW 88
// joined := true ;
32781: LD_ADDR_VAR 0 5
32785: PUSH
32786: LD_INT 1
32788: ST_TO_ADDR
// end else
32789: GO 32825
// begin Say ( Kikuchi , D4-Yamako-Yam-1 ) ;
32791: LD_EXP 32
32795: PPUSH
32796: LD_STRING D4-Yamako-Yam-1
32798: PPUSH
32799: CALL_OW 88
// SetSide ( Kikuchi , 1 ) ;
32803: LD_EXP 32
32807: PPUSH
32808: LD_INT 1
32810: PPUSH
32811: CALL_OW 235
// DialogueOff ;
32815: CALL_OW 7
// InGameOff ;
32819: CALL_OW 9
// exit ;
32823: GO 33419
// end ; end else
32825: GO 33227
// if unit = Gladstone then
32827: LD_VAR 0 1
32831: PUSH
32832: LD_EXP 27
32836: EQUAL
32837: IFFALSE 32911
// begin if Gladstone in selected then
32839: LD_EXP 27
32843: PUSH
32844: LD_EXP 3
32848: IN
32849: IFFALSE 32885
// begin joined := true ;
32851: LD_ADDR_VAR 0 5
32855: PUSH
32856: LD_INT 1
32858: ST_TO_ADDR
// Say ( JMM , D3-Tim-JMM-1 ) ;
32859: LD_EXP 12
32863: PPUSH
32864: LD_STRING D3-Tim-JMM-1
32866: PPUSH
32867: CALL_OW 88
// Say ( Gladstone , D3-Tim-Glad-1 ) ;
32871: LD_EXP 27
32875: PPUSH
32876: LD_STRING D3-Tim-Glad-1
32878: PPUSH
32879: CALL_OW 88
// end else
32883: GO 32909
// begin Say ( JMM , D4-Tim-JMM-1 ) ;
32885: LD_EXP 12
32889: PPUSH
32890: LD_STRING D4-Tim-JMM-1
32892: PPUSH
32893: CALL_OW 88
// Say ( Gladstone , D4-Tim-Glad-1 ) ;
32897: LD_EXP 27
32901: PPUSH
32902: LD_STRING D4-Tim-Glad-1
32904: PPUSH
32905: CALL_OW 88
// end ; end else
32909: GO 33227
// if unit = Denis then
32911: LD_VAR 0 1
32915: PUSH
32916: LD_EXP 25
32920: EQUAL
32921: IFFALSE 32957
// begin joined := true ;
32923: LD_ADDR_VAR 0 5
32927: PUSH
32928: LD_INT 1
32930: ST_TO_ADDR
// Say ( Denis , D3-Denis-Den-1 ) ;
32931: LD_EXP 25
32935: PPUSH
32936: LD_STRING D3-Denis-Den-1
32938: PPUSH
32939: CALL_OW 88
// Say ( JMM , D3-Denis-JMM-1 ) ;
32943: LD_EXP 12
32947: PPUSH
32948: LD_STRING D3-Denis-JMM-1
32950: PPUSH
32951: CALL_OW 88
// end else
32955: GO 33227
// if unit = Simms then
32957: LD_VAR 0 1
32961: PUSH
32962: LD_EXP 33
32966: EQUAL
32967: IFFALSE 33003
// begin joined := true ;
32969: LD_ADDR_VAR 0 5
32973: PUSH
32974: LD_INT 1
32976: ST_TO_ADDR
// Say ( Simms , D3-Simms-Sim-1 ) ;
32977: LD_EXP 33
32981: PPUSH
32982: LD_STRING D3-Simms-Sim-1
32984: PPUSH
32985: CALL_OW 88
// Say ( JMM , D3-Simms-JMM-1 ) ;
32989: LD_EXP 12
32993: PPUSH
32994: LD_STRING D3-Simms-JMM-1
32996: PPUSH
32997: CALL_OW 88
// end else
33001: GO 33227
// if unit = DeltaDoctor then
33003: LD_VAR 0 1
33007: PUSH
33008: LD_EXP 35
33012: EQUAL
33013: IFFALSE 33049
// begin joined := true ;
33015: LD_ADDR_VAR 0 5
33019: PUSH
33020: LD_INT 1
33022: ST_TO_ADDR
// Say ( DeltaDoctor , D3-Soldier1-Sol1-1 ) ;
33023: LD_EXP 35
33027: PPUSH
33028: LD_STRING D3-Soldier1-Sol1-1
33030: PPUSH
33031: CALL_OW 88
// Say ( JMM , D3-Soldier1-JMM-1 ) ;
33035: LD_EXP 12
33039: PPUSH
33040: LD_STRING D3-Soldier1-JMM-1
33042: PPUSH
33043: CALL_OW 88
// end else
33047: GO 33227
// begin joined := unit in selected ;
33049: LD_ADDR_VAR 0 5
33053: PUSH
33054: LD_VAR 0 1
33058: PUSH
33059: LD_EXP 3
33063: IN
33064: ST_TO_ADDR
// if joined then
33065: LD_VAR 0 5
33069: IFFALSE 33138
// begin if GetSex ( unit ) = sex_male then
33071: LD_VAR 0 1
33075: PPUSH
33076: CALL_OW 258
33080: PUSH
33081: LD_INT 1
33083: EQUAL
33084: IFFALSE 33112
// begin Say ( unit , D3-Soldier1-Sol1-1 ) ;
33086: LD_VAR 0 1
33090: PPUSH
33091: LD_STRING D3-Soldier1-Sol1-1
33093: PPUSH
33094: CALL_OW 88
// Say ( JMM , D3-Soldier1-JMM-1 ) ;
33098: LD_EXP 12
33102: PPUSH
33103: LD_STRING D3-Soldier1-JMM-1
33105: PPUSH
33106: CALL_OW 88
// end else
33110: GO 33136
// begin Say ( unit , D3-Soldier2-FSol2-1 ) ;
33112: LD_VAR 0 1
33116: PPUSH
33117: LD_STRING D3-Soldier2-FSol2-1
33119: PPUSH
33120: CALL_OW 88
// Say ( JMM , D3-Soldier2-JMM-1 ) ;
33124: LD_EXP 12
33128: PPUSH
33129: LD_STRING D3-Soldier2-JMM-1
33131: PPUSH
33132: CALL_OW 88
// end ; end else
33136: GO 33227
// begin if GetSex ( unit ) = sex_male then
33138: LD_VAR 0 1
33142: PPUSH
33143: CALL_OW 258
33147: PUSH
33148: LD_INT 1
33150: EQUAL
33151: IFFALSE 33191
// begin Say ( unit , D4-Soldier2-Sol1-1 ) ;
33153: LD_VAR 0 1
33157: PPUSH
33158: LD_STRING D4-Soldier2-Sol1-1
33160: PPUSH
33161: CALL_OW 88
// Say ( JMM , D4-Soldier2-JMM-1 ) ;
33165: LD_EXP 12
33169: PPUSH
33170: LD_STRING D4-Soldier2-JMM-1
33172: PPUSH
33173: CALL_OW 88
// Say ( unit , D4-Soldier2-Sol2-1 ) ;
33177: LD_VAR 0 1
33181: PPUSH
33182: LD_STRING D4-Soldier2-Sol2-1
33184: PPUSH
33185: CALL_OW 88
// end else
33189: GO 33227
// begin Say ( unit , D4-Soldier1-FSol1-1 ) ;
33191: LD_VAR 0 1
33195: PPUSH
33196: LD_STRING D4-Soldier1-FSol1-1
33198: PPUSH
33199: CALL_OW 88
// Say ( JMM , D4-Soldier1-JMM-1 ) ;
33203: LD_EXP 12
33207: PPUSH
33208: LD_STRING D4-Soldier1-JMM-1
33210: PPUSH
33211: CALL_OW 88
// Say ( unit , D4-Soldier1-FSol1-2 ) ;
33215: LD_VAR 0 1
33219: PPUSH
33220: LD_STRING D4-Soldier1-FSol1-2
33222: PPUSH
33223: CALL_OW 88
// end ; end ; end ; DialogueOff ;
33227: CALL_OW 7
// InGameOff ;
33231: CALL_OW 9
// if building then
33235: LD_VAR 0 3
33239: IFFALSE 33340
// begin SetSide ( JMM , side ) ;
33241: LD_EXP 12
33245: PPUSH
33246: LD_VAR 0 4
33250: PPUSH
33251: CALL_OW 235
// ComExitBuilding ( JMM ) ;
33255: LD_EXP 12
33259: PPUSH
33260: CALL_OW 122
// if joined then
33264: LD_VAR 0 5
33268: IFFALSE 33307
// begin SetSide ( unit , side ) ;
33270: LD_VAR 0 1
33274: PPUSH
33275: LD_VAR 0 4
33279: PPUSH
33280: CALL_OW 235
// SetSide ( building , 1 ) ;
33284: LD_VAR 0 3
33288: PPUSH
33289: LD_INT 1
33291: PPUSH
33292: CALL_OW 235
// ComExitBuilding ( unit ) ;
33296: LD_VAR 0 1
33300: PPUSH
33301: CALL_OW 122
// end else
33305: GO 33338
// begin wait ( 0 0$10 ) ;
33307: LD_INT 350
33309: PPUSH
33310: CALL_OW 67
// SetSide ( unit , 1 ) ;
33314: LD_VAR 0 1
33318: PPUSH
33319: LD_INT 1
33321: PPUSH
33322: CALL_OW 235
// SetSide ( building , 1 ) ;
33326: LD_VAR 0 3
33330: PPUSH
33331: LD_INT 1
33333: PPUSH
33334: CALL_OW 235
// end ; end else
33338: GO 33419
// begin ComStop ( [ JMM , unit ] ) ;
33340: LD_EXP 12
33344: PUSH
33345: LD_VAR 0 1
33349: PUSH
33350: EMPTY
33351: LIST
33352: LIST
33353: PPUSH
33354: CALL_OW 141
// if joined then
33358: LD_VAR 0 5
33362: IFFALSE 33380
// SetSide ( unit , side ) else
33364: LD_VAR 0 1
33368: PPUSH
33369: LD_VAR 0 4
33373: PPUSH
33374: CALL_OW 235
33378: GO 33419
// begin repeat wait ( 0 0$1 ) ;
33380: LD_INT 35
33382: PPUSH
33383: CALL_OW 67
// until GetDistUnits ( JMM , unit ) > 11 ;
33387: LD_EXP 12
33391: PPUSH
33392: LD_VAR 0 1
33396: PPUSH
33397: CALL_OW 296
33401: PUSH
33402: LD_INT 11
33404: GREATER
33405: IFFALSE 33380
// SetSide ( unit , 1 ) ;
33407: LD_VAR 0 1
33411: PPUSH
33412: LD_INT 1
33414: PPUSH
33415: CALL_OW 235
// end ; end ; end ;
33419: LD_VAR 0 2
33423: RET
// every 0 0$01 trigger IsInUnit ( JMM ) = amlab do
33424: LD_EXP 12
33428: PPUSH
33429: CALL_OW 310
33433: PUSH
33434: LD_INT 47
33436: EQUAL
33437: IFFALSE 33505
33439: GO 33441
33441: DISABLE
// begin ChangeMissionObjectives ( M1a ) ;
33442: LD_STRING M1a
33444: PPUSH
33445: CALL_OW 337
// SetTech ( tech_Soporific , 7 , state_researched ) ;
33449: LD_INT 13
33451: PPUSH
33452: LD_INT 7
33454: PPUSH
33455: LD_INT 2
33457: PPUSH
33458: CALL_OW 322
// SetTech ( tech_SpacAnom , 7 , state_researched ) ;
33462: LD_INT 29
33464: PPUSH
33465: LD_INT 7
33467: PPUSH
33468: LD_INT 2
33470: PPUSH
33471: CALL_OW 322
// SetClass ( JMM , class_bazooker ) ;
33475: LD_EXP 12
33479: PPUSH
33480: LD_INT 9
33482: PPUSH
33483: CALL_OW 336
// can_escape := true ;
33487: LD_ADDR_EXP 6
33491: PUSH
33492: LD_INT 1
33494: ST_TO_ADDR
// SetAreaMapShow ( escape_area , 1 ) ;
33495: LD_INT 19
33497: PPUSH
33498: LD_INT 1
33500: PPUSH
33501: CALL_OW 424
// end ;
33505: END
// every 0 0$01 trigger FilterAllUnits ( [ [ f_side , 4 ] , [ f_weapon , us_cargo_bay ] ] ) do var i ;
33506: LD_INT 22
33508: PUSH
33509: LD_INT 4
33511: PUSH
33512: EMPTY
33513: LIST
33514: LIST
33515: PUSH
33516: LD_INT 34
33518: PUSH
33519: LD_INT 12
33521: PUSH
33522: EMPTY
33523: LIST
33524: LIST
33525: PUSH
33526: EMPTY
33527: LIST
33528: LIST
33529: PPUSH
33530: CALL_OW 69
33534: IFFALSE 33616
33536: GO 33538
33538: DISABLE
33539: LD_INT 0
33541: PPUSH
// begin enable ;
33542: ENABLE
// for i in FilterAllUnits ( [ [ f_side , 4 ] , [ f_weapon , us_cargo_bay ] ] ) do
33543: LD_ADDR_VAR 0 1
33547: PUSH
33548: LD_INT 22
33550: PUSH
33551: LD_INT 4
33553: PUSH
33554: EMPTY
33555: LIST
33556: LIST
33557: PUSH
33558: LD_INT 34
33560: PUSH
33561: LD_INT 12
33563: PUSH
33564: EMPTY
33565: LIST
33566: LIST
33567: PUSH
33568: EMPTY
33569: LIST
33570: LIST
33571: PPUSH
33572: CALL_OW 69
33576: PUSH
33577: FOR_IN
33578: IFFALSE 33614
// if GetDistUnits ( i , JMM ) < 6 then
33580: LD_VAR 0 1
33584: PPUSH
33585: LD_EXP 12
33589: PPUSH
33590: CALL_OW 296
33594: PUSH
33595: LD_INT 6
33597: LESS
33598: IFFALSE 33612
// SetSide ( i , 7 ) ;
33600: LD_VAR 0 1
33604: PPUSH
33605: LD_INT 7
33607: PPUSH
33608: CALL_OW 235
33612: GO 33577
33614: POP
33615: POP
// end ;
33616: PPOPN 1
33618: END
// every 0 0$01 trigger can_escape and not FilterUnitsExceptArea ( escape_area , [ [ f_side , 7 ] , [ f_type , unit_human ] ] ) and not FindArtifact ( 3 ) and not FindArtifact ( 5 ) do var all_taken , tmp , m1 , m2 , m3 ;
33619: LD_EXP 6
33623: PUSH
33624: LD_INT 19
33626: PPUSH
33627: LD_INT 22
33629: PUSH
33630: LD_INT 7
33632: PUSH
33633: EMPTY
33634: LIST
33635: LIST
33636: PUSH
33637: LD_INT 21
33639: PUSH
33640: LD_INT 1
33642: PUSH
33643: EMPTY
33644: LIST
33645: LIST
33646: PUSH
33647: EMPTY
33648: LIST
33649: LIST
33650: PPUSH
33651: CALL_OW 71
33655: NOT
33656: AND
33657: PUSH
33658: LD_INT 3
33660: PPUSH
33661: CALL_OW 469
33665: NOT
33666: AND
33667: PUSH
33668: LD_INT 5
33670: PPUSH
33671: CALL_OW 469
33675: NOT
33676: AND
33677: IFFALSE 35166
33679: GO 33681
33681: DISABLE
33682: LD_INT 0
33684: PPUSH
33685: PPUSH
33686: PPUSH
33687: PPUSH
33688: PPUSH
// begin m1 := false ;
33689: LD_ADDR_VAR 0 3
33693: PUSH
33694: LD_INT 0
33696: ST_TO_ADDR
// m2 := false ;
33697: LD_ADDR_VAR 0 4
33701: PUSH
33702: LD_INT 0
33704: ST_TO_ADDR
// m3 := false ;
33705: LD_ADDR_VAR 0 5
33709: PUSH
33710: LD_INT 0
33712: ST_TO_ADDR
// all_taken := ( UnitFilter ( selected , [ [ f_side , 4 ] , [ f_type , unit_human ] ] ) = 0 ) ;
33713: LD_ADDR_VAR 0 1
33717: PUSH
33718: LD_EXP 3
33722: PPUSH
33723: LD_INT 22
33725: PUSH
33726: LD_INT 4
33728: PUSH
33729: EMPTY
33730: LIST
33731: LIST
33732: PUSH
33733: LD_INT 21
33735: PUSH
33736: LD_INT 1
33738: PUSH
33739: EMPTY
33740: LIST
33741: LIST
33742: PUSH
33743: EMPTY
33744: LIST
33745: LIST
33746: PPUSH
33747: CALL_OW 72
33751: PUSH
33752: LD_INT 0
33754: EQUAL
33755: ST_TO_ADDR
// if not all_taken then
33756: LD_VAR 0 1
33760: NOT
33761: IFFALSE 33902
// case query ( Q1 ) of 1 :
33763: LD_STRING Q1
33765: PPUSH
33766: CALL_OW 97
33770: PUSH
33771: LD_INT 1
33773: DOUBLE
33774: EQUAL
33775: IFTRUE 33779
33777: GO 33890
33779: POP
// begin repeat wait ( 0 0$1 ) ;
33780: LD_INT 35
33782: PPUSH
33783: CALL_OW 67
// until UnitFilter ( selected , [ [ f_side , 4 ] , [ f_type , unit_human ] ] ) = 0 and not FilterUnitsExceptArea ( escape_area , [ [ f_side , 7 ] , [ f_type , unit_human ] ] ) and not FindArtifact ( 3 ) and not FindArtifact ( 5 ) ;
33787: LD_EXP 3
33791: PPUSH
33792: LD_INT 22
33794: PUSH
33795: LD_INT 4
33797: PUSH
33798: EMPTY
33799: LIST
33800: LIST
33801: PUSH
33802: LD_INT 21
33804: PUSH
33805: LD_INT 1
33807: PUSH
33808: EMPTY
33809: LIST
33810: LIST
33811: PUSH
33812: EMPTY
33813: LIST
33814: LIST
33815: PPUSH
33816: CALL_OW 72
33820: PUSH
33821: LD_INT 0
33823: EQUAL
33824: PUSH
33825: LD_INT 19
33827: PPUSH
33828: LD_INT 22
33830: PUSH
33831: LD_INT 7
33833: PUSH
33834: EMPTY
33835: LIST
33836: LIST
33837: PUSH
33838: LD_INT 21
33840: PUSH
33841: LD_INT 1
33843: PUSH
33844: EMPTY
33845: LIST
33846: LIST
33847: PUSH
33848: EMPTY
33849: LIST
33850: LIST
33851: PPUSH
33852: CALL_OW 71
33856: NOT
33857: AND
33858: PUSH
33859: LD_INT 3
33861: PPUSH
33862: CALL_OW 469
33866: NOT
33867: AND
33868: PUSH
33869: LD_INT 5
33871: PPUSH
33872: CALL_OW 469
33876: NOT
33877: AND
33878: IFFALSE 33780
// all_taken := true ;
33880: LD_ADDR_VAR 0 1
33884: PUSH
33885: LD_INT 1
33887: ST_TO_ADDR
// end ; 2 :
33888: GO 33902
33890: LD_INT 2
33892: DOUBLE
33893: EQUAL
33894: IFTRUE 33898
33896: GO 33901
33898: POP
// ; end ;
33899: GO 33902
33901: POP
// if team_kill_counter then
33902: LD_EXP 9
33906: IFFALSE 33922
// Say ( JMM , D5-JMM-1 ) else
33908: LD_EXP 12
33912: PPUSH
33913: LD_STRING D5-JMM-1
33915: PPUSH
33916: CALL_OW 88
33920: GO 33934
// Say ( JMM , D5-JMM-1a ) ;
33922: LD_EXP 12
33926: PPUSH
33927: LD_STRING D5-JMM-1a
33929: PPUSH
33930: CALL_OW 88
// if all_taken then
33934: LD_VAR 0 1
33938: IFFALSE 33960
// begin AddMedal ( All , 1 ) ;
33940: LD_STRING All
33942: PPUSH
33943: LD_INT 1
33945: PPUSH
33946: CALL_OW 101
// m1 := true ;
33950: LD_ADDR_VAR 0 3
33954: PUSH
33955: LD_INT 1
33957: ST_TO_ADDR
// end else
33958: GO 33971
// AddMedal ( All , - 1 ) ;
33960: LD_STRING All
33962: PPUSH
33963: LD_INT 1
33965: NEG
33966: PPUSH
33967: CALL_OW 101
// if team_kill_counter then
33971: LD_EXP 9
33975: IFFALSE 33990
// AddMedal ( Save , - 1 ) else
33977: LD_STRING Save
33979: PPUSH
33980: LD_INT 1
33982: NEG
33983: PPUSH
33984: CALL_OW 101
33988: GO 34008
// begin AddMedal ( Save , 1 ) ;
33990: LD_STRING Save
33992: PPUSH
33993: LD_INT 1
33995: PPUSH
33996: CALL_OW 101
// m2 := true ;
34000: LD_ADDR_VAR 0 4
34004: PUSH
34005: LD_INT 1
34007: ST_TO_ADDR
// end ; if friends_kill_counter >= [ 2 , 1 , 1 ] [ Difficulty ] then
34008: LD_EXP 8
34012: PUSH
34013: LD_INT 2
34015: PUSH
34016: LD_INT 1
34018: PUSH
34019: LD_INT 1
34021: PUSH
34022: EMPTY
34023: LIST
34024: LIST
34025: LIST
34026: PUSH
34027: LD_OWVAR 67
34031: ARRAY
34032: GREATEREQUAL
34033: IFFALSE 34048
// AddMedal ( Friendship , - 1 ) else
34035: LD_STRING Friendship
34037: PPUSH
34038: LD_INT 1
34040: NEG
34041: PPUSH
34042: CALL_OW 101
34046: GO 34066
// begin AddMedal ( Friendship , 1 ) ;
34048: LD_STRING Friendship
34050: PPUSH
34051: LD_INT 1
34053: PPUSH
34054: CALL_OW 101
// m3 := true ;
34058: LD_ADDR_VAR 0 5
34062: PUSH
34063: LD_INT 1
34065: ST_TO_ADDR
// end ; if m1 and m2 and m3 and Difficulty = 3 then
34066: LD_VAR 0 3
34070: PUSH
34071: LD_VAR 0 4
34075: AND
34076: PUSH
34077: LD_VAR 0 5
34081: AND
34082: PUSH
34083: LD_OWVAR 67
34087: PUSH
34088: LD_INT 3
34090: EQUAL
34091: AND
34092: IFFALSE 34104
// SetAchievementEX ( ACH_AMER , 16 ) ;
34094: LD_STRING ACH_AMER
34096: PPUSH
34097: LD_INT 16
34099: PPUSH
34100: CALL_OW 564
// GiveMedals ( MAIN ) ;
34104: LD_STRING MAIN
34106: PPUSH
34107: CALL_OW 102
// tmp := FilterAllUnits ( [ [ [ f_side , 7 ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] , [ f_class , 5 ] , [ f_class , 8 ] , [ f_class , 9 ] ] ] ] ) ;
34111: LD_ADDR_VAR 0 2
34115: PUSH
34116: LD_INT 22
34118: PUSH
34119: LD_INT 7
34121: PUSH
34122: EMPTY
34123: LIST
34124: LIST
34125: PUSH
34126: LD_INT 2
34128: PUSH
34129: LD_INT 25
34131: PUSH
34132: LD_INT 1
34134: PUSH
34135: EMPTY
34136: LIST
34137: LIST
34138: PUSH
34139: LD_INT 25
34141: PUSH
34142: LD_INT 2
34144: PUSH
34145: EMPTY
34146: LIST
34147: LIST
34148: PUSH
34149: LD_INT 25
34151: PUSH
34152: LD_INT 3
34154: PUSH
34155: EMPTY
34156: LIST
34157: LIST
34158: PUSH
34159: LD_INT 25
34161: PUSH
34162: LD_INT 4
34164: PUSH
34165: EMPTY
34166: LIST
34167: LIST
34168: PUSH
34169: LD_INT 25
34171: PUSH
34172: LD_INT 5
34174: PUSH
34175: EMPTY
34176: LIST
34177: LIST
34178: PUSH
34179: LD_INT 25
34181: PUSH
34182: LD_INT 8
34184: PUSH
34185: EMPTY
34186: LIST
34187: LIST
34188: PUSH
34189: LD_INT 25
34191: PUSH
34192: LD_INT 9
34194: PUSH
34195: EMPTY
34196: LIST
34197: LIST
34198: PUSH
34199: EMPTY
34200: LIST
34201: LIST
34202: LIST
34203: LIST
34204: LIST
34205: LIST
34206: LIST
34207: LIST
34208: PUSH
34209: EMPTY
34210: LIST
34211: LIST
34212: PUSH
34213: EMPTY
34214: LIST
34215: PPUSH
34216: CALL_OW 69
34220: ST_TO_ADDR
// RewardPeople ( tmp ^ Roth ) ;
34221: LD_VAR 0 2
34225: PUSH
34226: LD_EXP 13
34230: ADD
34231: PPUSH
34232: CALL_OW 43
// SaveCharacters ( JMM , 12a_JMM ) ;
34236: LD_EXP 12
34240: PPUSH
34241: LD_STRING 12a_JMM
34243: PPUSH
34244: CALL_OW 38
// if IsLive ( Roth ) then
34248: LD_EXP 13
34252: PPUSH
34253: CALL_OW 300
34257: IFFALSE 34271
// SaveCharacters ( Roth , 12a_Roth ) ;
34259: LD_EXP 13
34263: PPUSH
34264: LD_STRING 12a_Roth
34266: PPUSH
34267: CALL_OW 38
// if Lisa in tmp then
34271: LD_EXP 21
34275: PUSH
34276: LD_VAR 0 2
34280: IN
34281: IFFALSE 34297
// SaveCharacters ( Lisa , 12a_Lisa ) else
34283: LD_EXP 21
34287: PPUSH
34288: LD_STRING 12a_Lisa
34290: PPUSH
34291: CALL_OW 38
34295: GO 34315
// if Lisa then
34297: LD_EXP 21
34301: IFFALSE 34315
// SaveCharacters ( Lisa , 12p_Lisa ) ;
34303: LD_EXP 21
34307: PPUSH
34308: LD_STRING 12p_Lisa
34310: PPUSH
34311: CALL_OW 38
// if Donaldson in tmp then
34315: LD_EXP 22
34319: PUSH
34320: LD_VAR 0 2
34324: IN
34325: IFFALSE 34341
// SaveCharacters ( Donaldson , 12a_Donaldson ) else
34327: LD_EXP 22
34331: PPUSH
34332: LD_STRING 12a_Donaldson
34334: PPUSH
34335: CALL_OW 38
34339: GO 34359
// if Donaldson then
34341: LD_EXP 22
34345: IFFALSE 34359
// SaveCharacters ( Donaldson , 12p_Donaldson ) ;
34347: LD_EXP 22
34351: PPUSH
34352: LD_STRING 12p_Donaldson
34354: PPUSH
34355: CALL_OW 38
// if Bobby in tmp then
34359: LD_EXP 23
34363: PUSH
34364: LD_VAR 0 2
34368: IN
34369: IFFALSE 34385
// SaveCharacters ( Bobby , 12a_Bobby ) else
34371: LD_EXP 23
34375: PPUSH
34376: LD_STRING 12a_Bobby
34378: PPUSH
34379: CALL_OW 38
34383: GO 34403
// if Bobby then
34385: LD_EXP 23
34389: IFFALSE 34403
// SaveCharacters ( Bobby , 12p_Bobby ) ;
34391: LD_EXP 23
34395: PPUSH
34396: LD_STRING 12p_Bobby
34398: PPUSH
34399: CALL_OW 38
// if Cyrus in tmp then
34403: LD_EXP 24
34407: PUSH
34408: LD_VAR 0 2
34412: IN
34413: IFFALSE 34429
// SaveCharacters ( Cyrus , 12a_Cyrus ) else
34415: LD_EXP 24
34419: PPUSH
34420: LD_STRING 12a_Cyrus
34422: PPUSH
34423: CALL_OW 38
34427: GO 34447
// if Cyrus then
34429: LD_EXP 24
34433: IFFALSE 34447
// SaveCharacters ( Cyrus , 12p_Cyrus ) ;
34435: LD_EXP 24
34439: PPUSH
34440: LD_STRING 12p_Cyrus
34442: PPUSH
34443: CALL_OW 38
// if Denis in tmp then
34447: LD_EXP 25
34451: PUSH
34452: LD_VAR 0 2
34456: IN
34457: IFFALSE 34471
// SaveCharacters ( Denis , 12a_Denis ) ;
34459: LD_EXP 25
34463: PPUSH
34464: LD_STRING 12a_Denis
34466: PPUSH
34467: CALL_OW 38
// if Brown in tmp then
34471: LD_EXP 26
34475: PUSH
34476: LD_VAR 0 2
34480: IN
34481: IFFALSE 34497
// SaveCharacters ( Brown , 12a_Brown ) else
34483: LD_EXP 26
34487: PPUSH
34488: LD_STRING 12a_Brown
34490: PPUSH
34491: CALL_OW 38
34495: GO 34521
// if Brown in tmp then
34497: LD_EXP 26
34501: PUSH
34502: LD_VAR 0 2
34506: IN
34507: IFFALSE 34521
// SaveCharacters ( Brown , 12p_Brown ) ;
34509: LD_EXP 26
34513: PPUSH
34514: LD_STRING 12p_Brown
34516: PPUSH
34517: CALL_OW 38
// if Gladstone in tmp then
34521: LD_EXP 27
34525: PUSH
34526: LD_VAR 0 2
34530: IN
34531: IFFALSE 34547
// SaveCharacters ( Gladstone , 12a_Gladstone ) else
34533: LD_EXP 27
34537: PPUSH
34538: LD_STRING 12a_Gladstone
34540: PPUSH
34541: CALL_OW 38
34545: GO 34565
// if Gladstone then
34547: LD_EXP 27
34551: IFFALSE 34565
// SaveCharacters ( Gladstone , 12p_Gladstone ) ;
34553: LD_EXP 27
34557: PPUSH
34558: LD_STRING 12p_Gladstone
34560: PPUSH
34561: CALL_OW 38
// if Houten in tmp then
34565: LD_EXP 28
34569: PUSH
34570: LD_VAR 0 2
34574: IN
34575: IFFALSE 34591
// SaveCharacters ( Houten , 12a_Houten ) else
34577: LD_EXP 28
34581: PPUSH
34582: LD_STRING 12a_Houten
34584: PPUSH
34585: CALL_OW 38
34589: GO 34609
// if Houten then
34591: LD_EXP 28
34595: IFFALSE 34609
// SaveCharacters ( Houten , 12p_Houten ) ;
34597: LD_EXP 28
34601: PPUSH
34602: LD_STRING 12p_Houten
34604: PPUSH
34605: CALL_OW 38
// if Cornel in tmp then
34609: LD_EXP 29
34613: PUSH
34614: LD_VAR 0 2
34618: IN
34619: IFFALSE 34635
// SaveCharacters ( Cornel , 12a_Cornell ) else
34621: LD_EXP 29
34625: PPUSH
34626: LD_STRING 12a_Cornell
34628: PPUSH
34629: CALL_OW 38
34633: GO 34653
// if Cornel then
34635: LD_EXP 29
34639: IFFALSE 34653
// SaveCharacters ( Cornel , 12p_Cornell ) ;
34641: LD_EXP 29
34645: PPUSH
34646: LD_STRING 12p_Cornell
34648: PPUSH
34649: CALL_OW 38
// if Gary in tmp then
34653: LD_EXP 30
34657: PUSH
34658: LD_VAR 0 2
34662: IN
34663: IFFALSE 34679
// SaveCharacters ( Gary , 12a_Gary ) else
34665: LD_EXP 30
34669: PPUSH
34670: LD_STRING 12a_Gary
34672: PPUSH
34673: CALL_OW 38
34677: GO 34697
// if Gary then
34679: LD_EXP 30
34683: IFFALSE 34697
// SaveCharacters ( Gary , 12p_Gary ) ;
34685: LD_EXP 30
34689: PPUSH
34690: LD_STRING 12p_Gary
34692: PPUSH
34693: CALL_OW 38
// if Frank in tmp then
34697: LD_EXP 31
34701: PUSH
34702: LD_VAR 0 2
34706: IN
34707: IFFALSE 34721
// SaveCharacters ( Frank , 12a_Frank ) ;
34709: LD_EXP 31
34713: PPUSH
34714: LD_STRING 12a_Frank
34716: PPUSH
34717: CALL_OW 38
// if Kikuchi in tmp then
34721: LD_EXP 32
34725: PUSH
34726: LD_VAR 0 2
34730: IN
34731: IFFALSE 34747
// SaveCharacters ( Kikuchi , 12a_Kikuchi ) else
34733: LD_EXP 32
34737: PPUSH
34738: LD_STRING 12a_Kikuchi
34740: PPUSH
34741: CALL_OW 38
34745: GO 34765
// if Kikuchi then
34747: LD_EXP 32
34751: IFFALSE 34765
// SaveCharacters ( Kikuchi , 12p_Kikuchi ) ;
34753: LD_EXP 32
34757: PPUSH
34758: LD_STRING 12p_Kikuchi
34760: PPUSH
34761: CALL_OW 38
// if Simms in tmp then
34765: LD_EXP 33
34769: PUSH
34770: LD_VAR 0 2
34774: IN
34775: IFFALSE 34789
// SaveCharacters ( Simms , 12a_Simms ) ;
34777: LD_EXP 33
34781: PPUSH
34782: LD_STRING 12a_Simms
34784: PPUSH
34785: CALL_OW 38
// if Joan in tmp then
34789: LD_EXP 34
34793: PUSH
34794: LD_VAR 0 2
34798: IN
34799: IFFALSE 34813
// SaveCharacters ( Joan , 12a_Joan ) ;
34801: LD_EXP 34
34805: PPUSH
34806: LD_STRING 12a_Joan
34808: PPUSH
34809: CALL_OW 38
// if DeltaDoctor in tmp then
34813: LD_EXP 35
34817: PUSH
34818: LD_VAR 0 2
34822: IN
34823: IFFALSE 34837
// SaveCharacters ( DeltaDoctor , 12a_DeltaDoctor ) ;
34825: LD_EXP 35
34829: PPUSH
34830: LD_STRING 12a_DeltaDoctor
34832: PPUSH
34833: CALL_OW 38
// tmp := tmp diff [ JMM , Roth , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi , Simms , Joan , DeltaDoctor ] ;
34837: LD_ADDR_VAR 0 2
34841: PUSH
34842: LD_VAR 0 2
34846: PUSH
34847: LD_EXP 12
34851: PUSH
34852: LD_EXP 13
34856: PUSH
34857: LD_EXP 21
34861: PUSH
34862: LD_EXP 22
34866: PUSH
34867: LD_EXP 23
34871: PUSH
34872: LD_EXP 24
34876: PUSH
34877: LD_EXP 25
34881: PUSH
34882: LD_EXP 26
34886: PUSH
34887: LD_EXP 27
34891: PUSH
34892: LD_EXP 28
34896: PUSH
34897: LD_EXP 29
34901: PUSH
34902: LD_EXP 30
34906: PUSH
34907: LD_EXP 31
34911: PUSH
34912: LD_EXP 32
34916: PUSH
34917: LD_EXP 33
34921: PUSH
34922: LD_EXP 34
34926: PUSH
34927: LD_EXP 35
34931: PUSH
34932: EMPTY
34933: LIST
34934: LIST
34935: LIST
34936: LIST
34937: LIST
34938: LIST
34939: LIST
34940: LIST
34941: LIST
34942: LIST
34943: LIST
34944: LIST
34945: LIST
34946: LIST
34947: LIST
34948: LIST
34949: LIST
34950: DIFF
34951: ST_TO_ADDR
// if tmp then
34952: LD_VAR 0 2
34956: IFFALSE 34970
// SaveCharacters ( tmp , 12a_others ) ;
34958: LD_VAR 0 2
34962: PPUSH
34963: LD_STRING 12a_others
34965: PPUSH
34966: CALL_OW 38
// tmp := FilterAllUnits ( [ [ f_type , unit_human ] , [ f_nation , 1 ] , [ f_or , [ f_side , 1 ] , [ f_side , 4 ] ] ] ) diff [ JMM , Roth , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi , Simms , Joan , DeltaDoctor , Powell ] ;
34970: LD_ADDR_VAR 0 2
34974: PUSH
34975: LD_INT 21
34977: PUSH
34978: LD_INT 1
34980: PUSH
34981: EMPTY
34982: LIST
34983: LIST
34984: PUSH
34985: LD_INT 23
34987: PUSH
34988: LD_INT 1
34990: PUSH
34991: EMPTY
34992: LIST
34993: LIST
34994: PUSH
34995: LD_INT 2
34997: PUSH
34998: LD_INT 22
35000: PUSH
35001: LD_INT 1
35003: PUSH
35004: EMPTY
35005: LIST
35006: LIST
35007: PUSH
35008: LD_INT 22
35010: PUSH
35011: LD_INT 4
35013: PUSH
35014: EMPTY
35015: LIST
35016: LIST
35017: PUSH
35018: EMPTY
35019: LIST
35020: LIST
35021: LIST
35022: PUSH
35023: EMPTY
35024: LIST
35025: LIST
35026: LIST
35027: PPUSH
35028: CALL_OW 69
35032: PUSH
35033: LD_EXP 12
35037: PUSH
35038: LD_EXP 13
35042: PUSH
35043: LD_EXP 21
35047: PUSH
35048: LD_EXP 22
35052: PUSH
35053: LD_EXP 23
35057: PUSH
35058: LD_EXP 24
35062: PUSH
35063: LD_EXP 25
35067: PUSH
35068: LD_EXP 26
35072: PUSH
35073: LD_EXP 27
35077: PUSH
35078: LD_EXP 28
35082: PUSH
35083: LD_EXP 29
35087: PUSH
35088: LD_EXP 30
35092: PUSH
35093: LD_EXP 31
35097: PUSH
35098: LD_EXP 32
35102: PUSH
35103: LD_EXP 33
35107: PUSH
35108: LD_EXP 34
35112: PUSH
35113: LD_EXP 35
35117: PUSH
35118: LD_EXP 14
35122: PUSH
35123: EMPTY
35124: LIST
35125: LIST
35126: LIST
35127: LIST
35128: LIST
35129: LIST
35130: LIST
35131: LIST
35132: LIST
35133: LIST
35134: LIST
35135: LIST
35136: LIST
35137: LIST
35138: LIST
35139: LIST
35140: LIST
35141: LIST
35142: DIFF
35143: ST_TO_ADDR
// if tmp then
35144: LD_VAR 0 2
35148: IFFALSE 35162
// SaveCharacters ( tmp , 12p_others ) ;
35150: LD_VAR 0 2
35154: PPUSH
35155: LD_STRING 12p_others
35157: PPUSH
35158: CALL_OW 38
// YouWin ;
35162: CALL_OW 103
// end ; end_of_file
35166: PPOPN 5
35168: END
// on SailEvent ( event ) do var tmp ;
35169: LD_INT 0
35171: PPUSH
// begin if event = 1 then
35172: LD_VAR 0 1
35176: PUSH
35177: LD_INT 1
35179: EQUAL
35180: IFFALSE 35253
// begin if not mobile_patrol then
35182: LD_EXP 15
35186: NOT
35187: IFFALSE 35191
// exit ;
35189: GO 35253
// tmp := mobile_patrol [ mobile_patrol ] ;
35191: LD_ADDR_VAR 0 2
35195: PUSH
35196: LD_EXP 15
35200: PUSH
35201: LD_EXP 15
35205: ARRAY
35206: ST_TO_ADDR
// mobile_patrol := Delete ( mobile_patrol , mobile_patrol ) ;
35207: LD_ADDR_EXP 15
35211: PUSH
35212: LD_EXP 15
35216: PPUSH
35217: LD_EXP 15
35221: PPUSH
35222: CALL_OW 3
35226: ST_TO_ADDR
// Patrol ( tmp , mobile_points [ mobile_patrol + 1 ] , [ ] ) ;
35227: LD_VAR 0 2
35231: PPUSH
35232: LD_EXP 16
35236: PUSH
35237: LD_EXP 15
35241: PUSH
35242: LD_INT 1
35244: PLUS
35245: ARRAY
35246: PPUSH
35247: EMPTY
35248: PPUSH
35249: CALL 6880 0 3
// end ; end ;
35253: PPOPN 2
35255: END
// on UnitDestroyed ( un ) do begin if un = JMM then
35256: LD_VAR 0 1
35260: PUSH
35261: LD_EXP 12
35265: EQUAL
35266: IFFALSE 35275
// YouLost ( JMM ) ;
35268: LD_STRING JMM
35270: PPUSH
35271: CALL_OW 104
// if GetSide ( un ) = 7 and GetWeapon ( un ) = us_cargo_bay then
35275: LD_VAR 0 1
35279: PPUSH
35280: CALL_OW 255
35284: PUSH
35285: LD_INT 7
35287: EQUAL
35288: PUSH
35289: LD_VAR 0 1
35293: PPUSH
35294: CALL_OW 264
35298: PUSH
35299: LD_INT 12
35301: EQUAL
35302: AND
35303: IFFALSE 35312
// YouLost ( Artifact ) ;
35305: LD_STRING Artifact
35307: PPUSH
35308: CALL_OW 104
// if ( GetSide ( un ) = 7 and GetType ( un ) = unit_human ) or un = Roth then
35312: LD_VAR 0 1
35316: PPUSH
35317: CALL_OW 255
35321: PUSH
35322: LD_INT 7
35324: EQUAL
35325: PUSH
35326: LD_VAR 0 1
35330: PPUSH
35331: CALL_OW 247
35335: PUSH
35336: LD_INT 1
35338: EQUAL
35339: AND
35340: PUSH
35341: LD_VAR 0 1
35345: PUSH
35346: LD_EXP 13
35350: EQUAL
35351: OR
35352: IFFALSE 35368
// team_kill_counter := team_kill_counter + 1 ;
35354: LD_ADDR_EXP 9
35358: PUSH
35359: LD_EXP 9
35363: PUSH
35364: LD_INT 1
35366: PLUS
35367: ST_TO_ADDR
// if GetSide ( un ) = 1 and GetType ( un ) = unit_human then
35368: LD_VAR 0 1
35372: PPUSH
35373: CALL_OW 255
35377: PUSH
35378: LD_INT 1
35380: EQUAL
35381: PUSH
35382: LD_VAR 0 1
35386: PPUSH
35387: CALL_OW 247
35391: PUSH
35392: LD_INT 1
35394: EQUAL
35395: AND
35396: IFFALSE 35412
// friends_kill_counter := friends_kill_counter + 1 ;
35398: LD_ADDR_EXP 8
35402: PUSH
35403: LD_EXP 8
35407: PUSH
35408: LD_INT 1
35410: PLUS
35411: ST_TO_ADDR
// if GetSide ( un ) <> 1 then
35412: LD_VAR 0 1
35416: PPUSH
35417: CALL_OW 255
35421: PUSH
35422: LD_INT 1
35424: NONEQUAL
35425: IFFALSE 35429
// exit ;
35427: GO 35506
// if GetControl ( un ) = control_remote then
35429: LD_VAR 0 1
35433: PPUSH
35434: CALL_OW 263
35438: PUSH
35439: LD_INT 2
35441: EQUAL
35442: IFFALSE 35460
// defenders := defenders diff un ;
35444: LD_ADDR_EXP 18
35448: PUSH
35449: LD_EXP 18
35453: PUSH
35454: LD_VAR 0 1
35458: DIFF
35459: ST_TO_ADDR
// if not un in defenders then
35460: LD_VAR 0 1
35464: PUSH
35465: LD_EXP 18
35469: IN
35470: NOT
35471: IFFALSE 35506
// begin defcon := [ GetX ( un ) , GetY ( un ) ] ;
35473: LD_ADDR_EXP 19
35477: PUSH
35478: LD_VAR 0 1
35482: PPUSH
35483: CALL_OW 250
35487: PUSH
35488: LD_VAR 0 1
35492: PPUSH
35493: CALL_OW 251
35497: PUSH
35498: EMPTY
35499: LIST
35500: LIST
35501: ST_TO_ADDR
// Defend ;
35502: CALL 2660 0 0
// end ; end ;
35506: PPOPN 1
35508: END
// on VehicleConstructed ( veh , fac ) do begin if GetSide ( veh ) <> 1 then
35509: LD_VAR 0 1
35513: PPUSH
35514: CALL_OW 255
35518: PUSH
35519: LD_INT 1
35521: NONEQUAL
35522: IFFALSE 35526
// exit ;
35524: GO 35550
// if GetControl ( veh ) = control_remote then
35526: LD_VAR 0 1
35530: PPUSH
35531: CALL_OW 263
35535: PUSH
35536: LD_INT 2
35538: EQUAL
35539: IFFALSE 35550
// Connect ( veh ) ;
35541: LD_VAR 0 1
35545: PPUSH
35546: CALL 6075 0 1
// end ;
35550: PPOPN 2
35552: END
// on UnitGoesToRed ( un ) do var i , veh ;
35553: LD_INT 0
35555: PPUSH
35556: PPUSH
// begin if GetSide ( un ) = 1 and GetControl ( un ) = control_remote then
35557: LD_VAR 0 1
35561: PPUSH
35562: CALL_OW 255
35566: PUSH
35567: LD_INT 1
35569: EQUAL
35570: PUSH
35571: LD_VAR 0 1
35575: PPUSH
35576: CALL_OW 263
35580: PUSH
35581: LD_INT 2
35583: EQUAL
35584: AND
35585: IFFALSE 35596
// ComUnlink ( un ) ;
35587: LD_VAR 0 1
35591: PPUSH
35592: CALL_OW 136
// if un = ambar0 then
35596: LD_VAR 0 1
35600: PUSH
35601: LD_INT 18
35603: EQUAL
35604: IFFALSE 35714
// begin uc_side := 1 ;
35606: LD_ADDR_OWVAR 20
35610: PUSH
35611: LD_INT 1
35613: ST_TO_ADDR
// uc_nation := 1 ;
35614: LD_ADDR_OWVAR 21
35618: PUSH
35619: LD_INT 1
35621: ST_TO_ADDR
// for i = 1 to 6 do
35622: LD_ADDR_VAR 0 2
35626: PUSH
35627: DOUBLE
35628: LD_INT 1
35630: DEC
35631: ST_TO_ADDR
35632: LD_INT 6
35634: PUSH
35635: FOR_TO
35636: IFFALSE 35712
// begin PrepareVehicle ( us_medium_tracked , engine_combustion , control_computer , us_gatling_gun , 100 ) ;
35638: LD_INT 3
35640: PPUSH
35641: LD_INT 1
35643: PPUSH
35644: LD_INT 3
35646: PPUSH
35647: LD_INT 4
35649: PPUSH
35650: LD_INT 100
35652: PPUSH
35653: CALL 5839 0 5
// veh := CreateVehicle ;
35657: LD_ADDR_VAR 0 3
35661: PUSH
35662: CALL_OW 45
35666: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
35667: LD_VAR 0 3
35671: PPUSH
35672: LD_INT 1
35674: PPUSH
35675: CALL_OW 233
// PlaceUnitArea ( veh , west_spawn , false ) ;
35679: LD_VAR 0 3
35683: PPUSH
35684: LD_INT 25
35686: PPUSH
35687: LD_INT 0
35689: PPUSH
35690: CALL_OW 49
// defenders := defenders ^ veh ;
35694: LD_ADDR_EXP 18
35698: PUSH
35699: LD_EXP 18
35703: PUSH
35704: LD_VAR 0 3
35708: ADD
35709: ST_TO_ADDR
// end ;
35710: GO 35635
35712: POP
35713: POP
// end ; end ;
35714: PPOPN 3
35716: END
// on EnterBuilding ( building , unit ) do begin if unit = Powell then
35717: LD_VAR 0 2
35721: PUSH
35722: LD_EXP 14
35726: EQUAL
35727: IFFALSE 35738
// RemoveUnit ( Powell ) ;
35729: LD_EXP 14
35733: PPUSH
35734: CALL_OW 64
// end ;
35738: PPOPN 2
35740: END
// on Command ( cmd ) do begin SOS_Command ( cmd ) ;
35741: LD_VAR 0 1
35745: PPUSH
35746: CALL 35895 0 1
// end ; end_of_file
35750: PPOPN 1
35752: END
// export ru_radar , ru_big_cargo_bay , us_hack , us_artillery , ar_bio_bomb ; every 1 do
35753: GO 35755
35755: DISABLE
// begin ru_radar := 98 ;
35756: LD_ADDR_EXP 36
35760: PUSH
35761: LD_INT 98
35763: ST_TO_ADDR
// ru_big_cargo_bay := 89 ;
35764: LD_ADDR_EXP 37
35768: PUSH
35769: LD_INT 89
35771: ST_TO_ADDR
// us_hack := 99 ;
35772: LD_ADDR_EXP 38
35776: PUSH
35777: LD_INT 99
35779: ST_TO_ADDR
// us_artillery := 97 ;
35780: LD_ADDR_EXP 39
35784: PUSH
35785: LD_INT 97
35787: ST_TO_ADDR
// ar_bio_bomb := 91 ;
35788: LD_ADDR_EXP 40
35792: PUSH
35793: LD_INT 91
35795: ST_TO_ADDR
// end ; end_of_file end_of_file end_of_file
35796: END
// export function SOS_UnitExtraDestroyed ( un , killerSide , killerUnit ) ; var i , eff , side ; begin
35797: LD_INT 0
35799: PPUSH
35800: PPUSH
35801: PPUSH
35802: PPUSH
// if GetWeapon ( un ) = ar_bio_bomb then
35803: LD_VAR 0 1
35807: PPUSH
35808: CALL_OW 264
35812: PUSH
35813: LD_EXP 40
35817: EQUAL
35818: IFFALSE 35890
// begin if GetTech ( tech_bio3 , GetSide ( un ) ) = state_researched then
35820: LD_INT 68
35822: PPUSH
35823: LD_VAR 0 1
35827: PPUSH
35828: CALL_OW 255
35832: PPUSH
35833: CALL_OW 321
35837: PUSH
35838: LD_INT 2
35840: EQUAL
35841: IFFALSE 35853
// eff := 70 else
35843: LD_ADDR_VAR 0 6
35847: PUSH
35848: LD_INT 70
35850: ST_TO_ADDR
35851: GO 35861
// eff := 30 ;
35853: LD_ADDR_VAR 0 6
35857: PUSH
35858: LD_INT 30
35860: ST_TO_ADDR
// ArtContamination ( GetX ( un ) , GetY ( un ) , eff ) ;
35861: LD_VAR 0 1
35865: PPUSH
35866: CALL_OW 250
35870: PPUSH
35871: LD_VAR 0 1
35875: PPUSH
35876: CALL_OW 251
35880: PPUSH
35881: LD_VAR 0 6
35885: PPUSH
35886: CALL_OW 495
// end ; end ;
35890: LD_VAR 0 4
35894: RET
// export function SOS_Command ( cmd ) ; var i , j , tmp , taskList , _taskList ; begin
35895: LD_INT 0
35897: PPUSH
35898: PPUSH
35899: PPUSH
35900: PPUSH
35901: PPUSH
35902: PPUSH
// if cmd = 124 then
35903: LD_VAR 0 1
35907: PUSH
35908: LD_INT 124
35910: EQUAL
35911: IFFALSE 36117
// begin tmp := FilterAllUnits ( [ f_or , [ f_weapon , ru_bulldozer ] , [ f_weapon , us_bulldozer ] ] ) ;
35913: LD_ADDR_VAR 0 5
35917: PUSH
35918: LD_INT 2
35920: PUSH
35921: LD_INT 34
35923: PUSH
35924: LD_INT 53
35926: PUSH
35927: EMPTY
35928: LIST
35929: LIST
35930: PUSH
35931: LD_INT 34
35933: PUSH
35934: LD_INT 14
35936: PUSH
35937: EMPTY
35938: LIST
35939: LIST
35940: PUSH
35941: EMPTY
35942: LIST
35943: LIST
35944: LIST
35945: PPUSH
35946: CALL_OW 69
35950: ST_TO_ADDR
// if not tmp then
35951: LD_VAR 0 5
35955: NOT
35956: IFFALSE 35960
// exit ;
35958: GO 36117
// for i in tmp do
35960: LD_ADDR_VAR 0 3
35964: PUSH
35965: LD_VAR 0 5
35969: PUSH
35970: FOR_IN
35971: IFFALSE 36115
// begin taskList := GetTaskList ( i ) ;
35973: LD_ADDR_VAR 0 6
35977: PUSH
35978: LD_VAR 0 3
35982: PPUSH
35983: CALL_OW 437
35987: ST_TO_ADDR
// if not taskList then
35988: LD_VAR 0 6
35992: NOT
35993: IFFALSE 35997
// continue ;
35995: GO 35970
// for j = 1 to taskList do
35997: LD_ADDR_VAR 0 4
36001: PUSH
36002: DOUBLE
36003: LD_INT 1
36005: DEC
36006: ST_TO_ADDR
36007: LD_VAR 0 6
36011: PUSH
36012: FOR_TO
36013: IFFALSE 36111
// if taskList [ j ] [ 1 ] = | then
36015: LD_VAR 0 6
36019: PUSH
36020: LD_VAR 0 4
36024: ARRAY
36025: PUSH
36026: LD_INT 1
36028: ARRAY
36029: PUSH
36030: LD_STRING |
36032: EQUAL
36033: IFFALSE 36109
// begin _taskList := Delete ( taskList , 1 ) ;
36035: LD_ADDR_VAR 0 7
36039: PUSH
36040: LD_VAR 0 6
36044: PPUSH
36045: LD_INT 1
36047: PPUSH
36048: CALL_OW 3
36052: ST_TO_ADDR
// SetTaskList ( i , _taskList ) ;
36053: LD_VAR 0 3
36057: PPUSH
36058: LD_VAR 0 7
36062: PPUSH
36063: CALL_OW 446
// CutTreeXYR ( i , taskList [ j ] [ 2 ] , taskList [ j ] [ 3 ] , 8 ) ;
36067: LD_VAR 0 3
36071: PPUSH
36072: LD_VAR 0 6
36076: PUSH
36077: LD_VAR 0 4
36081: ARRAY
36082: PUSH
36083: LD_INT 2
36085: ARRAY
36086: PPUSH
36087: LD_VAR 0 6
36091: PUSH
36092: LD_VAR 0 4
36096: ARRAY
36097: PUSH
36098: LD_INT 3
36100: ARRAY
36101: PPUSH
36102: LD_INT 8
36104: PPUSH
36105: CALL 36122 0 4
// end ;
36109: GO 36012
36111: POP
36112: POP
// end ;
36113: GO 35970
36115: POP
36116: POP
// end ; end ;
36117: LD_VAR 0 2
36121: RET
// function CutTreeXYR ( bulldozer , x , y , r ) ; var i , min_x , min_y , max_x , max_y , _x , _y , list ; begin
36122: LD_INT 0
36124: PPUSH
36125: PPUSH
36126: PPUSH
36127: PPUSH
36128: PPUSH
36129: PPUSH
36130: PPUSH
36131: PPUSH
36132: PPUSH
// if not bulldozer or not ValidHex ( x , y ) or not r then
36133: LD_VAR 0 1
36137: NOT
36138: PUSH
36139: LD_VAR 0 2
36143: PPUSH
36144: LD_VAR 0 3
36148: PPUSH
36149: CALL_OW 488
36153: NOT
36154: OR
36155: PUSH
36156: LD_VAR 0 4
36160: NOT
36161: OR
36162: IFFALSE 36166
// exit ;
36164: GO 36506
// list := [ ] ;
36166: LD_ADDR_VAR 0 13
36170: PUSH
36171: EMPTY
36172: ST_TO_ADDR
// if x - r < 0 then
36173: LD_VAR 0 2
36177: PUSH
36178: LD_VAR 0 4
36182: MINUS
36183: PUSH
36184: LD_INT 0
36186: LESS
36187: IFFALSE 36199
// min_x := 0 else
36189: LD_ADDR_VAR 0 7
36193: PUSH
36194: LD_INT 0
36196: ST_TO_ADDR
36197: GO 36215
// min_x := x - r ;
36199: LD_ADDR_VAR 0 7
36203: PUSH
36204: LD_VAR 0 2
36208: PUSH
36209: LD_VAR 0 4
36213: MINUS
36214: ST_TO_ADDR
// if y - r < 0 then
36215: LD_VAR 0 3
36219: PUSH
36220: LD_VAR 0 4
36224: MINUS
36225: PUSH
36226: LD_INT 0
36228: LESS
36229: IFFALSE 36241
// min_y := 0 else
36231: LD_ADDR_VAR 0 8
36235: PUSH
36236: LD_INT 0
36238: ST_TO_ADDR
36239: GO 36257
// min_y := y - r ;
36241: LD_ADDR_VAR 0 8
36245: PUSH
36246: LD_VAR 0 3
36250: PUSH
36251: LD_VAR 0 4
36255: MINUS
36256: ST_TO_ADDR
// max_x := x + r ;
36257: LD_ADDR_VAR 0 9
36261: PUSH
36262: LD_VAR 0 2
36266: PUSH
36267: LD_VAR 0 4
36271: PLUS
36272: ST_TO_ADDR
// max_y := y + r ;
36273: LD_ADDR_VAR 0 10
36277: PUSH
36278: LD_VAR 0 3
36282: PUSH
36283: LD_VAR 0 4
36287: PLUS
36288: ST_TO_ADDR
// for _x = min_x to max_x do
36289: LD_ADDR_VAR 0 11
36293: PUSH
36294: DOUBLE
36295: LD_VAR 0 7
36299: DEC
36300: ST_TO_ADDR
36301: LD_VAR 0 9
36305: PUSH
36306: FOR_TO
36307: IFFALSE 36424
// for _y = min_y to max_y do
36309: LD_ADDR_VAR 0 12
36313: PUSH
36314: DOUBLE
36315: LD_VAR 0 8
36319: DEC
36320: ST_TO_ADDR
36321: LD_VAR 0 10
36325: PUSH
36326: FOR_TO
36327: IFFALSE 36420
// begin if not ValidHex ( _x , _y ) then
36329: LD_VAR 0 11
36333: PPUSH
36334: LD_VAR 0 12
36338: PPUSH
36339: CALL_OW 488
36343: NOT
36344: IFFALSE 36348
// continue ;
36346: GO 36326
// if IsEnvironment ( _x , _y ) and IsEnvironmentDestroyable ( _x , _y ) then
36348: LD_VAR 0 11
36352: PPUSH
36353: LD_VAR 0 12
36357: PPUSH
36358: CALL_OW 351
36362: PUSH
36363: LD_VAR 0 11
36367: PPUSH
36368: LD_VAR 0 12
36372: PPUSH
36373: CALL_OW 554
36377: AND
36378: IFFALSE 36418
// list := Insert ( list , list + 1 , [ _x , _y ] ) ;
36380: LD_ADDR_VAR 0 13
36384: PUSH
36385: LD_VAR 0 13
36389: PPUSH
36390: LD_VAR 0 13
36394: PUSH
36395: LD_INT 1
36397: PLUS
36398: PPUSH
36399: LD_VAR 0 11
36403: PUSH
36404: LD_VAR 0 12
36408: PUSH
36409: EMPTY
36410: LIST
36411: LIST
36412: PPUSH
36413: CALL_OW 2
36417: ST_TO_ADDR
// end ;
36418: GO 36326
36420: POP
36421: POP
36422: GO 36306
36424: POP
36425: POP
// if not list then
36426: LD_VAR 0 13
36430: NOT
36431: IFFALSE 36435
// exit ;
36433: GO 36506
// for i in list do
36435: LD_ADDR_VAR 0 6
36439: PUSH
36440: LD_VAR 0 13
36444: PUSH
36445: FOR_IN
36446: IFFALSE 36504
// AddTaskList ( bulldozer , [ [ M , i [ 1 ] , i [ 2 ] , 0 , 0 , 0 , 0 ] ] ) ;
36448: LD_VAR 0 1
36452: PPUSH
36453: LD_STRING M
36455: PUSH
36456: LD_VAR 0 6
36460: PUSH
36461: LD_INT 1
36463: ARRAY
36464: PUSH
36465: LD_VAR 0 6
36469: PUSH
36470: LD_INT 2
36472: ARRAY
36473: PUSH
36474: LD_INT 0
36476: PUSH
36477: LD_INT 0
36479: PUSH
36480: LD_INT 0
36482: PUSH
36483: LD_INT 0
36485: PUSH
36486: EMPTY
36487: LIST
36488: LIST
36489: LIST
36490: LIST
36491: LIST
36492: LIST
36493: LIST
36494: PUSH
36495: EMPTY
36496: LIST
36497: PPUSH
36498: CALL_OW 447
36502: GO 36445
36504: POP
36505: POP
// end ;
36506: LD_VAR 0 5
36510: RET
