// starting begin ResetFog ;
   0: CALL_OW 335
// AnimateTrees ( true ) ;
   4: LD_INT 1
   6: PPUSH
   7: CALL_OW 573
// InitVariables ;
  11: CALL 123 0 0
// PrepareNature ;
  15: CALL 30542 0 0
// PrepareAlliance ;
  19: CALL 337 0 0
// PrepareFriends ;
  23: CALL 3603 0 0
// PrepareAmerican ;
  27: CALL 774 0 0
// PlaceSeeing ( 91 , 70 , 7 , - 32178 ) ;
  31: LD_INT 91
  33: PPUSH
  34: LD_INT 70
  36: PPUSH
  37: LD_INT 7
  39: PPUSH
  40: LD_INT 32178
  42: NEG
  43: PPUSH
  44: CALL_OW 330
// RemoveSeeing ( 91 , 70 , 7 ) ;
  48: LD_INT 91
  50: PPUSH
  51: LD_INT 70
  53: PPUSH
  54: LD_INT 7
  56: PPUSH
  57: CALL_OW 331
// if debug then
  61: LD_EXP 1
  65: IFFALSE 106
// begin SetAttitude ( 1 , 7 , att_enemy , true ) ;
  67: LD_INT 1
  69: PPUSH
  70: LD_INT 7
  72: PPUSH
  73: LD_INT 2
  75: PPUSH
  76: LD_INT 1
  78: PPUSH
  79: CALL_OW 80
// RemoveUnit ( Powell ) ;
  83: LD_EXP 16
  87: PPUSH
  88: CALL_OW 64
// DoNotAttack ( 1 , JMM ) ;
  92: LD_INT 1
  94: PPUSH
  95: LD_EXP 14
  99: PPUSH
 100: CALL_OW 471
// end else
 104: GO 110
// Action ;
 106: CALL 30878 0 0
// PreparePatrol ;
 110: CALL 1239 0 0
// game := true ;
 114: LD_ADDR_EXP 2
 118: PUSH
 119: LD_INT 1
 121: ST_TO_ADDR
// end ;
 122: END
// export debug , game , selected , friends , reached_lab , can_escape , on_hill , friends_kill_counter , team_kill_counter , gamma_commander , extra_patrol , invis_used , alert ; export function InitVariables ; begin
 123: LD_INT 0
 125: PPUSH
// debug := 0 ;
 126: LD_ADDR_EXP 1
 130: PUSH
 131: LD_INT 0
 133: ST_TO_ADDR
// friends := [ ] ;
 134: LD_ADDR_EXP 4
 138: PUSH
 139: EMPTY
 140: ST_TO_ADDR
// selected := [ ] ;
 141: LD_ADDR_EXP 3
 145: PUSH
 146: EMPTY
 147: ST_TO_ADDR
// reached_lab := false ;
 148: LD_ADDR_EXP 5
 152: PUSH
 153: LD_INT 0
 155: ST_TO_ADDR
// can_escape := false ;
 156: LD_ADDR_EXP 6
 160: PUSH
 161: LD_INT 0
 163: ST_TO_ADDR
// game := false ;
 164: LD_ADDR_EXP 2
 168: PUSH
 169: LD_INT 0
 171: ST_TO_ADDR
// gamma_commander := LoadVariable ( GammaCommander , 2 ) ;
 172: LD_ADDR_EXP 10
 176: PUSH
 177: LD_STRING GammaCommander
 179: PPUSH
 180: LD_INT 2
 182: PPUSH
 183: CALL_OW 30
 187: ST_TO_ADDR
// friends_kill_counter := 0 ;
 188: LD_ADDR_EXP 8
 192: PUSH
 193: LD_INT 0
 195: ST_TO_ADDR
// team_kill_counter := 0 ;
 196: LD_ADDR_EXP 9
 200: PUSH
 201: LD_INT 0
 203: ST_TO_ADDR
// extra_patrol := true ;
 204: LD_ADDR_EXP 11
 208: PUSH
 209: LD_INT 1
 211: ST_TO_ADDR
// on_hill := false ;
 212: LD_ADDR_EXP 7
 216: PUSH
 217: LD_INT 0
 219: ST_TO_ADDR
// invis_used := false ;
 220: LD_ADDR_EXP 12
 224: PUSH
 225: LD_INT 0
 227: ST_TO_ADDR
// alert := false ;
 228: LD_ADDR_EXP 13
 232: PUSH
 233: LD_INT 0
 235: ST_TO_ADDR
// end ;
 236: LD_VAR 0 1
 240: RET
// every 0 0$1 trigger on_hill do
 241: LD_EXP 7
 245: IFFALSE 257
 247: GO 249
 249: DISABLE
// SetAchievement ( ACH_EYE ) ;
 250: LD_STRING ACH_EYE
 252: PPUSH
 253: CALL_OW 543
 257: END
// every 0 0$1 trigger not invis_used do var i ;
 258: LD_EXP 12
 262: NOT
 263: IFFALSE 334
 265: GO 267
 267: DISABLE
 268: LD_INT 0
 270: PPUSH
// begin enable ;
 271: ENABLE
// for i in FilterAllUnits ( [ [ f_side , 7 ] , [ f_type , unit_human ] ] ) do
 272: LD_ADDR_VAR 0 1
 276: PUSH
 277: LD_INT 22
 279: PUSH
 280: LD_INT 7
 282: PUSH
 283: EMPTY
 284: LIST
 285: LIST
 286: PUSH
 287: LD_INT 21
 289: PUSH
 290: LD_INT 1
 292: PUSH
 293: EMPTY
 294: LIST
 295: LIST
 296: PUSH
 297: EMPTY
 298: LIST
 299: LIST
 300: PPUSH
 301: CALL_OW 69
 305: PUSH
 306: FOR_IN
 307: IFFALSE 332
// if IsInvisible ( i ) then
 309: LD_VAR 0 1
 313: PPUSH
 314: CALL_OW 571
 318: IFFALSE 330
// begin invis_used := true ;
 320: LD_ADDR_EXP 12
 324: PUSH
 325: LD_INT 1
 327: ST_TO_ADDR
// break ;
 328: GO 332
// end ;
 330: GO 306
 332: POP
 333: POP
// end ; end_of_file
 334: PPOPN 1
 336: END
// export JMM , Roth ; export function PrepareAlliance ; var cargo ; begin
 337: LD_INT 0
 339: PPUSH
 340: PPUSH
// uc_side := 7 ;
 341: LD_ADDR_OWVAR 20
 345: PUSH
 346: LD_INT 7
 348: ST_TO_ADDR
// uc_nation := 1 ;
 349: LD_ADDR_OWVAR 21
 353: PUSH
 354: LD_INT 1
 356: ST_TO_ADDR
// JMM := PrepareUnit ( JMM , ( not debug ) , 11_ ) ;
 357: LD_ADDR_EXP 14
 361: PUSH
 362: LD_STRING JMM
 364: PPUSH
 365: LD_EXP 1
 369: NOT
 370: PPUSH
 371: LD_STRING 11_
 373: PPUSH
 374: CALL 5966 0 3
 378: ST_TO_ADDR
// uc_side := 4 ;
 379: LD_ADDR_OWVAR 20
 383: PUSH
 384: LD_INT 4
 386: ST_TO_ADDR
// Roth := NewCharacter ( Roth ) ;
 387: LD_ADDR_EXP 15
 391: PUSH
 392: LD_STRING Roth
 394: PPUSH
 395: CALL_OW 25
 399: ST_TO_ADDR
// SetDir ( JMM , 1 ) ;
 400: LD_EXP 14
 404: PPUSH
 405: LD_INT 1
 407: PPUSH
 408: CALL_OW 233
// SetClass ( JMM , 1 ) ;
 412: LD_EXP 14
 416: PPUSH
 417: LD_INT 1
 419: PPUSH
 420: CALL_OW 336
// PlaceUnitXY ( JMM , 105 , 10 , false ) ;
 424: LD_EXP 14
 428: PPUSH
 429: LD_INT 105
 431: PPUSH
 432: LD_INT 10
 434: PPUSH
 435: LD_INT 0
 437: PPUSH
 438: CALL_OW 48
// SetDir ( Roth , 4 ) ;
 442: LD_EXP 15
 446: PPUSH
 447: LD_INT 4
 449: PPUSH
 450: CALL_OW 233
// PlaceUnitXY ( Roth , 109 , 10 , false ) ;
 454: LD_EXP 15
 458: PPUSH
 459: LD_INT 109
 461: PPUSH
 462: LD_INT 10
 464: PPUSH
 465: LD_INT 0
 467: PPUSH
 468: CALL_OW 48
// ComTurnUnit ( JMM , Roth ) ;
 472: LD_EXP 14
 476: PPUSH
 477: LD_EXP 15
 481: PPUSH
 482: CALL_OW 119
// ComTurnUnit ( Roth , JMM ) ;
 486: LD_EXP 15
 490: PPUSH
 491: LD_EXP 14
 495: PPUSH
 496: CALL_OW 119
// PrepareVehicle ( us_medium_tracked , engine_siberite , control_computer , us_cargo_bay , 100 ) ;
 500: LD_INT 3
 502: PPUSH
 503: LD_INT 3
 505: PPUSH
 506: LD_INT 3
 508: PPUSH
 509: LD_INT 12
 511: PPUSH
 512: LD_INT 100
 514: PPUSH
 515: CALL 6029 0 5
// cargo := CreateVehicle ;
 519: LD_ADDR_VAR 0 2
 523: PUSH
 524: CALL_OW 45
 528: ST_TO_ADDR
// SetDir ( cargo , 1 ) ;
 529: LD_VAR 0 2
 533: PPUSH
 534: LD_INT 1
 536: PPUSH
 537: CALL_OW 233
// PlaceUnitXY ( cargo , 179 , 45 , false ) ;
 541: LD_VAR 0 2
 545: PPUSH
 546: LD_INT 179
 548: PPUSH
 549: LD_INT 45
 551: PPUSH
 552: LD_INT 0
 554: PPUSH
 555: CALL_OW 48
// SetCargo ( cargo , mat_artifact , 30 ) ;
 559: LD_VAR 0 2
 563: PPUSH
 564: LD_INT 4
 566: PPUSH
 567: LD_INT 30
 569: PPUSH
 570: CALL_OW 290
// if LoadVariable ( 11_artifact_captured , 0 ) then
 574: LD_STRING 11_artifact_captured
 576: PPUSH
 577: LD_INT 0
 579: PPUSH
 580: CALL_OW 30
 584: IFFALSE 641
// begin cargo := CreateVehicle ;
 586: LD_ADDR_VAR 0 2
 590: PUSH
 591: CALL_OW 45
 595: ST_TO_ADDR
// SetDir ( cargo , 0 ) ;
 596: LD_VAR 0 2
 600: PPUSH
 601: LD_INT 0
 603: PPUSH
 604: CALL_OW 233
// PlaceUnitXY ( cargo , 171 , 85 , false ) ;
 608: LD_VAR 0 2
 612: PPUSH
 613: LD_INT 171
 615: PPUSH
 616: LD_INT 85
 618: PPUSH
 619: LD_INT 0
 621: PPUSH
 622: CALL_OW 48
// SetCargo ( cargo , mat_artifact , 50 ) ;
 626: LD_VAR 0 2
 630: PPUSH
 631: LD_INT 4
 633: PPUSH
 634: LD_INT 50
 636: PPUSH
 637: CALL_OW 290
// end ; SetSide ( amlab , 7 ) ;
 641: LD_INT 47
 643: PPUSH
 644: LD_INT 7
 646: PPUSH
 647: CALL_OW 235
// DoNotAttack ( 1 , amlab ) ;
 651: LD_INT 1
 653: PPUSH
 654: LD_INT 47
 656: PPUSH
 657: CALL_OW 471
// end ;
 661: LD_VAR 0 1
 665: RET
// every 0 0$1 trigger FilterUnitsInArea ( hill , [ f_side , 7 ] ) and not on_hill do
 666: LD_INT 38
 668: PPUSH
 669: LD_INT 22
 671: PUSH
 672: LD_INT 7
 674: PUSH
 675: EMPTY
 676: LIST
 677: LIST
 678: PPUSH
 679: CALL_OW 70
 683: PUSH
 684: LD_EXP 7
 688: NOT
 689: AND
 690: IFFALSE 721
 692: GO 694
 694: DISABLE
// begin enable ;
 695: ENABLE
// on_hill := true ;
 696: LD_ADDR_EXP 7
 700: PUSH
 701: LD_INT 1
 703: ST_TO_ADDR
// PlaceSeeing ( 126 , 13 , 7 , - 90 ) ;
 704: LD_INT 126
 706: PPUSH
 707: LD_INT 13
 709: PPUSH
 710: LD_INT 7
 712: PPUSH
 713: LD_INT 90
 715: NEG
 716: PPUSH
 717: CALL_OW 330
// end ;
 721: END
// every 0 0$1 trigger not FilterUnitsInArea ( hill , [ f_side , 7 ] ) and on_hill do
 722: LD_INT 38
 724: PPUSH
 725: LD_INT 22
 727: PUSH
 728: LD_INT 7
 730: PUSH
 731: EMPTY
 732: LIST
 733: LIST
 734: PPUSH
 735: CALL_OW 70
 739: NOT
 740: PUSH
 741: LD_EXP 7
 745: AND
 746: IFFALSE 773
 748: GO 750
 750: DISABLE
// begin enable ;
 751: ENABLE
// on_hill := false ;
 752: LD_ADDR_EXP 7
 756: PUSH
 757: LD_INT 0
 759: ST_TO_ADDR
// RemoveSeeing ( 126 , 13 , 7 ) ;
 760: LD_INT 126
 762: PPUSH
 763: LD_INT 13
 765: PPUSH
 766: LD_INT 7
 768: PPUSH
 769: CALL_OW 331
// end ; end_of_file
 773: END
// export Powell , mobile_patrol , mobile_points , powell_guards , defenders , defcon , defcon_wave ; export function PrepareAmerican ; var i , j , b , un , tmp ; begin
 774: LD_INT 0
 776: PPUSH
 777: PPUSH
 778: PPUSH
 779: PPUSH
 780: PPUSH
 781: PPUSH
// if Difficulty = 1 then
 782: LD_OWVAR 67
 786: PUSH
 787: LD_INT 1
 789: EQUAL
 790: IFFALSE 898
// begin tmp := [ [ 155 , 77 ] , [ 193 , 93 ] , [ 188 , 81 ] , [ 56 , 85 ] , [ 98 , 87 ] ] ;
 792: LD_ADDR_VAR 0 6
 796: PUSH
 797: LD_INT 155
 799: PUSH
 800: LD_INT 77
 802: PUSH
 803: EMPTY
 804: LIST
 805: LIST
 806: PUSH
 807: LD_INT 193
 809: PUSH
 810: LD_INT 93
 812: PUSH
 813: EMPTY
 814: LIST
 815: LIST
 816: PUSH
 817: LD_INT 188
 819: PUSH
 820: LD_INT 81
 822: PUSH
 823: EMPTY
 824: LIST
 825: LIST
 826: PUSH
 827: LD_INT 56
 829: PUSH
 830: LD_INT 85
 832: PUSH
 833: EMPTY
 834: LIST
 835: LIST
 836: PUSH
 837: LD_INT 98
 839: PUSH
 840: LD_INT 87
 842: PUSH
 843: EMPTY
 844: LIST
 845: LIST
 846: PUSH
 847: EMPTY
 848: LIST
 849: LIST
 850: LIST
 851: LIST
 852: LIST
 853: ST_TO_ADDR
// for i in tmp do
 854: LD_ADDR_VAR 0 2
 858: PUSH
 859: LD_VAR 0 6
 863: PUSH
 864: FOR_IN
 865: IFFALSE 896
// RemoveUnit ( HexInfo ( i [ 1 ] , i [ 2 ] ) ) ;
 867: LD_VAR 0 2
 871: PUSH
 872: LD_INT 1
 874: ARRAY
 875: PPUSH
 876: LD_VAR 0 2
 880: PUSH
 881: LD_INT 2
 883: ARRAY
 884: PPUSH
 885: CALL_OW 428
 889: PPUSH
 890: CALL_OW 64
 894: GO 864
 896: POP
 897: POP
// end ; defcon := 0 ;
 898: LD_ADDR_EXP 21
 902: PUSH
 903: LD_INT 0
 905: ST_TO_ADDR
// defcon_wave := 0 ;
 906: LD_ADDR_EXP 22
 910: PUSH
 911: LD_INT 0
 913: ST_TO_ADDR
// defenders := [ ] ;
 914: LD_ADDR_EXP 20
 918: PUSH
 919: EMPTY
 920: ST_TO_ADDR
// SetBName ( alfa , alpha ) ;
 921: LD_INT 5
 923: PPUSH
 924: LD_STRING alpha
 926: PPUSH
 927: CALL_OW 500
// uc_side := 1 ;
 931: LD_ADDR_OWVAR 20
 935: PUSH
 936: LD_INT 1
 938: ST_TO_ADDR
// uc_nation := 1 ;
 939: LD_ADDR_OWVAR 21
 943: PUSH
 944: LD_INT 1
 946: ST_TO_ADDR
// Powell := NewCharacter ( Powell ) ;
 947: LD_ADDR_EXP 16
 951: PUSH
 952: LD_STRING Powell
 954: PPUSH
 955: CALL_OW 25
 959: ST_TO_ADDR
// PlaceUnitXY ( Powell , 110 , 26 , false ) ;
 960: LD_EXP 16
 964: PPUSH
 965: LD_INT 110
 967: PPUSH
 968: LD_INT 26
 970: PPUSH
 971: LD_INT 0
 973: PPUSH
 974: CALL_OW 48
// ComHold ( Powell ) ;
 978: LD_EXP 16
 982: PPUSH
 983: CALL_OW 140
// for i = 1 to 5 do
 987: LD_ADDR_VAR 0 2
 991: PUSH
 992: DOUBLE
 993: LD_INT 1
 995: DEC
 996: ST_TO_ADDR
 997: LD_INT 5
 999: PUSH
1000: FOR_TO
1001: IFFALSE 1057
// begin PrepareHuman ( false , 1 , 10 ) ;
1003: LD_INT 0
1005: PPUSH
1006: LD_INT 1
1008: PPUSH
1009: LD_INT 10
1011: PPUSH
1012: CALL_OW 380
// powell_guards := Insert ( powell_guards , 1 , CreateHuman ) ;
1016: LD_ADDR_EXP 19
1020: PUSH
1021: LD_EXP 19
1025: PPUSH
1026: LD_INT 1
1028: PPUSH
1029: CALL_OW 44
1033: PPUSH
1034: CALL_OW 2
1038: ST_TO_ADDR
// PlaceHumanInUnit ( powell_guards [ 1 ] , ambar0 ) ;
1039: LD_EXP 19
1043: PUSH
1044: LD_INT 1
1046: ARRAY
1047: PPUSH
1048: LD_INT 18
1050: PPUSH
1051: CALL_OW 52
// end ;
1055: GO 1000
1057: POP
1058: POP
// if Difficulty > 2 then
1059: LD_OWVAR 67
1063: PUSH
1064: LD_INT 2
1066: GREATER
1067: IFFALSE 1116
// begin bc_type := b_turret ;
1069: LD_ADDR_OWVAR 42
1073: PUSH
1074: LD_INT 33
1076: ST_TO_ADDR
// bc_level := 7 ;
1077: LD_ADDR_OWVAR 43
1081: PUSH
1082: LD_INT 7
1084: ST_TO_ADDR
// b := CreateAndPlaceBuildingXYD ( 107 , 55 , 5 ) ;
1085: LD_ADDR_VAR 0 4
1089: PUSH
1090: LD_INT 107
1092: PPUSH
1093: LD_INT 55
1095: PPUSH
1096: LD_INT 5
1098: PPUSH
1099: CALL_OW 47
1103: ST_TO_ADDR
// PlaceWeaponTurret ( b , us_rocket_launcher ) ;
1104: LD_VAR 0 4
1108: PPUSH
1109: LD_INT 7
1111: PPUSH
1112: CALL_OW 431
// end ; for i in FilterAllUnits ( [ [ f_side , 1 ] , [ f_btype , b_factory ] ] ) ^ FilterAllUnits ( [ [ f_side , 1 ] , [ f_btype , b_control_tower ] ] ) do
1116: LD_ADDR_VAR 0 2
1120: PUSH
1121: LD_INT 22
1123: PUSH
1124: LD_INT 1
1126: PUSH
1127: EMPTY
1128: LIST
1129: LIST
1130: PUSH
1131: LD_INT 30
1133: PUSH
1134: LD_INT 3
1136: PUSH
1137: EMPTY
1138: LIST
1139: LIST
1140: PUSH
1141: EMPTY
1142: LIST
1143: LIST
1144: PPUSH
1145: CALL_OW 69
1149: PUSH
1150: LD_INT 22
1152: PUSH
1153: LD_INT 1
1155: PUSH
1156: EMPTY
1157: LIST
1158: LIST
1159: PUSH
1160: LD_INT 30
1162: PUSH
1163: LD_INT 36
1165: PUSH
1166: EMPTY
1167: LIST
1168: LIST
1169: PUSH
1170: EMPTY
1171: LIST
1172: LIST
1173: PPUSH
1174: CALL_OW 69
1178: ADD
1179: PUSH
1180: FOR_IN
1181: IFFALSE 1232
// for j = 1 to 3 do
1183: LD_ADDR_VAR 0 3
1187: PUSH
1188: DOUBLE
1189: LD_INT 1
1191: DEC
1192: ST_TO_ADDR
1193: LD_INT 3
1195: PUSH
1196: FOR_TO
1197: IFFALSE 1228
// begin PrepareHuman ( false , 3 , 6 ) ;
1199: LD_INT 0
1201: PPUSH
1202: LD_INT 3
1204: PPUSH
1205: LD_INT 6
1207: PPUSH
1208: CALL_OW 380
// PlaceHumanInUnit ( CreateHuman , i ) ;
1212: CALL_OW 44
1216: PPUSH
1217: LD_VAR 0 2
1221: PPUSH
1222: CALL_OW 52
// end ;
1226: GO 1196
1228: POP
1229: POP
1230: GO 1180
1232: POP
1233: POP
// end ;
1234: LD_VAR 0 1
1238: RET
// export function PreparePatrol ; var i , un ; begin
1239: LD_INT 0
1241: PPUSH
1242: PPUSH
1243: PPUSH
// uc_side := 1 ;
1244: LD_ADDR_OWVAR 20
1248: PUSH
1249: LD_INT 1
1251: ST_TO_ADDR
// uc_nation := 1 ;
1252: LD_ADDR_OWVAR 21
1256: PUSH
1257: LD_INT 1
1259: ST_TO_ADDR
// mobile_points := [ [ [ 99 , 55 ] , [ 113 , 67 ] , [ 129 , 68 ] , [ 135 , 62 ] , [ 103 , 41 ] ] , [ [ 27 , 49 ] , [ 46 , 49 ] , [ 87 , 70 ] , [ 99 , 79 ] , [ 118 , 111 ] , [ 99 , 79 ] , [ 87 , 70 ] , [ 46 , 49 ] ] , [ [ 200 , 88 ] , [ 175 , 80 ] , [ 135 , 62 ] , [ 117 , 53 ] , [ 103 , 41 ] , [ 99 , 24 ] , [ 85 , 3 ] , [ 99 , 24 ] , [ 103 , 41 ] , [ 98 , 47 ] , [ 99 , 56 ] , [ 96 , 66 ] , [ 99 , 56 ] , [ 112 , 66 ] , [ 129 , 68 ] , [ 135 , 62 ] , [ 156 , 71 ] , [ 168 , 76 ] , [ 168 , 61 ] , [ 168 , 75 ] , [ 185 , 85 ] ] ] ;
1260: LD_ADDR_EXP 18
1264: PUSH
1265: LD_INT 99
1267: PUSH
1268: LD_INT 55
1270: PUSH
1271: EMPTY
1272: LIST
1273: LIST
1274: PUSH
1275: LD_INT 113
1277: PUSH
1278: LD_INT 67
1280: PUSH
1281: EMPTY
1282: LIST
1283: LIST
1284: PUSH
1285: LD_INT 129
1287: PUSH
1288: LD_INT 68
1290: PUSH
1291: EMPTY
1292: LIST
1293: LIST
1294: PUSH
1295: LD_INT 135
1297: PUSH
1298: LD_INT 62
1300: PUSH
1301: EMPTY
1302: LIST
1303: LIST
1304: PUSH
1305: LD_INT 103
1307: PUSH
1308: LD_INT 41
1310: PUSH
1311: EMPTY
1312: LIST
1313: LIST
1314: PUSH
1315: EMPTY
1316: LIST
1317: LIST
1318: LIST
1319: LIST
1320: LIST
1321: PUSH
1322: LD_INT 27
1324: PUSH
1325: LD_INT 49
1327: PUSH
1328: EMPTY
1329: LIST
1330: LIST
1331: PUSH
1332: LD_INT 46
1334: PUSH
1335: LD_INT 49
1337: PUSH
1338: EMPTY
1339: LIST
1340: LIST
1341: PUSH
1342: LD_INT 87
1344: PUSH
1345: LD_INT 70
1347: PUSH
1348: EMPTY
1349: LIST
1350: LIST
1351: PUSH
1352: LD_INT 99
1354: PUSH
1355: LD_INT 79
1357: PUSH
1358: EMPTY
1359: LIST
1360: LIST
1361: PUSH
1362: LD_INT 118
1364: PUSH
1365: LD_INT 111
1367: PUSH
1368: EMPTY
1369: LIST
1370: LIST
1371: PUSH
1372: LD_INT 99
1374: PUSH
1375: LD_INT 79
1377: PUSH
1378: EMPTY
1379: LIST
1380: LIST
1381: PUSH
1382: LD_INT 87
1384: PUSH
1385: LD_INT 70
1387: PUSH
1388: EMPTY
1389: LIST
1390: LIST
1391: PUSH
1392: LD_INT 46
1394: PUSH
1395: LD_INT 49
1397: PUSH
1398: EMPTY
1399: LIST
1400: LIST
1401: PUSH
1402: EMPTY
1403: LIST
1404: LIST
1405: LIST
1406: LIST
1407: LIST
1408: LIST
1409: LIST
1410: LIST
1411: PUSH
1412: LD_INT 200
1414: PUSH
1415: LD_INT 88
1417: PUSH
1418: EMPTY
1419: LIST
1420: LIST
1421: PUSH
1422: LD_INT 175
1424: PUSH
1425: LD_INT 80
1427: PUSH
1428: EMPTY
1429: LIST
1430: LIST
1431: PUSH
1432: LD_INT 135
1434: PUSH
1435: LD_INT 62
1437: PUSH
1438: EMPTY
1439: LIST
1440: LIST
1441: PUSH
1442: LD_INT 117
1444: PUSH
1445: LD_INT 53
1447: PUSH
1448: EMPTY
1449: LIST
1450: LIST
1451: PUSH
1452: LD_INT 103
1454: PUSH
1455: LD_INT 41
1457: PUSH
1458: EMPTY
1459: LIST
1460: LIST
1461: PUSH
1462: LD_INT 99
1464: PUSH
1465: LD_INT 24
1467: PUSH
1468: EMPTY
1469: LIST
1470: LIST
1471: PUSH
1472: LD_INT 85
1474: PUSH
1475: LD_INT 3
1477: PUSH
1478: EMPTY
1479: LIST
1480: LIST
1481: PUSH
1482: LD_INT 99
1484: PUSH
1485: LD_INT 24
1487: PUSH
1488: EMPTY
1489: LIST
1490: LIST
1491: PUSH
1492: LD_INT 103
1494: PUSH
1495: LD_INT 41
1497: PUSH
1498: EMPTY
1499: LIST
1500: LIST
1501: PUSH
1502: LD_INT 98
1504: PUSH
1505: LD_INT 47
1507: PUSH
1508: EMPTY
1509: LIST
1510: LIST
1511: PUSH
1512: LD_INT 99
1514: PUSH
1515: LD_INT 56
1517: PUSH
1518: EMPTY
1519: LIST
1520: LIST
1521: PUSH
1522: LD_INT 96
1524: PUSH
1525: LD_INT 66
1527: PUSH
1528: EMPTY
1529: LIST
1530: LIST
1531: PUSH
1532: LD_INT 99
1534: PUSH
1535: LD_INT 56
1537: PUSH
1538: EMPTY
1539: LIST
1540: LIST
1541: PUSH
1542: LD_INT 112
1544: PUSH
1545: LD_INT 66
1547: PUSH
1548: EMPTY
1549: LIST
1550: LIST
1551: PUSH
1552: LD_INT 129
1554: PUSH
1555: LD_INT 68
1557: PUSH
1558: EMPTY
1559: LIST
1560: LIST
1561: PUSH
1562: LD_INT 135
1564: PUSH
1565: LD_INT 62
1567: PUSH
1568: EMPTY
1569: LIST
1570: LIST
1571: PUSH
1572: LD_INT 156
1574: PUSH
1575: LD_INT 71
1577: PUSH
1578: EMPTY
1579: LIST
1580: LIST
1581: PUSH
1582: LD_INT 168
1584: PUSH
1585: LD_INT 76
1587: PUSH
1588: EMPTY
1589: LIST
1590: LIST
1591: PUSH
1592: LD_INT 168
1594: PUSH
1595: LD_INT 61
1597: PUSH
1598: EMPTY
1599: LIST
1600: LIST
1601: PUSH
1602: LD_INT 168
1604: PUSH
1605: LD_INT 75
1607: PUSH
1608: EMPTY
1609: LIST
1610: LIST
1611: PUSH
1612: LD_INT 185
1614: PUSH
1615: LD_INT 85
1617: PUSH
1618: EMPTY
1619: LIST
1620: LIST
1621: PUSH
1622: EMPTY
1623: LIST
1624: LIST
1625: LIST
1626: LIST
1627: LIST
1628: LIST
1629: LIST
1630: LIST
1631: LIST
1632: LIST
1633: LIST
1634: LIST
1635: LIST
1636: LIST
1637: LIST
1638: LIST
1639: LIST
1640: LIST
1641: LIST
1642: LIST
1643: LIST
1644: PUSH
1645: EMPTY
1646: LIST
1647: LIST
1648: LIST
1649: ST_TO_ADDR
// mobile_patrol := [ ] ;
1650: LD_ADDR_EXP 17
1654: PUSH
1655: EMPTY
1656: ST_TO_ADDR
// PrepareVehicle ( us_medium_tracked , engine_combustion , control_computer , us_gatling_gun , 100 ) ;
1657: LD_INT 3
1659: PPUSH
1660: LD_INT 1
1662: PPUSH
1663: LD_INT 3
1665: PPUSH
1666: LD_INT 4
1668: PPUSH
1669: LD_INT 100
1671: PPUSH
1672: CALL 6029 0 5
// mobile_patrol := Insert ( mobile_patrol , 1 , CreateVehicle ) ;
1676: LD_ADDR_EXP 17
1680: PUSH
1681: LD_EXP 17
1685: PPUSH
1686: LD_INT 1
1688: PPUSH
1689: CALL_OW 45
1693: PPUSH
1694: CALL_OW 2
1698: ST_TO_ADDR
// PlaceUnitXY ( mobile_patrol [ 1 ] , 99 , 55 , false ) ;
1699: LD_EXP 17
1703: PUSH
1704: LD_INT 1
1706: ARRAY
1707: PPUSH
1708: LD_INT 99
1710: PPUSH
1711: LD_INT 55
1713: PPUSH
1714: LD_INT 0
1716: PPUSH
1717: CALL_OW 48
// PrepareVehicle ( us_medium_wheeled , engine_combustion , control_computer , us_gatling_gun , 100 ) ;
1721: LD_INT 2
1723: PPUSH
1724: LD_INT 1
1726: PPUSH
1727: LD_INT 3
1729: PPUSH
1730: LD_INT 4
1732: PPUSH
1733: LD_INT 100
1735: PPUSH
1736: CALL 6029 0 5
// mobile_patrol := Insert ( mobile_patrol , 2 , CreateVehicle ) ;
1740: LD_ADDR_EXP 17
1744: PUSH
1745: LD_EXP 17
1749: PPUSH
1750: LD_INT 2
1752: PPUSH
1753: CALL_OW 45
1757: PPUSH
1758: CALL_OW 2
1762: ST_TO_ADDR
// PlaceUnitXY ( mobile_patrol [ 2 ] , 27 , 49 , false ) ;
1763: LD_EXP 17
1767: PUSH
1768: LD_INT 2
1770: ARRAY
1771: PPUSH
1772: LD_INT 27
1774: PPUSH
1775: LD_INT 49
1777: PPUSH
1778: LD_INT 0
1780: PPUSH
1781: CALL_OW 48
// PrepareVehicle ( us_medium_tracked , engine_combustion , control_computer , [ us_laser , us_rocket_launcher , us_rocket_launcher ] [ Difficulty ] , 100 ) ;
1785: LD_INT 3
1787: PPUSH
1788: LD_INT 1
1790: PPUSH
1791: LD_INT 3
1793: PPUSH
1794: LD_INT 9
1796: PUSH
1797: LD_INT 7
1799: PUSH
1800: LD_INT 7
1802: PUSH
1803: EMPTY
1804: LIST
1805: LIST
1806: LIST
1807: PUSH
1808: LD_OWVAR 67
1812: ARRAY
1813: PPUSH
1814: LD_INT 100
1816: PPUSH
1817: CALL 6029 0 5
// mobile_patrol := Insert ( mobile_patrol , 3 , CreateVehicle ) ;
1821: LD_ADDR_EXP 17
1825: PUSH
1826: LD_EXP 17
1830: PPUSH
1831: LD_INT 3
1833: PPUSH
1834: CALL_OW 45
1838: PPUSH
1839: CALL_OW 2
1843: ST_TO_ADDR
// PlaceUnitXY ( mobile_patrol [ 3 ] , 200 , 88 , false ) ;
1844: LD_EXP 17
1848: PUSH
1849: LD_INT 3
1851: ARRAY
1852: PPUSH
1853: LD_INT 200
1855: PPUSH
1856: LD_INT 88
1858: PPUSH
1859: LD_INT 0
1861: PPUSH
1862: CALL_OW 48
// for i = mobile_patrol downto 1 do
1866: LD_ADDR_VAR 0 2
1870: PUSH
1871: DOUBLE
1872: LD_EXP 17
1876: INC
1877: ST_TO_ADDR
1878: LD_INT 1
1880: PUSH
1881: FOR_DOWNTO
1882: IFFALSE 1893
// RaiseSailEvent ( 1 ) ;
1884: LD_INT 1
1886: PPUSH
1887: CALL_OW 427
1891: GO 1881
1893: POP
1894: POP
// end ;
1895: LD_VAR 0 1
1899: RET
// export function SpawnCargo ( ) ; var i , c , k , areas , road , tmp , veh ; begin
1900: LD_INT 0
1902: PPUSH
1903: PPUSH
1904: PPUSH
1905: PPUSH
1906: PPUSH
1907: PPUSH
1908: PPUSH
1909: PPUSH
// areas := [ [ road_east , 4 ] , [ road_south , 5 ] , [ road_west , 1 ] ] ;
1910: LD_ADDR_VAR 0 5
1914: PUSH
1915: LD_INT 20
1917: PUSH
1918: LD_INT 4
1920: PUSH
1921: EMPTY
1922: LIST
1923: LIST
1924: PUSH
1925: LD_INT 21
1927: PUSH
1928: LD_INT 5
1930: PUSH
1931: EMPTY
1932: LIST
1933: LIST
1934: PUSH
1935: LD_INT 22
1937: PUSH
1938: LD_INT 1
1940: PUSH
1941: EMPTY
1942: LIST
1943: LIST
1944: PUSH
1945: EMPTY
1946: LIST
1947: LIST
1948: LIST
1949: ST_TO_ADDR
// road := [ [ 176 , 81 , 135 , 62 , 114 , 67 , 93 , 71 , 76 , 67 ] , [ 107 , 92 , 92 , 72 , 77 , 68 ] , [ 45 , 49 , 67 , 59 , 77 , 68 ] ] ;
1950: LD_ADDR_VAR 0 6
1954: PUSH
1955: LD_INT 176
1957: PUSH
1958: LD_INT 81
1960: PUSH
1961: LD_INT 135
1963: PUSH
1964: LD_INT 62
1966: PUSH
1967: LD_INT 114
1969: PUSH
1970: LD_INT 67
1972: PUSH
1973: LD_INT 93
1975: PUSH
1976: LD_INT 71
1978: PUSH
1979: LD_INT 76
1981: PUSH
1982: LD_INT 67
1984: PUSH
1985: EMPTY
1986: LIST
1987: LIST
1988: LIST
1989: LIST
1990: LIST
1991: LIST
1992: LIST
1993: LIST
1994: LIST
1995: LIST
1996: PUSH
1997: LD_INT 107
1999: PUSH
2000: LD_INT 92
2002: PUSH
2003: LD_INT 92
2005: PUSH
2006: LD_INT 72
2008: PUSH
2009: LD_INT 77
2011: PUSH
2012: LD_INT 68
2014: PUSH
2015: EMPTY
2016: LIST
2017: LIST
2018: LIST
2019: LIST
2020: LIST
2021: LIST
2022: PUSH
2023: LD_INT 45
2025: PUSH
2026: LD_INT 49
2028: PUSH
2029: LD_INT 67
2031: PUSH
2032: LD_INT 59
2034: PUSH
2035: LD_INT 77
2037: PUSH
2038: LD_INT 68
2040: PUSH
2041: EMPTY
2042: LIST
2043: LIST
2044: LIST
2045: LIST
2046: LIST
2047: LIST
2048: PUSH
2049: EMPTY
2050: LIST
2051: LIST
2052: LIST
2053: ST_TO_ADDR
// k := rand ( 1 , areas ) ;
2054: LD_ADDR_VAR 0 4
2058: PUSH
2059: LD_INT 1
2061: PPUSH
2062: LD_VAR 0 5
2066: PPUSH
2067: CALL_OW 12
2071: ST_TO_ADDR
// c := rand ( 1 , 2 ) ;
2072: LD_ADDR_VAR 0 3
2076: PUSH
2077: LD_INT 1
2079: PPUSH
2080: LD_INT 2
2082: PPUSH
2083: CALL_OW 12
2087: ST_TO_ADDR
// uc_side := 1 ;
2088: LD_ADDR_OWVAR 20
2092: PUSH
2093: LD_INT 1
2095: ST_TO_ADDR
// uc_nation := 1 ;
2096: LD_ADDR_OWVAR 21
2100: PUSH
2101: LD_INT 1
2103: ST_TO_ADDR
// PrepareVehicle ( us_medium_wheeled , engine_siberite , control_computer , us_cargo_bay , 100 ) ;
2104: LD_INT 2
2106: PPUSH
2107: LD_INT 3
2109: PPUSH
2110: LD_INT 3
2112: PPUSH
2113: LD_INT 12
2115: PPUSH
2116: LD_INT 100
2118: PPUSH
2119: CALL 6029 0 5
// veh := CreateVehicle ;
2123: LD_ADDR_VAR 0 8
2127: PUSH
2128: CALL_OW 45
2132: ST_TO_ADDR
// SetDir ( veh , areas [ k ] [ 2 ] ) ;
2133: LD_VAR 0 8
2137: PPUSH
2138: LD_VAR 0 5
2142: PUSH
2143: LD_VAR 0 4
2147: ARRAY
2148: PUSH
2149: LD_INT 2
2151: ARRAY
2152: PPUSH
2153: CALL_OW 233
// PlaceUnitArea ( veh , areas [ k ] [ 1 ] , false ) ;
2157: LD_VAR 0 8
2161: PPUSH
2162: LD_VAR 0 5
2166: PUSH
2167: LD_VAR 0 4
2171: ARRAY
2172: PUSH
2173: LD_INT 1
2175: ARRAY
2176: PPUSH
2177: LD_INT 0
2179: PPUSH
2180: CALL_OW 49
// SetCargo ( veh , [ mat_cans , mat_siberit ] [ c ] , 100 ) ;
2184: LD_VAR 0 8
2188: PPUSH
2189: LD_INT 1
2191: PUSH
2192: LD_INT 3
2194: PUSH
2195: EMPTY
2196: LIST
2197: LIST
2198: PUSH
2199: LD_VAR 0 3
2203: ARRAY
2204: PPUSH
2205: LD_INT 100
2207: PPUSH
2208: CALL_OW 290
// tmp := road [ k ] ;
2212: LD_ADDR_VAR 0 7
2216: PUSH
2217: LD_VAR 0 6
2221: PUSH
2222: LD_VAR 0 4
2226: ARRAY
2227: ST_TO_ADDR
// for i = 1 to tmp div 2 do
2228: LD_ADDR_VAR 0 2
2232: PUSH
2233: DOUBLE
2234: LD_INT 1
2236: DEC
2237: ST_TO_ADDR
2238: LD_VAR 0 7
2242: PUSH
2243: LD_INT 2
2245: DIV
2246: PUSH
2247: FOR_TO
2248: IFFALSE 2295
// AddComMoveXY ( veh , tmp [ i * 2 - 1 ] , tmp [ i * 2 ] ) ;
2250: LD_VAR 0 8
2254: PPUSH
2255: LD_VAR 0 7
2259: PUSH
2260: LD_VAR 0 2
2264: PUSH
2265: LD_INT 2
2267: MUL
2268: PUSH
2269: LD_INT 1
2271: MINUS
2272: ARRAY
2273: PPUSH
2274: LD_VAR 0 7
2278: PUSH
2279: LD_VAR 0 2
2283: PUSH
2284: LD_INT 2
2286: MUL
2287: ARRAY
2288: PPUSH
2289: CALL_OW 171
2293: GO 2247
2295: POP
2296: POP
// AddComGive ( veh , alfa ) ;
2297: LD_VAR 0 8
2301: PPUSH
2302: LD_INT 5
2304: PPUSH
2305: CALL_OW 221
// AddComWait ( veh , 0 0$2 ) ;
2309: LD_VAR 0 8
2313: PPUSH
2314: LD_INT 70
2316: PPUSH
2317: CALL_OW 202
// for i = tmp div 2 downto 1 do
2321: LD_ADDR_VAR 0 2
2325: PUSH
2326: DOUBLE
2327: LD_VAR 0 7
2331: PUSH
2332: LD_INT 2
2334: DIV
2335: INC
2336: ST_TO_ADDR
2337: LD_INT 1
2339: PUSH
2340: FOR_DOWNTO
2341: IFFALSE 2388
// AddComMoveXY ( veh , tmp [ i * 2 - 1 ] , tmp [ i * 2 ] ) ;
2343: LD_VAR 0 8
2347: PPUSH
2348: LD_VAR 0 7
2352: PUSH
2353: LD_VAR 0 2
2357: PUSH
2358: LD_INT 2
2360: MUL
2361: PUSH
2362: LD_INT 1
2364: MINUS
2365: ARRAY
2366: PPUSH
2367: LD_VAR 0 7
2371: PUSH
2372: LD_VAR 0 2
2376: PUSH
2377: LD_INT 2
2379: MUL
2380: ARRAY
2381: PPUSH
2382: CALL_OW 171
2386: GO 2340
2388: POP
2389: POP
// AddComMoveToArea ( veh , areas [ k ] [ 1 ] ) ;
2390: LD_VAR 0 8
2394: PPUSH
2395: LD_VAR 0 5
2399: PUSH
2400: LD_VAR 0 4
2404: ARRAY
2405: PUSH
2406: LD_INT 1
2408: ARRAY
2409: PPUSH
2410: CALL_OW 173
// repeat wait ( 0 0$1 ) ;
2414: LD_INT 35
2416: PPUSH
2417: CALL_OW 67
// until IsInArea ( veh , areas [ k ] [ 1 ] ) and GetCargo ( veh , c ) = 0 ;
2421: LD_VAR 0 8
2425: PPUSH
2426: LD_VAR 0 5
2430: PUSH
2431: LD_VAR 0 4
2435: ARRAY
2436: PUSH
2437: LD_INT 1
2439: ARRAY
2440: PPUSH
2441: CALL_OW 308
2445: PUSH
2446: LD_VAR 0 8
2450: PPUSH
2451: LD_VAR 0 3
2455: PPUSH
2456: CALL_OW 289
2460: PUSH
2461: LD_INT 0
2463: EQUAL
2464: AND
2465: IFFALSE 2414
// RemoveUnit ( veh ) ;
2467: LD_VAR 0 8
2471: PPUSH
2472: CALL_OW 64
// end ;
2476: LD_VAR 0 1
2480: RET
// every 3 3$00 do
2481: GO 2483
2483: DISABLE
// begin enable ;
2484: ENABLE
// SpawnCargo ;
2485: CALL 1900 0 0
// end ;
2489: END
// export function PrepareDefenders ; var i , tmp ; begin
2490: LD_INT 0
2492: PPUSH
2493: PPUSH
2494: PPUSH
// if defenders then
2495: LD_EXP 20
2499: IFFALSE 2503
// exit ;
2501: GO 2767
// for i = 1 to [ 4 , 5 , 6 ] [ Difficulty ] do
2503: LD_ADDR_VAR 0 2
2507: PUSH
2508: DOUBLE
2509: LD_INT 1
2511: DEC
2512: ST_TO_ADDR
2513: LD_INT 4
2515: PUSH
2516: LD_INT 5
2518: PUSH
2519: LD_INT 6
2521: PUSH
2522: EMPTY
2523: LIST
2524: LIST
2525: LIST
2526: PUSH
2527: LD_OWVAR 67
2531: ARRAY
2532: PUSH
2533: FOR_TO
2534: IFFALSE 2673
// begin tmp := Produce ( amfac2 , [ us_medium_wheeled , us_medium_tracked ] [ rand ( 1 , 2 ) ] , [ engine_combustion , engine_siberite ] [ rand ( 1 , 2 ) ] , control_remote , [ us_gatling_gun , us_double_gun , us_laser ] [ rand ( 1 , 3 ) ] ) ;
2536: LD_ADDR_VAR 0 3
2540: PUSH
2541: LD_INT 6
2543: PPUSH
2544: LD_INT 2
2546: PUSH
2547: LD_INT 3
2549: PUSH
2550: EMPTY
2551: LIST
2552: LIST
2553: PUSH
2554: LD_INT 1
2556: PPUSH
2557: LD_INT 2
2559: PPUSH
2560: CALL_OW 12
2564: ARRAY
2565: PPUSH
2566: LD_INT 1
2568: PUSH
2569: LD_INT 3
2571: PUSH
2572: EMPTY
2573: LIST
2574: LIST
2575: PUSH
2576: LD_INT 1
2578: PPUSH
2579: LD_INT 2
2581: PPUSH
2582: CALL_OW 12
2586: ARRAY
2587: PPUSH
2588: LD_INT 2
2590: PPUSH
2591: LD_INT 4
2593: PUSH
2594: LD_INT 5
2596: PUSH
2597: LD_INT 9
2599: PUSH
2600: EMPTY
2601: LIST
2602: LIST
2603: LIST
2604: PUSH
2605: LD_INT 1
2607: PPUSH
2608: LD_INT 3
2610: PPUSH
2611: CALL_OW 12
2615: ARRAY
2616: PPUSH
2617: CALL 28724 0 5
2621: ST_TO_ADDR
// if tmp then
2622: LD_VAR 0 3
2626: IFFALSE 2671
// AddComConstruct ( amfac2 , tmp [ 1 ] , tmp [ 2 ] , tmp [ 3 ] , tmp [ 4 ] ) ;
2628: LD_INT 6
2630: PPUSH
2631: LD_VAR 0 3
2635: PUSH
2636: LD_INT 1
2638: ARRAY
2639: PPUSH
2640: LD_VAR 0 3
2644: PUSH
2645: LD_INT 2
2647: ARRAY
2648: PPUSH
2649: LD_VAR 0 3
2653: PUSH
2654: LD_INT 3
2656: ARRAY
2657: PPUSH
2658: LD_VAR 0 3
2662: PUSH
2663: LD_INT 4
2665: ARRAY
2666: PPUSH
2667: CALL_OW 185
// end ;
2671: GO 2533
2673: POP
2674: POP
// repeat wait ( 0 0$1 ) ;
2675: LD_INT 35
2677: PPUSH
2678: CALL_OW 67
// until FilterAllUnits ( [ [ f_side , 1 ] , [ f_control , control_remote ] ] ) >= [ 4 , 5 , 6 ] [ Difficulty ] ;
2682: LD_INT 22
2684: PUSH
2685: LD_INT 1
2687: PUSH
2688: EMPTY
2689: LIST
2690: LIST
2691: PUSH
2692: LD_INT 33
2694: PUSH
2695: LD_INT 2
2697: PUSH
2698: EMPTY
2699: LIST
2700: LIST
2701: PUSH
2702: EMPTY
2703: LIST
2704: LIST
2705: PPUSH
2706: CALL_OW 69
2710: PUSH
2711: LD_INT 4
2713: PUSH
2714: LD_INT 5
2716: PUSH
2717: LD_INT 6
2719: PUSH
2720: EMPTY
2721: LIST
2722: LIST
2723: LIST
2724: PUSH
2725: LD_OWVAR 67
2729: ARRAY
2730: GREATEREQUAL
2731: IFFALSE 2675
// defenders := FilterAllUnits ( [ [ f_side , 1 ] , [ f_control , control_remote ] ] ) ;
2733: LD_ADDR_EXP 20
2737: PUSH
2738: LD_INT 22
2740: PUSH
2741: LD_INT 1
2743: PUSH
2744: EMPTY
2745: LIST
2746: LIST
2747: PUSH
2748: LD_INT 33
2750: PUSH
2751: LD_INT 2
2753: PUSH
2754: EMPTY
2755: LIST
2756: LIST
2757: PUSH
2758: EMPTY
2759: LIST
2760: LIST
2761: PPUSH
2762: CALL_OW 69
2766: ST_TO_ADDR
// end ;
2767: LD_VAR 0 1
2771: RET
// export function Defend ; var i , un , veh , tmp ; begin
2772: LD_INT 0
2774: PPUSH
2775: PPUSH
2776: PPUSH
2777: PPUSH
2778: PPUSH
// defcon_wave := defcon_wave + 1 ;
2779: LD_ADDR_EXP 22
2783: PUSH
2784: LD_EXP 22
2788: PUSH
2789: LD_INT 1
2791: PLUS
2792: ST_TO_ADDR
// if not defenders then
2793: LD_EXP 20
2797: NOT
2798: IFFALSE 2804
// PrepareDefenders ;
2800: CALL 2490 0 0
// if defcon_wave > 1 then
2804: LD_EXP 22
2808: PUSH
2809: LD_INT 1
2811: GREATER
2812: IFFALSE 3038
// begin for i = 1 to defcon_wave + 2 do
2814: LD_ADDR_VAR 0 2
2818: PUSH
2819: DOUBLE
2820: LD_INT 1
2822: DEC
2823: ST_TO_ADDR
2824: LD_EXP 22
2828: PUSH
2829: LD_INT 2
2831: PLUS
2832: PUSH
2833: FOR_TO
2834: IFFALSE 2960
// begin PrepareVehicle ( us_heavy_tracked , engine_siberite , control_manual , [ us_gatling_gun , us_heavy_gun , us_rocket_launcher ] [ rand ( 1 , 3 ) ] , 100 ) ;
2836: LD_INT 4
2838: PPUSH
2839: LD_INT 3
2841: PPUSH
2842: LD_INT 1
2844: PPUSH
2845: LD_INT 4
2847: PUSH
2848: LD_INT 6
2850: PUSH
2851: LD_INT 7
2853: PUSH
2854: EMPTY
2855: LIST
2856: LIST
2857: LIST
2858: PUSH
2859: LD_INT 1
2861: PPUSH
2862: LD_INT 3
2864: PPUSH
2865: CALL_OW 12
2869: ARRAY
2870: PPUSH
2871: LD_INT 100
2873: PPUSH
2874: CALL 6029 0 5
// veh := CreateVehicle ;
2878: LD_ADDR_VAR 0 4
2882: PUSH
2883: CALL_OW 45
2887: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
2888: LD_VAR 0 4
2892: PPUSH
2893: LD_INT 1
2895: PPUSH
2896: CALL_OW 233
// defenders := defenders ^ veh ;
2900: LD_ADDR_EXP 20
2904: PUSH
2905: LD_EXP 20
2909: PUSH
2910: LD_VAR 0 4
2914: ADD
2915: ST_TO_ADDR
// PrepareHuman ( false , 3 , 9 ) ;
2916: LD_INT 0
2918: PPUSH
2919: LD_INT 3
2921: PPUSH
2922: LD_INT 9
2924: PPUSH
2925: CALL_OW 380
// PlaceHumanInUnit ( CreateHuman , veh ) ;
2929: CALL_OW 44
2933: PPUSH
2934: LD_VAR 0 4
2938: PPUSH
2939: CALL_OW 52
// PlaceUnitArea ( veh , west_spawn , false ) ;
2943: LD_VAR 0 4
2947: PPUSH
2948: LD_INT 25
2950: PPUSH
2951: LD_INT 0
2953: PPUSH
2954: CALL_OW 49
// end ;
2958: GO 2833
2960: POP
2961: POP
// for i = 1 to defcon_wave do
2962: LD_ADDR_VAR 0 2
2966: PUSH
2967: DOUBLE
2968: LD_INT 1
2970: DEC
2971: ST_TO_ADDR
2972: LD_EXP 22
2976: PUSH
2977: FOR_TO
2978: IFFALSE 3036
// begin PrepareHuman ( false , 5 , 9 ) ;
2980: LD_INT 0
2982: PPUSH
2983: LD_INT 5
2985: PPUSH
2986: LD_INT 9
2988: PPUSH
2989: CALL_OW 380
// un := CreateHuman ;
2993: LD_ADDR_VAR 0 3
2997: PUSH
2998: CALL_OW 44
3002: ST_TO_ADDR
// PlaceUnitArea ( un , west_spawn , false ) ;
3003: LD_VAR 0 3
3007: PPUSH
3008: LD_INT 25
3010: PPUSH
3011: LD_INT 0
3013: PPUSH
3014: CALL_OW 49
// defenders := defenders ^ un ;
3018: LD_ADDR_EXP 20
3022: PUSH
3023: LD_EXP 20
3027: PUSH
3028: LD_VAR 0 3
3032: ADD
3033: ST_TO_ADDR
// end ;
3034: GO 2977
3036: POP
3037: POP
// end ; repeat wait ( 0 0$1 ) ;
3038: LD_INT 35
3040: PPUSH
3041: CALL_OW 67
// for i in defenders do
3045: LD_ADDR_VAR 0 2
3049: PUSH
3050: LD_EXP 20
3054: PUSH
3055: FOR_IN
3056: IFFALSE 3138
// begin if defcon and GetDistUnitXY ( i , defcon [ 1 ] , defcon [ 2 ] ) > 10 and not HasTask ( i ) then
3058: LD_EXP 21
3062: PUSH
3063: LD_VAR 0 2
3067: PPUSH
3068: LD_EXP 21
3072: PUSH
3073: LD_INT 1
3075: ARRAY
3076: PPUSH
3077: LD_EXP 21
3081: PUSH
3082: LD_INT 2
3084: ARRAY
3085: PPUSH
3086: CALL_OW 297
3090: PUSH
3091: LD_INT 10
3093: GREATER
3094: AND
3095: PUSH
3096: LD_VAR 0 2
3100: PPUSH
3101: CALL_OW 314
3105: NOT
3106: AND
3107: IFFALSE 3136
// ComAgressiveMove ( i , defcon [ 1 ] , defcon [ 2 ] ) ;
3109: LD_VAR 0 2
3113: PPUSH
3114: LD_EXP 21
3118: PUSH
3119: LD_INT 1
3121: ARRAY
3122: PPUSH
3123: LD_EXP 21
3127: PUSH
3128: LD_INT 2
3130: ARRAY
3131: PPUSH
3132: CALL_OW 114
// end ;
3136: GO 3055
3138: POP
3139: POP
// until not defenders ;
3140: LD_EXP 20
3144: NOT
3145: IFFALSE 3038
// end ;
3147: LD_VAR 0 1
3151: RET
// every 0 0$1 do var radar , i ;
3152: GO 3154
3154: DISABLE
3155: LD_INT 0
3157: PPUSH
3158: PPUSH
// begin uc_side := 1 ;
3159: LD_ADDR_OWVAR 20
3163: PUSH
3164: LD_INT 1
3166: ST_TO_ADDR
// uc_nation := 1 ;
3167: LD_ADDR_OWVAR 21
3171: PUSH
3172: LD_INT 1
3174: ST_TO_ADDR
// PrepareVehicle ( us_light_wheeled , engine_solar , control_computer , us_radar , 100 ) ;
3175: LD_INT 1
3177: PPUSH
3178: LD_INT 2
3180: PPUSH
3181: LD_INT 3
3183: PPUSH
3184: LD_INT 11
3186: PPUSH
3187: LD_INT 100
3189: PPUSH
3190: CALL 6029 0 5
// radar := CreateVehicle ;
3194: LD_ADDR_VAR 0 1
3198: PUSH
3199: CALL_OW 45
3203: ST_TO_ADDR
// SetDir ( radar , 4 ) ;
3204: LD_VAR 0 1
3208: PPUSH
3209: LD_INT 4
3211: PPUSH
3212: CALL_OW 233
// PlaceUnitXY ( radar , 51 , 45 , false ) ;
3216: LD_VAR 0 1
3220: PPUSH
3221: LD_INT 51
3223: PPUSH
3224: LD_INT 45
3226: PPUSH
3227: LD_INT 0
3229: PPUSH
3230: CALL_OW 48
// repeat AddComWait ( radar , 0 0$20 ) ;
3234: LD_VAR 0 1
3238: PPUSH
3239: LD_INT 700
3241: PPUSH
3242: CALL_OW 202
// AddComMoveXY ( radar , 65 , 75 ) ;
3246: LD_VAR 0 1
3250: PPUSH
3251: LD_INT 65
3253: PPUSH
3254: LD_INT 75
3256: PPUSH
3257: CALL_OW 171
// AddComWait ( radar , 0 0$10 ) ;
3261: LD_VAR 0 1
3265: PPUSH
3266: LD_INT 350
3268: PPUSH
3269: CALL_OW 202
// AddComMoveXY ( radar , 83 , 87 ) ;
3273: LD_VAR 0 1
3277: PPUSH
3278: LD_INT 83
3280: PPUSH
3281: LD_INT 87
3283: PPUSH
3284: CALL_OW 171
// AddComWait ( radar , 0 0$15 ) ;
3288: LD_VAR 0 1
3292: PPUSH
3293: LD_INT 525
3295: PPUSH
3296: CALL_OW 202
// AddComMoveXY ( radar , 94 , 81 ) ;
3300: LD_VAR 0 1
3304: PPUSH
3305: LD_INT 94
3307: PPUSH
3308: LD_INT 81
3310: PPUSH
3311: CALL_OW 171
// AddComWait ( radar , 0 0$10 ) ;
3315: LD_VAR 0 1
3319: PPUSH
3320: LD_INT 350
3322: PPUSH
3323: CALL_OW 202
// AddComMoveXY ( radar , 55 , 48 ) ;
3327: LD_VAR 0 1
3331: PPUSH
3332: LD_INT 55
3334: PPUSH
3335: LD_INT 48
3337: PPUSH
3338: CALL_OW 171
// wait ( 1 1$00 ) ;
3342: LD_INT 2100
3344: PPUSH
3345: CALL_OW 67
// until not IsOk ( radar ) ;
3349: LD_VAR 0 1
3353: PPUSH
3354: CALL_OW 302
3358: NOT
3359: IFFALSE 3234
// end ;
3361: PPOPN 2
3363: END
// every 7 7$30 trigger Difficulty > 1 and extra_patrol do var un ;
3364: LD_OWVAR 67
3368: PUSH
3369: LD_INT 1
3371: GREATER
3372: PUSH
3373: LD_EXP 11
3377: AND
3378: IFFALSE 3600
3380: GO 3382
3382: DISABLE
3383: LD_INT 0
3385: PPUSH
// begin enable ;
3386: ENABLE
// uc_side := 1 ;
3387: LD_ADDR_OWVAR 20
3391: PUSH
3392: LD_INT 1
3394: ST_TO_ADDR
// uc_nation := 1 ;
3395: LD_ADDR_OWVAR 21
3399: PUSH
3400: LD_INT 1
3402: ST_TO_ADDR
// PrepareVehicle ( us_morphling , engine_siberite , control_computer , us_gatling_gun , 100 ) ;
3403: LD_INT 5
3405: PPUSH
3406: LD_INT 3
3408: PPUSH
3409: LD_INT 3
3411: PPUSH
3412: LD_INT 4
3414: PPUSH
3415: LD_INT 100
3417: PPUSH
3418: CALL 6029 0 5
// un := CreateVehicle ;
3422: LD_ADDR_VAR 0 1
3426: PUSH
3427: CALL_OW 45
3431: ST_TO_ADDR
// SetDir ( un , 3 ) ;
3432: LD_VAR 0 1
3436: PPUSH
3437: LD_INT 3
3439: PPUSH
3440: CALL_OW 233
// PlaceUnitXY ( un , 155 , 2 , false ) ;
3444: LD_VAR 0 1
3448: PPUSH
3449: LD_INT 155
3451: PPUSH
3452: LD_INT 2
3454: PPUSH
3455: LD_INT 0
3457: PPUSH
3458: CALL_OW 48
// ComAgressiveMove ( un , 169 , 77 ) ;
3462: LD_VAR 0 1
3466: PPUSH
3467: LD_INT 169
3469: PPUSH
3470: LD_INT 77
3472: PPUSH
3473: CALL_OW 114
// AddComWait ( un , 0 0$2 ) ;
3477: LD_VAR 0 1
3481: PPUSH
3482: LD_INT 70
3484: PPUSH
3485: CALL_OW 202
// AddComAgressiveMove ( un , 134 , 62 ) ;
3489: LD_VAR 0 1
3493: PPUSH
3494: LD_INT 134
3496: PPUSH
3497: LD_INT 62
3499: PPUSH
3500: CALL_OW 174
// AddComAgressiveMove ( un , 103 , 42 ) ;
3504: LD_VAR 0 1
3508: PPUSH
3509: LD_INT 103
3511: PPUSH
3512: LD_INT 42
3514: PPUSH
3515: CALL_OW 174
// AddComWait ( un , 0 0$2 ) ;
3519: LD_VAR 0 1
3523: PPUSH
3524: LD_INT 70
3526: PPUSH
3527: CALL_OW 202
// AddComAgressiveMove ( un , 84 , 2 ) ;
3531: LD_VAR 0 1
3535: PPUSH
3536: LD_INT 84
3538: PPUSH
3539: LD_INT 2
3541: PPUSH
3542: CALL_OW 174
// repeat wait ( 0 0$1 ) ;
3546: LD_INT 35
3548: PPUSH
3549: CALL_OW 67
// if IsDead ( un ) then
3553: LD_VAR 0 1
3557: PPUSH
3558: CALL_OW 301
3562: IFFALSE 3574
// begin extra_patrol := false ;
3564: LD_ADDR_EXP 11
3568: PUSH
3569: LD_INT 0
3571: ST_TO_ADDR
// exit ;
3572: GO 3600
// end ; until IsAt ( un , 84 , 2 ) ;
3574: LD_VAR 0 1
3578: PPUSH
3579: LD_INT 84
3581: PPUSH
3582: LD_INT 2
3584: PPUSH
3585: CALL_OW 307
3589: IFFALSE 3546
// RemoveUnit ( un ) ;
3591: LD_VAR 0 1
3595: PPUSH
3596: CALL_OW 64
// end ; end_of_file
3600: PPOPN 1
3602: END
// export Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi , Simms , Joan , DeltaDoctor ; export function PrepareFriends ; var i , tmp , buildings , areas , bunkers , cl ; begin
3603: LD_INT 0
3605: PPUSH
3606: PPUSH
3607: PPUSH
3608: PPUSH
3609: PPUSH
3610: PPUSH
3611: PPUSH
// uc_side := 4 ;
3612: LD_ADDR_OWVAR 20
3616: PUSH
3617: LD_INT 4
3619: ST_TO_ADDR
// uc_nation := 1 ;
3620: LD_ADDR_OWVAR 21
3624: PUSH
3625: LD_INT 1
3627: ST_TO_ADDR
// DeltaDoctor := PrepareUnit ( DeltaDoctor , ( not debug ) , 10c_ ) ;
3628: LD_ADDR_EXP 37
3632: PUSH
3633: LD_STRING DeltaDoctor
3635: PPUSH
3636: LD_EXP 1
3640: NOT
3641: PPUSH
3642: LD_STRING 10c_
3644: PPUSH
3645: CALL 5966 0 3
3649: ST_TO_ADDR
// Joan := PrepareUnit ( Joan , ( not debug ) , 10c_ ) ;
3650: LD_ADDR_EXP 36
3654: PUSH
3655: LD_STRING Joan
3657: PPUSH
3658: LD_EXP 1
3662: NOT
3663: PPUSH
3664: LD_STRING 10c_
3666: PPUSH
3667: CALL 5966 0 3
3671: ST_TO_ADDR
// if Joan then
3672: LD_EXP 36
3676: IFFALSE 3707
// friends := Insert ( friends , friends + 1 , Joan ) ;
3678: LD_ADDR_EXP 4
3682: PUSH
3683: LD_EXP 4
3687: PPUSH
3688: LD_EXP 4
3692: PUSH
3693: LD_INT 1
3695: PLUS
3696: PPUSH
3697: LD_EXP 36
3701: PPUSH
3702: CALL_OW 2
3706: ST_TO_ADDR
// Simms := PrepareUnit ( Simms , ( not debug ) , 10c_ ) ;
3707: LD_ADDR_EXP 35
3711: PUSH
3712: LD_STRING Simms
3714: PPUSH
3715: LD_EXP 1
3719: NOT
3720: PPUSH
3721: LD_STRING 10c_
3723: PPUSH
3724: CALL 5966 0 3
3728: ST_TO_ADDR
// Kikuchi := PrepareUnit ( Kikuchi , ( not debug ) , 11_ ) ;
3729: LD_ADDR_EXP 34
3733: PUSH
3734: LD_STRING Kikuchi
3736: PPUSH
3737: LD_EXP 1
3741: NOT
3742: PPUSH
3743: LD_STRING 11_
3745: PPUSH
3746: CALL 5966 0 3
3750: ST_TO_ADDR
// if Kikuchi then
3751: LD_EXP 34
3755: IFFALSE 3786
// friends := Insert ( friends , friends + 1 , Kikuchi ) ;
3757: LD_ADDR_EXP 4
3761: PUSH
3762: LD_EXP 4
3766: PPUSH
3767: LD_EXP 4
3771: PUSH
3772: LD_INT 1
3774: PLUS
3775: PPUSH
3776: LD_EXP 34
3780: PPUSH
3781: CALL_OW 2
3785: ST_TO_ADDR
// Frank := PrepareUnit ( Frank , ( not debug ) , 11_ ) ;
3786: LD_ADDR_EXP 33
3790: PUSH
3791: LD_STRING Frank
3793: PPUSH
3794: LD_EXP 1
3798: NOT
3799: PPUSH
3800: LD_STRING 11_
3802: PPUSH
3803: CALL 5966 0 3
3807: ST_TO_ADDR
// if Frank then
3808: LD_EXP 33
3812: IFFALSE 3843
// friends := Insert ( friends , friends + 1 , Frank ) ;
3814: LD_ADDR_EXP 4
3818: PUSH
3819: LD_EXP 4
3823: PPUSH
3824: LD_EXP 4
3828: PUSH
3829: LD_INT 1
3831: PLUS
3832: PPUSH
3833: LD_EXP 33
3837: PPUSH
3838: CALL_OW 2
3842: ST_TO_ADDR
// Gary := PrepareUnit ( Gary , ( not debug ) , 11_ ) ;
3843: LD_ADDR_EXP 32
3847: PUSH
3848: LD_STRING Gary
3850: PPUSH
3851: LD_EXP 1
3855: NOT
3856: PPUSH
3857: LD_STRING 11_
3859: PPUSH
3860: CALL 5966 0 3
3864: ST_TO_ADDR
// if Gary then
3865: LD_EXP 32
3869: IFFALSE 3900
// friends := Insert ( friends , friends + 1 , Gary ) ;
3871: LD_ADDR_EXP 4
3875: PUSH
3876: LD_EXP 4
3880: PPUSH
3881: LD_EXP 4
3885: PUSH
3886: LD_INT 1
3888: PLUS
3889: PPUSH
3890: LD_EXP 32
3894: PPUSH
3895: CALL_OW 2
3899: ST_TO_ADDR
// Cornel := PrepareUnit ( Cornell , ( not debug ) , 11_ ) ;
3900: LD_ADDR_EXP 31
3904: PUSH
3905: LD_STRING Cornell
3907: PPUSH
3908: LD_EXP 1
3912: NOT
3913: PPUSH
3914: LD_STRING 11_
3916: PPUSH
3917: CALL 5966 0 3
3921: ST_TO_ADDR
// if Cornel then
3922: LD_EXP 31
3926: IFFALSE 3957
// friends := Insert ( friends , friends + 1 , Cornel ) ;
3928: LD_ADDR_EXP 4
3932: PUSH
3933: LD_EXP 4
3937: PPUSH
3938: LD_EXP 4
3942: PUSH
3943: LD_INT 1
3945: PLUS
3946: PPUSH
3947: LD_EXP 31
3951: PPUSH
3952: CALL_OW 2
3956: ST_TO_ADDR
// Houten := PrepareUnit ( Houten , ( not debug ) , 11_ ) ;
3957: LD_ADDR_EXP 30
3961: PUSH
3962: LD_STRING Houten
3964: PPUSH
3965: LD_EXP 1
3969: NOT
3970: PPUSH
3971: LD_STRING 11_
3973: PPUSH
3974: CALL 5966 0 3
3978: ST_TO_ADDR
// if Houten then
3979: LD_EXP 30
3983: IFFALSE 4014
// friends := Insert ( friends , friends + 1 , Houten ) ;
3985: LD_ADDR_EXP 4
3989: PUSH
3990: LD_EXP 4
3994: PPUSH
3995: LD_EXP 4
3999: PUSH
4000: LD_INT 1
4002: PLUS
4003: PPUSH
4004: LD_EXP 30
4008: PPUSH
4009: CALL_OW 2
4013: ST_TO_ADDR
// Gladstone := PrepareUnit ( Gladstone , ( not debug ) , 11_ ) ;
4014: LD_ADDR_EXP 29
4018: PUSH
4019: LD_STRING Gladstone
4021: PPUSH
4022: LD_EXP 1
4026: NOT
4027: PPUSH
4028: LD_STRING 11_
4030: PPUSH
4031: CALL 5966 0 3
4035: ST_TO_ADDR
// if Gladstone then
4036: LD_EXP 29
4040: IFFALSE 4071
// friends := Insert ( friends , friends + 1 , Gladstone ) ;
4042: LD_ADDR_EXP 4
4046: PUSH
4047: LD_EXP 4
4051: PPUSH
4052: LD_EXP 4
4056: PUSH
4057: LD_INT 1
4059: PLUS
4060: PPUSH
4061: LD_EXP 29
4065: PPUSH
4066: CALL_OW 2
4070: ST_TO_ADDR
// Lisa := PrepareUnit ( Lisa , ( not debug ) , 11_ ) ;
4071: LD_ADDR_EXP 23
4075: PUSH
4076: LD_STRING Lisa
4078: PPUSH
4079: LD_EXP 1
4083: NOT
4084: PPUSH
4085: LD_STRING 11_
4087: PPUSH
4088: CALL 5966 0 3
4092: ST_TO_ADDR
// if Lisa then
4093: LD_EXP 23
4097: IFFALSE 4122
// friends := Insert ( friends , 1 , Lisa ) ;
4099: LD_ADDR_EXP 4
4103: PUSH
4104: LD_EXP 4
4108: PPUSH
4109: LD_INT 1
4111: PPUSH
4112: LD_EXP 23
4116: PPUSH
4117: CALL_OW 2
4121: ST_TO_ADDR
// Donaldson := PrepareUnit ( Donaldson , ( not debug ) , 11_ ) ;
4122: LD_ADDR_EXP 24
4126: PUSH
4127: LD_STRING Donaldson
4129: PPUSH
4130: LD_EXP 1
4134: NOT
4135: PPUSH
4136: LD_STRING 11_
4138: PPUSH
4139: CALL 5966 0 3
4143: ST_TO_ADDR
// if Donaldson then
4144: LD_EXP 24
4148: IFFALSE 4179
// friends := Insert ( friends , friends + 1 , Donaldson ) ;
4150: LD_ADDR_EXP 4
4154: PUSH
4155: LD_EXP 4
4159: PPUSH
4160: LD_EXP 4
4164: PUSH
4165: LD_INT 1
4167: PLUS
4168: PPUSH
4169: LD_EXP 24
4173: PPUSH
4174: CALL_OW 2
4178: ST_TO_ADDR
// Bobby := PrepareUnit ( Bobby , ( not debug ) , 11_ ) ;
4179: LD_ADDR_EXP 25
4183: PUSH
4184: LD_STRING Bobby
4186: PPUSH
4187: LD_EXP 1
4191: NOT
4192: PPUSH
4193: LD_STRING 11_
4195: PPUSH
4196: CALL 5966 0 3
4200: ST_TO_ADDR
// if Bobby then
4201: LD_EXP 25
4205: IFFALSE 4236
// friends := Insert ( friends , friends + 1 , Bobby ) ;
4207: LD_ADDR_EXP 4
4211: PUSH
4212: LD_EXP 4
4216: PPUSH
4217: LD_EXP 4
4221: PUSH
4222: LD_INT 1
4224: PLUS
4225: PPUSH
4226: LD_EXP 25
4230: PPUSH
4231: CALL_OW 2
4235: ST_TO_ADDR
// Cyrus := PrepareUnit ( Cyrus , ( not debug ) , 11_ ) ;
4236: LD_ADDR_EXP 26
4240: PUSH
4241: LD_STRING Cyrus
4243: PPUSH
4244: LD_EXP 1
4248: NOT
4249: PPUSH
4250: LD_STRING 11_
4252: PPUSH
4253: CALL 5966 0 3
4257: ST_TO_ADDR
// if Cyrus then
4258: LD_EXP 26
4262: IFFALSE 4293
// friends := Insert ( friends , friends + 1 , Cyrus ) ;
4264: LD_ADDR_EXP 4
4268: PUSH
4269: LD_EXP 4
4273: PPUSH
4274: LD_EXP 4
4278: PUSH
4279: LD_INT 1
4281: PLUS
4282: PPUSH
4283: LD_EXP 26
4287: PPUSH
4288: CALL_OW 2
4292: ST_TO_ADDR
// Denis := PrepareUnit ( Denis , ( not debug ) , 11_ ) ;
4293: LD_ADDR_EXP 27
4297: PUSH
4298: LD_STRING Denis
4300: PPUSH
4301: LD_EXP 1
4305: NOT
4306: PPUSH
4307: LD_STRING 11_
4309: PPUSH
4310: CALL 5966 0 3
4314: ST_TO_ADDR
// Brown := PrepareUnit ( Brown , ( not debug ) , 11_ ) ;
4315: LD_ADDR_EXP 28
4319: PUSH
4320: LD_STRING Brown
4322: PPUSH
4323: LD_EXP 1
4327: NOT
4328: PPUSH
4329: LD_STRING 11_
4331: PPUSH
4332: CALL 5966 0 3
4336: ST_TO_ADDR
// if Brown then
4337: LD_EXP 28
4341: IFFALSE 4372
// friends := Insert ( friends , friends + 1 , Brown ) ;
4343: LD_ADDR_EXP 4
4347: PUSH
4348: LD_EXP 4
4352: PPUSH
4353: LD_EXP 4
4357: PUSH
4358: LD_INT 1
4360: PLUS
4361: PPUSH
4362: LD_EXP 28
4366: PPUSH
4367: CALL_OW 2
4371: ST_TO_ADDR
// friends := friends ^ CreateCharacterSet ( 11c_others ) ^ CreateCharacterSet ( 11_others ) ;
4372: LD_ADDR_EXP 4
4376: PUSH
4377: LD_EXP 4
4381: PUSH
4382: LD_STRING 11c_others
4384: PPUSH
4385: CALL_OW 31
4389: ADD
4390: PUSH
4391: LD_STRING 11_others
4393: PPUSH
4394: CALL_OW 31
4398: ADD
4399: ST_TO_ADDR
// if friends < 18 then
4400: LD_EXP 4
4404: PUSH
4405: LD_INT 18
4407: LESS
4408: IFFALSE 4480
// for i = 1 to 18 do
4410: LD_ADDR_VAR 0 2
4414: PUSH
4415: DOUBLE
4416: LD_INT 1
4418: DEC
4419: ST_TO_ADDR
4420: LD_INT 18
4422: PUSH
4423: FOR_TO
4424: IFFALSE 4478
// begin PrepareHuman ( false , rand ( 1 , 4 ) , 7 ) ;
4426: LD_INT 0
4428: PPUSH
4429: LD_INT 1
4431: PPUSH
4432: LD_INT 4
4434: PPUSH
4435: CALL_OW 12
4439: PPUSH
4440: LD_INT 7
4442: PPUSH
4443: CALL_OW 380
// friends := Insert ( friends , friends + 1 , CreateHuman ) ;
4447: LD_ADDR_EXP 4
4451: PUSH
4452: LD_EXP 4
4456: PPUSH
4457: LD_EXP 4
4461: PUSH
4462: LD_INT 1
4464: PLUS
4465: PPUSH
4466: CALL_OW 44
4470: PPUSH
4471: CALL_OW 2
4475: ST_TO_ADDR
// end ;
4476: GO 4423
4478: POP
4479: POP
// for i in friends do
4480: LD_ADDR_VAR 0 2
4484: PUSH
4485: LD_EXP 4
4489: PUSH
4490: FOR_IN
4491: IFFALSE 4549
// if GetSkill ( i , 1 ) >= GetSkill ( i , 4 ) then
4493: LD_VAR 0 2
4497: PPUSH
4498: LD_INT 1
4500: PPUSH
4501: CALL_OW 259
4505: PUSH
4506: LD_VAR 0 2
4510: PPUSH
4511: LD_INT 4
4513: PPUSH
4514: CALL_OW 259
4518: GREATEREQUAL
4519: IFFALSE 4535
// SetClass ( i , class_soldier ) else
4521: LD_VAR 0 2
4525: PPUSH
4526: LD_INT 1
4528: PPUSH
4529: CALL_OW 336
4533: GO 4547
// SetClass ( i , class_scientistic ) ;
4535: LD_VAR 0 2
4539: PPUSH
4540: LD_INT 4
4542: PPUSH
4543: CALL_OW 336
4547: GO 4490
4549: POP
4550: POP
// if Frank then
4551: LD_EXP 33
4555: IFFALSE 4569
// SetClass ( Frank , class_sniper ) ;
4557: LD_EXP 33
4561: PPUSH
4562: LD_INT 5
4564: PPUSH
4565: CALL_OW 336
// SetClass ( [ Joan , Denis , DeltaDoctor , Simms ] , class_scientistic ) ;
4569: LD_EXP 36
4573: PUSH
4574: LD_EXP 27
4578: PUSH
4579: LD_EXP 37
4583: PUSH
4584: LD_EXP 35
4588: PUSH
4589: EMPTY
4590: LIST
4591: LIST
4592: LIST
4593: LIST
4594: PPUSH
4595: LD_INT 4
4597: PPUSH
4598: CALL_OW 336
// selected = CharacterSelection (  , 7 , 7 , [ sel_dont_change_class , JMM , Roth , Simms , Denis , DeltaDoctor , sel_not_hired , sel_changeable , sel_change_class ] ^ friends , [ class_soldier , [ class_scientistic , 2 ] , [ class_sniper , 0 , 3 ] ] ) ;
4602: LD_ADDR_EXP 3
4606: PUSH
4607: LD_STRING 
4609: PPUSH
4610: LD_INT 7
4612: PPUSH
4613: LD_INT 7
4615: PPUSH
4616: LD_INT -6
4618: PUSH
4619: LD_EXP 14
4623: PUSH
4624: LD_EXP 15
4628: PUSH
4629: LD_EXP 35
4633: PUSH
4634: LD_EXP 27
4638: PUSH
4639: LD_EXP 37
4643: PUSH
4644: LD_INT -2
4646: PUSH
4647: LD_INT -3
4649: PUSH
4650: LD_INT -5
4652: PUSH
4653: EMPTY
4654: LIST
4655: LIST
4656: LIST
4657: LIST
4658: LIST
4659: LIST
4660: LIST
4661: LIST
4662: LIST
4663: PUSH
4664: LD_EXP 4
4668: ADD
4669: PPUSH
4670: LD_INT 1
4672: PUSH
4673: LD_INT 4
4675: PUSH
4676: LD_INT 2
4678: PUSH
4679: EMPTY
4680: LIST
4681: LIST
4682: PUSH
4683: LD_INT 5
4685: PUSH
4686: LD_INT 0
4688: PUSH
4689: LD_INT 3
4691: PUSH
4692: EMPTY
4693: LIST
4694: LIST
4695: LIST
4696: PUSH
4697: EMPTY
4698: LIST
4699: LIST
4700: LIST
4701: PPUSH
4702: CALL_OW 42
4706: ST_TO_ADDR
// if Simms then
4707: LD_EXP 35
4711: IFFALSE 4729
// selected := selected ^ Simms ;
4713: LD_ADDR_EXP 3
4717: PUSH
4718: LD_EXP 3
4722: PUSH
4723: LD_EXP 35
4727: ADD
4728: ST_TO_ADDR
// if Denis then
4729: LD_EXP 27
4733: IFFALSE 4751
// selected := selected ^ Denis ;
4735: LD_ADDR_EXP 3
4739: PUSH
4740: LD_EXP 3
4744: PUSH
4745: LD_EXP 27
4749: ADD
4750: ST_TO_ADDR
// if DeltaDoctor then
4751: LD_EXP 37
4755: IFFALSE 4773
// selected := selected ^ DeltaDoctor ;
4757: LD_ADDR_EXP 3
4761: PUSH
4762: LD_EXP 3
4766: PUSH
4767: LD_EXP 37
4771: ADD
4772: ST_TO_ADDR
// friends := friends diff selected ;
4773: LD_ADDR_EXP 4
4777: PUSH
4778: LD_EXP 4
4782: PUSH
4783: LD_EXP 3
4787: DIFF
4788: ST_TO_ADDR
// buildings := [ [ ambar1 , ambar2 , ambar3 ] , [ amlab2 , amlab3 , amlab4 ] ] ;
4789: LD_ADDR_VAR 0 4
4793: PUSH
4794: LD_INT 111
4796: PUSH
4797: LD_INT 137
4799: PUSH
4800: LD_INT 51
4802: PUSH
4803: EMPTY
4804: LIST
4805: LIST
4806: LIST
4807: PUSH
4808: LD_INT 147
4810: PUSH
4811: LD_INT 129
4813: PUSH
4814: LD_INT 25
4816: PUSH
4817: EMPTY
4818: LIST
4819: LIST
4820: LIST
4821: PUSH
4822: EMPTY
4823: LIST
4824: LIST
4825: ST_TO_ADDR
// areas := [ friends_spawn_1 , friends_spawn_2 , friends_spawn_3 , friends_spawn_4 , friends_spawn_5 , friends_spawn_6 ] ;
4826: LD_ADDR_VAR 0 5
4830: PUSH
4831: LD_INT 5
4833: PUSH
4834: LD_INT 6
4836: PUSH
4837: LD_INT 7
4839: PUSH
4840: LD_INT 8
4842: PUSH
4843: LD_INT 17
4845: PUSH
4846: LD_INT 18
4848: PUSH
4849: EMPTY
4850: LIST
4851: LIST
4852: LIST
4853: LIST
4854: LIST
4855: LIST
4856: ST_TO_ADDR
// for i in buildings do
4857: LD_ADDR_VAR 0 2
4861: PUSH
4862: LD_VAR 0 4
4866: PUSH
4867: FOR_IN
4868: IFFALSE 4884
// SetSide ( i , 4 ) ;
4870: LD_VAR 0 2
4874: PPUSH
4875: LD_INT 4
4877: PPUSH
4878: CALL_OW 235
4882: GO 4867
4884: POP
4885: POP
// for i in selected do
4886: LD_ADDR_VAR 0 2
4890: PUSH
4891: LD_EXP 3
4895: PUSH
4896: FOR_IN
4897: IFFALSE 5237
// begin if GetClass ( i ) in [ 1 , 5 ] then
4899: LD_VAR 0 2
4903: PPUSH
4904: CALL_OW 257
4908: PUSH
4909: LD_INT 1
4911: PUSH
4912: LD_INT 5
4914: PUSH
4915: EMPTY
4916: LIST
4917: LIST
4918: IN
4919: IFFALSE 5079
// begin if buildings [ 1 ] then
4921: LD_VAR 0 4
4925: PUSH
4926: LD_INT 1
4928: ARRAY
4929: IFFALSE 4990
// begin PlaceHumanInUnit ( i , buildings [ 1 ] [ 1 ] ) ;
4931: LD_VAR 0 2
4935: PPUSH
4936: LD_VAR 0 4
4940: PUSH
4941: LD_INT 1
4943: ARRAY
4944: PUSH
4945: LD_INT 1
4947: ARRAY
4948: PPUSH
4949: CALL_OW 52
// buildings := Replace ( buildings , 1 , Delete ( buildings [ 1 ] , 1 ) ) ;
4953: LD_ADDR_VAR 0 4
4957: PUSH
4958: LD_VAR 0 4
4962: PPUSH
4963: LD_INT 1
4965: PPUSH
4966: LD_VAR 0 4
4970: PUSH
4971: LD_INT 1
4973: ARRAY
4974: PPUSH
4975: LD_INT 1
4977: PPUSH
4978: CALL_OW 3
4982: PPUSH
4983: CALL_OW 1
4987: ST_TO_ADDR
// end else
4988: GO 5077
// begin if not areas then
4990: LD_VAR 0 5
4994: NOT
4995: IFFALSE 5029
// begin PlaceUnitXYR ( i , 87 , 68 , 8 , false ) ;
4997: LD_VAR 0 2
5001: PPUSH
5002: LD_INT 87
5004: PPUSH
5005: LD_INT 68
5007: PPUSH
5008: LD_INT 8
5010: PPUSH
5011: LD_INT 0
5013: PPUSH
5014: CALL_OW 50
// ComHold ( i ) ;
5018: LD_VAR 0 2
5022: PPUSH
5023: CALL_OW 140
// end else
5027: GO 5077
// begin PlaceUnitArea ( i , areas [ 1 ] , false ) ;
5029: LD_VAR 0 2
5033: PPUSH
5034: LD_VAR 0 5
5038: PUSH
5039: LD_INT 1
5041: ARRAY
5042: PPUSH
5043: LD_INT 0
5045: PPUSH
5046: CALL_OW 49
// ComHold ( i ) ;
5050: LD_VAR 0 2
5054: PPUSH
5055: CALL_OW 140
// areas := Delete ( areas , 1 ) ;
5059: LD_ADDR_VAR 0 5
5063: PUSH
5064: LD_VAR 0 5
5068: PPUSH
5069: LD_INT 1
5071: PPUSH
5072: CALL_OW 3
5076: ST_TO_ADDR
// end ; end ; end else
5077: GO 5235
// begin if buildings [ 2 ] then
5079: LD_VAR 0 4
5083: PUSH
5084: LD_INT 2
5086: ARRAY
5087: IFFALSE 5148
// begin PlaceHumanInUnit ( i , buildings [ 2 ] [ 1 ] ) ;
5089: LD_VAR 0 2
5093: PPUSH
5094: LD_VAR 0 4
5098: PUSH
5099: LD_INT 2
5101: ARRAY
5102: PUSH
5103: LD_INT 1
5105: ARRAY
5106: PPUSH
5107: CALL_OW 52
// buildings := Replace ( buildings , 2 , Delete ( buildings [ 2 ] , 1 ) ) ;
5111: LD_ADDR_VAR 0 4
5115: PUSH
5116: LD_VAR 0 4
5120: PPUSH
5121: LD_INT 2
5123: PPUSH
5124: LD_VAR 0 4
5128: PUSH
5129: LD_INT 2
5131: ARRAY
5132: PPUSH
5133: LD_INT 1
5135: PPUSH
5136: CALL_OW 3
5140: PPUSH
5141: CALL_OW 1
5145: ST_TO_ADDR
// end else
5146: GO 5235
// begin if not areas then
5148: LD_VAR 0 5
5152: NOT
5153: IFFALSE 5187
// begin PlaceUnitXYR ( i , 87 , 68 , 8 , false ) ;
5155: LD_VAR 0 2
5159: PPUSH
5160: LD_INT 87
5162: PPUSH
5163: LD_INT 68
5165: PPUSH
5166: LD_INT 8
5168: PPUSH
5169: LD_INT 0
5171: PPUSH
5172: CALL_OW 50
// ComHold ( i ) ;
5176: LD_VAR 0 2
5180: PPUSH
5181: CALL_OW 140
// end else
5185: GO 5235
// begin PlaceUnitArea ( i , areas [ 1 ] , false ) ;
5187: LD_VAR 0 2
5191: PPUSH
5192: LD_VAR 0 5
5196: PUSH
5197: LD_INT 1
5199: ARRAY
5200: PPUSH
5201: LD_INT 0
5203: PPUSH
5204: CALL_OW 49
// ComHold ( i ) ;
5208: LD_VAR 0 2
5212: PPUSH
5213: CALL_OW 140
// areas := Delete ( areas , 1 ) ;
5217: LD_ADDR_VAR 0 5
5221: PUSH
5222: LD_VAR 0 5
5226: PPUSH
5227: LD_INT 1
5229: PPUSH
5230: CALL_OW 3
5234: ST_TO_ADDR
// end ; end ; end ; end ;
5235: GO 4896
5237: POP
5238: POP
// bunkers := FilterAllUnits ( [ [ f_side , 1 ] , [ f_btype , b_bunker ] ] ) ;
5239: LD_ADDR_VAR 0 6
5243: PUSH
5244: LD_INT 22
5246: PUSH
5247: LD_INT 1
5249: PUSH
5250: EMPTY
5251: LIST
5252: LIST
5253: PUSH
5254: LD_INT 30
5256: PUSH
5257: LD_INT 32
5259: PUSH
5260: EMPTY
5261: LIST
5262: LIST
5263: PUSH
5264: EMPTY
5265: LIST
5266: LIST
5267: PPUSH
5268: CALL_OW 69
5272: ST_TO_ADDR
// for i = bunkers - friends downto 1 do
5273: LD_ADDR_VAR 0 2
5277: PUSH
5278: DOUBLE
5279: LD_VAR 0 6
5283: PUSH
5284: LD_EXP 4
5288: MINUS
5289: INC
5290: ST_TO_ADDR
5291: LD_INT 1
5293: PUSH
5294: FOR_DOWNTO
5295: IFFALSE 5358
// begin PrepareHuman ( false , 1 , [ 7 , 8 , 9 ] [ Difficulty ] ) ;
5297: LD_INT 0
5299: PPUSH
5300: LD_INT 1
5302: PPUSH
5303: LD_INT 7
5305: PUSH
5306: LD_INT 8
5308: PUSH
5309: LD_INT 9
5311: PUSH
5312: EMPTY
5313: LIST
5314: LIST
5315: LIST
5316: PUSH
5317: LD_OWVAR 67
5321: ARRAY
5322: PPUSH
5323: CALL_OW 380
// friends := Insert ( friends , friends + 1 , CreateHuman ) ;
5327: LD_ADDR_EXP 4
5331: PUSH
5332: LD_EXP 4
5336: PPUSH
5337: LD_EXP 4
5341: PUSH
5342: LD_INT 1
5344: PLUS
5345: PPUSH
5346: CALL_OW 44
5350: PPUSH
5351: CALL_OW 2
5355: ST_TO_ADDR
// end ;
5356: GO 5294
5358: POP
5359: POP
// if friends then
5360: LD_EXP 4
5364: IFFALSE 5480
// begin tmp := friends ;
5366: LD_ADDR_VAR 0 3
5370: PUSH
5371: LD_EXP 4
5375: ST_TO_ADDR
// for i = 1 to bunkers do
5376: LD_ADDR_VAR 0 2
5380: PUSH
5381: DOUBLE
5382: LD_INT 1
5384: DEC
5385: ST_TO_ADDR
5386: LD_VAR 0 6
5390: PUSH
5391: FOR_TO
5392: IFFALSE 5478
// begin SetSide ( tmp [ tmp ] , 1 ) ;
5394: LD_VAR 0 3
5398: PUSH
5399: LD_VAR 0 3
5403: ARRAY
5404: PPUSH
5405: LD_INT 1
5407: PPUSH
5408: CALL_OW 235
// SetClass ( tmp [ tmp ] , 1 ) ;
5412: LD_VAR 0 3
5416: PUSH
5417: LD_VAR 0 3
5421: ARRAY
5422: PPUSH
5423: LD_INT 1
5425: PPUSH
5426: CALL_OW 336
// PlaceHumanInUnit ( tmp [ tmp ] , bunkers [ i ] ) ;
5430: LD_VAR 0 3
5434: PUSH
5435: LD_VAR 0 3
5439: ARRAY
5440: PPUSH
5441: LD_VAR 0 6
5445: PUSH
5446: LD_VAR 0 2
5450: ARRAY
5451: PPUSH
5452: CALL_OW 52
// tmp := Delete ( tmp , tmp ) ;
5456: LD_ADDR_VAR 0 3
5460: PUSH
5461: LD_VAR 0 3
5465: PPUSH
5466: LD_VAR 0 3
5470: PPUSH
5471: CALL_OW 3
5475: ST_TO_ADDR
// end ;
5476: GO 5391
5478: POP
5479: POP
// end ; areas := areas union [ guard_spawn_1 , guard_spawn_2 , guard_spawn_3 , guard_spawn_4 , guard_spawn_5 , guard_spawn_6 , guard_spawn_7 , guard_spawn_8 , guard_spawn_9 , guard_spawn_10 , guard_spawn_11 , guard_spawn_12 , guard_spawn_13 , guard_spawn_14 , guard_spawn_15 , guard_spawn_16 , guard_spawn_17 , guard_spawn_18 , guard_spawn_19 , guard_spawn_20 ] ;
5480: LD_ADDR_VAR 0 5
5484: PUSH
5485: LD_VAR 0 5
5489: PUSH
5490: LD_INT 9
5492: PUSH
5493: LD_INT 10
5495: PUSH
5496: LD_INT 11
5498: PUSH
5499: LD_INT 12
5501: PUSH
5502: LD_INT 13
5504: PUSH
5505: LD_INT 14
5507: PUSH
5508: LD_INT 15
5510: PUSH
5511: LD_INT 16
5513: PUSH
5514: LD_INT 26
5516: PUSH
5517: LD_INT 27
5519: PUSH
5520: LD_INT 28
5522: PUSH
5523: LD_INT 29
5525: PUSH
5526: LD_INT 30
5528: PUSH
5529: LD_INT 31
5531: PUSH
5532: LD_INT 32
5534: PUSH
5535: LD_INT 33
5537: PUSH
5538: LD_INT 34
5540: PUSH
5541: LD_INT 35
5543: PUSH
5544: LD_INT 36
5546: PUSH
5547: LD_INT 37
5549: PUSH
5550: EMPTY
5551: LIST
5552: LIST
5553: LIST
5554: LIST
5555: LIST
5556: LIST
5557: LIST
5558: LIST
5559: LIST
5560: LIST
5561: LIST
5562: LIST
5563: LIST
5564: LIST
5565: LIST
5566: LIST
5567: LIST
5568: LIST
5569: LIST
5570: LIST
5571: UNION
5572: ST_TO_ADDR
// for i in friends do
5573: LD_ADDR_VAR 0 2
5577: PUSH
5578: LD_EXP 4
5582: PUSH
5583: FOR_IN
5584: IFFALSE 5852
// begin SetTag ( i , 2 ) ;
5586: LD_VAR 0 2
5590: PPUSH
5591: LD_INT 2
5593: PPUSH
5594: CALL_OW 109
// if GetClass ( i ) = 1 and buildings [ 1 ] then
5598: LD_VAR 0 2
5602: PPUSH
5603: CALL_OW 257
5607: PUSH
5608: LD_INT 1
5610: EQUAL
5611: PUSH
5612: LD_VAR 0 4
5616: PUSH
5617: LD_INT 1
5619: ARRAY
5620: AND
5621: IFFALSE 5682
// begin PlaceHumanInUnit ( i , buildings [ 1 ] [ 1 ] ) ;
5623: LD_VAR 0 2
5627: PPUSH
5628: LD_VAR 0 4
5632: PUSH
5633: LD_INT 1
5635: ARRAY
5636: PUSH
5637: LD_INT 1
5639: ARRAY
5640: PPUSH
5641: CALL_OW 52
// buildings := Replace ( buildings , 1 , Delete ( buildings [ 1 ] , 1 ) ) ;
5645: LD_ADDR_VAR 0 4
5649: PUSH
5650: LD_VAR 0 4
5654: PPUSH
5655: LD_INT 1
5657: PPUSH
5658: LD_VAR 0 4
5662: PUSH
5663: LD_INT 1
5665: ARRAY
5666: PPUSH
5667: LD_INT 1
5669: PPUSH
5670: CALL_OW 3
5674: PPUSH
5675: CALL_OW 1
5679: ST_TO_ADDR
// continue ;
5680: GO 5583
// end ; if GetClass ( i ) = 4 and buildings [ 2 ] then
5682: LD_VAR 0 2
5686: PPUSH
5687: CALL_OW 257
5691: PUSH
5692: LD_INT 4
5694: EQUAL
5695: PUSH
5696: LD_VAR 0 4
5700: PUSH
5701: LD_INT 2
5703: ARRAY
5704: AND
5705: IFFALSE 5766
// begin PlaceHumanInUnit ( i , buildings [ 2 ] [ 1 ] ) ;
5707: LD_VAR 0 2
5711: PPUSH
5712: LD_VAR 0 4
5716: PUSH
5717: LD_INT 2
5719: ARRAY
5720: PUSH
5721: LD_INT 1
5723: ARRAY
5724: PPUSH
5725: CALL_OW 52
// buildings := Replace ( buildings , 2 , Delete ( buildings [ 2 ] , 1 ) ) ;
5729: LD_ADDR_VAR 0 4
5733: PUSH
5734: LD_VAR 0 4
5738: PPUSH
5739: LD_INT 2
5741: PPUSH
5742: LD_VAR 0 4
5746: PUSH
5747: LD_INT 2
5749: ARRAY
5750: PPUSH
5751: LD_INT 1
5753: PPUSH
5754: CALL_OW 3
5758: PPUSH
5759: CALL_OW 1
5763: ST_TO_ADDR
// continue ;
5764: GO 5583
// end ; PlaceUnitArea ( i , areas [ 1 ] , false ) ;
5766: LD_VAR 0 2
5770: PPUSH
5771: LD_VAR 0 5
5775: PUSH
5776: LD_INT 1
5778: ARRAY
5779: PPUSH
5780: LD_INT 0
5782: PPUSH
5783: CALL_OW 49
// areas := Delete ( areas , 1 ) ;
5787: LD_ADDR_VAR 0 5
5791: PUSH
5792: LD_VAR 0 5
5796: PPUSH
5797: LD_INT 1
5799: PPUSH
5800: CALL_OW 3
5804: ST_TO_ADDR
// if GetClass ( i ) <> 1 then
5805: LD_VAR 0 2
5809: PPUSH
5810: CALL_OW 257
5814: PUSH
5815: LD_INT 1
5817: NONEQUAL
5818: IFFALSE 5832
// SetClass ( i , 1 ) ;
5820: LD_VAR 0 2
5824: PPUSH
5825: LD_INT 1
5827: PPUSH
5828: CALL_OW 336
// ComHold ( i ) ;
5832: LD_VAR 0 2
5836: PPUSH
5837: CALL_OW 140
// if not areas then
5841: LD_VAR 0 5
5845: NOT
5846: IFFALSE 5850
// break ;
5848: GO 5852
// end ;
5850: GO 5583
5852: POP
5853: POP
// if UnitFilter ( friends , [ f_not , [ f_placed ] ] ) then
5854: LD_EXP 4
5858: PPUSH
5859: LD_INT 3
5861: PUSH
5862: LD_INT 52
5864: PUSH
5865: EMPTY
5866: LIST
5867: PUSH
5868: EMPTY
5869: LIST
5870: LIST
5871: PPUSH
5872: CALL_OW 72
5876: IFFALSE 5943
// for i in UnitFilter ( friends , [ f_not , [ f_placed ] ] ) do
5878: LD_ADDR_VAR 0 2
5882: PUSH
5883: LD_EXP 4
5887: PPUSH
5888: LD_INT 3
5890: PUSH
5891: LD_INT 52
5893: PUSH
5894: EMPTY
5895: LIST
5896: PUSH
5897: EMPTY
5898: LIST
5899: LIST
5900: PPUSH
5901: CALL_OW 72
5905: PUSH
5906: FOR_IN
5907: IFFALSE 5941
// begin PlaceUnitXYR ( i , 65 , 58 , 7 , false ) ;
5909: LD_VAR 0 2
5913: PPUSH
5914: LD_INT 65
5916: PPUSH
5917: LD_INT 58
5919: PPUSH
5920: LD_INT 7
5922: PPUSH
5923: LD_INT 0
5925: PPUSH
5926: CALL_OW 50
// ComHold ( i ) ;
5930: LD_VAR 0 2
5934: PPUSH
5935: CALL_OW 140
// end ;
5939: GO 5906
5941: POP
5942: POP
// if Frank then
5943: LD_EXP 33
5947: IFFALSE 5961
// SetClass ( Frank , class_sniper ) ;
5949: LD_EXP 33
5953: PPUSH
5954: LD_INT 5
5956: PPUSH
5957: CALL_OW 336
// end ; end_of_file
5961: LD_VAR 0 1
5965: RET
// export function PrepareUnit ( ident , exist_mode , prefix ) ; var unit ; begin
5966: LD_INT 0
5968: PPUSH
5969: PPUSH
// if exist_mode then
5970: LD_VAR 0 2
5974: IFFALSE 5999
// unit := CreateCharacter ( prefix & ident ) else
5976: LD_ADDR_VAR 0 5
5980: PUSH
5981: LD_VAR 0 3
5985: PUSH
5986: LD_VAR 0 1
5990: STR
5991: PPUSH
5992: CALL_OW 34
5996: ST_TO_ADDR
5997: GO 6014
// unit := NewCharacter ( ident ) ;
5999: LD_ADDR_VAR 0 5
6003: PUSH
6004: LD_VAR 0 1
6008: PPUSH
6009: CALL_OW 25
6013: ST_TO_ADDR
// result := unit ;
6014: LD_ADDR_VAR 0 4
6018: PUSH
6019: LD_VAR 0 5
6023: ST_TO_ADDR
// end ;
6024: LD_VAR 0 4
6028: RET
// export function PrepareVehicle ( chassis , engine , control , weapon , fuel ) ; begin
6029: LD_INT 0
6031: PPUSH
// vc_chassis := chassis ;
6032: LD_ADDR_OWVAR 37
6036: PUSH
6037: LD_VAR 0 1
6041: ST_TO_ADDR
// vc_engine := engine ;
6042: LD_ADDR_OWVAR 39
6046: PUSH
6047: LD_VAR 0 2
6051: ST_TO_ADDR
// vc_control := control ;
6052: LD_ADDR_OWVAR 38
6056: PUSH
6057: LD_VAR 0 3
6061: ST_TO_ADDR
// vc_weapon := weapon ;
6062: LD_ADDR_OWVAR 40
6066: PUSH
6067: LD_VAR 0 4
6071: ST_TO_ADDR
// vc_fuel_battery := fuel ;
6072: LD_ADDR_OWVAR 41
6076: PUSH
6077: LD_VAR 0 5
6081: ST_TO_ADDR
// end ;
6082: LD_VAR 0 6
6086: RET
// export function CanSayRand ( side ) ; begin
6087: LD_INT 0
6089: PPUSH
// result := FilterAllUnits ( [ [ f_placed ] , [ f_side , side ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] ] ] ) diff [ JMM , Frank , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Powell , Cornel , Gary , Kikuchi ] ;
6090: LD_ADDR_VAR 0 2
6094: PUSH
6095: LD_INT 52
6097: PUSH
6098: EMPTY
6099: LIST
6100: PUSH
6101: LD_INT 22
6103: PUSH
6104: LD_VAR 0 1
6108: PUSH
6109: EMPTY
6110: LIST
6111: LIST
6112: PUSH
6113: LD_INT 2
6115: PUSH
6116: LD_INT 25
6118: PUSH
6119: LD_INT 1
6121: PUSH
6122: EMPTY
6123: LIST
6124: LIST
6125: PUSH
6126: LD_INT 25
6128: PUSH
6129: LD_INT 2
6131: PUSH
6132: EMPTY
6133: LIST
6134: LIST
6135: PUSH
6136: LD_INT 25
6138: PUSH
6139: LD_INT 3
6141: PUSH
6142: EMPTY
6143: LIST
6144: LIST
6145: PUSH
6146: LD_INT 25
6148: PUSH
6149: LD_INT 4
6151: PUSH
6152: EMPTY
6153: LIST
6154: LIST
6155: PUSH
6156: EMPTY
6157: LIST
6158: LIST
6159: LIST
6160: LIST
6161: LIST
6162: PUSH
6163: EMPTY
6164: LIST
6165: LIST
6166: LIST
6167: PPUSH
6168: CALL_OW 69
6172: PUSH
6173: LD_EXP 14
6177: PUSH
6178: LD_EXP 33
6182: PUSH
6183: LD_EXP 23
6187: PUSH
6188: LD_EXP 24
6192: PUSH
6193: LD_EXP 25
6197: PUSH
6198: LD_EXP 26
6202: PUSH
6203: LD_EXP 27
6207: PUSH
6208: LD_EXP 28
6212: PUSH
6213: LD_EXP 29
6217: PUSH
6218: LD_EXP 30
6222: PUSH
6223: LD_EXP 16
6227: PUSH
6228: LD_EXP 31
6232: PUSH
6233: LD_EXP 32
6237: PUSH
6238: LD_EXP 34
6242: PUSH
6243: EMPTY
6244: LIST
6245: LIST
6246: LIST
6247: LIST
6248: LIST
6249: LIST
6250: LIST
6251: LIST
6252: LIST
6253: LIST
6254: LIST
6255: LIST
6256: LIST
6257: LIST
6258: DIFF
6259: ST_TO_ADDR
// end ;
6260: LD_VAR 0 2
6264: RET
// export function Connect ( vehicle ) ; var i , t , mech , tmp , j ; begin
6265: LD_INT 0
6267: PPUSH
6268: PPUSH
6269: PPUSH
6270: PPUSH
6271: PPUSH
6272: PPUSH
// if not vehicle or not GetControl ( vehicle ) = control_remote then
6273: LD_VAR 0 1
6277: NOT
6278: PUSH
6279: LD_VAR 0 1
6283: PPUSH
6284: CALL_OW 263
6288: PUSH
6289: LD_INT 2
6291: EQUAL
6292: NOT
6293: OR
6294: IFFALSE 6298
// exit ;
6296: GO 6614
// tmp := FilterAllUnits ( [ [ f_side , GetSide ( vehicle ) ] , [ f_or , [ f_btype , b_control_tower ] , [ f_weapon , ar_control_tower ] ] ] ) ;
6298: LD_ADDR_VAR 0 6
6302: PUSH
6303: LD_INT 22
6305: PUSH
6306: LD_VAR 0 1
6310: PPUSH
6311: CALL_OW 255
6315: PUSH
6316: EMPTY
6317: LIST
6318: LIST
6319: PUSH
6320: LD_INT 2
6322: PUSH
6323: LD_INT 30
6325: PUSH
6326: LD_INT 36
6328: PUSH
6329: EMPTY
6330: LIST
6331: LIST
6332: PUSH
6333: LD_INT 34
6335: PUSH
6336: LD_INT 31
6338: PUSH
6339: EMPTY
6340: LIST
6341: LIST
6342: PUSH
6343: EMPTY
6344: LIST
6345: LIST
6346: LIST
6347: PUSH
6348: EMPTY
6349: LIST
6350: LIST
6351: PPUSH
6352: CALL_OW 69
6356: ST_TO_ADDR
// if not tmp then
6357: LD_VAR 0 6
6361: NOT
6362: IFFALSE 6366
// exit ;
6364: GO 6614
// result := [ ] ;
6366: LD_ADDR_VAR 0 2
6370: PUSH
6371: EMPTY
6372: ST_TO_ADDR
// for i in tmp do
6373: LD_ADDR_VAR 0 3
6377: PUSH
6378: LD_VAR 0 6
6382: PUSH
6383: FOR_IN
6384: IFFALSE 6455
// begin t := UnitsInside ( i ) ;
6386: LD_ADDR_VAR 0 4
6390: PUSH
6391: LD_VAR 0 3
6395: PPUSH
6396: CALL_OW 313
6400: ST_TO_ADDR
// if t then
6401: LD_VAR 0 4
6405: IFFALSE 6453
// for j in t do
6407: LD_ADDR_VAR 0 7
6411: PUSH
6412: LD_VAR 0 4
6416: PUSH
6417: FOR_IN
6418: IFFALSE 6451
// result := Insert ( result , result + 1 , j ) ;
6420: LD_ADDR_VAR 0 2
6424: PUSH
6425: LD_VAR 0 2
6429: PPUSH
6430: LD_VAR 0 2
6434: PUSH
6435: LD_INT 1
6437: PLUS
6438: PPUSH
6439: LD_VAR 0 7
6443: PPUSH
6444: CALL_OW 2
6448: ST_TO_ADDR
6449: GO 6417
6451: POP
6452: POP
// end ;
6453: GO 6383
6455: POP
6456: POP
// if not result then
6457: LD_VAR 0 2
6461: NOT
6462: IFFALSE 6466
// exit ;
6464: GO 6614
// mech := result [ 1 ] ;
6466: LD_ADDR_VAR 0 5
6470: PUSH
6471: LD_VAR 0 2
6475: PUSH
6476: LD_INT 1
6478: ARRAY
6479: ST_TO_ADDR
// if result > 1 then
6480: LD_VAR 0 2
6484: PUSH
6485: LD_INT 1
6487: GREATER
6488: IFFALSE 6600
// for i = 2 to result do
6490: LD_ADDR_VAR 0 3
6494: PUSH
6495: DOUBLE
6496: LD_INT 2
6498: DEC
6499: ST_TO_ADDR
6500: LD_VAR 0 2
6504: PUSH
6505: FOR_TO
6506: IFFALSE 6598
// begin t := GetSkill ( result [ i ] , 3 ) - UnitsLinked ( result [ i ] ) ;
6508: LD_ADDR_VAR 0 4
6512: PUSH
6513: LD_VAR 0 2
6517: PUSH
6518: LD_VAR 0 3
6522: ARRAY
6523: PPUSH
6524: LD_INT 3
6526: PPUSH
6527: CALL_OW 259
6531: PUSH
6532: LD_VAR 0 2
6536: PUSH
6537: LD_VAR 0 3
6541: ARRAY
6542: PPUSH
6543: CALL_OW 432
6547: MINUS
6548: ST_TO_ADDR
// if t >= ( GetSkill ( mech , 3 ) - UnitsLinked ( mech ) ) then
6549: LD_VAR 0 4
6553: PUSH
6554: LD_VAR 0 5
6558: PPUSH
6559: LD_INT 3
6561: PPUSH
6562: CALL_OW 259
6566: PUSH
6567: LD_VAR 0 5
6571: PPUSH
6572: CALL_OW 432
6576: MINUS
6577: GREATEREQUAL
6578: IFFALSE 6596
// mech := result [ i ] ;
6580: LD_ADDR_VAR 0 5
6584: PUSH
6585: LD_VAR 0 2
6589: PUSH
6590: LD_VAR 0 3
6594: ARRAY
6595: ST_TO_ADDR
// end ;
6596: GO 6505
6598: POP
6599: POP
// ComLinkTo ( vehicle , mech ) ;
6600: LD_VAR 0 1
6604: PPUSH
6605: LD_VAR 0 5
6609: PPUSH
6610: CALL_OW 135
// end ;
6614: LD_VAR 0 2
6618: RET
// export function SayRand ( sex , dial ) ; begin
6619: LD_INT 0
6621: PPUSH
// result := FilterAllUnits ( [ [ f_placed ] , [ f_side , 1 ] , [ f_sex , sex ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] ] ] ) diff [ JMM , Frank , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Powell , Cornel , Gary , Kikuchi ] ;
6622: LD_ADDR_VAR 0 3
6626: PUSH
6627: LD_INT 52
6629: PUSH
6630: EMPTY
6631: LIST
6632: PUSH
6633: LD_INT 22
6635: PUSH
6636: LD_INT 1
6638: PUSH
6639: EMPTY
6640: LIST
6641: LIST
6642: PUSH
6643: LD_INT 26
6645: PUSH
6646: LD_VAR 0 1
6650: PUSH
6651: EMPTY
6652: LIST
6653: LIST
6654: PUSH
6655: LD_INT 2
6657: PUSH
6658: LD_INT 25
6660: PUSH
6661: LD_INT 1
6663: PUSH
6664: EMPTY
6665: LIST
6666: LIST
6667: PUSH
6668: LD_INT 25
6670: PUSH
6671: LD_INT 2
6673: PUSH
6674: EMPTY
6675: LIST
6676: LIST
6677: PUSH
6678: LD_INT 25
6680: PUSH
6681: LD_INT 3
6683: PUSH
6684: EMPTY
6685: LIST
6686: LIST
6687: PUSH
6688: LD_INT 25
6690: PUSH
6691: LD_INT 4
6693: PUSH
6694: EMPTY
6695: LIST
6696: LIST
6697: PUSH
6698: EMPTY
6699: LIST
6700: LIST
6701: LIST
6702: LIST
6703: LIST
6704: PUSH
6705: EMPTY
6706: LIST
6707: LIST
6708: LIST
6709: LIST
6710: PPUSH
6711: CALL_OW 69
6715: PUSH
6716: LD_EXP 14
6720: PUSH
6721: LD_EXP 33
6725: PUSH
6726: LD_EXP 23
6730: PUSH
6731: LD_EXP 24
6735: PUSH
6736: LD_EXP 25
6740: PUSH
6741: LD_EXP 26
6745: PUSH
6746: LD_EXP 27
6750: PUSH
6751: LD_EXP 28
6755: PUSH
6756: LD_EXP 29
6760: PUSH
6761: LD_EXP 30
6765: PUSH
6766: LD_EXP 16
6770: PUSH
6771: LD_EXP 31
6775: PUSH
6776: LD_EXP 32
6780: PUSH
6781: LD_EXP 34
6785: PUSH
6786: EMPTY
6787: LIST
6788: LIST
6789: LIST
6790: LIST
6791: LIST
6792: LIST
6793: LIST
6794: LIST
6795: LIST
6796: LIST
6797: LIST
6798: LIST
6799: LIST
6800: LIST
6801: DIFF
6802: ST_TO_ADDR
// if not result then
6803: LD_VAR 0 3
6807: NOT
6808: IFFALSE 6812
// exit ;
6810: GO 6840
// result := result [ 1 ] ;
6812: LD_ADDR_VAR 0 3
6816: PUSH
6817: LD_VAR 0 3
6821: PUSH
6822: LD_INT 1
6824: ARRAY
6825: ST_TO_ADDR
// Say ( result , dial ) ;
6826: LD_VAR 0 3
6830: PPUSH
6831: LD_VAR 0 2
6835: PPUSH
6836: CALL_OW 88
// end ;
6840: LD_VAR 0 3
6844: RET
// export function SayRand2 ( sex , dial , filter ) ; begin
6845: LD_INT 0
6847: PPUSH
// result := FilterAllUnits ( [ [ f_side , 1 ] , [ f_sex , sex ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] ] ] ) diff [ JMM , Frank , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Powell , Cornel , Gary , Kikuchi ] ^ filter ;
6848: LD_ADDR_VAR 0 4
6852: PUSH
6853: LD_INT 22
6855: PUSH
6856: LD_INT 1
6858: PUSH
6859: EMPTY
6860: LIST
6861: LIST
6862: PUSH
6863: LD_INT 26
6865: PUSH
6866: LD_VAR 0 1
6870: PUSH
6871: EMPTY
6872: LIST
6873: LIST
6874: PUSH
6875: LD_INT 2
6877: PUSH
6878: LD_INT 25
6880: PUSH
6881: LD_INT 1
6883: PUSH
6884: EMPTY
6885: LIST
6886: LIST
6887: PUSH
6888: LD_INT 25
6890: PUSH
6891: LD_INT 2
6893: PUSH
6894: EMPTY
6895: LIST
6896: LIST
6897: PUSH
6898: LD_INT 25
6900: PUSH
6901: LD_INT 3
6903: PUSH
6904: EMPTY
6905: LIST
6906: LIST
6907: PUSH
6908: LD_INT 25
6910: PUSH
6911: LD_INT 4
6913: PUSH
6914: EMPTY
6915: LIST
6916: LIST
6917: PUSH
6918: EMPTY
6919: LIST
6920: LIST
6921: LIST
6922: LIST
6923: LIST
6924: PUSH
6925: EMPTY
6926: LIST
6927: LIST
6928: LIST
6929: PPUSH
6930: CALL_OW 69
6934: PUSH
6935: LD_EXP 14
6939: PUSH
6940: LD_EXP 33
6944: PUSH
6945: LD_EXP 23
6949: PUSH
6950: LD_EXP 24
6954: PUSH
6955: LD_EXP 25
6959: PUSH
6960: LD_EXP 26
6964: PUSH
6965: LD_EXP 27
6969: PUSH
6970: LD_EXP 28
6974: PUSH
6975: LD_EXP 29
6979: PUSH
6980: LD_EXP 30
6984: PUSH
6985: LD_EXP 16
6989: PUSH
6990: LD_EXP 31
6994: PUSH
6995: LD_EXP 32
6999: PUSH
7000: LD_EXP 34
7004: PUSH
7005: EMPTY
7006: LIST
7007: LIST
7008: LIST
7009: LIST
7010: LIST
7011: LIST
7012: LIST
7013: LIST
7014: LIST
7015: LIST
7016: LIST
7017: LIST
7018: LIST
7019: LIST
7020: PUSH
7021: LD_VAR 0 3
7025: ADD
7026: DIFF
7027: ST_TO_ADDR
// if not result then
7028: LD_VAR 0 4
7032: NOT
7033: IFFALSE 7037
// exit ;
7035: GO 7065
// result := result [ 1 ] ;
7037: LD_ADDR_VAR 0 4
7041: PUSH
7042: LD_VAR 0 4
7046: PUSH
7047: LD_INT 1
7049: ARRAY
7050: ST_TO_ADDR
// Say ( result , dial ) ;
7051: LD_VAR 0 4
7055: PPUSH
7056: LD_VAR 0 2
7060: PPUSH
7061: CALL_OW 88
// end ;
7065: LD_VAR 0 4
7069: RET
// export function Patrol ( unit , path , flags ) ; var i , x , y , c , p , station , tmp_path , status , enemy , e , spot_dist , safe_place , chase_range , need_refuel ; begin
7070: LD_INT 0
7072: PPUSH
7073: PPUSH
7074: PPUSH
7075: PPUSH
7076: PPUSH
7077: PPUSH
7078: PPUSH
7079: PPUSH
7080: PPUSH
7081: PPUSH
7082: PPUSH
7083: PPUSH
7084: PPUSH
7085: PPUSH
7086: PPUSH
// if not unit or not path or GetType ( unit ) = unit_building then
7087: LD_VAR 0 1
7091: NOT
7092: PUSH
7093: LD_VAR 0 2
7097: NOT
7098: OR
7099: PUSH
7100: LD_VAR 0 1
7104: PPUSH
7105: CALL_OW 247
7109: PUSH
7110: LD_INT 3
7112: EQUAL
7113: OR
7114: IFFALSE 7118
// exit ;
7116: GO 8657
// for i = path downto 1 do
7118: LD_ADDR_VAR 0 5
7122: PUSH
7123: DOUBLE
7124: LD_VAR 0 2
7128: INC
7129: ST_TO_ADDR
7130: LD_INT 1
7132: PUSH
7133: FOR_DOWNTO
7134: IFFALSE 7195
// begin if not ValidHex ( path [ i ] [ 1 ] , path [ i ] [ 2 ] ) then
7136: LD_VAR 0 2
7140: PUSH
7141: LD_VAR 0 5
7145: ARRAY
7146: PUSH
7147: LD_INT 1
7149: ARRAY
7150: PPUSH
7151: LD_VAR 0 2
7155: PUSH
7156: LD_VAR 0 5
7160: ARRAY
7161: PUSH
7162: LD_INT 2
7164: ARRAY
7165: PPUSH
7166: CALL_OW 488
7170: NOT
7171: IFFALSE 7193
// path = Delete ( path , i ) ;
7173: LD_ADDR_VAR 0 2
7177: PUSH
7178: LD_VAR 0 2
7182: PPUSH
7183: LD_VAR 0 5
7187: PPUSH
7188: CALL_OW 3
7192: ST_TO_ADDR
// end ;
7193: GO 7133
7195: POP
7196: POP
// if not path then
7197: LD_VAR 0 2
7201: NOT
7202: IFFALSE 7206
// exit ;
7204: GO 8657
// tmp_path := [ ] ;
7206: LD_ADDR_VAR 0 11
7210: PUSH
7211: EMPTY
7212: ST_TO_ADDR
// if flags then
7213: LD_VAR 0 3
7217: IFFALSE 7291
// begin if flags [ 1 ] then
7219: LD_VAR 0 3
7223: PUSH
7224: LD_INT 1
7226: ARRAY
7227: IFFALSE 7243
// safe_place = flags [ 1 ] ;
7229: LD_ADDR_VAR 0 16
7233: PUSH
7234: LD_VAR 0 3
7238: PUSH
7239: LD_INT 1
7241: ARRAY
7242: ST_TO_ADDR
// if flags [ 2 ] then
7243: LD_VAR 0 3
7247: PUSH
7248: LD_INT 2
7250: ARRAY
7251: IFFALSE 7267
// spot_dist = flags [ 2 ] ;
7253: LD_ADDR_VAR 0 15
7257: PUSH
7258: LD_VAR 0 3
7262: PUSH
7263: LD_INT 2
7265: ARRAY
7266: ST_TO_ADDR
// if flags [ 3 ] then
7267: LD_VAR 0 3
7271: PUSH
7272: LD_INT 3
7274: ARRAY
7275: IFFALSE 7291
// chase_range = flags [ 3 ] ;
7277: LD_ADDR_VAR 0 17
7281: PUSH
7282: LD_VAR 0 3
7286: PUSH
7287: LD_INT 3
7289: ARRAY
7290: ST_TO_ADDR
// end ; if not chase_range then
7291: LD_VAR 0 17
7295: NOT
7296: IFFALSE 7306
// chase_range = 8 ;
7298: LD_ADDR_VAR 0 17
7302: PUSH
7303: LD_INT 8
7305: ST_TO_ADDR
// if not spot_dist then
7306: LD_VAR 0 15
7310: NOT
7311: IFFALSE 7321
// spot_dist := 8 ;
7313: LD_ADDR_VAR 0 15
7317: PUSH
7318: LD_INT 8
7320: ST_TO_ADDR
// need_refuel = ( GetType ( unit ) = unit_vehicle and GetEngine ( unit ) <> engine_siberite ) ;
7321: LD_ADDR_VAR 0 18
7325: PUSH
7326: LD_VAR 0 1
7330: PPUSH
7331: CALL_OW 247
7335: PUSH
7336: LD_INT 2
7338: EQUAL
7339: PUSH
7340: LD_VAR 0 1
7344: PPUSH
7345: CALL_OW 262
7349: PUSH
7350: LD_INT 3
7352: NONEQUAL
7353: AND
7354: ST_TO_ADDR
// status = 1 ;
7355: LD_ADDR_VAR 0 12
7359: PUSH
7360: LD_INT 1
7362: ST_TO_ADDR
// tmp_path = [ 1 , path [ 1 ] ] ;
7363: LD_ADDR_VAR 0 11
7367: PUSH
7368: LD_INT 1
7370: PUSH
7371: LD_VAR 0 2
7375: PUSH
7376: LD_INT 1
7378: ARRAY
7379: PUSH
7380: EMPTY
7381: LIST
7382: LIST
7383: ST_TO_ADDR
// repeat wait ( 0 0$1 ) ;
7384: LD_INT 35
7386: PPUSH
7387: CALL_OW 67
// if need_refuel and GetFuel ( unit ) < 20 then
7391: LD_VAR 0 18
7395: PUSH
7396: LD_VAR 0 1
7400: PPUSH
7401: CALL_OW 261
7405: PUSH
7406: LD_INT 20
7408: LESS
7409: AND
7410: IFFALSE 7603
// begin station := FilterAllUnits ( [ [ f_side , GetSide ( unit ) ] , [ f_or , [ f_btype , b_depot ] , [ f_btype , b_warehouse ] , [ f_btype , b_oil_mine ] , [ f_btype , b_factory ] ] ] ) ;
7412: LD_ADDR_VAR 0 10
7416: PUSH
7417: LD_INT 22
7419: PUSH
7420: LD_VAR 0 1
7424: PPUSH
7425: CALL_OW 255
7429: PUSH
7430: EMPTY
7431: LIST
7432: LIST
7433: PUSH
7434: LD_INT 2
7436: PUSH
7437: LD_INT 30
7439: PUSH
7440: LD_INT 0
7442: PUSH
7443: EMPTY
7444: LIST
7445: LIST
7446: PUSH
7447: LD_INT 30
7449: PUSH
7450: LD_INT 1
7452: PUSH
7453: EMPTY
7454: LIST
7455: LIST
7456: PUSH
7457: LD_INT 30
7459: PUSH
7460: LD_INT 29
7462: PUSH
7463: EMPTY
7464: LIST
7465: LIST
7466: PUSH
7467: LD_INT 30
7469: PUSH
7470: LD_INT 3
7472: PUSH
7473: EMPTY
7474: LIST
7475: LIST
7476: PUSH
7477: EMPTY
7478: LIST
7479: LIST
7480: LIST
7481: LIST
7482: LIST
7483: PUSH
7484: EMPTY
7485: LIST
7486: LIST
7487: PPUSH
7488: CALL_OW 69
7492: ST_TO_ADDR
// if not station then
7493: LD_VAR 0 10
7497: NOT
7498: IFFALSE 7514
// begin SetFuel ( unit , 40 ) ;
7500: LD_VAR 0 1
7504: PPUSH
7505: LD_INT 40
7507: PPUSH
7508: CALL_OW 240
// continue ;
7512: GO 7384
// end ; status := 6 ;
7514: LD_ADDR_VAR 0 12
7518: PUSH
7519: LD_INT 6
7521: ST_TO_ADDR
// station := NearestUnitToUnit ( station , unit ) ;
7522: LD_ADDR_VAR 0 10
7526: PUSH
7527: LD_VAR 0 10
7531: PPUSH
7532: LD_VAR 0 1
7536: PPUSH
7537: CALL_OW 74
7541: ST_TO_ADDR
// repeat wait ( 0 0$1 ) ;
7542: LD_INT 35
7544: PPUSH
7545: CALL_OW 67
// ComMoveUnit ( unit , station ) ;
7549: LD_VAR 0 1
7553: PPUSH
7554: LD_VAR 0 10
7558: PPUSH
7559: CALL_OW 112
// until GetDistUnits ( unit , station ) < 6 ;
7563: LD_VAR 0 1
7567: PPUSH
7568: LD_VAR 0 10
7572: PPUSH
7573: CALL_OW 296
7577: PUSH
7578: LD_INT 6
7580: LESS
7581: IFFALSE 7542
// SetFuel ( unit , 100 ) ;
7583: LD_VAR 0 1
7587: PPUSH
7588: LD_INT 100
7590: PPUSH
7591: CALL_OW 240
// status := 5 ;
7595: LD_ADDR_VAR 0 12
7599: PUSH
7600: LD_INT 5
7602: ST_TO_ADDR
// end ; if status = 1 then
7603: LD_VAR 0 12
7607: PUSH
7608: LD_INT 1
7610: EQUAL
7611: IFFALSE 7987
// begin enemy := FilterAllUnits ( [ [ f_enemy , GetSide ( unit ) ] , [ f_not , [ f_type , unit_building ] ] , [ f_dist , unit , spot_dist ] , [ f_see , 1 ] ] ) ;
7613: LD_ADDR_VAR 0 13
7617: PUSH
7618: LD_INT 81
7620: PUSH
7621: LD_VAR 0 1
7625: PPUSH
7626: CALL_OW 255
7630: PUSH
7631: EMPTY
7632: LIST
7633: LIST
7634: PUSH
7635: LD_INT 3
7637: PUSH
7638: LD_INT 21
7640: PUSH
7641: LD_INT 3
7643: PUSH
7644: EMPTY
7645: LIST
7646: LIST
7647: PUSH
7648: EMPTY
7649: LIST
7650: LIST
7651: PUSH
7652: LD_INT 91
7654: PUSH
7655: LD_VAR 0 1
7659: PUSH
7660: LD_VAR 0 15
7664: PUSH
7665: EMPTY
7666: LIST
7667: LIST
7668: LIST
7669: PUSH
7670: LD_INT 101
7672: PUSH
7673: LD_INT 1
7675: PUSH
7676: EMPTY
7677: LIST
7678: LIST
7679: PUSH
7680: EMPTY
7681: LIST
7682: LIST
7683: LIST
7684: LIST
7685: PPUSH
7686: CALL_OW 69
7690: ST_TO_ADDR
// for i in enemy do
7691: LD_ADDR_VAR 0 5
7695: PUSH
7696: LD_VAR 0 13
7700: PUSH
7701: FOR_IN
7702: IFFALSE 7733
// if IsInvisible ( i ) then
7704: LD_VAR 0 5
7708: PPUSH
7709: CALL_OW 571
7713: IFFALSE 7731
// enemy := enemy diff i ;
7715: LD_ADDR_VAR 0 13
7719: PUSH
7720: LD_VAR 0 13
7724: PUSH
7725: LD_VAR 0 5
7729: DIFF
7730: ST_TO_ADDR
7731: GO 7701
7733: POP
7734: POP
// if enemy then
7735: LD_VAR 0 13
7739: IFFALSE 7789
// begin SetRememberedX ( unit , GetX ( unit ) ) ;
7741: LD_VAR 0 1
7745: PPUSH
7746: LD_VAR 0 1
7750: PPUSH
7751: CALL_OW 250
7755: PPUSH
7756: CALL_OW 231
// SetRememberedY ( unit , GetY ( unit ) ) ;
7760: LD_VAR 0 1
7764: PPUSH
7765: LD_VAR 0 1
7769: PPUSH
7770: CALL_OW 251
7774: PPUSH
7775: CALL_OW 232
// status = 2 ;
7779: LD_ADDR_VAR 0 12
7783: PUSH
7784: LD_INT 2
7786: ST_TO_ADDR
// end else
7787: GO 7987
// begin if IsAt ( unit , tmp_path [ 2 ] [ 1 ] , tmp_path [ 2 ] [ 2 ] ) or not HasTask ( unit ) then
7789: LD_VAR 0 1
7793: PPUSH
7794: LD_VAR 0 11
7798: PUSH
7799: LD_INT 2
7801: ARRAY
7802: PUSH
7803: LD_INT 1
7805: ARRAY
7806: PPUSH
7807: LD_VAR 0 11
7811: PUSH
7812: LD_INT 2
7814: ARRAY
7815: PUSH
7816: LD_INT 2
7818: ARRAY
7819: PPUSH
7820: CALL_OW 307
7824: PUSH
7825: LD_VAR 0 1
7829: PPUSH
7830: CALL_OW 314
7834: NOT
7835: OR
7836: IFFALSE 7987
// begin wait ( 0 0$2 ) ;
7838: LD_INT 70
7840: PPUSH
7841: CALL_OW 67
// if tmp_path [ 1 ] + 1 > path then
7845: LD_VAR 0 11
7849: PUSH
7850: LD_INT 1
7852: ARRAY
7853: PUSH
7854: LD_INT 1
7856: PLUS
7857: PUSH
7858: LD_VAR 0 2
7862: GREATER
7863: IFFALSE 7888
// tmp_path := Replace ( tmp_path , 1 , 1 ) else
7865: LD_ADDR_VAR 0 11
7869: PUSH
7870: LD_VAR 0 11
7874: PPUSH
7875: LD_INT 1
7877: PPUSH
7878: LD_INT 1
7880: PPUSH
7881: CALL_OW 1
7885: ST_TO_ADDR
7886: GO 7919
// tmp_path := Replace ( tmp_path , 1 , tmp_path [ 1 ] + 1 ) ;
7888: LD_ADDR_VAR 0 11
7892: PUSH
7893: LD_VAR 0 11
7897: PPUSH
7898: LD_INT 1
7900: PPUSH
7901: LD_VAR 0 11
7905: PUSH
7906: LD_INT 1
7908: ARRAY
7909: PUSH
7910: LD_INT 1
7912: PLUS
7913: PPUSH
7914: CALL_OW 1
7918: ST_TO_ADDR
// tmp_path := Replace ( tmp_path , 2 , path [ tmp_path [ 1 ] ] ) ;
7919: LD_ADDR_VAR 0 11
7923: PUSH
7924: LD_VAR 0 11
7928: PPUSH
7929: LD_INT 2
7931: PPUSH
7932: LD_VAR 0 2
7936: PUSH
7937: LD_VAR 0 11
7941: PUSH
7942: LD_INT 1
7944: ARRAY
7945: ARRAY
7946: PPUSH
7947: CALL_OW 1
7951: ST_TO_ADDR
// ComAgressiveMove ( unit , tmp_path [ 2 ] [ 1 ] , tmp_path [ 2 ] [ 2 ] ) ;
7952: LD_VAR 0 1
7956: PPUSH
7957: LD_VAR 0 11
7961: PUSH
7962: LD_INT 2
7964: ARRAY
7965: PUSH
7966: LD_INT 1
7968: ARRAY
7969: PPUSH
7970: LD_VAR 0 11
7974: PUSH
7975: LD_INT 2
7977: ARRAY
7978: PUSH
7979: LD_INT 2
7981: ARRAY
7982: PPUSH
7983: CALL_OW 114
// end ; end ; end ; if status = 2 then
7987: LD_VAR 0 12
7991: PUSH
7992: LD_INT 2
7994: EQUAL
7995: IFFALSE 8216
// begin if GetLives ( unit ) < 650 and safe_place then
7997: LD_VAR 0 1
8001: PPUSH
8002: CALL_OW 256
8006: PUSH
8007: LD_INT 650
8009: LESS
8010: PUSH
8011: LD_VAR 0 16
8015: AND
8016: IFFALSE 8028
// begin status = 3 ;
8018: LD_ADDR_VAR 0 12
8022: PUSH
8023: LD_INT 3
8025: ST_TO_ADDR
// continue ;
8026: GO 7384
// end ; x := GetRememberedX ( unit ) ;
8028: LD_ADDR_VAR 0 6
8032: PUSH
8033: LD_VAR 0 1
8037: PPUSH
8038: CALL_OW 252
8042: ST_TO_ADDR
// y := GetRememberedY ( unit ) ;
8043: LD_ADDR_VAR 0 7
8047: PUSH
8048: LD_VAR 0 1
8052: PPUSH
8053: CALL_OW 253
8057: ST_TO_ADDR
// enemy := FilterAllUnits ( [ [ f_enemy , GetSide ( unit ) ] , [ f_distxy , x , y , spot_dist ] , [ f_see , 1 ] ] ) ;
8058: LD_ADDR_VAR 0 13
8062: PUSH
8063: LD_INT 81
8065: PUSH
8066: LD_VAR 0 1
8070: PPUSH
8071: CALL_OW 255
8075: PUSH
8076: EMPTY
8077: LIST
8078: LIST
8079: PUSH
8080: LD_INT 92
8082: PUSH
8083: LD_VAR 0 6
8087: PUSH
8088: LD_VAR 0 7
8092: PUSH
8093: LD_VAR 0 15
8097: PUSH
8098: EMPTY
8099: LIST
8100: LIST
8101: LIST
8102: LIST
8103: PUSH
8104: LD_INT 101
8106: PUSH
8107: LD_INT 1
8109: PUSH
8110: EMPTY
8111: LIST
8112: LIST
8113: PUSH
8114: EMPTY
8115: LIST
8116: LIST
8117: LIST
8118: PPUSH
8119: CALL_OW 69
8123: ST_TO_ADDR
// if enemy then
8124: LD_VAR 0 13
8128: IFFALSE 8199
// begin e := NearestUnitToUnit ( enemy , unit ) ;
8130: LD_ADDR_VAR 0 14
8134: PUSH
8135: LD_VAR 0 13
8139: PPUSH
8140: LD_VAR 0 1
8144: PPUSH
8145: CALL_OW 74
8149: ST_TO_ADDR
// if GetDistUnitXY ( e , x , y ) < spot_dist + chase_range then
8150: LD_VAR 0 14
8154: PPUSH
8155: LD_VAR 0 6
8159: PPUSH
8160: LD_VAR 0 7
8164: PPUSH
8165: CALL_OW 297
8169: PUSH
8170: LD_VAR 0 15
8174: PUSH
8175: LD_VAR 0 17
8179: PLUS
8180: LESS
8181: IFFALSE 8197
// ComAttackUnit ( unit , e ) ;
8183: LD_VAR 0 1
8187: PPUSH
8188: LD_VAR 0 14
8192: PPUSH
8193: CALL_OW 115
// end else
8197: GO 8216
// begin ComStop ( unit ) ;
8199: LD_VAR 0 1
8203: PPUSH
8204: CALL_OW 141
// status = 5 ;
8208: LD_ADDR_VAR 0 12
8212: PUSH
8213: LD_INT 5
8215: ST_TO_ADDR
// end ; end ; if status = 3 and safe_place then
8216: LD_VAR 0 12
8220: PUSH
8221: LD_INT 3
8223: EQUAL
8224: PUSH
8225: LD_VAR 0 16
8229: AND
8230: IFFALSE 8316
// begin repeat ComMoveXY ( unit , safe_place [ 1 ] , safe_place [ 2 ] ) ;
8232: LD_VAR 0 1
8236: PPUSH
8237: LD_VAR 0 16
8241: PUSH
8242: LD_INT 1
8244: ARRAY
8245: PPUSH
8246: LD_VAR 0 16
8250: PUSH
8251: LD_INT 2
8253: ARRAY
8254: PPUSH
8255: CALL_OW 111
// wait ( 0 0$1 ) ;
8259: LD_INT 35
8261: PPUSH
8262: CALL_OW 67
// until GetDistUnitXY ( unit , safe_place [ 1 ] , safe_place [ 2 ] ) < 4 ;
8266: LD_VAR 0 1
8270: PPUSH
8271: LD_VAR 0 16
8275: PUSH
8276: LD_INT 1
8278: ARRAY
8279: PPUSH
8280: LD_VAR 0 16
8284: PUSH
8285: LD_INT 2
8287: ARRAY
8288: PPUSH
8289: CALL_OW 297
8293: PUSH
8294: LD_INT 4
8296: LESS
8297: IFFALSE 8232
// ComStop ( unit ) ;
8299: LD_VAR 0 1
8303: PPUSH
8304: CALL_OW 141
// status = 4 ;
8308: LD_ADDR_VAR 0 12
8312: PUSH
8313: LD_INT 4
8315: ST_TO_ADDR
// end ; if status = 4 then
8316: LD_VAR 0 12
8320: PUSH
8321: LD_INT 4
8323: EQUAL
8324: IFFALSE 8356
// begin repeat wait ( 0 0$1 ) ;
8326: LD_INT 35
8328: PPUSH
8329: CALL_OW 67
// until GetLives ( unit ) = 1000 ;
8333: LD_VAR 0 1
8337: PPUSH
8338: CALL_OW 256
8342: PUSH
8343: LD_INT 1000
8345: EQUAL
8346: IFFALSE 8326
// status = 5 ;
8348: LD_ADDR_VAR 0 12
8352: PUSH
8353: LD_INT 5
8355: ST_TO_ADDR
// end ; if status = 5 then
8356: LD_VAR 0 12
8360: PUSH
8361: LD_INT 5
8363: EQUAL
8364: IFFALSE 8646
// begin p := 999 ;
8366: LD_ADDR_VAR 0 9
8370: PUSH
8371: LD_INT 999
8373: ST_TO_ADDR
// e := [ tmp_path [ 2 ] [ 1 ] , tmp_path [ 2 ] [ 2 ] ] ;
8374: LD_ADDR_VAR 0 14
8378: PUSH
8379: LD_VAR 0 11
8383: PUSH
8384: LD_INT 2
8386: ARRAY
8387: PUSH
8388: LD_INT 1
8390: ARRAY
8391: PUSH
8392: LD_VAR 0 11
8396: PUSH
8397: LD_INT 2
8399: ARRAY
8400: PUSH
8401: LD_INT 2
8403: ARRAY
8404: PUSH
8405: EMPTY
8406: LIST
8407: LIST
8408: ST_TO_ADDR
// c := 1 ;
8409: LD_ADDR_VAR 0 8
8413: PUSH
8414: LD_INT 1
8416: ST_TO_ADDR
// for i = 1 to tmp_path [ 2 ] div 2 do
8417: LD_ADDR_VAR 0 5
8421: PUSH
8422: DOUBLE
8423: LD_INT 1
8425: DEC
8426: ST_TO_ADDR
8427: LD_VAR 0 11
8431: PUSH
8432: LD_INT 2
8434: ARRAY
8435: PUSH
8436: LD_INT 2
8438: DIV
8439: PUSH
8440: FOR_TO
8441: IFFALSE 8573
// begin x := GetDistUnitXY ( unit , tmp_path [ 2 ] [ c ] , tmp_path [ 2 ] [ c + 1 ] ) ;
8443: LD_ADDR_VAR 0 6
8447: PUSH
8448: LD_VAR 0 1
8452: PPUSH
8453: LD_VAR 0 11
8457: PUSH
8458: LD_INT 2
8460: ARRAY
8461: PUSH
8462: LD_VAR 0 8
8466: ARRAY
8467: PPUSH
8468: LD_VAR 0 11
8472: PUSH
8473: LD_INT 2
8475: ARRAY
8476: PUSH
8477: LD_VAR 0 8
8481: PUSH
8482: LD_INT 1
8484: PLUS
8485: ARRAY
8486: PPUSH
8487: CALL_OW 297
8491: ST_TO_ADDR
// if x < p then
8492: LD_VAR 0 6
8496: PUSH
8497: LD_VAR 0 9
8501: LESS
8502: IFFALSE 8557
// begin p := x ;
8504: LD_ADDR_VAR 0 9
8508: PUSH
8509: LD_VAR 0 6
8513: ST_TO_ADDR
// e := [ tmp_path [ 2 ] [ c ] , tmp_path [ 2 ] [ c + 1 ] ] ;
8514: LD_ADDR_VAR 0 14
8518: PUSH
8519: LD_VAR 0 11
8523: PUSH
8524: LD_INT 2
8526: ARRAY
8527: PUSH
8528: LD_VAR 0 8
8532: ARRAY
8533: PUSH
8534: LD_VAR 0 11
8538: PUSH
8539: LD_INT 2
8541: ARRAY
8542: PUSH
8543: LD_VAR 0 8
8547: PUSH
8548: LD_INT 1
8550: PLUS
8551: ARRAY
8552: PUSH
8553: EMPTY
8554: LIST
8555: LIST
8556: ST_TO_ADDR
// end ; c = c + 2 ;
8557: LD_ADDR_VAR 0 8
8561: PUSH
8562: LD_VAR 0 8
8566: PUSH
8567: LD_INT 2
8569: PLUS
8570: ST_TO_ADDR
// end ;
8571: GO 8440
8573: POP
8574: POP
// repeat ComMoveXY ( unit , e [ 1 ] , e [ 2 ] ) ;
8575: LD_VAR 0 1
8579: PPUSH
8580: LD_VAR 0 14
8584: PUSH
8585: LD_INT 1
8587: ARRAY
8588: PPUSH
8589: LD_VAR 0 14
8593: PUSH
8594: LD_INT 2
8596: ARRAY
8597: PPUSH
8598: CALL_OW 111
// wait ( 0 0$1 ) ;
8602: LD_INT 35
8604: PPUSH
8605: CALL_OW 67
// until IsAt ( unit , e [ 1 ] , e [ 2 ] ) ;
8609: LD_VAR 0 1
8613: PPUSH
8614: LD_VAR 0 14
8618: PUSH
8619: LD_INT 1
8621: ARRAY
8622: PPUSH
8623: LD_VAR 0 14
8627: PUSH
8628: LD_INT 2
8630: ARRAY
8631: PPUSH
8632: CALL_OW 307
8636: IFFALSE 8575
// status = 1 ;
8638: LD_ADDR_VAR 0 12
8642: PUSH
8643: LD_INT 1
8645: ST_TO_ADDR
// end ; until IsDead ( unit ) ;
8646: LD_VAR 0 1
8650: PPUSH
8651: CALL_OW 301
8655: IFFALSE 7384
// end ;
8657: LD_VAR 0 4
8661: RET
// export function Talk ( units , type , sequence , sex , class , id , order_id ) ; var i , unit , tmp , unit_id , dialog_id , sex_id , class_id ; begin
8662: LD_INT 0
8664: PPUSH
8665: PPUSH
8666: PPUSH
8667: PPUSH
8668: PPUSH
8669: PPUSH
8670: PPUSH
8671: PPUSH
// if not units or not sequence or not sex in [ sex_male , sex_female , 0 ] or not id or not order_id then
8672: LD_VAR 0 1
8676: NOT
8677: PUSH
8678: LD_VAR 0 3
8682: NOT
8683: OR
8684: PUSH
8685: LD_VAR 0 4
8689: PUSH
8690: LD_INT 1
8692: PUSH
8693: LD_INT 2
8695: PUSH
8696: LD_INT 0
8698: PUSH
8699: EMPTY
8700: LIST
8701: LIST
8702: LIST
8703: IN
8704: NOT
8705: OR
8706: PUSH
8707: LD_VAR 0 6
8711: NOT
8712: OR
8713: PUSH
8714: LD_VAR 0 7
8718: NOT
8719: OR
8720: IFFALSE 8724
// exit ;
8722: GO 9115
// sex_id :=  ;
8724: LD_ADDR_VAR 0 14
8728: PUSH
8729: LD_STRING 
8731: ST_TO_ADDR
// case class of 1 :
8732: LD_VAR 0 5
8736: PUSH
8737: LD_INT 1
8739: DOUBLE
8740: EQUAL
8741: IFTRUE 8745
8743: GO 8756
8745: POP
// class_id := Sol ; 2 :
8746: LD_ADDR_VAR 0 15
8750: PUSH
8751: LD_STRING Sol
8753: ST_TO_ADDR
8754: GO 8814
8756: LD_INT 2
8758: DOUBLE
8759: EQUAL
8760: IFTRUE 8764
8762: GO 8775
8764: POP
// class_id := Eng ; 3 :
8765: LD_ADDR_VAR 0 15
8769: PUSH
8770: LD_STRING Eng
8772: ST_TO_ADDR
8773: GO 8814
8775: LD_INT 3
8777: DOUBLE
8778: EQUAL
8779: IFTRUE 8783
8781: GO 8794
8783: POP
// class_id := Mech ; 4 :
8784: LD_ADDR_VAR 0 15
8788: PUSH
8789: LD_STRING Mech
8791: ST_TO_ADDR
8792: GO 8814
8794: LD_INT 4
8796: DOUBLE
8797: EQUAL
8798: IFTRUE 8802
8800: GO 8813
8802: POP
// class_id := Sci ; end ;
8803: LD_ADDR_VAR 0 15
8807: PUSH
8808: LD_STRING Sci
8810: ST_TO_ADDR
8811: GO 8814
8813: POP
// tmp := UnitFilter ( units , [ f_class , class ] ) ;
8814: LD_ADDR_VAR 0 11
8818: PUSH
8819: LD_VAR 0 1
8823: PPUSH
8824: LD_INT 25
8826: PUSH
8827: LD_VAR 0 5
8831: PUSH
8832: EMPTY
8833: LIST
8834: LIST
8835: PPUSH
8836: CALL_OW 72
8840: ST_TO_ADDR
// if tmp then
8841: LD_VAR 0 11
8845: IFFALSE 8857
// units := tmp ;
8847: LD_ADDR_VAR 0 1
8851: PUSH
8852: LD_VAR 0 11
8856: ST_TO_ADDR
// if sex then
8857: LD_VAR 0 4
8861: IFFALSE 8917
// begin if sex = sex_female then
8863: LD_VAR 0 4
8867: PUSH
8868: LD_INT 2
8870: EQUAL
8871: IFFALSE 8881
// sex_id := F ;
8873: LD_ADDR_VAR 0 14
8877: PUSH
8878: LD_STRING F
8880: ST_TO_ADDR
// units := UnitFilter ( units , [ f_sex , sex ] ) ;
8881: LD_ADDR_VAR 0 1
8885: PUSH
8886: LD_VAR 0 1
8890: PPUSH
8891: LD_INT 26
8893: PUSH
8894: LD_VAR 0 4
8898: PUSH
8899: EMPTY
8900: LIST
8901: LIST
8902: PPUSH
8903: CALL_OW 72
8907: ST_TO_ADDR
// if not units then
8908: LD_VAR 0 1
8912: NOT
8913: IFFALSE 8917
// exit ;
8915: GO 9115
// end ; unit_id := id ;
8917: LD_ADDR_VAR 0 12
8921: PUSH
8922: LD_VAR 0 6
8926: ST_TO_ADDR
// if unit_id > units then
8927: LD_VAR 0 12
8931: PUSH
8932: LD_VAR 0 1
8936: GREATER
8937: IFFALSE 8947
// unit_id := 1 ;
8939: LD_ADDR_VAR 0 12
8943: PUSH
8944: LD_INT 1
8946: ST_TO_ADDR
// if not units [ unit_id ] then
8947: LD_VAR 0 1
8951: PUSH
8952: LD_VAR 0 12
8956: ARRAY
8957: NOT
8958: IFFALSE 8962
// exit ;
8960: GO 9115
// unit := units [ unit_id ] ;
8962: LD_ADDR_VAR 0 10
8966: PUSH
8967: LD_VAR 0 1
8971: PUSH
8972: LD_VAR 0 12
8976: ARRAY
8977: ST_TO_ADDR
// dialog_id := D & sequence & - & sex_id & class_id & id & - & order_id ;
8978: LD_ADDR_VAR 0 13
8982: PUSH
8983: LD_STRING D
8985: PUSH
8986: LD_VAR 0 3
8990: STR
8991: PUSH
8992: LD_STRING -
8994: STR
8995: PUSH
8996: LD_VAR 0 14
9000: STR
9001: PUSH
9002: LD_VAR 0 15
9006: STR
9007: PUSH
9008: LD_VAR 0 6
9012: STR
9013: PUSH
9014: LD_STRING -
9016: STR
9017: PUSH
9018: LD_VAR 0 7
9022: STR
9023: ST_TO_ADDR
// case type of 0 :
9024: LD_VAR 0 2
9028: PUSH
9029: LD_INT 0
9031: DOUBLE
9032: EQUAL
9033: IFTRUE 9037
9035: GO 9054
9037: POP
// Say ( unit , dialog_id ) ; 1 :
9038: LD_VAR 0 10
9042: PPUSH
9043: LD_VAR 0 13
9047: PPUSH
9048: CALL_OW 88
9052: GO 9105
9054: LD_INT 1
9056: DOUBLE
9057: EQUAL
9058: IFTRUE 9062
9060: GO 9079
9062: POP
// SayRadio ( unit , dialog_id ) ; 2 :
9063: LD_VAR 0 10
9067: PPUSH
9068: LD_VAR 0 13
9072: PPUSH
9073: CALL_OW 94
9077: GO 9105
9079: LD_INT 2
9081: DOUBLE
9082: EQUAL
9083: IFTRUE 9087
9085: GO 9104
9087: POP
// ForceSay ( unit , dialog_id ) ; end ;
9088: LD_VAR 0 10
9092: PPUSH
9093: LD_VAR 0 13
9097: PPUSH
9098: CALL_OW 91
9102: GO 9105
9104: POP
// result := unit ;
9105: LD_ADDR_VAR 0 8
9109: PUSH
9110: LD_VAR 0 10
9114: ST_TO_ADDR
// end ;
9115: LD_VAR 0 8
9119: RET
// export function Reindex ( array , i_from , i_to , direction ) ; var i , j , k , d , tmp , length ; begin
9120: LD_INT 0
9122: PPUSH
9123: PPUSH
9124: PPUSH
9125: PPUSH
9126: PPUSH
9127: PPUSH
9128: PPUSH
// result := array ;
9129: LD_ADDR_VAR 0 5
9133: PUSH
9134: LD_VAR 0 1
9138: ST_TO_ADDR
// if not array or not i_from or not i_to or i_from > array or i_to > array then
9139: LD_VAR 0 1
9143: NOT
9144: PUSH
9145: LD_VAR 0 2
9149: NOT
9150: OR
9151: PUSH
9152: LD_VAR 0 3
9156: NOT
9157: OR
9158: PUSH
9159: LD_VAR 0 2
9163: PUSH
9164: LD_VAR 0 1
9168: GREATER
9169: OR
9170: PUSH
9171: LD_VAR 0 3
9175: PUSH
9176: LD_VAR 0 1
9180: GREATER
9181: OR
9182: IFFALSE 9186
// exit ;
9184: GO 9482
// if direction then
9186: LD_VAR 0 4
9190: IFFALSE 9254
// begin d := 1 ;
9192: LD_ADDR_VAR 0 9
9196: PUSH
9197: LD_INT 1
9199: ST_TO_ADDR
// if i_from > i_to then
9200: LD_VAR 0 2
9204: PUSH
9205: LD_VAR 0 3
9209: GREATER
9210: IFFALSE 9236
// length := ( array - i_from ) + i_to else
9212: LD_ADDR_VAR 0 11
9216: PUSH
9217: LD_VAR 0 1
9221: PUSH
9222: LD_VAR 0 2
9226: MINUS
9227: PUSH
9228: LD_VAR 0 3
9232: PLUS
9233: ST_TO_ADDR
9234: GO 9252
// length := i_to - i_from ;
9236: LD_ADDR_VAR 0 11
9240: PUSH
9241: LD_VAR 0 3
9245: PUSH
9246: LD_VAR 0 2
9250: MINUS
9251: ST_TO_ADDR
// end else
9252: GO 9315
// begin d := - 1 ;
9254: LD_ADDR_VAR 0 9
9258: PUSH
9259: LD_INT 1
9261: NEG
9262: ST_TO_ADDR
// if i_from > i_to then
9263: LD_VAR 0 2
9267: PUSH
9268: LD_VAR 0 3
9272: GREATER
9273: IFFALSE 9293
// length := i_from - i_to else
9275: LD_ADDR_VAR 0 11
9279: PUSH
9280: LD_VAR 0 2
9284: PUSH
9285: LD_VAR 0 3
9289: MINUS
9290: ST_TO_ADDR
9291: GO 9315
// length := ( array - i_to ) + i_from ;
9293: LD_ADDR_VAR 0 11
9297: PUSH
9298: LD_VAR 0 1
9302: PUSH
9303: LD_VAR 0 3
9307: MINUS
9308: PUSH
9309: LD_VAR 0 2
9313: PLUS
9314: ST_TO_ADDR
// end ; if not length then
9315: LD_VAR 0 11
9319: NOT
9320: IFFALSE 9324
// exit ;
9322: GO 9482
// tmp := array ;
9324: LD_ADDR_VAR 0 10
9328: PUSH
9329: LD_VAR 0 1
9333: ST_TO_ADDR
// for i = 1 to length do
9334: LD_ADDR_VAR 0 6
9338: PUSH
9339: DOUBLE
9340: LD_INT 1
9342: DEC
9343: ST_TO_ADDR
9344: LD_VAR 0 11
9348: PUSH
9349: FOR_TO
9350: IFFALSE 9470
// begin for j = 1 to array do
9352: LD_ADDR_VAR 0 7
9356: PUSH
9357: DOUBLE
9358: LD_INT 1
9360: DEC
9361: ST_TO_ADDR
9362: LD_VAR 0 1
9366: PUSH
9367: FOR_TO
9368: IFFALSE 9456
// begin k := j + d ;
9370: LD_ADDR_VAR 0 8
9374: PUSH
9375: LD_VAR 0 7
9379: PUSH
9380: LD_VAR 0 9
9384: PLUS
9385: ST_TO_ADDR
// if k > array then
9386: LD_VAR 0 8
9390: PUSH
9391: LD_VAR 0 1
9395: GREATER
9396: IFFALSE 9406
// k := 1 ;
9398: LD_ADDR_VAR 0 8
9402: PUSH
9403: LD_INT 1
9405: ST_TO_ADDR
// if not k then
9406: LD_VAR 0 8
9410: NOT
9411: IFFALSE 9423
// k := array ;
9413: LD_ADDR_VAR 0 8
9417: PUSH
9418: LD_VAR 0 1
9422: ST_TO_ADDR
// tmp := Replace ( tmp , k , array [ j ] ) ;
9423: LD_ADDR_VAR 0 10
9427: PUSH
9428: LD_VAR 0 10
9432: PPUSH
9433: LD_VAR 0 8
9437: PPUSH
9438: LD_VAR 0 1
9442: PUSH
9443: LD_VAR 0 7
9447: ARRAY
9448: PPUSH
9449: CALL_OW 1
9453: ST_TO_ADDR
// end ;
9454: GO 9367
9456: POP
9457: POP
// array := tmp ;
9458: LD_ADDR_VAR 0 1
9462: PUSH
9463: LD_VAR 0 10
9467: ST_TO_ADDR
// end ;
9468: GO 9349
9470: POP
9471: POP
// result := array ;
9472: LD_ADDR_VAR 0 5
9476: PUSH
9477: LD_VAR 0 1
9481: ST_TO_ADDR
// end ;
9482: LD_VAR 0 5
9486: RET
// export function GetBuildingHexes ( btype , x , y , dir , nation , mode ) ; var i , temp_list , temp_list2 ; var DepotAm0 , DepotAm1 , DepotAm2 , DepotAm3 , DepotAm4 , DepotAm5 , DepotAr0 , DepotAr1 , DepotAr2 , DepotAr3 , DepotAr4 , DepotAr5 , DepotRu0 , DepotRu1 , DepotRu2 , DepotRu3 , DepotRu4 , DepotRu5 ; var Factory0 , Factory1 , Factory2 , Factory3 , Factory4 , Factory5 , Ext0 , Ext1 , Ext2 , Ext3 , Ext4 , Ext5 ; var Lab0 , Lab1 , Lab2 , Lab3 , Lab4 , Lab5 , ControlTower0 , ControlTower1 , ControlTower2 , ControlTower3 , ControlTower4 , ControlTower5 ; var Barracks0 , Barracks1 , Barracks2 , Barracks3 , Barracks4 , Barracks5 , Bunker0 , Bunker1 , Bunker2 , Bunker3 , Bunker4 , Bunker5 ; begin
9487: LD_INT 0
9489: PPUSH
9490: PPUSH
9491: PPUSH
9492: PPUSH
9493: PPUSH
9494: PPUSH
9495: PPUSH
9496: PPUSH
9497: PPUSH
9498: PPUSH
9499: PPUSH
9500: PPUSH
9501: PPUSH
9502: PPUSH
9503: PPUSH
9504: PPUSH
9505: PPUSH
9506: PPUSH
9507: PPUSH
9508: PPUSH
9509: PPUSH
9510: PPUSH
9511: PPUSH
9512: PPUSH
9513: PPUSH
9514: PPUSH
9515: PPUSH
9516: PPUSH
9517: PPUSH
9518: PPUSH
9519: PPUSH
9520: PPUSH
9521: PPUSH
9522: PPUSH
9523: PPUSH
9524: PPUSH
9525: PPUSH
9526: PPUSH
9527: PPUSH
9528: PPUSH
9529: PPUSH
9530: PPUSH
9531: PPUSH
9532: PPUSH
9533: PPUSH
9534: PPUSH
9535: PPUSH
9536: PPUSH
9537: PPUSH
9538: PPUSH
9539: PPUSH
9540: PPUSH
9541: PPUSH
9542: PPUSH
9543: PPUSH
9544: PPUSH
9545: PPUSH
9546: PPUSH
// result = [ ] ;
9547: LD_ADDR_VAR 0 7
9551: PUSH
9552: EMPTY
9553: ST_TO_ADDR
// temp_list = [ ] ;
9554: LD_ADDR_VAR 0 9
9558: PUSH
9559: EMPTY
9560: ST_TO_ADDR
// if not dir in [ 0 , 1 , 2 , 3 , 4 , 5 ] or ( btype in [ b_depot , b_warehouse ] and not nation in [ nation_american , nation_arabian , nation_russian ] ) then
9561: LD_VAR 0 4
9565: PUSH
9566: LD_INT 0
9568: PUSH
9569: LD_INT 1
9571: PUSH
9572: LD_INT 2
9574: PUSH
9575: LD_INT 3
9577: PUSH
9578: LD_INT 4
9580: PUSH
9581: LD_INT 5
9583: PUSH
9584: EMPTY
9585: LIST
9586: LIST
9587: LIST
9588: LIST
9589: LIST
9590: LIST
9591: IN
9592: NOT
9593: PUSH
9594: LD_VAR 0 1
9598: PUSH
9599: LD_INT 0
9601: PUSH
9602: LD_INT 1
9604: PUSH
9605: EMPTY
9606: LIST
9607: LIST
9608: IN
9609: PUSH
9610: LD_VAR 0 5
9614: PUSH
9615: LD_INT 1
9617: PUSH
9618: LD_INT 2
9620: PUSH
9621: LD_INT 3
9623: PUSH
9624: EMPTY
9625: LIST
9626: LIST
9627: LIST
9628: IN
9629: NOT
9630: AND
9631: OR
9632: IFFALSE 9636
// exit ;
9634: GO 28021
// if btype in [ b_lab , b_lab_half , b_lab_full , b_lab_biological , b_lab_computer , b_lab_opto , b_lab_siberium , b_lab_spacetime , b_lab_weapon ] then
9636: LD_VAR 0 1
9640: PUSH
9641: LD_INT 6
9643: PUSH
9644: LD_INT 7
9646: PUSH
9647: LD_INT 8
9649: PUSH
9650: LD_INT 13
9652: PUSH
9653: LD_INT 12
9655: PUSH
9656: LD_INT 15
9658: PUSH
9659: LD_INT 11
9661: PUSH
9662: LD_INT 14
9664: PUSH
9665: LD_INT 10
9667: PUSH
9668: EMPTY
9669: LIST
9670: LIST
9671: LIST
9672: LIST
9673: LIST
9674: LIST
9675: LIST
9676: LIST
9677: LIST
9678: IN
9679: IFFALSE 9689
// btype = b_lab ;
9681: LD_ADDR_VAR 0 1
9685: PUSH
9686: LD_INT 6
9688: ST_TO_ADDR
// if not mode in [ 0 , 1 , 2 ] or ( not btype in [ b_depot , b_warehouse , b_workshop , b_factory , b_lab , b_control_tower , b_armoury , b_barracks , b_breastwork , b_bunker , b_turret ] and mode = 1 ) or ( not btype in [ b_workshop , b_factory ] and mode = 2 ) then
9689: LD_VAR 0 6
9693: PUSH
9694: LD_INT 0
9696: PUSH
9697: LD_INT 1
9699: PUSH
9700: LD_INT 2
9702: PUSH
9703: EMPTY
9704: LIST
9705: LIST
9706: LIST
9707: IN
9708: NOT
9709: PUSH
9710: LD_VAR 0 1
9714: PUSH
9715: LD_INT 0
9717: PUSH
9718: LD_INT 1
9720: PUSH
9721: LD_INT 2
9723: PUSH
9724: LD_INT 3
9726: PUSH
9727: LD_INT 6
9729: PUSH
9730: LD_INT 36
9732: PUSH
9733: LD_INT 4
9735: PUSH
9736: LD_INT 5
9738: PUSH
9739: LD_INT 31
9741: PUSH
9742: LD_INT 32
9744: PUSH
9745: LD_INT 33
9747: PUSH
9748: EMPTY
9749: LIST
9750: LIST
9751: LIST
9752: LIST
9753: LIST
9754: LIST
9755: LIST
9756: LIST
9757: LIST
9758: LIST
9759: LIST
9760: IN
9761: NOT
9762: PUSH
9763: LD_VAR 0 6
9767: PUSH
9768: LD_INT 1
9770: EQUAL
9771: AND
9772: OR
9773: PUSH
9774: LD_VAR 0 1
9778: PUSH
9779: LD_INT 2
9781: PUSH
9782: LD_INT 3
9784: PUSH
9785: EMPTY
9786: LIST
9787: LIST
9788: IN
9789: NOT
9790: PUSH
9791: LD_VAR 0 6
9795: PUSH
9796: LD_INT 2
9798: EQUAL
9799: AND
9800: OR
9801: IFFALSE 9811
// mode = 0 ;
9803: LD_ADDR_VAR 0 6
9807: PUSH
9808: LD_INT 0
9810: ST_TO_ADDR
// case mode of 0 :
9811: LD_VAR 0 6
9815: PUSH
9816: LD_INT 0
9818: DOUBLE
9819: EQUAL
9820: IFTRUE 9824
9822: GO 21277
9824: POP
// begin DepotAm0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
9825: LD_ADDR_VAR 0 11
9829: PUSH
9830: LD_INT 0
9832: PUSH
9833: LD_INT 0
9835: PUSH
9836: EMPTY
9837: LIST
9838: LIST
9839: PUSH
9840: LD_INT 0
9842: PUSH
9843: LD_INT 1
9845: NEG
9846: PUSH
9847: EMPTY
9848: LIST
9849: LIST
9850: PUSH
9851: LD_INT 1
9853: PUSH
9854: LD_INT 0
9856: PUSH
9857: EMPTY
9858: LIST
9859: LIST
9860: PUSH
9861: LD_INT 1
9863: PUSH
9864: LD_INT 1
9866: PUSH
9867: EMPTY
9868: LIST
9869: LIST
9870: PUSH
9871: LD_INT 0
9873: PUSH
9874: LD_INT 1
9876: PUSH
9877: EMPTY
9878: LIST
9879: LIST
9880: PUSH
9881: LD_INT 1
9883: NEG
9884: PUSH
9885: LD_INT 0
9887: PUSH
9888: EMPTY
9889: LIST
9890: LIST
9891: PUSH
9892: LD_INT 1
9894: NEG
9895: PUSH
9896: LD_INT 1
9898: NEG
9899: PUSH
9900: EMPTY
9901: LIST
9902: LIST
9903: PUSH
9904: LD_INT 1
9906: NEG
9907: PUSH
9908: LD_INT 2
9910: NEG
9911: PUSH
9912: EMPTY
9913: LIST
9914: LIST
9915: PUSH
9916: LD_INT 0
9918: PUSH
9919: LD_INT 2
9921: NEG
9922: PUSH
9923: EMPTY
9924: LIST
9925: LIST
9926: PUSH
9927: LD_INT 1
9929: PUSH
9930: LD_INT 1
9932: NEG
9933: PUSH
9934: EMPTY
9935: LIST
9936: LIST
9937: PUSH
9938: LD_INT 1
9940: PUSH
9941: LD_INT 2
9943: PUSH
9944: EMPTY
9945: LIST
9946: LIST
9947: PUSH
9948: LD_INT 0
9950: PUSH
9951: LD_INT 2
9953: PUSH
9954: EMPTY
9955: LIST
9956: LIST
9957: PUSH
9958: LD_INT 1
9960: NEG
9961: PUSH
9962: LD_INT 1
9964: PUSH
9965: EMPTY
9966: LIST
9967: LIST
9968: PUSH
9969: LD_INT 1
9971: PUSH
9972: LD_INT 3
9974: PUSH
9975: EMPTY
9976: LIST
9977: LIST
9978: PUSH
9979: LD_INT 0
9981: PUSH
9982: LD_INT 3
9984: PUSH
9985: EMPTY
9986: LIST
9987: LIST
9988: PUSH
9989: LD_INT 1
9991: NEG
9992: PUSH
9993: LD_INT 2
9995: PUSH
9996: EMPTY
9997: LIST
9998: LIST
9999: PUSH
10000: EMPTY
10001: LIST
10002: LIST
10003: LIST
10004: LIST
10005: LIST
10006: LIST
10007: LIST
10008: LIST
10009: LIST
10010: LIST
10011: LIST
10012: LIST
10013: LIST
10014: LIST
10015: LIST
10016: LIST
10017: ST_TO_ADDR
// DepotAm1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
10018: LD_ADDR_VAR 0 12
10022: PUSH
10023: LD_INT 0
10025: PUSH
10026: LD_INT 0
10028: PUSH
10029: EMPTY
10030: LIST
10031: LIST
10032: PUSH
10033: LD_INT 0
10035: PUSH
10036: LD_INT 1
10038: NEG
10039: PUSH
10040: EMPTY
10041: LIST
10042: LIST
10043: PUSH
10044: LD_INT 1
10046: PUSH
10047: LD_INT 0
10049: PUSH
10050: EMPTY
10051: LIST
10052: LIST
10053: PUSH
10054: LD_INT 1
10056: PUSH
10057: LD_INT 1
10059: PUSH
10060: EMPTY
10061: LIST
10062: LIST
10063: PUSH
10064: LD_INT 0
10066: PUSH
10067: LD_INT 1
10069: PUSH
10070: EMPTY
10071: LIST
10072: LIST
10073: PUSH
10074: LD_INT 1
10076: NEG
10077: PUSH
10078: LD_INT 0
10080: PUSH
10081: EMPTY
10082: LIST
10083: LIST
10084: PUSH
10085: LD_INT 1
10087: NEG
10088: PUSH
10089: LD_INT 1
10091: NEG
10092: PUSH
10093: EMPTY
10094: LIST
10095: LIST
10096: PUSH
10097: LD_INT 1
10099: PUSH
10100: LD_INT 1
10102: NEG
10103: PUSH
10104: EMPTY
10105: LIST
10106: LIST
10107: PUSH
10108: LD_INT 2
10110: PUSH
10111: LD_INT 0
10113: PUSH
10114: EMPTY
10115: LIST
10116: LIST
10117: PUSH
10118: LD_INT 2
10120: PUSH
10121: LD_INT 1
10123: PUSH
10124: EMPTY
10125: LIST
10126: LIST
10127: PUSH
10128: LD_INT 1
10130: NEG
10131: PUSH
10132: LD_INT 1
10134: PUSH
10135: EMPTY
10136: LIST
10137: LIST
10138: PUSH
10139: LD_INT 2
10141: NEG
10142: PUSH
10143: LD_INT 0
10145: PUSH
10146: EMPTY
10147: LIST
10148: LIST
10149: PUSH
10150: LD_INT 2
10152: NEG
10153: PUSH
10154: LD_INT 1
10156: NEG
10157: PUSH
10158: EMPTY
10159: LIST
10160: LIST
10161: PUSH
10162: LD_INT 2
10164: NEG
10165: PUSH
10166: LD_INT 1
10168: PUSH
10169: EMPTY
10170: LIST
10171: LIST
10172: PUSH
10173: LD_INT 3
10175: NEG
10176: PUSH
10177: LD_INT 0
10179: PUSH
10180: EMPTY
10181: LIST
10182: LIST
10183: PUSH
10184: LD_INT 3
10186: NEG
10187: PUSH
10188: LD_INT 1
10190: NEG
10191: PUSH
10192: EMPTY
10193: LIST
10194: LIST
10195: PUSH
10196: EMPTY
10197: LIST
10198: LIST
10199: LIST
10200: LIST
10201: LIST
10202: LIST
10203: LIST
10204: LIST
10205: LIST
10206: LIST
10207: LIST
10208: LIST
10209: LIST
10210: LIST
10211: LIST
10212: LIST
10213: ST_TO_ADDR
// DepotAm2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
10214: LD_ADDR_VAR 0 13
10218: PUSH
10219: LD_INT 0
10221: PUSH
10222: LD_INT 0
10224: PUSH
10225: EMPTY
10226: LIST
10227: LIST
10228: PUSH
10229: LD_INT 0
10231: PUSH
10232: LD_INT 1
10234: NEG
10235: PUSH
10236: EMPTY
10237: LIST
10238: LIST
10239: PUSH
10240: LD_INT 1
10242: PUSH
10243: LD_INT 0
10245: PUSH
10246: EMPTY
10247: LIST
10248: LIST
10249: PUSH
10250: LD_INT 1
10252: PUSH
10253: LD_INT 1
10255: PUSH
10256: EMPTY
10257: LIST
10258: LIST
10259: PUSH
10260: LD_INT 0
10262: PUSH
10263: LD_INT 1
10265: PUSH
10266: EMPTY
10267: LIST
10268: LIST
10269: PUSH
10270: LD_INT 1
10272: NEG
10273: PUSH
10274: LD_INT 0
10276: PUSH
10277: EMPTY
10278: LIST
10279: LIST
10280: PUSH
10281: LD_INT 1
10283: NEG
10284: PUSH
10285: LD_INT 1
10287: NEG
10288: PUSH
10289: EMPTY
10290: LIST
10291: LIST
10292: PUSH
10293: LD_INT 1
10295: NEG
10296: PUSH
10297: LD_INT 2
10299: NEG
10300: PUSH
10301: EMPTY
10302: LIST
10303: LIST
10304: PUSH
10305: LD_INT 2
10307: PUSH
10308: LD_INT 1
10310: PUSH
10311: EMPTY
10312: LIST
10313: LIST
10314: PUSH
10315: LD_INT 2
10317: PUSH
10318: LD_INT 2
10320: PUSH
10321: EMPTY
10322: LIST
10323: LIST
10324: PUSH
10325: LD_INT 1
10327: PUSH
10328: LD_INT 2
10330: PUSH
10331: EMPTY
10332: LIST
10333: LIST
10334: PUSH
10335: LD_INT 2
10337: NEG
10338: PUSH
10339: LD_INT 1
10341: NEG
10342: PUSH
10343: EMPTY
10344: LIST
10345: LIST
10346: PUSH
10347: LD_INT 2
10349: NEG
10350: PUSH
10351: LD_INT 2
10353: NEG
10354: PUSH
10355: EMPTY
10356: LIST
10357: LIST
10358: PUSH
10359: LD_INT 2
10361: NEG
10362: PUSH
10363: LD_INT 3
10365: NEG
10366: PUSH
10367: EMPTY
10368: LIST
10369: LIST
10370: PUSH
10371: LD_INT 3
10373: NEG
10374: PUSH
10375: LD_INT 2
10377: NEG
10378: PUSH
10379: EMPTY
10380: LIST
10381: LIST
10382: PUSH
10383: LD_INT 3
10385: NEG
10386: PUSH
10387: LD_INT 3
10389: NEG
10390: PUSH
10391: EMPTY
10392: LIST
10393: LIST
10394: PUSH
10395: EMPTY
10396: LIST
10397: LIST
10398: LIST
10399: LIST
10400: LIST
10401: LIST
10402: LIST
10403: LIST
10404: LIST
10405: LIST
10406: LIST
10407: LIST
10408: LIST
10409: LIST
10410: LIST
10411: LIST
10412: ST_TO_ADDR
// DepotAm3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
10413: LD_ADDR_VAR 0 14
10417: PUSH
10418: LD_INT 0
10420: PUSH
10421: LD_INT 0
10423: PUSH
10424: EMPTY
10425: LIST
10426: LIST
10427: PUSH
10428: LD_INT 0
10430: PUSH
10431: LD_INT 1
10433: NEG
10434: PUSH
10435: EMPTY
10436: LIST
10437: LIST
10438: PUSH
10439: LD_INT 1
10441: PUSH
10442: LD_INT 0
10444: PUSH
10445: EMPTY
10446: LIST
10447: LIST
10448: PUSH
10449: LD_INT 1
10451: PUSH
10452: LD_INT 1
10454: PUSH
10455: EMPTY
10456: LIST
10457: LIST
10458: PUSH
10459: LD_INT 0
10461: PUSH
10462: LD_INT 1
10464: PUSH
10465: EMPTY
10466: LIST
10467: LIST
10468: PUSH
10469: LD_INT 1
10471: NEG
10472: PUSH
10473: LD_INT 0
10475: PUSH
10476: EMPTY
10477: LIST
10478: LIST
10479: PUSH
10480: LD_INT 1
10482: NEG
10483: PUSH
10484: LD_INT 1
10486: NEG
10487: PUSH
10488: EMPTY
10489: LIST
10490: LIST
10491: PUSH
10492: LD_INT 1
10494: NEG
10495: PUSH
10496: LD_INT 2
10498: NEG
10499: PUSH
10500: EMPTY
10501: LIST
10502: LIST
10503: PUSH
10504: LD_INT 0
10506: PUSH
10507: LD_INT 2
10509: NEG
10510: PUSH
10511: EMPTY
10512: LIST
10513: LIST
10514: PUSH
10515: LD_INT 1
10517: PUSH
10518: LD_INT 1
10520: NEG
10521: PUSH
10522: EMPTY
10523: LIST
10524: LIST
10525: PUSH
10526: LD_INT 1
10528: PUSH
10529: LD_INT 2
10531: PUSH
10532: EMPTY
10533: LIST
10534: LIST
10535: PUSH
10536: LD_INT 0
10538: PUSH
10539: LD_INT 2
10541: PUSH
10542: EMPTY
10543: LIST
10544: LIST
10545: PUSH
10546: LD_INT 1
10548: NEG
10549: PUSH
10550: LD_INT 1
10552: PUSH
10553: EMPTY
10554: LIST
10555: LIST
10556: PUSH
10557: LD_INT 1
10559: NEG
10560: PUSH
10561: LD_INT 3
10563: NEG
10564: PUSH
10565: EMPTY
10566: LIST
10567: LIST
10568: PUSH
10569: LD_INT 0
10571: PUSH
10572: LD_INT 3
10574: NEG
10575: PUSH
10576: EMPTY
10577: LIST
10578: LIST
10579: PUSH
10580: LD_INT 1
10582: PUSH
10583: LD_INT 2
10585: NEG
10586: PUSH
10587: EMPTY
10588: LIST
10589: LIST
10590: PUSH
10591: EMPTY
10592: LIST
10593: LIST
10594: LIST
10595: LIST
10596: LIST
10597: LIST
10598: LIST
10599: LIST
10600: LIST
10601: LIST
10602: LIST
10603: LIST
10604: LIST
10605: LIST
10606: LIST
10607: LIST
10608: ST_TO_ADDR
// DepotAm4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
10609: LD_ADDR_VAR 0 15
10613: PUSH
10614: LD_INT 0
10616: PUSH
10617: LD_INT 0
10619: PUSH
10620: EMPTY
10621: LIST
10622: LIST
10623: PUSH
10624: LD_INT 0
10626: PUSH
10627: LD_INT 1
10629: NEG
10630: PUSH
10631: EMPTY
10632: LIST
10633: LIST
10634: PUSH
10635: LD_INT 1
10637: PUSH
10638: LD_INT 0
10640: PUSH
10641: EMPTY
10642: LIST
10643: LIST
10644: PUSH
10645: LD_INT 1
10647: PUSH
10648: LD_INT 1
10650: PUSH
10651: EMPTY
10652: LIST
10653: LIST
10654: PUSH
10655: LD_INT 0
10657: PUSH
10658: LD_INT 1
10660: PUSH
10661: EMPTY
10662: LIST
10663: LIST
10664: PUSH
10665: LD_INT 1
10667: NEG
10668: PUSH
10669: LD_INT 0
10671: PUSH
10672: EMPTY
10673: LIST
10674: LIST
10675: PUSH
10676: LD_INT 1
10678: NEG
10679: PUSH
10680: LD_INT 1
10682: NEG
10683: PUSH
10684: EMPTY
10685: LIST
10686: LIST
10687: PUSH
10688: LD_INT 1
10690: PUSH
10691: LD_INT 1
10693: NEG
10694: PUSH
10695: EMPTY
10696: LIST
10697: LIST
10698: PUSH
10699: LD_INT 2
10701: PUSH
10702: LD_INT 0
10704: PUSH
10705: EMPTY
10706: LIST
10707: LIST
10708: PUSH
10709: LD_INT 2
10711: PUSH
10712: LD_INT 1
10714: PUSH
10715: EMPTY
10716: LIST
10717: LIST
10718: PUSH
10719: LD_INT 1
10721: NEG
10722: PUSH
10723: LD_INT 1
10725: PUSH
10726: EMPTY
10727: LIST
10728: LIST
10729: PUSH
10730: LD_INT 2
10732: NEG
10733: PUSH
10734: LD_INT 0
10736: PUSH
10737: EMPTY
10738: LIST
10739: LIST
10740: PUSH
10741: LD_INT 2
10743: NEG
10744: PUSH
10745: LD_INT 1
10747: NEG
10748: PUSH
10749: EMPTY
10750: LIST
10751: LIST
10752: PUSH
10753: LD_INT 2
10755: PUSH
10756: LD_INT 1
10758: NEG
10759: PUSH
10760: EMPTY
10761: LIST
10762: LIST
10763: PUSH
10764: LD_INT 3
10766: PUSH
10767: LD_INT 0
10769: PUSH
10770: EMPTY
10771: LIST
10772: LIST
10773: PUSH
10774: LD_INT 3
10776: PUSH
10777: LD_INT 1
10779: PUSH
10780: EMPTY
10781: LIST
10782: LIST
10783: PUSH
10784: EMPTY
10785: LIST
10786: LIST
10787: LIST
10788: LIST
10789: LIST
10790: LIST
10791: LIST
10792: LIST
10793: LIST
10794: LIST
10795: LIST
10796: LIST
10797: LIST
10798: LIST
10799: LIST
10800: LIST
10801: ST_TO_ADDR
// DepotAm5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
10802: LD_ADDR_VAR 0 16
10806: PUSH
10807: LD_INT 0
10809: PUSH
10810: LD_INT 0
10812: PUSH
10813: EMPTY
10814: LIST
10815: LIST
10816: PUSH
10817: LD_INT 0
10819: PUSH
10820: LD_INT 1
10822: NEG
10823: PUSH
10824: EMPTY
10825: LIST
10826: LIST
10827: PUSH
10828: LD_INT 1
10830: PUSH
10831: LD_INT 0
10833: PUSH
10834: EMPTY
10835: LIST
10836: LIST
10837: PUSH
10838: LD_INT 1
10840: PUSH
10841: LD_INT 1
10843: PUSH
10844: EMPTY
10845: LIST
10846: LIST
10847: PUSH
10848: LD_INT 0
10850: PUSH
10851: LD_INT 1
10853: PUSH
10854: EMPTY
10855: LIST
10856: LIST
10857: PUSH
10858: LD_INT 1
10860: NEG
10861: PUSH
10862: LD_INT 0
10864: PUSH
10865: EMPTY
10866: LIST
10867: LIST
10868: PUSH
10869: LD_INT 1
10871: NEG
10872: PUSH
10873: LD_INT 1
10875: NEG
10876: PUSH
10877: EMPTY
10878: LIST
10879: LIST
10880: PUSH
10881: LD_INT 1
10883: NEG
10884: PUSH
10885: LD_INT 2
10887: NEG
10888: PUSH
10889: EMPTY
10890: LIST
10891: LIST
10892: PUSH
10893: LD_INT 2
10895: PUSH
10896: LD_INT 1
10898: PUSH
10899: EMPTY
10900: LIST
10901: LIST
10902: PUSH
10903: LD_INT 2
10905: PUSH
10906: LD_INT 2
10908: PUSH
10909: EMPTY
10910: LIST
10911: LIST
10912: PUSH
10913: LD_INT 1
10915: PUSH
10916: LD_INT 2
10918: PUSH
10919: EMPTY
10920: LIST
10921: LIST
10922: PUSH
10923: LD_INT 2
10925: NEG
10926: PUSH
10927: LD_INT 1
10929: NEG
10930: PUSH
10931: EMPTY
10932: LIST
10933: LIST
10934: PUSH
10935: LD_INT 2
10937: NEG
10938: PUSH
10939: LD_INT 2
10941: NEG
10942: PUSH
10943: EMPTY
10944: LIST
10945: LIST
10946: PUSH
10947: LD_INT 3
10949: PUSH
10950: LD_INT 2
10952: PUSH
10953: EMPTY
10954: LIST
10955: LIST
10956: PUSH
10957: LD_INT 3
10959: PUSH
10960: LD_INT 3
10962: PUSH
10963: EMPTY
10964: LIST
10965: LIST
10966: PUSH
10967: LD_INT 2
10969: PUSH
10970: LD_INT 3
10972: PUSH
10973: EMPTY
10974: LIST
10975: LIST
10976: PUSH
10977: EMPTY
10978: LIST
10979: LIST
10980: LIST
10981: LIST
10982: LIST
10983: LIST
10984: LIST
10985: LIST
10986: LIST
10987: LIST
10988: LIST
10989: LIST
10990: LIST
10991: LIST
10992: LIST
10993: LIST
10994: ST_TO_ADDR
// DepotAr0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10995: LD_ADDR_VAR 0 17
10999: PUSH
11000: LD_INT 0
11002: PUSH
11003: LD_INT 0
11005: PUSH
11006: EMPTY
11007: LIST
11008: LIST
11009: PUSH
11010: LD_INT 0
11012: PUSH
11013: LD_INT 1
11015: NEG
11016: PUSH
11017: EMPTY
11018: LIST
11019: LIST
11020: PUSH
11021: LD_INT 1
11023: PUSH
11024: LD_INT 0
11026: PUSH
11027: EMPTY
11028: LIST
11029: LIST
11030: PUSH
11031: LD_INT 1
11033: PUSH
11034: LD_INT 1
11036: PUSH
11037: EMPTY
11038: LIST
11039: LIST
11040: PUSH
11041: LD_INT 0
11043: PUSH
11044: LD_INT 1
11046: PUSH
11047: EMPTY
11048: LIST
11049: LIST
11050: PUSH
11051: LD_INT 1
11053: NEG
11054: PUSH
11055: LD_INT 0
11057: PUSH
11058: EMPTY
11059: LIST
11060: LIST
11061: PUSH
11062: LD_INT 1
11064: NEG
11065: PUSH
11066: LD_INT 1
11068: NEG
11069: PUSH
11070: EMPTY
11071: LIST
11072: LIST
11073: PUSH
11074: LD_INT 1
11076: NEG
11077: PUSH
11078: LD_INT 2
11080: NEG
11081: PUSH
11082: EMPTY
11083: LIST
11084: LIST
11085: PUSH
11086: LD_INT 0
11088: PUSH
11089: LD_INT 2
11091: NEG
11092: PUSH
11093: EMPTY
11094: LIST
11095: LIST
11096: PUSH
11097: LD_INT 1
11099: PUSH
11100: LD_INT 1
11102: NEG
11103: PUSH
11104: EMPTY
11105: LIST
11106: LIST
11107: PUSH
11108: LD_INT 2
11110: PUSH
11111: LD_INT 0
11113: PUSH
11114: EMPTY
11115: LIST
11116: LIST
11117: PUSH
11118: LD_INT 2
11120: PUSH
11121: LD_INT 1
11123: PUSH
11124: EMPTY
11125: LIST
11126: LIST
11127: PUSH
11128: LD_INT 2
11130: PUSH
11131: LD_INT 2
11133: PUSH
11134: EMPTY
11135: LIST
11136: LIST
11137: PUSH
11138: LD_INT 1
11140: PUSH
11141: LD_INT 2
11143: PUSH
11144: EMPTY
11145: LIST
11146: LIST
11147: PUSH
11148: LD_INT 0
11150: PUSH
11151: LD_INT 2
11153: PUSH
11154: EMPTY
11155: LIST
11156: LIST
11157: PUSH
11158: LD_INT 1
11160: NEG
11161: PUSH
11162: LD_INT 1
11164: PUSH
11165: EMPTY
11166: LIST
11167: LIST
11168: PUSH
11169: LD_INT 2
11171: NEG
11172: PUSH
11173: LD_INT 0
11175: PUSH
11176: EMPTY
11177: LIST
11178: LIST
11179: PUSH
11180: LD_INT 2
11182: NEG
11183: PUSH
11184: LD_INT 1
11186: NEG
11187: PUSH
11188: EMPTY
11189: LIST
11190: LIST
11191: PUSH
11192: LD_INT 2
11194: NEG
11195: PUSH
11196: LD_INT 2
11198: NEG
11199: PUSH
11200: EMPTY
11201: LIST
11202: LIST
11203: PUSH
11204: EMPTY
11205: LIST
11206: LIST
11207: LIST
11208: LIST
11209: LIST
11210: LIST
11211: LIST
11212: LIST
11213: LIST
11214: LIST
11215: LIST
11216: LIST
11217: LIST
11218: LIST
11219: LIST
11220: LIST
11221: LIST
11222: LIST
11223: LIST
11224: ST_TO_ADDR
// DepotAr1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
11225: LD_ADDR_VAR 0 18
11229: PUSH
11230: LD_INT 0
11232: PUSH
11233: LD_INT 0
11235: PUSH
11236: EMPTY
11237: LIST
11238: LIST
11239: PUSH
11240: LD_INT 0
11242: PUSH
11243: LD_INT 1
11245: NEG
11246: PUSH
11247: EMPTY
11248: LIST
11249: LIST
11250: PUSH
11251: LD_INT 1
11253: PUSH
11254: LD_INT 0
11256: PUSH
11257: EMPTY
11258: LIST
11259: LIST
11260: PUSH
11261: LD_INT 1
11263: PUSH
11264: LD_INT 1
11266: PUSH
11267: EMPTY
11268: LIST
11269: LIST
11270: PUSH
11271: LD_INT 0
11273: PUSH
11274: LD_INT 1
11276: PUSH
11277: EMPTY
11278: LIST
11279: LIST
11280: PUSH
11281: LD_INT 1
11283: NEG
11284: PUSH
11285: LD_INT 0
11287: PUSH
11288: EMPTY
11289: LIST
11290: LIST
11291: PUSH
11292: LD_INT 1
11294: NEG
11295: PUSH
11296: LD_INT 1
11298: NEG
11299: PUSH
11300: EMPTY
11301: LIST
11302: LIST
11303: PUSH
11304: LD_INT 1
11306: NEG
11307: PUSH
11308: LD_INT 2
11310: NEG
11311: PUSH
11312: EMPTY
11313: LIST
11314: LIST
11315: PUSH
11316: LD_INT 0
11318: PUSH
11319: LD_INT 2
11321: NEG
11322: PUSH
11323: EMPTY
11324: LIST
11325: LIST
11326: PUSH
11327: LD_INT 1
11329: PUSH
11330: LD_INT 1
11332: NEG
11333: PUSH
11334: EMPTY
11335: LIST
11336: LIST
11337: PUSH
11338: LD_INT 2
11340: PUSH
11341: LD_INT 0
11343: PUSH
11344: EMPTY
11345: LIST
11346: LIST
11347: PUSH
11348: LD_INT 2
11350: PUSH
11351: LD_INT 1
11353: PUSH
11354: EMPTY
11355: LIST
11356: LIST
11357: PUSH
11358: LD_INT 2
11360: PUSH
11361: LD_INT 2
11363: PUSH
11364: EMPTY
11365: LIST
11366: LIST
11367: PUSH
11368: LD_INT 1
11370: PUSH
11371: LD_INT 2
11373: PUSH
11374: EMPTY
11375: LIST
11376: LIST
11377: PUSH
11378: LD_INT 0
11380: PUSH
11381: LD_INT 2
11383: PUSH
11384: EMPTY
11385: LIST
11386: LIST
11387: PUSH
11388: LD_INT 1
11390: NEG
11391: PUSH
11392: LD_INT 1
11394: PUSH
11395: EMPTY
11396: LIST
11397: LIST
11398: PUSH
11399: LD_INT 2
11401: NEG
11402: PUSH
11403: LD_INT 0
11405: PUSH
11406: EMPTY
11407: LIST
11408: LIST
11409: PUSH
11410: LD_INT 2
11412: NEG
11413: PUSH
11414: LD_INT 1
11416: NEG
11417: PUSH
11418: EMPTY
11419: LIST
11420: LIST
11421: PUSH
11422: LD_INT 2
11424: NEG
11425: PUSH
11426: LD_INT 2
11428: NEG
11429: PUSH
11430: EMPTY
11431: LIST
11432: LIST
11433: PUSH
11434: EMPTY
11435: LIST
11436: LIST
11437: LIST
11438: LIST
11439: LIST
11440: LIST
11441: LIST
11442: LIST
11443: LIST
11444: LIST
11445: LIST
11446: LIST
11447: LIST
11448: LIST
11449: LIST
11450: LIST
11451: LIST
11452: LIST
11453: LIST
11454: ST_TO_ADDR
// DepotAr2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
11455: LD_ADDR_VAR 0 19
11459: PUSH
11460: LD_INT 0
11462: PUSH
11463: LD_INT 0
11465: PUSH
11466: EMPTY
11467: LIST
11468: LIST
11469: PUSH
11470: LD_INT 0
11472: PUSH
11473: LD_INT 1
11475: NEG
11476: PUSH
11477: EMPTY
11478: LIST
11479: LIST
11480: PUSH
11481: LD_INT 1
11483: PUSH
11484: LD_INT 0
11486: PUSH
11487: EMPTY
11488: LIST
11489: LIST
11490: PUSH
11491: LD_INT 1
11493: PUSH
11494: LD_INT 1
11496: PUSH
11497: EMPTY
11498: LIST
11499: LIST
11500: PUSH
11501: LD_INT 0
11503: PUSH
11504: LD_INT 1
11506: PUSH
11507: EMPTY
11508: LIST
11509: LIST
11510: PUSH
11511: LD_INT 1
11513: NEG
11514: PUSH
11515: LD_INT 0
11517: PUSH
11518: EMPTY
11519: LIST
11520: LIST
11521: PUSH
11522: LD_INT 1
11524: NEG
11525: PUSH
11526: LD_INT 1
11528: NEG
11529: PUSH
11530: EMPTY
11531: LIST
11532: LIST
11533: PUSH
11534: LD_INT 1
11536: NEG
11537: PUSH
11538: LD_INT 2
11540: NEG
11541: PUSH
11542: EMPTY
11543: LIST
11544: LIST
11545: PUSH
11546: LD_INT 0
11548: PUSH
11549: LD_INT 2
11551: NEG
11552: PUSH
11553: EMPTY
11554: LIST
11555: LIST
11556: PUSH
11557: LD_INT 1
11559: PUSH
11560: LD_INT 1
11562: NEG
11563: PUSH
11564: EMPTY
11565: LIST
11566: LIST
11567: PUSH
11568: LD_INT 2
11570: PUSH
11571: LD_INT 0
11573: PUSH
11574: EMPTY
11575: LIST
11576: LIST
11577: PUSH
11578: LD_INT 2
11580: PUSH
11581: LD_INT 1
11583: PUSH
11584: EMPTY
11585: LIST
11586: LIST
11587: PUSH
11588: LD_INT 2
11590: PUSH
11591: LD_INT 2
11593: PUSH
11594: EMPTY
11595: LIST
11596: LIST
11597: PUSH
11598: LD_INT 1
11600: PUSH
11601: LD_INT 2
11603: PUSH
11604: EMPTY
11605: LIST
11606: LIST
11607: PUSH
11608: LD_INT 0
11610: PUSH
11611: LD_INT 2
11613: PUSH
11614: EMPTY
11615: LIST
11616: LIST
11617: PUSH
11618: LD_INT 1
11620: NEG
11621: PUSH
11622: LD_INT 1
11624: PUSH
11625: EMPTY
11626: LIST
11627: LIST
11628: PUSH
11629: LD_INT 2
11631: NEG
11632: PUSH
11633: LD_INT 0
11635: PUSH
11636: EMPTY
11637: LIST
11638: LIST
11639: PUSH
11640: LD_INT 2
11642: NEG
11643: PUSH
11644: LD_INT 1
11646: NEG
11647: PUSH
11648: EMPTY
11649: LIST
11650: LIST
11651: PUSH
11652: LD_INT 2
11654: NEG
11655: PUSH
11656: LD_INT 2
11658: NEG
11659: PUSH
11660: EMPTY
11661: LIST
11662: LIST
11663: PUSH
11664: EMPTY
11665: LIST
11666: LIST
11667: LIST
11668: LIST
11669: LIST
11670: LIST
11671: LIST
11672: LIST
11673: LIST
11674: LIST
11675: LIST
11676: LIST
11677: LIST
11678: LIST
11679: LIST
11680: LIST
11681: LIST
11682: LIST
11683: LIST
11684: ST_TO_ADDR
// DepotAr3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
11685: LD_ADDR_VAR 0 20
11689: PUSH
11690: LD_INT 0
11692: PUSH
11693: LD_INT 0
11695: PUSH
11696: EMPTY
11697: LIST
11698: LIST
11699: PUSH
11700: LD_INT 0
11702: PUSH
11703: LD_INT 1
11705: NEG
11706: PUSH
11707: EMPTY
11708: LIST
11709: LIST
11710: PUSH
11711: LD_INT 1
11713: PUSH
11714: LD_INT 0
11716: PUSH
11717: EMPTY
11718: LIST
11719: LIST
11720: PUSH
11721: LD_INT 1
11723: PUSH
11724: LD_INT 1
11726: PUSH
11727: EMPTY
11728: LIST
11729: LIST
11730: PUSH
11731: LD_INT 0
11733: PUSH
11734: LD_INT 1
11736: PUSH
11737: EMPTY
11738: LIST
11739: LIST
11740: PUSH
11741: LD_INT 1
11743: NEG
11744: PUSH
11745: LD_INT 0
11747: PUSH
11748: EMPTY
11749: LIST
11750: LIST
11751: PUSH
11752: LD_INT 1
11754: NEG
11755: PUSH
11756: LD_INT 1
11758: NEG
11759: PUSH
11760: EMPTY
11761: LIST
11762: LIST
11763: PUSH
11764: LD_INT 1
11766: NEG
11767: PUSH
11768: LD_INT 2
11770: NEG
11771: PUSH
11772: EMPTY
11773: LIST
11774: LIST
11775: PUSH
11776: LD_INT 0
11778: PUSH
11779: LD_INT 2
11781: NEG
11782: PUSH
11783: EMPTY
11784: LIST
11785: LIST
11786: PUSH
11787: LD_INT 1
11789: PUSH
11790: LD_INT 1
11792: NEG
11793: PUSH
11794: EMPTY
11795: LIST
11796: LIST
11797: PUSH
11798: LD_INT 2
11800: PUSH
11801: LD_INT 0
11803: PUSH
11804: EMPTY
11805: LIST
11806: LIST
11807: PUSH
11808: LD_INT 2
11810: PUSH
11811: LD_INT 1
11813: PUSH
11814: EMPTY
11815: LIST
11816: LIST
11817: PUSH
11818: LD_INT 2
11820: PUSH
11821: LD_INT 2
11823: PUSH
11824: EMPTY
11825: LIST
11826: LIST
11827: PUSH
11828: LD_INT 1
11830: PUSH
11831: LD_INT 2
11833: PUSH
11834: EMPTY
11835: LIST
11836: LIST
11837: PUSH
11838: LD_INT 0
11840: PUSH
11841: LD_INT 2
11843: PUSH
11844: EMPTY
11845: LIST
11846: LIST
11847: PUSH
11848: LD_INT 1
11850: NEG
11851: PUSH
11852: LD_INT 1
11854: PUSH
11855: EMPTY
11856: LIST
11857: LIST
11858: PUSH
11859: LD_INT 2
11861: NEG
11862: PUSH
11863: LD_INT 0
11865: PUSH
11866: EMPTY
11867: LIST
11868: LIST
11869: PUSH
11870: LD_INT 2
11872: NEG
11873: PUSH
11874: LD_INT 1
11876: NEG
11877: PUSH
11878: EMPTY
11879: LIST
11880: LIST
11881: PUSH
11882: LD_INT 2
11884: NEG
11885: PUSH
11886: LD_INT 2
11888: NEG
11889: PUSH
11890: EMPTY
11891: LIST
11892: LIST
11893: PUSH
11894: EMPTY
11895: LIST
11896: LIST
11897: LIST
11898: LIST
11899: LIST
11900: LIST
11901: LIST
11902: LIST
11903: LIST
11904: LIST
11905: LIST
11906: LIST
11907: LIST
11908: LIST
11909: LIST
11910: LIST
11911: LIST
11912: LIST
11913: LIST
11914: ST_TO_ADDR
// DepotAr4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
11915: LD_ADDR_VAR 0 21
11919: PUSH
11920: LD_INT 0
11922: PUSH
11923: LD_INT 0
11925: PUSH
11926: EMPTY
11927: LIST
11928: LIST
11929: PUSH
11930: LD_INT 0
11932: PUSH
11933: LD_INT 1
11935: NEG
11936: PUSH
11937: EMPTY
11938: LIST
11939: LIST
11940: PUSH
11941: LD_INT 1
11943: PUSH
11944: LD_INT 0
11946: PUSH
11947: EMPTY
11948: LIST
11949: LIST
11950: PUSH
11951: LD_INT 1
11953: PUSH
11954: LD_INT 1
11956: PUSH
11957: EMPTY
11958: LIST
11959: LIST
11960: PUSH
11961: LD_INT 0
11963: PUSH
11964: LD_INT 1
11966: PUSH
11967: EMPTY
11968: LIST
11969: LIST
11970: PUSH
11971: LD_INT 1
11973: NEG
11974: PUSH
11975: LD_INT 0
11977: PUSH
11978: EMPTY
11979: LIST
11980: LIST
11981: PUSH
11982: LD_INT 1
11984: NEG
11985: PUSH
11986: LD_INT 1
11988: NEG
11989: PUSH
11990: EMPTY
11991: LIST
11992: LIST
11993: PUSH
11994: LD_INT 1
11996: NEG
11997: PUSH
11998: LD_INT 2
12000: NEG
12001: PUSH
12002: EMPTY
12003: LIST
12004: LIST
12005: PUSH
12006: LD_INT 0
12008: PUSH
12009: LD_INT 2
12011: NEG
12012: PUSH
12013: EMPTY
12014: LIST
12015: LIST
12016: PUSH
12017: LD_INT 1
12019: PUSH
12020: LD_INT 1
12022: NEG
12023: PUSH
12024: EMPTY
12025: LIST
12026: LIST
12027: PUSH
12028: LD_INT 2
12030: PUSH
12031: LD_INT 0
12033: PUSH
12034: EMPTY
12035: LIST
12036: LIST
12037: PUSH
12038: LD_INT 2
12040: PUSH
12041: LD_INT 1
12043: PUSH
12044: EMPTY
12045: LIST
12046: LIST
12047: PUSH
12048: LD_INT 2
12050: PUSH
12051: LD_INT 2
12053: PUSH
12054: EMPTY
12055: LIST
12056: LIST
12057: PUSH
12058: LD_INT 1
12060: PUSH
12061: LD_INT 2
12063: PUSH
12064: EMPTY
12065: LIST
12066: LIST
12067: PUSH
12068: LD_INT 0
12070: PUSH
12071: LD_INT 2
12073: PUSH
12074: EMPTY
12075: LIST
12076: LIST
12077: PUSH
12078: LD_INT 1
12080: NEG
12081: PUSH
12082: LD_INT 1
12084: PUSH
12085: EMPTY
12086: LIST
12087: LIST
12088: PUSH
12089: LD_INT 2
12091: NEG
12092: PUSH
12093: LD_INT 0
12095: PUSH
12096: EMPTY
12097: LIST
12098: LIST
12099: PUSH
12100: LD_INT 2
12102: NEG
12103: PUSH
12104: LD_INT 1
12106: NEG
12107: PUSH
12108: EMPTY
12109: LIST
12110: LIST
12111: PUSH
12112: LD_INT 2
12114: NEG
12115: PUSH
12116: LD_INT 2
12118: NEG
12119: PUSH
12120: EMPTY
12121: LIST
12122: LIST
12123: PUSH
12124: EMPTY
12125: LIST
12126: LIST
12127: LIST
12128: LIST
12129: LIST
12130: LIST
12131: LIST
12132: LIST
12133: LIST
12134: LIST
12135: LIST
12136: LIST
12137: LIST
12138: LIST
12139: LIST
12140: LIST
12141: LIST
12142: LIST
12143: LIST
12144: ST_TO_ADDR
// DepotAr5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
12145: LD_ADDR_VAR 0 22
12149: PUSH
12150: LD_INT 0
12152: PUSH
12153: LD_INT 0
12155: PUSH
12156: EMPTY
12157: LIST
12158: LIST
12159: PUSH
12160: LD_INT 0
12162: PUSH
12163: LD_INT 1
12165: NEG
12166: PUSH
12167: EMPTY
12168: LIST
12169: LIST
12170: PUSH
12171: LD_INT 1
12173: PUSH
12174: LD_INT 0
12176: PUSH
12177: EMPTY
12178: LIST
12179: LIST
12180: PUSH
12181: LD_INT 1
12183: PUSH
12184: LD_INT 1
12186: PUSH
12187: EMPTY
12188: LIST
12189: LIST
12190: PUSH
12191: LD_INT 0
12193: PUSH
12194: LD_INT 1
12196: PUSH
12197: EMPTY
12198: LIST
12199: LIST
12200: PUSH
12201: LD_INT 1
12203: NEG
12204: PUSH
12205: LD_INT 0
12207: PUSH
12208: EMPTY
12209: LIST
12210: LIST
12211: PUSH
12212: LD_INT 1
12214: NEG
12215: PUSH
12216: LD_INT 1
12218: NEG
12219: PUSH
12220: EMPTY
12221: LIST
12222: LIST
12223: PUSH
12224: LD_INT 1
12226: NEG
12227: PUSH
12228: LD_INT 2
12230: NEG
12231: PUSH
12232: EMPTY
12233: LIST
12234: LIST
12235: PUSH
12236: LD_INT 0
12238: PUSH
12239: LD_INT 2
12241: NEG
12242: PUSH
12243: EMPTY
12244: LIST
12245: LIST
12246: PUSH
12247: LD_INT 1
12249: PUSH
12250: LD_INT 1
12252: NEG
12253: PUSH
12254: EMPTY
12255: LIST
12256: LIST
12257: PUSH
12258: LD_INT 2
12260: PUSH
12261: LD_INT 0
12263: PUSH
12264: EMPTY
12265: LIST
12266: LIST
12267: PUSH
12268: LD_INT 2
12270: PUSH
12271: LD_INT 1
12273: PUSH
12274: EMPTY
12275: LIST
12276: LIST
12277: PUSH
12278: LD_INT 2
12280: PUSH
12281: LD_INT 2
12283: PUSH
12284: EMPTY
12285: LIST
12286: LIST
12287: PUSH
12288: LD_INT 1
12290: PUSH
12291: LD_INT 2
12293: PUSH
12294: EMPTY
12295: LIST
12296: LIST
12297: PUSH
12298: LD_INT 0
12300: PUSH
12301: LD_INT 2
12303: PUSH
12304: EMPTY
12305: LIST
12306: LIST
12307: PUSH
12308: LD_INT 1
12310: NEG
12311: PUSH
12312: LD_INT 1
12314: PUSH
12315: EMPTY
12316: LIST
12317: LIST
12318: PUSH
12319: LD_INT 2
12321: NEG
12322: PUSH
12323: LD_INT 0
12325: PUSH
12326: EMPTY
12327: LIST
12328: LIST
12329: PUSH
12330: LD_INT 2
12332: NEG
12333: PUSH
12334: LD_INT 1
12336: NEG
12337: PUSH
12338: EMPTY
12339: LIST
12340: LIST
12341: PUSH
12342: LD_INT 2
12344: NEG
12345: PUSH
12346: LD_INT 2
12348: NEG
12349: PUSH
12350: EMPTY
12351: LIST
12352: LIST
12353: PUSH
12354: EMPTY
12355: LIST
12356: LIST
12357: LIST
12358: LIST
12359: LIST
12360: LIST
12361: LIST
12362: LIST
12363: LIST
12364: LIST
12365: LIST
12366: LIST
12367: LIST
12368: LIST
12369: LIST
12370: LIST
12371: LIST
12372: LIST
12373: LIST
12374: ST_TO_ADDR
// DepotRu0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 2 , - 1 ] ] ;
12375: LD_ADDR_VAR 0 23
12379: PUSH
12380: LD_INT 0
12382: PUSH
12383: LD_INT 0
12385: PUSH
12386: EMPTY
12387: LIST
12388: LIST
12389: PUSH
12390: LD_INT 0
12392: PUSH
12393: LD_INT 1
12395: NEG
12396: PUSH
12397: EMPTY
12398: LIST
12399: LIST
12400: PUSH
12401: LD_INT 1
12403: PUSH
12404: LD_INT 0
12406: PUSH
12407: EMPTY
12408: LIST
12409: LIST
12410: PUSH
12411: LD_INT 1
12413: PUSH
12414: LD_INT 1
12416: PUSH
12417: EMPTY
12418: LIST
12419: LIST
12420: PUSH
12421: LD_INT 0
12423: PUSH
12424: LD_INT 1
12426: PUSH
12427: EMPTY
12428: LIST
12429: LIST
12430: PUSH
12431: LD_INT 1
12433: NEG
12434: PUSH
12435: LD_INT 0
12437: PUSH
12438: EMPTY
12439: LIST
12440: LIST
12441: PUSH
12442: LD_INT 1
12444: NEG
12445: PUSH
12446: LD_INT 1
12448: NEG
12449: PUSH
12450: EMPTY
12451: LIST
12452: LIST
12453: PUSH
12454: LD_INT 1
12456: NEG
12457: PUSH
12458: LD_INT 2
12460: NEG
12461: PUSH
12462: EMPTY
12463: LIST
12464: LIST
12465: PUSH
12466: LD_INT 0
12468: PUSH
12469: LD_INT 2
12471: NEG
12472: PUSH
12473: EMPTY
12474: LIST
12475: LIST
12476: PUSH
12477: LD_INT 1
12479: PUSH
12480: LD_INT 1
12482: NEG
12483: PUSH
12484: EMPTY
12485: LIST
12486: LIST
12487: PUSH
12488: LD_INT 2
12490: PUSH
12491: LD_INT 0
12493: PUSH
12494: EMPTY
12495: LIST
12496: LIST
12497: PUSH
12498: LD_INT 2
12500: PUSH
12501: LD_INT 1
12503: PUSH
12504: EMPTY
12505: LIST
12506: LIST
12507: PUSH
12508: LD_INT 2
12510: PUSH
12511: LD_INT 2
12513: PUSH
12514: EMPTY
12515: LIST
12516: LIST
12517: PUSH
12518: LD_INT 1
12520: PUSH
12521: LD_INT 2
12523: PUSH
12524: EMPTY
12525: LIST
12526: LIST
12527: PUSH
12528: LD_INT 0
12530: PUSH
12531: LD_INT 2
12533: PUSH
12534: EMPTY
12535: LIST
12536: LIST
12537: PUSH
12538: LD_INT 1
12540: NEG
12541: PUSH
12542: LD_INT 1
12544: PUSH
12545: EMPTY
12546: LIST
12547: LIST
12548: PUSH
12549: LD_INT 2
12551: NEG
12552: PUSH
12553: LD_INT 0
12555: PUSH
12556: EMPTY
12557: LIST
12558: LIST
12559: PUSH
12560: LD_INT 2
12562: NEG
12563: PUSH
12564: LD_INT 1
12566: NEG
12567: PUSH
12568: EMPTY
12569: LIST
12570: LIST
12571: PUSH
12572: LD_INT 2
12574: NEG
12575: PUSH
12576: LD_INT 2
12578: NEG
12579: PUSH
12580: EMPTY
12581: LIST
12582: LIST
12583: PUSH
12584: LD_INT 2
12586: NEG
12587: PUSH
12588: LD_INT 3
12590: NEG
12591: PUSH
12592: EMPTY
12593: LIST
12594: LIST
12595: PUSH
12596: LD_INT 1
12598: NEG
12599: PUSH
12600: LD_INT 3
12602: NEG
12603: PUSH
12604: EMPTY
12605: LIST
12606: LIST
12607: PUSH
12608: LD_INT 1
12610: PUSH
12611: LD_INT 2
12613: NEG
12614: PUSH
12615: EMPTY
12616: LIST
12617: LIST
12618: PUSH
12619: LD_INT 2
12621: PUSH
12622: LD_INT 1
12624: NEG
12625: PUSH
12626: EMPTY
12627: LIST
12628: LIST
12629: PUSH
12630: EMPTY
12631: LIST
12632: LIST
12633: LIST
12634: LIST
12635: LIST
12636: LIST
12637: LIST
12638: LIST
12639: LIST
12640: LIST
12641: LIST
12642: LIST
12643: LIST
12644: LIST
12645: LIST
12646: LIST
12647: LIST
12648: LIST
12649: LIST
12650: LIST
12651: LIST
12652: LIST
12653: LIST
12654: ST_TO_ADDR
// DepotRu1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 1 , - 2 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 3 , 2 ] ] ;
12655: LD_ADDR_VAR 0 24
12659: PUSH
12660: LD_INT 0
12662: PUSH
12663: LD_INT 0
12665: PUSH
12666: EMPTY
12667: LIST
12668: LIST
12669: PUSH
12670: LD_INT 0
12672: PUSH
12673: LD_INT 1
12675: NEG
12676: PUSH
12677: EMPTY
12678: LIST
12679: LIST
12680: PUSH
12681: LD_INT 1
12683: PUSH
12684: LD_INT 0
12686: PUSH
12687: EMPTY
12688: LIST
12689: LIST
12690: PUSH
12691: LD_INT 1
12693: PUSH
12694: LD_INT 1
12696: PUSH
12697: EMPTY
12698: LIST
12699: LIST
12700: PUSH
12701: LD_INT 0
12703: PUSH
12704: LD_INT 1
12706: PUSH
12707: EMPTY
12708: LIST
12709: LIST
12710: PUSH
12711: LD_INT 1
12713: NEG
12714: PUSH
12715: LD_INT 0
12717: PUSH
12718: EMPTY
12719: LIST
12720: LIST
12721: PUSH
12722: LD_INT 1
12724: NEG
12725: PUSH
12726: LD_INT 1
12728: NEG
12729: PUSH
12730: EMPTY
12731: LIST
12732: LIST
12733: PUSH
12734: LD_INT 1
12736: NEG
12737: PUSH
12738: LD_INT 2
12740: NEG
12741: PUSH
12742: EMPTY
12743: LIST
12744: LIST
12745: PUSH
12746: LD_INT 0
12748: PUSH
12749: LD_INT 2
12751: NEG
12752: PUSH
12753: EMPTY
12754: LIST
12755: LIST
12756: PUSH
12757: LD_INT 1
12759: PUSH
12760: LD_INT 1
12762: NEG
12763: PUSH
12764: EMPTY
12765: LIST
12766: LIST
12767: PUSH
12768: LD_INT 2
12770: PUSH
12771: LD_INT 0
12773: PUSH
12774: EMPTY
12775: LIST
12776: LIST
12777: PUSH
12778: LD_INT 2
12780: PUSH
12781: LD_INT 1
12783: PUSH
12784: EMPTY
12785: LIST
12786: LIST
12787: PUSH
12788: LD_INT 2
12790: PUSH
12791: LD_INT 2
12793: PUSH
12794: EMPTY
12795: LIST
12796: LIST
12797: PUSH
12798: LD_INT 1
12800: PUSH
12801: LD_INT 2
12803: PUSH
12804: EMPTY
12805: LIST
12806: LIST
12807: PUSH
12808: LD_INT 0
12810: PUSH
12811: LD_INT 2
12813: PUSH
12814: EMPTY
12815: LIST
12816: LIST
12817: PUSH
12818: LD_INT 1
12820: NEG
12821: PUSH
12822: LD_INT 1
12824: PUSH
12825: EMPTY
12826: LIST
12827: LIST
12828: PUSH
12829: LD_INT 2
12831: NEG
12832: PUSH
12833: LD_INT 0
12835: PUSH
12836: EMPTY
12837: LIST
12838: LIST
12839: PUSH
12840: LD_INT 2
12842: NEG
12843: PUSH
12844: LD_INT 1
12846: NEG
12847: PUSH
12848: EMPTY
12849: LIST
12850: LIST
12851: PUSH
12852: LD_INT 2
12854: NEG
12855: PUSH
12856: LD_INT 2
12858: NEG
12859: PUSH
12860: EMPTY
12861: LIST
12862: LIST
12863: PUSH
12864: LD_INT 1
12866: PUSH
12867: LD_INT 2
12869: NEG
12870: PUSH
12871: EMPTY
12872: LIST
12873: LIST
12874: PUSH
12875: LD_INT 2
12877: PUSH
12878: LD_INT 1
12880: NEG
12881: PUSH
12882: EMPTY
12883: LIST
12884: LIST
12885: PUSH
12886: LD_INT 3
12888: PUSH
12889: LD_INT 1
12891: PUSH
12892: EMPTY
12893: LIST
12894: LIST
12895: PUSH
12896: LD_INT 3
12898: PUSH
12899: LD_INT 2
12901: PUSH
12902: EMPTY
12903: LIST
12904: LIST
12905: PUSH
12906: EMPTY
12907: LIST
12908: LIST
12909: LIST
12910: LIST
12911: LIST
12912: LIST
12913: LIST
12914: LIST
12915: LIST
12916: LIST
12917: LIST
12918: LIST
12919: LIST
12920: LIST
12921: LIST
12922: LIST
12923: LIST
12924: LIST
12925: LIST
12926: LIST
12927: LIST
12928: LIST
12929: LIST
12930: ST_TO_ADDR
// DepotRu2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 3 , 1 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ 1 , 3 ] ] ;
12931: LD_ADDR_VAR 0 25
12935: PUSH
12936: LD_INT 0
12938: PUSH
12939: LD_INT 0
12941: PUSH
12942: EMPTY
12943: LIST
12944: LIST
12945: PUSH
12946: LD_INT 0
12948: PUSH
12949: LD_INT 1
12951: NEG
12952: PUSH
12953: EMPTY
12954: LIST
12955: LIST
12956: PUSH
12957: LD_INT 1
12959: PUSH
12960: LD_INT 0
12962: PUSH
12963: EMPTY
12964: LIST
12965: LIST
12966: PUSH
12967: LD_INT 1
12969: PUSH
12970: LD_INT 1
12972: PUSH
12973: EMPTY
12974: LIST
12975: LIST
12976: PUSH
12977: LD_INT 0
12979: PUSH
12980: LD_INT 1
12982: PUSH
12983: EMPTY
12984: LIST
12985: LIST
12986: PUSH
12987: LD_INT 1
12989: NEG
12990: PUSH
12991: LD_INT 0
12993: PUSH
12994: EMPTY
12995: LIST
12996: LIST
12997: PUSH
12998: LD_INT 1
13000: NEG
13001: PUSH
13002: LD_INT 1
13004: NEG
13005: PUSH
13006: EMPTY
13007: LIST
13008: LIST
13009: PUSH
13010: LD_INT 1
13012: NEG
13013: PUSH
13014: LD_INT 2
13016: NEG
13017: PUSH
13018: EMPTY
13019: LIST
13020: LIST
13021: PUSH
13022: LD_INT 0
13024: PUSH
13025: LD_INT 2
13027: NEG
13028: PUSH
13029: EMPTY
13030: LIST
13031: LIST
13032: PUSH
13033: LD_INT 1
13035: PUSH
13036: LD_INT 1
13038: NEG
13039: PUSH
13040: EMPTY
13041: LIST
13042: LIST
13043: PUSH
13044: LD_INT 2
13046: PUSH
13047: LD_INT 0
13049: PUSH
13050: EMPTY
13051: LIST
13052: LIST
13053: PUSH
13054: LD_INT 2
13056: PUSH
13057: LD_INT 1
13059: PUSH
13060: EMPTY
13061: LIST
13062: LIST
13063: PUSH
13064: LD_INT 2
13066: PUSH
13067: LD_INT 2
13069: PUSH
13070: EMPTY
13071: LIST
13072: LIST
13073: PUSH
13074: LD_INT 1
13076: PUSH
13077: LD_INT 2
13079: PUSH
13080: EMPTY
13081: LIST
13082: LIST
13083: PUSH
13084: LD_INT 0
13086: PUSH
13087: LD_INT 2
13089: PUSH
13090: EMPTY
13091: LIST
13092: LIST
13093: PUSH
13094: LD_INT 1
13096: NEG
13097: PUSH
13098: LD_INT 1
13100: PUSH
13101: EMPTY
13102: LIST
13103: LIST
13104: PUSH
13105: LD_INT 2
13107: NEG
13108: PUSH
13109: LD_INT 0
13111: PUSH
13112: EMPTY
13113: LIST
13114: LIST
13115: PUSH
13116: LD_INT 2
13118: NEG
13119: PUSH
13120: LD_INT 1
13122: NEG
13123: PUSH
13124: EMPTY
13125: LIST
13126: LIST
13127: PUSH
13128: LD_INT 2
13130: NEG
13131: PUSH
13132: LD_INT 2
13134: NEG
13135: PUSH
13136: EMPTY
13137: LIST
13138: LIST
13139: PUSH
13140: LD_INT 3
13142: PUSH
13143: LD_INT 1
13145: PUSH
13146: EMPTY
13147: LIST
13148: LIST
13149: PUSH
13150: LD_INT 3
13152: PUSH
13153: LD_INT 2
13155: PUSH
13156: EMPTY
13157: LIST
13158: LIST
13159: PUSH
13160: LD_INT 2
13162: PUSH
13163: LD_INT 3
13165: PUSH
13166: EMPTY
13167: LIST
13168: LIST
13169: PUSH
13170: LD_INT 1
13172: PUSH
13173: LD_INT 3
13175: PUSH
13176: EMPTY
13177: LIST
13178: LIST
13179: PUSH
13180: EMPTY
13181: LIST
13182: LIST
13183: LIST
13184: LIST
13185: LIST
13186: LIST
13187: LIST
13188: LIST
13189: LIST
13190: LIST
13191: LIST
13192: LIST
13193: LIST
13194: LIST
13195: LIST
13196: LIST
13197: LIST
13198: LIST
13199: LIST
13200: LIST
13201: LIST
13202: LIST
13203: LIST
13204: ST_TO_ADDR
// DepotRu3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 2 , 3 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 2 , 1 ] ] ;
13205: LD_ADDR_VAR 0 26
13209: PUSH
13210: LD_INT 0
13212: PUSH
13213: LD_INT 0
13215: PUSH
13216: EMPTY
13217: LIST
13218: LIST
13219: PUSH
13220: LD_INT 0
13222: PUSH
13223: LD_INT 1
13225: NEG
13226: PUSH
13227: EMPTY
13228: LIST
13229: LIST
13230: PUSH
13231: LD_INT 1
13233: PUSH
13234: LD_INT 0
13236: PUSH
13237: EMPTY
13238: LIST
13239: LIST
13240: PUSH
13241: LD_INT 1
13243: PUSH
13244: LD_INT 1
13246: PUSH
13247: EMPTY
13248: LIST
13249: LIST
13250: PUSH
13251: LD_INT 0
13253: PUSH
13254: LD_INT 1
13256: PUSH
13257: EMPTY
13258: LIST
13259: LIST
13260: PUSH
13261: LD_INT 1
13263: NEG
13264: PUSH
13265: LD_INT 0
13267: PUSH
13268: EMPTY
13269: LIST
13270: LIST
13271: PUSH
13272: LD_INT 1
13274: NEG
13275: PUSH
13276: LD_INT 1
13278: NEG
13279: PUSH
13280: EMPTY
13281: LIST
13282: LIST
13283: PUSH
13284: LD_INT 1
13286: NEG
13287: PUSH
13288: LD_INT 2
13290: NEG
13291: PUSH
13292: EMPTY
13293: LIST
13294: LIST
13295: PUSH
13296: LD_INT 0
13298: PUSH
13299: LD_INT 2
13301: NEG
13302: PUSH
13303: EMPTY
13304: LIST
13305: LIST
13306: PUSH
13307: LD_INT 1
13309: PUSH
13310: LD_INT 1
13312: NEG
13313: PUSH
13314: EMPTY
13315: LIST
13316: LIST
13317: PUSH
13318: LD_INT 2
13320: PUSH
13321: LD_INT 0
13323: PUSH
13324: EMPTY
13325: LIST
13326: LIST
13327: PUSH
13328: LD_INT 2
13330: PUSH
13331: LD_INT 1
13333: PUSH
13334: EMPTY
13335: LIST
13336: LIST
13337: PUSH
13338: LD_INT 2
13340: PUSH
13341: LD_INT 2
13343: PUSH
13344: EMPTY
13345: LIST
13346: LIST
13347: PUSH
13348: LD_INT 1
13350: PUSH
13351: LD_INT 2
13353: PUSH
13354: EMPTY
13355: LIST
13356: LIST
13357: PUSH
13358: LD_INT 0
13360: PUSH
13361: LD_INT 2
13363: PUSH
13364: EMPTY
13365: LIST
13366: LIST
13367: PUSH
13368: LD_INT 1
13370: NEG
13371: PUSH
13372: LD_INT 1
13374: PUSH
13375: EMPTY
13376: LIST
13377: LIST
13378: PUSH
13379: LD_INT 2
13381: NEG
13382: PUSH
13383: LD_INT 0
13385: PUSH
13386: EMPTY
13387: LIST
13388: LIST
13389: PUSH
13390: LD_INT 2
13392: NEG
13393: PUSH
13394: LD_INT 1
13396: NEG
13397: PUSH
13398: EMPTY
13399: LIST
13400: LIST
13401: PUSH
13402: LD_INT 2
13404: NEG
13405: PUSH
13406: LD_INT 2
13408: NEG
13409: PUSH
13410: EMPTY
13411: LIST
13412: LIST
13413: PUSH
13414: LD_INT 2
13416: PUSH
13417: LD_INT 3
13419: PUSH
13420: EMPTY
13421: LIST
13422: LIST
13423: PUSH
13424: LD_INT 1
13426: PUSH
13427: LD_INT 3
13429: PUSH
13430: EMPTY
13431: LIST
13432: LIST
13433: PUSH
13434: LD_INT 1
13436: NEG
13437: PUSH
13438: LD_INT 2
13440: PUSH
13441: EMPTY
13442: LIST
13443: LIST
13444: PUSH
13445: LD_INT 2
13447: NEG
13448: PUSH
13449: LD_INT 1
13451: PUSH
13452: EMPTY
13453: LIST
13454: LIST
13455: PUSH
13456: EMPTY
13457: LIST
13458: LIST
13459: LIST
13460: LIST
13461: LIST
13462: LIST
13463: LIST
13464: LIST
13465: LIST
13466: LIST
13467: LIST
13468: LIST
13469: LIST
13470: LIST
13471: LIST
13472: LIST
13473: LIST
13474: LIST
13475: LIST
13476: LIST
13477: LIST
13478: LIST
13479: LIST
13480: ST_TO_ADDR
// DepotRu4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 1 , 2 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] ] ;
13481: LD_ADDR_VAR 0 27
13485: PUSH
13486: LD_INT 0
13488: PUSH
13489: LD_INT 0
13491: PUSH
13492: EMPTY
13493: LIST
13494: LIST
13495: PUSH
13496: LD_INT 0
13498: PUSH
13499: LD_INT 1
13501: NEG
13502: PUSH
13503: EMPTY
13504: LIST
13505: LIST
13506: PUSH
13507: LD_INT 1
13509: PUSH
13510: LD_INT 0
13512: PUSH
13513: EMPTY
13514: LIST
13515: LIST
13516: PUSH
13517: LD_INT 1
13519: PUSH
13520: LD_INT 1
13522: PUSH
13523: EMPTY
13524: LIST
13525: LIST
13526: PUSH
13527: LD_INT 0
13529: PUSH
13530: LD_INT 1
13532: PUSH
13533: EMPTY
13534: LIST
13535: LIST
13536: PUSH
13537: LD_INT 1
13539: NEG
13540: PUSH
13541: LD_INT 0
13543: PUSH
13544: EMPTY
13545: LIST
13546: LIST
13547: PUSH
13548: LD_INT 1
13550: NEG
13551: PUSH
13552: LD_INT 1
13554: NEG
13555: PUSH
13556: EMPTY
13557: LIST
13558: LIST
13559: PUSH
13560: LD_INT 1
13562: NEG
13563: PUSH
13564: LD_INT 2
13566: NEG
13567: PUSH
13568: EMPTY
13569: LIST
13570: LIST
13571: PUSH
13572: LD_INT 0
13574: PUSH
13575: LD_INT 2
13577: NEG
13578: PUSH
13579: EMPTY
13580: LIST
13581: LIST
13582: PUSH
13583: LD_INT 1
13585: PUSH
13586: LD_INT 1
13588: NEG
13589: PUSH
13590: EMPTY
13591: LIST
13592: LIST
13593: PUSH
13594: LD_INT 2
13596: PUSH
13597: LD_INT 0
13599: PUSH
13600: EMPTY
13601: LIST
13602: LIST
13603: PUSH
13604: LD_INT 2
13606: PUSH
13607: LD_INT 1
13609: PUSH
13610: EMPTY
13611: LIST
13612: LIST
13613: PUSH
13614: LD_INT 2
13616: PUSH
13617: LD_INT 2
13619: PUSH
13620: EMPTY
13621: LIST
13622: LIST
13623: PUSH
13624: LD_INT 1
13626: PUSH
13627: LD_INT 2
13629: PUSH
13630: EMPTY
13631: LIST
13632: LIST
13633: PUSH
13634: LD_INT 0
13636: PUSH
13637: LD_INT 2
13639: PUSH
13640: EMPTY
13641: LIST
13642: LIST
13643: PUSH
13644: LD_INT 1
13646: NEG
13647: PUSH
13648: LD_INT 1
13650: PUSH
13651: EMPTY
13652: LIST
13653: LIST
13654: PUSH
13655: LD_INT 2
13657: NEG
13658: PUSH
13659: LD_INT 0
13661: PUSH
13662: EMPTY
13663: LIST
13664: LIST
13665: PUSH
13666: LD_INT 2
13668: NEG
13669: PUSH
13670: LD_INT 1
13672: NEG
13673: PUSH
13674: EMPTY
13675: LIST
13676: LIST
13677: PUSH
13678: LD_INT 2
13680: NEG
13681: PUSH
13682: LD_INT 2
13684: NEG
13685: PUSH
13686: EMPTY
13687: LIST
13688: LIST
13689: PUSH
13690: LD_INT 1
13692: NEG
13693: PUSH
13694: LD_INT 2
13696: PUSH
13697: EMPTY
13698: LIST
13699: LIST
13700: PUSH
13701: LD_INT 2
13703: NEG
13704: PUSH
13705: LD_INT 1
13707: PUSH
13708: EMPTY
13709: LIST
13710: LIST
13711: PUSH
13712: LD_INT 3
13714: NEG
13715: PUSH
13716: LD_INT 1
13718: NEG
13719: PUSH
13720: EMPTY
13721: LIST
13722: LIST
13723: PUSH
13724: LD_INT 3
13726: NEG
13727: PUSH
13728: LD_INT 2
13730: NEG
13731: PUSH
13732: EMPTY
13733: LIST
13734: LIST
13735: PUSH
13736: EMPTY
13737: LIST
13738: LIST
13739: LIST
13740: LIST
13741: LIST
13742: LIST
13743: LIST
13744: LIST
13745: LIST
13746: LIST
13747: LIST
13748: LIST
13749: LIST
13750: LIST
13751: LIST
13752: LIST
13753: LIST
13754: LIST
13755: LIST
13756: LIST
13757: LIST
13758: LIST
13759: LIST
13760: ST_TO_ADDR
// DepotRu5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] ] ;
13761: LD_ADDR_VAR 0 28
13765: PUSH
13766: LD_INT 0
13768: PUSH
13769: LD_INT 0
13771: PUSH
13772: EMPTY
13773: LIST
13774: LIST
13775: PUSH
13776: LD_INT 0
13778: PUSH
13779: LD_INT 1
13781: NEG
13782: PUSH
13783: EMPTY
13784: LIST
13785: LIST
13786: PUSH
13787: LD_INT 1
13789: PUSH
13790: LD_INT 0
13792: PUSH
13793: EMPTY
13794: LIST
13795: LIST
13796: PUSH
13797: LD_INT 1
13799: PUSH
13800: LD_INT 1
13802: PUSH
13803: EMPTY
13804: LIST
13805: LIST
13806: PUSH
13807: LD_INT 0
13809: PUSH
13810: LD_INT 1
13812: PUSH
13813: EMPTY
13814: LIST
13815: LIST
13816: PUSH
13817: LD_INT 1
13819: NEG
13820: PUSH
13821: LD_INT 0
13823: PUSH
13824: EMPTY
13825: LIST
13826: LIST
13827: PUSH
13828: LD_INT 1
13830: NEG
13831: PUSH
13832: LD_INT 1
13834: NEG
13835: PUSH
13836: EMPTY
13837: LIST
13838: LIST
13839: PUSH
13840: LD_INT 1
13842: NEG
13843: PUSH
13844: LD_INT 2
13846: NEG
13847: PUSH
13848: EMPTY
13849: LIST
13850: LIST
13851: PUSH
13852: LD_INT 0
13854: PUSH
13855: LD_INT 2
13857: NEG
13858: PUSH
13859: EMPTY
13860: LIST
13861: LIST
13862: PUSH
13863: LD_INT 1
13865: PUSH
13866: LD_INT 1
13868: NEG
13869: PUSH
13870: EMPTY
13871: LIST
13872: LIST
13873: PUSH
13874: LD_INT 2
13876: PUSH
13877: LD_INT 0
13879: PUSH
13880: EMPTY
13881: LIST
13882: LIST
13883: PUSH
13884: LD_INT 2
13886: PUSH
13887: LD_INT 1
13889: PUSH
13890: EMPTY
13891: LIST
13892: LIST
13893: PUSH
13894: LD_INT 2
13896: PUSH
13897: LD_INT 2
13899: PUSH
13900: EMPTY
13901: LIST
13902: LIST
13903: PUSH
13904: LD_INT 1
13906: PUSH
13907: LD_INT 2
13909: PUSH
13910: EMPTY
13911: LIST
13912: LIST
13913: PUSH
13914: LD_INT 0
13916: PUSH
13917: LD_INT 2
13919: PUSH
13920: EMPTY
13921: LIST
13922: LIST
13923: PUSH
13924: LD_INT 1
13926: NEG
13927: PUSH
13928: LD_INT 1
13930: PUSH
13931: EMPTY
13932: LIST
13933: LIST
13934: PUSH
13935: LD_INT 2
13937: NEG
13938: PUSH
13939: LD_INT 0
13941: PUSH
13942: EMPTY
13943: LIST
13944: LIST
13945: PUSH
13946: LD_INT 2
13948: NEG
13949: PUSH
13950: LD_INT 1
13952: NEG
13953: PUSH
13954: EMPTY
13955: LIST
13956: LIST
13957: PUSH
13958: LD_INT 2
13960: NEG
13961: PUSH
13962: LD_INT 2
13964: NEG
13965: PUSH
13966: EMPTY
13967: LIST
13968: LIST
13969: PUSH
13970: LD_INT 2
13972: NEG
13973: PUSH
13974: LD_INT 3
13976: NEG
13977: PUSH
13978: EMPTY
13979: LIST
13980: LIST
13981: PUSH
13982: LD_INT 1
13984: NEG
13985: PUSH
13986: LD_INT 3
13988: NEG
13989: PUSH
13990: EMPTY
13991: LIST
13992: LIST
13993: PUSH
13994: LD_INT 3
13996: NEG
13997: PUSH
13998: LD_INT 1
14000: NEG
14001: PUSH
14002: EMPTY
14003: LIST
14004: LIST
14005: PUSH
14006: LD_INT 3
14008: NEG
14009: PUSH
14010: LD_INT 2
14012: NEG
14013: PUSH
14014: EMPTY
14015: LIST
14016: LIST
14017: PUSH
14018: EMPTY
14019: LIST
14020: LIST
14021: LIST
14022: LIST
14023: LIST
14024: LIST
14025: LIST
14026: LIST
14027: LIST
14028: LIST
14029: LIST
14030: LIST
14031: LIST
14032: LIST
14033: LIST
14034: LIST
14035: LIST
14036: LIST
14037: LIST
14038: LIST
14039: LIST
14040: LIST
14041: LIST
14042: ST_TO_ADDR
// Factory0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] ] ;
14043: LD_ADDR_VAR 0 29
14047: PUSH
14048: LD_INT 0
14050: PUSH
14051: LD_INT 0
14053: PUSH
14054: EMPTY
14055: LIST
14056: LIST
14057: PUSH
14058: LD_INT 0
14060: PUSH
14061: LD_INT 1
14063: NEG
14064: PUSH
14065: EMPTY
14066: LIST
14067: LIST
14068: PUSH
14069: LD_INT 1
14071: PUSH
14072: LD_INT 0
14074: PUSH
14075: EMPTY
14076: LIST
14077: LIST
14078: PUSH
14079: LD_INT 1
14081: PUSH
14082: LD_INT 1
14084: PUSH
14085: EMPTY
14086: LIST
14087: LIST
14088: PUSH
14089: LD_INT 0
14091: PUSH
14092: LD_INT 1
14094: PUSH
14095: EMPTY
14096: LIST
14097: LIST
14098: PUSH
14099: LD_INT 1
14101: NEG
14102: PUSH
14103: LD_INT 0
14105: PUSH
14106: EMPTY
14107: LIST
14108: LIST
14109: PUSH
14110: LD_INT 1
14112: NEG
14113: PUSH
14114: LD_INT 1
14116: NEG
14117: PUSH
14118: EMPTY
14119: LIST
14120: LIST
14121: PUSH
14122: LD_INT 1
14124: NEG
14125: PUSH
14126: LD_INT 2
14128: NEG
14129: PUSH
14130: EMPTY
14131: LIST
14132: LIST
14133: PUSH
14134: LD_INT 0
14136: PUSH
14137: LD_INT 2
14139: NEG
14140: PUSH
14141: EMPTY
14142: LIST
14143: LIST
14144: PUSH
14145: LD_INT 1
14147: PUSH
14148: LD_INT 1
14150: NEG
14151: PUSH
14152: EMPTY
14153: LIST
14154: LIST
14155: PUSH
14156: LD_INT 2
14158: PUSH
14159: LD_INT 0
14161: PUSH
14162: EMPTY
14163: LIST
14164: LIST
14165: PUSH
14166: LD_INT 2
14168: PUSH
14169: LD_INT 1
14171: PUSH
14172: EMPTY
14173: LIST
14174: LIST
14175: PUSH
14176: LD_INT 1
14178: PUSH
14179: LD_INT 2
14181: PUSH
14182: EMPTY
14183: LIST
14184: LIST
14185: PUSH
14186: LD_INT 0
14188: PUSH
14189: LD_INT 2
14191: PUSH
14192: EMPTY
14193: LIST
14194: LIST
14195: PUSH
14196: LD_INT 1
14198: NEG
14199: PUSH
14200: LD_INT 1
14202: PUSH
14203: EMPTY
14204: LIST
14205: LIST
14206: PUSH
14207: LD_INT 2
14209: NEG
14210: PUSH
14211: LD_INT 1
14213: NEG
14214: PUSH
14215: EMPTY
14216: LIST
14217: LIST
14218: PUSH
14219: LD_INT 2
14221: NEG
14222: PUSH
14223: LD_INT 2
14225: NEG
14226: PUSH
14227: EMPTY
14228: LIST
14229: LIST
14230: PUSH
14231: LD_INT 2
14233: NEG
14234: PUSH
14235: LD_INT 3
14237: NEG
14238: PUSH
14239: EMPTY
14240: LIST
14241: LIST
14242: PUSH
14243: LD_INT 2
14245: PUSH
14246: LD_INT 1
14248: NEG
14249: PUSH
14250: EMPTY
14251: LIST
14252: LIST
14253: PUSH
14254: LD_INT 3
14256: PUSH
14257: LD_INT 1
14259: PUSH
14260: EMPTY
14261: LIST
14262: LIST
14263: PUSH
14264: LD_INT 1
14266: PUSH
14267: LD_INT 3
14269: PUSH
14270: EMPTY
14271: LIST
14272: LIST
14273: PUSH
14274: LD_INT 1
14276: NEG
14277: PUSH
14278: LD_INT 2
14280: PUSH
14281: EMPTY
14282: LIST
14283: LIST
14284: PUSH
14285: LD_INT 3
14287: NEG
14288: PUSH
14289: LD_INT 2
14291: NEG
14292: PUSH
14293: EMPTY
14294: LIST
14295: LIST
14296: PUSH
14297: EMPTY
14298: LIST
14299: LIST
14300: LIST
14301: LIST
14302: LIST
14303: LIST
14304: LIST
14305: LIST
14306: LIST
14307: LIST
14308: LIST
14309: LIST
14310: LIST
14311: LIST
14312: LIST
14313: LIST
14314: LIST
14315: LIST
14316: LIST
14317: LIST
14318: LIST
14319: LIST
14320: LIST
14321: ST_TO_ADDR
// Factory1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
14322: LD_ADDR_VAR 0 30
14326: PUSH
14327: LD_INT 0
14329: PUSH
14330: LD_INT 0
14332: PUSH
14333: EMPTY
14334: LIST
14335: LIST
14336: PUSH
14337: LD_INT 0
14339: PUSH
14340: LD_INT 1
14342: NEG
14343: PUSH
14344: EMPTY
14345: LIST
14346: LIST
14347: PUSH
14348: LD_INT 1
14350: PUSH
14351: LD_INT 0
14353: PUSH
14354: EMPTY
14355: LIST
14356: LIST
14357: PUSH
14358: LD_INT 1
14360: PUSH
14361: LD_INT 1
14363: PUSH
14364: EMPTY
14365: LIST
14366: LIST
14367: PUSH
14368: LD_INT 0
14370: PUSH
14371: LD_INT 1
14373: PUSH
14374: EMPTY
14375: LIST
14376: LIST
14377: PUSH
14378: LD_INT 1
14380: NEG
14381: PUSH
14382: LD_INT 0
14384: PUSH
14385: EMPTY
14386: LIST
14387: LIST
14388: PUSH
14389: LD_INT 1
14391: NEG
14392: PUSH
14393: LD_INT 1
14395: NEG
14396: PUSH
14397: EMPTY
14398: LIST
14399: LIST
14400: PUSH
14401: LD_INT 1
14403: NEG
14404: PUSH
14405: LD_INT 2
14407: NEG
14408: PUSH
14409: EMPTY
14410: LIST
14411: LIST
14412: PUSH
14413: LD_INT 0
14415: PUSH
14416: LD_INT 2
14418: NEG
14419: PUSH
14420: EMPTY
14421: LIST
14422: LIST
14423: PUSH
14424: LD_INT 1
14426: PUSH
14427: LD_INT 1
14429: NEG
14430: PUSH
14431: EMPTY
14432: LIST
14433: LIST
14434: PUSH
14435: LD_INT 2
14437: PUSH
14438: LD_INT 0
14440: PUSH
14441: EMPTY
14442: LIST
14443: LIST
14444: PUSH
14445: LD_INT 2
14447: PUSH
14448: LD_INT 1
14450: PUSH
14451: EMPTY
14452: LIST
14453: LIST
14454: PUSH
14455: LD_INT 2
14457: PUSH
14458: LD_INT 2
14460: PUSH
14461: EMPTY
14462: LIST
14463: LIST
14464: PUSH
14465: LD_INT 1
14467: PUSH
14468: LD_INT 2
14470: PUSH
14471: EMPTY
14472: LIST
14473: LIST
14474: PUSH
14475: LD_INT 1
14477: NEG
14478: PUSH
14479: LD_INT 1
14481: PUSH
14482: EMPTY
14483: LIST
14484: LIST
14485: PUSH
14486: LD_INT 2
14488: NEG
14489: PUSH
14490: LD_INT 0
14492: PUSH
14493: EMPTY
14494: LIST
14495: LIST
14496: PUSH
14497: LD_INT 2
14499: NEG
14500: PUSH
14501: LD_INT 1
14503: NEG
14504: PUSH
14505: EMPTY
14506: LIST
14507: LIST
14508: PUSH
14509: LD_INT 1
14511: NEG
14512: PUSH
14513: LD_INT 3
14515: NEG
14516: PUSH
14517: EMPTY
14518: LIST
14519: LIST
14520: PUSH
14521: LD_INT 1
14523: PUSH
14524: LD_INT 2
14526: NEG
14527: PUSH
14528: EMPTY
14529: LIST
14530: LIST
14531: PUSH
14532: LD_INT 3
14534: PUSH
14535: LD_INT 2
14537: PUSH
14538: EMPTY
14539: LIST
14540: LIST
14541: PUSH
14542: LD_INT 2
14544: PUSH
14545: LD_INT 3
14547: PUSH
14548: EMPTY
14549: LIST
14550: LIST
14551: PUSH
14552: LD_INT 2
14554: NEG
14555: PUSH
14556: LD_INT 1
14558: PUSH
14559: EMPTY
14560: LIST
14561: LIST
14562: PUSH
14563: LD_INT 3
14565: NEG
14566: PUSH
14567: LD_INT 1
14569: NEG
14570: PUSH
14571: EMPTY
14572: LIST
14573: LIST
14574: PUSH
14575: EMPTY
14576: LIST
14577: LIST
14578: LIST
14579: LIST
14580: LIST
14581: LIST
14582: LIST
14583: LIST
14584: LIST
14585: LIST
14586: LIST
14587: LIST
14588: LIST
14589: LIST
14590: LIST
14591: LIST
14592: LIST
14593: LIST
14594: LIST
14595: LIST
14596: LIST
14597: LIST
14598: LIST
14599: ST_TO_ADDR
// Factory2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] ] ;
14600: LD_ADDR_VAR 0 31
14604: PUSH
14605: LD_INT 0
14607: PUSH
14608: LD_INT 0
14610: PUSH
14611: EMPTY
14612: LIST
14613: LIST
14614: PUSH
14615: LD_INT 0
14617: PUSH
14618: LD_INT 1
14620: NEG
14621: PUSH
14622: EMPTY
14623: LIST
14624: LIST
14625: PUSH
14626: LD_INT 1
14628: PUSH
14629: LD_INT 0
14631: PUSH
14632: EMPTY
14633: LIST
14634: LIST
14635: PUSH
14636: LD_INT 1
14638: PUSH
14639: LD_INT 1
14641: PUSH
14642: EMPTY
14643: LIST
14644: LIST
14645: PUSH
14646: LD_INT 0
14648: PUSH
14649: LD_INT 1
14651: PUSH
14652: EMPTY
14653: LIST
14654: LIST
14655: PUSH
14656: LD_INT 1
14658: NEG
14659: PUSH
14660: LD_INT 0
14662: PUSH
14663: EMPTY
14664: LIST
14665: LIST
14666: PUSH
14667: LD_INT 1
14669: NEG
14670: PUSH
14671: LD_INT 1
14673: NEG
14674: PUSH
14675: EMPTY
14676: LIST
14677: LIST
14678: PUSH
14679: LD_INT 1
14681: NEG
14682: PUSH
14683: LD_INT 2
14685: NEG
14686: PUSH
14687: EMPTY
14688: LIST
14689: LIST
14690: PUSH
14691: LD_INT 1
14693: PUSH
14694: LD_INT 1
14696: NEG
14697: PUSH
14698: EMPTY
14699: LIST
14700: LIST
14701: PUSH
14702: LD_INT 2
14704: PUSH
14705: LD_INT 0
14707: PUSH
14708: EMPTY
14709: LIST
14710: LIST
14711: PUSH
14712: LD_INT 2
14714: PUSH
14715: LD_INT 1
14717: PUSH
14718: EMPTY
14719: LIST
14720: LIST
14721: PUSH
14722: LD_INT 2
14724: PUSH
14725: LD_INT 2
14727: PUSH
14728: EMPTY
14729: LIST
14730: LIST
14731: PUSH
14732: LD_INT 1
14734: PUSH
14735: LD_INT 2
14737: PUSH
14738: EMPTY
14739: LIST
14740: LIST
14741: PUSH
14742: LD_INT 0
14744: PUSH
14745: LD_INT 2
14747: PUSH
14748: EMPTY
14749: LIST
14750: LIST
14751: PUSH
14752: LD_INT 1
14754: NEG
14755: PUSH
14756: LD_INT 1
14758: PUSH
14759: EMPTY
14760: LIST
14761: LIST
14762: PUSH
14763: LD_INT 2
14765: NEG
14766: PUSH
14767: LD_INT 1
14769: NEG
14770: PUSH
14771: EMPTY
14772: LIST
14773: LIST
14774: PUSH
14775: LD_INT 2
14777: NEG
14778: PUSH
14779: LD_INT 2
14781: NEG
14782: PUSH
14783: EMPTY
14784: LIST
14785: LIST
14786: PUSH
14787: LD_INT 2
14789: NEG
14790: PUSH
14791: LD_INT 3
14793: NEG
14794: PUSH
14795: EMPTY
14796: LIST
14797: LIST
14798: PUSH
14799: LD_INT 2
14801: PUSH
14802: LD_INT 1
14804: NEG
14805: PUSH
14806: EMPTY
14807: LIST
14808: LIST
14809: PUSH
14810: LD_INT 3
14812: PUSH
14813: LD_INT 1
14815: PUSH
14816: EMPTY
14817: LIST
14818: LIST
14819: PUSH
14820: LD_INT 1
14822: PUSH
14823: LD_INT 3
14825: PUSH
14826: EMPTY
14827: LIST
14828: LIST
14829: PUSH
14830: LD_INT 1
14832: NEG
14833: PUSH
14834: LD_INT 2
14836: PUSH
14837: EMPTY
14838: LIST
14839: LIST
14840: PUSH
14841: LD_INT 3
14843: NEG
14844: PUSH
14845: LD_INT 2
14847: NEG
14848: PUSH
14849: EMPTY
14850: LIST
14851: LIST
14852: PUSH
14853: EMPTY
14854: LIST
14855: LIST
14856: LIST
14857: LIST
14858: LIST
14859: LIST
14860: LIST
14861: LIST
14862: LIST
14863: LIST
14864: LIST
14865: LIST
14866: LIST
14867: LIST
14868: LIST
14869: LIST
14870: LIST
14871: LIST
14872: LIST
14873: LIST
14874: LIST
14875: LIST
14876: LIST
14877: ST_TO_ADDR
// Factory3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
14878: LD_ADDR_VAR 0 32
14882: PUSH
14883: LD_INT 0
14885: PUSH
14886: LD_INT 0
14888: PUSH
14889: EMPTY
14890: LIST
14891: LIST
14892: PUSH
14893: LD_INT 0
14895: PUSH
14896: LD_INT 1
14898: NEG
14899: PUSH
14900: EMPTY
14901: LIST
14902: LIST
14903: PUSH
14904: LD_INT 1
14906: PUSH
14907: LD_INT 0
14909: PUSH
14910: EMPTY
14911: LIST
14912: LIST
14913: PUSH
14914: LD_INT 1
14916: PUSH
14917: LD_INT 1
14919: PUSH
14920: EMPTY
14921: LIST
14922: LIST
14923: PUSH
14924: LD_INT 0
14926: PUSH
14927: LD_INT 1
14929: PUSH
14930: EMPTY
14931: LIST
14932: LIST
14933: PUSH
14934: LD_INT 1
14936: NEG
14937: PUSH
14938: LD_INT 0
14940: PUSH
14941: EMPTY
14942: LIST
14943: LIST
14944: PUSH
14945: LD_INT 1
14947: NEG
14948: PUSH
14949: LD_INT 1
14951: NEG
14952: PUSH
14953: EMPTY
14954: LIST
14955: LIST
14956: PUSH
14957: LD_INT 1
14959: NEG
14960: PUSH
14961: LD_INT 2
14963: NEG
14964: PUSH
14965: EMPTY
14966: LIST
14967: LIST
14968: PUSH
14969: LD_INT 0
14971: PUSH
14972: LD_INT 2
14974: NEG
14975: PUSH
14976: EMPTY
14977: LIST
14978: LIST
14979: PUSH
14980: LD_INT 1
14982: PUSH
14983: LD_INT 1
14985: NEG
14986: PUSH
14987: EMPTY
14988: LIST
14989: LIST
14990: PUSH
14991: LD_INT 2
14993: PUSH
14994: LD_INT 1
14996: PUSH
14997: EMPTY
14998: LIST
14999: LIST
15000: PUSH
15001: LD_INT 2
15003: PUSH
15004: LD_INT 2
15006: PUSH
15007: EMPTY
15008: LIST
15009: LIST
15010: PUSH
15011: LD_INT 1
15013: PUSH
15014: LD_INT 2
15016: PUSH
15017: EMPTY
15018: LIST
15019: LIST
15020: PUSH
15021: LD_INT 0
15023: PUSH
15024: LD_INT 2
15026: PUSH
15027: EMPTY
15028: LIST
15029: LIST
15030: PUSH
15031: LD_INT 1
15033: NEG
15034: PUSH
15035: LD_INT 1
15037: PUSH
15038: EMPTY
15039: LIST
15040: LIST
15041: PUSH
15042: LD_INT 2
15044: NEG
15045: PUSH
15046: LD_INT 0
15048: PUSH
15049: EMPTY
15050: LIST
15051: LIST
15052: PUSH
15053: LD_INT 2
15055: NEG
15056: PUSH
15057: LD_INT 1
15059: NEG
15060: PUSH
15061: EMPTY
15062: LIST
15063: LIST
15064: PUSH
15065: LD_INT 1
15067: NEG
15068: PUSH
15069: LD_INT 3
15071: NEG
15072: PUSH
15073: EMPTY
15074: LIST
15075: LIST
15076: PUSH
15077: LD_INT 1
15079: PUSH
15080: LD_INT 2
15082: NEG
15083: PUSH
15084: EMPTY
15085: LIST
15086: LIST
15087: PUSH
15088: LD_INT 3
15090: PUSH
15091: LD_INT 2
15093: PUSH
15094: EMPTY
15095: LIST
15096: LIST
15097: PUSH
15098: LD_INT 2
15100: PUSH
15101: LD_INT 3
15103: PUSH
15104: EMPTY
15105: LIST
15106: LIST
15107: PUSH
15108: LD_INT 2
15110: NEG
15111: PUSH
15112: LD_INT 1
15114: PUSH
15115: EMPTY
15116: LIST
15117: LIST
15118: PUSH
15119: LD_INT 3
15121: NEG
15122: PUSH
15123: LD_INT 1
15125: NEG
15126: PUSH
15127: EMPTY
15128: LIST
15129: LIST
15130: PUSH
15131: EMPTY
15132: LIST
15133: LIST
15134: LIST
15135: LIST
15136: LIST
15137: LIST
15138: LIST
15139: LIST
15140: LIST
15141: LIST
15142: LIST
15143: LIST
15144: LIST
15145: LIST
15146: LIST
15147: LIST
15148: LIST
15149: LIST
15150: LIST
15151: LIST
15152: LIST
15153: LIST
15154: LIST
15155: ST_TO_ADDR
// Factory4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] ] ;
15156: LD_ADDR_VAR 0 33
15160: PUSH
15161: LD_INT 0
15163: PUSH
15164: LD_INT 0
15166: PUSH
15167: EMPTY
15168: LIST
15169: LIST
15170: PUSH
15171: LD_INT 0
15173: PUSH
15174: LD_INT 1
15176: NEG
15177: PUSH
15178: EMPTY
15179: LIST
15180: LIST
15181: PUSH
15182: LD_INT 1
15184: PUSH
15185: LD_INT 0
15187: PUSH
15188: EMPTY
15189: LIST
15190: LIST
15191: PUSH
15192: LD_INT 1
15194: PUSH
15195: LD_INT 1
15197: PUSH
15198: EMPTY
15199: LIST
15200: LIST
15201: PUSH
15202: LD_INT 0
15204: PUSH
15205: LD_INT 1
15207: PUSH
15208: EMPTY
15209: LIST
15210: LIST
15211: PUSH
15212: LD_INT 1
15214: NEG
15215: PUSH
15216: LD_INT 0
15218: PUSH
15219: EMPTY
15220: LIST
15221: LIST
15222: PUSH
15223: LD_INT 1
15225: NEG
15226: PUSH
15227: LD_INT 1
15229: NEG
15230: PUSH
15231: EMPTY
15232: LIST
15233: LIST
15234: PUSH
15235: LD_INT 1
15237: NEG
15238: PUSH
15239: LD_INT 2
15241: NEG
15242: PUSH
15243: EMPTY
15244: LIST
15245: LIST
15246: PUSH
15247: LD_INT 1
15249: PUSH
15250: LD_INT 1
15252: NEG
15253: PUSH
15254: EMPTY
15255: LIST
15256: LIST
15257: PUSH
15258: LD_INT 2
15260: PUSH
15261: LD_INT 0
15263: PUSH
15264: EMPTY
15265: LIST
15266: LIST
15267: PUSH
15268: LD_INT 2
15270: PUSH
15271: LD_INT 1
15273: PUSH
15274: EMPTY
15275: LIST
15276: LIST
15277: PUSH
15278: LD_INT 1
15280: PUSH
15281: LD_INT 2
15283: PUSH
15284: EMPTY
15285: LIST
15286: LIST
15287: PUSH
15288: LD_INT 0
15290: PUSH
15291: LD_INT 2
15293: PUSH
15294: EMPTY
15295: LIST
15296: LIST
15297: PUSH
15298: LD_INT 1
15300: NEG
15301: PUSH
15302: LD_INT 1
15304: PUSH
15305: EMPTY
15306: LIST
15307: LIST
15308: PUSH
15309: LD_INT 2
15311: NEG
15312: PUSH
15313: LD_INT 0
15315: PUSH
15316: EMPTY
15317: LIST
15318: LIST
15319: PUSH
15320: LD_INT 2
15322: NEG
15323: PUSH
15324: LD_INT 1
15326: NEG
15327: PUSH
15328: EMPTY
15329: LIST
15330: LIST
15331: PUSH
15332: LD_INT 2
15334: NEG
15335: PUSH
15336: LD_INT 2
15338: NEG
15339: PUSH
15340: EMPTY
15341: LIST
15342: LIST
15343: PUSH
15344: LD_INT 2
15346: NEG
15347: PUSH
15348: LD_INT 3
15350: NEG
15351: PUSH
15352: EMPTY
15353: LIST
15354: LIST
15355: PUSH
15356: LD_INT 2
15358: PUSH
15359: LD_INT 1
15361: NEG
15362: PUSH
15363: EMPTY
15364: LIST
15365: LIST
15366: PUSH
15367: LD_INT 3
15369: PUSH
15370: LD_INT 1
15372: PUSH
15373: EMPTY
15374: LIST
15375: LIST
15376: PUSH
15377: LD_INT 1
15379: PUSH
15380: LD_INT 3
15382: PUSH
15383: EMPTY
15384: LIST
15385: LIST
15386: PUSH
15387: LD_INT 1
15389: NEG
15390: PUSH
15391: LD_INT 2
15393: PUSH
15394: EMPTY
15395: LIST
15396: LIST
15397: PUSH
15398: LD_INT 3
15400: NEG
15401: PUSH
15402: LD_INT 2
15404: NEG
15405: PUSH
15406: EMPTY
15407: LIST
15408: LIST
15409: PUSH
15410: EMPTY
15411: LIST
15412: LIST
15413: LIST
15414: LIST
15415: LIST
15416: LIST
15417: LIST
15418: LIST
15419: LIST
15420: LIST
15421: LIST
15422: LIST
15423: LIST
15424: LIST
15425: LIST
15426: LIST
15427: LIST
15428: LIST
15429: LIST
15430: LIST
15431: LIST
15432: LIST
15433: LIST
15434: ST_TO_ADDR
// Factory5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
15435: LD_ADDR_VAR 0 34
15439: PUSH
15440: LD_INT 0
15442: PUSH
15443: LD_INT 0
15445: PUSH
15446: EMPTY
15447: LIST
15448: LIST
15449: PUSH
15450: LD_INT 0
15452: PUSH
15453: LD_INT 1
15455: NEG
15456: PUSH
15457: EMPTY
15458: LIST
15459: LIST
15460: PUSH
15461: LD_INT 1
15463: PUSH
15464: LD_INT 0
15466: PUSH
15467: EMPTY
15468: LIST
15469: LIST
15470: PUSH
15471: LD_INT 1
15473: PUSH
15474: LD_INT 1
15476: PUSH
15477: EMPTY
15478: LIST
15479: LIST
15480: PUSH
15481: LD_INT 0
15483: PUSH
15484: LD_INT 1
15486: PUSH
15487: EMPTY
15488: LIST
15489: LIST
15490: PUSH
15491: LD_INT 1
15493: NEG
15494: PUSH
15495: LD_INT 0
15497: PUSH
15498: EMPTY
15499: LIST
15500: LIST
15501: PUSH
15502: LD_INT 1
15504: NEG
15505: PUSH
15506: LD_INT 1
15508: NEG
15509: PUSH
15510: EMPTY
15511: LIST
15512: LIST
15513: PUSH
15514: LD_INT 1
15516: NEG
15517: PUSH
15518: LD_INT 2
15520: NEG
15521: PUSH
15522: EMPTY
15523: LIST
15524: LIST
15525: PUSH
15526: LD_INT 0
15528: PUSH
15529: LD_INT 2
15531: NEG
15532: PUSH
15533: EMPTY
15534: LIST
15535: LIST
15536: PUSH
15537: LD_INT 1
15539: PUSH
15540: LD_INT 1
15542: NEG
15543: PUSH
15544: EMPTY
15545: LIST
15546: LIST
15547: PUSH
15548: LD_INT 2
15550: PUSH
15551: LD_INT 1
15553: PUSH
15554: EMPTY
15555: LIST
15556: LIST
15557: PUSH
15558: LD_INT 2
15560: PUSH
15561: LD_INT 2
15563: PUSH
15564: EMPTY
15565: LIST
15566: LIST
15567: PUSH
15568: LD_INT 1
15570: PUSH
15571: LD_INT 2
15573: PUSH
15574: EMPTY
15575: LIST
15576: LIST
15577: PUSH
15578: LD_INT 1
15580: NEG
15581: PUSH
15582: LD_INT 1
15584: PUSH
15585: EMPTY
15586: LIST
15587: LIST
15588: PUSH
15589: LD_INT 2
15591: NEG
15592: PUSH
15593: LD_INT 0
15595: PUSH
15596: EMPTY
15597: LIST
15598: LIST
15599: PUSH
15600: LD_INT 2
15602: NEG
15603: PUSH
15604: LD_INT 1
15606: NEG
15607: PUSH
15608: EMPTY
15609: LIST
15610: LIST
15611: PUSH
15612: LD_INT 2
15614: NEG
15615: PUSH
15616: LD_INT 2
15618: NEG
15619: PUSH
15620: EMPTY
15621: LIST
15622: LIST
15623: PUSH
15624: LD_INT 1
15626: NEG
15627: PUSH
15628: LD_INT 3
15630: NEG
15631: PUSH
15632: EMPTY
15633: LIST
15634: LIST
15635: PUSH
15636: LD_INT 1
15638: PUSH
15639: LD_INT 2
15641: NEG
15642: PUSH
15643: EMPTY
15644: LIST
15645: LIST
15646: PUSH
15647: LD_INT 3
15649: PUSH
15650: LD_INT 2
15652: PUSH
15653: EMPTY
15654: LIST
15655: LIST
15656: PUSH
15657: LD_INT 2
15659: PUSH
15660: LD_INT 3
15662: PUSH
15663: EMPTY
15664: LIST
15665: LIST
15666: PUSH
15667: LD_INT 2
15669: NEG
15670: PUSH
15671: LD_INT 1
15673: PUSH
15674: EMPTY
15675: LIST
15676: LIST
15677: PUSH
15678: LD_INT 3
15680: NEG
15681: PUSH
15682: LD_INT 1
15684: NEG
15685: PUSH
15686: EMPTY
15687: LIST
15688: LIST
15689: PUSH
15690: EMPTY
15691: LIST
15692: LIST
15693: LIST
15694: LIST
15695: LIST
15696: LIST
15697: LIST
15698: LIST
15699: LIST
15700: LIST
15701: LIST
15702: LIST
15703: LIST
15704: LIST
15705: LIST
15706: LIST
15707: LIST
15708: LIST
15709: LIST
15710: LIST
15711: LIST
15712: LIST
15713: LIST
15714: ST_TO_ADDR
// Ext0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 2 , 1 ] , [ - 2 , - 1 ] ] ;
15715: LD_ADDR_VAR 0 35
15719: PUSH
15720: LD_INT 0
15722: PUSH
15723: LD_INT 0
15725: PUSH
15726: EMPTY
15727: LIST
15728: LIST
15729: PUSH
15730: LD_INT 0
15732: PUSH
15733: LD_INT 1
15735: NEG
15736: PUSH
15737: EMPTY
15738: LIST
15739: LIST
15740: PUSH
15741: LD_INT 1
15743: PUSH
15744: LD_INT 0
15746: PUSH
15747: EMPTY
15748: LIST
15749: LIST
15750: PUSH
15751: LD_INT 1
15753: PUSH
15754: LD_INT 1
15756: PUSH
15757: EMPTY
15758: LIST
15759: LIST
15760: PUSH
15761: LD_INT 0
15763: PUSH
15764: LD_INT 1
15766: PUSH
15767: EMPTY
15768: LIST
15769: LIST
15770: PUSH
15771: LD_INT 1
15773: NEG
15774: PUSH
15775: LD_INT 0
15777: PUSH
15778: EMPTY
15779: LIST
15780: LIST
15781: PUSH
15782: LD_INT 1
15784: NEG
15785: PUSH
15786: LD_INT 1
15788: NEG
15789: PUSH
15790: EMPTY
15791: LIST
15792: LIST
15793: PUSH
15794: LD_INT 2
15796: PUSH
15797: LD_INT 1
15799: PUSH
15800: EMPTY
15801: LIST
15802: LIST
15803: PUSH
15804: LD_INT 2
15806: NEG
15807: PUSH
15808: LD_INT 1
15810: NEG
15811: PUSH
15812: EMPTY
15813: LIST
15814: LIST
15815: PUSH
15816: EMPTY
15817: LIST
15818: LIST
15819: LIST
15820: LIST
15821: LIST
15822: LIST
15823: LIST
15824: LIST
15825: LIST
15826: ST_TO_ADDR
// Ext1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , 2 ] ] ;
15827: LD_ADDR_VAR 0 36
15831: PUSH
15832: LD_INT 0
15834: PUSH
15835: LD_INT 0
15837: PUSH
15838: EMPTY
15839: LIST
15840: LIST
15841: PUSH
15842: LD_INT 0
15844: PUSH
15845: LD_INT 1
15847: NEG
15848: PUSH
15849: EMPTY
15850: LIST
15851: LIST
15852: PUSH
15853: LD_INT 1
15855: PUSH
15856: LD_INT 0
15858: PUSH
15859: EMPTY
15860: LIST
15861: LIST
15862: PUSH
15863: LD_INT 1
15865: PUSH
15866: LD_INT 1
15868: PUSH
15869: EMPTY
15870: LIST
15871: LIST
15872: PUSH
15873: LD_INT 0
15875: PUSH
15876: LD_INT 1
15878: PUSH
15879: EMPTY
15880: LIST
15881: LIST
15882: PUSH
15883: LD_INT 1
15885: NEG
15886: PUSH
15887: LD_INT 0
15889: PUSH
15890: EMPTY
15891: LIST
15892: LIST
15893: PUSH
15894: LD_INT 1
15896: NEG
15897: PUSH
15898: LD_INT 1
15900: NEG
15901: PUSH
15902: EMPTY
15903: LIST
15904: LIST
15905: PUSH
15906: LD_INT 1
15908: NEG
15909: PUSH
15910: LD_INT 2
15912: NEG
15913: PUSH
15914: EMPTY
15915: LIST
15916: LIST
15917: PUSH
15918: LD_INT 1
15920: PUSH
15921: LD_INT 2
15923: PUSH
15924: EMPTY
15925: LIST
15926: LIST
15927: PUSH
15928: EMPTY
15929: LIST
15930: LIST
15931: LIST
15932: LIST
15933: LIST
15934: LIST
15935: LIST
15936: LIST
15937: LIST
15938: ST_TO_ADDR
// Ext2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ - 1 , 1 ] ] ;
15939: LD_ADDR_VAR 0 37
15943: PUSH
15944: LD_INT 0
15946: PUSH
15947: LD_INT 0
15949: PUSH
15950: EMPTY
15951: LIST
15952: LIST
15953: PUSH
15954: LD_INT 0
15956: PUSH
15957: LD_INT 1
15959: NEG
15960: PUSH
15961: EMPTY
15962: LIST
15963: LIST
15964: PUSH
15965: LD_INT 1
15967: PUSH
15968: LD_INT 0
15970: PUSH
15971: EMPTY
15972: LIST
15973: LIST
15974: PUSH
15975: LD_INT 1
15977: PUSH
15978: LD_INT 1
15980: PUSH
15981: EMPTY
15982: LIST
15983: LIST
15984: PUSH
15985: LD_INT 0
15987: PUSH
15988: LD_INT 1
15990: PUSH
15991: EMPTY
15992: LIST
15993: LIST
15994: PUSH
15995: LD_INT 1
15997: NEG
15998: PUSH
15999: LD_INT 0
16001: PUSH
16002: EMPTY
16003: LIST
16004: LIST
16005: PUSH
16006: LD_INT 1
16008: NEG
16009: PUSH
16010: LD_INT 1
16012: NEG
16013: PUSH
16014: EMPTY
16015: LIST
16016: LIST
16017: PUSH
16018: LD_INT 1
16020: PUSH
16021: LD_INT 1
16023: NEG
16024: PUSH
16025: EMPTY
16026: LIST
16027: LIST
16028: PUSH
16029: LD_INT 1
16031: NEG
16032: PUSH
16033: LD_INT 1
16035: PUSH
16036: EMPTY
16037: LIST
16038: LIST
16039: PUSH
16040: EMPTY
16041: LIST
16042: LIST
16043: LIST
16044: LIST
16045: LIST
16046: LIST
16047: LIST
16048: LIST
16049: LIST
16050: ST_TO_ADDR
// Ext3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 2 , 1 ] , [ - 2 , - 1 ] ] ;
16051: LD_ADDR_VAR 0 38
16055: PUSH
16056: LD_INT 0
16058: PUSH
16059: LD_INT 0
16061: PUSH
16062: EMPTY
16063: LIST
16064: LIST
16065: PUSH
16066: LD_INT 0
16068: PUSH
16069: LD_INT 1
16071: NEG
16072: PUSH
16073: EMPTY
16074: LIST
16075: LIST
16076: PUSH
16077: LD_INT 1
16079: PUSH
16080: LD_INT 0
16082: PUSH
16083: EMPTY
16084: LIST
16085: LIST
16086: PUSH
16087: LD_INT 1
16089: PUSH
16090: LD_INT 1
16092: PUSH
16093: EMPTY
16094: LIST
16095: LIST
16096: PUSH
16097: LD_INT 0
16099: PUSH
16100: LD_INT 1
16102: PUSH
16103: EMPTY
16104: LIST
16105: LIST
16106: PUSH
16107: LD_INT 1
16109: NEG
16110: PUSH
16111: LD_INT 0
16113: PUSH
16114: EMPTY
16115: LIST
16116: LIST
16117: PUSH
16118: LD_INT 1
16120: NEG
16121: PUSH
16122: LD_INT 1
16124: NEG
16125: PUSH
16126: EMPTY
16127: LIST
16128: LIST
16129: PUSH
16130: LD_INT 2
16132: PUSH
16133: LD_INT 1
16135: PUSH
16136: EMPTY
16137: LIST
16138: LIST
16139: PUSH
16140: LD_INT 2
16142: NEG
16143: PUSH
16144: LD_INT 1
16146: NEG
16147: PUSH
16148: EMPTY
16149: LIST
16150: LIST
16151: PUSH
16152: EMPTY
16153: LIST
16154: LIST
16155: LIST
16156: LIST
16157: LIST
16158: LIST
16159: LIST
16160: LIST
16161: LIST
16162: ST_TO_ADDR
// Ext4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , 2 ] ] ;
16163: LD_ADDR_VAR 0 39
16167: PUSH
16168: LD_INT 0
16170: PUSH
16171: LD_INT 0
16173: PUSH
16174: EMPTY
16175: LIST
16176: LIST
16177: PUSH
16178: LD_INT 0
16180: PUSH
16181: LD_INT 1
16183: NEG
16184: PUSH
16185: EMPTY
16186: LIST
16187: LIST
16188: PUSH
16189: LD_INT 1
16191: PUSH
16192: LD_INT 0
16194: PUSH
16195: EMPTY
16196: LIST
16197: LIST
16198: PUSH
16199: LD_INT 1
16201: PUSH
16202: LD_INT 1
16204: PUSH
16205: EMPTY
16206: LIST
16207: LIST
16208: PUSH
16209: LD_INT 0
16211: PUSH
16212: LD_INT 1
16214: PUSH
16215: EMPTY
16216: LIST
16217: LIST
16218: PUSH
16219: LD_INT 1
16221: NEG
16222: PUSH
16223: LD_INT 0
16225: PUSH
16226: EMPTY
16227: LIST
16228: LIST
16229: PUSH
16230: LD_INT 1
16232: NEG
16233: PUSH
16234: LD_INT 1
16236: NEG
16237: PUSH
16238: EMPTY
16239: LIST
16240: LIST
16241: PUSH
16242: LD_INT 1
16244: NEG
16245: PUSH
16246: LD_INT 2
16248: NEG
16249: PUSH
16250: EMPTY
16251: LIST
16252: LIST
16253: PUSH
16254: LD_INT 1
16256: PUSH
16257: LD_INT 2
16259: PUSH
16260: EMPTY
16261: LIST
16262: LIST
16263: PUSH
16264: EMPTY
16265: LIST
16266: LIST
16267: LIST
16268: LIST
16269: LIST
16270: LIST
16271: LIST
16272: LIST
16273: LIST
16274: ST_TO_ADDR
// Ext5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ - 1 , 1 ] ] ;
16275: LD_ADDR_VAR 0 40
16279: PUSH
16280: LD_INT 0
16282: PUSH
16283: LD_INT 0
16285: PUSH
16286: EMPTY
16287: LIST
16288: LIST
16289: PUSH
16290: LD_INT 0
16292: PUSH
16293: LD_INT 1
16295: NEG
16296: PUSH
16297: EMPTY
16298: LIST
16299: LIST
16300: PUSH
16301: LD_INT 1
16303: PUSH
16304: LD_INT 0
16306: PUSH
16307: EMPTY
16308: LIST
16309: LIST
16310: PUSH
16311: LD_INT 1
16313: PUSH
16314: LD_INT 1
16316: PUSH
16317: EMPTY
16318: LIST
16319: LIST
16320: PUSH
16321: LD_INT 0
16323: PUSH
16324: LD_INT 1
16326: PUSH
16327: EMPTY
16328: LIST
16329: LIST
16330: PUSH
16331: LD_INT 1
16333: NEG
16334: PUSH
16335: LD_INT 0
16337: PUSH
16338: EMPTY
16339: LIST
16340: LIST
16341: PUSH
16342: LD_INT 1
16344: NEG
16345: PUSH
16346: LD_INT 1
16348: NEG
16349: PUSH
16350: EMPTY
16351: LIST
16352: LIST
16353: PUSH
16354: LD_INT 1
16356: PUSH
16357: LD_INT 1
16359: NEG
16360: PUSH
16361: EMPTY
16362: LIST
16363: LIST
16364: PUSH
16365: LD_INT 1
16367: NEG
16368: PUSH
16369: LD_INT 1
16371: PUSH
16372: EMPTY
16373: LIST
16374: LIST
16375: PUSH
16376: EMPTY
16377: LIST
16378: LIST
16379: LIST
16380: LIST
16381: LIST
16382: LIST
16383: LIST
16384: LIST
16385: LIST
16386: ST_TO_ADDR
// Lab0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
16387: LD_ADDR_VAR 0 41
16391: PUSH
16392: LD_INT 0
16394: PUSH
16395: LD_INT 0
16397: PUSH
16398: EMPTY
16399: LIST
16400: LIST
16401: PUSH
16402: LD_INT 0
16404: PUSH
16405: LD_INT 1
16407: NEG
16408: PUSH
16409: EMPTY
16410: LIST
16411: LIST
16412: PUSH
16413: LD_INT 1
16415: PUSH
16416: LD_INT 0
16418: PUSH
16419: EMPTY
16420: LIST
16421: LIST
16422: PUSH
16423: LD_INT 1
16425: PUSH
16426: LD_INT 1
16428: PUSH
16429: EMPTY
16430: LIST
16431: LIST
16432: PUSH
16433: LD_INT 0
16435: PUSH
16436: LD_INT 1
16438: PUSH
16439: EMPTY
16440: LIST
16441: LIST
16442: PUSH
16443: LD_INT 1
16445: NEG
16446: PUSH
16447: LD_INT 0
16449: PUSH
16450: EMPTY
16451: LIST
16452: LIST
16453: PUSH
16454: LD_INT 1
16456: NEG
16457: PUSH
16458: LD_INT 1
16460: NEG
16461: PUSH
16462: EMPTY
16463: LIST
16464: LIST
16465: PUSH
16466: LD_INT 1
16468: NEG
16469: PUSH
16470: LD_INT 2
16472: NEG
16473: PUSH
16474: EMPTY
16475: LIST
16476: LIST
16477: PUSH
16478: LD_INT 1
16480: PUSH
16481: LD_INT 1
16483: NEG
16484: PUSH
16485: EMPTY
16486: LIST
16487: LIST
16488: PUSH
16489: LD_INT 2
16491: PUSH
16492: LD_INT 0
16494: PUSH
16495: EMPTY
16496: LIST
16497: LIST
16498: PUSH
16499: LD_INT 2
16501: PUSH
16502: LD_INT 1
16504: PUSH
16505: EMPTY
16506: LIST
16507: LIST
16508: PUSH
16509: LD_INT 2
16511: PUSH
16512: LD_INT 2
16514: PUSH
16515: EMPTY
16516: LIST
16517: LIST
16518: PUSH
16519: LD_INT 1
16521: PUSH
16522: LD_INT 2
16524: PUSH
16525: EMPTY
16526: LIST
16527: LIST
16528: PUSH
16529: LD_INT 1
16531: NEG
16532: PUSH
16533: LD_INT 1
16535: PUSH
16536: EMPTY
16537: LIST
16538: LIST
16539: PUSH
16540: LD_INT 2
16542: NEG
16543: PUSH
16544: LD_INT 0
16546: PUSH
16547: EMPTY
16548: LIST
16549: LIST
16550: PUSH
16551: LD_INT 2
16553: NEG
16554: PUSH
16555: LD_INT 1
16557: NEG
16558: PUSH
16559: EMPTY
16560: LIST
16561: LIST
16562: PUSH
16563: LD_INT 2
16565: NEG
16566: PUSH
16567: LD_INT 2
16569: NEG
16570: PUSH
16571: EMPTY
16572: LIST
16573: LIST
16574: PUSH
16575: LD_INT 2
16577: NEG
16578: PUSH
16579: LD_INT 3
16581: NEG
16582: PUSH
16583: EMPTY
16584: LIST
16585: LIST
16586: PUSH
16587: LD_INT 2
16589: PUSH
16590: LD_INT 1
16592: NEG
16593: PUSH
16594: EMPTY
16595: LIST
16596: LIST
16597: PUSH
16598: LD_INT 3
16600: PUSH
16601: LD_INT 0
16603: PUSH
16604: EMPTY
16605: LIST
16606: LIST
16607: PUSH
16608: LD_INT 3
16610: PUSH
16611: LD_INT 1
16613: PUSH
16614: EMPTY
16615: LIST
16616: LIST
16617: PUSH
16618: LD_INT 3
16620: PUSH
16621: LD_INT 2
16623: PUSH
16624: EMPTY
16625: LIST
16626: LIST
16627: PUSH
16628: LD_INT 3
16630: PUSH
16631: LD_INT 3
16633: PUSH
16634: EMPTY
16635: LIST
16636: LIST
16637: PUSH
16638: LD_INT 2
16640: PUSH
16641: LD_INT 3
16643: PUSH
16644: EMPTY
16645: LIST
16646: LIST
16647: PUSH
16648: LD_INT 2
16650: NEG
16651: PUSH
16652: LD_INT 1
16654: PUSH
16655: EMPTY
16656: LIST
16657: LIST
16658: PUSH
16659: LD_INT 3
16661: NEG
16662: PUSH
16663: LD_INT 0
16665: PUSH
16666: EMPTY
16667: LIST
16668: LIST
16669: PUSH
16670: LD_INT 3
16672: NEG
16673: PUSH
16674: LD_INT 1
16676: NEG
16677: PUSH
16678: EMPTY
16679: LIST
16680: LIST
16681: PUSH
16682: LD_INT 3
16684: NEG
16685: PUSH
16686: LD_INT 2
16688: NEG
16689: PUSH
16690: EMPTY
16691: LIST
16692: LIST
16693: PUSH
16694: LD_INT 3
16696: NEG
16697: PUSH
16698: LD_INT 3
16700: NEG
16701: PUSH
16702: EMPTY
16703: LIST
16704: LIST
16705: PUSH
16706: EMPTY
16707: LIST
16708: LIST
16709: LIST
16710: LIST
16711: LIST
16712: LIST
16713: LIST
16714: LIST
16715: LIST
16716: LIST
16717: LIST
16718: LIST
16719: LIST
16720: LIST
16721: LIST
16722: LIST
16723: LIST
16724: LIST
16725: LIST
16726: LIST
16727: LIST
16728: LIST
16729: LIST
16730: LIST
16731: LIST
16732: LIST
16733: LIST
16734: LIST
16735: LIST
16736: ST_TO_ADDR
// Lab1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
16737: LD_ADDR_VAR 0 42
16741: PUSH
16742: LD_INT 0
16744: PUSH
16745: LD_INT 0
16747: PUSH
16748: EMPTY
16749: LIST
16750: LIST
16751: PUSH
16752: LD_INT 0
16754: PUSH
16755: LD_INT 1
16757: NEG
16758: PUSH
16759: EMPTY
16760: LIST
16761: LIST
16762: PUSH
16763: LD_INT 1
16765: PUSH
16766: LD_INT 0
16768: PUSH
16769: EMPTY
16770: LIST
16771: LIST
16772: PUSH
16773: LD_INT 1
16775: PUSH
16776: LD_INT 1
16778: PUSH
16779: EMPTY
16780: LIST
16781: LIST
16782: PUSH
16783: LD_INT 0
16785: PUSH
16786: LD_INT 1
16788: PUSH
16789: EMPTY
16790: LIST
16791: LIST
16792: PUSH
16793: LD_INT 1
16795: NEG
16796: PUSH
16797: LD_INT 0
16799: PUSH
16800: EMPTY
16801: LIST
16802: LIST
16803: PUSH
16804: LD_INT 1
16806: NEG
16807: PUSH
16808: LD_INT 1
16810: NEG
16811: PUSH
16812: EMPTY
16813: LIST
16814: LIST
16815: PUSH
16816: LD_INT 1
16818: NEG
16819: PUSH
16820: LD_INT 2
16822: NEG
16823: PUSH
16824: EMPTY
16825: LIST
16826: LIST
16827: PUSH
16828: LD_INT 0
16830: PUSH
16831: LD_INT 2
16833: NEG
16834: PUSH
16835: EMPTY
16836: LIST
16837: LIST
16838: PUSH
16839: LD_INT 1
16841: PUSH
16842: LD_INT 1
16844: NEG
16845: PUSH
16846: EMPTY
16847: LIST
16848: LIST
16849: PUSH
16850: LD_INT 2
16852: PUSH
16853: LD_INT 1
16855: PUSH
16856: EMPTY
16857: LIST
16858: LIST
16859: PUSH
16860: LD_INT 2
16862: PUSH
16863: LD_INT 2
16865: PUSH
16866: EMPTY
16867: LIST
16868: LIST
16869: PUSH
16870: LD_INT 1
16872: PUSH
16873: LD_INT 2
16875: PUSH
16876: EMPTY
16877: LIST
16878: LIST
16879: PUSH
16880: LD_INT 0
16882: PUSH
16883: LD_INT 2
16885: PUSH
16886: EMPTY
16887: LIST
16888: LIST
16889: PUSH
16890: LD_INT 1
16892: NEG
16893: PUSH
16894: LD_INT 1
16896: PUSH
16897: EMPTY
16898: LIST
16899: LIST
16900: PUSH
16901: LD_INT 2
16903: NEG
16904: PUSH
16905: LD_INT 1
16907: NEG
16908: PUSH
16909: EMPTY
16910: LIST
16911: LIST
16912: PUSH
16913: LD_INT 2
16915: NEG
16916: PUSH
16917: LD_INT 2
16919: NEG
16920: PUSH
16921: EMPTY
16922: LIST
16923: LIST
16924: PUSH
16925: LD_INT 2
16927: NEG
16928: PUSH
16929: LD_INT 3
16931: NEG
16932: PUSH
16933: EMPTY
16934: LIST
16935: LIST
16936: PUSH
16937: LD_INT 1
16939: NEG
16940: PUSH
16941: LD_INT 3
16943: NEG
16944: PUSH
16945: EMPTY
16946: LIST
16947: LIST
16948: PUSH
16949: LD_INT 0
16951: PUSH
16952: LD_INT 3
16954: NEG
16955: PUSH
16956: EMPTY
16957: LIST
16958: LIST
16959: PUSH
16960: LD_INT 1
16962: PUSH
16963: LD_INT 2
16965: NEG
16966: PUSH
16967: EMPTY
16968: LIST
16969: LIST
16970: PUSH
16971: LD_INT 3
16973: PUSH
16974: LD_INT 2
16976: PUSH
16977: EMPTY
16978: LIST
16979: LIST
16980: PUSH
16981: LD_INT 3
16983: PUSH
16984: LD_INT 3
16986: PUSH
16987: EMPTY
16988: LIST
16989: LIST
16990: PUSH
16991: LD_INT 2
16993: PUSH
16994: LD_INT 3
16996: PUSH
16997: EMPTY
16998: LIST
16999: LIST
17000: PUSH
17001: LD_INT 1
17003: PUSH
17004: LD_INT 3
17006: PUSH
17007: EMPTY
17008: LIST
17009: LIST
17010: PUSH
17011: LD_INT 0
17013: PUSH
17014: LD_INT 3
17016: PUSH
17017: EMPTY
17018: LIST
17019: LIST
17020: PUSH
17021: LD_INT 1
17023: NEG
17024: PUSH
17025: LD_INT 2
17027: PUSH
17028: EMPTY
17029: LIST
17030: LIST
17031: PUSH
17032: LD_INT 3
17034: NEG
17035: PUSH
17036: LD_INT 2
17038: NEG
17039: PUSH
17040: EMPTY
17041: LIST
17042: LIST
17043: PUSH
17044: LD_INT 3
17046: NEG
17047: PUSH
17048: LD_INT 3
17050: NEG
17051: PUSH
17052: EMPTY
17053: LIST
17054: LIST
17055: PUSH
17056: EMPTY
17057: LIST
17058: LIST
17059: LIST
17060: LIST
17061: LIST
17062: LIST
17063: LIST
17064: LIST
17065: LIST
17066: LIST
17067: LIST
17068: LIST
17069: LIST
17070: LIST
17071: LIST
17072: LIST
17073: LIST
17074: LIST
17075: LIST
17076: LIST
17077: LIST
17078: LIST
17079: LIST
17080: LIST
17081: LIST
17082: LIST
17083: LIST
17084: LIST
17085: LIST
17086: ST_TO_ADDR
// Lab2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
17087: LD_ADDR_VAR 0 43
17091: PUSH
17092: LD_INT 0
17094: PUSH
17095: LD_INT 0
17097: PUSH
17098: EMPTY
17099: LIST
17100: LIST
17101: PUSH
17102: LD_INT 0
17104: PUSH
17105: LD_INT 1
17107: NEG
17108: PUSH
17109: EMPTY
17110: LIST
17111: LIST
17112: PUSH
17113: LD_INT 1
17115: PUSH
17116: LD_INT 0
17118: PUSH
17119: EMPTY
17120: LIST
17121: LIST
17122: PUSH
17123: LD_INT 1
17125: PUSH
17126: LD_INT 1
17128: PUSH
17129: EMPTY
17130: LIST
17131: LIST
17132: PUSH
17133: LD_INT 0
17135: PUSH
17136: LD_INT 1
17138: PUSH
17139: EMPTY
17140: LIST
17141: LIST
17142: PUSH
17143: LD_INT 1
17145: NEG
17146: PUSH
17147: LD_INT 0
17149: PUSH
17150: EMPTY
17151: LIST
17152: LIST
17153: PUSH
17154: LD_INT 1
17156: NEG
17157: PUSH
17158: LD_INT 1
17160: NEG
17161: PUSH
17162: EMPTY
17163: LIST
17164: LIST
17165: PUSH
17166: LD_INT 1
17168: NEG
17169: PUSH
17170: LD_INT 2
17172: NEG
17173: PUSH
17174: EMPTY
17175: LIST
17176: LIST
17177: PUSH
17178: LD_INT 0
17180: PUSH
17181: LD_INT 2
17183: NEG
17184: PUSH
17185: EMPTY
17186: LIST
17187: LIST
17188: PUSH
17189: LD_INT 1
17191: PUSH
17192: LD_INT 1
17194: NEG
17195: PUSH
17196: EMPTY
17197: LIST
17198: LIST
17199: PUSH
17200: LD_INT 2
17202: PUSH
17203: LD_INT 0
17205: PUSH
17206: EMPTY
17207: LIST
17208: LIST
17209: PUSH
17210: LD_INT 2
17212: PUSH
17213: LD_INT 1
17215: PUSH
17216: EMPTY
17217: LIST
17218: LIST
17219: PUSH
17220: LD_INT 1
17222: PUSH
17223: LD_INT 2
17225: PUSH
17226: EMPTY
17227: LIST
17228: LIST
17229: PUSH
17230: LD_INT 0
17232: PUSH
17233: LD_INT 2
17235: PUSH
17236: EMPTY
17237: LIST
17238: LIST
17239: PUSH
17240: LD_INT 1
17242: NEG
17243: PUSH
17244: LD_INT 1
17246: PUSH
17247: EMPTY
17248: LIST
17249: LIST
17250: PUSH
17251: LD_INT 2
17253: NEG
17254: PUSH
17255: LD_INT 0
17257: PUSH
17258: EMPTY
17259: LIST
17260: LIST
17261: PUSH
17262: LD_INT 2
17264: NEG
17265: PUSH
17266: LD_INT 1
17268: NEG
17269: PUSH
17270: EMPTY
17271: LIST
17272: LIST
17273: PUSH
17274: LD_INT 1
17276: NEG
17277: PUSH
17278: LD_INT 3
17280: NEG
17281: PUSH
17282: EMPTY
17283: LIST
17284: LIST
17285: PUSH
17286: LD_INT 0
17288: PUSH
17289: LD_INT 3
17291: NEG
17292: PUSH
17293: EMPTY
17294: LIST
17295: LIST
17296: PUSH
17297: LD_INT 1
17299: PUSH
17300: LD_INT 2
17302: NEG
17303: PUSH
17304: EMPTY
17305: LIST
17306: LIST
17307: PUSH
17308: LD_INT 2
17310: PUSH
17311: LD_INT 1
17313: NEG
17314: PUSH
17315: EMPTY
17316: LIST
17317: LIST
17318: PUSH
17319: LD_INT 3
17321: PUSH
17322: LD_INT 0
17324: PUSH
17325: EMPTY
17326: LIST
17327: LIST
17328: PUSH
17329: LD_INT 3
17331: PUSH
17332: LD_INT 1
17334: PUSH
17335: EMPTY
17336: LIST
17337: LIST
17338: PUSH
17339: LD_INT 1
17341: PUSH
17342: LD_INT 3
17344: PUSH
17345: EMPTY
17346: LIST
17347: LIST
17348: PUSH
17349: LD_INT 0
17351: PUSH
17352: LD_INT 3
17354: PUSH
17355: EMPTY
17356: LIST
17357: LIST
17358: PUSH
17359: LD_INT 1
17361: NEG
17362: PUSH
17363: LD_INT 2
17365: PUSH
17366: EMPTY
17367: LIST
17368: LIST
17369: PUSH
17370: LD_INT 2
17372: NEG
17373: PUSH
17374: LD_INT 1
17376: PUSH
17377: EMPTY
17378: LIST
17379: LIST
17380: PUSH
17381: LD_INT 3
17383: NEG
17384: PUSH
17385: LD_INT 0
17387: PUSH
17388: EMPTY
17389: LIST
17390: LIST
17391: PUSH
17392: LD_INT 3
17394: NEG
17395: PUSH
17396: LD_INT 1
17398: NEG
17399: PUSH
17400: EMPTY
17401: LIST
17402: LIST
17403: PUSH
17404: EMPTY
17405: LIST
17406: LIST
17407: LIST
17408: LIST
17409: LIST
17410: LIST
17411: LIST
17412: LIST
17413: LIST
17414: LIST
17415: LIST
17416: LIST
17417: LIST
17418: LIST
17419: LIST
17420: LIST
17421: LIST
17422: LIST
17423: LIST
17424: LIST
17425: LIST
17426: LIST
17427: LIST
17428: LIST
17429: LIST
17430: LIST
17431: LIST
17432: LIST
17433: LIST
17434: ST_TO_ADDR
// Lab3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
17435: LD_ADDR_VAR 0 44
17439: PUSH
17440: LD_INT 0
17442: PUSH
17443: LD_INT 0
17445: PUSH
17446: EMPTY
17447: LIST
17448: LIST
17449: PUSH
17450: LD_INT 0
17452: PUSH
17453: LD_INT 1
17455: NEG
17456: PUSH
17457: EMPTY
17458: LIST
17459: LIST
17460: PUSH
17461: LD_INT 1
17463: PUSH
17464: LD_INT 0
17466: PUSH
17467: EMPTY
17468: LIST
17469: LIST
17470: PUSH
17471: LD_INT 1
17473: PUSH
17474: LD_INT 1
17476: PUSH
17477: EMPTY
17478: LIST
17479: LIST
17480: PUSH
17481: LD_INT 0
17483: PUSH
17484: LD_INT 1
17486: PUSH
17487: EMPTY
17488: LIST
17489: LIST
17490: PUSH
17491: LD_INT 1
17493: NEG
17494: PUSH
17495: LD_INT 0
17497: PUSH
17498: EMPTY
17499: LIST
17500: LIST
17501: PUSH
17502: LD_INT 1
17504: NEG
17505: PUSH
17506: LD_INT 1
17508: NEG
17509: PUSH
17510: EMPTY
17511: LIST
17512: LIST
17513: PUSH
17514: LD_INT 1
17516: NEG
17517: PUSH
17518: LD_INT 2
17520: NEG
17521: PUSH
17522: EMPTY
17523: LIST
17524: LIST
17525: PUSH
17526: LD_INT 1
17528: PUSH
17529: LD_INT 1
17531: NEG
17532: PUSH
17533: EMPTY
17534: LIST
17535: LIST
17536: PUSH
17537: LD_INT 2
17539: PUSH
17540: LD_INT 0
17542: PUSH
17543: EMPTY
17544: LIST
17545: LIST
17546: PUSH
17547: LD_INT 2
17549: PUSH
17550: LD_INT 1
17552: PUSH
17553: EMPTY
17554: LIST
17555: LIST
17556: PUSH
17557: LD_INT 2
17559: PUSH
17560: LD_INT 2
17562: PUSH
17563: EMPTY
17564: LIST
17565: LIST
17566: PUSH
17567: LD_INT 1
17569: PUSH
17570: LD_INT 2
17572: PUSH
17573: EMPTY
17574: LIST
17575: LIST
17576: PUSH
17577: LD_INT 1
17579: NEG
17580: PUSH
17581: LD_INT 1
17583: PUSH
17584: EMPTY
17585: LIST
17586: LIST
17587: PUSH
17588: LD_INT 2
17590: NEG
17591: PUSH
17592: LD_INT 0
17594: PUSH
17595: EMPTY
17596: LIST
17597: LIST
17598: PUSH
17599: LD_INT 2
17601: NEG
17602: PUSH
17603: LD_INT 1
17605: NEG
17606: PUSH
17607: EMPTY
17608: LIST
17609: LIST
17610: PUSH
17611: LD_INT 2
17613: NEG
17614: PUSH
17615: LD_INT 2
17617: NEG
17618: PUSH
17619: EMPTY
17620: LIST
17621: LIST
17622: PUSH
17623: LD_INT 2
17625: NEG
17626: PUSH
17627: LD_INT 3
17629: NEG
17630: PUSH
17631: EMPTY
17632: LIST
17633: LIST
17634: PUSH
17635: LD_INT 2
17637: PUSH
17638: LD_INT 1
17640: NEG
17641: PUSH
17642: EMPTY
17643: LIST
17644: LIST
17645: PUSH
17646: LD_INT 3
17648: PUSH
17649: LD_INT 0
17651: PUSH
17652: EMPTY
17653: LIST
17654: LIST
17655: PUSH
17656: LD_INT 3
17658: PUSH
17659: LD_INT 1
17661: PUSH
17662: EMPTY
17663: LIST
17664: LIST
17665: PUSH
17666: LD_INT 3
17668: PUSH
17669: LD_INT 2
17671: PUSH
17672: EMPTY
17673: LIST
17674: LIST
17675: PUSH
17676: LD_INT 3
17678: PUSH
17679: LD_INT 3
17681: PUSH
17682: EMPTY
17683: LIST
17684: LIST
17685: PUSH
17686: LD_INT 2
17688: PUSH
17689: LD_INT 3
17691: PUSH
17692: EMPTY
17693: LIST
17694: LIST
17695: PUSH
17696: LD_INT 2
17698: NEG
17699: PUSH
17700: LD_INT 1
17702: PUSH
17703: EMPTY
17704: LIST
17705: LIST
17706: PUSH
17707: LD_INT 3
17709: NEG
17710: PUSH
17711: LD_INT 0
17713: PUSH
17714: EMPTY
17715: LIST
17716: LIST
17717: PUSH
17718: LD_INT 3
17720: NEG
17721: PUSH
17722: LD_INT 1
17724: NEG
17725: PUSH
17726: EMPTY
17727: LIST
17728: LIST
17729: PUSH
17730: LD_INT 3
17732: NEG
17733: PUSH
17734: LD_INT 2
17736: NEG
17737: PUSH
17738: EMPTY
17739: LIST
17740: LIST
17741: PUSH
17742: LD_INT 3
17744: NEG
17745: PUSH
17746: LD_INT 3
17748: NEG
17749: PUSH
17750: EMPTY
17751: LIST
17752: LIST
17753: PUSH
17754: EMPTY
17755: LIST
17756: LIST
17757: LIST
17758: LIST
17759: LIST
17760: LIST
17761: LIST
17762: LIST
17763: LIST
17764: LIST
17765: LIST
17766: LIST
17767: LIST
17768: LIST
17769: LIST
17770: LIST
17771: LIST
17772: LIST
17773: LIST
17774: LIST
17775: LIST
17776: LIST
17777: LIST
17778: LIST
17779: LIST
17780: LIST
17781: LIST
17782: LIST
17783: LIST
17784: ST_TO_ADDR
// Lab4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
17785: LD_ADDR_VAR 0 45
17789: PUSH
17790: LD_INT 0
17792: PUSH
17793: LD_INT 0
17795: PUSH
17796: EMPTY
17797: LIST
17798: LIST
17799: PUSH
17800: LD_INT 0
17802: PUSH
17803: LD_INT 1
17805: NEG
17806: PUSH
17807: EMPTY
17808: LIST
17809: LIST
17810: PUSH
17811: LD_INT 1
17813: PUSH
17814: LD_INT 0
17816: PUSH
17817: EMPTY
17818: LIST
17819: LIST
17820: PUSH
17821: LD_INT 1
17823: PUSH
17824: LD_INT 1
17826: PUSH
17827: EMPTY
17828: LIST
17829: LIST
17830: PUSH
17831: LD_INT 0
17833: PUSH
17834: LD_INT 1
17836: PUSH
17837: EMPTY
17838: LIST
17839: LIST
17840: PUSH
17841: LD_INT 1
17843: NEG
17844: PUSH
17845: LD_INT 0
17847: PUSH
17848: EMPTY
17849: LIST
17850: LIST
17851: PUSH
17852: LD_INT 1
17854: NEG
17855: PUSH
17856: LD_INT 1
17858: NEG
17859: PUSH
17860: EMPTY
17861: LIST
17862: LIST
17863: PUSH
17864: LD_INT 1
17866: NEG
17867: PUSH
17868: LD_INT 2
17870: NEG
17871: PUSH
17872: EMPTY
17873: LIST
17874: LIST
17875: PUSH
17876: LD_INT 0
17878: PUSH
17879: LD_INT 2
17881: NEG
17882: PUSH
17883: EMPTY
17884: LIST
17885: LIST
17886: PUSH
17887: LD_INT 1
17889: PUSH
17890: LD_INT 1
17892: NEG
17893: PUSH
17894: EMPTY
17895: LIST
17896: LIST
17897: PUSH
17898: LD_INT 2
17900: PUSH
17901: LD_INT 1
17903: PUSH
17904: EMPTY
17905: LIST
17906: LIST
17907: PUSH
17908: LD_INT 2
17910: PUSH
17911: LD_INT 2
17913: PUSH
17914: EMPTY
17915: LIST
17916: LIST
17917: PUSH
17918: LD_INT 1
17920: PUSH
17921: LD_INT 2
17923: PUSH
17924: EMPTY
17925: LIST
17926: LIST
17927: PUSH
17928: LD_INT 0
17930: PUSH
17931: LD_INT 2
17933: PUSH
17934: EMPTY
17935: LIST
17936: LIST
17937: PUSH
17938: LD_INT 1
17940: NEG
17941: PUSH
17942: LD_INT 1
17944: PUSH
17945: EMPTY
17946: LIST
17947: LIST
17948: PUSH
17949: LD_INT 2
17951: NEG
17952: PUSH
17953: LD_INT 1
17955: NEG
17956: PUSH
17957: EMPTY
17958: LIST
17959: LIST
17960: PUSH
17961: LD_INT 2
17963: NEG
17964: PUSH
17965: LD_INT 2
17967: NEG
17968: PUSH
17969: EMPTY
17970: LIST
17971: LIST
17972: PUSH
17973: LD_INT 2
17975: NEG
17976: PUSH
17977: LD_INT 3
17979: NEG
17980: PUSH
17981: EMPTY
17982: LIST
17983: LIST
17984: PUSH
17985: LD_INT 1
17987: NEG
17988: PUSH
17989: LD_INT 3
17991: NEG
17992: PUSH
17993: EMPTY
17994: LIST
17995: LIST
17996: PUSH
17997: LD_INT 0
17999: PUSH
18000: LD_INT 3
18002: NEG
18003: PUSH
18004: EMPTY
18005: LIST
18006: LIST
18007: PUSH
18008: LD_INT 1
18010: PUSH
18011: LD_INT 2
18013: NEG
18014: PUSH
18015: EMPTY
18016: LIST
18017: LIST
18018: PUSH
18019: LD_INT 3
18021: PUSH
18022: LD_INT 2
18024: PUSH
18025: EMPTY
18026: LIST
18027: LIST
18028: PUSH
18029: LD_INT 3
18031: PUSH
18032: LD_INT 3
18034: PUSH
18035: EMPTY
18036: LIST
18037: LIST
18038: PUSH
18039: LD_INT 2
18041: PUSH
18042: LD_INT 3
18044: PUSH
18045: EMPTY
18046: LIST
18047: LIST
18048: PUSH
18049: LD_INT 1
18051: PUSH
18052: LD_INT 3
18054: PUSH
18055: EMPTY
18056: LIST
18057: LIST
18058: PUSH
18059: LD_INT 0
18061: PUSH
18062: LD_INT 3
18064: PUSH
18065: EMPTY
18066: LIST
18067: LIST
18068: PUSH
18069: LD_INT 1
18071: NEG
18072: PUSH
18073: LD_INT 2
18075: PUSH
18076: EMPTY
18077: LIST
18078: LIST
18079: PUSH
18080: LD_INT 3
18082: NEG
18083: PUSH
18084: LD_INT 2
18086: NEG
18087: PUSH
18088: EMPTY
18089: LIST
18090: LIST
18091: PUSH
18092: LD_INT 3
18094: NEG
18095: PUSH
18096: LD_INT 3
18098: NEG
18099: PUSH
18100: EMPTY
18101: LIST
18102: LIST
18103: PUSH
18104: EMPTY
18105: LIST
18106: LIST
18107: LIST
18108: LIST
18109: LIST
18110: LIST
18111: LIST
18112: LIST
18113: LIST
18114: LIST
18115: LIST
18116: LIST
18117: LIST
18118: LIST
18119: LIST
18120: LIST
18121: LIST
18122: LIST
18123: LIST
18124: LIST
18125: LIST
18126: LIST
18127: LIST
18128: LIST
18129: LIST
18130: LIST
18131: LIST
18132: LIST
18133: LIST
18134: ST_TO_ADDR
// Lab5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
18135: LD_ADDR_VAR 0 46
18139: PUSH
18140: LD_INT 0
18142: PUSH
18143: LD_INT 0
18145: PUSH
18146: EMPTY
18147: LIST
18148: LIST
18149: PUSH
18150: LD_INT 0
18152: PUSH
18153: LD_INT 1
18155: NEG
18156: PUSH
18157: EMPTY
18158: LIST
18159: LIST
18160: PUSH
18161: LD_INT 1
18163: PUSH
18164: LD_INT 0
18166: PUSH
18167: EMPTY
18168: LIST
18169: LIST
18170: PUSH
18171: LD_INT 1
18173: PUSH
18174: LD_INT 1
18176: PUSH
18177: EMPTY
18178: LIST
18179: LIST
18180: PUSH
18181: LD_INT 0
18183: PUSH
18184: LD_INT 1
18186: PUSH
18187: EMPTY
18188: LIST
18189: LIST
18190: PUSH
18191: LD_INT 1
18193: NEG
18194: PUSH
18195: LD_INT 0
18197: PUSH
18198: EMPTY
18199: LIST
18200: LIST
18201: PUSH
18202: LD_INT 1
18204: NEG
18205: PUSH
18206: LD_INT 1
18208: NEG
18209: PUSH
18210: EMPTY
18211: LIST
18212: LIST
18213: PUSH
18214: LD_INT 1
18216: NEG
18217: PUSH
18218: LD_INT 2
18220: NEG
18221: PUSH
18222: EMPTY
18223: LIST
18224: LIST
18225: PUSH
18226: LD_INT 0
18228: PUSH
18229: LD_INT 2
18231: NEG
18232: PUSH
18233: EMPTY
18234: LIST
18235: LIST
18236: PUSH
18237: LD_INT 1
18239: PUSH
18240: LD_INT 1
18242: NEG
18243: PUSH
18244: EMPTY
18245: LIST
18246: LIST
18247: PUSH
18248: LD_INT 2
18250: PUSH
18251: LD_INT 0
18253: PUSH
18254: EMPTY
18255: LIST
18256: LIST
18257: PUSH
18258: LD_INT 2
18260: PUSH
18261: LD_INT 1
18263: PUSH
18264: EMPTY
18265: LIST
18266: LIST
18267: PUSH
18268: LD_INT 1
18270: PUSH
18271: LD_INT 2
18273: PUSH
18274: EMPTY
18275: LIST
18276: LIST
18277: PUSH
18278: LD_INT 0
18280: PUSH
18281: LD_INT 2
18283: PUSH
18284: EMPTY
18285: LIST
18286: LIST
18287: PUSH
18288: LD_INT 1
18290: NEG
18291: PUSH
18292: LD_INT 1
18294: PUSH
18295: EMPTY
18296: LIST
18297: LIST
18298: PUSH
18299: LD_INT 2
18301: NEG
18302: PUSH
18303: LD_INT 0
18305: PUSH
18306: EMPTY
18307: LIST
18308: LIST
18309: PUSH
18310: LD_INT 2
18312: NEG
18313: PUSH
18314: LD_INT 1
18316: NEG
18317: PUSH
18318: EMPTY
18319: LIST
18320: LIST
18321: PUSH
18322: LD_INT 1
18324: NEG
18325: PUSH
18326: LD_INT 3
18328: NEG
18329: PUSH
18330: EMPTY
18331: LIST
18332: LIST
18333: PUSH
18334: LD_INT 0
18336: PUSH
18337: LD_INT 3
18339: NEG
18340: PUSH
18341: EMPTY
18342: LIST
18343: LIST
18344: PUSH
18345: LD_INT 1
18347: PUSH
18348: LD_INT 2
18350: NEG
18351: PUSH
18352: EMPTY
18353: LIST
18354: LIST
18355: PUSH
18356: LD_INT 2
18358: PUSH
18359: LD_INT 1
18361: NEG
18362: PUSH
18363: EMPTY
18364: LIST
18365: LIST
18366: PUSH
18367: LD_INT 3
18369: PUSH
18370: LD_INT 0
18372: PUSH
18373: EMPTY
18374: LIST
18375: LIST
18376: PUSH
18377: LD_INT 3
18379: PUSH
18380: LD_INT 1
18382: PUSH
18383: EMPTY
18384: LIST
18385: LIST
18386: PUSH
18387: LD_INT 1
18389: PUSH
18390: LD_INT 3
18392: PUSH
18393: EMPTY
18394: LIST
18395: LIST
18396: PUSH
18397: LD_INT 0
18399: PUSH
18400: LD_INT 3
18402: PUSH
18403: EMPTY
18404: LIST
18405: LIST
18406: PUSH
18407: LD_INT 1
18409: NEG
18410: PUSH
18411: LD_INT 2
18413: PUSH
18414: EMPTY
18415: LIST
18416: LIST
18417: PUSH
18418: LD_INT 2
18420: NEG
18421: PUSH
18422: LD_INT 1
18424: PUSH
18425: EMPTY
18426: LIST
18427: LIST
18428: PUSH
18429: LD_INT 3
18431: NEG
18432: PUSH
18433: LD_INT 0
18435: PUSH
18436: EMPTY
18437: LIST
18438: LIST
18439: PUSH
18440: LD_INT 3
18442: NEG
18443: PUSH
18444: LD_INT 1
18446: NEG
18447: PUSH
18448: EMPTY
18449: LIST
18450: LIST
18451: PUSH
18452: EMPTY
18453: LIST
18454: LIST
18455: LIST
18456: LIST
18457: LIST
18458: LIST
18459: LIST
18460: LIST
18461: LIST
18462: LIST
18463: LIST
18464: LIST
18465: LIST
18466: LIST
18467: LIST
18468: LIST
18469: LIST
18470: LIST
18471: LIST
18472: LIST
18473: LIST
18474: LIST
18475: LIST
18476: LIST
18477: LIST
18478: LIST
18479: LIST
18480: LIST
18481: LIST
18482: ST_TO_ADDR
// ControlTower0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
18483: LD_ADDR_VAR 0 47
18487: PUSH
18488: LD_INT 0
18490: PUSH
18491: LD_INT 0
18493: PUSH
18494: EMPTY
18495: LIST
18496: LIST
18497: PUSH
18498: LD_INT 0
18500: PUSH
18501: LD_INT 1
18503: NEG
18504: PUSH
18505: EMPTY
18506: LIST
18507: LIST
18508: PUSH
18509: LD_INT 1
18511: PUSH
18512: LD_INT 0
18514: PUSH
18515: EMPTY
18516: LIST
18517: LIST
18518: PUSH
18519: LD_INT 1
18521: PUSH
18522: LD_INT 1
18524: PUSH
18525: EMPTY
18526: LIST
18527: LIST
18528: PUSH
18529: LD_INT 0
18531: PUSH
18532: LD_INT 1
18534: PUSH
18535: EMPTY
18536: LIST
18537: LIST
18538: PUSH
18539: LD_INT 1
18541: NEG
18542: PUSH
18543: LD_INT 0
18545: PUSH
18546: EMPTY
18547: LIST
18548: LIST
18549: PUSH
18550: LD_INT 1
18552: NEG
18553: PUSH
18554: LD_INT 1
18556: NEG
18557: PUSH
18558: EMPTY
18559: LIST
18560: LIST
18561: PUSH
18562: LD_INT 1
18564: NEG
18565: PUSH
18566: LD_INT 2
18568: NEG
18569: PUSH
18570: EMPTY
18571: LIST
18572: LIST
18573: PUSH
18574: LD_INT 0
18576: PUSH
18577: LD_INT 2
18579: NEG
18580: PUSH
18581: EMPTY
18582: LIST
18583: LIST
18584: PUSH
18585: LD_INT 1
18587: PUSH
18588: LD_INT 1
18590: NEG
18591: PUSH
18592: EMPTY
18593: LIST
18594: LIST
18595: PUSH
18596: LD_INT 2
18598: NEG
18599: PUSH
18600: LD_INT 1
18602: NEG
18603: PUSH
18604: EMPTY
18605: LIST
18606: LIST
18607: PUSH
18608: LD_INT 2
18610: NEG
18611: PUSH
18612: LD_INT 2
18614: NEG
18615: PUSH
18616: EMPTY
18617: LIST
18618: LIST
18619: PUSH
18620: EMPTY
18621: LIST
18622: LIST
18623: LIST
18624: LIST
18625: LIST
18626: LIST
18627: LIST
18628: LIST
18629: LIST
18630: LIST
18631: LIST
18632: LIST
18633: ST_TO_ADDR
// ControlTower1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] ] ;
18634: LD_ADDR_VAR 0 48
18638: PUSH
18639: LD_INT 0
18641: PUSH
18642: LD_INT 0
18644: PUSH
18645: EMPTY
18646: LIST
18647: LIST
18648: PUSH
18649: LD_INT 0
18651: PUSH
18652: LD_INT 1
18654: NEG
18655: PUSH
18656: EMPTY
18657: LIST
18658: LIST
18659: PUSH
18660: LD_INT 1
18662: PUSH
18663: LD_INT 0
18665: PUSH
18666: EMPTY
18667: LIST
18668: LIST
18669: PUSH
18670: LD_INT 1
18672: PUSH
18673: LD_INT 1
18675: PUSH
18676: EMPTY
18677: LIST
18678: LIST
18679: PUSH
18680: LD_INT 0
18682: PUSH
18683: LD_INT 1
18685: PUSH
18686: EMPTY
18687: LIST
18688: LIST
18689: PUSH
18690: LD_INT 1
18692: NEG
18693: PUSH
18694: LD_INT 0
18696: PUSH
18697: EMPTY
18698: LIST
18699: LIST
18700: PUSH
18701: LD_INT 1
18703: NEG
18704: PUSH
18705: LD_INT 1
18707: NEG
18708: PUSH
18709: EMPTY
18710: LIST
18711: LIST
18712: PUSH
18713: LD_INT 1
18715: NEG
18716: PUSH
18717: LD_INT 2
18719: NEG
18720: PUSH
18721: EMPTY
18722: LIST
18723: LIST
18724: PUSH
18725: LD_INT 0
18727: PUSH
18728: LD_INT 2
18730: NEG
18731: PUSH
18732: EMPTY
18733: LIST
18734: LIST
18735: PUSH
18736: LD_INT 1
18738: PUSH
18739: LD_INT 1
18741: NEG
18742: PUSH
18743: EMPTY
18744: LIST
18745: LIST
18746: PUSH
18747: LD_INT 2
18749: PUSH
18750: LD_INT 0
18752: PUSH
18753: EMPTY
18754: LIST
18755: LIST
18756: PUSH
18757: LD_INT 2
18759: PUSH
18760: LD_INT 1
18762: PUSH
18763: EMPTY
18764: LIST
18765: LIST
18766: PUSH
18767: EMPTY
18768: LIST
18769: LIST
18770: LIST
18771: LIST
18772: LIST
18773: LIST
18774: LIST
18775: LIST
18776: LIST
18777: LIST
18778: LIST
18779: LIST
18780: ST_TO_ADDR
// ControlTower2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] ] ;
18781: LD_ADDR_VAR 0 49
18785: PUSH
18786: LD_INT 0
18788: PUSH
18789: LD_INT 0
18791: PUSH
18792: EMPTY
18793: LIST
18794: LIST
18795: PUSH
18796: LD_INT 0
18798: PUSH
18799: LD_INT 1
18801: NEG
18802: PUSH
18803: EMPTY
18804: LIST
18805: LIST
18806: PUSH
18807: LD_INT 1
18809: PUSH
18810: LD_INT 0
18812: PUSH
18813: EMPTY
18814: LIST
18815: LIST
18816: PUSH
18817: LD_INT 1
18819: PUSH
18820: LD_INT 1
18822: PUSH
18823: EMPTY
18824: LIST
18825: LIST
18826: PUSH
18827: LD_INT 0
18829: PUSH
18830: LD_INT 1
18832: PUSH
18833: EMPTY
18834: LIST
18835: LIST
18836: PUSH
18837: LD_INT 1
18839: NEG
18840: PUSH
18841: LD_INT 0
18843: PUSH
18844: EMPTY
18845: LIST
18846: LIST
18847: PUSH
18848: LD_INT 1
18850: NEG
18851: PUSH
18852: LD_INT 1
18854: NEG
18855: PUSH
18856: EMPTY
18857: LIST
18858: LIST
18859: PUSH
18860: LD_INT 1
18862: PUSH
18863: LD_INT 1
18865: NEG
18866: PUSH
18867: EMPTY
18868: LIST
18869: LIST
18870: PUSH
18871: LD_INT 2
18873: PUSH
18874: LD_INT 0
18876: PUSH
18877: EMPTY
18878: LIST
18879: LIST
18880: PUSH
18881: LD_INT 2
18883: PUSH
18884: LD_INT 1
18886: PUSH
18887: EMPTY
18888: LIST
18889: LIST
18890: PUSH
18891: LD_INT 2
18893: PUSH
18894: LD_INT 2
18896: PUSH
18897: EMPTY
18898: LIST
18899: LIST
18900: PUSH
18901: LD_INT 1
18903: PUSH
18904: LD_INT 2
18906: PUSH
18907: EMPTY
18908: LIST
18909: LIST
18910: PUSH
18911: EMPTY
18912: LIST
18913: LIST
18914: LIST
18915: LIST
18916: LIST
18917: LIST
18918: LIST
18919: LIST
18920: LIST
18921: LIST
18922: LIST
18923: LIST
18924: ST_TO_ADDR
// ControlTower3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] ] ;
18925: LD_ADDR_VAR 0 50
18929: PUSH
18930: LD_INT 0
18932: PUSH
18933: LD_INT 0
18935: PUSH
18936: EMPTY
18937: LIST
18938: LIST
18939: PUSH
18940: LD_INT 0
18942: PUSH
18943: LD_INT 1
18945: NEG
18946: PUSH
18947: EMPTY
18948: LIST
18949: LIST
18950: PUSH
18951: LD_INT 1
18953: PUSH
18954: LD_INT 0
18956: PUSH
18957: EMPTY
18958: LIST
18959: LIST
18960: PUSH
18961: LD_INT 1
18963: PUSH
18964: LD_INT 1
18966: PUSH
18967: EMPTY
18968: LIST
18969: LIST
18970: PUSH
18971: LD_INT 0
18973: PUSH
18974: LD_INT 1
18976: PUSH
18977: EMPTY
18978: LIST
18979: LIST
18980: PUSH
18981: LD_INT 1
18983: NEG
18984: PUSH
18985: LD_INT 0
18987: PUSH
18988: EMPTY
18989: LIST
18990: LIST
18991: PUSH
18992: LD_INT 1
18994: NEG
18995: PUSH
18996: LD_INT 1
18998: NEG
18999: PUSH
19000: EMPTY
19001: LIST
19002: LIST
19003: PUSH
19004: LD_INT 2
19006: PUSH
19007: LD_INT 1
19009: PUSH
19010: EMPTY
19011: LIST
19012: LIST
19013: PUSH
19014: LD_INT 2
19016: PUSH
19017: LD_INT 2
19019: PUSH
19020: EMPTY
19021: LIST
19022: LIST
19023: PUSH
19024: LD_INT 1
19026: PUSH
19027: LD_INT 2
19029: PUSH
19030: EMPTY
19031: LIST
19032: LIST
19033: PUSH
19034: LD_INT 0
19036: PUSH
19037: LD_INT 2
19039: PUSH
19040: EMPTY
19041: LIST
19042: LIST
19043: PUSH
19044: LD_INT 1
19046: NEG
19047: PUSH
19048: LD_INT 1
19050: PUSH
19051: EMPTY
19052: LIST
19053: LIST
19054: PUSH
19055: EMPTY
19056: LIST
19057: LIST
19058: LIST
19059: LIST
19060: LIST
19061: LIST
19062: LIST
19063: LIST
19064: LIST
19065: LIST
19066: LIST
19067: LIST
19068: ST_TO_ADDR
// ControlTower4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] ] ;
19069: LD_ADDR_VAR 0 51
19073: PUSH
19074: LD_INT 0
19076: PUSH
19077: LD_INT 0
19079: PUSH
19080: EMPTY
19081: LIST
19082: LIST
19083: PUSH
19084: LD_INT 0
19086: PUSH
19087: LD_INT 1
19089: NEG
19090: PUSH
19091: EMPTY
19092: LIST
19093: LIST
19094: PUSH
19095: LD_INT 1
19097: PUSH
19098: LD_INT 0
19100: PUSH
19101: EMPTY
19102: LIST
19103: LIST
19104: PUSH
19105: LD_INT 1
19107: PUSH
19108: LD_INT 1
19110: PUSH
19111: EMPTY
19112: LIST
19113: LIST
19114: PUSH
19115: LD_INT 0
19117: PUSH
19118: LD_INT 1
19120: PUSH
19121: EMPTY
19122: LIST
19123: LIST
19124: PUSH
19125: LD_INT 1
19127: NEG
19128: PUSH
19129: LD_INT 0
19131: PUSH
19132: EMPTY
19133: LIST
19134: LIST
19135: PUSH
19136: LD_INT 1
19138: NEG
19139: PUSH
19140: LD_INT 1
19142: NEG
19143: PUSH
19144: EMPTY
19145: LIST
19146: LIST
19147: PUSH
19148: LD_INT 1
19150: PUSH
19151: LD_INT 2
19153: PUSH
19154: EMPTY
19155: LIST
19156: LIST
19157: PUSH
19158: LD_INT 0
19160: PUSH
19161: LD_INT 2
19163: PUSH
19164: EMPTY
19165: LIST
19166: LIST
19167: PUSH
19168: LD_INT 1
19170: NEG
19171: PUSH
19172: LD_INT 1
19174: PUSH
19175: EMPTY
19176: LIST
19177: LIST
19178: PUSH
19179: LD_INT 2
19181: NEG
19182: PUSH
19183: LD_INT 0
19185: PUSH
19186: EMPTY
19187: LIST
19188: LIST
19189: PUSH
19190: LD_INT 2
19192: NEG
19193: PUSH
19194: LD_INT 1
19196: NEG
19197: PUSH
19198: EMPTY
19199: LIST
19200: LIST
19201: PUSH
19202: EMPTY
19203: LIST
19204: LIST
19205: LIST
19206: LIST
19207: LIST
19208: LIST
19209: LIST
19210: LIST
19211: LIST
19212: LIST
19213: LIST
19214: LIST
19215: ST_TO_ADDR
// ControlTower5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19216: LD_ADDR_VAR 0 52
19220: PUSH
19221: LD_INT 0
19223: PUSH
19224: LD_INT 0
19226: PUSH
19227: EMPTY
19228: LIST
19229: LIST
19230: PUSH
19231: LD_INT 0
19233: PUSH
19234: LD_INT 1
19236: NEG
19237: PUSH
19238: EMPTY
19239: LIST
19240: LIST
19241: PUSH
19242: LD_INT 1
19244: PUSH
19245: LD_INT 0
19247: PUSH
19248: EMPTY
19249: LIST
19250: LIST
19251: PUSH
19252: LD_INT 1
19254: PUSH
19255: LD_INT 1
19257: PUSH
19258: EMPTY
19259: LIST
19260: LIST
19261: PUSH
19262: LD_INT 0
19264: PUSH
19265: LD_INT 1
19267: PUSH
19268: EMPTY
19269: LIST
19270: LIST
19271: PUSH
19272: LD_INT 1
19274: NEG
19275: PUSH
19276: LD_INT 0
19278: PUSH
19279: EMPTY
19280: LIST
19281: LIST
19282: PUSH
19283: LD_INT 1
19285: NEG
19286: PUSH
19287: LD_INT 1
19289: NEG
19290: PUSH
19291: EMPTY
19292: LIST
19293: LIST
19294: PUSH
19295: LD_INT 1
19297: NEG
19298: PUSH
19299: LD_INT 2
19301: NEG
19302: PUSH
19303: EMPTY
19304: LIST
19305: LIST
19306: PUSH
19307: LD_INT 1
19309: NEG
19310: PUSH
19311: LD_INT 1
19313: PUSH
19314: EMPTY
19315: LIST
19316: LIST
19317: PUSH
19318: LD_INT 2
19320: NEG
19321: PUSH
19322: LD_INT 0
19324: PUSH
19325: EMPTY
19326: LIST
19327: LIST
19328: PUSH
19329: LD_INT 2
19331: NEG
19332: PUSH
19333: LD_INT 1
19335: NEG
19336: PUSH
19337: EMPTY
19338: LIST
19339: LIST
19340: PUSH
19341: LD_INT 2
19343: NEG
19344: PUSH
19345: LD_INT 2
19347: NEG
19348: PUSH
19349: EMPTY
19350: LIST
19351: LIST
19352: PUSH
19353: EMPTY
19354: LIST
19355: LIST
19356: LIST
19357: LIST
19358: LIST
19359: LIST
19360: LIST
19361: LIST
19362: LIST
19363: LIST
19364: LIST
19365: LIST
19366: ST_TO_ADDR
// Barracks0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19367: LD_ADDR_VAR 0 53
19371: PUSH
19372: LD_INT 0
19374: PUSH
19375: LD_INT 0
19377: PUSH
19378: EMPTY
19379: LIST
19380: LIST
19381: PUSH
19382: LD_INT 0
19384: PUSH
19385: LD_INT 1
19387: NEG
19388: PUSH
19389: EMPTY
19390: LIST
19391: LIST
19392: PUSH
19393: LD_INT 1
19395: PUSH
19396: LD_INT 0
19398: PUSH
19399: EMPTY
19400: LIST
19401: LIST
19402: PUSH
19403: LD_INT 1
19405: PUSH
19406: LD_INT 1
19408: PUSH
19409: EMPTY
19410: LIST
19411: LIST
19412: PUSH
19413: LD_INT 0
19415: PUSH
19416: LD_INT 1
19418: PUSH
19419: EMPTY
19420: LIST
19421: LIST
19422: PUSH
19423: LD_INT 1
19425: NEG
19426: PUSH
19427: LD_INT 0
19429: PUSH
19430: EMPTY
19431: LIST
19432: LIST
19433: PUSH
19434: LD_INT 1
19436: NEG
19437: PUSH
19438: LD_INT 1
19440: NEG
19441: PUSH
19442: EMPTY
19443: LIST
19444: LIST
19445: PUSH
19446: LD_INT 1
19448: NEG
19449: PUSH
19450: LD_INT 2
19452: NEG
19453: PUSH
19454: EMPTY
19455: LIST
19456: LIST
19457: PUSH
19458: LD_INT 0
19460: PUSH
19461: LD_INT 2
19463: NEG
19464: PUSH
19465: EMPTY
19466: LIST
19467: LIST
19468: PUSH
19469: LD_INT 1
19471: PUSH
19472: LD_INT 1
19474: NEG
19475: PUSH
19476: EMPTY
19477: LIST
19478: LIST
19479: PUSH
19480: LD_INT 2
19482: PUSH
19483: LD_INT 0
19485: PUSH
19486: EMPTY
19487: LIST
19488: LIST
19489: PUSH
19490: LD_INT 2
19492: PUSH
19493: LD_INT 1
19495: PUSH
19496: EMPTY
19497: LIST
19498: LIST
19499: PUSH
19500: LD_INT 2
19502: PUSH
19503: LD_INT 2
19505: PUSH
19506: EMPTY
19507: LIST
19508: LIST
19509: PUSH
19510: LD_INT 1
19512: PUSH
19513: LD_INT 2
19515: PUSH
19516: EMPTY
19517: LIST
19518: LIST
19519: PUSH
19520: LD_INT 0
19522: PUSH
19523: LD_INT 2
19525: PUSH
19526: EMPTY
19527: LIST
19528: LIST
19529: PUSH
19530: LD_INT 1
19532: NEG
19533: PUSH
19534: LD_INT 1
19536: PUSH
19537: EMPTY
19538: LIST
19539: LIST
19540: PUSH
19541: LD_INT 2
19543: NEG
19544: PUSH
19545: LD_INT 0
19547: PUSH
19548: EMPTY
19549: LIST
19550: LIST
19551: PUSH
19552: LD_INT 2
19554: NEG
19555: PUSH
19556: LD_INT 1
19558: NEG
19559: PUSH
19560: EMPTY
19561: LIST
19562: LIST
19563: PUSH
19564: LD_INT 2
19566: NEG
19567: PUSH
19568: LD_INT 2
19570: NEG
19571: PUSH
19572: EMPTY
19573: LIST
19574: LIST
19575: PUSH
19576: EMPTY
19577: LIST
19578: LIST
19579: LIST
19580: LIST
19581: LIST
19582: LIST
19583: LIST
19584: LIST
19585: LIST
19586: LIST
19587: LIST
19588: LIST
19589: LIST
19590: LIST
19591: LIST
19592: LIST
19593: LIST
19594: LIST
19595: LIST
19596: ST_TO_ADDR
// Barracks1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19597: LD_ADDR_VAR 0 54
19601: PUSH
19602: LD_INT 0
19604: PUSH
19605: LD_INT 0
19607: PUSH
19608: EMPTY
19609: LIST
19610: LIST
19611: PUSH
19612: LD_INT 0
19614: PUSH
19615: LD_INT 1
19617: NEG
19618: PUSH
19619: EMPTY
19620: LIST
19621: LIST
19622: PUSH
19623: LD_INT 1
19625: PUSH
19626: LD_INT 0
19628: PUSH
19629: EMPTY
19630: LIST
19631: LIST
19632: PUSH
19633: LD_INT 1
19635: PUSH
19636: LD_INT 1
19638: PUSH
19639: EMPTY
19640: LIST
19641: LIST
19642: PUSH
19643: LD_INT 0
19645: PUSH
19646: LD_INT 1
19648: PUSH
19649: EMPTY
19650: LIST
19651: LIST
19652: PUSH
19653: LD_INT 1
19655: NEG
19656: PUSH
19657: LD_INT 0
19659: PUSH
19660: EMPTY
19661: LIST
19662: LIST
19663: PUSH
19664: LD_INT 1
19666: NEG
19667: PUSH
19668: LD_INT 1
19670: NEG
19671: PUSH
19672: EMPTY
19673: LIST
19674: LIST
19675: PUSH
19676: LD_INT 1
19678: NEG
19679: PUSH
19680: LD_INT 2
19682: NEG
19683: PUSH
19684: EMPTY
19685: LIST
19686: LIST
19687: PUSH
19688: LD_INT 0
19690: PUSH
19691: LD_INT 2
19693: NEG
19694: PUSH
19695: EMPTY
19696: LIST
19697: LIST
19698: PUSH
19699: LD_INT 1
19701: PUSH
19702: LD_INT 1
19704: NEG
19705: PUSH
19706: EMPTY
19707: LIST
19708: LIST
19709: PUSH
19710: LD_INT 2
19712: PUSH
19713: LD_INT 0
19715: PUSH
19716: EMPTY
19717: LIST
19718: LIST
19719: PUSH
19720: LD_INT 2
19722: PUSH
19723: LD_INT 1
19725: PUSH
19726: EMPTY
19727: LIST
19728: LIST
19729: PUSH
19730: LD_INT 2
19732: PUSH
19733: LD_INT 2
19735: PUSH
19736: EMPTY
19737: LIST
19738: LIST
19739: PUSH
19740: LD_INT 1
19742: PUSH
19743: LD_INT 2
19745: PUSH
19746: EMPTY
19747: LIST
19748: LIST
19749: PUSH
19750: LD_INT 0
19752: PUSH
19753: LD_INT 2
19755: PUSH
19756: EMPTY
19757: LIST
19758: LIST
19759: PUSH
19760: LD_INT 1
19762: NEG
19763: PUSH
19764: LD_INT 1
19766: PUSH
19767: EMPTY
19768: LIST
19769: LIST
19770: PUSH
19771: LD_INT 2
19773: NEG
19774: PUSH
19775: LD_INT 0
19777: PUSH
19778: EMPTY
19779: LIST
19780: LIST
19781: PUSH
19782: LD_INT 2
19784: NEG
19785: PUSH
19786: LD_INT 1
19788: NEG
19789: PUSH
19790: EMPTY
19791: LIST
19792: LIST
19793: PUSH
19794: LD_INT 2
19796: NEG
19797: PUSH
19798: LD_INT 2
19800: NEG
19801: PUSH
19802: EMPTY
19803: LIST
19804: LIST
19805: PUSH
19806: EMPTY
19807: LIST
19808: LIST
19809: LIST
19810: LIST
19811: LIST
19812: LIST
19813: LIST
19814: LIST
19815: LIST
19816: LIST
19817: LIST
19818: LIST
19819: LIST
19820: LIST
19821: LIST
19822: LIST
19823: LIST
19824: LIST
19825: LIST
19826: ST_TO_ADDR
// Barracks2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19827: LD_ADDR_VAR 0 55
19831: PUSH
19832: LD_INT 0
19834: PUSH
19835: LD_INT 0
19837: PUSH
19838: EMPTY
19839: LIST
19840: LIST
19841: PUSH
19842: LD_INT 0
19844: PUSH
19845: LD_INT 1
19847: NEG
19848: PUSH
19849: EMPTY
19850: LIST
19851: LIST
19852: PUSH
19853: LD_INT 1
19855: PUSH
19856: LD_INT 0
19858: PUSH
19859: EMPTY
19860: LIST
19861: LIST
19862: PUSH
19863: LD_INT 1
19865: PUSH
19866: LD_INT 1
19868: PUSH
19869: EMPTY
19870: LIST
19871: LIST
19872: PUSH
19873: LD_INT 0
19875: PUSH
19876: LD_INT 1
19878: PUSH
19879: EMPTY
19880: LIST
19881: LIST
19882: PUSH
19883: LD_INT 1
19885: NEG
19886: PUSH
19887: LD_INT 0
19889: PUSH
19890: EMPTY
19891: LIST
19892: LIST
19893: PUSH
19894: LD_INT 1
19896: NEG
19897: PUSH
19898: LD_INT 1
19900: NEG
19901: PUSH
19902: EMPTY
19903: LIST
19904: LIST
19905: PUSH
19906: LD_INT 1
19908: NEG
19909: PUSH
19910: LD_INT 2
19912: NEG
19913: PUSH
19914: EMPTY
19915: LIST
19916: LIST
19917: PUSH
19918: LD_INT 0
19920: PUSH
19921: LD_INT 2
19923: NEG
19924: PUSH
19925: EMPTY
19926: LIST
19927: LIST
19928: PUSH
19929: LD_INT 1
19931: PUSH
19932: LD_INT 1
19934: NEG
19935: PUSH
19936: EMPTY
19937: LIST
19938: LIST
19939: PUSH
19940: LD_INT 2
19942: PUSH
19943: LD_INT 0
19945: PUSH
19946: EMPTY
19947: LIST
19948: LIST
19949: PUSH
19950: LD_INT 2
19952: PUSH
19953: LD_INT 1
19955: PUSH
19956: EMPTY
19957: LIST
19958: LIST
19959: PUSH
19960: LD_INT 2
19962: PUSH
19963: LD_INT 2
19965: PUSH
19966: EMPTY
19967: LIST
19968: LIST
19969: PUSH
19970: LD_INT 1
19972: PUSH
19973: LD_INT 2
19975: PUSH
19976: EMPTY
19977: LIST
19978: LIST
19979: PUSH
19980: LD_INT 0
19982: PUSH
19983: LD_INT 2
19985: PUSH
19986: EMPTY
19987: LIST
19988: LIST
19989: PUSH
19990: LD_INT 1
19992: NEG
19993: PUSH
19994: LD_INT 1
19996: PUSH
19997: EMPTY
19998: LIST
19999: LIST
20000: PUSH
20001: LD_INT 2
20003: NEG
20004: PUSH
20005: LD_INT 0
20007: PUSH
20008: EMPTY
20009: LIST
20010: LIST
20011: PUSH
20012: LD_INT 2
20014: NEG
20015: PUSH
20016: LD_INT 1
20018: NEG
20019: PUSH
20020: EMPTY
20021: LIST
20022: LIST
20023: PUSH
20024: LD_INT 2
20026: NEG
20027: PUSH
20028: LD_INT 2
20030: NEG
20031: PUSH
20032: EMPTY
20033: LIST
20034: LIST
20035: PUSH
20036: EMPTY
20037: LIST
20038: LIST
20039: LIST
20040: LIST
20041: LIST
20042: LIST
20043: LIST
20044: LIST
20045: LIST
20046: LIST
20047: LIST
20048: LIST
20049: LIST
20050: LIST
20051: LIST
20052: LIST
20053: LIST
20054: LIST
20055: LIST
20056: ST_TO_ADDR
// Barracks3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
20057: LD_ADDR_VAR 0 56
20061: PUSH
20062: LD_INT 0
20064: PUSH
20065: LD_INT 0
20067: PUSH
20068: EMPTY
20069: LIST
20070: LIST
20071: PUSH
20072: LD_INT 0
20074: PUSH
20075: LD_INT 1
20077: NEG
20078: PUSH
20079: EMPTY
20080: LIST
20081: LIST
20082: PUSH
20083: LD_INT 1
20085: PUSH
20086: LD_INT 0
20088: PUSH
20089: EMPTY
20090: LIST
20091: LIST
20092: PUSH
20093: LD_INT 1
20095: PUSH
20096: LD_INT 1
20098: PUSH
20099: EMPTY
20100: LIST
20101: LIST
20102: PUSH
20103: LD_INT 0
20105: PUSH
20106: LD_INT 1
20108: PUSH
20109: EMPTY
20110: LIST
20111: LIST
20112: PUSH
20113: LD_INT 1
20115: NEG
20116: PUSH
20117: LD_INT 0
20119: PUSH
20120: EMPTY
20121: LIST
20122: LIST
20123: PUSH
20124: LD_INT 1
20126: NEG
20127: PUSH
20128: LD_INT 1
20130: NEG
20131: PUSH
20132: EMPTY
20133: LIST
20134: LIST
20135: PUSH
20136: LD_INT 1
20138: NEG
20139: PUSH
20140: LD_INT 2
20142: NEG
20143: PUSH
20144: EMPTY
20145: LIST
20146: LIST
20147: PUSH
20148: LD_INT 0
20150: PUSH
20151: LD_INT 2
20153: NEG
20154: PUSH
20155: EMPTY
20156: LIST
20157: LIST
20158: PUSH
20159: LD_INT 1
20161: PUSH
20162: LD_INT 1
20164: NEG
20165: PUSH
20166: EMPTY
20167: LIST
20168: LIST
20169: PUSH
20170: LD_INT 2
20172: PUSH
20173: LD_INT 0
20175: PUSH
20176: EMPTY
20177: LIST
20178: LIST
20179: PUSH
20180: LD_INT 2
20182: PUSH
20183: LD_INT 1
20185: PUSH
20186: EMPTY
20187: LIST
20188: LIST
20189: PUSH
20190: LD_INT 2
20192: PUSH
20193: LD_INT 2
20195: PUSH
20196: EMPTY
20197: LIST
20198: LIST
20199: PUSH
20200: LD_INT 1
20202: PUSH
20203: LD_INT 2
20205: PUSH
20206: EMPTY
20207: LIST
20208: LIST
20209: PUSH
20210: LD_INT 0
20212: PUSH
20213: LD_INT 2
20215: PUSH
20216: EMPTY
20217: LIST
20218: LIST
20219: PUSH
20220: LD_INT 1
20222: NEG
20223: PUSH
20224: LD_INT 1
20226: PUSH
20227: EMPTY
20228: LIST
20229: LIST
20230: PUSH
20231: LD_INT 2
20233: NEG
20234: PUSH
20235: LD_INT 0
20237: PUSH
20238: EMPTY
20239: LIST
20240: LIST
20241: PUSH
20242: LD_INT 2
20244: NEG
20245: PUSH
20246: LD_INT 1
20248: NEG
20249: PUSH
20250: EMPTY
20251: LIST
20252: LIST
20253: PUSH
20254: LD_INT 2
20256: NEG
20257: PUSH
20258: LD_INT 2
20260: NEG
20261: PUSH
20262: EMPTY
20263: LIST
20264: LIST
20265: PUSH
20266: EMPTY
20267: LIST
20268: LIST
20269: LIST
20270: LIST
20271: LIST
20272: LIST
20273: LIST
20274: LIST
20275: LIST
20276: LIST
20277: LIST
20278: LIST
20279: LIST
20280: LIST
20281: LIST
20282: LIST
20283: LIST
20284: LIST
20285: LIST
20286: ST_TO_ADDR
// Barracks4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
20287: LD_ADDR_VAR 0 57
20291: PUSH
20292: LD_INT 0
20294: PUSH
20295: LD_INT 0
20297: PUSH
20298: EMPTY
20299: LIST
20300: LIST
20301: PUSH
20302: LD_INT 0
20304: PUSH
20305: LD_INT 1
20307: NEG
20308: PUSH
20309: EMPTY
20310: LIST
20311: LIST
20312: PUSH
20313: LD_INT 1
20315: PUSH
20316: LD_INT 0
20318: PUSH
20319: EMPTY
20320: LIST
20321: LIST
20322: PUSH
20323: LD_INT 1
20325: PUSH
20326: LD_INT 1
20328: PUSH
20329: EMPTY
20330: LIST
20331: LIST
20332: PUSH
20333: LD_INT 0
20335: PUSH
20336: LD_INT 1
20338: PUSH
20339: EMPTY
20340: LIST
20341: LIST
20342: PUSH
20343: LD_INT 1
20345: NEG
20346: PUSH
20347: LD_INT 0
20349: PUSH
20350: EMPTY
20351: LIST
20352: LIST
20353: PUSH
20354: LD_INT 1
20356: NEG
20357: PUSH
20358: LD_INT 1
20360: NEG
20361: PUSH
20362: EMPTY
20363: LIST
20364: LIST
20365: PUSH
20366: LD_INT 1
20368: NEG
20369: PUSH
20370: LD_INT 2
20372: NEG
20373: PUSH
20374: EMPTY
20375: LIST
20376: LIST
20377: PUSH
20378: LD_INT 0
20380: PUSH
20381: LD_INT 2
20383: NEG
20384: PUSH
20385: EMPTY
20386: LIST
20387: LIST
20388: PUSH
20389: LD_INT 1
20391: PUSH
20392: LD_INT 1
20394: NEG
20395: PUSH
20396: EMPTY
20397: LIST
20398: LIST
20399: PUSH
20400: LD_INT 2
20402: PUSH
20403: LD_INT 0
20405: PUSH
20406: EMPTY
20407: LIST
20408: LIST
20409: PUSH
20410: LD_INT 2
20412: PUSH
20413: LD_INT 1
20415: PUSH
20416: EMPTY
20417: LIST
20418: LIST
20419: PUSH
20420: LD_INT 2
20422: PUSH
20423: LD_INT 2
20425: PUSH
20426: EMPTY
20427: LIST
20428: LIST
20429: PUSH
20430: LD_INT 1
20432: PUSH
20433: LD_INT 2
20435: PUSH
20436: EMPTY
20437: LIST
20438: LIST
20439: PUSH
20440: LD_INT 0
20442: PUSH
20443: LD_INT 2
20445: PUSH
20446: EMPTY
20447: LIST
20448: LIST
20449: PUSH
20450: LD_INT 1
20452: NEG
20453: PUSH
20454: LD_INT 1
20456: PUSH
20457: EMPTY
20458: LIST
20459: LIST
20460: PUSH
20461: LD_INT 2
20463: NEG
20464: PUSH
20465: LD_INT 0
20467: PUSH
20468: EMPTY
20469: LIST
20470: LIST
20471: PUSH
20472: LD_INT 2
20474: NEG
20475: PUSH
20476: LD_INT 1
20478: NEG
20479: PUSH
20480: EMPTY
20481: LIST
20482: LIST
20483: PUSH
20484: LD_INT 2
20486: NEG
20487: PUSH
20488: LD_INT 2
20490: NEG
20491: PUSH
20492: EMPTY
20493: LIST
20494: LIST
20495: PUSH
20496: EMPTY
20497: LIST
20498: LIST
20499: LIST
20500: LIST
20501: LIST
20502: LIST
20503: LIST
20504: LIST
20505: LIST
20506: LIST
20507: LIST
20508: LIST
20509: LIST
20510: LIST
20511: LIST
20512: LIST
20513: LIST
20514: LIST
20515: LIST
20516: ST_TO_ADDR
// Barracks5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
20517: LD_ADDR_VAR 0 58
20521: PUSH
20522: LD_INT 0
20524: PUSH
20525: LD_INT 0
20527: PUSH
20528: EMPTY
20529: LIST
20530: LIST
20531: PUSH
20532: LD_INT 0
20534: PUSH
20535: LD_INT 1
20537: NEG
20538: PUSH
20539: EMPTY
20540: LIST
20541: LIST
20542: PUSH
20543: LD_INT 1
20545: PUSH
20546: LD_INT 0
20548: PUSH
20549: EMPTY
20550: LIST
20551: LIST
20552: PUSH
20553: LD_INT 1
20555: PUSH
20556: LD_INT 1
20558: PUSH
20559: EMPTY
20560: LIST
20561: LIST
20562: PUSH
20563: LD_INT 0
20565: PUSH
20566: LD_INT 1
20568: PUSH
20569: EMPTY
20570: LIST
20571: LIST
20572: PUSH
20573: LD_INT 1
20575: NEG
20576: PUSH
20577: LD_INT 0
20579: PUSH
20580: EMPTY
20581: LIST
20582: LIST
20583: PUSH
20584: LD_INT 1
20586: NEG
20587: PUSH
20588: LD_INT 1
20590: NEG
20591: PUSH
20592: EMPTY
20593: LIST
20594: LIST
20595: PUSH
20596: LD_INT 1
20598: NEG
20599: PUSH
20600: LD_INT 2
20602: NEG
20603: PUSH
20604: EMPTY
20605: LIST
20606: LIST
20607: PUSH
20608: LD_INT 0
20610: PUSH
20611: LD_INT 2
20613: NEG
20614: PUSH
20615: EMPTY
20616: LIST
20617: LIST
20618: PUSH
20619: LD_INT 1
20621: PUSH
20622: LD_INT 1
20624: NEG
20625: PUSH
20626: EMPTY
20627: LIST
20628: LIST
20629: PUSH
20630: LD_INT 2
20632: PUSH
20633: LD_INT 0
20635: PUSH
20636: EMPTY
20637: LIST
20638: LIST
20639: PUSH
20640: LD_INT 2
20642: PUSH
20643: LD_INT 1
20645: PUSH
20646: EMPTY
20647: LIST
20648: LIST
20649: PUSH
20650: LD_INT 2
20652: PUSH
20653: LD_INT 2
20655: PUSH
20656: EMPTY
20657: LIST
20658: LIST
20659: PUSH
20660: LD_INT 1
20662: PUSH
20663: LD_INT 2
20665: PUSH
20666: EMPTY
20667: LIST
20668: LIST
20669: PUSH
20670: LD_INT 0
20672: PUSH
20673: LD_INT 2
20675: PUSH
20676: EMPTY
20677: LIST
20678: LIST
20679: PUSH
20680: LD_INT 1
20682: NEG
20683: PUSH
20684: LD_INT 1
20686: PUSH
20687: EMPTY
20688: LIST
20689: LIST
20690: PUSH
20691: LD_INT 2
20693: NEG
20694: PUSH
20695: LD_INT 0
20697: PUSH
20698: EMPTY
20699: LIST
20700: LIST
20701: PUSH
20702: LD_INT 2
20704: NEG
20705: PUSH
20706: LD_INT 1
20708: NEG
20709: PUSH
20710: EMPTY
20711: LIST
20712: LIST
20713: PUSH
20714: LD_INT 2
20716: NEG
20717: PUSH
20718: LD_INT 2
20720: NEG
20721: PUSH
20722: EMPTY
20723: LIST
20724: LIST
20725: PUSH
20726: EMPTY
20727: LIST
20728: LIST
20729: LIST
20730: LIST
20731: LIST
20732: LIST
20733: LIST
20734: LIST
20735: LIST
20736: LIST
20737: LIST
20738: LIST
20739: LIST
20740: LIST
20741: LIST
20742: LIST
20743: LIST
20744: LIST
20745: LIST
20746: ST_TO_ADDR
// Bunker0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20747: LD_ADDR_VAR 0 59
20751: PUSH
20752: LD_INT 0
20754: PUSH
20755: LD_INT 0
20757: PUSH
20758: EMPTY
20759: LIST
20760: LIST
20761: PUSH
20762: LD_INT 0
20764: PUSH
20765: LD_INT 1
20767: NEG
20768: PUSH
20769: EMPTY
20770: LIST
20771: LIST
20772: PUSH
20773: LD_INT 1
20775: PUSH
20776: LD_INT 0
20778: PUSH
20779: EMPTY
20780: LIST
20781: LIST
20782: PUSH
20783: LD_INT 1
20785: PUSH
20786: LD_INT 1
20788: PUSH
20789: EMPTY
20790: LIST
20791: LIST
20792: PUSH
20793: LD_INT 0
20795: PUSH
20796: LD_INT 1
20798: PUSH
20799: EMPTY
20800: LIST
20801: LIST
20802: PUSH
20803: LD_INT 1
20805: NEG
20806: PUSH
20807: LD_INT 0
20809: PUSH
20810: EMPTY
20811: LIST
20812: LIST
20813: PUSH
20814: LD_INT 1
20816: NEG
20817: PUSH
20818: LD_INT 1
20820: NEG
20821: PUSH
20822: EMPTY
20823: LIST
20824: LIST
20825: PUSH
20826: EMPTY
20827: LIST
20828: LIST
20829: LIST
20830: LIST
20831: LIST
20832: LIST
20833: LIST
20834: ST_TO_ADDR
// Bunker1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20835: LD_ADDR_VAR 0 60
20839: PUSH
20840: LD_INT 0
20842: PUSH
20843: LD_INT 0
20845: PUSH
20846: EMPTY
20847: LIST
20848: LIST
20849: PUSH
20850: LD_INT 0
20852: PUSH
20853: LD_INT 1
20855: NEG
20856: PUSH
20857: EMPTY
20858: LIST
20859: LIST
20860: PUSH
20861: LD_INT 1
20863: PUSH
20864: LD_INT 0
20866: PUSH
20867: EMPTY
20868: LIST
20869: LIST
20870: PUSH
20871: LD_INT 1
20873: PUSH
20874: LD_INT 1
20876: PUSH
20877: EMPTY
20878: LIST
20879: LIST
20880: PUSH
20881: LD_INT 0
20883: PUSH
20884: LD_INT 1
20886: PUSH
20887: EMPTY
20888: LIST
20889: LIST
20890: PUSH
20891: LD_INT 1
20893: NEG
20894: PUSH
20895: LD_INT 0
20897: PUSH
20898: EMPTY
20899: LIST
20900: LIST
20901: PUSH
20902: LD_INT 1
20904: NEG
20905: PUSH
20906: LD_INT 1
20908: NEG
20909: PUSH
20910: EMPTY
20911: LIST
20912: LIST
20913: PUSH
20914: EMPTY
20915: LIST
20916: LIST
20917: LIST
20918: LIST
20919: LIST
20920: LIST
20921: LIST
20922: ST_TO_ADDR
// Bunker2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20923: LD_ADDR_VAR 0 61
20927: PUSH
20928: LD_INT 0
20930: PUSH
20931: LD_INT 0
20933: PUSH
20934: EMPTY
20935: LIST
20936: LIST
20937: PUSH
20938: LD_INT 0
20940: PUSH
20941: LD_INT 1
20943: NEG
20944: PUSH
20945: EMPTY
20946: LIST
20947: LIST
20948: PUSH
20949: LD_INT 1
20951: PUSH
20952: LD_INT 0
20954: PUSH
20955: EMPTY
20956: LIST
20957: LIST
20958: PUSH
20959: LD_INT 1
20961: PUSH
20962: LD_INT 1
20964: PUSH
20965: EMPTY
20966: LIST
20967: LIST
20968: PUSH
20969: LD_INT 0
20971: PUSH
20972: LD_INT 1
20974: PUSH
20975: EMPTY
20976: LIST
20977: LIST
20978: PUSH
20979: LD_INT 1
20981: NEG
20982: PUSH
20983: LD_INT 0
20985: PUSH
20986: EMPTY
20987: LIST
20988: LIST
20989: PUSH
20990: LD_INT 1
20992: NEG
20993: PUSH
20994: LD_INT 1
20996: NEG
20997: PUSH
20998: EMPTY
20999: LIST
21000: LIST
21001: PUSH
21002: EMPTY
21003: LIST
21004: LIST
21005: LIST
21006: LIST
21007: LIST
21008: LIST
21009: LIST
21010: ST_TO_ADDR
// Bunker3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
21011: LD_ADDR_VAR 0 62
21015: PUSH
21016: LD_INT 0
21018: PUSH
21019: LD_INT 0
21021: PUSH
21022: EMPTY
21023: LIST
21024: LIST
21025: PUSH
21026: LD_INT 0
21028: PUSH
21029: LD_INT 1
21031: NEG
21032: PUSH
21033: EMPTY
21034: LIST
21035: LIST
21036: PUSH
21037: LD_INT 1
21039: PUSH
21040: LD_INT 0
21042: PUSH
21043: EMPTY
21044: LIST
21045: LIST
21046: PUSH
21047: LD_INT 1
21049: PUSH
21050: LD_INT 1
21052: PUSH
21053: EMPTY
21054: LIST
21055: LIST
21056: PUSH
21057: LD_INT 0
21059: PUSH
21060: LD_INT 1
21062: PUSH
21063: EMPTY
21064: LIST
21065: LIST
21066: PUSH
21067: LD_INT 1
21069: NEG
21070: PUSH
21071: LD_INT 0
21073: PUSH
21074: EMPTY
21075: LIST
21076: LIST
21077: PUSH
21078: LD_INT 1
21080: NEG
21081: PUSH
21082: LD_INT 1
21084: NEG
21085: PUSH
21086: EMPTY
21087: LIST
21088: LIST
21089: PUSH
21090: EMPTY
21091: LIST
21092: LIST
21093: LIST
21094: LIST
21095: LIST
21096: LIST
21097: LIST
21098: ST_TO_ADDR
// Bunker4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
21099: LD_ADDR_VAR 0 63
21103: PUSH
21104: LD_INT 0
21106: PUSH
21107: LD_INT 0
21109: PUSH
21110: EMPTY
21111: LIST
21112: LIST
21113: PUSH
21114: LD_INT 0
21116: PUSH
21117: LD_INT 1
21119: NEG
21120: PUSH
21121: EMPTY
21122: LIST
21123: LIST
21124: PUSH
21125: LD_INT 1
21127: PUSH
21128: LD_INT 0
21130: PUSH
21131: EMPTY
21132: LIST
21133: LIST
21134: PUSH
21135: LD_INT 1
21137: PUSH
21138: LD_INT 1
21140: PUSH
21141: EMPTY
21142: LIST
21143: LIST
21144: PUSH
21145: LD_INT 0
21147: PUSH
21148: LD_INT 1
21150: PUSH
21151: EMPTY
21152: LIST
21153: LIST
21154: PUSH
21155: LD_INT 1
21157: NEG
21158: PUSH
21159: LD_INT 0
21161: PUSH
21162: EMPTY
21163: LIST
21164: LIST
21165: PUSH
21166: LD_INT 1
21168: NEG
21169: PUSH
21170: LD_INT 1
21172: NEG
21173: PUSH
21174: EMPTY
21175: LIST
21176: LIST
21177: PUSH
21178: EMPTY
21179: LIST
21180: LIST
21181: LIST
21182: LIST
21183: LIST
21184: LIST
21185: LIST
21186: ST_TO_ADDR
// Bunker5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
21187: LD_ADDR_VAR 0 64
21191: PUSH
21192: LD_INT 0
21194: PUSH
21195: LD_INT 0
21197: PUSH
21198: EMPTY
21199: LIST
21200: LIST
21201: PUSH
21202: LD_INT 0
21204: PUSH
21205: LD_INT 1
21207: NEG
21208: PUSH
21209: EMPTY
21210: LIST
21211: LIST
21212: PUSH
21213: LD_INT 1
21215: PUSH
21216: LD_INT 0
21218: PUSH
21219: EMPTY
21220: LIST
21221: LIST
21222: PUSH
21223: LD_INT 1
21225: PUSH
21226: LD_INT 1
21228: PUSH
21229: EMPTY
21230: LIST
21231: LIST
21232: PUSH
21233: LD_INT 0
21235: PUSH
21236: LD_INT 1
21238: PUSH
21239: EMPTY
21240: LIST
21241: LIST
21242: PUSH
21243: LD_INT 1
21245: NEG
21246: PUSH
21247: LD_INT 0
21249: PUSH
21250: EMPTY
21251: LIST
21252: LIST
21253: PUSH
21254: LD_INT 1
21256: NEG
21257: PUSH
21258: LD_INT 1
21260: NEG
21261: PUSH
21262: EMPTY
21263: LIST
21264: LIST
21265: PUSH
21266: EMPTY
21267: LIST
21268: LIST
21269: LIST
21270: LIST
21271: LIST
21272: LIST
21273: LIST
21274: ST_TO_ADDR
// end ; 1 :
21275: GO 27172
21277: LD_INT 1
21279: DOUBLE
21280: EQUAL
21281: IFTRUE 21285
21283: GO 23908
21285: POP
// begin DepotAm0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
21286: LD_ADDR_VAR 0 11
21290: PUSH
21291: LD_INT 1
21293: NEG
21294: PUSH
21295: LD_INT 3
21297: NEG
21298: PUSH
21299: EMPTY
21300: LIST
21301: LIST
21302: PUSH
21303: LD_INT 0
21305: PUSH
21306: LD_INT 3
21308: NEG
21309: PUSH
21310: EMPTY
21311: LIST
21312: LIST
21313: PUSH
21314: LD_INT 1
21316: PUSH
21317: LD_INT 2
21319: NEG
21320: PUSH
21321: EMPTY
21322: LIST
21323: LIST
21324: PUSH
21325: EMPTY
21326: LIST
21327: LIST
21328: LIST
21329: ST_TO_ADDR
// DepotAm1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
21330: LD_ADDR_VAR 0 12
21334: PUSH
21335: LD_INT 2
21337: PUSH
21338: LD_INT 1
21340: NEG
21341: PUSH
21342: EMPTY
21343: LIST
21344: LIST
21345: PUSH
21346: LD_INT 3
21348: PUSH
21349: LD_INT 0
21351: PUSH
21352: EMPTY
21353: LIST
21354: LIST
21355: PUSH
21356: LD_INT 3
21358: PUSH
21359: LD_INT 1
21361: PUSH
21362: EMPTY
21363: LIST
21364: LIST
21365: PUSH
21366: EMPTY
21367: LIST
21368: LIST
21369: LIST
21370: ST_TO_ADDR
// DepotAm2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
21371: LD_ADDR_VAR 0 13
21375: PUSH
21376: LD_INT 3
21378: PUSH
21379: LD_INT 2
21381: PUSH
21382: EMPTY
21383: LIST
21384: LIST
21385: PUSH
21386: LD_INT 3
21388: PUSH
21389: LD_INT 3
21391: PUSH
21392: EMPTY
21393: LIST
21394: LIST
21395: PUSH
21396: LD_INT 2
21398: PUSH
21399: LD_INT 3
21401: PUSH
21402: EMPTY
21403: LIST
21404: LIST
21405: PUSH
21406: EMPTY
21407: LIST
21408: LIST
21409: LIST
21410: ST_TO_ADDR
// DepotAm3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
21411: LD_ADDR_VAR 0 14
21415: PUSH
21416: LD_INT 1
21418: PUSH
21419: LD_INT 3
21421: PUSH
21422: EMPTY
21423: LIST
21424: LIST
21425: PUSH
21426: LD_INT 0
21428: PUSH
21429: LD_INT 3
21431: PUSH
21432: EMPTY
21433: LIST
21434: LIST
21435: PUSH
21436: LD_INT 1
21438: NEG
21439: PUSH
21440: LD_INT 2
21442: PUSH
21443: EMPTY
21444: LIST
21445: LIST
21446: PUSH
21447: EMPTY
21448: LIST
21449: LIST
21450: LIST
21451: ST_TO_ADDR
// DepotAm4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
21452: LD_ADDR_VAR 0 15
21456: PUSH
21457: LD_INT 2
21459: NEG
21460: PUSH
21461: LD_INT 1
21463: PUSH
21464: EMPTY
21465: LIST
21466: LIST
21467: PUSH
21468: LD_INT 3
21470: NEG
21471: PUSH
21472: LD_INT 0
21474: PUSH
21475: EMPTY
21476: LIST
21477: LIST
21478: PUSH
21479: LD_INT 3
21481: NEG
21482: PUSH
21483: LD_INT 1
21485: NEG
21486: PUSH
21487: EMPTY
21488: LIST
21489: LIST
21490: PUSH
21491: EMPTY
21492: LIST
21493: LIST
21494: LIST
21495: ST_TO_ADDR
// DepotAm5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
21496: LD_ADDR_VAR 0 16
21500: PUSH
21501: LD_INT 2
21503: NEG
21504: PUSH
21505: LD_INT 3
21507: NEG
21508: PUSH
21509: EMPTY
21510: LIST
21511: LIST
21512: PUSH
21513: LD_INT 3
21515: NEG
21516: PUSH
21517: LD_INT 2
21519: NEG
21520: PUSH
21521: EMPTY
21522: LIST
21523: LIST
21524: PUSH
21525: LD_INT 3
21527: NEG
21528: PUSH
21529: LD_INT 3
21531: NEG
21532: PUSH
21533: EMPTY
21534: LIST
21535: LIST
21536: PUSH
21537: EMPTY
21538: LIST
21539: LIST
21540: LIST
21541: ST_TO_ADDR
// DepotAr0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
21542: LD_ADDR_VAR 0 17
21546: PUSH
21547: LD_INT 1
21549: NEG
21550: PUSH
21551: LD_INT 3
21553: NEG
21554: PUSH
21555: EMPTY
21556: LIST
21557: LIST
21558: PUSH
21559: LD_INT 0
21561: PUSH
21562: LD_INT 3
21564: NEG
21565: PUSH
21566: EMPTY
21567: LIST
21568: LIST
21569: PUSH
21570: LD_INT 1
21572: PUSH
21573: LD_INT 2
21575: NEG
21576: PUSH
21577: EMPTY
21578: LIST
21579: LIST
21580: PUSH
21581: EMPTY
21582: LIST
21583: LIST
21584: LIST
21585: ST_TO_ADDR
// DepotAr1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
21586: LD_ADDR_VAR 0 18
21590: PUSH
21591: LD_INT 2
21593: PUSH
21594: LD_INT 1
21596: NEG
21597: PUSH
21598: EMPTY
21599: LIST
21600: LIST
21601: PUSH
21602: LD_INT 3
21604: PUSH
21605: LD_INT 0
21607: PUSH
21608: EMPTY
21609: LIST
21610: LIST
21611: PUSH
21612: LD_INT 3
21614: PUSH
21615: LD_INT 1
21617: PUSH
21618: EMPTY
21619: LIST
21620: LIST
21621: PUSH
21622: EMPTY
21623: LIST
21624: LIST
21625: LIST
21626: ST_TO_ADDR
// DepotAr2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
21627: LD_ADDR_VAR 0 19
21631: PUSH
21632: LD_INT 3
21634: PUSH
21635: LD_INT 2
21637: PUSH
21638: EMPTY
21639: LIST
21640: LIST
21641: PUSH
21642: LD_INT 3
21644: PUSH
21645: LD_INT 3
21647: PUSH
21648: EMPTY
21649: LIST
21650: LIST
21651: PUSH
21652: LD_INT 2
21654: PUSH
21655: LD_INT 3
21657: PUSH
21658: EMPTY
21659: LIST
21660: LIST
21661: PUSH
21662: EMPTY
21663: LIST
21664: LIST
21665: LIST
21666: ST_TO_ADDR
// DepotAr3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
21667: LD_ADDR_VAR 0 20
21671: PUSH
21672: LD_INT 1
21674: PUSH
21675: LD_INT 3
21677: PUSH
21678: EMPTY
21679: LIST
21680: LIST
21681: PUSH
21682: LD_INT 0
21684: PUSH
21685: LD_INT 3
21687: PUSH
21688: EMPTY
21689: LIST
21690: LIST
21691: PUSH
21692: LD_INT 1
21694: NEG
21695: PUSH
21696: LD_INT 2
21698: PUSH
21699: EMPTY
21700: LIST
21701: LIST
21702: PUSH
21703: EMPTY
21704: LIST
21705: LIST
21706: LIST
21707: ST_TO_ADDR
// DepotAr4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
21708: LD_ADDR_VAR 0 21
21712: PUSH
21713: LD_INT 2
21715: NEG
21716: PUSH
21717: LD_INT 1
21719: PUSH
21720: EMPTY
21721: LIST
21722: LIST
21723: PUSH
21724: LD_INT 3
21726: NEG
21727: PUSH
21728: LD_INT 0
21730: PUSH
21731: EMPTY
21732: LIST
21733: LIST
21734: PUSH
21735: LD_INT 3
21737: NEG
21738: PUSH
21739: LD_INT 1
21741: NEG
21742: PUSH
21743: EMPTY
21744: LIST
21745: LIST
21746: PUSH
21747: EMPTY
21748: LIST
21749: LIST
21750: LIST
21751: ST_TO_ADDR
// DepotAr5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
21752: LD_ADDR_VAR 0 22
21756: PUSH
21757: LD_INT 2
21759: NEG
21760: PUSH
21761: LD_INT 3
21763: NEG
21764: PUSH
21765: EMPTY
21766: LIST
21767: LIST
21768: PUSH
21769: LD_INT 3
21771: NEG
21772: PUSH
21773: LD_INT 2
21775: NEG
21776: PUSH
21777: EMPTY
21778: LIST
21779: LIST
21780: PUSH
21781: LD_INT 3
21783: NEG
21784: PUSH
21785: LD_INT 3
21787: NEG
21788: PUSH
21789: EMPTY
21790: LIST
21791: LIST
21792: PUSH
21793: EMPTY
21794: LIST
21795: LIST
21796: LIST
21797: ST_TO_ADDR
// DepotRu0 = [ [ 0 , - 3 ] , [ - 1 , - 4 ] , [ 1 , - 3 ] ] ;
21798: LD_ADDR_VAR 0 23
21802: PUSH
21803: LD_INT 0
21805: PUSH
21806: LD_INT 3
21808: NEG
21809: PUSH
21810: EMPTY
21811: LIST
21812: LIST
21813: PUSH
21814: LD_INT 1
21816: NEG
21817: PUSH
21818: LD_INT 4
21820: NEG
21821: PUSH
21822: EMPTY
21823: LIST
21824: LIST
21825: PUSH
21826: LD_INT 1
21828: PUSH
21829: LD_INT 3
21831: NEG
21832: PUSH
21833: EMPTY
21834: LIST
21835: LIST
21836: PUSH
21837: EMPTY
21838: LIST
21839: LIST
21840: LIST
21841: ST_TO_ADDR
// DepotRu1 = [ [ 3 , 0 ] , [ 3 , - 1 ] , [ 4 , 1 ] ] ;
21842: LD_ADDR_VAR 0 24
21846: PUSH
21847: LD_INT 3
21849: PUSH
21850: LD_INT 0
21852: PUSH
21853: EMPTY
21854: LIST
21855: LIST
21856: PUSH
21857: LD_INT 3
21859: PUSH
21860: LD_INT 1
21862: NEG
21863: PUSH
21864: EMPTY
21865: LIST
21866: LIST
21867: PUSH
21868: LD_INT 4
21870: PUSH
21871: LD_INT 1
21873: PUSH
21874: EMPTY
21875: LIST
21876: LIST
21877: PUSH
21878: EMPTY
21879: LIST
21880: LIST
21881: LIST
21882: ST_TO_ADDR
// DepotRu2 = [ [ 3 , 3 ] , [ 4 , 3 ] , [ 3 , 4 ] ] ;
21883: LD_ADDR_VAR 0 25
21887: PUSH
21888: LD_INT 3
21890: PUSH
21891: LD_INT 3
21893: PUSH
21894: EMPTY
21895: LIST
21896: LIST
21897: PUSH
21898: LD_INT 4
21900: PUSH
21901: LD_INT 3
21903: PUSH
21904: EMPTY
21905: LIST
21906: LIST
21907: PUSH
21908: LD_INT 3
21910: PUSH
21911: LD_INT 4
21913: PUSH
21914: EMPTY
21915: LIST
21916: LIST
21917: PUSH
21918: EMPTY
21919: LIST
21920: LIST
21921: LIST
21922: ST_TO_ADDR
// DepotRu3 = [ [ 0 , 3 ] , [ 1 , 4 ] , [ - 1 , 3 ] ] ;
21923: LD_ADDR_VAR 0 26
21927: PUSH
21928: LD_INT 0
21930: PUSH
21931: LD_INT 3
21933: PUSH
21934: EMPTY
21935: LIST
21936: LIST
21937: PUSH
21938: LD_INT 1
21940: PUSH
21941: LD_INT 4
21943: PUSH
21944: EMPTY
21945: LIST
21946: LIST
21947: PUSH
21948: LD_INT 1
21950: NEG
21951: PUSH
21952: LD_INT 3
21954: PUSH
21955: EMPTY
21956: LIST
21957: LIST
21958: PUSH
21959: EMPTY
21960: LIST
21961: LIST
21962: LIST
21963: ST_TO_ADDR
// DepotRu4 = [ [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , - 1 ] ] ;
21964: LD_ADDR_VAR 0 27
21968: PUSH
21969: LD_INT 3
21971: NEG
21972: PUSH
21973: LD_INT 0
21975: PUSH
21976: EMPTY
21977: LIST
21978: LIST
21979: PUSH
21980: LD_INT 3
21982: NEG
21983: PUSH
21984: LD_INT 1
21986: PUSH
21987: EMPTY
21988: LIST
21989: LIST
21990: PUSH
21991: LD_INT 4
21993: NEG
21994: PUSH
21995: LD_INT 1
21997: NEG
21998: PUSH
21999: EMPTY
22000: LIST
22001: LIST
22002: PUSH
22003: EMPTY
22004: LIST
22005: LIST
22006: LIST
22007: ST_TO_ADDR
// DepotRu5 = [ [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 4 , - 3 ] ] ;
22008: LD_ADDR_VAR 0 28
22012: PUSH
22013: LD_INT 3
22015: NEG
22016: PUSH
22017: LD_INT 3
22019: NEG
22020: PUSH
22021: EMPTY
22022: LIST
22023: LIST
22024: PUSH
22025: LD_INT 3
22027: NEG
22028: PUSH
22029: LD_INT 4
22031: NEG
22032: PUSH
22033: EMPTY
22034: LIST
22035: LIST
22036: PUSH
22037: LD_INT 4
22039: NEG
22040: PUSH
22041: LD_INT 3
22043: NEG
22044: PUSH
22045: EMPTY
22046: LIST
22047: LIST
22048: PUSH
22049: EMPTY
22050: LIST
22051: LIST
22052: LIST
22053: ST_TO_ADDR
// Factory0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ - 1 , - 4 ] , [ 0 , - 4 ] , [ 1 , - 3 ] , [ - 1 , - 5 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ - 1 , - 6 ] , [ 0 , - 6 ] , [ 1 , - 5 ] ] ;
22054: LD_ADDR_VAR 0 29
22058: PUSH
22059: LD_INT 1
22061: NEG
22062: PUSH
22063: LD_INT 3
22065: NEG
22066: PUSH
22067: EMPTY
22068: LIST
22069: LIST
22070: PUSH
22071: LD_INT 0
22073: PUSH
22074: LD_INT 3
22076: NEG
22077: PUSH
22078: EMPTY
22079: LIST
22080: LIST
22081: PUSH
22082: LD_INT 1
22084: PUSH
22085: LD_INT 2
22087: NEG
22088: PUSH
22089: EMPTY
22090: LIST
22091: LIST
22092: PUSH
22093: LD_INT 1
22095: NEG
22096: PUSH
22097: LD_INT 4
22099: NEG
22100: PUSH
22101: EMPTY
22102: LIST
22103: LIST
22104: PUSH
22105: LD_INT 0
22107: PUSH
22108: LD_INT 4
22110: NEG
22111: PUSH
22112: EMPTY
22113: LIST
22114: LIST
22115: PUSH
22116: LD_INT 1
22118: PUSH
22119: LD_INT 3
22121: NEG
22122: PUSH
22123: EMPTY
22124: LIST
22125: LIST
22126: PUSH
22127: LD_INT 1
22129: NEG
22130: PUSH
22131: LD_INT 5
22133: NEG
22134: PUSH
22135: EMPTY
22136: LIST
22137: LIST
22138: PUSH
22139: LD_INT 0
22141: PUSH
22142: LD_INT 5
22144: NEG
22145: PUSH
22146: EMPTY
22147: LIST
22148: LIST
22149: PUSH
22150: LD_INT 1
22152: PUSH
22153: LD_INT 4
22155: NEG
22156: PUSH
22157: EMPTY
22158: LIST
22159: LIST
22160: PUSH
22161: LD_INT 1
22163: NEG
22164: PUSH
22165: LD_INT 6
22167: NEG
22168: PUSH
22169: EMPTY
22170: LIST
22171: LIST
22172: PUSH
22173: LD_INT 0
22175: PUSH
22176: LD_INT 6
22178: NEG
22179: PUSH
22180: EMPTY
22181: LIST
22182: LIST
22183: PUSH
22184: LD_INT 1
22186: PUSH
22187: LD_INT 5
22189: NEG
22190: PUSH
22191: EMPTY
22192: LIST
22193: LIST
22194: PUSH
22195: EMPTY
22196: LIST
22197: LIST
22198: LIST
22199: LIST
22200: LIST
22201: LIST
22202: LIST
22203: LIST
22204: LIST
22205: LIST
22206: LIST
22207: LIST
22208: ST_TO_ADDR
// Factory1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 3 , - 1 ] , [ 4 , 0 ] , [ 4 , 1 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 5 , - 1 ] , [ 6 , 0 ] , [ 6 , 1 ] ] ;
22209: LD_ADDR_VAR 0 30
22213: PUSH
22214: LD_INT 2
22216: PUSH
22217: LD_INT 1
22219: NEG
22220: PUSH
22221: EMPTY
22222: LIST
22223: LIST
22224: PUSH
22225: LD_INT 3
22227: PUSH
22228: LD_INT 0
22230: PUSH
22231: EMPTY
22232: LIST
22233: LIST
22234: PUSH
22235: LD_INT 3
22237: PUSH
22238: LD_INT 1
22240: PUSH
22241: EMPTY
22242: LIST
22243: LIST
22244: PUSH
22245: LD_INT 3
22247: PUSH
22248: LD_INT 1
22250: NEG
22251: PUSH
22252: EMPTY
22253: LIST
22254: LIST
22255: PUSH
22256: LD_INT 4
22258: PUSH
22259: LD_INT 0
22261: PUSH
22262: EMPTY
22263: LIST
22264: LIST
22265: PUSH
22266: LD_INT 4
22268: PUSH
22269: LD_INT 1
22271: PUSH
22272: EMPTY
22273: LIST
22274: LIST
22275: PUSH
22276: LD_INT 4
22278: PUSH
22279: LD_INT 1
22281: NEG
22282: PUSH
22283: EMPTY
22284: LIST
22285: LIST
22286: PUSH
22287: LD_INT 5
22289: PUSH
22290: LD_INT 0
22292: PUSH
22293: EMPTY
22294: LIST
22295: LIST
22296: PUSH
22297: LD_INT 5
22299: PUSH
22300: LD_INT 1
22302: PUSH
22303: EMPTY
22304: LIST
22305: LIST
22306: PUSH
22307: LD_INT 5
22309: PUSH
22310: LD_INT 1
22312: NEG
22313: PUSH
22314: EMPTY
22315: LIST
22316: LIST
22317: PUSH
22318: LD_INT 6
22320: PUSH
22321: LD_INT 0
22323: PUSH
22324: EMPTY
22325: LIST
22326: LIST
22327: PUSH
22328: LD_INT 6
22330: PUSH
22331: LD_INT 1
22333: PUSH
22334: EMPTY
22335: LIST
22336: LIST
22337: PUSH
22338: EMPTY
22339: LIST
22340: LIST
22341: LIST
22342: LIST
22343: LIST
22344: LIST
22345: LIST
22346: LIST
22347: LIST
22348: LIST
22349: LIST
22350: LIST
22351: ST_TO_ADDR
// Factory2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ 4 , 3 ] , [ 4 , 4 ] , [ 3 , 4 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 6 , 5 ] , [ 6 , 6 ] , [ 5 , 6 ] ] ;
22352: LD_ADDR_VAR 0 31
22356: PUSH
22357: LD_INT 3
22359: PUSH
22360: LD_INT 2
22362: PUSH
22363: EMPTY
22364: LIST
22365: LIST
22366: PUSH
22367: LD_INT 3
22369: PUSH
22370: LD_INT 3
22372: PUSH
22373: EMPTY
22374: LIST
22375: LIST
22376: PUSH
22377: LD_INT 2
22379: PUSH
22380: LD_INT 3
22382: PUSH
22383: EMPTY
22384: LIST
22385: LIST
22386: PUSH
22387: LD_INT 4
22389: PUSH
22390: LD_INT 3
22392: PUSH
22393: EMPTY
22394: LIST
22395: LIST
22396: PUSH
22397: LD_INT 4
22399: PUSH
22400: LD_INT 4
22402: PUSH
22403: EMPTY
22404: LIST
22405: LIST
22406: PUSH
22407: LD_INT 3
22409: PUSH
22410: LD_INT 4
22412: PUSH
22413: EMPTY
22414: LIST
22415: LIST
22416: PUSH
22417: LD_INT 5
22419: PUSH
22420: LD_INT 4
22422: PUSH
22423: EMPTY
22424: LIST
22425: LIST
22426: PUSH
22427: LD_INT 5
22429: PUSH
22430: LD_INT 5
22432: PUSH
22433: EMPTY
22434: LIST
22435: LIST
22436: PUSH
22437: LD_INT 4
22439: PUSH
22440: LD_INT 5
22442: PUSH
22443: EMPTY
22444: LIST
22445: LIST
22446: PUSH
22447: LD_INT 6
22449: PUSH
22450: LD_INT 5
22452: PUSH
22453: EMPTY
22454: LIST
22455: LIST
22456: PUSH
22457: LD_INT 6
22459: PUSH
22460: LD_INT 6
22462: PUSH
22463: EMPTY
22464: LIST
22465: LIST
22466: PUSH
22467: LD_INT 5
22469: PUSH
22470: LD_INT 6
22472: PUSH
22473: EMPTY
22474: LIST
22475: LIST
22476: PUSH
22477: EMPTY
22478: LIST
22479: LIST
22480: LIST
22481: LIST
22482: LIST
22483: LIST
22484: LIST
22485: LIST
22486: LIST
22487: LIST
22488: LIST
22489: LIST
22490: ST_TO_ADDR
// Factory3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ 1 , 4 ] , [ 0 , 4 ] , [ - 1 , 3 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ 1 , 6 ] , [ 0 , 6 ] , [ - 1 , 5 ] ] ;
22491: LD_ADDR_VAR 0 32
22495: PUSH
22496: LD_INT 1
22498: PUSH
22499: LD_INT 3
22501: PUSH
22502: EMPTY
22503: LIST
22504: LIST
22505: PUSH
22506: LD_INT 0
22508: PUSH
22509: LD_INT 3
22511: PUSH
22512: EMPTY
22513: LIST
22514: LIST
22515: PUSH
22516: LD_INT 1
22518: NEG
22519: PUSH
22520: LD_INT 2
22522: PUSH
22523: EMPTY
22524: LIST
22525: LIST
22526: PUSH
22527: LD_INT 1
22529: PUSH
22530: LD_INT 4
22532: PUSH
22533: EMPTY
22534: LIST
22535: LIST
22536: PUSH
22537: LD_INT 0
22539: PUSH
22540: LD_INT 4
22542: PUSH
22543: EMPTY
22544: LIST
22545: LIST
22546: PUSH
22547: LD_INT 1
22549: NEG
22550: PUSH
22551: LD_INT 3
22553: PUSH
22554: EMPTY
22555: LIST
22556: LIST
22557: PUSH
22558: LD_INT 1
22560: PUSH
22561: LD_INT 5
22563: PUSH
22564: EMPTY
22565: LIST
22566: LIST
22567: PUSH
22568: LD_INT 0
22570: PUSH
22571: LD_INT 5
22573: PUSH
22574: EMPTY
22575: LIST
22576: LIST
22577: PUSH
22578: LD_INT 1
22580: NEG
22581: PUSH
22582: LD_INT 4
22584: PUSH
22585: EMPTY
22586: LIST
22587: LIST
22588: PUSH
22589: LD_INT 1
22591: PUSH
22592: LD_INT 6
22594: PUSH
22595: EMPTY
22596: LIST
22597: LIST
22598: PUSH
22599: LD_INT 0
22601: PUSH
22602: LD_INT 6
22604: PUSH
22605: EMPTY
22606: LIST
22607: LIST
22608: PUSH
22609: LD_INT 1
22611: NEG
22612: PUSH
22613: LD_INT 5
22615: PUSH
22616: EMPTY
22617: LIST
22618: LIST
22619: PUSH
22620: EMPTY
22621: LIST
22622: LIST
22623: LIST
22624: LIST
22625: LIST
22626: LIST
22627: LIST
22628: LIST
22629: LIST
22630: LIST
22631: LIST
22632: LIST
22633: ST_TO_ADDR
// Factory4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 3 , 1 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , 1 ] , [ - 6 , 0 ] , [ - 6 , - 1 ] ] ;
22634: LD_ADDR_VAR 0 33
22638: PUSH
22639: LD_INT 2
22641: NEG
22642: PUSH
22643: LD_INT 1
22645: PUSH
22646: EMPTY
22647: LIST
22648: LIST
22649: PUSH
22650: LD_INT 3
22652: NEG
22653: PUSH
22654: LD_INT 0
22656: PUSH
22657: EMPTY
22658: LIST
22659: LIST
22660: PUSH
22661: LD_INT 3
22663: NEG
22664: PUSH
22665: LD_INT 1
22667: NEG
22668: PUSH
22669: EMPTY
22670: LIST
22671: LIST
22672: PUSH
22673: LD_INT 3
22675: NEG
22676: PUSH
22677: LD_INT 1
22679: PUSH
22680: EMPTY
22681: LIST
22682: LIST
22683: PUSH
22684: LD_INT 4
22686: NEG
22687: PUSH
22688: LD_INT 0
22690: PUSH
22691: EMPTY
22692: LIST
22693: LIST
22694: PUSH
22695: LD_INT 4
22697: NEG
22698: PUSH
22699: LD_INT 1
22701: NEG
22702: PUSH
22703: EMPTY
22704: LIST
22705: LIST
22706: PUSH
22707: LD_INT 4
22709: NEG
22710: PUSH
22711: LD_INT 1
22713: PUSH
22714: EMPTY
22715: LIST
22716: LIST
22717: PUSH
22718: LD_INT 5
22720: NEG
22721: PUSH
22722: LD_INT 0
22724: PUSH
22725: EMPTY
22726: LIST
22727: LIST
22728: PUSH
22729: LD_INT 5
22731: NEG
22732: PUSH
22733: LD_INT 1
22735: NEG
22736: PUSH
22737: EMPTY
22738: LIST
22739: LIST
22740: PUSH
22741: LD_INT 5
22743: NEG
22744: PUSH
22745: LD_INT 1
22747: PUSH
22748: EMPTY
22749: LIST
22750: LIST
22751: PUSH
22752: LD_INT 6
22754: NEG
22755: PUSH
22756: LD_INT 0
22758: PUSH
22759: EMPTY
22760: LIST
22761: LIST
22762: PUSH
22763: LD_INT 6
22765: NEG
22766: PUSH
22767: LD_INT 1
22769: NEG
22770: PUSH
22771: EMPTY
22772: LIST
22773: LIST
22774: PUSH
22775: EMPTY
22776: LIST
22777: LIST
22778: LIST
22779: LIST
22780: LIST
22781: LIST
22782: LIST
22783: LIST
22784: LIST
22785: LIST
22786: LIST
22787: LIST
22788: ST_TO_ADDR
// Factory5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 4 , - 3 ] , [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 5 , - 6 ] , [ - 6 , - 5 ] , [ - 6 , - 6 ] ] ;
22789: LD_ADDR_VAR 0 34
22793: PUSH
22794: LD_INT 2
22796: NEG
22797: PUSH
22798: LD_INT 3
22800: NEG
22801: PUSH
22802: EMPTY
22803: LIST
22804: LIST
22805: PUSH
22806: LD_INT 3
22808: NEG
22809: PUSH
22810: LD_INT 2
22812: NEG
22813: PUSH
22814: EMPTY
22815: LIST
22816: LIST
22817: PUSH
22818: LD_INT 3
22820: NEG
22821: PUSH
22822: LD_INT 3
22824: NEG
22825: PUSH
22826: EMPTY
22827: LIST
22828: LIST
22829: PUSH
22830: LD_INT 3
22832: NEG
22833: PUSH
22834: LD_INT 4
22836: NEG
22837: PUSH
22838: EMPTY
22839: LIST
22840: LIST
22841: PUSH
22842: LD_INT 4
22844: NEG
22845: PUSH
22846: LD_INT 3
22848: NEG
22849: PUSH
22850: EMPTY
22851: LIST
22852: LIST
22853: PUSH
22854: LD_INT 4
22856: NEG
22857: PUSH
22858: LD_INT 4
22860: NEG
22861: PUSH
22862: EMPTY
22863: LIST
22864: LIST
22865: PUSH
22866: LD_INT 4
22868: NEG
22869: PUSH
22870: LD_INT 5
22872: NEG
22873: PUSH
22874: EMPTY
22875: LIST
22876: LIST
22877: PUSH
22878: LD_INT 5
22880: NEG
22881: PUSH
22882: LD_INT 4
22884: NEG
22885: PUSH
22886: EMPTY
22887: LIST
22888: LIST
22889: PUSH
22890: LD_INT 5
22892: NEG
22893: PUSH
22894: LD_INT 5
22896: NEG
22897: PUSH
22898: EMPTY
22899: LIST
22900: LIST
22901: PUSH
22902: LD_INT 5
22904: NEG
22905: PUSH
22906: LD_INT 6
22908: NEG
22909: PUSH
22910: EMPTY
22911: LIST
22912: LIST
22913: PUSH
22914: LD_INT 6
22916: NEG
22917: PUSH
22918: LD_INT 5
22920: NEG
22921: PUSH
22922: EMPTY
22923: LIST
22924: LIST
22925: PUSH
22926: LD_INT 6
22928: NEG
22929: PUSH
22930: LD_INT 6
22932: NEG
22933: PUSH
22934: EMPTY
22935: LIST
22936: LIST
22937: PUSH
22938: EMPTY
22939: LIST
22940: LIST
22941: LIST
22942: LIST
22943: LIST
22944: LIST
22945: LIST
22946: LIST
22947: LIST
22948: LIST
22949: LIST
22950: LIST
22951: ST_TO_ADDR
// Lab0 = [ [ 0 , - 2 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] ] ;
22952: LD_ADDR_VAR 0 41
22956: PUSH
22957: LD_INT 0
22959: PUSH
22960: LD_INT 2
22962: NEG
22963: PUSH
22964: EMPTY
22965: LIST
22966: LIST
22967: PUSH
22968: LD_INT 1
22970: NEG
22971: PUSH
22972: LD_INT 3
22974: NEG
22975: PUSH
22976: EMPTY
22977: LIST
22978: LIST
22979: PUSH
22980: LD_INT 1
22982: PUSH
22983: LD_INT 2
22985: NEG
22986: PUSH
22987: EMPTY
22988: LIST
22989: LIST
22990: PUSH
22991: EMPTY
22992: LIST
22993: LIST
22994: LIST
22995: ST_TO_ADDR
// Lab1 = [ [ 2 , 0 ] , [ 2 , - 1 ] , [ 3 , 1 ] ] ;
22996: LD_ADDR_VAR 0 42
23000: PUSH
23001: LD_INT 2
23003: PUSH
23004: LD_INT 0
23006: PUSH
23007: EMPTY
23008: LIST
23009: LIST
23010: PUSH
23011: LD_INT 2
23013: PUSH
23014: LD_INT 1
23016: NEG
23017: PUSH
23018: EMPTY
23019: LIST
23020: LIST
23021: PUSH
23022: LD_INT 3
23024: PUSH
23025: LD_INT 1
23027: PUSH
23028: EMPTY
23029: LIST
23030: LIST
23031: PUSH
23032: EMPTY
23033: LIST
23034: LIST
23035: LIST
23036: ST_TO_ADDR
// Lab2 = [ [ 2 , 2 ] , [ 3 , 2 ] , [ 2 , 3 ] ] ;
23037: LD_ADDR_VAR 0 43
23041: PUSH
23042: LD_INT 2
23044: PUSH
23045: LD_INT 2
23047: PUSH
23048: EMPTY
23049: LIST
23050: LIST
23051: PUSH
23052: LD_INT 3
23054: PUSH
23055: LD_INT 2
23057: PUSH
23058: EMPTY
23059: LIST
23060: LIST
23061: PUSH
23062: LD_INT 2
23064: PUSH
23065: LD_INT 3
23067: PUSH
23068: EMPTY
23069: LIST
23070: LIST
23071: PUSH
23072: EMPTY
23073: LIST
23074: LIST
23075: LIST
23076: ST_TO_ADDR
// Lab3 = [ [ 0 , 2 ] , [ 1 , 3 ] , [ - 1 , 2 ] ] ;
23077: LD_ADDR_VAR 0 44
23081: PUSH
23082: LD_INT 0
23084: PUSH
23085: LD_INT 2
23087: PUSH
23088: EMPTY
23089: LIST
23090: LIST
23091: PUSH
23092: LD_INT 1
23094: PUSH
23095: LD_INT 3
23097: PUSH
23098: EMPTY
23099: LIST
23100: LIST
23101: PUSH
23102: LD_INT 1
23104: NEG
23105: PUSH
23106: LD_INT 2
23108: PUSH
23109: EMPTY
23110: LIST
23111: LIST
23112: PUSH
23113: EMPTY
23114: LIST
23115: LIST
23116: LIST
23117: ST_TO_ADDR
// Lab4 = [ [ - 2 , 0 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
23118: LD_ADDR_VAR 0 45
23122: PUSH
23123: LD_INT 2
23125: NEG
23126: PUSH
23127: LD_INT 0
23129: PUSH
23130: EMPTY
23131: LIST
23132: LIST
23133: PUSH
23134: LD_INT 2
23136: NEG
23137: PUSH
23138: LD_INT 1
23140: PUSH
23141: EMPTY
23142: LIST
23143: LIST
23144: PUSH
23145: LD_INT 3
23147: NEG
23148: PUSH
23149: LD_INT 1
23151: NEG
23152: PUSH
23153: EMPTY
23154: LIST
23155: LIST
23156: PUSH
23157: EMPTY
23158: LIST
23159: LIST
23160: LIST
23161: ST_TO_ADDR
// Lab5 = [ [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 3 , - 2 ] ] ;
23162: LD_ADDR_VAR 0 46
23166: PUSH
23167: LD_INT 2
23169: NEG
23170: PUSH
23171: LD_INT 2
23173: NEG
23174: PUSH
23175: EMPTY
23176: LIST
23177: LIST
23178: PUSH
23179: LD_INT 2
23181: NEG
23182: PUSH
23183: LD_INT 3
23185: NEG
23186: PUSH
23187: EMPTY
23188: LIST
23189: LIST
23190: PUSH
23191: LD_INT 3
23193: NEG
23194: PUSH
23195: LD_INT 2
23197: NEG
23198: PUSH
23199: EMPTY
23200: LIST
23201: LIST
23202: PUSH
23203: EMPTY
23204: LIST
23205: LIST
23206: LIST
23207: ST_TO_ADDR
// ControlTower0 = [ [ - 2 , - 3 ] , [ - 1 , - 3 ] ] ;
23208: LD_ADDR_VAR 0 47
23212: PUSH
23213: LD_INT 2
23215: NEG
23216: PUSH
23217: LD_INT 3
23219: NEG
23220: PUSH
23221: EMPTY
23222: LIST
23223: LIST
23224: PUSH
23225: LD_INT 1
23227: NEG
23228: PUSH
23229: LD_INT 3
23231: NEG
23232: PUSH
23233: EMPTY
23234: LIST
23235: LIST
23236: PUSH
23237: EMPTY
23238: LIST
23239: LIST
23240: ST_TO_ADDR
// ControlTower1 = [ [ 1 , - 2 ] , [ 2 , - 1 ] ] ;
23241: LD_ADDR_VAR 0 48
23245: PUSH
23246: LD_INT 1
23248: PUSH
23249: LD_INT 2
23251: NEG
23252: PUSH
23253: EMPTY
23254: LIST
23255: LIST
23256: PUSH
23257: LD_INT 2
23259: PUSH
23260: LD_INT 1
23262: NEG
23263: PUSH
23264: EMPTY
23265: LIST
23266: LIST
23267: PUSH
23268: EMPTY
23269: LIST
23270: LIST
23271: ST_TO_ADDR
// ControlTower2 = [ [ 3 , 1 ] , [ 3 , 2 ] ] ;
23272: LD_ADDR_VAR 0 49
23276: PUSH
23277: LD_INT 3
23279: PUSH
23280: LD_INT 1
23282: PUSH
23283: EMPTY
23284: LIST
23285: LIST
23286: PUSH
23287: LD_INT 3
23289: PUSH
23290: LD_INT 2
23292: PUSH
23293: EMPTY
23294: LIST
23295: LIST
23296: PUSH
23297: EMPTY
23298: LIST
23299: LIST
23300: ST_TO_ADDR
// ControlTower3 = [ [ 2 , 3 ] , [ 1 , 3 ] ] ;
23301: LD_ADDR_VAR 0 50
23305: PUSH
23306: LD_INT 2
23308: PUSH
23309: LD_INT 3
23311: PUSH
23312: EMPTY
23313: LIST
23314: LIST
23315: PUSH
23316: LD_INT 1
23318: PUSH
23319: LD_INT 3
23321: PUSH
23322: EMPTY
23323: LIST
23324: LIST
23325: PUSH
23326: EMPTY
23327: LIST
23328: LIST
23329: ST_TO_ADDR
// ControlTower4 = [ [ - 1 , 2 ] , [ - 2 , 1 ] ] ;
23330: LD_ADDR_VAR 0 51
23334: PUSH
23335: LD_INT 1
23337: NEG
23338: PUSH
23339: LD_INT 2
23341: PUSH
23342: EMPTY
23343: LIST
23344: LIST
23345: PUSH
23346: LD_INT 2
23348: NEG
23349: PUSH
23350: LD_INT 1
23352: PUSH
23353: EMPTY
23354: LIST
23355: LIST
23356: PUSH
23357: EMPTY
23358: LIST
23359: LIST
23360: ST_TO_ADDR
// ControlTower5 = [ [ - 3 , - 1 ] , [ - 3 , - 2 ] ] ;
23361: LD_ADDR_VAR 0 52
23365: PUSH
23366: LD_INT 3
23368: NEG
23369: PUSH
23370: LD_INT 1
23372: NEG
23373: PUSH
23374: EMPTY
23375: LIST
23376: LIST
23377: PUSH
23378: LD_INT 3
23380: NEG
23381: PUSH
23382: LD_INT 2
23384: NEG
23385: PUSH
23386: EMPTY
23387: LIST
23388: LIST
23389: PUSH
23390: EMPTY
23391: LIST
23392: LIST
23393: ST_TO_ADDR
// Barracks0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
23394: LD_ADDR_VAR 0 53
23398: PUSH
23399: LD_INT 1
23401: NEG
23402: PUSH
23403: LD_INT 3
23405: NEG
23406: PUSH
23407: EMPTY
23408: LIST
23409: LIST
23410: PUSH
23411: LD_INT 0
23413: PUSH
23414: LD_INT 3
23416: NEG
23417: PUSH
23418: EMPTY
23419: LIST
23420: LIST
23421: PUSH
23422: LD_INT 1
23424: PUSH
23425: LD_INT 2
23427: NEG
23428: PUSH
23429: EMPTY
23430: LIST
23431: LIST
23432: PUSH
23433: EMPTY
23434: LIST
23435: LIST
23436: LIST
23437: ST_TO_ADDR
// Barracks1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
23438: LD_ADDR_VAR 0 54
23442: PUSH
23443: LD_INT 2
23445: PUSH
23446: LD_INT 1
23448: NEG
23449: PUSH
23450: EMPTY
23451: LIST
23452: LIST
23453: PUSH
23454: LD_INT 3
23456: PUSH
23457: LD_INT 0
23459: PUSH
23460: EMPTY
23461: LIST
23462: LIST
23463: PUSH
23464: LD_INT 3
23466: PUSH
23467: LD_INT 1
23469: PUSH
23470: EMPTY
23471: LIST
23472: LIST
23473: PUSH
23474: EMPTY
23475: LIST
23476: LIST
23477: LIST
23478: ST_TO_ADDR
// Barracks2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
23479: LD_ADDR_VAR 0 55
23483: PUSH
23484: LD_INT 3
23486: PUSH
23487: LD_INT 2
23489: PUSH
23490: EMPTY
23491: LIST
23492: LIST
23493: PUSH
23494: LD_INT 3
23496: PUSH
23497: LD_INT 3
23499: PUSH
23500: EMPTY
23501: LIST
23502: LIST
23503: PUSH
23504: LD_INT 2
23506: PUSH
23507: LD_INT 3
23509: PUSH
23510: EMPTY
23511: LIST
23512: LIST
23513: PUSH
23514: EMPTY
23515: LIST
23516: LIST
23517: LIST
23518: ST_TO_ADDR
// Barracks3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
23519: LD_ADDR_VAR 0 56
23523: PUSH
23524: LD_INT 1
23526: PUSH
23527: LD_INT 3
23529: PUSH
23530: EMPTY
23531: LIST
23532: LIST
23533: PUSH
23534: LD_INT 0
23536: PUSH
23537: LD_INT 3
23539: PUSH
23540: EMPTY
23541: LIST
23542: LIST
23543: PUSH
23544: LD_INT 1
23546: NEG
23547: PUSH
23548: LD_INT 2
23550: PUSH
23551: EMPTY
23552: LIST
23553: LIST
23554: PUSH
23555: EMPTY
23556: LIST
23557: LIST
23558: LIST
23559: ST_TO_ADDR
// Barracks4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
23560: LD_ADDR_VAR 0 57
23564: PUSH
23565: LD_INT 2
23567: NEG
23568: PUSH
23569: LD_INT 1
23571: PUSH
23572: EMPTY
23573: LIST
23574: LIST
23575: PUSH
23576: LD_INT 3
23578: NEG
23579: PUSH
23580: LD_INT 0
23582: PUSH
23583: EMPTY
23584: LIST
23585: LIST
23586: PUSH
23587: LD_INT 3
23589: NEG
23590: PUSH
23591: LD_INT 1
23593: NEG
23594: PUSH
23595: EMPTY
23596: LIST
23597: LIST
23598: PUSH
23599: EMPTY
23600: LIST
23601: LIST
23602: LIST
23603: ST_TO_ADDR
// Barracks5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
23604: LD_ADDR_VAR 0 58
23608: PUSH
23609: LD_INT 2
23611: NEG
23612: PUSH
23613: LD_INT 3
23615: NEG
23616: PUSH
23617: EMPTY
23618: LIST
23619: LIST
23620: PUSH
23621: LD_INT 3
23623: NEG
23624: PUSH
23625: LD_INT 2
23627: NEG
23628: PUSH
23629: EMPTY
23630: LIST
23631: LIST
23632: PUSH
23633: LD_INT 3
23635: NEG
23636: PUSH
23637: LD_INT 3
23639: NEG
23640: PUSH
23641: EMPTY
23642: LIST
23643: LIST
23644: PUSH
23645: EMPTY
23646: LIST
23647: LIST
23648: LIST
23649: ST_TO_ADDR
// Bunker0 = [ [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] ] ;
23650: LD_ADDR_VAR 0 59
23654: PUSH
23655: LD_INT 1
23657: NEG
23658: PUSH
23659: LD_INT 2
23661: NEG
23662: PUSH
23663: EMPTY
23664: LIST
23665: LIST
23666: PUSH
23667: LD_INT 0
23669: PUSH
23670: LD_INT 2
23672: NEG
23673: PUSH
23674: EMPTY
23675: LIST
23676: LIST
23677: PUSH
23678: LD_INT 1
23680: PUSH
23681: LD_INT 1
23683: NEG
23684: PUSH
23685: EMPTY
23686: LIST
23687: LIST
23688: PUSH
23689: EMPTY
23690: LIST
23691: LIST
23692: LIST
23693: ST_TO_ADDR
// Bunker1 = [ [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] ] ;
23694: LD_ADDR_VAR 0 60
23698: PUSH
23699: LD_INT 1
23701: PUSH
23702: LD_INT 1
23704: NEG
23705: PUSH
23706: EMPTY
23707: LIST
23708: LIST
23709: PUSH
23710: LD_INT 2
23712: PUSH
23713: LD_INT 0
23715: PUSH
23716: EMPTY
23717: LIST
23718: LIST
23719: PUSH
23720: LD_INT 2
23722: PUSH
23723: LD_INT 1
23725: PUSH
23726: EMPTY
23727: LIST
23728: LIST
23729: PUSH
23730: EMPTY
23731: LIST
23732: LIST
23733: LIST
23734: ST_TO_ADDR
// Bunker2 = [ [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] ] ;
23735: LD_ADDR_VAR 0 61
23739: PUSH
23740: LD_INT 2
23742: PUSH
23743: LD_INT 1
23745: PUSH
23746: EMPTY
23747: LIST
23748: LIST
23749: PUSH
23750: LD_INT 2
23752: PUSH
23753: LD_INT 2
23755: PUSH
23756: EMPTY
23757: LIST
23758: LIST
23759: PUSH
23760: LD_INT 1
23762: PUSH
23763: LD_INT 2
23765: PUSH
23766: EMPTY
23767: LIST
23768: LIST
23769: PUSH
23770: EMPTY
23771: LIST
23772: LIST
23773: LIST
23774: ST_TO_ADDR
// Bunker3 = [ [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] ] ;
23775: LD_ADDR_VAR 0 62
23779: PUSH
23780: LD_INT 1
23782: PUSH
23783: LD_INT 2
23785: PUSH
23786: EMPTY
23787: LIST
23788: LIST
23789: PUSH
23790: LD_INT 0
23792: PUSH
23793: LD_INT 2
23795: PUSH
23796: EMPTY
23797: LIST
23798: LIST
23799: PUSH
23800: LD_INT 1
23802: NEG
23803: PUSH
23804: LD_INT 1
23806: PUSH
23807: EMPTY
23808: LIST
23809: LIST
23810: PUSH
23811: EMPTY
23812: LIST
23813: LIST
23814: LIST
23815: ST_TO_ADDR
// Bunker4 = [ [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] ] ;
23816: LD_ADDR_VAR 0 63
23820: PUSH
23821: LD_INT 1
23823: NEG
23824: PUSH
23825: LD_INT 1
23827: PUSH
23828: EMPTY
23829: LIST
23830: LIST
23831: PUSH
23832: LD_INT 2
23834: NEG
23835: PUSH
23836: LD_INT 0
23838: PUSH
23839: EMPTY
23840: LIST
23841: LIST
23842: PUSH
23843: LD_INT 2
23845: NEG
23846: PUSH
23847: LD_INT 1
23849: NEG
23850: PUSH
23851: EMPTY
23852: LIST
23853: LIST
23854: PUSH
23855: EMPTY
23856: LIST
23857: LIST
23858: LIST
23859: ST_TO_ADDR
// Bunker5 = [ [ - 1 , - 2 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
23860: LD_ADDR_VAR 0 64
23864: PUSH
23865: LD_INT 1
23867: NEG
23868: PUSH
23869: LD_INT 2
23871: NEG
23872: PUSH
23873: EMPTY
23874: LIST
23875: LIST
23876: PUSH
23877: LD_INT 2
23879: NEG
23880: PUSH
23881: LD_INT 1
23883: NEG
23884: PUSH
23885: EMPTY
23886: LIST
23887: LIST
23888: PUSH
23889: LD_INT 2
23891: NEG
23892: PUSH
23893: LD_INT 2
23895: NEG
23896: PUSH
23897: EMPTY
23898: LIST
23899: LIST
23900: PUSH
23901: EMPTY
23902: LIST
23903: LIST
23904: LIST
23905: ST_TO_ADDR
// end ; 2 :
23906: GO 27172
23908: LD_INT 2
23910: DOUBLE
23911: EQUAL
23912: IFTRUE 23916
23914: GO 27171
23916: POP
// begin Factory0 = [ [ 4 , 0 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 4 , 1 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 3 , - 2 ] , [ 5 , 2 ] , [ 3 , 3 ] , [ 3 , 2 ] , [ 4 , 3 ] , [ 4 , 4 ] , [ 3 , 4 ] , [ 2 , 3 ] , [ 2 , 2 ] , [ 4 , 2 ] , [ 2 , 4 ] , [ 0 , 4 ] , [ 0 , 3 ] , [ 1 , 4 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ - 1 , 3 ] , [ 2 , 5 ] , [ - 2 , 3 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 2 , 0 ] , [ - 2 , 1 ] , [ - 3 , 1 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 4 , - 2 ] , [ - 2 , 2 ] , [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 3 , - 4 ] , [ - 3 , - 3 ] , [ - 4 , - 3 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 3 , - 5 ] , [ - 5 , - 3 ] ] ;
23917: LD_ADDR_VAR 0 29
23921: PUSH
23922: LD_INT 4
23924: PUSH
23925: LD_INT 0
23927: PUSH
23928: EMPTY
23929: LIST
23930: LIST
23931: PUSH
23932: LD_INT 4
23934: PUSH
23935: LD_INT 1
23937: NEG
23938: PUSH
23939: EMPTY
23940: LIST
23941: LIST
23942: PUSH
23943: LD_INT 5
23945: PUSH
23946: LD_INT 0
23948: PUSH
23949: EMPTY
23950: LIST
23951: LIST
23952: PUSH
23953: LD_INT 5
23955: PUSH
23956: LD_INT 1
23958: PUSH
23959: EMPTY
23960: LIST
23961: LIST
23962: PUSH
23963: LD_INT 4
23965: PUSH
23966: LD_INT 1
23968: PUSH
23969: EMPTY
23970: LIST
23971: LIST
23972: PUSH
23973: LD_INT 3
23975: PUSH
23976: LD_INT 0
23978: PUSH
23979: EMPTY
23980: LIST
23981: LIST
23982: PUSH
23983: LD_INT 3
23985: PUSH
23986: LD_INT 1
23988: NEG
23989: PUSH
23990: EMPTY
23991: LIST
23992: LIST
23993: PUSH
23994: LD_INT 3
23996: PUSH
23997: LD_INT 2
23999: NEG
24000: PUSH
24001: EMPTY
24002: LIST
24003: LIST
24004: PUSH
24005: LD_INT 5
24007: PUSH
24008: LD_INT 2
24010: PUSH
24011: EMPTY
24012: LIST
24013: LIST
24014: PUSH
24015: LD_INT 3
24017: PUSH
24018: LD_INT 3
24020: PUSH
24021: EMPTY
24022: LIST
24023: LIST
24024: PUSH
24025: LD_INT 3
24027: PUSH
24028: LD_INT 2
24030: PUSH
24031: EMPTY
24032: LIST
24033: LIST
24034: PUSH
24035: LD_INT 4
24037: PUSH
24038: LD_INT 3
24040: PUSH
24041: EMPTY
24042: LIST
24043: LIST
24044: PUSH
24045: LD_INT 4
24047: PUSH
24048: LD_INT 4
24050: PUSH
24051: EMPTY
24052: LIST
24053: LIST
24054: PUSH
24055: LD_INT 3
24057: PUSH
24058: LD_INT 4
24060: PUSH
24061: EMPTY
24062: LIST
24063: LIST
24064: PUSH
24065: LD_INT 2
24067: PUSH
24068: LD_INT 3
24070: PUSH
24071: EMPTY
24072: LIST
24073: LIST
24074: PUSH
24075: LD_INT 2
24077: PUSH
24078: LD_INT 2
24080: PUSH
24081: EMPTY
24082: LIST
24083: LIST
24084: PUSH
24085: LD_INT 4
24087: PUSH
24088: LD_INT 2
24090: PUSH
24091: EMPTY
24092: LIST
24093: LIST
24094: PUSH
24095: LD_INT 2
24097: PUSH
24098: LD_INT 4
24100: PUSH
24101: EMPTY
24102: LIST
24103: LIST
24104: PUSH
24105: LD_INT 0
24107: PUSH
24108: LD_INT 4
24110: PUSH
24111: EMPTY
24112: LIST
24113: LIST
24114: PUSH
24115: LD_INT 0
24117: PUSH
24118: LD_INT 3
24120: PUSH
24121: EMPTY
24122: LIST
24123: LIST
24124: PUSH
24125: LD_INT 1
24127: PUSH
24128: LD_INT 4
24130: PUSH
24131: EMPTY
24132: LIST
24133: LIST
24134: PUSH
24135: LD_INT 1
24137: PUSH
24138: LD_INT 5
24140: PUSH
24141: EMPTY
24142: LIST
24143: LIST
24144: PUSH
24145: LD_INT 0
24147: PUSH
24148: LD_INT 5
24150: PUSH
24151: EMPTY
24152: LIST
24153: LIST
24154: PUSH
24155: LD_INT 1
24157: NEG
24158: PUSH
24159: LD_INT 4
24161: PUSH
24162: EMPTY
24163: LIST
24164: LIST
24165: PUSH
24166: LD_INT 1
24168: NEG
24169: PUSH
24170: LD_INT 3
24172: PUSH
24173: EMPTY
24174: LIST
24175: LIST
24176: PUSH
24177: LD_INT 2
24179: PUSH
24180: LD_INT 5
24182: PUSH
24183: EMPTY
24184: LIST
24185: LIST
24186: PUSH
24187: LD_INT 2
24189: NEG
24190: PUSH
24191: LD_INT 3
24193: PUSH
24194: EMPTY
24195: LIST
24196: LIST
24197: PUSH
24198: LD_INT 3
24200: NEG
24201: PUSH
24202: LD_INT 0
24204: PUSH
24205: EMPTY
24206: LIST
24207: LIST
24208: PUSH
24209: LD_INT 3
24211: NEG
24212: PUSH
24213: LD_INT 1
24215: NEG
24216: PUSH
24217: EMPTY
24218: LIST
24219: LIST
24220: PUSH
24221: LD_INT 2
24223: NEG
24224: PUSH
24225: LD_INT 0
24227: PUSH
24228: EMPTY
24229: LIST
24230: LIST
24231: PUSH
24232: LD_INT 2
24234: NEG
24235: PUSH
24236: LD_INT 1
24238: PUSH
24239: EMPTY
24240: LIST
24241: LIST
24242: PUSH
24243: LD_INT 3
24245: NEG
24246: PUSH
24247: LD_INT 1
24249: PUSH
24250: EMPTY
24251: LIST
24252: LIST
24253: PUSH
24254: LD_INT 4
24256: NEG
24257: PUSH
24258: LD_INT 0
24260: PUSH
24261: EMPTY
24262: LIST
24263: LIST
24264: PUSH
24265: LD_INT 4
24267: NEG
24268: PUSH
24269: LD_INT 1
24271: NEG
24272: PUSH
24273: EMPTY
24274: LIST
24275: LIST
24276: PUSH
24277: LD_INT 4
24279: NEG
24280: PUSH
24281: LD_INT 2
24283: NEG
24284: PUSH
24285: EMPTY
24286: LIST
24287: LIST
24288: PUSH
24289: LD_INT 2
24291: NEG
24292: PUSH
24293: LD_INT 2
24295: PUSH
24296: EMPTY
24297: LIST
24298: LIST
24299: PUSH
24300: LD_INT 4
24302: NEG
24303: PUSH
24304: LD_INT 4
24306: NEG
24307: PUSH
24308: EMPTY
24309: LIST
24310: LIST
24311: PUSH
24312: LD_INT 4
24314: NEG
24315: PUSH
24316: LD_INT 5
24318: NEG
24319: PUSH
24320: EMPTY
24321: LIST
24322: LIST
24323: PUSH
24324: LD_INT 3
24326: NEG
24327: PUSH
24328: LD_INT 4
24330: NEG
24331: PUSH
24332: EMPTY
24333: LIST
24334: LIST
24335: PUSH
24336: LD_INT 3
24338: NEG
24339: PUSH
24340: LD_INT 3
24342: NEG
24343: PUSH
24344: EMPTY
24345: LIST
24346: LIST
24347: PUSH
24348: LD_INT 4
24350: NEG
24351: PUSH
24352: LD_INT 3
24354: NEG
24355: PUSH
24356: EMPTY
24357: LIST
24358: LIST
24359: PUSH
24360: LD_INT 5
24362: NEG
24363: PUSH
24364: LD_INT 4
24366: NEG
24367: PUSH
24368: EMPTY
24369: LIST
24370: LIST
24371: PUSH
24372: LD_INT 5
24374: NEG
24375: PUSH
24376: LD_INT 5
24378: NEG
24379: PUSH
24380: EMPTY
24381: LIST
24382: LIST
24383: PUSH
24384: LD_INT 3
24386: NEG
24387: PUSH
24388: LD_INT 5
24390: NEG
24391: PUSH
24392: EMPTY
24393: LIST
24394: LIST
24395: PUSH
24396: LD_INT 5
24398: NEG
24399: PUSH
24400: LD_INT 3
24402: NEG
24403: PUSH
24404: EMPTY
24405: LIST
24406: LIST
24407: PUSH
24408: EMPTY
24409: LIST
24410: LIST
24411: LIST
24412: LIST
24413: LIST
24414: LIST
24415: LIST
24416: LIST
24417: LIST
24418: LIST
24419: LIST
24420: LIST
24421: LIST
24422: LIST
24423: LIST
24424: LIST
24425: LIST
24426: LIST
24427: LIST
24428: LIST
24429: LIST
24430: LIST
24431: LIST
24432: LIST
24433: LIST
24434: LIST
24435: LIST
24436: LIST
24437: LIST
24438: LIST
24439: LIST
24440: LIST
24441: LIST
24442: LIST
24443: LIST
24444: LIST
24445: LIST
24446: LIST
24447: LIST
24448: LIST
24449: LIST
24450: LIST
24451: LIST
24452: LIST
24453: LIST
24454: ST_TO_ADDR
// Factory1 = [ [ 4 , 4 ] , [ 4 , 3 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 3 , 4 ] , [ 3 , 3 ] , [ 5 , 3 ] , [ 3 , 5 ] , [ 0 , 3 ] , [ 0 , 2 ] , [ 1 , 3 ] , [ 1 , 4 ] , [ 0 , 4 ] , [ - 1 , 3 ] , [ - 1 , 2 ] , [ 2 , 4 ] , [ - 2 , 2 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , - 2 ] , [ - 3 , 2 ] , [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 2 , - 3 ] , [ - 2 , - 2 ] , [ - 3 , - 2 ] , [ - 4 , - 3 ] , [ - 4 , - 4 ] , [ - 2 , - 4 ] , [ - 4 , - 2 ] , [ 0 , - 4 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ 1 , - 3 ] , [ 0 , - 3 ] , [ - 1 , - 4 ] , [ - 1 , - 5 ] , [ 2 , - 3 ] , [ - 2 , - 5 ] ] ;
24455: LD_ADDR_VAR 0 30
24459: PUSH
24460: LD_INT 4
24462: PUSH
24463: LD_INT 4
24465: PUSH
24466: EMPTY
24467: LIST
24468: LIST
24469: PUSH
24470: LD_INT 4
24472: PUSH
24473: LD_INT 3
24475: PUSH
24476: EMPTY
24477: LIST
24478: LIST
24479: PUSH
24480: LD_INT 5
24482: PUSH
24483: LD_INT 4
24485: PUSH
24486: EMPTY
24487: LIST
24488: LIST
24489: PUSH
24490: LD_INT 5
24492: PUSH
24493: LD_INT 5
24495: PUSH
24496: EMPTY
24497: LIST
24498: LIST
24499: PUSH
24500: LD_INT 4
24502: PUSH
24503: LD_INT 5
24505: PUSH
24506: EMPTY
24507: LIST
24508: LIST
24509: PUSH
24510: LD_INT 3
24512: PUSH
24513: LD_INT 4
24515: PUSH
24516: EMPTY
24517: LIST
24518: LIST
24519: PUSH
24520: LD_INT 3
24522: PUSH
24523: LD_INT 3
24525: PUSH
24526: EMPTY
24527: LIST
24528: LIST
24529: PUSH
24530: LD_INT 5
24532: PUSH
24533: LD_INT 3
24535: PUSH
24536: EMPTY
24537: LIST
24538: LIST
24539: PUSH
24540: LD_INT 3
24542: PUSH
24543: LD_INT 5
24545: PUSH
24546: EMPTY
24547: LIST
24548: LIST
24549: PUSH
24550: LD_INT 0
24552: PUSH
24553: LD_INT 3
24555: PUSH
24556: EMPTY
24557: LIST
24558: LIST
24559: PUSH
24560: LD_INT 0
24562: PUSH
24563: LD_INT 2
24565: PUSH
24566: EMPTY
24567: LIST
24568: LIST
24569: PUSH
24570: LD_INT 1
24572: PUSH
24573: LD_INT 3
24575: PUSH
24576: EMPTY
24577: LIST
24578: LIST
24579: PUSH
24580: LD_INT 1
24582: PUSH
24583: LD_INT 4
24585: PUSH
24586: EMPTY
24587: LIST
24588: LIST
24589: PUSH
24590: LD_INT 0
24592: PUSH
24593: LD_INT 4
24595: PUSH
24596: EMPTY
24597: LIST
24598: LIST
24599: PUSH
24600: LD_INT 1
24602: NEG
24603: PUSH
24604: LD_INT 3
24606: PUSH
24607: EMPTY
24608: LIST
24609: LIST
24610: PUSH
24611: LD_INT 1
24613: NEG
24614: PUSH
24615: LD_INT 2
24617: PUSH
24618: EMPTY
24619: LIST
24620: LIST
24621: PUSH
24622: LD_INT 2
24624: PUSH
24625: LD_INT 4
24627: PUSH
24628: EMPTY
24629: LIST
24630: LIST
24631: PUSH
24632: LD_INT 2
24634: NEG
24635: PUSH
24636: LD_INT 2
24638: PUSH
24639: EMPTY
24640: LIST
24641: LIST
24642: PUSH
24643: LD_INT 4
24645: NEG
24646: PUSH
24647: LD_INT 0
24649: PUSH
24650: EMPTY
24651: LIST
24652: LIST
24653: PUSH
24654: LD_INT 4
24656: NEG
24657: PUSH
24658: LD_INT 1
24660: NEG
24661: PUSH
24662: EMPTY
24663: LIST
24664: LIST
24665: PUSH
24666: LD_INT 3
24668: NEG
24669: PUSH
24670: LD_INT 0
24672: PUSH
24673: EMPTY
24674: LIST
24675: LIST
24676: PUSH
24677: LD_INT 3
24679: NEG
24680: PUSH
24681: LD_INT 1
24683: PUSH
24684: EMPTY
24685: LIST
24686: LIST
24687: PUSH
24688: LD_INT 4
24690: NEG
24691: PUSH
24692: LD_INT 1
24694: PUSH
24695: EMPTY
24696: LIST
24697: LIST
24698: PUSH
24699: LD_INT 5
24701: NEG
24702: PUSH
24703: LD_INT 0
24705: PUSH
24706: EMPTY
24707: LIST
24708: LIST
24709: PUSH
24710: LD_INT 5
24712: NEG
24713: PUSH
24714: LD_INT 1
24716: NEG
24717: PUSH
24718: EMPTY
24719: LIST
24720: LIST
24721: PUSH
24722: LD_INT 5
24724: NEG
24725: PUSH
24726: LD_INT 2
24728: NEG
24729: PUSH
24730: EMPTY
24731: LIST
24732: LIST
24733: PUSH
24734: LD_INT 3
24736: NEG
24737: PUSH
24738: LD_INT 2
24740: PUSH
24741: EMPTY
24742: LIST
24743: LIST
24744: PUSH
24745: LD_INT 3
24747: NEG
24748: PUSH
24749: LD_INT 3
24751: NEG
24752: PUSH
24753: EMPTY
24754: LIST
24755: LIST
24756: PUSH
24757: LD_INT 3
24759: NEG
24760: PUSH
24761: LD_INT 4
24763: NEG
24764: PUSH
24765: EMPTY
24766: LIST
24767: LIST
24768: PUSH
24769: LD_INT 2
24771: NEG
24772: PUSH
24773: LD_INT 3
24775: NEG
24776: PUSH
24777: EMPTY
24778: LIST
24779: LIST
24780: PUSH
24781: LD_INT 2
24783: NEG
24784: PUSH
24785: LD_INT 2
24787: NEG
24788: PUSH
24789: EMPTY
24790: LIST
24791: LIST
24792: PUSH
24793: LD_INT 3
24795: NEG
24796: PUSH
24797: LD_INT 2
24799: NEG
24800: PUSH
24801: EMPTY
24802: LIST
24803: LIST
24804: PUSH
24805: LD_INT 4
24807: NEG
24808: PUSH
24809: LD_INT 3
24811: NEG
24812: PUSH
24813: EMPTY
24814: LIST
24815: LIST
24816: PUSH
24817: LD_INT 4
24819: NEG
24820: PUSH
24821: LD_INT 4
24823: NEG
24824: PUSH
24825: EMPTY
24826: LIST
24827: LIST
24828: PUSH
24829: LD_INT 2
24831: NEG
24832: PUSH
24833: LD_INT 4
24835: NEG
24836: PUSH
24837: EMPTY
24838: LIST
24839: LIST
24840: PUSH
24841: LD_INT 4
24843: NEG
24844: PUSH
24845: LD_INT 2
24847: NEG
24848: PUSH
24849: EMPTY
24850: LIST
24851: LIST
24852: PUSH
24853: LD_INT 0
24855: PUSH
24856: LD_INT 4
24858: NEG
24859: PUSH
24860: EMPTY
24861: LIST
24862: LIST
24863: PUSH
24864: LD_INT 0
24866: PUSH
24867: LD_INT 5
24869: NEG
24870: PUSH
24871: EMPTY
24872: LIST
24873: LIST
24874: PUSH
24875: LD_INT 1
24877: PUSH
24878: LD_INT 4
24880: NEG
24881: PUSH
24882: EMPTY
24883: LIST
24884: LIST
24885: PUSH
24886: LD_INT 1
24888: PUSH
24889: LD_INT 3
24891: NEG
24892: PUSH
24893: EMPTY
24894: LIST
24895: LIST
24896: PUSH
24897: LD_INT 0
24899: PUSH
24900: LD_INT 3
24902: NEG
24903: PUSH
24904: EMPTY
24905: LIST
24906: LIST
24907: PUSH
24908: LD_INT 1
24910: NEG
24911: PUSH
24912: LD_INT 4
24914: NEG
24915: PUSH
24916: EMPTY
24917: LIST
24918: LIST
24919: PUSH
24920: LD_INT 1
24922: NEG
24923: PUSH
24924: LD_INT 5
24926: NEG
24927: PUSH
24928: EMPTY
24929: LIST
24930: LIST
24931: PUSH
24932: LD_INT 2
24934: PUSH
24935: LD_INT 3
24937: NEG
24938: PUSH
24939: EMPTY
24940: LIST
24941: LIST
24942: PUSH
24943: LD_INT 2
24945: NEG
24946: PUSH
24947: LD_INT 5
24949: NEG
24950: PUSH
24951: EMPTY
24952: LIST
24953: LIST
24954: PUSH
24955: EMPTY
24956: LIST
24957: LIST
24958: LIST
24959: LIST
24960: LIST
24961: LIST
24962: LIST
24963: LIST
24964: LIST
24965: LIST
24966: LIST
24967: LIST
24968: LIST
24969: LIST
24970: LIST
24971: LIST
24972: LIST
24973: LIST
24974: LIST
24975: LIST
24976: LIST
24977: LIST
24978: LIST
24979: LIST
24980: LIST
24981: LIST
24982: LIST
24983: LIST
24984: LIST
24985: LIST
24986: LIST
24987: LIST
24988: LIST
24989: LIST
24990: LIST
24991: LIST
24992: LIST
24993: LIST
24994: LIST
24995: LIST
24996: LIST
24997: LIST
24998: LIST
24999: LIST
25000: LIST
25001: ST_TO_ADDR
// Factory2 = [ [ 0 , 4 ] , [ 0 , 3 ] , [ 1 , 4 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ - 1 , 3 ] , [ 2 , 5 ] , [ - 2 , 3 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 2 , 0 ] , [ - 2 , 1 ] , [ - 3 , 1 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 4 , - 2 ] , [ - 2 , 2 ] , [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 3 , - 4 ] , [ - 3 , - 3 ] , [ - 4 , - 3 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 3 , - 5 ] , [ - 5 , - 3 ] , [ 0 , - 3 ] , [ 0 , - 4 ] , [ 1 , - 3 ] , [ 1 , - 2 ] , [ 0 , - 2 ] , [ - 1 , - 3 ] , [ - 1 , - 4 ] , [ 2 , - 2 ] , [ - 2 , - 4 ] , [ 4 , 0 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 4 , 1 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 3 , - 2 ] , [ 5 , 2 ] ] ;
25002: LD_ADDR_VAR 0 31
25006: PUSH
25007: LD_INT 0
25009: PUSH
25010: LD_INT 4
25012: PUSH
25013: EMPTY
25014: LIST
25015: LIST
25016: PUSH
25017: LD_INT 0
25019: PUSH
25020: LD_INT 3
25022: PUSH
25023: EMPTY
25024: LIST
25025: LIST
25026: PUSH
25027: LD_INT 1
25029: PUSH
25030: LD_INT 4
25032: PUSH
25033: EMPTY
25034: LIST
25035: LIST
25036: PUSH
25037: LD_INT 1
25039: PUSH
25040: LD_INT 5
25042: PUSH
25043: EMPTY
25044: LIST
25045: LIST
25046: PUSH
25047: LD_INT 0
25049: PUSH
25050: LD_INT 5
25052: PUSH
25053: EMPTY
25054: LIST
25055: LIST
25056: PUSH
25057: LD_INT 1
25059: NEG
25060: PUSH
25061: LD_INT 4
25063: PUSH
25064: EMPTY
25065: LIST
25066: LIST
25067: PUSH
25068: LD_INT 1
25070: NEG
25071: PUSH
25072: LD_INT 3
25074: PUSH
25075: EMPTY
25076: LIST
25077: LIST
25078: PUSH
25079: LD_INT 2
25081: PUSH
25082: LD_INT 5
25084: PUSH
25085: EMPTY
25086: LIST
25087: LIST
25088: PUSH
25089: LD_INT 2
25091: NEG
25092: PUSH
25093: LD_INT 3
25095: PUSH
25096: EMPTY
25097: LIST
25098: LIST
25099: PUSH
25100: LD_INT 3
25102: NEG
25103: PUSH
25104: LD_INT 0
25106: PUSH
25107: EMPTY
25108: LIST
25109: LIST
25110: PUSH
25111: LD_INT 3
25113: NEG
25114: PUSH
25115: LD_INT 1
25117: NEG
25118: PUSH
25119: EMPTY
25120: LIST
25121: LIST
25122: PUSH
25123: LD_INT 2
25125: NEG
25126: PUSH
25127: LD_INT 0
25129: PUSH
25130: EMPTY
25131: LIST
25132: LIST
25133: PUSH
25134: LD_INT 2
25136: NEG
25137: PUSH
25138: LD_INT 1
25140: PUSH
25141: EMPTY
25142: LIST
25143: LIST
25144: PUSH
25145: LD_INT 3
25147: NEG
25148: PUSH
25149: LD_INT 1
25151: PUSH
25152: EMPTY
25153: LIST
25154: LIST
25155: PUSH
25156: LD_INT 4
25158: NEG
25159: PUSH
25160: LD_INT 0
25162: PUSH
25163: EMPTY
25164: LIST
25165: LIST
25166: PUSH
25167: LD_INT 4
25169: NEG
25170: PUSH
25171: LD_INT 1
25173: NEG
25174: PUSH
25175: EMPTY
25176: LIST
25177: LIST
25178: PUSH
25179: LD_INT 4
25181: NEG
25182: PUSH
25183: LD_INT 2
25185: NEG
25186: PUSH
25187: EMPTY
25188: LIST
25189: LIST
25190: PUSH
25191: LD_INT 2
25193: NEG
25194: PUSH
25195: LD_INT 2
25197: PUSH
25198: EMPTY
25199: LIST
25200: LIST
25201: PUSH
25202: LD_INT 4
25204: NEG
25205: PUSH
25206: LD_INT 4
25208: NEG
25209: PUSH
25210: EMPTY
25211: LIST
25212: LIST
25213: PUSH
25214: LD_INT 4
25216: NEG
25217: PUSH
25218: LD_INT 5
25220: NEG
25221: PUSH
25222: EMPTY
25223: LIST
25224: LIST
25225: PUSH
25226: LD_INT 3
25228: NEG
25229: PUSH
25230: LD_INT 4
25232: NEG
25233: PUSH
25234: EMPTY
25235: LIST
25236: LIST
25237: PUSH
25238: LD_INT 3
25240: NEG
25241: PUSH
25242: LD_INT 3
25244: NEG
25245: PUSH
25246: EMPTY
25247: LIST
25248: LIST
25249: PUSH
25250: LD_INT 4
25252: NEG
25253: PUSH
25254: LD_INT 3
25256: NEG
25257: PUSH
25258: EMPTY
25259: LIST
25260: LIST
25261: PUSH
25262: LD_INT 5
25264: NEG
25265: PUSH
25266: LD_INT 4
25268: NEG
25269: PUSH
25270: EMPTY
25271: LIST
25272: LIST
25273: PUSH
25274: LD_INT 5
25276: NEG
25277: PUSH
25278: LD_INT 5
25280: NEG
25281: PUSH
25282: EMPTY
25283: LIST
25284: LIST
25285: PUSH
25286: LD_INT 3
25288: NEG
25289: PUSH
25290: LD_INT 5
25292: NEG
25293: PUSH
25294: EMPTY
25295: LIST
25296: LIST
25297: PUSH
25298: LD_INT 5
25300: NEG
25301: PUSH
25302: LD_INT 3
25304: NEG
25305: PUSH
25306: EMPTY
25307: LIST
25308: LIST
25309: PUSH
25310: LD_INT 0
25312: PUSH
25313: LD_INT 3
25315: NEG
25316: PUSH
25317: EMPTY
25318: LIST
25319: LIST
25320: PUSH
25321: LD_INT 0
25323: PUSH
25324: LD_INT 4
25326: NEG
25327: PUSH
25328: EMPTY
25329: LIST
25330: LIST
25331: PUSH
25332: LD_INT 1
25334: PUSH
25335: LD_INT 3
25337: NEG
25338: PUSH
25339: EMPTY
25340: LIST
25341: LIST
25342: PUSH
25343: LD_INT 1
25345: PUSH
25346: LD_INT 2
25348: NEG
25349: PUSH
25350: EMPTY
25351: LIST
25352: LIST
25353: PUSH
25354: LD_INT 0
25356: PUSH
25357: LD_INT 2
25359: NEG
25360: PUSH
25361: EMPTY
25362: LIST
25363: LIST
25364: PUSH
25365: LD_INT 1
25367: NEG
25368: PUSH
25369: LD_INT 3
25371: NEG
25372: PUSH
25373: EMPTY
25374: LIST
25375: LIST
25376: PUSH
25377: LD_INT 1
25379: NEG
25380: PUSH
25381: LD_INT 4
25383: NEG
25384: PUSH
25385: EMPTY
25386: LIST
25387: LIST
25388: PUSH
25389: LD_INT 2
25391: PUSH
25392: LD_INT 2
25394: NEG
25395: PUSH
25396: EMPTY
25397: LIST
25398: LIST
25399: PUSH
25400: LD_INT 2
25402: NEG
25403: PUSH
25404: LD_INT 4
25406: NEG
25407: PUSH
25408: EMPTY
25409: LIST
25410: LIST
25411: PUSH
25412: LD_INT 4
25414: PUSH
25415: LD_INT 0
25417: PUSH
25418: EMPTY
25419: LIST
25420: LIST
25421: PUSH
25422: LD_INT 4
25424: PUSH
25425: LD_INT 1
25427: NEG
25428: PUSH
25429: EMPTY
25430: LIST
25431: LIST
25432: PUSH
25433: LD_INT 5
25435: PUSH
25436: LD_INT 0
25438: PUSH
25439: EMPTY
25440: LIST
25441: LIST
25442: PUSH
25443: LD_INT 5
25445: PUSH
25446: LD_INT 1
25448: PUSH
25449: EMPTY
25450: LIST
25451: LIST
25452: PUSH
25453: LD_INT 4
25455: PUSH
25456: LD_INT 1
25458: PUSH
25459: EMPTY
25460: LIST
25461: LIST
25462: PUSH
25463: LD_INT 3
25465: PUSH
25466: LD_INT 0
25468: PUSH
25469: EMPTY
25470: LIST
25471: LIST
25472: PUSH
25473: LD_INT 3
25475: PUSH
25476: LD_INT 1
25478: NEG
25479: PUSH
25480: EMPTY
25481: LIST
25482: LIST
25483: PUSH
25484: LD_INT 3
25486: PUSH
25487: LD_INT 2
25489: NEG
25490: PUSH
25491: EMPTY
25492: LIST
25493: LIST
25494: PUSH
25495: LD_INT 5
25497: PUSH
25498: LD_INT 2
25500: PUSH
25501: EMPTY
25502: LIST
25503: LIST
25504: PUSH
25505: EMPTY
25506: LIST
25507: LIST
25508: LIST
25509: LIST
25510: LIST
25511: LIST
25512: LIST
25513: LIST
25514: LIST
25515: LIST
25516: LIST
25517: LIST
25518: LIST
25519: LIST
25520: LIST
25521: LIST
25522: LIST
25523: LIST
25524: LIST
25525: LIST
25526: LIST
25527: LIST
25528: LIST
25529: LIST
25530: LIST
25531: LIST
25532: LIST
25533: LIST
25534: LIST
25535: LIST
25536: LIST
25537: LIST
25538: LIST
25539: LIST
25540: LIST
25541: LIST
25542: LIST
25543: LIST
25544: LIST
25545: LIST
25546: LIST
25547: LIST
25548: LIST
25549: LIST
25550: LIST
25551: ST_TO_ADDR
// Factory3 = [ [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , - 2 ] , [ - 3 , 2 ] , [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 2 , - 3 ] , [ - 2 , - 2 ] , [ - 3 , - 2 ] , [ - 4 , - 3 ] , [ - 4 , - 4 ] , [ - 2 , - 4 ] , [ - 4 , - 2 ] , [ 0 , - 4 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ 1 , - 3 ] , [ 0 , - 3 ] , [ - 1 , - 4 ] , [ - 1 , - 5 ] , [ 2 , - 3 ] , [ - 2 , - 5 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 4 , 0 ] , [ 4 , 1 ] , [ 3 , 1 ] , [ 2 , 0 ] , [ 2 , - 1 ] , [ 2 , - 2 ] , [ 4 , 2 ] , [ 4 , 4 ] , [ 4 , 3 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 3 , 4 ] , [ 3 , 3 ] , [ 5 , 3 ] , [ 3 , 5 ] ] ;
25552: LD_ADDR_VAR 0 32
25556: PUSH
25557: LD_INT 4
25559: NEG
25560: PUSH
25561: LD_INT 0
25563: PUSH
25564: EMPTY
25565: LIST
25566: LIST
25567: PUSH
25568: LD_INT 4
25570: NEG
25571: PUSH
25572: LD_INT 1
25574: NEG
25575: PUSH
25576: EMPTY
25577: LIST
25578: LIST
25579: PUSH
25580: LD_INT 3
25582: NEG
25583: PUSH
25584: LD_INT 0
25586: PUSH
25587: EMPTY
25588: LIST
25589: LIST
25590: PUSH
25591: LD_INT 3
25593: NEG
25594: PUSH
25595: LD_INT 1
25597: PUSH
25598: EMPTY
25599: LIST
25600: LIST
25601: PUSH
25602: LD_INT 4
25604: NEG
25605: PUSH
25606: LD_INT 1
25608: PUSH
25609: EMPTY
25610: LIST
25611: LIST
25612: PUSH
25613: LD_INT 5
25615: NEG
25616: PUSH
25617: LD_INT 0
25619: PUSH
25620: EMPTY
25621: LIST
25622: LIST
25623: PUSH
25624: LD_INT 5
25626: NEG
25627: PUSH
25628: LD_INT 1
25630: NEG
25631: PUSH
25632: EMPTY
25633: LIST
25634: LIST
25635: PUSH
25636: LD_INT 5
25638: NEG
25639: PUSH
25640: LD_INT 2
25642: NEG
25643: PUSH
25644: EMPTY
25645: LIST
25646: LIST
25647: PUSH
25648: LD_INT 3
25650: NEG
25651: PUSH
25652: LD_INT 2
25654: PUSH
25655: EMPTY
25656: LIST
25657: LIST
25658: PUSH
25659: LD_INT 3
25661: NEG
25662: PUSH
25663: LD_INT 3
25665: NEG
25666: PUSH
25667: EMPTY
25668: LIST
25669: LIST
25670: PUSH
25671: LD_INT 3
25673: NEG
25674: PUSH
25675: LD_INT 4
25677: NEG
25678: PUSH
25679: EMPTY
25680: LIST
25681: LIST
25682: PUSH
25683: LD_INT 2
25685: NEG
25686: PUSH
25687: LD_INT 3
25689: NEG
25690: PUSH
25691: EMPTY
25692: LIST
25693: LIST
25694: PUSH
25695: LD_INT 2
25697: NEG
25698: PUSH
25699: LD_INT 2
25701: NEG
25702: PUSH
25703: EMPTY
25704: LIST
25705: LIST
25706: PUSH
25707: LD_INT 3
25709: NEG
25710: PUSH
25711: LD_INT 2
25713: NEG
25714: PUSH
25715: EMPTY
25716: LIST
25717: LIST
25718: PUSH
25719: LD_INT 4
25721: NEG
25722: PUSH
25723: LD_INT 3
25725: NEG
25726: PUSH
25727: EMPTY
25728: LIST
25729: LIST
25730: PUSH
25731: LD_INT 4
25733: NEG
25734: PUSH
25735: LD_INT 4
25737: NEG
25738: PUSH
25739: EMPTY
25740: LIST
25741: LIST
25742: PUSH
25743: LD_INT 2
25745: NEG
25746: PUSH
25747: LD_INT 4
25749: NEG
25750: PUSH
25751: EMPTY
25752: LIST
25753: LIST
25754: PUSH
25755: LD_INT 4
25757: NEG
25758: PUSH
25759: LD_INT 2
25761: NEG
25762: PUSH
25763: EMPTY
25764: LIST
25765: LIST
25766: PUSH
25767: LD_INT 0
25769: PUSH
25770: LD_INT 4
25772: NEG
25773: PUSH
25774: EMPTY
25775: LIST
25776: LIST
25777: PUSH
25778: LD_INT 0
25780: PUSH
25781: LD_INT 5
25783: NEG
25784: PUSH
25785: EMPTY
25786: LIST
25787: LIST
25788: PUSH
25789: LD_INT 1
25791: PUSH
25792: LD_INT 4
25794: NEG
25795: PUSH
25796: EMPTY
25797: LIST
25798: LIST
25799: PUSH
25800: LD_INT 1
25802: PUSH
25803: LD_INT 3
25805: NEG
25806: PUSH
25807: EMPTY
25808: LIST
25809: LIST
25810: PUSH
25811: LD_INT 0
25813: PUSH
25814: LD_INT 3
25816: NEG
25817: PUSH
25818: EMPTY
25819: LIST
25820: LIST
25821: PUSH
25822: LD_INT 1
25824: NEG
25825: PUSH
25826: LD_INT 4
25828: NEG
25829: PUSH
25830: EMPTY
25831: LIST
25832: LIST
25833: PUSH
25834: LD_INT 1
25836: NEG
25837: PUSH
25838: LD_INT 5
25840: NEG
25841: PUSH
25842: EMPTY
25843: LIST
25844: LIST
25845: PUSH
25846: LD_INT 2
25848: PUSH
25849: LD_INT 3
25851: NEG
25852: PUSH
25853: EMPTY
25854: LIST
25855: LIST
25856: PUSH
25857: LD_INT 2
25859: NEG
25860: PUSH
25861: LD_INT 5
25863: NEG
25864: PUSH
25865: EMPTY
25866: LIST
25867: LIST
25868: PUSH
25869: LD_INT 3
25871: PUSH
25872: LD_INT 0
25874: PUSH
25875: EMPTY
25876: LIST
25877: LIST
25878: PUSH
25879: LD_INT 3
25881: PUSH
25882: LD_INT 1
25884: NEG
25885: PUSH
25886: EMPTY
25887: LIST
25888: LIST
25889: PUSH
25890: LD_INT 4
25892: PUSH
25893: LD_INT 0
25895: PUSH
25896: EMPTY
25897: LIST
25898: LIST
25899: PUSH
25900: LD_INT 4
25902: PUSH
25903: LD_INT 1
25905: PUSH
25906: EMPTY
25907: LIST
25908: LIST
25909: PUSH
25910: LD_INT 3
25912: PUSH
25913: LD_INT 1
25915: PUSH
25916: EMPTY
25917: LIST
25918: LIST
25919: PUSH
25920: LD_INT 2
25922: PUSH
25923: LD_INT 0
25925: PUSH
25926: EMPTY
25927: LIST
25928: LIST
25929: PUSH
25930: LD_INT 2
25932: PUSH
25933: LD_INT 1
25935: NEG
25936: PUSH
25937: EMPTY
25938: LIST
25939: LIST
25940: PUSH
25941: LD_INT 2
25943: PUSH
25944: LD_INT 2
25946: NEG
25947: PUSH
25948: EMPTY
25949: LIST
25950: LIST
25951: PUSH
25952: LD_INT 4
25954: PUSH
25955: LD_INT 2
25957: PUSH
25958: EMPTY
25959: LIST
25960: LIST
25961: PUSH
25962: LD_INT 4
25964: PUSH
25965: LD_INT 4
25967: PUSH
25968: EMPTY
25969: LIST
25970: LIST
25971: PUSH
25972: LD_INT 4
25974: PUSH
25975: LD_INT 3
25977: PUSH
25978: EMPTY
25979: LIST
25980: LIST
25981: PUSH
25982: LD_INT 5
25984: PUSH
25985: LD_INT 4
25987: PUSH
25988: EMPTY
25989: LIST
25990: LIST
25991: PUSH
25992: LD_INT 5
25994: PUSH
25995: LD_INT 5
25997: PUSH
25998: EMPTY
25999: LIST
26000: LIST
26001: PUSH
26002: LD_INT 4
26004: PUSH
26005: LD_INT 5
26007: PUSH
26008: EMPTY
26009: LIST
26010: LIST
26011: PUSH
26012: LD_INT 3
26014: PUSH
26015: LD_INT 4
26017: PUSH
26018: EMPTY
26019: LIST
26020: LIST
26021: PUSH
26022: LD_INT 3
26024: PUSH
26025: LD_INT 3
26027: PUSH
26028: EMPTY
26029: LIST
26030: LIST
26031: PUSH
26032: LD_INT 5
26034: PUSH
26035: LD_INT 3
26037: PUSH
26038: EMPTY
26039: LIST
26040: LIST
26041: PUSH
26042: LD_INT 3
26044: PUSH
26045: LD_INT 5
26047: PUSH
26048: EMPTY
26049: LIST
26050: LIST
26051: PUSH
26052: EMPTY
26053: LIST
26054: LIST
26055: LIST
26056: LIST
26057: LIST
26058: LIST
26059: LIST
26060: LIST
26061: LIST
26062: LIST
26063: LIST
26064: LIST
26065: LIST
26066: LIST
26067: LIST
26068: LIST
26069: LIST
26070: LIST
26071: LIST
26072: LIST
26073: LIST
26074: LIST
26075: LIST
26076: LIST
26077: LIST
26078: LIST
26079: LIST
26080: LIST
26081: LIST
26082: LIST
26083: LIST
26084: LIST
26085: LIST
26086: LIST
26087: LIST
26088: LIST
26089: LIST
26090: LIST
26091: LIST
26092: LIST
26093: LIST
26094: LIST
26095: LIST
26096: LIST
26097: LIST
26098: ST_TO_ADDR
// Factory4 = [ [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 3 , - 4 ] , [ - 3 , - 3 ] , [ - 4 , - 3 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 3 , - 5 ] , [ - 5 , - 3 ] , [ 0 , - 3 ] , [ 0 , - 4 ] , [ 1 , - 3 ] , [ 1 , - 2 ] , [ 0 , - 2 ] , [ - 1 , - 3 ] , [ - 1 , - 4 ] , [ 2 , - 2 ] , [ - 2 , - 4 ] , [ 4 , 0 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 4 , 1 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 3 , - 2 ] , [ 5 , 2 ] , [ 3 , 3 ] , [ 3 , 2 ] , [ 4 , 3 ] , [ 4 , 4 ] , [ 3 , 4 ] , [ 2 , 3 ] , [ 2 , 2 ] , [ 4 , 2 ] , [ 2 , 4 ] , [ 0 , 4 ] , [ 0 , 3 ] , [ 1 , 4 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ - 1 , 3 ] , [ 2 , 5 ] , [ - 2 , 3 ] ] ;
26099: LD_ADDR_VAR 0 33
26103: PUSH
26104: LD_INT 4
26106: NEG
26107: PUSH
26108: LD_INT 4
26110: NEG
26111: PUSH
26112: EMPTY
26113: LIST
26114: LIST
26115: PUSH
26116: LD_INT 4
26118: NEG
26119: PUSH
26120: LD_INT 5
26122: NEG
26123: PUSH
26124: EMPTY
26125: LIST
26126: LIST
26127: PUSH
26128: LD_INT 3
26130: NEG
26131: PUSH
26132: LD_INT 4
26134: NEG
26135: PUSH
26136: EMPTY
26137: LIST
26138: LIST
26139: PUSH
26140: LD_INT 3
26142: NEG
26143: PUSH
26144: LD_INT 3
26146: NEG
26147: PUSH
26148: EMPTY
26149: LIST
26150: LIST
26151: PUSH
26152: LD_INT 4
26154: NEG
26155: PUSH
26156: LD_INT 3
26158: NEG
26159: PUSH
26160: EMPTY
26161: LIST
26162: LIST
26163: PUSH
26164: LD_INT 5
26166: NEG
26167: PUSH
26168: LD_INT 4
26170: NEG
26171: PUSH
26172: EMPTY
26173: LIST
26174: LIST
26175: PUSH
26176: LD_INT 5
26178: NEG
26179: PUSH
26180: LD_INT 5
26182: NEG
26183: PUSH
26184: EMPTY
26185: LIST
26186: LIST
26187: PUSH
26188: LD_INT 3
26190: NEG
26191: PUSH
26192: LD_INT 5
26194: NEG
26195: PUSH
26196: EMPTY
26197: LIST
26198: LIST
26199: PUSH
26200: LD_INT 5
26202: NEG
26203: PUSH
26204: LD_INT 3
26206: NEG
26207: PUSH
26208: EMPTY
26209: LIST
26210: LIST
26211: PUSH
26212: LD_INT 0
26214: PUSH
26215: LD_INT 3
26217: NEG
26218: PUSH
26219: EMPTY
26220: LIST
26221: LIST
26222: PUSH
26223: LD_INT 0
26225: PUSH
26226: LD_INT 4
26228: NEG
26229: PUSH
26230: EMPTY
26231: LIST
26232: LIST
26233: PUSH
26234: LD_INT 1
26236: PUSH
26237: LD_INT 3
26239: NEG
26240: PUSH
26241: EMPTY
26242: LIST
26243: LIST
26244: PUSH
26245: LD_INT 1
26247: PUSH
26248: LD_INT 2
26250: NEG
26251: PUSH
26252: EMPTY
26253: LIST
26254: LIST
26255: PUSH
26256: LD_INT 0
26258: PUSH
26259: LD_INT 2
26261: NEG
26262: PUSH
26263: EMPTY
26264: LIST
26265: LIST
26266: PUSH
26267: LD_INT 1
26269: NEG
26270: PUSH
26271: LD_INT 3
26273: NEG
26274: PUSH
26275: EMPTY
26276: LIST
26277: LIST
26278: PUSH
26279: LD_INT 1
26281: NEG
26282: PUSH
26283: LD_INT 4
26285: NEG
26286: PUSH
26287: EMPTY
26288: LIST
26289: LIST
26290: PUSH
26291: LD_INT 2
26293: PUSH
26294: LD_INT 2
26296: NEG
26297: PUSH
26298: EMPTY
26299: LIST
26300: LIST
26301: PUSH
26302: LD_INT 2
26304: NEG
26305: PUSH
26306: LD_INT 4
26308: NEG
26309: PUSH
26310: EMPTY
26311: LIST
26312: LIST
26313: PUSH
26314: LD_INT 4
26316: PUSH
26317: LD_INT 0
26319: PUSH
26320: EMPTY
26321: LIST
26322: LIST
26323: PUSH
26324: LD_INT 4
26326: PUSH
26327: LD_INT 1
26329: NEG
26330: PUSH
26331: EMPTY
26332: LIST
26333: LIST
26334: PUSH
26335: LD_INT 5
26337: PUSH
26338: LD_INT 0
26340: PUSH
26341: EMPTY
26342: LIST
26343: LIST
26344: PUSH
26345: LD_INT 5
26347: PUSH
26348: LD_INT 1
26350: PUSH
26351: EMPTY
26352: LIST
26353: LIST
26354: PUSH
26355: LD_INT 4
26357: PUSH
26358: LD_INT 1
26360: PUSH
26361: EMPTY
26362: LIST
26363: LIST
26364: PUSH
26365: LD_INT 3
26367: PUSH
26368: LD_INT 0
26370: PUSH
26371: EMPTY
26372: LIST
26373: LIST
26374: PUSH
26375: LD_INT 3
26377: PUSH
26378: LD_INT 1
26380: NEG
26381: PUSH
26382: EMPTY
26383: LIST
26384: LIST
26385: PUSH
26386: LD_INT 3
26388: PUSH
26389: LD_INT 2
26391: NEG
26392: PUSH
26393: EMPTY
26394: LIST
26395: LIST
26396: PUSH
26397: LD_INT 5
26399: PUSH
26400: LD_INT 2
26402: PUSH
26403: EMPTY
26404: LIST
26405: LIST
26406: PUSH
26407: LD_INT 3
26409: PUSH
26410: LD_INT 3
26412: PUSH
26413: EMPTY
26414: LIST
26415: LIST
26416: PUSH
26417: LD_INT 3
26419: PUSH
26420: LD_INT 2
26422: PUSH
26423: EMPTY
26424: LIST
26425: LIST
26426: PUSH
26427: LD_INT 4
26429: PUSH
26430: LD_INT 3
26432: PUSH
26433: EMPTY
26434: LIST
26435: LIST
26436: PUSH
26437: LD_INT 4
26439: PUSH
26440: LD_INT 4
26442: PUSH
26443: EMPTY
26444: LIST
26445: LIST
26446: PUSH
26447: LD_INT 3
26449: PUSH
26450: LD_INT 4
26452: PUSH
26453: EMPTY
26454: LIST
26455: LIST
26456: PUSH
26457: LD_INT 2
26459: PUSH
26460: LD_INT 3
26462: PUSH
26463: EMPTY
26464: LIST
26465: LIST
26466: PUSH
26467: LD_INT 2
26469: PUSH
26470: LD_INT 2
26472: PUSH
26473: EMPTY
26474: LIST
26475: LIST
26476: PUSH
26477: LD_INT 4
26479: PUSH
26480: LD_INT 2
26482: PUSH
26483: EMPTY
26484: LIST
26485: LIST
26486: PUSH
26487: LD_INT 2
26489: PUSH
26490: LD_INT 4
26492: PUSH
26493: EMPTY
26494: LIST
26495: LIST
26496: PUSH
26497: LD_INT 0
26499: PUSH
26500: LD_INT 4
26502: PUSH
26503: EMPTY
26504: LIST
26505: LIST
26506: PUSH
26507: LD_INT 0
26509: PUSH
26510: LD_INT 3
26512: PUSH
26513: EMPTY
26514: LIST
26515: LIST
26516: PUSH
26517: LD_INT 1
26519: PUSH
26520: LD_INT 4
26522: PUSH
26523: EMPTY
26524: LIST
26525: LIST
26526: PUSH
26527: LD_INT 1
26529: PUSH
26530: LD_INT 5
26532: PUSH
26533: EMPTY
26534: LIST
26535: LIST
26536: PUSH
26537: LD_INT 0
26539: PUSH
26540: LD_INT 5
26542: PUSH
26543: EMPTY
26544: LIST
26545: LIST
26546: PUSH
26547: LD_INT 1
26549: NEG
26550: PUSH
26551: LD_INT 4
26553: PUSH
26554: EMPTY
26555: LIST
26556: LIST
26557: PUSH
26558: LD_INT 1
26560: NEG
26561: PUSH
26562: LD_INT 3
26564: PUSH
26565: EMPTY
26566: LIST
26567: LIST
26568: PUSH
26569: LD_INT 2
26571: PUSH
26572: LD_INT 5
26574: PUSH
26575: EMPTY
26576: LIST
26577: LIST
26578: PUSH
26579: LD_INT 2
26581: NEG
26582: PUSH
26583: LD_INT 3
26585: PUSH
26586: EMPTY
26587: LIST
26588: LIST
26589: PUSH
26590: EMPTY
26591: LIST
26592: LIST
26593: LIST
26594: LIST
26595: LIST
26596: LIST
26597: LIST
26598: LIST
26599: LIST
26600: LIST
26601: LIST
26602: LIST
26603: LIST
26604: LIST
26605: LIST
26606: LIST
26607: LIST
26608: LIST
26609: LIST
26610: LIST
26611: LIST
26612: LIST
26613: LIST
26614: LIST
26615: LIST
26616: LIST
26617: LIST
26618: LIST
26619: LIST
26620: LIST
26621: LIST
26622: LIST
26623: LIST
26624: LIST
26625: LIST
26626: LIST
26627: LIST
26628: LIST
26629: LIST
26630: LIST
26631: LIST
26632: LIST
26633: LIST
26634: LIST
26635: LIST
26636: ST_TO_ADDR
// Factory5 = [ [ 0 , - 4 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ 1 , - 3 ] , [ 0 , - 3 ] , [ - 1 , - 4 ] , [ - 1 , - 5 ] , [ 2 , - 3 ] , [ - 2 , - 5 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 4 , 0 ] , [ 4 , 1 ] , [ 3 , 1 ] , [ 2 , 0 ] , [ 2 , - 1 ] , [ 2 , - 2 ] , [ 4 , 2 ] , [ 4 , 4 ] , [ 4 , 3 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 3 , 4 ] , [ 3 , 3 ] , [ 5 , 3 ] , [ 3 , 5 ] , [ 0 , 3 ] , [ 0 , 2 ] , [ 1 , 3 ] , [ 1 , 4 ] , [ 0 , 4 ] , [ - 1 , 3 ] , [ - 1 , 2 ] , [ 2 , 4 ] , [ - 2 , 2 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , - 2 ] , [ - 3 , 2 ] ] ;
26637: LD_ADDR_VAR 0 34
26641: PUSH
26642: LD_INT 0
26644: PUSH
26645: LD_INT 4
26647: NEG
26648: PUSH
26649: EMPTY
26650: LIST
26651: LIST
26652: PUSH
26653: LD_INT 0
26655: PUSH
26656: LD_INT 5
26658: NEG
26659: PUSH
26660: EMPTY
26661: LIST
26662: LIST
26663: PUSH
26664: LD_INT 1
26666: PUSH
26667: LD_INT 4
26669: NEG
26670: PUSH
26671: EMPTY
26672: LIST
26673: LIST
26674: PUSH
26675: LD_INT 1
26677: PUSH
26678: LD_INT 3
26680: NEG
26681: PUSH
26682: EMPTY
26683: LIST
26684: LIST
26685: PUSH
26686: LD_INT 0
26688: PUSH
26689: LD_INT 3
26691: NEG
26692: PUSH
26693: EMPTY
26694: LIST
26695: LIST
26696: PUSH
26697: LD_INT 1
26699: NEG
26700: PUSH
26701: LD_INT 4
26703: NEG
26704: PUSH
26705: EMPTY
26706: LIST
26707: LIST
26708: PUSH
26709: LD_INT 1
26711: NEG
26712: PUSH
26713: LD_INT 5
26715: NEG
26716: PUSH
26717: EMPTY
26718: LIST
26719: LIST
26720: PUSH
26721: LD_INT 2
26723: PUSH
26724: LD_INT 3
26726: NEG
26727: PUSH
26728: EMPTY
26729: LIST
26730: LIST
26731: PUSH
26732: LD_INT 2
26734: NEG
26735: PUSH
26736: LD_INT 5
26738: NEG
26739: PUSH
26740: EMPTY
26741: LIST
26742: LIST
26743: PUSH
26744: LD_INT 3
26746: PUSH
26747: LD_INT 0
26749: PUSH
26750: EMPTY
26751: LIST
26752: LIST
26753: PUSH
26754: LD_INT 3
26756: PUSH
26757: LD_INT 1
26759: NEG
26760: PUSH
26761: EMPTY
26762: LIST
26763: LIST
26764: PUSH
26765: LD_INT 4
26767: PUSH
26768: LD_INT 0
26770: PUSH
26771: EMPTY
26772: LIST
26773: LIST
26774: PUSH
26775: LD_INT 4
26777: PUSH
26778: LD_INT 1
26780: PUSH
26781: EMPTY
26782: LIST
26783: LIST
26784: PUSH
26785: LD_INT 3
26787: PUSH
26788: LD_INT 1
26790: PUSH
26791: EMPTY
26792: LIST
26793: LIST
26794: PUSH
26795: LD_INT 2
26797: PUSH
26798: LD_INT 0
26800: PUSH
26801: EMPTY
26802: LIST
26803: LIST
26804: PUSH
26805: LD_INT 2
26807: PUSH
26808: LD_INT 1
26810: NEG
26811: PUSH
26812: EMPTY
26813: LIST
26814: LIST
26815: PUSH
26816: LD_INT 2
26818: PUSH
26819: LD_INT 2
26821: NEG
26822: PUSH
26823: EMPTY
26824: LIST
26825: LIST
26826: PUSH
26827: LD_INT 4
26829: PUSH
26830: LD_INT 2
26832: PUSH
26833: EMPTY
26834: LIST
26835: LIST
26836: PUSH
26837: LD_INT 4
26839: PUSH
26840: LD_INT 4
26842: PUSH
26843: EMPTY
26844: LIST
26845: LIST
26846: PUSH
26847: LD_INT 4
26849: PUSH
26850: LD_INT 3
26852: PUSH
26853: EMPTY
26854: LIST
26855: LIST
26856: PUSH
26857: LD_INT 5
26859: PUSH
26860: LD_INT 4
26862: PUSH
26863: EMPTY
26864: LIST
26865: LIST
26866: PUSH
26867: LD_INT 5
26869: PUSH
26870: LD_INT 5
26872: PUSH
26873: EMPTY
26874: LIST
26875: LIST
26876: PUSH
26877: LD_INT 4
26879: PUSH
26880: LD_INT 5
26882: PUSH
26883: EMPTY
26884: LIST
26885: LIST
26886: PUSH
26887: LD_INT 3
26889: PUSH
26890: LD_INT 4
26892: PUSH
26893: EMPTY
26894: LIST
26895: LIST
26896: PUSH
26897: LD_INT 3
26899: PUSH
26900: LD_INT 3
26902: PUSH
26903: EMPTY
26904: LIST
26905: LIST
26906: PUSH
26907: LD_INT 5
26909: PUSH
26910: LD_INT 3
26912: PUSH
26913: EMPTY
26914: LIST
26915: LIST
26916: PUSH
26917: LD_INT 3
26919: PUSH
26920: LD_INT 5
26922: PUSH
26923: EMPTY
26924: LIST
26925: LIST
26926: PUSH
26927: LD_INT 0
26929: PUSH
26930: LD_INT 3
26932: PUSH
26933: EMPTY
26934: LIST
26935: LIST
26936: PUSH
26937: LD_INT 0
26939: PUSH
26940: LD_INT 2
26942: PUSH
26943: EMPTY
26944: LIST
26945: LIST
26946: PUSH
26947: LD_INT 1
26949: PUSH
26950: LD_INT 3
26952: PUSH
26953: EMPTY
26954: LIST
26955: LIST
26956: PUSH
26957: LD_INT 1
26959: PUSH
26960: LD_INT 4
26962: PUSH
26963: EMPTY
26964: LIST
26965: LIST
26966: PUSH
26967: LD_INT 0
26969: PUSH
26970: LD_INT 4
26972: PUSH
26973: EMPTY
26974: LIST
26975: LIST
26976: PUSH
26977: LD_INT 1
26979: NEG
26980: PUSH
26981: LD_INT 3
26983: PUSH
26984: EMPTY
26985: LIST
26986: LIST
26987: PUSH
26988: LD_INT 1
26990: NEG
26991: PUSH
26992: LD_INT 2
26994: PUSH
26995: EMPTY
26996: LIST
26997: LIST
26998: PUSH
26999: LD_INT 2
27001: PUSH
27002: LD_INT 4
27004: PUSH
27005: EMPTY
27006: LIST
27007: LIST
27008: PUSH
27009: LD_INT 2
27011: NEG
27012: PUSH
27013: LD_INT 2
27015: PUSH
27016: EMPTY
27017: LIST
27018: LIST
27019: PUSH
27020: LD_INT 4
27022: NEG
27023: PUSH
27024: LD_INT 0
27026: PUSH
27027: EMPTY
27028: LIST
27029: LIST
27030: PUSH
27031: LD_INT 4
27033: NEG
27034: PUSH
27035: LD_INT 1
27037: NEG
27038: PUSH
27039: EMPTY
27040: LIST
27041: LIST
27042: PUSH
27043: LD_INT 3
27045: NEG
27046: PUSH
27047: LD_INT 0
27049: PUSH
27050: EMPTY
27051: LIST
27052: LIST
27053: PUSH
27054: LD_INT 3
27056: NEG
27057: PUSH
27058: LD_INT 1
27060: PUSH
27061: EMPTY
27062: LIST
27063: LIST
27064: PUSH
27065: LD_INT 4
27067: NEG
27068: PUSH
27069: LD_INT 1
27071: PUSH
27072: EMPTY
27073: LIST
27074: LIST
27075: PUSH
27076: LD_INT 5
27078: NEG
27079: PUSH
27080: LD_INT 0
27082: PUSH
27083: EMPTY
27084: LIST
27085: LIST
27086: PUSH
27087: LD_INT 5
27089: NEG
27090: PUSH
27091: LD_INT 1
27093: NEG
27094: PUSH
27095: EMPTY
27096: LIST
27097: LIST
27098: PUSH
27099: LD_INT 5
27101: NEG
27102: PUSH
27103: LD_INT 2
27105: NEG
27106: PUSH
27107: EMPTY
27108: LIST
27109: LIST
27110: PUSH
27111: LD_INT 3
27113: NEG
27114: PUSH
27115: LD_INT 2
27117: PUSH
27118: EMPTY
27119: LIST
27120: LIST
27121: PUSH
27122: EMPTY
27123: LIST
27124: LIST
27125: LIST
27126: LIST
27127: LIST
27128: LIST
27129: LIST
27130: LIST
27131: LIST
27132: LIST
27133: LIST
27134: LIST
27135: LIST
27136: LIST
27137: LIST
27138: LIST
27139: LIST
27140: LIST
27141: LIST
27142: LIST
27143: LIST
27144: LIST
27145: LIST
27146: LIST
27147: LIST
27148: LIST
27149: LIST
27150: LIST
27151: LIST
27152: LIST
27153: LIST
27154: LIST
27155: LIST
27156: LIST
27157: LIST
27158: LIST
27159: LIST
27160: LIST
27161: LIST
27162: LIST
27163: LIST
27164: LIST
27165: LIST
27166: LIST
27167: LIST
27168: ST_TO_ADDR
// end ; end ;
27169: GO 27172
27171: POP
// case btype of b_depot , b_warehouse :
27172: LD_VAR 0 1
27176: PUSH
27177: LD_INT 0
27179: DOUBLE
27180: EQUAL
27181: IFTRUE 27191
27183: LD_INT 1
27185: DOUBLE
27186: EQUAL
27187: IFTRUE 27191
27189: GO 27392
27191: POP
// case nation of nation_american :
27192: LD_VAR 0 5
27196: PUSH
27197: LD_INT 1
27199: DOUBLE
27200: EQUAL
27201: IFTRUE 27205
27203: GO 27261
27205: POP
// temp_list = [ DepotAm0 , DepotAm1 , DepotAm2 , DepotAm3 , DepotAm4 , DepotAm5 ] [ dir + 1 ] ; nation_arabian :
27206: LD_ADDR_VAR 0 9
27210: PUSH
27211: LD_VAR 0 11
27215: PUSH
27216: LD_VAR 0 12
27220: PUSH
27221: LD_VAR 0 13
27225: PUSH
27226: LD_VAR 0 14
27230: PUSH
27231: LD_VAR 0 15
27235: PUSH
27236: LD_VAR 0 16
27240: PUSH
27241: EMPTY
27242: LIST
27243: LIST
27244: LIST
27245: LIST
27246: LIST
27247: LIST
27248: PUSH
27249: LD_VAR 0 4
27253: PUSH
27254: LD_INT 1
27256: PLUS
27257: ARRAY
27258: ST_TO_ADDR
27259: GO 27390
27261: LD_INT 2
27263: DOUBLE
27264: EQUAL
27265: IFTRUE 27269
27267: GO 27325
27269: POP
// temp_list = [ DepotAr0 , DepotAr1 , DepotAr2 , DepotAr3 , DepotAr4 , DepotAr5 ] [ dir + 1 ] ; nation_russian :
27270: LD_ADDR_VAR 0 9
27274: PUSH
27275: LD_VAR 0 17
27279: PUSH
27280: LD_VAR 0 18
27284: PUSH
27285: LD_VAR 0 19
27289: PUSH
27290: LD_VAR 0 20
27294: PUSH
27295: LD_VAR 0 21
27299: PUSH
27300: LD_VAR 0 22
27304: PUSH
27305: EMPTY
27306: LIST
27307: LIST
27308: LIST
27309: LIST
27310: LIST
27311: LIST
27312: PUSH
27313: LD_VAR 0 4
27317: PUSH
27318: LD_INT 1
27320: PLUS
27321: ARRAY
27322: ST_TO_ADDR
27323: GO 27390
27325: LD_INT 3
27327: DOUBLE
27328: EQUAL
27329: IFTRUE 27333
27331: GO 27389
27333: POP
// temp_list = [ DepotRu0 , DepotRu1 , DepotRu2 , DepotRu3 , DepotRu4 , DepotRu5 ] [ dir + 1 ] ; end ; b_workshop , b_factory :
27334: LD_ADDR_VAR 0 9
27338: PUSH
27339: LD_VAR 0 23
27343: PUSH
27344: LD_VAR 0 24
27348: PUSH
27349: LD_VAR 0 25
27353: PUSH
27354: LD_VAR 0 26
27358: PUSH
27359: LD_VAR 0 27
27363: PUSH
27364: LD_VAR 0 28
27368: PUSH
27369: EMPTY
27370: LIST
27371: LIST
27372: LIST
27373: LIST
27374: LIST
27375: LIST
27376: PUSH
27377: LD_VAR 0 4
27381: PUSH
27382: LD_INT 1
27384: PLUS
27385: ARRAY
27386: ST_TO_ADDR
27387: GO 27390
27389: POP
27390: GO 27939
27392: LD_INT 2
27394: DOUBLE
27395: EQUAL
27396: IFTRUE 27406
27398: LD_INT 3
27400: DOUBLE
27401: EQUAL
27402: IFTRUE 27406
27404: GO 27462
27406: POP
// temp_list = [ Factory0 , Factory1 , Factory2 , Factory3 , Factory4 , Factory5 ] [ dir + 1 ] ; b_ext_track , b_ext_gun , b_ext_rocket , b_ext_noncombat , b_ext_radar , b_ext_siberium , b_ext_stitch , b_ext_computer , b_ext_laser :
27407: LD_ADDR_VAR 0 9
27411: PUSH
27412: LD_VAR 0 29
27416: PUSH
27417: LD_VAR 0 30
27421: PUSH
27422: LD_VAR 0 31
27426: PUSH
27427: LD_VAR 0 32
27431: PUSH
27432: LD_VAR 0 33
27436: PUSH
27437: LD_VAR 0 34
27441: PUSH
27442: EMPTY
27443: LIST
27444: LIST
27445: LIST
27446: LIST
27447: LIST
27448: LIST
27449: PUSH
27450: LD_VAR 0 4
27454: PUSH
27455: LD_INT 1
27457: PLUS
27458: ARRAY
27459: ST_TO_ADDR
27460: GO 27939
27462: LD_INT 16
27464: DOUBLE
27465: EQUAL
27466: IFTRUE 27518
27468: LD_INT 17
27470: DOUBLE
27471: EQUAL
27472: IFTRUE 27518
27474: LD_INT 18
27476: DOUBLE
27477: EQUAL
27478: IFTRUE 27518
27480: LD_INT 19
27482: DOUBLE
27483: EQUAL
27484: IFTRUE 27518
27486: LD_INT 20
27488: DOUBLE
27489: EQUAL
27490: IFTRUE 27518
27492: LD_INT 21
27494: DOUBLE
27495: EQUAL
27496: IFTRUE 27518
27498: LD_INT 23
27500: DOUBLE
27501: EQUAL
27502: IFTRUE 27518
27504: LD_INT 24
27506: DOUBLE
27507: EQUAL
27508: IFTRUE 27518
27510: LD_INT 25
27512: DOUBLE
27513: EQUAL
27514: IFTRUE 27518
27516: GO 27574
27518: POP
// temp_list = [ Ext0 , Ext1 , Ext2 , Ext3 , Ext4 , Ext5 ] [ dir + 1 ] ; b_lab , b_lab_half , b_lab_full , b_lab_biological , b_lab_computer , b_lab_opto , b_lab_siberium , b_lab_spacetime , b_lab_weapon :
27519: LD_ADDR_VAR 0 9
27523: PUSH
27524: LD_VAR 0 35
27528: PUSH
27529: LD_VAR 0 36
27533: PUSH
27534: LD_VAR 0 37
27538: PUSH
27539: LD_VAR 0 38
27543: PUSH
27544: LD_VAR 0 39
27548: PUSH
27549: LD_VAR 0 40
27553: PUSH
27554: EMPTY
27555: LIST
27556: LIST
27557: LIST
27558: LIST
27559: LIST
27560: LIST
27561: PUSH
27562: LD_VAR 0 4
27566: PUSH
27567: LD_INT 1
27569: PLUS
27570: ARRAY
27571: ST_TO_ADDR
27572: GO 27939
27574: LD_INT 6
27576: DOUBLE
27577: EQUAL
27578: IFTRUE 27630
27580: LD_INT 7
27582: DOUBLE
27583: EQUAL
27584: IFTRUE 27630
27586: LD_INT 8
27588: DOUBLE
27589: EQUAL
27590: IFTRUE 27630
27592: LD_INT 13
27594: DOUBLE
27595: EQUAL
27596: IFTRUE 27630
27598: LD_INT 12
27600: DOUBLE
27601: EQUAL
27602: IFTRUE 27630
27604: LD_INT 15
27606: DOUBLE
27607: EQUAL
27608: IFTRUE 27630
27610: LD_INT 11
27612: DOUBLE
27613: EQUAL
27614: IFTRUE 27630
27616: LD_INT 14
27618: DOUBLE
27619: EQUAL
27620: IFTRUE 27630
27622: LD_INT 10
27624: DOUBLE
27625: EQUAL
27626: IFTRUE 27630
27628: GO 27686
27630: POP
// temp_list = [ Lab0 , Lab1 , Lab2 , Lab3 , Lab4 , Lab5 ] [ dir + 1 ] ; b_control_tower :
27631: LD_ADDR_VAR 0 9
27635: PUSH
27636: LD_VAR 0 41
27640: PUSH
27641: LD_VAR 0 42
27645: PUSH
27646: LD_VAR 0 43
27650: PUSH
27651: LD_VAR 0 44
27655: PUSH
27656: LD_VAR 0 45
27660: PUSH
27661: LD_VAR 0 46
27665: PUSH
27666: EMPTY
27667: LIST
27668: LIST
27669: LIST
27670: LIST
27671: LIST
27672: LIST
27673: PUSH
27674: LD_VAR 0 4
27678: PUSH
27679: LD_INT 1
27681: PLUS
27682: ARRAY
27683: ST_TO_ADDR
27684: GO 27939
27686: LD_INT 36
27688: DOUBLE
27689: EQUAL
27690: IFTRUE 27694
27692: GO 27750
27694: POP
// temp_list = [ ControlTower0 , ControlTower1 , ControlTower2 , ControlTower3 , ControlTower4 , ControlTower5 ] [ dir + 1 ] ; b_armoury , b_barracks , b_teleport , b_behemoth :
27695: LD_ADDR_VAR 0 9
27699: PUSH
27700: LD_VAR 0 47
27704: PUSH
27705: LD_VAR 0 48
27709: PUSH
27710: LD_VAR 0 49
27714: PUSH
27715: LD_VAR 0 50
27719: PUSH
27720: LD_VAR 0 51
27724: PUSH
27725: LD_VAR 0 52
27729: PUSH
27730: EMPTY
27731: LIST
27732: LIST
27733: LIST
27734: LIST
27735: LIST
27736: LIST
27737: PUSH
27738: LD_VAR 0 4
27742: PUSH
27743: LD_INT 1
27745: PLUS
27746: ARRAY
27747: ST_TO_ADDR
27748: GO 27939
27750: LD_INT 4
27752: DOUBLE
27753: EQUAL
27754: IFTRUE 27776
27756: LD_INT 5
27758: DOUBLE
27759: EQUAL
27760: IFTRUE 27776
27762: LD_INT 34
27764: DOUBLE
27765: EQUAL
27766: IFTRUE 27776
27768: LD_INT 37
27770: DOUBLE
27771: EQUAL
27772: IFTRUE 27776
27774: GO 27832
27776: POP
// temp_list = [ Barracks0 , Barracks1 , Barracks2 , Barracks3 , Barracks4 , Barracks5 ] [ dir + 1 ] ; b_breastwork , b_bunker , b_turret , b_solar_power , b_oil_power , b_siberite_power , b_oil_mine , b_siberite_mine :
27777: LD_ADDR_VAR 0 9
27781: PUSH
27782: LD_VAR 0 53
27786: PUSH
27787: LD_VAR 0 54
27791: PUSH
27792: LD_VAR 0 55
27796: PUSH
27797: LD_VAR 0 56
27801: PUSH
27802: LD_VAR 0 57
27806: PUSH
27807: LD_VAR 0 58
27811: PUSH
27812: EMPTY
27813: LIST
27814: LIST
27815: LIST
27816: LIST
27817: LIST
27818: LIST
27819: PUSH
27820: LD_VAR 0 4
27824: PUSH
27825: LD_INT 1
27827: PLUS
27828: ARRAY
27829: ST_TO_ADDR
27830: GO 27939
27832: LD_INT 31
27834: DOUBLE
27835: EQUAL
27836: IFTRUE 27882
27838: LD_INT 32
27840: DOUBLE
27841: EQUAL
27842: IFTRUE 27882
27844: LD_INT 33
27846: DOUBLE
27847: EQUAL
27848: IFTRUE 27882
27850: LD_INT 27
27852: DOUBLE
27853: EQUAL
27854: IFTRUE 27882
27856: LD_INT 26
27858: DOUBLE
27859: EQUAL
27860: IFTRUE 27882
27862: LD_INT 28
27864: DOUBLE
27865: EQUAL
27866: IFTRUE 27882
27868: LD_INT 29
27870: DOUBLE
27871: EQUAL
27872: IFTRUE 27882
27874: LD_INT 30
27876: DOUBLE
27877: EQUAL
27878: IFTRUE 27882
27880: GO 27938
27882: POP
// temp_list = [ Bunker0 , Bunker1 , Bunker2 , Bunker3 , Bunker4 , Bunker5 ] [ dir + 1 ] ; end ;
27883: LD_ADDR_VAR 0 9
27887: PUSH
27888: LD_VAR 0 59
27892: PUSH
27893: LD_VAR 0 60
27897: PUSH
27898: LD_VAR 0 61
27902: PUSH
27903: LD_VAR 0 62
27907: PUSH
27908: LD_VAR 0 63
27912: PUSH
27913: LD_VAR 0 64
27917: PUSH
27918: EMPTY
27919: LIST
27920: LIST
27921: LIST
27922: LIST
27923: LIST
27924: LIST
27925: PUSH
27926: LD_VAR 0 4
27930: PUSH
27931: LD_INT 1
27933: PLUS
27934: ARRAY
27935: ST_TO_ADDR
27936: GO 27939
27938: POP
// temp_list2 = [ ] ;
27939: LD_ADDR_VAR 0 10
27943: PUSH
27944: EMPTY
27945: ST_TO_ADDR
// for i in temp_list do
27946: LD_ADDR_VAR 0 8
27950: PUSH
27951: LD_VAR 0 9
27955: PUSH
27956: FOR_IN
27957: IFFALSE 28009
// temp_list2 = temp_list2 ^ [ [ i [ 1 ] + x , i [ 2 ] + y ] ] ;
27959: LD_ADDR_VAR 0 10
27963: PUSH
27964: LD_VAR 0 10
27968: PUSH
27969: LD_VAR 0 8
27973: PUSH
27974: LD_INT 1
27976: ARRAY
27977: PUSH
27978: LD_VAR 0 2
27982: PLUS
27983: PUSH
27984: LD_VAR 0 8
27988: PUSH
27989: LD_INT 2
27991: ARRAY
27992: PUSH
27993: LD_VAR 0 3
27997: PLUS
27998: PUSH
27999: EMPTY
28000: LIST
28001: LIST
28002: PUSH
28003: EMPTY
28004: LIST
28005: ADD
28006: ST_TO_ADDR
28007: GO 27956
28009: POP
28010: POP
// result = temp_list2 ;
28011: LD_ADDR_VAR 0 7
28015: PUSH
28016: LD_VAR 0 10
28020: ST_TO_ADDR
// end ;
28021: LD_VAR 0 7
28025: RET
// export function IsNearbyEntrance ( unit , building , distance ) ; var i , entrance ; begin
28026: LD_INT 0
28028: PPUSH
28029: PPUSH
28030: PPUSH
// result := false ;
28031: LD_ADDR_VAR 0 4
28035: PUSH
28036: LD_INT 0
28038: ST_TO_ADDR
// if not unit or not building or IsInUnit ( unit ) then
28039: LD_VAR 0 1
28043: NOT
28044: PUSH
28045: LD_VAR 0 2
28049: NOT
28050: OR
28051: PUSH
28052: LD_VAR 0 1
28056: PPUSH
28057: CALL_OW 310
28061: OR
28062: IFFALSE 28066
// exit ;
28064: GO 28270
// if distance < 0 then
28066: LD_VAR 0 3
28070: PUSH
28071: LD_INT 0
28073: LESS
28074: IFFALSE 28084
// distance := 0 ;
28076: LD_ADDR_VAR 0 3
28080: PUSH
28081: LD_INT 0
28083: ST_TO_ADDR
// entrance := GetBuildingHexes ( GetBType ( building ) , GetX ( building ) , GetY ( building ) , GetDir ( building ) , GetNation ( building ) , 1 ) ;
28084: LD_ADDR_VAR 0 6
28088: PUSH
28089: LD_VAR 0 2
28093: PPUSH
28094: CALL_OW 266
28098: PPUSH
28099: LD_VAR 0 2
28103: PPUSH
28104: CALL_OW 250
28108: PPUSH
28109: LD_VAR 0 2
28113: PPUSH
28114: CALL_OW 251
28118: PPUSH
28119: LD_VAR 0 2
28123: PPUSH
28124: CALL_OW 254
28128: PPUSH
28129: LD_VAR 0 2
28133: PPUSH
28134: CALL_OW 248
28138: PPUSH
28139: LD_INT 1
28141: PPUSH
28142: CALL 9487 0 6
28146: ST_TO_ADDR
// if not entrance then
28147: LD_VAR 0 6
28151: NOT
28152: IFFALSE 28156
// exit ;
28154: GO 28270
// for i in entrance do
28156: LD_ADDR_VAR 0 5
28160: PUSH
28161: LD_VAR 0 6
28165: PUSH
28166: FOR_IN
28167: IFFALSE 28268
// begin if not distance then
28169: LD_VAR 0 3
28173: NOT
28174: IFFALSE 28219
// begin if IsAt ( unit , i [ 1 ] , i [ 2 ] ) then
28176: LD_VAR 0 1
28180: PPUSH
28181: LD_VAR 0 5
28185: PUSH
28186: LD_INT 1
28188: ARRAY
28189: PPUSH
28190: LD_VAR 0 5
28194: PUSH
28195: LD_INT 2
28197: ARRAY
28198: PPUSH
28199: CALL_OW 307
28203: IFFALSE 28217
// begin result := true ;
28205: LD_ADDR_VAR 0 4
28209: PUSH
28210: LD_INT 1
28212: ST_TO_ADDR
// exit ;
28213: POP
28214: POP
28215: GO 28270
// end ; end else
28217: GO 28266
// begin if GetDistUnitXY ( unit , i [ 1 ] , i [ 2 ] ) <= distance then
28219: LD_VAR 0 1
28223: PPUSH
28224: LD_VAR 0 5
28228: PUSH
28229: LD_INT 1
28231: ARRAY
28232: PPUSH
28233: LD_VAR 0 5
28237: PUSH
28238: LD_INT 2
28240: ARRAY
28241: PPUSH
28242: CALL_OW 297
28246: PUSH
28247: LD_VAR 0 3
28251: LESSEQUAL
28252: IFFALSE 28266
// begin result := true ;
28254: LD_ADDR_VAR 0 4
28258: PUSH
28259: LD_INT 1
28261: ST_TO_ADDR
// exit ;
28262: POP
28263: POP
28264: GO 28270
// end ; end ; end ;
28266: GO 28166
28268: POP
28269: POP
// end ;
28270: LD_VAR 0 4
28274: RET
// export function CanSpot ( unit , unit2 ) ; var i , building ; begin
28275: LD_INT 0
28277: PPUSH
28278: PPUSH
28279: PPUSH
// result := false ;
28280: LD_ADDR_VAR 0 3
28284: PUSH
28285: LD_INT 0
28287: ST_TO_ADDR
// if not unit or not unit2 or not IsOk ( unit ) or not IsOk ( unit2 ) then
28288: LD_VAR 0 1
28292: NOT
28293: PUSH
28294: LD_VAR 0 2
28298: NOT
28299: OR
28300: PUSH
28301: LD_VAR 0 1
28305: PPUSH
28306: CALL_OW 302
28310: NOT
28311: OR
28312: PUSH
28313: LD_VAR 0 2
28317: PPUSH
28318: CALL_OW 302
28322: NOT
28323: OR
28324: IFFALSE 28328
// exit ;
28326: GO 28489
// if GetDistUnits ( unit , NearestUnitToUnit ( FilterAllUnits ( [ [ f_enemy , GetSide ( unit ) ] , [ f_not , [ f_type , unit_building ] ] ] ) , unit ) ) < 8 then
28328: LD_VAR 0 1
28332: PPUSH
28333: LD_INT 81
28335: PUSH
28336: LD_VAR 0 1
28340: PPUSH
28341: CALL_OW 255
28345: PUSH
28346: EMPTY
28347: LIST
28348: LIST
28349: PUSH
28350: LD_INT 3
28352: PUSH
28353: LD_INT 21
28355: PUSH
28356: LD_INT 3
28358: PUSH
28359: EMPTY
28360: LIST
28361: LIST
28362: PUSH
28363: EMPTY
28364: LIST
28365: LIST
28366: PUSH
28367: EMPTY
28368: LIST
28369: LIST
28370: PPUSH
28371: CALL_OW 69
28375: PPUSH
28376: LD_VAR 0 1
28380: PPUSH
28381: CALL_OW 74
28385: PPUSH
28386: CALL_OW 296
28390: PUSH
28391: LD_INT 8
28393: LESS
28394: IFFALSE 28398
// exit ;
28396: GO 28489
// building := IsInUnit ( unit2 ) ;
28398: LD_ADDR_VAR 0 5
28402: PUSH
28403: LD_VAR 0 2
28407: PPUSH
28408: CALL_OW 310
28412: ST_TO_ADDR
// if building then
28413: LD_VAR 0 5
28417: IFFALSE 28444
// result := IsNearbyEntrance ( unit , building , 2 ) else
28419: LD_ADDR_VAR 0 3
28423: PUSH
28424: LD_VAR 0 1
28428: PPUSH
28429: LD_VAR 0 5
28433: PPUSH
28434: LD_INT 2
28436: PPUSH
28437: CALL 28026 0 3
28441: ST_TO_ADDR
28442: GO 28489
// result := ( GetDistUnits ( unit , unit2 ) < 6 and See ( GetSide ( unit2 ) , unit ) ) ;
28444: LD_ADDR_VAR 0 3
28448: PUSH
28449: LD_VAR 0 1
28453: PPUSH
28454: LD_VAR 0 2
28458: PPUSH
28459: CALL_OW 296
28463: PUSH
28464: LD_INT 6
28466: LESS
28467: PUSH
28468: LD_VAR 0 2
28472: PPUSH
28473: CALL_OW 255
28477: PPUSH
28478: LD_VAR 0 1
28482: PPUSH
28483: CALL_OW 292
28487: AND
28488: ST_TO_ADDR
// end ;
28489: LD_VAR 0 3
28493: RET
// export function GetFacExt ( factory ) ; var tmp , i , list ; begin
28494: LD_INT 0
28496: PPUSH
28497: PPUSH
28498: PPUSH
28499: PPUSH
// tmp := [ ] ;
28500: LD_ADDR_VAR 0 3
28504: PUSH
28505: EMPTY
28506: ST_TO_ADDR
// list := [ ] ;
28507: LD_ADDR_VAR 0 5
28511: PUSH
28512: EMPTY
28513: ST_TO_ADDR
// for i = 16 to 25 do
28514: LD_ADDR_VAR 0 4
28518: PUSH
28519: DOUBLE
28520: LD_INT 16
28522: DEC
28523: ST_TO_ADDR
28524: LD_INT 25
28526: PUSH
28527: FOR_TO
28528: IFFALSE 28601
// tmp := tmp ^ FilterAllUnits ( [ [ [ f_side , GetSide ( factory ) ] , [ f_dist , factory , 6 ] , [ f_btype , i ] ] ] ) ;
28530: LD_ADDR_VAR 0 3
28534: PUSH
28535: LD_VAR 0 3
28539: PUSH
28540: LD_INT 22
28542: PUSH
28543: LD_VAR 0 1
28547: PPUSH
28548: CALL_OW 255
28552: PUSH
28553: EMPTY
28554: LIST
28555: LIST
28556: PUSH
28557: LD_INT 91
28559: PUSH
28560: LD_VAR 0 1
28564: PUSH
28565: LD_INT 6
28567: PUSH
28568: EMPTY
28569: LIST
28570: LIST
28571: LIST
28572: PUSH
28573: LD_INT 30
28575: PUSH
28576: LD_VAR 0 4
28580: PUSH
28581: EMPTY
28582: LIST
28583: LIST
28584: PUSH
28585: EMPTY
28586: LIST
28587: LIST
28588: LIST
28589: PUSH
28590: EMPTY
28591: LIST
28592: PPUSH
28593: CALL_OW 69
28597: ADD
28598: ST_TO_ADDR
28599: GO 28527
28601: POP
28602: POP
// for i = 1 to tmp do
28603: LD_ADDR_VAR 0 4
28607: PUSH
28608: DOUBLE
28609: LD_INT 1
28611: DEC
28612: ST_TO_ADDR
28613: LD_VAR 0 3
28617: PUSH
28618: FOR_TO
28619: IFFALSE 28707
// list := list ^ [ [ GetBType ( tmp [ i ] ) , GetX ( tmp [ i ] ) , GetY ( tmp [ i ] ) , GetDir ( tmp [ i ] ) ] ] ;
28621: LD_ADDR_VAR 0 5
28625: PUSH
28626: LD_VAR 0 5
28630: PUSH
28631: LD_VAR 0 3
28635: PUSH
28636: LD_VAR 0 4
28640: ARRAY
28641: PPUSH
28642: CALL_OW 266
28646: PUSH
28647: LD_VAR 0 3
28651: PUSH
28652: LD_VAR 0 4
28656: ARRAY
28657: PPUSH
28658: CALL_OW 250
28662: PUSH
28663: LD_VAR 0 3
28667: PUSH
28668: LD_VAR 0 4
28672: ARRAY
28673: PPUSH
28674: CALL_OW 251
28678: PUSH
28679: LD_VAR 0 3
28683: PUSH
28684: LD_VAR 0 4
28688: ARRAY
28689: PPUSH
28690: CALL_OW 254
28694: PUSH
28695: EMPTY
28696: LIST
28697: LIST
28698: LIST
28699: LIST
28700: PUSH
28701: EMPTY
28702: LIST
28703: ADD
28704: ST_TO_ADDR
28705: GO 28618
28707: POP
28708: POP
// result := list ;
28709: LD_ADDR_VAR 0 2
28713: PUSH
28714: LD_VAR 0 5
28718: ST_TO_ADDR
// end ;
28719: LD_VAR 0 2
28723: RET
// export function Produce ( factory , chassis , engine , control , weapon ) ; var i , tmp , _chassis , _weapon , _engine , _control ; begin
28724: LD_INT 0
28726: PPUSH
28727: PPUSH
28728: PPUSH
28729: PPUSH
28730: PPUSH
28731: PPUSH
28732: PPUSH
// if not factory then
28733: LD_VAR 0 1
28737: NOT
28738: IFFALSE 28742
// exit ;
28740: GO 29267
// if control = control_apeman then
28742: LD_VAR 0 4
28746: PUSH
28747: LD_INT 5
28749: EQUAL
28750: IFFALSE 28859
// begin tmp := UnitsInside ( factory ) ;
28752: LD_ADDR_VAR 0 8
28756: PUSH
28757: LD_VAR 0 1
28761: PPUSH
28762: CALL_OW 313
28766: ST_TO_ADDR
// if not UnitFilter ( tmp , [ f_class , class_apeman ] ) then
28767: LD_VAR 0 8
28771: PPUSH
28772: LD_INT 25
28774: PUSH
28775: LD_INT 12
28777: PUSH
28778: EMPTY
28779: LIST
28780: LIST
28781: PPUSH
28782: CALL_OW 72
28786: NOT
28787: IFFALSE 28797
// control := control_manual ;
28789: LD_ADDR_VAR 0 4
28793: PUSH
28794: LD_INT 1
28796: ST_TO_ADDR
// tmp := GetFacExt ( factory ) ;
28797: LD_ADDR_VAR 0 8
28801: PUSH
28802: LD_VAR 0 1
28806: PPUSH
28807: CALL 28494 0 1
28811: ST_TO_ADDR
// if tmp then
28812: LD_VAR 0 8
28816: IFFALSE 28859
// begin for i in tmp do
28818: LD_ADDR_VAR 0 7
28822: PUSH
28823: LD_VAR 0 8
28827: PUSH
28828: FOR_IN
28829: IFFALSE 28857
// if i [ 1 ] = b_ext_radar then
28831: LD_VAR 0 7
28835: PUSH
28836: LD_INT 1
28838: ARRAY
28839: PUSH
28840: LD_INT 20
28842: EQUAL
28843: IFFALSE 28855
// begin control := control_remote ;
28845: LD_ADDR_VAR 0 4
28849: PUSH
28850: LD_INT 2
28852: ST_TO_ADDR
// break ;
28853: GO 28857
// end ;
28855: GO 28828
28857: POP
28858: POP
// end ; end ; if CanBeConstructed ( factory , chassis , engine , control , weapon ) then
28859: LD_VAR 0 1
28863: PPUSH
28864: LD_VAR 0 2
28868: PPUSH
28869: LD_VAR 0 3
28873: PPUSH
28874: LD_VAR 0 4
28878: PPUSH
28879: LD_VAR 0 5
28883: PPUSH
28884: CALL_OW 448
28888: IFFALSE 28923
// begin result := [ chassis , engine , control , weapon ] ;
28890: LD_ADDR_VAR 0 6
28894: PUSH
28895: LD_VAR 0 2
28899: PUSH
28900: LD_VAR 0 3
28904: PUSH
28905: LD_VAR 0 4
28909: PUSH
28910: LD_VAR 0 5
28914: PUSH
28915: EMPTY
28916: LIST
28917: LIST
28918: LIST
28919: LIST
28920: ST_TO_ADDR
// exit ;
28921: GO 29267
// end ; _chassis := AvailableChassisList ( factory ) ;
28923: LD_ADDR_VAR 0 9
28927: PUSH
28928: LD_VAR 0 1
28932: PPUSH
28933: CALL_OW 475
28937: ST_TO_ADDR
// _engine := AvailableEngineList ( factory ) ;
28938: LD_ADDR_VAR 0 11
28942: PUSH
28943: LD_VAR 0 1
28947: PPUSH
28948: CALL_OW 476
28952: ST_TO_ADDR
// _control := AvailableControlList ( factory ) ;
28953: LD_ADDR_VAR 0 12
28957: PUSH
28958: LD_VAR 0 1
28962: PPUSH
28963: CALL_OW 477
28967: ST_TO_ADDR
// _weapon := AvailableWeaponList ( factory ) ;
28968: LD_ADDR_VAR 0 10
28972: PUSH
28973: LD_VAR 0 1
28977: PPUSH
28978: CALL_OW 478
28982: ST_TO_ADDR
// if not chassis in _chassis then
28983: LD_VAR 0 2
28987: PUSH
28988: LD_VAR 0 9
28992: IN
28993: NOT
28994: IFFALSE 29020
// chassis := _chassis [ rand ( 1 , _chassis ) ] ;
28996: LD_ADDR_VAR 0 2
29000: PUSH
29001: LD_VAR 0 9
29005: PUSH
29006: LD_INT 1
29008: PPUSH
29009: LD_VAR 0 9
29013: PPUSH
29014: CALL_OW 12
29018: ARRAY
29019: ST_TO_ADDR
// if not EngineCanBeMount ( chassis , engine ) then
29020: LD_VAR 0 2
29024: PPUSH
29025: LD_VAR 0 3
29029: PPUSH
29030: CALL 29272 0 2
29034: NOT
29035: IFFALSE 29094
// repeat engine := _engine [ 1 ] ;
29037: LD_ADDR_VAR 0 3
29041: PUSH
29042: LD_VAR 0 11
29046: PUSH
29047: LD_INT 1
29049: ARRAY
29050: ST_TO_ADDR
// _engine := Delete ( _engine , 1 ) ;
29051: LD_ADDR_VAR 0 11
29055: PUSH
29056: LD_VAR 0 11
29060: PPUSH
29061: LD_INT 1
29063: PPUSH
29064: CALL_OW 3
29068: ST_TO_ADDR
// until EngineCanBeMount ( chassis , engine ) or _engine = [ ] ;
29069: LD_VAR 0 2
29073: PPUSH
29074: LD_VAR 0 3
29078: PPUSH
29079: CALL 29272 0 2
29083: PUSH
29084: LD_VAR 0 11
29088: PUSH
29089: EMPTY
29090: EQUAL
29091: OR
29092: IFFALSE 29037
// if not control in _control then
29094: LD_VAR 0 4
29098: PUSH
29099: LD_VAR 0 12
29103: IN
29104: NOT
29105: IFFALSE 29131
// control := _control [ rand ( 1 , _control ) ] ;
29107: LD_ADDR_VAR 0 4
29111: PUSH
29112: LD_VAR 0 12
29116: PUSH
29117: LD_INT 1
29119: PPUSH
29120: LD_VAR 0 12
29124: PPUSH
29125: CALL_OW 12
29129: ARRAY
29130: ST_TO_ADDR
// if not WeaponCanBeMount ( chassis , weapon ) then
29131: LD_VAR 0 2
29135: PPUSH
29136: LD_VAR 0 5
29140: PPUSH
29141: CALL 29492 0 2
29145: NOT
29146: IFFALSE 29205
// repeat weapon := _weapon [ 1 ] ;
29148: LD_ADDR_VAR 0 5
29152: PUSH
29153: LD_VAR 0 10
29157: PUSH
29158: LD_INT 1
29160: ARRAY
29161: ST_TO_ADDR
// _weapon := Delete ( _weapon , 1 ) ;
29162: LD_ADDR_VAR 0 10
29166: PUSH
29167: LD_VAR 0 10
29171: PPUSH
29172: LD_INT 1
29174: PPUSH
29175: CALL_OW 3
29179: ST_TO_ADDR
// until WeaponCanBeMount ( chassis , weapon ) or _weapon = [ ] ;
29180: LD_VAR 0 2
29184: PPUSH
29185: LD_VAR 0 5
29189: PPUSH
29190: CALL 29492 0 2
29194: PUSH
29195: LD_VAR 0 10
29199: PUSH
29200: EMPTY
29201: EQUAL
29202: OR
29203: IFFALSE 29148
// if CanBeConstructed ( factory , chassis , engine , control , weapon ) then
29205: LD_VAR 0 1
29209: PPUSH
29210: LD_VAR 0 2
29214: PPUSH
29215: LD_VAR 0 3
29219: PPUSH
29220: LD_VAR 0 4
29224: PPUSH
29225: LD_VAR 0 5
29229: PPUSH
29230: CALL_OW 448
29234: IFFALSE 29267
// result := [ chassis , engine , control , weapon ] ;
29236: LD_ADDR_VAR 0 6
29240: PUSH
29241: LD_VAR 0 2
29245: PUSH
29246: LD_VAR 0 3
29250: PUSH
29251: LD_VAR 0 4
29255: PUSH
29256: LD_VAR 0 5
29260: PUSH
29261: EMPTY
29262: LIST
29263: LIST
29264: LIST
29265: LIST
29266: ST_TO_ADDR
// end ;
29267: LD_VAR 0 6
29271: RET
// export function EngineCanBeMount ( chassis , engine ) ; begin
29272: LD_INT 0
29274: PPUSH
// if not chassis or not engine then
29275: LD_VAR 0 1
29279: NOT
29280: PUSH
29281: LD_VAR 0 2
29285: NOT
29286: OR
29287: IFFALSE 29291
// exit ;
29289: GO 29487
// case engine of engine_solar :
29291: LD_VAR 0 2
29295: PUSH
29296: LD_INT 2
29298: DOUBLE
29299: EQUAL
29300: IFTRUE 29304
29302: GO 29342
29304: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked , us_light_wheeled , us_medium_wheeled , us_medium_tracked ] ; engine_combustion :
29305: LD_ADDR_VAR 0 3
29309: PUSH
29310: LD_INT 11
29312: PUSH
29313: LD_INT 12
29315: PUSH
29316: LD_INT 13
29318: PUSH
29319: LD_INT 14
29321: PUSH
29322: LD_INT 1
29324: PUSH
29325: LD_INT 2
29327: PUSH
29328: LD_INT 3
29330: PUSH
29331: EMPTY
29332: LIST
29333: LIST
29334: LIST
29335: LIST
29336: LIST
29337: LIST
29338: LIST
29339: ST_TO_ADDR
29340: GO 29471
29342: LD_INT 1
29344: DOUBLE
29345: EQUAL
29346: IFTRUE 29350
29348: GO 29412
29350: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked , us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling , ru_medium_wheeled , ru_heavy_wheeled , ru_medium_tracked , ru_heavy_tracked ] ; engine_siberite :
29351: LD_ADDR_VAR 0 3
29355: PUSH
29356: LD_INT 11
29358: PUSH
29359: LD_INT 12
29361: PUSH
29362: LD_INT 13
29364: PUSH
29365: LD_INT 14
29367: PUSH
29368: LD_INT 1
29370: PUSH
29371: LD_INT 2
29373: PUSH
29374: LD_INT 3
29376: PUSH
29377: LD_INT 4
29379: PUSH
29380: LD_INT 5
29382: PUSH
29383: LD_INT 21
29385: PUSH
29386: LD_INT 23
29388: PUSH
29389: LD_INT 22
29391: PUSH
29392: LD_INT 24
29394: PUSH
29395: EMPTY
29396: LIST
29397: LIST
29398: LIST
29399: LIST
29400: LIST
29401: LIST
29402: LIST
29403: LIST
29404: LIST
29405: LIST
29406: LIST
29407: LIST
29408: LIST
29409: ST_TO_ADDR
29410: GO 29471
29412: LD_INT 3
29414: DOUBLE
29415: EQUAL
29416: IFTRUE 29420
29418: GO 29470
29420: POP
// result := [ ar_medium_trike , ar_half_tracked , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling , ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; end ;
29421: LD_ADDR_VAR 0 3
29425: PUSH
29426: LD_INT 13
29428: PUSH
29429: LD_INT 14
29431: PUSH
29432: LD_INT 2
29434: PUSH
29435: LD_INT 3
29437: PUSH
29438: LD_INT 4
29440: PUSH
29441: LD_INT 5
29443: PUSH
29444: LD_INT 21
29446: PUSH
29447: LD_INT 22
29449: PUSH
29450: LD_INT 23
29452: PUSH
29453: LD_INT 24
29455: PUSH
29456: EMPTY
29457: LIST
29458: LIST
29459: LIST
29460: LIST
29461: LIST
29462: LIST
29463: LIST
29464: LIST
29465: LIST
29466: LIST
29467: ST_TO_ADDR
29468: GO 29471
29470: POP
// result := ( chassis in result ) ;
29471: LD_ADDR_VAR 0 3
29475: PUSH
29476: LD_VAR 0 1
29480: PUSH
29481: LD_VAR 0 3
29485: IN
29486: ST_TO_ADDR
// end ;
29487: LD_VAR 0 3
29491: RET
// export function WeaponCanBeMount ( chassis , weapon ) ; begin
29492: LD_INT 0
29494: PPUSH
// if not chassis or not weapon then
29495: LD_VAR 0 1
29499: NOT
29500: PUSH
29501: LD_VAR 0 2
29505: NOT
29506: OR
29507: IFFALSE 29511
// exit ;
29509: GO 30537
// case weapon of us_machine_gun :
29511: LD_VAR 0 2
29515: PUSH
29516: LD_INT 2
29518: DOUBLE
29519: EQUAL
29520: IFTRUE 29524
29522: GO 29554
29524: POP
// result := [ us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_light_gun :
29525: LD_ADDR_VAR 0 3
29529: PUSH
29530: LD_INT 1
29532: PUSH
29533: LD_INT 2
29535: PUSH
29536: LD_INT 3
29538: PUSH
29539: LD_INT 4
29541: PUSH
29542: LD_INT 5
29544: PUSH
29545: EMPTY
29546: LIST
29547: LIST
29548: LIST
29549: LIST
29550: LIST
29551: ST_TO_ADDR
29552: GO 30521
29554: LD_INT 3
29556: DOUBLE
29557: EQUAL
29558: IFTRUE 29562
29560: GO 29592
29562: POP
// result := [ us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_radar :
29563: LD_ADDR_VAR 0 3
29567: PUSH
29568: LD_INT 1
29570: PUSH
29571: LD_INT 2
29573: PUSH
29574: LD_INT 3
29576: PUSH
29577: LD_INT 4
29579: PUSH
29580: LD_INT 5
29582: PUSH
29583: EMPTY
29584: LIST
29585: LIST
29586: LIST
29587: LIST
29588: LIST
29589: ST_TO_ADDR
29590: GO 30521
29592: LD_INT 11
29594: DOUBLE
29595: EQUAL
29596: IFTRUE 29600
29598: GO 29630
29600: POP
// result := [ us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_gatling_gun :
29601: LD_ADDR_VAR 0 3
29605: PUSH
29606: LD_INT 1
29608: PUSH
29609: LD_INT 2
29611: PUSH
29612: LD_INT 3
29614: PUSH
29615: LD_INT 4
29617: PUSH
29618: LD_INT 5
29620: PUSH
29621: EMPTY
29622: LIST
29623: LIST
29624: LIST
29625: LIST
29626: LIST
29627: ST_TO_ADDR
29628: GO 30521
29630: LD_INT 4
29632: DOUBLE
29633: EQUAL
29634: IFTRUE 29638
29636: GO 29664
29638: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_double_gun :
29639: LD_ADDR_VAR 0 3
29643: PUSH
29644: LD_INT 2
29646: PUSH
29647: LD_INT 3
29649: PUSH
29650: LD_INT 4
29652: PUSH
29653: LD_INT 5
29655: PUSH
29656: EMPTY
29657: LIST
29658: LIST
29659: LIST
29660: LIST
29661: ST_TO_ADDR
29662: GO 30521
29664: LD_INT 5
29666: DOUBLE
29667: EQUAL
29668: IFTRUE 29672
29670: GO 29698
29672: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_laser :
29673: LD_ADDR_VAR 0 3
29677: PUSH
29678: LD_INT 2
29680: PUSH
29681: LD_INT 3
29683: PUSH
29684: LD_INT 4
29686: PUSH
29687: LD_INT 5
29689: PUSH
29690: EMPTY
29691: LIST
29692: LIST
29693: LIST
29694: LIST
29695: ST_TO_ADDR
29696: GO 30521
29698: LD_INT 9
29700: DOUBLE
29701: EQUAL
29702: IFTRUE 29706
29704: GO 29732
29706: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_rocket_launcher :
29707: LD_ADDR_VAR 0 3
29711: PUSH
29712: LD_INT 2
29714: PUSH
29715: LD_INT 3
29717: PUSH
29718: LD_INT 4
29720: PUSH
29721: LD_INT 5
29723: PUSH
29724: EMPTY
29725: LIST
29726: LIST
29727: LIST
29728: LIST
29729: ST_TO_ADDR
29730: GO 30521
29732: LD_INT 7
29734: DOUBLE
29735: EQUAL
29736: IFTRUE 29740
29738: GO 29766
29740: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_cargo_bay :
29741: LD_ADDR_VAR 0 3
29745: PUSH
29746: LD_INT 2
29748: PUSH
29749: LD_INT 3
29751: PUSH
29752: LD_INT 4
29754: PUSH
29755: LD_INT 5
29757: PUSH
29758: EMPTY
29759: LIST
29760: LIST
29761: LIST
29762: LIST
29763: ST_TO_ADDR
29764: GO 30521
29766: LD_INT 12
29768: DOUBLE
29769: EQUAL
29770: IFTRUE 29774
29772: GO 29800
29774: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_crane :
29775: LD_ADDR_VAR 0 3
29779: PUSH
29780: LD_INT 2
29782: PUSH
29783: LD_INT 3
29785: PUSH
29786: LD_INT 4
29788: PUSH
29789: LD_INT 5
29791: PUSH
29792: EMPTY
29793: LIST
29794: LIST
29795: LIST
29796: LIST
29797: ST_TO_ADDR
29798: GO 30521
29800: LD_INT 13
29802: DOUBLE
29803: EQUAL
29804: IFTRUE 29808
29806: GO 29834
29808: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_bulldozer :
29809: LD_ADDR_VAR 0 3
29813: PUSH
29814: LD_INT 2
29816: PUSH
29817: LD_INT 3
29819: PUSH
29820: LD_INT 4
29822: PUSH
29823: LD_INT 5
29825: PUSH
29826: EMPTY
29827: LIST
29828: LIST
29829: LIST
29830: LIST
29831: ST_TO_ADDR
29832: GO 30521
29834: LD_INT 14
29836: DOUBLE
29837: EQUAL
29838: IFTRUE 29842
29840: GO 29860
29842: POP
// result := [ us_heavy_tracked , us_morphling ] ; us_heavy_gun :
29843: LD_ADDR_VAR 0 3
29847: PUSH
29848: LD_INT 4
29850: PUSH
29851: LD_INT 5
29853: PUSH
29854: EMPTY
29855: LIST
29856: LIST
29857: ST_TO_ADDR
29858: GO 30521
29860: LD_INT 6
29862: DOUBLE
29863: EQUAL
29864: IFTRUE 29868
29866: GO 29886
29868: POP
// result := [ us_heavy_tracked , us_morphling ] ; us_double_laser :
29869: LD_ADDR_VAR 0 3
29873: PUSH
29874: LD_INT 4
29876: PUSH
29877: LD_INT 5
29879: PUSH
29880: EMPTY
29881: LIST
29882: LIST
29883: ST_TO_ADDR
29884: GO 30521
29886: LD_INT 10
29888: DOUBLE
29889: EQUAL
29890: IFTRUE 29894
29892: GO 29912
29894: POP
// result := [ us_heavy_tracked , us_morphling ] ; ar_multimissile_ballista :
29895: LD_ADDR_VAR 0 3
29899: PUSH
29900: LD_INT 4
29902: PUSH
29903: LD_INT 5
29905: PUSH
29906: EMPTY
29907: LIST
29908: LIST
29909: ST_TO_ADDR
29910: GO 30521
29912: LD_INT 22
29914: DOUBLE
29915: EQUAL
29916: IFTRUE 29920
29918: GO 29946
29920: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_light_gun :
29921: LD_ADDR_VAR 0 3
29925: PUSH
29926: LD_INT 11
29928: PUSH
29929: LD_INT 12
29931: PUSH
29932: LD_INT 13
29934: PUSH
29935: LD_INT 14
29937: PUSH
29938: EMPTY
29939: LIST
29940: LIST
29941: LIST
29942: LIST
29943: ST_TO_ADDR
29944: GO 30521
29946: LD_INT 23
29948: DOUBLE
29949: EQUAL
29950: IFTRUE 29954
29952: GO 29980
29954: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_double_machine_gun :
29955: LD_ADDR_VAR 0 3
29959: PUSH
29960: LD_INT 11
29962: PUSH
29963: LD_INT 12
29965: PUSH
29966: LD_INT 13
29968: PUSH
29969: LD_INT 14
29971: PUSH
29972: EMPTY
29973: LIST
29974: LIST
29975: LIST
29976: LIST
29977: ST_TO_ADDR
29978: GO 30521
29980: LD_INT 24
29982: DOUBLE
29983: EQUAL
29984: IFTRUE 29988
29986: GO 30014
29988: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_radar :
29989: LD_ADDR_VAR 0 3
29993: PUSH
29994: LD_INT 11
29996: PUSH
29997: LD_INT 12
29999: PUSH
30000: LD_INT 13
30002: PUSH
30003: LD_INT 14
30005: PUSH
30006: EMPTY
30007: LIST
30008: LIST
30009: LIST
30010: LIST
30011: ST_TO_ADDR
30012: GO 30521
30014: LD_INT 30
30016: DOUBLE
30017: EQUAL
30018: IFTRUE 30022
30020: GO 30048
30022: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_gatling_gun :
30023: LD_ADDR_VAR 0 3
30027: PUSH
30028: LD_INT 11
30030: PUSH
30031: LD_INT 12
30033: PUSH
30034: LD_INT 13
30036: PUSH
30037: LD_INT 14
30039: PUSH
30040: EMPTY
30041: LIST
30042: LIST
30043: LIST
30044: LIST
30045: ST_TO_ADDR
30046: GO 30521
30048: LD_INT 25
30050: DOUBLE
30051: EQUAL
30052: IFTRUE 30056
30054: GO 30074
30056: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_gun :
30057: LD_ADDR_VAR 0 3
30061: PUSH
30062: LD_INT 13
30064: PUSH
30065: LD_INT 14
30067: PUSH
30068: EMPTY
30069: LIST
30070: LIST
30071: ST_TO_ADDR
30072: GO 30521
30074: LD_INT 27
30076: DOUBLE
30077: EQUAL
30078: IFTRUE 30082
30080: GO 30100
30082: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_rocket_launcher :
30083: LD_ADDR_VAR 0 3
30087: PUSH
30088: LD_INT 13
30090: PUSH
30091: LD_INT 14
30093: PUSH
30094: EMPTY
30095: LIST
30096: LIST
30097: ST_TO_ADDR
30098: GO 30521
30100: LD_INT 28
30102: DOUBLE
30103: EQUAL
30104: IFTRUE 30108
30106: GO 30126
30108: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_selfpropelled_bomb :
30109: LD_ADDR_VAR 0 3
30113: PUSH
30114: LD_INT 13
30116: PUSH
30117: LD_INT 14
30119: PUSH
30120: EMPTY
30121: LIST
30122: LIST
30123: ST_TO_ADDR
30124: GO 30521
30126: LD_INT 29
30128: DOUBLE
30129: EQUAL
30130: IFTRUE 30134
30132: GO 30152
30134: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_control_tower :
30135: LD_ADDR_VAR 0 3
30139: PUSH
30140: LD_INT 13
30142: PUSH
30143: LD_INT 14
30145: PUSH
30146: EMPTY
30147: LIST
30148: LIST
30149: ST_TO_ADDR
30150: GO 30521
30152: LD_INT 31
30154: DOUBLE
30155: EQUAL
30156: IFTRUE 30160
30158: GO 30178
30160: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_flame_thrower :
30161: LD_ADDR_VAR 0 3
30165: PUSH
30166: LD_INT 13
30168: PUSH
30169: LD_INT 14
30171: PUSH
30172: EMPTY
30173: LIST
30174: LIST
30175: ST_TO_ADDR
30176: GO 30521
30178: LD_INT 26
30180: DOUBLE
30181: EQUAL
30182: IFTRUE 30186
30184: GO 30204
30186: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ru_heavy_machine_gun :
30187: LD_ADDR_VAR 0 3
30191: PUSH
30192: LD_INT 13
30194: PUSH
30195: LD_INT 14
30197: PUSH
30198: EMPTY
30199: LIST
30200: LIST
30201: ST_TO_ADDR
30202: GO 30521
30204: LD_INT 42
30206: DOUBLE
30207: EQUAL
30208: IFTRUE 30212
30210: GO 30238
30212: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_gatling_gun :
30213: LD_ADDR_VAR 0 3
30217: PUSH
30218: LD_INT 21
30220: PUSH
30221: LD_INT 22
30223: PUSH
30224: LD_INT 23
30226: PUSH
30227: LD_INT 24
30229: PUSH
30230: EMPTY
30231: LIST
30232: LIST
30233: LIST
30234: LIST
30235: ST_TO_ADDR
30236: GO 30521
30238: LD_INT 43
30240: DOUBLE
30241: EQUAL
30242: IFTRUE 30246
30244: GO 30272
30246: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_gun :
30247: LD_ADDR_VAR 0 3
30251: PUSH
30252: LD_INT 21
30254: PUSH
30255: LD_INT 22
30257: PUSH
30258: LD_INT 23
30260: PUSH
30261: LD_INT 24
30263: PUSH
30264: EMPTY
30265: LIST
30266: LIST
30267: LIST
30268: LIST
30269: ST_TO_ADDR
30270: GO 30521
30272: LD_INT 44
30274: DOUBLE
30275: EQUAL
30276: IFTRUE 30280
30278: GO 30306
30280: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_rocket_launcher :
30281: LD_ADDR_VAR 0 3
30285: PUSH
30286: LD_INT 21
30288: PUSH
30289: LD_INT 22
30291: PUSH
30292: LD_INT 23
30294: PUSH
30295: LD_INT 24
30297: PUSH
30298: EMPTY
30299: LIST
30300: LIST
30301: LIST
30302: LIST
30303: ST_TO_ADDR
30304: GO 30521
30306: LD_INT 45
30308: DOUBLE
30309: EQUAL
30310: IFTRUE 30314
30312: GO 30340
30314: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_time_lapser :
30315: LD_ADDR_VAR 0 3
30319: PUSH
30320: LD_INT 21
30322: PUSH
30323: LD_INT 22
30325: PUSH
30326: LD_INT 23
30328: PUSH
30329: LD_INT 24
30331: PUSH
30332: EMPTY
30333: LIST
30334: LIST
30335: LIST
30336: LIST
30337: ST_TO_ADDR
30338: GO 30521
30340: LD_INT 49
30342: DOUBLE
30343: EQUAL
30344: IFTRUE 30348
30346: GO 30374
30348: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_cargo_bay :
30349: LD_ADDR_VAR 0 3
30353: PUSH
30354: LD_INT 21
30356: PUSH
30357: LD_INT 22
30359: PUSH
30360: LD_INT 23
30362: PUSH
30363: LD_INT 24
30365: PUSH
30366: EMPTY
30367: LIST
30368: LIST
30369: LIST
30370: LIST
30371: ST_TO_ADDR
30372: GO 30521
30374: LD_INT 51
30376: DOUBLE
30377: EQUAL
30378: IFTRUE 30382
30380: GO 30408
30382: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_crane :
30383: LD_ADDR_VAR 0 3
30387: PUSH
30388: LD_INT 21
30390: PUSH
30391: LD_INT 22
30393: PUSH
30394: LD_INT 23
30396: PUSH
30397: LD_INT 24
30399: PUSH
30400: EMPTY
30401: LIST
30402: LIST
30403: LIST
30404: LIST
30405: ST_TO_ADDR
30406: GO 30521
30408: LD_INT 52
30410: DOUBLE
30411: EQUAL
30412: IFTRUE 30416
30414: GO 30442
30416: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_bulldozer :
30417: LD_ADDR_VAR 0 3
30421: PUSH
30422: LD_INT 21
30424: PUSH
30425: LD_INT 22
30427: PUSH
30428: LD_INT 23
30430: PUSH
30431: LD_INT 24
30433: PUSH
30434: EMPTY
30435: LIST
30436: LIST
30437: LIST
30438: LIST
30439: ST_TO_ADDR
30440: GO 30521
30442: LD_INT 53
30444: DOUBLE
30445: EQUAL
30446: IFTRUE 30450
30448: GO 30468
30450: POP
// result := [ ru_heavy_wheeled , ru_heavy_tracked ] ; ru_heavy_gun :
30451: LD_ADDR_VAR 0 3
30455: PUSH
30456: LD_INT 23
30458: PUSH
30459: LD_INT 24
30461: PUSH
30462: EMPTY
30463: LIST
30464: LIST
30465: ST_TO_ADDR
30466: GO 30521
30468: LD_INT 46
30470: DOUBLE
30471: EQUAL
30472: IFTRUE 30476
30474: GO 30494
30476: POP
// result := [ ru_heavy_wheeled , ru_heavy_tracked ] ; ru_rocket :
30477: LD_ADDR_VAR 0 3
30481: PUSH
30482: LD_INT 23
30484: PUSH
30485: LD_INT 24
30487: PUSH
30488: EMPTY
30489: LIST
30490: LIST
30491: ST_TO_ADDR
30492: GO 30521
30494: LD_INT 47
30496: DOUBLE
30497: EQUAL
30498: IFTRUE 30502
30500: GO 30520
30502: POP
// result := [ ru_heavy_wheeled , ru_heavy_tracked ] ; end ;
30503: LD_ADDR_VAR 0 3
30507: PUSH
30508: LD_INT 23
30510: PUSH
30511: LD_INT 24
30513: PUSH
30514: EMPTY
30515: LIST
30516: LIST
30517: ST_TO_ADDR
30518: GO 30521
30520: POP
// result := ( chassis in result ) ;
30521: LD_ADDR_VAR 0 3
30525: PUSH
30526: LD_VAR 0 1
30530: PUSH
30531: LD_VAR 0 3
30535: IN
30536: ST_TO_ADDR
// end ;
30537: LD_VAR 0 3
30541: RET
// export function PrepareNature ; var i , animal , nat_area ; begin
30542: LD_INT 0
30544: PPUSH
30545: PPUSH
30546: PPUSH
30547: PPUSH
// uc_side = 0 ;
30548: LD_ADDR_OWVAR 20
30552: PUSH
30553: LD_INT 0
30555: ST_TO_ADDR
// uc_nation = 0 ;
30556: LD_ADDR_OWVAR 21
30560: PUSH
30561: LD_INT 0
30563: ST_TO_ADDR
// nat_area := nature_area ;
30564: LD_ADDR_VAR 0 4
30568: PUSH
30569: LD_INT 24
30571: ST_TO_ADDR
// InitHc ;
30572: CALL_OW 19
// for i = 1 to 4 do
30576: LD_ADDR_VAR 0 2
30580: PUSH
30581: DOUBLE
30582: LD_INT 1
30584: DEC
30585: ST_TO_ADDR
30586: LD_INT 4
30588: PUSH
30589: FOR_TO
30590: IFFALSE 30637
// begin hc_class = 18 ;
30592: LD_ADDR_OWVAR 28
30596: PUSH
30597: LD_INT 18
30599: ST_TO_ADDR
// hc_gallery =  ;
30600: LD_ADDR_OWVAR 33
30604: PUSH
30605: LD_STRING 
30607: ST_TO_ADDR
// animal := CreateHuman ;
30608: LD_ADDR_VAR 0 3
30612: PUSH
30613: CALL_OW 44
30617: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
30618: LD_VAR 0 3
30622: PPUSH
30623: LD_VAR 0 4
30627: PPUSH
30628: LD_INT 0
30630: PPUSH
30631: CALL_OW 49
// end ;
30635: GO 30589
30637: POP
30638: POP
// for i = 1 to 3 do
30639: LD_ADDR_VAR 0 2
30643: PUSH
30644: DOUBLE
30645: LD_INT 1
30647: DEC
30648: ST_TO_ADDR
30649: LD_INT 3
30651: PUSH
30652: FOR_TO
30653: IFFALSE 30747
// begin hc_class = class_apeman ;
30655: LD_ADDR_OWVAR 28
30659: PUSH
30660: LD_INT 12
30662: ST_TO_ADDR
// hc_gallery =  ;
30663: LD_ADDR_OWVAR 33
30667: PUSH
30668: LD_STRING 
30670: ST_TO_ADDR
// hc_agressivity = 0 ;
30671: LD_ADDR_OWVAR 35
30675: PUSH
30676: LD_INT 0
30678: ST_TO_ADDR
// hc_skills := [ rand ( 1 , 3 ) , rand ( 1 , 3 ) , 0 , 0 ] ;
30679: LD_ADDR_OWVAR 31
30683: PUSH
30684: LD_INT 1
30686: PPUSH
30687: LD_INT 3
30689: PPUSH
30690: CALL_OW 12
30694: PUSH
30695: LD_INT 1
30697: PPUSH
30698: LD_INT 3
30700: PPUSH
30701: CALL_OW 12
30705: PUSH
30706: LD_INT 0
30708: PUSH
30709: LD_INT 0
30711: PUSH
30712: EMPTY
30713: LIST
30714: LIST
30715: LIST
30716: LIST
30717: ST_TO_ADDR
// animal := CreateHuman ;
30718: LD_ADDR_VAR 0 3
30722: PUSH
30723: CALL_OW 44
30727: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
30728: LD_VAR 0 3
30732: PPUSH
30733: LD_VAR 0 4
30737: PPUSH
30738: LD_INT 0
30740: PPUSH
30741: CALL_OW 49
// end ;
30745: GO 30652
30747: POP
30748: POP
// for i = 1 to 3 do
30749: LD_ADDR_VAR 0 2
30753: PUSH
30754: DOUBLE
30755: LD_INT 1
30757: DEC
30758: ST_TO_ADDR
30759: LD_INT 3
30761: PUSH
30762: FOR_TO
30763: IFFALSE 30810
// begin hc_class = 13 ;
30765: LD_ADDR_OWVAR 28
30769: PUSH
30770: LD_INT 13
30772: ST_TO_ADDR
// hc_gallery =  ;
30773: LD_ADDR_OWVAR 33
30777: PUSH
30778: LD_STRING 
30780: ST_TO_ADDR
// animal := CreateHuman ;
30781: LD_ADDR_VAR 0 3
30785: PUSH
30786: CALL_OW 44
30790: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
30791: LD_VAR 0 3
30795: PPUSH
30796: LD_VAR 0 4
30800: PPUSH
30801: LD_INT 0
30803: PPUSH
30804: CALL_OW 49
// end ;
30808: GO 30762
30810: POP
30811: POP
// for i = 1 to 3 do
30812: LD_ADDR_VAR 0 2
30816: PUSH
30817: DOUBLE
30818: LD_INT 1
30820: DEC
30821: ST_TO_ADDR
30822: LD_INT 3
30824: PUSH
30825: FOR_TO
30826: IFFALSE 30871
// begin hc_class = 20 ;
30828: LD_ADDR_OWVAR 28
30832: PUSH
30833: LD_INT 20
30835: ST_TO_ADDR
// hc_gallery =  ;
30836: LD_ADDR_OWVAR 33
30840: PUSH
30841: LD_STRING 
30843: ST_TO_ADDR
// animal := CreateHuman ;
30844: LD_ADDR_VAR 0 3
30848: PUSH
30849: CALL_OW 44
30853: ST_TO_ADDR
// PlaceUnitArea ( animal , lake_area , false ) ;
30854: LD_VAR 0 3
30858: PPUSH
30859: LD_INT 4
30861: PPUSH
30862: LD_INT 0
30864: PPUSH
30865: CALL_OW 49
// end ;
30869: GO 30825
30871: POP
30872: POP
// end ; end_of_file
30873: LD_VAR 0 1
30877: RET
// export function Action ; begin
30878: LD_INT 0
30880: PPUSH
// InGameOn ;
30881: CALL_OW 8
// CenterNowOnUnits ( JMM ) ;
30885: LD_EXP 14
30889: PPUSH
30890: CALL_OW 87
// Say ( JMM , D1-JMM-1 ) ;
30894: LD_EXP 14
30898: PPUSH
30899: LD_STRING D1-JMM-1
30901: PPUSH
30902: CALL_OW 88
// Say ( Roth , D1-Roth-1 ) ;
30906: LD_EXP 15
30910: PPUSH
30911: LD_STRING D1-Roth-1
30913: PPUSH
30914: CALL_OW 88
// Say ( JMM , D1-JMM-2 ) ;
30918: LD_EXP 14
30922: PPUSH
30923: LD_STRING D1-JMM-2
30925: PPUSH
30926: CALL_OW 88
// Say ( Roth , D1-Roth-2 ) ;
30930: LD_EXP 15
30934: PPUSH
30935: LD_STRING D1-Roth-2
30937: PPUSH
30938: CALL_OW 88
// Say ( JMM , D1-JMM-3 ) ;
30942: LD_EXP 14
30946: PPUSH
30947: LD_STRING D1-JMM-3
30949: PPUSH
30950: CALL_OW 88
// Say ( Roth , D1-Roth-3 ) ;
30954: LD_EXP 15
30958: PPUSH
30959: LD_STRING D1-Roth-3
30961: PPUSH
30962: CALL_OW 88
// ComInvisible ( Roth ) ;
30966: LD_EXP 15
30970: PPUSH
30971: CALL_OW 152
// wait ( 0 0$1.3 ) ;
30975: LD_INT 46
30977: PPUSH
30978: CALL_OW 67
// Say ( JMM , D1-JMM-4 ) ;
30982: LD_EXP 14
30986: PPUSH
30987: LD_STRING D1-JMM-4
30989: PPUSH
30990: CALL_OW 88
// wait ( 0 0$0.3 ) ;
30994: LD_INT 10
30996: PPUSH
30997: CALL_OW 67
// ComTurnUnit ( Roth , JMM ) ;
31001: LD_EXP 15
31005: PPUSH
31006: LD_EXP 14
31010: PPUSH
31011: CALL_OW 119
// Say ( JMM , D1-JMM-4a ) ;
31015: LD_EXP 14
31019: PPUSH
31020: LD_STRING D1-JMM-4a
31022: PPUSH
31023: CALL_OW 88
// Say ( Roth , D1-Roth-4 ) ;
31027: LD_EXP 15
31031: PPUSH
31032: LD_STRING D1-Roth-4
31034: PPUSH
31035: CALL_OW 88
// Say ( JMM , D1-JMM-5 ) ;
31039: LD_EXP 14
31043: PPUSH
31044: LD_STRING D1-JMM-5
31046: PPUSH
31047: CALL_OW 88
// Say ( Roth , D1-Roth-5 ) ;
31051: LD_EXP 15
31055: PPUSH
31056: LD_STRING D1-Roth-5
31058: PPUSH
31059: CALL_OW 88
// Say ( JMM , D1-JMM-6 ) ;
31063: LD_EXP 14
31067: PPUSH
31068: LD_STRING D1-JMM-6
31070: PPUSH
31071: CALL_OW 88
// Say ( Roth , D1-Roth-6 ) ;
31075: LD_EXP 15
31079: PPUSH
31080: LD_STRING D1-Roth-6
31082: PPUSH
31083: CALL_OW 88
// Say ( JMM , D1-JMM-7 ) ;
31087: LD_EXP 14
31091: PPUSH
31092: LD_STRING D1-JMM-7
31094: PPUSH
31095: CALL_OW 88
// ComMoveXY ( Powell , GetX ( JMM ) , GetY ( JMM ) ) ;
31099: LD_EXP 16
31103: PPUSH
31104: LD_EXP 14
31108: PPUSH
31109: CALL_OW 250
31113: PPUSH
31114: LD_EXP 14
31118: PPUSH
31119: CALL_OW 251
31123: PPUSH
31124: CALL_OW 111
// Say ( Roth , D1-Roth-7 ) ;
31128: LD_EXP 15
31132: PPUSH
31133: LD_STRING D1-Roth-7
31135: PPUSH
31136: CALL_OW 88
// repeat wait ( 0 0$0.3 ) ;
31140: LD_INT 10
31142: PPUSH
31143: CALL_OW 67
// until GetDistUnits ( Powell , JMM ) < 6 ;
31147: LD_EXP 16
31151: PPUSH
31152: LD_EXP 14
31156: PPUSH
31157: CALL_OW 296
31161: PUSH
31162: LD_INT 6
31164: LESS
31165: IFFALSE 31140
// ComTurnUnit ( Powell , JMM ) ;
31167: LD_EXP 16
31171: PPUSH
31172: LD_EXP 14
31176: PPUSH
31177: CALL_OW 119
// Say ( Powell , D1-Pow-7 ) ;
31181: LD_EXP 16
31185: PPUSH
31186: LD_STRING D1-Pow-7
31188: PPUSH
31189: CALL_OW 88
// ComTurnUnit ( JMM , Powell ) ;
31193: LD_EXP 14
31197: PPUSH
31198: LD_EXP 16
31202: PPUSH
31203: CALL_OW 119
// ComTurnUnit ( Roth , Powell ) ;
31207: LD_EXP 15
31211: PPUSH
31212: LD_EXP 16
31216: PPUSH
31217: CALL_OW 119
// Say ( JMM , D1-JMM-8 ) ;
31221: LD_EXP 14
31225: PPUSH
31226: LD_STRING D1-JMM-8
31228: PPUSH
31229: CALL_OW 88
// Say ( Powell , D1-Pow-8 ) ;
31233: LD_EXP 16
31237: PPUSH
31238: LD_STRING D1-Pow-8
31240: PPUSH
31241: CALL_OW 88
// Say ( JMM , D1-JMM-9 ) ;
31245: LD_EXP 14
31249: PPUSH
31250: LD_STRING D1-JMM-9
31252: PPUSH
31253: CALL_OW 88
// ComMoveXY ( Powell , 124 , 61 ) ;
31257: LD_EXP 16
31261: PPUSH
31262: LD_INT 124
31264: PPUSH
31265: LD_INT 61
31267: PPUSH
31268: CALL_OW 111
// repeat wait ( 0 0$1 ) ;
31272: LD_INT 35
31274: PPUSH
31275: CALL_OW 67
// until GetDistUnits ( JMM , Powell ) > 6 ;
31279: LD_EXP 14
31283: PPUSH
31284: LD_EXP 16
31288: PPUSH
31289: CALL_OW 296
31293: PUSH
31294: LD_INT 6
31296: GREATER
31297: IFFALSE 31272
// SayRadio ( Powell , D1-Pow-9 ) ;
31299: LD_EXP 16
31303: PPUSH
31304: LD_STRING D1-Pow-9
31306: PPUSH
31307: CALL_OW 94
// RemoveUnit ( Powell ) ;
31311: LD_EXP 16
31315: PPUSH
31316: CALL_OW 64
// PlaceHumanInUnit ( Powell , ambar0 ) ;
31320: LD_EXP 16
31324: PPUSH
31325: LD_INT 18
31327: PPUSH
31328: CALL_OW 52
// if Joan and not Joan in selected then
31332: LD_EXP 36
31336: PUSH
31337: LD_EXP 36
31341: PUSH
31342: LD_EXP 3
31346: IN
31347: NOT
31348: AND
31349: IFFALSE 31363
// SayRadio ( Joan , D1-Joan-9 ) ;
31351: LD_EXP 36
31355: PPUSH
31356: LD_STRING D1-Joan-9
31358: PPUSH
31359: CALL_OW 94
// ComTurnUnit ( Roth , JMM ) ;
31363: LD_EXP 15
31367: PPUSH
31368: LD_EXP 14
31372: PPUSH
31373: CALL_OW 119
// ComTurnUnit ( JMM , Roth ) ;
31377: LD_EXP 14
31381: PPUSH
31382: LD_EXP 15
31386: PPUSH
31387: CALL_OW 119
// Say ( Roth , D1-Roth-9 ) ;
31391: LD_EXP 15
31395: PPUSH
31396: LD_STRING D1-Roth-9
31398: PPUSH
31399: CALL_OW 88
// Say ( JMM , D1-JMM-10 ) ;
31403: LD_EXP 14
31407: PPUSH
31408: LD_STRING D1-JMM-10
31410: PPUSH
31411: CALL_OW 88
// InGameOff ;
31415: CALL_OW 9
// ChangeMissionObjectives ( M1 ) ;
31419: LD_STRING M1
31421: PPUSH
31422: CALL_OW 337
// if Difficulty < 3 then
31426: LD_OWVAR 67
31430: PUSH
31431: LD_INT 3
31433: LESS
31434: IFFALSE 31446
// ChangeSideFog ( 4 , 7 ) ;
31436: LD_INT 4
31438: PPUSH
31439: LD_INT 7
31441: PPUSH
31442: CALL_OW 343
// SaveForQuickRestart ;
31446: CALL_OW 22
// SetAttitude ( 7 , 1 , att_enemy , true ) ;
31450: LD_INT 7
31452: PPUSH
31453: LD_INT 1
31455: PPUSH
31456: LD_INT 2
31458: PPUSH
31459: LD_INT 1
31461: PPUSH
31462: CALL_OW 80
// wait ( 0 0$3 ) ;
31466: LD_INT 105
31468: PPUSH
31469: CALL_OW 67
// ComMoveXY ( Roth , 124 , 18 ) ;
31473: LD_EXP 15
31477: PPUSH
31478: LD_INT 124
31480: PPUSH
31481: LD_INT 18
31483: PPUSH
31484: CALL_OW 111
// AddComInvisible ( Roth ) ;
31488: LD_EXP 15
31492: PPUSH
31493: CALL_OW 212
// wait ( 0 0$30 ) ;
31497: LD_INT 1050
31499: PPUSH
31500: CALL_OW 67
// AddComWait ( Roth , 1 1$00 ) ;
31504: LD_EXP 15
31508: PPUSH
31509: LD_INT 2100
31511: PPUSH
31512: CALL_OW 202
// AddComMoveXY ( Roth , 156 , 20 ) ;
31516: LD_EXP 15
31520: PPUSH
31521: LD_INT 156
31523: PPUSH
31524: LD_INT 20
31526: PPUSH
31527: CALL_OW 171
// AddComMoveXY ( Roth , 178 , 42 ) ;
31531: LD_EXP 15
31535: PPUSH
31536: LD_INT 178
31538: PPUSH
31539: LD_INT 42
31541: PPUSH
31542: CALL_OW 171
// AddComInvisible ( Roth ) ;
31546: LD_EXP 15
31550: PPUSH
31551: CALL_OW 212
// end ;
31555: LD_VAR 0 1
31559: RET
// every 0 0$1 do var i , tmp ;
31560: GO 31562
31562: DISABLE
31563: LD_INT 0
31565: PPUSH
31566: PPUSH
// begin tmp := selected union friends ;
31567: LD_ADDR_VAR 0 2
31571: PUSH
31572: LD_EXP 3
31576: PUSH
31577: LD_EXP 4
31581: UNION
31582: ST_TO_ADDR
// if not tmp then
31583: LD_VAR 0 2
31587: NOT
31588: IFFALSE 31592
// exit ;
31590: GO 31664
// repeat wait ( 0 0$1 ) ;
31592: LD_INT 35
31594: PPUSH
31595: CALL_OW 67
// for i in tmp do
31599: LD_ADDR_VAR 0 1
31603: PUSH
31604: LD_VAR 0 2
31608: PUSH
31609: FOR_IN
31610: IFFALSE 31655
// if CanSpot ( JMM , i ) then
31612: LD_EXP 14
31616: PPUSH
31617: LD_VAR 0 1
31621: PPUSH
31622: CALL 28275 0 2
31626: IFFALSE 31653
// begin tmp := tmp diff i ;
31628: LD_ADDR_VAR 0 2
31632: PUSH
31633: LD_VAR 0 2
31637: PUSH
31638: LD_VAR 0 1
31642: DIFF
31643: ST_TO_ADDR
// Spot ( i ) ;
31644: LD_VAR 0 1
31648: PPUSH
31649: CALL 31667 0 1
// end ;
31653: GO 31609
31655: POP
31656: POP
// until not tmp ;
31657: LD_VAR 0 2
31661: NOT
31662: IFFALSE 31592
// end ;
31664: PPOPN 2
31666: END
// export function Spot ( unit ) ; var building , side , joined ; begin
31667: LD_INT 0
31669: PPUSH
31670: PPUSH
31671: PPUSH
31672: PPUSH
// if not unit or GetSide ( unit ) <> 4 or IsSleeping ( unit ) or not IsOk ( unit ) then
31673: LD_VAR 0 1
31677: NOT
31678: PUSH
31679: LD_VAR 0 1
31683: PPUSH
31684: CALL_OW 255
31688: PUSH
31689: LD_INT 4
31691: NONEQUAL
31692: OR
31693: PUSH
31694: LD_VAR 0 1
31698: PPUSH
31699: CALL_OW 555
31703: OR
31704: PUSH
31705: LD_VAR 0 1
31709: PPUSH
31710: CALL_OW 302
31714: NOT
31715: OR
31716: IFFALSE 31720
// exit ;
31718: GO 33609
// InGameOn ;
31720: CALL_OW 8
// side := GetSide ( JMM ) ;
31724: LD_ADDR_VAR 0 4
31728: PUSH
31729: LD_EXP 14
31733: PPUSH
31734: CALL_OW 255
31738: ST_TO_ADDR
// joined := false ;
31739: LD_ADDR_VAR 0 5
31743: PUSH
31744: LD_INT 0
31746: ST_TO_ADDR
// building := IsInUnit ( unit ) ;
31747: LD_ADDR_VAR 0 3
31751: PUSH
31752: LD_VAR 0 1
31756: PPUSH
31757: CALL_OW 310
31761: ST_TO_ADDR
// if building then
31762: LD_VAR 0 3
31766: IFFALSE 31825
// begin SetSide ( JMM , GetSide ( unit ) ) ;
31768: LD_EXP 14
31772: PPUSH
31773: LD_VAR 0 1
31777: PPUSH
31778: CALL_OW 255
31782: PPUSH
31783: CALL_OW 235
// ComEnterUnit ( JMM , building ) ;
31787: LD_EXP 14
31791: PPUSH
31792: LD_VAR 0 3
31796: PPUSH
31797: CALL_OW 120
// repeat wait ( 3 ) ;
31801: LD_INT 3
31803: PPUSH
31804: CALL_OW 67
// until IsInUnit ( JMM ) ;
31808: LD_EXP 14
31812: PPUSH
31813: CALL_OW 310
31817: IFFALSE 31801
// DialogueOn ;
31819: CALL_OW 6
// end else
31823: GO 31857
// begin ComTurnUnit ( JMM , unit ) ;
31825: LD_EXP 14
31829: PPUSH
31830: LD_VAR 0 1
31834: PPUSH
31835: CALL_OW 119
// ComTurnUnit ( unit , JMM ) ;
31839: LD_VAR 0 1
31843: PPUSH
31844: LD_EXP 14
31848: PPUSH
31849: CALL_OW 119
// DialogueOn ;
31853: CALL_OW 6
// end ; if unit = Joan then
31857: LD_VAR 0 1
31861: PUSH
31862: LD_EXP 36
31866: EQUAL
31867: IFFALSE 31977
// begin joined := true ;
31869: LD_ADDR_VAR 0 5
31873: PUSH
31874: LD_INT 1
31876: ST_TO_ADDR
// if Joan in selected then
31877: LD_EXP 36
31881: PUSH
31882: LD_EXP 3
31886: IN
31887: IFFALSE 31915
// begin Say ( Joan , D3-Joan-Joan-1 ) ;
31889: LD_EXP 36
31893: PPUSH
31894: LD_STRING D3-Joan-Joan-1
31896: PPUSH
31897: CALL_OW 88
// Say ( JMM , D3-Joan-JMM-1 ) ;
31901: LD_EXP 14
31905: PPUSH
31906: LD_STRING D3-Joan-JMM-1
31908: PPUSH
31909: CALL_OW 88
// end else
31913: GO 31975
// begin Say ( Joan , D4-Joan-Joan-1 ) ;
31915: LD_EXP 36
31919: PPUSH
31920: LD_STRING D4-Joan-Joan-1
31922: PPUSH
31923: CALL_OW 88
// Say ( JMM , D4-Joan-JMM-1 ) ;
31927: LD_EXP 14
31931: PPUSH
31932: LD_STRING D4-Joan-JMM-1
31934: PPUSH
31935: CALL_OW 88
// Say ( Joan , D4-Joan-Joan-2 ) ;
31939: LD_EXP 36
31943: PPUSH
31944: LD_STRING D4-Joan-Joan-2
31946: PPUSH
31947: CALL_OW 88
// Say ( JMM , D4-Joan-JMM-2 ) ;
31951: LD_EXP 14
31955: PPUSH
31956: LD_STRING D4-Joan-JMM-2
31958: PPUSH
31959: CALL_OW 88
// Say ( Joan , D4-Joan-Joan-3 ) ;
31963: LD_EXP 36
31967: PPUSH
31968: LD_STRING D4-Joan-Joan-3
31970: PPUSH
31971: CALL_OW 88
// end ; end else
31975: GO 33417
// if unit = Lisa then
31977: LD_VAR 0 1
31981: PUSH
31982: LD_EXP 23
31986: EQUAL
31987: IFFALSE 32179
// begin if Lisa in selected then
31989: LD_EXP 23
31993: PUSH
31994: LD_EXP 3
31998: IN
31999: IFFALSE 32112
// begin if GetSide ( Joan ) = 7 then
32001: LD_EXP 36
32005: PPUSH
32006: CALL_OW 255
32010: PUSH
32011: LD_INT 7
32013: EQUAL
32014: IFFALSE 32078
// begin Say ( Lisa , D3-LisaJ-Lisa-1 ) ;
32016: LD_EXP 23
32020: PPUSH
32021: LD_STRING D3-LisaJ-Lisa-1
32023: PPUSH
32024: CALL_OW 88
// Say ( JMM , D3-LisaJ-JMM-1 ) ;
32028: LD_EXP 14
32032: PPUSH
32033: LD_STRING D3-LisaJ-JMM-1
32035: PPUSH
32036: CALL_OW 88
// Say ( Lisa , D3-LisaJ-Lisa-2 ) ;
32040: LD_EXP 23
32044: PPUSH
32045: LD_STRING D3-LisaJ-Lisa-2
32047: PPUSH
32048: CALL_OW 88
// Say ( JMM , D3-LisaJ-JMM-2 ) ;
32052: LD_EXP 14
32056: PPUSH
32057: LD_STRING D3-LisaJ-JMM-2
32059: PPUSH
32060: CALL_OW 88
// Say ( Lisa , D3-LisaJ-Lisa-3 ) ;
32064: LD_EXP 23
32068: PPUSH
32069: LD_STRING D3-LisaJ-Lisa-3
32071: PPUSH
32072: CALL_OW 88
// end else
32076: GO 32110
// begin Say ( Lisa , D3-LisaL-Lisa-1 ) ;
32078: LD_EXP 23
32082: PPUSH
32083: LD_STRING D3-LisaL-Lisa-1
32085: PPUSH
32086: CALL_OW 88
// Say ( JMM , D3-LisaL-JMM-1 ) ;
32090: LD_EXP 14
32094: PPUSH
32095: LD_STRING D3-LisaL-JMM-1
32097: PPUSH
32098: CALL_OW 88
// joined := true ;
32102: LD_ADDR_VAR 0 5
32106: PUSH
32107: LD_INT 1
32109: ST_TO_ADDR
// end ; end else
32110: GO 32177
// begin if GetSide ( Joan ) = 7 then
32112: LD_EXP 36
32116: PPUSH
32117: CALL_OW 255
32121: PUSH
32122: LD_INT 7
32124: EQUAL
32125: IFFALSE 32165
// begin Say ( Lisa , D4-LisaJ-Lisa-1 ) ;
32127: LD_EXP 23
32131: PPUSH
32132: LD_STRING D4-LisaJ-Lisa-1
32134: PPUSH
32135: CALL_OW 88
// Say ( JMM , D4-LisaJ-JMM-1 ) ;
32139: LD_EXP 14
32143: PPUSH
32144: LD_STRING D4-LisaJ-JMM-1
32146: PPUSH
32147: CALL_OW 88
// Say ( Lisa , D4-LisaJ-Lisa-2 ) ;
32151: LD_EXP 23
32155: PPUSH
32156: LD_STRING D4-LisaJ-Lisa-2
32158: PPUSH
32159: CALL_OW 88
// end else
32163: GO 32177
// begin Say ( Lisa , D4-LisaL-Lisa-1 ) ;
32165: LD_EXP 23
32169: PPUSH
32170: LD_STRING D4-LisaL-Lisa-1
32172: PPUSH
32173: CALL_OW 88
// end ; end ; end else
32177: GO 33417
// if unit = Frank then
32179: LD_VAR 0 1
32183: PUSH
32184: LD_EXP 33
32188: EQUAL
32189: IFFALSE 32329
// begin joined := true ;
32191: LD_ADDR_VAR 0 5
32195: PUSH
32196: LD_INT 1
32198: ST_TO_ADDR
// if Frank in selected then
32199: LD_EXP 33
32203: PUSH
32204: LD_EXP 3
32208: IN
32209: IFFALSE 32279
// begin Say ( Frank , D3-Frank-Frank-1 ) ;
32211: LD_EXP 33
32215: PPUSH
32216: LD_STRING D3-Frank-Frank-1
32218: PPUSH
32219: CALL_OW 88
// Say ( JMM , D3-Frank-JMM-1 ) ;
32223: LD_EXP 14
32227: PPUSH
32228: LD_STRING D3-Frank-JMM-1
32230: PPUSH
32231: CALL_OW 88
// Say ( Frank , D3-Frank-Frank-2 ) ;
32235: LD_EXP 33
32239: PPUSH
32240: LD_STRING D3-Frank-Frank-2
32242: PPUSH
32243: CALL_OW 88
// if reached_lab then
32247: LD_EXP 5
32251: IFFALSE 32277
// begin Say ( JMM , D3-Frank-JMM-2 ) ;
32253: LD_EXP 14
32257: PPUSH
32258: LD_STRING D3-Frank-JMM-2
32260: PPUSH
32261: CALL_OW 88
// Say ( Frank , D3-Frank-Frank-3 ) ;
32265: LD_EXP 33
32269: PPUSH
32270: LD_STRING D3-Frank-Frank-3
32272: PPUSH
32273: CALL_OW 88
// end ; end else
32277: GO 32327
// begin Say ( Frank , D4-Frank-Frank-1 ) ;
32279: LD_EXP 33
32283: PPUSH
32284: LD_STRING D4-Frank-Frank-1
32286: PPUSH
32287: CALL_OW 88
// Say ( JMM , D4-Frank-JMM-1 ) ;
32291: LD_EXP 14
32295: PPUSH
32296: LD_STRING D4-Frank-JMM-1
32298: PPUSH
32299: CALL_OW 88
// Say ( Frank , D4-Frank-Frank-2 ) ;
32303: LD_EXP 33
32307: PPUSH
32308: LD_STRING D4-Frank-Frank-2
32310: PPUSH
32311: CALL_OW 88
// Say ( JMM , D4-Frank-JMM-2 ) ;
32315: LD_EXP 14
32319: PPUSH
32320: LD_STRING D4-Frank-JMM-2
32322: PPUSH
32323: CALL_OW 88
// end ; end else
32327: GO 33417
// if unit = Brown then
32329: LD_VAR 0 1
32333: PUSH
32334: LD_EXP 28
32338: EQUAL
32339: IFFALSE 32435
// begin if Brown in selected or gamma_commander = 2 then
32341: LD_EXP 28
32345: PUSH
32346: LD_EXP 3
32350: IN
32351: PUSH
32352: LD_EXP 10
32356: PUSH
32357: LD_INT 2
32359: EQUAL
32360: OR
32361: IFFALSE 32397
// begin Say ( Brown , D3-Soldier1-Sol1-1 ) ;
32363: LD_EXP 28
32367: PPUSH
32368: LD_STRING D3-Soldier1-Sol1-1
32370: PPUSH
32371: CALL_OW 88
// Say ( JMM , D3-Soldier1-JMM-1 ) ;
32375: LD_EXP 14
32379: PPUSH
32380: LD_STRING D3-Soldier1-JMM-1
32382: PPUSH
32383: CALL_OW 88
// joined := true ;
32387: LD_ADDR_VAR 0 5
32391: PUSH
32392: LD_INT 1
32394: ST_TO_ADDR
// end else
32395: GO 32433
// begin Say ( Brown , D4-Soldier2-Sol1-1 ) ;
32397: LD_EXP 28
32401: PPUSH
32402: LD_STRING D4-Soldier2-Sol1-1
32404: PPUSH
32405: CALL_OW 88
// Say ( JMM , D4-Soldier1-JMM-1 ) ;
32409: LD_EXP 14
32413: PPUSH
32414: LD_STRING D4-Soldier1-JMM-1
32416: PPUSH
32417: CALL_OW 88
// Say ( Brown , D4-Soldier2-Sol1-2 ) ;
32421: LD_EXP 28
32425: PPUSH
32426: LD_STRING D4-Soldier2-Sol1-2
32428: PPUSH
32429: CALL_OW 88
// end ; end else
32433: GO 33417
// if unit = Donaldson then
32435: LD_VAR 0 1
32439: PUSH
32440: LD_EXP 24
32444: EQUAL
32445: IFFALSE 32541
// begin if Donaldson in selected or gamma_commander = 1 then
32447: LD_EXP 24
32451: PUSH
32452: LD_EXP 3
32456: IN
32457: PUSH
32458: LD_EXP 10
32462: PUSH
32463: LD_INT 1
32465: EQUAL
32466: OR
32467: IFFALSE 32503
// begin Say ( Donaldson , D3-Soldier2-FSol2-1 ) ;
32469: LD_EXP 24
32473: PPUSH
32474: LD_STRING D3-Soldier2-FSol2-1
32476: PPUSH
32477: CALL_OW 88
// Say ( JMM , D3-Soldier2-JMM-1 ) ;
32481: LD_EXP 14
32485: PPUSH
32486: LD_STRING D3-Soldier2-JMM-1
32488: PPUSH
32489: CALL_OW 88
// joined := true ;
32493: LD_ADDR_VAR 0 5
32497: PUSH
32498: LD_INT 1
32500: ST_TO_ADDR
// end else
32501: GO 32539
// begin Say ( unit , D4-Soldier1-FSol1-1 ) ;
32503: LD_VAR 0 1
32507: PPUSH
32508: LD_STRING D4-Soldier1-FSol1-1
32510: PPUSH
32511: CALL_OW 88
// Say ( JMM , D4-Soldier1-JMM-1 ) ;
32515: LD_EXP 14
32519: PPUSH
32520: LD_STRING D4-Soldier1-JMM-1
32522: PPUSH
32523: CALL_OW 88
// Say ( unit , D4-Soldier1-FSol1-2 ) ;
32527: LD_VAR 0 1
32531: PPUSH
32532: LD_STRING D4-Soldier1-FSol1-2
32534: PPUSH
32535: CALL_OW 88
// end ; end else
32539: GO 33417
// if unit = Cyrus then
32541: LD_VAR 0 1
32545: PUSH
32546: LD_EXP 26
32550: EQUAL
32551: IFFALSE 32625
// begin if Cyrus in selected then
32553: LD_EXP 26
32557: PUSH
32558: LD_EXP 3
32562: IN
32563: IFFALSE 32599
// begin Say ( Cyrus , D3-Cyrus-Cyrus-1 ) ;
32565: LD_EXP 26
32569: PPUSH
32570: LD_STRING D3-Cyrus-Cyrus-1
32572: PPUSH
32573: CALL_OW 88
// Say ( JMM , D3-Cyrus-JMM-1 ) ;
32577: LD_EXP 14
32581: PPUSH
32582: LD_STRING D3-Cyrus-JMM-1
32584: PPUSH
32585: CALL_OW 88
// joined := true ;
32589: LD_ADDR_VAR 0 5
32593: PUSH
32594: LD_INT 1
32596: ST_TO_ADDR
// end else
32597: GO 32623
// begin Say ( Cyrus , D4-Cyrus-Cyrus-1 ) ;
32599: LD_EXP 26
32603: PPUSH
32604: LD_STRING D4-Cyrus-Cyrus-1
32606: PPUSH
32607: CALL_OW 88
// Say ( JMM , D4-Cyrus-JMM-1 ) ;
32611: LD_EXP 14
32615: PPUSH
32616: LD_STRING D4-Cyrus-JMM-1
32618: PPUSH
32619: CALL_OW 88
// end ; end else
32623: GO 33417
// if unit = Bobby then
32625: LD_VAR 0 1
32629: PUSH
32630: LD_EXP 25
32634: EQUAL
32635: IFFALSE 32721
// begin if Bobby in selected then
32637: LD_EXP 25
32641: PUSH
32642: LD_EXP 3
32646: IN
32647: IFFALSE 32683
// begin Say ( Bobby , D3-Bobby-Bobby-1 ) ;
32649: LD_EXP 25
32653: PPUSH
32654: LD_STRING D3-Bobby-Bobby-1
32656: PPUSH
32657: CALL_OW 88
// Say ( JMM , D3-Bobby-JMM-1 ) ;
32661: LD_EXP 14
32665: PPUSH
32666: LD_STRING D3-Bobby-JMM-1
32668: PPUSH
32669: CALL_OW 88
// joined := true ;
32673: LD_ADDR_VAR 0 5
32677: PUSH
32678: LD_INT 1
32680: ST_TO_ADDR
// end else
32681: GO 32719
// begin Say ( Bobby , D4-Bobby-Bobby-1 ) ;
32683: LD_EXP 25
32687: PPUSH
32688: LD_STRING D4-Bobby-Bobby-1
32690: PPUSH
32691: CALL_OW 88
// Say ( JMM , D4-Bobby-JMM-1 ) ;
32695: LD_EXP 14
32699: PPUSH
32700: LD_STRING D4-Bobby-JMM-1
32702: PPUSH
32703: CALL_OW 88
// Say ( Bobby , D4-Bobby-Bobby-2 ) ;
32707: LD_EXP 25
32711: PPUSH
32712: LD_STRING D4-Bobby-Bobby-2
32714: PPUSH
32715: CALL_OW 88
// end ; end else
32719: GO 33417
// if unit = Cornel then
32721: LD_VAR 0 1
32725: PUSH
32726: LD_EXP 31
32730: EQUAL
32731: IFFALSE 32829
// begin if Cornel in selected then
32733: LD_EXP 31
32737: PUSH
32738: LD_EXP 3
32742: IN
32743: IFFALSE 32791
// begin Say ( Cornel , D3-Mark-Corn-1 ) ;
32745: LD_EXP 31
32749: PPUSH
32750: LD_STRING D3-Mark-Corn-1
32752: PPUSH
32753: CALL_OW 88
// Say ( JMM , D3-Mark-JMM-1 ) ;
32757: LD_EXP 14
32761: PPUSH
32762: LD_STRING D3-Mark-JMM-1
32764: PPUSH
32765: CALL_OW 88
// Say ( Cornel , D3-Mark-Corn-2 ) ;
32769: LD_EXP 31
32773: PPUSH
32774: LD_STRING D3-Mark-Corn-2
32776: PPUSH
32777: CALL_OW 88
// joined := true ;
32781: LD_ADDR_VAR 0 5
32785: PUSH
32786: LD_INT 1
32788: ST_TO_ADDR
// end else
32789: GO 32827
// begin Say ( Cornel , D4-Mark-Corn-1 ) ;
32791: LD_EXP 31
32795: PPUSH
32796: LD_STRING D4-Mark-Corn-1
32798: PPUSH
32799: CALL_OW 88
// Say ( JMM , D3-Joan-JMM-1 ) ;
32803: LD_EXP 14
32807: PPUSH
32808: LD_STRING D3-Joan-JMM-1
32810: PPUSH
32811: CALL_OW 88
// Say ( Cornel , D4-Mark-Corn-2 ) ;
32815: LD_EXP 31
32819: PPUSH
32820: LD_STRING D4-Mark-Corn-2
32822: PPUSH
32823: CALL_OW 88
// end ; end else
32827: GO 33417
// if unit = Gary then
32829: LD_VAR 0 1
32833: PUSH
32834: LD_EXP 32
32838: EQUAL
32839: IFFALSE 32923
// begin if Gary in selected then
32841: LD_EXP 32
32845: PUSH
32846: LD_EXP 3
32850: IN
32851: IFFALSE 32887
// begin Say ( Gary , D3-Gary-Gary-1 ) ;
32853: LD_EXP 32
32857: PPUSH
32858: LD_STRING D3-Gary-Gary-1
32860: PPUSH
32861: CALL_OW 88
// Say ( JMM , D3-Gary-JMM-1 ) ;
32865: LD_EXP 14
32869: PPUSH
32870: LD_STRING D3-Gary-JMM-1
32872: PPUSH
32873: CALL_OW 88
// joined := true ;
32877: LD_ADDR_VAR 0 5
32881: PUSH
32882: LD_INT 1
32884: ST_TO_ADDR
// end else
32885: GO 32921
// begin Say ( Gary , D4-Gary-Gary-1 ) ;
32887: LD_EXP 32
32891: PPUSH
32892: LD_STRING D4-Gary-Gary-1
32894: PPUSH
32895: CALL_OW 88
// SetSide ( Gary , 1 ) ;
32899: LD_EXP 32
32903: PPUSH
32904: LD_INT 1
32906: PPUSH
32907: CALL_OW 235
// DialogueOff ;
32911: CALL_OW 7
// InGameOff ;
32915: CALL_OW 9
// exit ;
32919: GO 33609
// end ; end else
32921: GO 33417
// if unit = Kikuchi then
32923: LD_VAR 0 1
32927: PUSH
32928: LD_EXP 34
32932: EQUAL
32933: IFFALSE 33017
// begin if Kikuchi in selected then
32935: LD_EXP 34
32939: PUSH
32940: LD_EXP 3
32944: IN
32945: IFFALSE 32981
// begin Say ( Kikuchi , D3-Yamako-Yam-1 ) ;
32947: LD_EXP 34
32951: PPUSH
32952: LD_STRING D3-Yamako-Yam-1
32954: PPUSH
32955: CALL_OW 88
// Say ( JMM , D3-Soldier2-JMM-1 ) ;
32959: LD_EXP 14
32963: PPUSH
32964: LD_STRING D3-Soldier2-JMM-1
32966: PPUSH
32967: CALL_OW 88
// joined := true ;
32971: LD_ADDR_VAR 0 5
32975: PUSH
32976: LD_INT 1
32978: ST_TO_ADDR
// end else
32979: GO 33015
// begin Say ( Kikuchi , D4-Yamako-Yam-1 ) ;
32981: LD_EXP 34
32985: PPUSH
32986: LD_STRING D4-Yamako-Yam-1
32988: PPUSH
32989: CALL_OW 88
// SetSide ( Kikuchi , 1 ) ;
32993: LD_EXP 34
32997: PPUSH
32998: LD_INT 1
33000: PPUSH
33001: CALL_OW 235
// DialogueOff ;
33005: CALL_OW 7
// InGameOff ;
33009: CALL_OW 9
// exit ;
33013: GO 33609
// end ; end else
33015: GO 33417
// if unit = Gladstone then
33017: LD_VAR 0 1
33021: PUSH
33022: LD_EXP 29
33026: EQUAL
33027: IFFALSE 33101
// begin if Gladstone in selected then
33029: LD_EXP 29
33033: PUSH
33034: LD_EXP 3
33038: IN
33039: IFFALSE 33075
// begin joined := true ;
33041: LD_ADDR_VAR 0 5
33045: PUSH
33046: LD_INT 1
33048: ST_TO_ADDR
// Say ( JMM , D3-Tim-JMM-1 ) ;
33049: LD_EXP 14
33053: PPUSH
33054: LD_STRING D3-Tim-JMM-1
33056: PPUSH
33057: CALL_OW 88
// Say ( Gladstone , D3-Tim-Glad-1 ) ;
33061: LD_EXP 29
33065: PPUSH
33066: LD_STRING D3-Tim-Glad-1
33068: PPUSH
33069: CALL_OW 88
// end else
33073: GO 33099
// begin Say ( JMM , D4-Tim-JMM-1 ) ;
33075: LD_EXP 14
33079: PPUSH
33080: LD_STRING D4-Tim-JMM-1
33082: PPUSH
33083: CALL_OW 88
// Say ( Gladstone , D4-Tim-Glad-1 ) ;
33087: LD_EXP 29
33091: PPUSH
33092: LD_STRING D4-Tim-Glad-1
33094: PPUSH
33095: CALL_OW 88
// end ; end else
33099: GO 33417
// if unit = Denis then
33101: LD_VAR 0 1
33105: PUSH
33106: LD_EXP 27
33110: EQUAL
33111: IFFALSE 33147
// begin joined := true ;
33113: LD_ADDR_VAR 0 5
33117: PUSH
33118: LD_INT 1
33120: ST_TO_ADDR
// Say ( Denis , D3-Denis-Den-1 ) ;
33121: LD_EXP 27
33125: PPUSH
33126: LD_STRING D3-Denis-Den-1
33128: PPUSH
33129: CALL_OW 88
// Say ( JMM , D3-Denis-JMM-1 ) ;
33133: LD_EXP 14
33137: PPUSH
33138: LD_STRING D3-Denis-JMM-1
33140: PPUSH
33141: CALL_OW 88
// end else
33145: GO 33417
// if unit = Simms then
33147: LD_VAR 0 1
33151: PUSH
33152: LD_EXP 35
33156: EQUAL
33157: IFFALSE 33193
// begin joined := true ;
33159: LD_ADDR_VAR 0 5
33163: PUSH
33164: LD_INT 1
33166: ST_TO_ADDR
// Say ( Simms , D3-Simms-Sim-1 ) ;
33167: LD_EXP 35
33171: PPUSH
33172: LD_STRING D3-Simms-Sim-1
33174: PPUSH
33175: CALL_OW 88
// Say ( JMM , D3-Simms-JMM-1 ) ;
33179: LD_EXP 14
33183: PPUSH
33184: LD_STRING D3-Simms-JMM-1
33186: PPUSH
33187: CALL_OW 88
// end else
33191: GO 33417
// if unit = DeltaDoctor then
33193: LD_VAR 0 1
33197: PUSH
33198: LD_EXP 37
33202: EQUAL
33203: IFFALSE 33239
// begin joined := true ;
33205: LD_ADDR_VAR 0 5
33209: PUSH
33210: LD_INT 1
33212: ST_TO_ADDR
// Say ( DeltaDoctor , D3-Soldier1-Sol1-1 ) ;
33213: LD_EXP 37
33217: PPUSH
33218: LD_STRING D3-Soldier1-Sol1-1
33220: PPUSH
33221: CALL_OW 88
// Say ( JMM , D3-Soldier1-JMM-1 ) ;
33225: LD_EXP 14
33229: PPUSH
33230: LD_STRING D3-Soldier1-JMM-1
33232: PPUSH
33233: CALL_OW 88
// end else
33237: GO 33417
// begin joined := unit in selected ;
33239: LD_ADDR_VAR 0 5
33243: PUSH
33244: LD_VAR 0 1
33248: PUSH
33249: LD_EXP 3
33253: IN
33254: ST_TO_ADDR
// if joined then
33255: LD_VAR 0 5
33259: IFFALSE 33328
// begin if GetSex ( unit ) = sex_male then
33261: LD_VAR 0 1
33265: PPUSH
33266: CALL_OW 258
33270: PUSH
33271: LD_INT 1
33273: EQUAL
33274: IFFALSE 33302
// begin Say ( unit , D3-Soldier1-Sol1-1 ) ;
33276: LD_VAR 0 1
33280: PPUSH
33281: LD_STRING D3-Soldier1-Sol1-1
33283: PPUSH
33284: CALL_OW 88
// Say ( JMM , D3-Soldier1-JMM-1 ) ;
33288: LD_EXP 14
33292: PPUSH
33293: LD_STRING D3-Soldier1-JMM-1
33295: PPUSH
33296: CALL_OW 88
// end else
33300: GO 33326
// begin Say ( unit , D3-Soldier2-FSol2-1 ) ;
33302: LD_VAR 0 1
33306: PPUSH
33307: LD_STRING D3-Soldier2-FSol2-1
33309: PPUSH
33310: CALL_OW 88
// Say ( JMM , D3-Soldier2-JMM-1 ) ;
33314: LD_EXP 14
33318: PPUSH
33319: LD_STRING D3-Soldier2-JMM-1
33321: PPUSH
33322: CALL_OW 88
// end ; end else
33326: GO 33417
// begin if GetSex ( unit ) = sex_male then
33328: LD_VAR 0 1
33332: PPUSH
33333: CALL_OW 258
33337: PUSH
33338: LD_INT 1
33340: EQUAL
33341: IFFALSE 33381
// begin Say ( unit , D4-Soldier2-Sol1-1 ) ;
33343: LD_VAR 0 1
33347: PPUSH
33348: LD_STRING D4-Soldier2-Sol1-1
33350: PPUSH
33351: CALL_OW 88
// Say ( JMM , D4-Soldier2-JMM-1 ) ;
33355: LD_EXP 14
33359: PPUSH
33360: LD_STRING D4-Soldier2-JMM-1
33362: PPUSH
33363: CALL_OW 88
// Say ( unit , D4-Soldier2-Sol2-1 ) ;
33367: LD_VAR 0 1
33371: PPUSH
33372: LD_STRING D4-Soldier2-Sol2-1
33374: PPUSH
33375: CALL_OW 88
// end else
33379: GO 33417
// begin Say ( unit , D4-Soldier1-FSol1-1 ) ;
33381: LD_VAR 0 1
33385: PPUSH
33386: LD_STRING D4-Soldier1-FSol1-1
33388: PPUSH
33389: CALL_OW 88
// Say ( JMM , D4-Soldier1-JMM-1 ) ;
33393: LD_EXP 14
33397: PPUSH
33398: LD_STRING D4-Soldier1-JMM-1
33400: PPUSH
33401: CALL_OW 88
// Say ( unit , D4-Soldier1-FSol1-2 ) ;
33405: LD_VAR 0 1
33409: PPUSH
33410: LD_STRING D4-Soldier1-FSol1-2
33412: PPUSH
33413: CALL_OW 88
// end ; end ; end ; DialogueOff ;
33417: CALL_OW 7
// InGameOff ;
33421: CALL_OW 9
// if building then
33425: LD_VAR 0 3
33429: IFFALSE 33530
// begin SetSide ( JMM , side ) ;
33431: LD_EXP 14
33435: PPUSH
33436: LD_VAR 0 4
33440: PPUSH
33441: CALL_OW 235
// ComExitBuilding ( JMM ) ;
33445: LD_EXP 14
33449: PPUSH
33450: CALL_OW 122
// if joined then
33454: LD_VAR 0 5
33458: IFFALSE 33497
// begin SetSide ( unit , side ) ;
33460: LD_VAR 0 1
33464: PPUSH
33465: LD_VAR 0 4
33469: PPUSH
33470: CALL_OW 235
// SetSide ( building , 1 ) ;
33474: LD_VAR 0 3
33478: PPUSH
33479: LD_INT 1
33481: PPUSH
33482: CALL_OW 235
// ComExitBuilding ( unit ) ;
33486: LD_VAR 0 1
33490: PPUSH
33491: CALL_OW 122
// end else
33495: GO 33528
// begin wait ( 0 0$10 ) ;
33497: LD_INT 350
33499: PPUSH
33500: CALL_OW 67
// SetSide ( unit , 1 ) ;
33504: LD_VAR 0 1
33508: PPUSH
33509: LD_INT 1
33511: PPUSH
33512: CALL_OW 235
// SetSide ( building , 1 ) ;
33516: LD_VAR 0 3
33520: PPUSH
33521: LD_INT 1
33523: PPUSH
33524: CALL_OW 235
// end ; end else
33528: GO 33609
// begin ComStop ( [ JMM , unit ] ) ;
33530: LD_EXP 14
33534: PUSH
33535: LD_VAR 0 1
33539: PUSH
33540: EMPTY
33541: LIST
33542: LIST
33543: PPUSH
33544: CALL_OW 141
// if joined then
33548: LD_VAR 0 5
33552: IFFALSE 33570
// SetSide ( unit , side ) else
33554: LD_VAR 0 1
33558: PPUSH
33559: LD_VAR 0 4
33563: PPUSH
33564: CALL_OW 235
33568: GO 33609
// begin repeat wait ( 0 0$1 ) ;
33570: LD_INT 35
33572: PPUSH
33573: CALL_OW 67
// until GetDistUnits ( JMM , unit ) > 11 ;
33577: LD_EXP 14
33581: PPUSH
33582: LD_VAR 0 1
33586: PPUSH
33587: CALL_OW 296
33591: PUSH
33592: LD_INT 11
33594: GREATER
33595: IFFALSE 33570
// SetSide ( unit , 1 ) ;
33597: LD_VAR 0 1
33601: PPUSH
33602: LD_INT 1
33604: PPUSH
33605: CALL_OW 235
// end ; end ; end ;
33609: LD_VAR 0 2
33613: RET
// every 0 0$01 trigger IsInUnit ( JMM ) = amlab do
33614: LD_EXP 14
33618: PPUSH
33619: CALL_OW 310
33623: PUSH
33624: LD_INT 47
33626: EQUAL
33627: IFFALSE 33695
33629: GO 33631
33631: DISABLE
// begin ChangeMissionObjectives ( M1a ) ;
33632: LD_STRING M1a
33634: PPUSH
33635: CALL_OW 337
// SetTech ( tech_Soporific , 7 , state_researched ) ;
33639: LD_INT 13
33641: PPUSH
33642: LD_INT 7
33644: PPUSH
33645: LD_INT 2
33647: PPUSH
33648: CALL_OW 322
// SetTech ( tech_SpacAnom , 7 , state_researched ) ;
33652: LD_INT 29
33654: PPUSH
33655: LD_INT 7
33657: PPUSH
33658: LD_INT 2
33660: PPUSH
33661: CALL_OW 322
// SetClass ( JMM , class_bazooker ) ;
33665: LD_EXP 14
33669: PPUSH
33670: LD_INT 9
33672: PPUSH
33673: CALL_OW 336
// can_escape := true ;
33677: LD_ADDR_EXP 6
33681: PUSH
33682: LD_INT 1
33684: ST_TO_ADDR
// SetAreaMapShow ( escape_area , 1 ) ;
33685: LD_INT 19
33687: PPUSH
33688: LD_INT 1
33690: PPUSH
33691: CALL_OW 424
// end ;
33695: END
// every 0 0$1 trigger GetLives ( Powell ) < 999 do
33696: LD_EXP 16
33700: PPUSH
33701: CALL_OW 256
33705: PUSH
33706: LD_INT 999
33708: LESS
33709: IFFALSE 33760
33711: GO 33713
33713: DISABLE
// begin enable ;
33714: ENABLE
// if HexInfo ( 25 , 48 ) = Powell then
33715: LD_INT 25
33717: PPUSH
33718: LD_INT 48
33720: PPUSH
33721: CALL_OW 428
33725: PUSH
33726: LD_EXP 16
33730: EQUAL
33731: IFFALSE 33745
// begin RemoveUnit ( Powell ) ;
33733: LD_EXP 16
33737: PPUSH
33738: CALL_OW 64
// disable ;
33742: DISABLE
// end else
33743: GO 33760
// ComMoveXY ( Powell , 25 , 48 ) ;
33745: LD_EXP 16
33749: PPUSH
33750: LD_INT 25
33752: PPUSH
33753: LD_INT 48
33755: PPUSH
33756: CALL_OW 111
// end ;
33760: END
// every 0 0$1 trigger FilterAllUnits ( [ [ f_side , 4 ] , [ f_type , unit_human ] , [ f_not , [ f_lives , 990 ] ] ] ) diff Roth do var i ;
33761: LD_INT 22
33763: PUSH
33764: LD_INT 4
33766: PUSH
33767: EMPTY
33768: LIST
33769: LIST
33770: PUSH
33771: LD_INT 21
33773: PUSH
33774: LD_INT 1
33776: PUSH
33777: EMPTY
33778: LIST
33779: LIST
33780: PUSH
33781: LD_INT 3
33783: PUSH
33784: LD_INT 24
33786: PUSH
33787: LD_INT 990
33789: PUSH
33790: EMPTY
33791: LIST
33792: LIST
33793: PUSH
33794: EMPTY
33795: LIST
33796: LIST
33797: PUSH
33798: EMPTY
33799: LIST
33800: LIST
33801: LIST
33802: PPUSH
33803: CALL_OW 69
33807: PUSH
33808: LD_EXP 15
33812: DIFF
33813: IFFALSE 33957
33815: GO 33817
33817: DISABLE
33818: LD_INT 0
33820: PPUSH
// begin enable ;
33821: ENABLE
// for i in FilterAllUnits ( [ [ f_side , 4 ] , [ f_type , unit_human ] , [ f_not , [ f_lives , 990 ] ] ] ) diff Roth do
33822: LD_ADDR_VAR 0 1
33826: PUSH
33827: LD_INT 22
33829: PUSH
33830: LD_INT 4
33832: PUSH
33833: EMPTY
33834: LIST
33835: LIST
33836: PUSH
33837: LD_INT 21
33839: PUSH
33840: LD_INT 1
33842: PUSH
33843: EMPTY
33844: LIST
33845: LIST
33846: PUSH
33847: LD_INT 3
33849: PUSH
33850: LD_INT 24
33852: PUSH
33853: LD_INT 990
33855: PUSH
33856: EMPTY
33857: LIST
33858: LIST
33859: PUSH
33860: EMPTY
33861: LIST
33862: LIST
33863: PUSH
33864: EMPTY
33865: LIST
33866: LIST
33867: LIST
33868: PPUSH
33869: CALL_OW 69
33873: PUSH
33874: LD_EXP 15
33878: DIFF
33879: PUSH
33880: FOR_IN
33881: IFFALSE 33955
// begin ComFree ( i ) ;
33883: LD_VAR 0 1
33887: PPUSH
33888: CALL_OW 139
// SetSide ( i , 1 ) ;
33892: LD_VAR 0 1
33896: PPUSH
33897: LD_INT 1
33899: PPUSH
33900: CALL_OW 235
// if GetDistUnits ( i , JMM ) < 14 then
33904: LD_VAR 0 1
33908: PPUSH
33909: LD_EXP 14
33913: PPUSH
33914: CALL_OW 296
33918: PUSH
33919: LD_INT 14
33921: LESS
33922: IFFALSE 33953
// ComAgressiveMove ( i , GetX ( JMM ) , GetY ( JMM ) ) ;
33924: LD_VAR 0 1
33928: PPUSH
33929: LD_EXP 14
33933: PPUSH
33934: CALL_OW 250
33938: PPUSH
33939: LD_EXP 14
33943: PPUSH
33944: CALL_OW 251
33948: PPUSH
33949: CALL_OW 114
// end ;
33953: GO 33880
33955: POP
33956: POP
// end ;
33957: PPOPN 1
33959: END
// every 0 0$01 trigger FilterAllUnits ( [ [ f_side , 4 ] , [ f_weapon , us_cargo_bay ] ] ) do var i ;
33960: LD_INT 22
33962: PUSH
33963: LD_INT 4
33965: PUSH
33966: EMPTY
33967: LIST
33968: LIST
33969: PUSH
33970: LD_INT 34
33972: PUSH
33973: LD_INT 12
33975: PUSH
33976: EMPTY
33977: LIST
33978: LIST
33979: PUSH
33980: EMPTY
33981: LIST
33982: LIST
33983: PPUSH
33984: CALL_OW 69
33988: IFFALSE 34070
33990: GO 33992
33992: DISABLE
33993: LD_INT 0
33995: PPUSH
// begin enable ;
33996: ENABLE
// for i in FilterAllUnits ( [ [ f_side , 4 ] , [ f_weapon , us_cargo_bay ] ] ) do
33997: LD_ADDR_VAR 0 1
34001: PUSH
34002: LD_INT 22
34004: PUSH
34005: LD_INT 4
34007: PUSH
34008: EMPTY
34009: LIST
34010: LIST
34011: PUSH
34012: LD_INT 34
34014: PUSH
34015: LD_INT 12
34017: PUSH
34018: EMPTY
34019: LIST
34020: LIST
34021: PUSH
34022: EMPTY
34023: LIST
34024: LIST
34025: PPUSH
34026: CALL_OW 69
34030: PUSH
34031: FOR_IN
34032: IFFALSE 34068
// if GetDistUnits ( i , JMM ) < 6 then
34034: LD_VAR 0 1
34038: PPUSH
34039: LD_EXP 14
34043: PPUSH
34044: CALL_OW 296
34048: PUSH
34049: LD_INT 6
34051: LESS
34052: IFFALSE 34066
// SetSide ( i , 7 ) ;
34054: LD_VAR 0 1
34058: PPUSH
34059: LD_INT 7
34061: PPUSH
34062: CALL_OW 235
34066: GO 34031
34068: POP
34069: POP
// end ;
34070: PPOPN 1
34072: END
// every 0 0$01 trigger can_escape and not FilterUnitsExceptArea ( escape_area , [ [ f_side , 7 ] , [ f_type , unit_human ] ] ) and not FindArtifact ( 3 ) and not FindArtifact ( 5 ) do var all_taken , tmp , m1 , m2 , m3 ;
34073: LD_EXP 6
34077: PUSH
34078: LD_INT 19
34080: PPUSH
34081: LD_INT 22
34083: PUSH
34084: LD_INT 7
34086: PUSH
34087: EMPTY
34088: LIST
34089: LIST
34090: PUSH
34091: LD_INT 21
34093: PUSH
34094: LD_INT 1
34096: PUSH
34097: EMPTY
34098: LIST
34099: LIST
34100: PUSH
34101: EMPTY
34102: LIST
34103: LIST
34104: PPUSH
34105: CALL_OW 71
34109: NOT
34110: AND
34111: PUSH
34112: LD_INT 3
34114: PPUSH
34115: CALL_OW 469
34119: NOT
34120: AND
34121: PUSH
34122: LD_INT 5
34124: PPUSH
34125: CALL_OW 469
34129: NOT
34130: AND
34131: IFFALSE 35753
34133: GO 34135
34135: DISABLE
34136: LD_INT 0
34138: PPUSH
34139: PPUSH
34140: PPUSH
34141: PPUSH
34142: PPUSH
// begin m1 := false ;
34143: LD_ADDR_VAR 0 3
34147: PUSH
34148: LD_INT 0
34150: ST_TO_ADDR
// m2 := false ;
34151: LD_ADDR_VAR 0 4
34155: PUSH
34156: LD_INT 0
34158: ST_TO_ADDR
// m3 := false ;
34159: LD_ADDR_VAR 0 5
34163: PUSH
34164: LD_INT 0
34166: ST_TO_ADDR
// all_taken := ( UnitFilter ( selected , [ [ f_side , 4 ] , [ f_type , unit_human ] ] ) = 0 ) ;
34167: LD_ADDR_VAR 0 1
34171: PUSH
34172: LD_EXP 3
34176: PPUSH
34177: LD_INT 22
34179: PUSH
34180: LD_INT 4
34182: PUSH
34183: EMPTY
34184: LIST
34185: LIST
34186: PUSH
34187: LD_INT 21
34189: PUSH
34190: LD_INT 1
34192: PUSH
34193: EMPTY
34194: LIST
34195: LIST
34196: PUSH
34197: EMPTY
34198: LIST
34199: LIST
34200: PPUSH
34201: CALL_OW 72
34205: PUSH
34206: LD_INT 0
34208: EQUAL
34209: ST_TO_ADDR
// if not all_taken then
34210: LD_VAR 0 1
34214: NOT
34215: IFFALSE 34356
// case query ( Q1 ) of 1 :
34217: LD_STRING Q1
34219: PPUSH
34220: CALL_OW 97
34224: PUSH
34225: LD_INT 1
34227: DOUBLE
34228: EQUAL
34229: IFTRUE 34233
34231: GO 34344
34233: POP
// begin repeat wait ( 0 0$1 ) ;
34234: LD_INT 35
34236: PPUSH
34237: CALL_OW 67
// until UnitFilter ( selected , [ [ f_side , 4 ] , [ f_type , unit_human ] ] ) = 0 and not FilterUnitsExceptArea ( escape_area , [ [ f_side , 7 ] , [ f_type , unit_human ] ] ) and not FindArtifact ( 3 ) and not FindArtifact ( 5 ) ;
34241: LD_EXP 3
34245: PPUSH
34246: LD_INT 22
34248: PUSH
34249: LD_INT 4
34251: PUSH
34252: EMPTY
34253: LIST
34254: LIST
34255: PUSH
34256: LD_INT 21
34258: PUSH
34259: LD_INT 1
34261: PUSH
34262: EMPTY
34263: LIST
34264: LIST
34265: PUSH
34266: EMPTY
34267: LIST
34268: LIST
34269: PPUSH
34270: CALL_OW 72
34274: PUSH
34275: LD_INT 0
34277: EQUAL
34278: PUSH
34279: LD_INT 19
34281: PPUSH
34282: LD_INT 22
34284: PUSH
34285: LD_INT 7
34287: PUSH
34288: EMPTY
34289: LIST
34290: LIST
34291: PUSH
34292: LD_INT 21
34294: PUSH
34295: LD_INT 1
34297: PUSH
34298: EMPTY
34299: LIST
34300: LIST
34301: PUSH
34302: EMPTY
34303: LIST
34304: LIST
34305: PPUSH
34306: CALL_OW 71
34310: NOT
34311: AND
34312: PUSH
34313: LD_INT 3
34315: PPUSH
34316: CALL_OW 469
34320: NOT
34321: AND
34322: PUSH
34323: LD_INT 5
34325: PPUSH
34326: CALL_OW 469
34330: NOT
34331: AND
34332: IFFALSE 34234
// all_taken := true ;
34334: LD_ADDR_VAR 0 1
34338: PUSH
34339: LD_INT 1
34341: ST_TO_ADDR
// end ; 2 :
34342: GO 34356
34344: LD_INT 2
34346: DOUBLE
34347: EQUAL
34348: IFTRUE 34352
34350: GO 34355
34352: POP
// ; end ;
34353: GO 34356
34355: POP
// if team_kill_counter then
34356: LD_EXP 9
34360: IFFALSE 34376
// Say ( JMM , D5-JMM-1 ) else
34362: LD_EXP 14
34366: PPUSH
34367: LD_STRING D5-JMM-1
34369: PPUSH
34370: CALL_OW 88
34374: GO 34388
// Say ( JMM , D5-JMM-1a ) ;
34376: LD_EXP 14
34380: PPUSH
34381: LD_STRING D5-JMM-1a
34383: PPUSH
34384: CALL_OW 88
// if ( FilterAllUnits ( [ [ f_side , 7 ] , [ f_type , unit_human ] , [ f_nation , 1 ] ] ) diff [ JMM , Roth ] ) >= 10 then
34388: LD_INT 22
34390: PUSH
34391: LD_INT 7
34393: PUSH
34394: EMPTY
34395: LIST
34396: LIST
34397: PUSH
34398: LD_INT 21
34400: PUSH
34401: LD_INT 1
34403: PUSH
34404: EMPTY
34405: LIST
34406: LIST
34407: PUSH
34408: LD_INT 23
34410: PUSH
34411: LD_INT 1
34413: PUSH
34414: EMPTY
34415: LIST
34416: LIST
34417: PUSH
34418: EMPTY
34419: LIST
34420: LIST
34421: LIST
34422: PPUSH
34423: CALL_OW 69
34427: PUSH
34428: LD_EXP 14
34432: PUSH
34433: LD_EXP 15
34437: PUSH
34438: EMPTY
34439: LIST
34440: LIST
34441: DIFF
34442: PUSH
34443: LD_INT 10
34445: GREATEREQUAL
34446: IFFALSE 34455
// SetAchievement ( ACH_TEAM ) ;
34448: LD_STRING ACH_TEAM
34450: PPUSH
34451: CALL_OW 543
// if not invis_used then
34455: LD_EXP 12
34459: NOT
34460: IFFALSE 34476
// begin wait ( 3 ) ;
34462: LD_INT 3
34464: PPUSH
34465: CALL_OW 67
// SetAchievement ( ACH_NOINVIS ) ;
34469: LD_STRING ACH_NOINVIS
34471: PPUSH
34472: CALL_OW 543
// end ; if not alert then
34476: LD_EXP 13
34480: NOT
34481: IFFALSE 34497
// begin wait ( 3 ) ;
34483: LD_INT 3
34485: PPUSH
34486: CALL_OW 67
// SetAchievement ( ACH_ALARM ) ;
34490: LD_STRING ACH_ALARM
34492: PPUSH
34493: CALL_OW 543
// end ; if tick < 15 15$00 then
34497: LD_OWVAR 1
34501: PUSH
34502: LD_INT 31500
34504: LESS
34505: IFFALSE 34521
// begin wait ( 3 ) ;
34507: LD_INT 3
34509: PPUSH
34510: CALL_OW 67
// SetAchievement ( ACH_ASPEED_16 ) ;
34514: LD_STRING ACH_ASPEED_16
34516: PPUSH
34517: CALL_OW 543
// end ; if all_taken then
34521: LD_VAR 0 1
34525: IFFALSE 34547
// begin AddMedal ( All , 1 ) ;
34527: LD_STRING All
34529: PPUSH
34530: LD_INT 1
34532: PPUSH
34533: CALL_OW 101
// m1 := true ;
34537: LD_ADDR_VAR 0 3
34541: PUSH
34542: LD_INT 1
34544: ST_TO_ADDR
// end else
34545: GO 34558
// AddMedal ( All , - 1 ) ;
34547: LD_STRING All
34549: PPUSH
34550: LD_INT 1
34552: NEG
34553: PPUSH
34554: CALL_OW 101
// if team_kill_counter then
34558: LD_EXP 9
34562: IFFALSE 34577
// AddMedal ( Save , - 1 ) else
34564: LD_STRING Save
34566: PPUSH
34567: LD_INT 1
34569: NEG
34570: PPUSH
34571: CALL_OW 101
34575: GO 34595
// begin AddMedal ( Save , 1 ) ;
34577: LD_STRING Save
34579: PPUSH
34580: LD_INT 1
34582: PPUSH
34583: CALL_OW 101
// m2 := true ;
34587: LD_ADDR_VAR 0 4
34591: PUSH
34592: LD_INT 1
34594: ST_TO_ADDR
// end ; if friends_kill_counter >= [ 2 , 1 , 1 ] [ Difficulty ] then
34595: LD_EXP 8
34599: PUSH
34600: LD_INT 2
34602: PUSH
34603: LD_INT 1
34605: PUSH
34606: LD_INT 1
34608: PUSH
34609: EMPTY
34610: LIST
34611: LIST
34612: LIST
34613: PUSH
34614: LD_OWVAR 67
34618: ARRAY
34619: GREATEREQUAL
34620: IFFALSE 34635
// AddMedal ( Friendship , - 1 ) else
34622: LD_STRING Friendship
34624: PPUSH
34625: LD_INT 1
34627: NEG
34628: PPUSH
34629: CALL_OW 101
34633: GO 34653
// begin AddMedal ( Friendship , 1 ) ;
34635: LD_STRING Friendship
34637: PPUSH
34638: LD_INT 1
34640: PPUSH
34641: CALL_OW 101
// m3 := true ;
34645: LD_ADDR_VAR 0 5
34649: PUSH
34650: LD_INT 1
34652: ST_TO_ADDR
// end ; if m1 and m2 and m3 and Difficulty = 3 then
34653: LD_VAR 0 3
34657: PUSH
34658: LD_VAR 0 4
34662: AND
34663: PUSH
34664: LD_VAR 0 5
34668: AND
34669: PUSH
34670: LD_OWVAR 67
34674: PUSH
34675: LD_INT 3
34677: EQUAL
34678: AND
34679: IFFALSE 34691
// SetAchievementEX ( ACH_AMER , 16 ) ;
34681: LD_STRING ACH_AMER
34683: PPUSH
34684: LD_INT 16
34686: PPUSH
34687: CALL_OW 564
// GiveMedals ( MAIN ) ;
34691: LD_STRING MAIN
34693: PPUSH
34694: CALL_OW 102
// tmp := FilterAllUnits ( [ [ [ f_side , 7 ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] , [ f_class , 5 ] , [ f_class , 8 ] , [ f_class , 9 ] ] ] ] ) ;
34698: LD_ADDR_VAR 0 2
34702: PUSH
34703: LD_INT 22
34705: PUSH
34706: LD_INT 7
34708: PUSH
34709: EMPTY
34710: LIST
34711: LIST
34712: PUSH
34713: LD_INT 2
34715: PUSH
34716: LD_INT 25
34718: PUSH
34719: LD_INT 1
34721: PUSH
34722: EMPTY
34723: LIST
34724: LIST
34725: PUSH
34726: LD_INT 25
34728: PUSH
34729: LD_INT 2
34731: PUSH
34732: EMPTY
34733: LIST
34734: LIST
34735: PUSH
34736: LD_INT 25
34738: PUSH
34739: LD_INT 3
34741: PUSH
34742: EMPTY
34743: LIST
34744: LIST
34745: PUSH
34746: LD_INT 25
34748: PUSH
34749: LD_INT 4
34751: PUSH
34752: EMPTY
34753: LIST
34754: LIST
34755: PUSH
34756: LD_INT 25
34758: PUSH
34759: LD_INT 5
34761: PUSH
34762: EMPTY
34763: LIST
34764: LIST
34765: PUSH
34766: LD_INT 25
34768: PUSH
34769: LD_INT 8
34771: PUSH
34772: EMPTY
34773: LIST
34774: LIST
34775: PUSH
34776: LD_INT 25
34778: PUSH
34779: LD_INT 9
34781: PUSH
34782: EMPTY
34783: LIST
34784: LIST
34785: PUSH
34786: EMPTY
34787: LIST
34788: LIST
34789: LIST
34790: LIST
34791: LIST
34792: LIST
34793: LIST
34794: LIST
34795: PUSH
34796: EMPTY
34797: LIST
34798: LIST
34799: PUSH
34800: EMPTY
34801: LIST
34802: PPUSH
34803: CALL_OW 69
34807: ST_TO_ADDR
// RewardPeople ( tmp ^ Roth ) ;
34808: LD_VAR 0 2
34812: PUSH
34813: LD_EXP 15
34817: ADD
34818: PPUSH
34819: CALL_OW 43
// SaveCharacters ( JMM , 12a_JMM ) ;
34823: LD_EXP 14
34827: PPUSH
34828: LD_STRING 12a_JMM
34830: PPUSH
34831: CALL_OW 38
// if IsLive ( Roth ) then
34835: LD_EXP 15
34839: PPUSH
34840: CALL_OW 300
34844: IFFALSE 34858
// SaveCharacters ( Roth , 12a_Roth ) ;
34846: LD_EXP 15
34850: PPUSH
34851: LD_STRING 12a_Roth
34853: PPUSH
34854: CALL_OW 38
// if Lisa in tmp then
34858: LD_EXP 23
34862: PUSH
34863: LD_VAR 0 2
34867: IN
34868: IFFALSE 34884
// SaveCharacters ( Lisa , 12a_Lisa ) else
34870: LD_EXP 23
34874: PPUSH
34875: LD_STRING 12a_Lisa
34877: PPUSH
34878: CALL_OW 38
34882: GO 34902
// if Lisa then
34884: LD_EXP 23
34888: IFFALSE 34902
// SaveCharacters ( Lisa , 12p_Lisa ) ;
34890: LD_EXP 23
34894: PPUSH
34895: LD_STRING 12p_Lisa
34897: PPUSH
34898: CALL_OW 38
// if Donaldson in tmp then
34902: LD_EXP 24
34906: PUSH
34907: LD_VAR 0 2
34911: IN
34912: IFFALSE 34928
// SaveCharacters ( Donaldson , 12a_Donaldson ) else
34914: LD_EXP 24
34918: PPUSH
34919: LD_STRING 12a_Donaldson
34921: PPUSH
34922: CALL_OW 38
34926: GO 34946
// if Donaldson then
34928: LD_EXP 24
34932: IFFALSE 34946
// SaveCharacters ( Donaldson , 12p_Donaldson ) ;
34934: LD_EXP 24
34938: PPUSH
34939: LD_STRING 12p_Donaldson
34941: PPUSH
34942: CALL_OW 38
// if Bobby in tmp then
34946: LD_EXP 25
34950: PUSH
34951: LD_VAR 0 2
34955: IN
34956: IFFALSE 34972
// SaveCharacters ( Bobby , 12a_Bobby ) else
34958: LD_EXP 25
34962: PPUSH
34963: LD_STRING 12a_Bobby
34965: PPUSH
34966: CALL_OW 38
34970: GO 34990
// if Bobby then
34972: LD_EXP 25
34976: IFFALSE 34990
// SaveCharacters ( Bobby , 12p_Bobby ) ;
34978: LD_EXP 25
34982: PPUSH
34983: LD_STRING 12p_Bobby
34985: PPUSH
34986: CALL_OW 38
// if Cyrus in tmp then
34990: LD_EXP 26
34994: PUSH
34995: LD_VAR 0 2
34999: IN
35000: IFFALSE 35016
// SaveCharacters ( Cyrus , 12a_Cyrus ) else
35002: LD_EXP 26
35006: PPUSH
35007: LD_STRING 12a_Cyrus
35009: PPUSH
35010: CALL_OW 38
35014: GO 35034
// if Cyrus then
35016: LD_EXP 26
35020: IFFALSE 35034
// SaveCharacters ( Cyrus , 12p_Cyrus ) ;
35022: LD_EXP 26
35026: PPUSH
35027: LD_STRING 12p_Cyrus
35029: PPUSH
35030: CALL_OW 38
// if Denis in tmp then
35034: LD_EXP 27
35038: PUSH
35039: LD_VAR 0 2
35043: IN
35044: IFFALSE 35058
// SaveCharacters ( Denis , 12a_Denis ) ;
35046: LD_EXP 27
35050: PPUSH
35051: LD_STRING 12a_Denis
35053: PPUSH
35054: CALL_OW 38
// if Brown in tmp then
35058: LD_EXP 28
35062: PUSH
35063: LD_VAR 0 2
35067: IN
35068: IFFALSE 35084
// SaveCharacters ( Brown , 12a_Brown ) else
35070: LD_EXP 28
35074: PPUSH
35075: LD_STRING 12a_Brown
35077: PPUSH
35078: CALL_OW 38
35082: GO 35108
// if Brown in tmp then
35084: LD_EXP 28
35088: PUSH
35089: LD_VAR 0 2
35093: IN
35094: IFFALSE 35108
// SaveCharacters ( Brown , 12p_Brown ) ;
35096: LD_EXP 28
35100: PPUSH
35101: LD_STRING 12p_Brown
35103: PPUSH
35104: CALL_OW 38
// if Gladstone in tmp then
35108: LD_EXP 29
35112: PUSH
35113: LD_VAR 0 2
35117: IN
35118: IFFALSE 35134
// SaveCharacters ( Gladstone , 12a_Gladstone ) else
35120: LD_EXP 29
35124: PPUSH
35125: LD_STRING 12a_Gladstone
35127: PPUSH
35128: CALL_OW 38
35132: GO 35152
// if Gladstone then
35134: LD_EXP 29
35138: IFFALSE 35152
// SaveCharacters ( Gladstone , 12p_Gladstone ) ;
35140: LD_EXP 29
35144: PPUSH
35145: LD_STRING 12p_Gladstone
35147: PPUSH
35148: CALL_OW 38
// if Houten in tmp then
35152: LD_EXP 30
35156: PUSH
35157: LD_VAR 0 2
35161: IN
35162: IFFALSE 35178
// SaveCharacters ( Houten , 12a_Houten ) else
35164: LD_EXP 30
35168: PPUSH
35169: LD_STRING 12a_Houten
35171: PPUSH
35172: CALL_OW 38
35176: GO 35196
// if Houten then
35178: LD_EXP 30
35182: IFFALSE 35196
// SaveCharacters ( Houten , 12p_Houten ) ;
35184: LD_EXP 30
35188: PPUSH
35189: LD_STRING 12p_Houten
35191: PPUSH
35192: CALL_OW 38
// if Cornel in tmp then
35196: LD_EXP 31
35200: PUSH
35201: LD_VAR 0 2
35205: IN
35206: IFFALSE 35222
// SaveCharacters ( Cornel , 12a_Cornell ) else
35208: LD_EXP 31
35212: PPUSH
35213: LD_STRING 12a_Cornell
35215: PPUSH
35216: CALL_OW 38
35220: GO 35240
// if Cornel then
35222: LD_EXP 31
35226: IFFALSE 35240
// SaveCharacters ( Cornel , 12p_Cornell ) ;
35228: LD_EXP 31
35232: PPUSH
35233: LD_STRING 12p_Cornell
35235: PPUSH
35236: CALL_OW 38
// if Gary in tmp then
35240: LD_EXP 32
35244: PUSH
35245: LD_VAR 0 2
35249: IN
35250: IFFALSE 35266
// SaveCharacters ( Gary , 12a_Gary ) else
35252: LD_EXP 32
35256: PPUSH
35257: LD_STRING 12a_Gary
35259: PPUSH
35260: CALL_OW 38
35264: GO 35284
// if Gary then
35266: LD_EXP 32
35270: IFFALSE 35284
// SaveCharacters ( Gary , 12p_Gary ) ;
35272: LD_EXP 32
35276: PPUSH
35277: LD_STRING 12p_Gary
35279: PPUSH
35280: CALL_OW 38
// if Frank in tmp then
35284: LD_EXP 33
35288: PUSH
35289: LD_VAR 0 2
35293: IN
35294: IFFALSE 35308
// SaveCharacters ( Frank , 12a_Frank ) ;
35296: LD_EXP 33
35300: PPUSH
35301: LD_STRING 12a_Frank
35303: PPUSH
35304: CALL_OW 38
// if Kikuchi in tmp then
35308: LD_EXP 34
35312: PUSH
35313: LD_VAR 0 2
35317: IN
35318: IFFALSE 35334
// SaveCharacters ( Kikuchi , 12a_Kikuchi ) else
35320: LD_EXP 34
35324: PPUSH
35325: LD_STRING 12a_Kikuchi
35327: PPUSH
35328: CALL_OW 38
35332: GO 35352
// if Kikuchi then
35334: LD_EXP 34
35338: IFFALSE 35352
// SaveCharacters ( Kikuchi , 12p_Kikuchi ) ;
35340: LD_EXP 34
35344: PPUSH
35345: LD_STRING 12p_Kikuchi
35347: PPUSH
35348: CALL_OW 38
// if Simms in tmp then
35352: LD_EXP 35
35356: PUSH
35357: LD_VAR 0 2
35361: IN
35362: IFFALSE 35376
// SaveCharacters ( Simms , 12a_Simms ) ;
35364: LD_EXP 35
35368: PPUSH
35369: LD_STRING 12a_Simms
35371: PPUSH
35372: CALL_OW 38
// if Joan in tmp then
35376: LD_EXP 36
35380: PUSH
35381: LD_VAR 0 2
35385: IN
35386: IFFALSE 35400
// SaveCharacters ( Joan , 12a_Joan ) ;
35388: LD_EXP 36
35392: PPUSH
35393: LD_STRING 12a_Joan
35395: PPUSH
35396: CALL_OW 38
// if DeltaDoctor in tmp then
35400: LD_EXP 37
35404: PUSH
35405: LD_VAR 0 2
35409: IN
35410: IFFALSE 35424
// SaveCharacters ( DeltaDoctor , 12a_DeltaDoctor ) ;
35412: LD_EXP 37
35416: PPUSH
35417: LD_STRING 12a_DeltaDoctor
35419: PPUSH
35420: CALL_OW 38
// tmp := tmp diff [ JMM , Roth , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi , Simms , Joan , DeltaDoctor ] ;
35424: LD_ADDR_VAR 0 2
35428: PUSH
35429: LD_VAR 0 2
35433: PUSH
35434: LD_EXP 14
35438: PUSH
35439: LD_EXP 15
35443: PUSH
35444: LD_EXP 23
35448: PUSH
35449: LD_EXP 24
35453: PUSH
35454: LD_EXP 25
35458: PUSH
35459: LD_EXP 26
35463: PUSH
35464: LD_EXP 27
35468: PUSH
35469: LD_EXP 28
35473: PUSH
35474: LD_EXP 29
35478: PUSH
35479: LD_EXP 30
35483: PUSH
35484: LD_EXP 31
35488: PUSH
35489: LD_EXP 32
35493: PUSH
35494: LD_EXP 33
35498: PUSH
35499: LD_EXP 34
35503: PUSH
35504: LD_EXP 35
35508: PUSH
35509: LD_EXP 36
35513: PUSH
35514: LD_EXP 37
35518: PUSH
35519: EMPTY
35520: LIST
35521: LIST
35522: LIST
35523: LIST
35524: LIST
35525: LIST
35526: LIST
35527: LIST
35528: LIST
35529: LIST
35530: LIST
35531: LIST
35532: LIST
35533: LIST
35534: LIST
35535: LIST
35536: LIST
35537: DIFF
35538: ST_TO_ADDR
// if tmp then
35539: LD_VAR 0 2
35543: IFFALSE 35557
// SaveCharacters ( tmp , 12a_others ) ;
35545: LD_VAR 0 2
35549: PPUSH
35550: LD_STRING 12a_others
35552: PPUSH
35553: CALL_OW 38
// tmp := FilterAllUnits ( [ [ f_type , unit_human ] , [ f_nation , 1 ] , [ f_or , [ f_side , 1 ] , [ f_side , 4 ] ] ] ) diff [ JMM , Roth , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi , Simms , Joan , DeltaDoctor , Powell ] ;
35557: LD_ADDR_VAR 0 2
35561: PUSH
35562: LD_INT 21
35564: PUSH
35565: LD_INT 1
35567: PUSH
35568: EMPTY
35569: LIST
35570: LIST
35571: PUSH
35572: LD_INT 23
35574: PUSH
35575: LD_INT 1
35577: PUSH
35578: EMPTY
35579: LIST
35580: LIST
35581: PUSH
35582: LD_INT 2
35584: PUSH
35585: LD_INT 22
35587: PUSH
35588: LD_INT 1
35590: PUSH
35591: EMPTY
35592: LIST
35593: LIST
35594: PUSH
35595: LD_INT 22
35597: PUSH
35598: LD_INT 4
35600: PUSH
35601: EMPTY
35602: LIST
35603: LIST
35604: PUSH
35605: EMPTY
35606: LIST
35607: LIST
35608: LIST
35609: PUSH
35610: EMPTY
35611: LIST
35612: LIST
35613: LIST
35614: PPUSH
35615: CALL_OW 69
35619: PUSH
35620: LD_EXP 14
35624: PUSH
35625: LD_EXP 15
35629: PUSH
35630: LD_EXP 23
35634: PUSH
35635: LD_EXP 24
35639: PUSH
35640: LD_EXP 25
35644: PUSH
35645: LD_EXP 26
35649: PUSH
35650: LD_EXP 27
35654: PUSH
35655: LD_EXP 28
35659: PUSH
35660: LD_EXP 29
35664: PUSH
35665: LD_EXP 30
35669: PUSH
35670: LD_EXP 31
35674: PUSH
35675: LD_EXP 32
35679: PUSH
35680: LD_EXP 33
35684: PUSH
35685: LD_EXP 34
35689: PUSH
35690: LD_EXP 35
35694: PUSH
35695: LD_EXP 36
35699: PUSH
35700: LD_EXP 37
35704: PUSH
35705: LD_EXP 16
35709: PUSH
35710: EMPTY
35711: LIST
35712: LIST
35713: LIST
35714: LIST
35715: LIST
35716: LIST
35717: LIST
35718: LIST
35719: LIST
35720: LIST
35721: LIST
35722: LIST
35723: LIST
35724: LIST
35725: LIST
35726: LIST
35727: LIST
35728: LIST
35729: DIFF
35730: ST_TO_ADDR
// if tmp then
35731: LD_VAR 0 2
35735: IFFALSE 35749
// SaveCharacters ( tmp , 12p_others ) ;
35737: LD_VAR 0 2
35741: PPUSH
35742: LD_STRING 12p_others
35744: PPUSH
35745: CALL_OW 38
// YouWin ;
35749: CALL_OW 103
// end ; end_of_file
35753: PPOPN 5
35755: END
// on SailEvent ( event ) do var tmp ;
35756: LD_INT 0
35758: PPUSH
// begin if event = 1 then
35759: LD_VAR 0 1
35763: PUSH
35764: LD_INT 1
35766: EQUAL
35767: IFFALSE 35840
// begin if not mobile_patrol then
35769: LD_EXP 17
35773: NOT
35774: IFFALSE 35778
// exit ;
35776: GO 35840
// tmp := mobile_patrol [ mobile_patrol ] ;
35778: LD_ADDR_VAR 0 2
35782: PUSH
35783: LD_EXP 17
35787: PUSH
35788: LD_EXP 17
35792: ARRAY
35793: ST_TO_ADDR
// mobile_patrol := Delete ( mobile_patrol , mobile_patrol ) ;
35794: LD_ADDR_EXP 17
35798: PUSH
35799: LD_EXP 17
35803: PPUSH
35804: LD_EXP 17
35808: PPUSH
35809: CALL_OW 3
35813: ST_TO_ADDR
// Patrol ( tmp , mobile_points [ mobile_patrol + 1 ] , [ ] ) ;
35814: LD_VAR 0 2
35818: PPUSH
35819: LD_EXP 18
35823: PUSH
35824: LD_EXP 17
35828: PUSH
35829: LD_INT 1
35831: PLUS
35832: ARRAY
35833: PPUSH
35834: EMPTY
35835: PPUSH
35836: CALL 7070 0 3
// end ; end ;
35840: PPOPN 2
35842: END
// on UnitDestroyed ( un ) do begin if un = JMM then
35843: LD_VAR 0 1
35847: PUSH
35848: LD_EXP 14
35852: EQUAL
35853: IFFALSE 35862
// YouLost ( JMM ) ;
35855: LD_STRING JMM
35857: PPUSH
35858: CALL_OW 104
// if GetSide ( un ) = 7 and GetWeapon ( un ) = us_cargo_bay then
35862: LD_VAR 0 1
35866: PPUSH
35867: CALL_OW 255
35871: PUSH
35872: LD_INT 7
35874: EQUAL
35875: PUSH
35876: LD_VAR 0 1
35880: PPUSH
35881: CALL_OW 264
35885: PUSH
35886: LD_INT 12
35888: EQUAL
35889: AND
35890: IFFALSE 35899
// YouLost ( Artifact ) ;
35892: LD_STRING Artifact
35894: PPUSH
35895: CALL_OW 104
// if ( GetSide ( un ) = 7 and GetType ( un ) = unit_human ) or un = Roth then
35899: LD_VAR 0 1
35903: PPUSH
35904: CALL_OW 255
35908: PUSH
35909: LD_INT 7
35911: EQUAL
35912: PUSH
35913: LD_VAR 0 1
35917: PPUSH
35918: CALL_OW 247
35922: PUSH
35923: LD_INT 1
35925: EQUAL
35926: AND
35927: PUSH
35928: LD_VAR 0 1
35932: PUSH
35933: LD_EXP 15
35937: EQUAL
35938: OR
35939: IFFALSE 35955
// team_kill_counter := team_kill_counter + 1 ;
35941: LD_ADDR_EXP 9
35945: PUSH
35946: LD_EXP 9
35950: PUSH
35951: LD_INT 1
35953: PLUS
35954: ST_TO_ADDR
// if GetSide ( un ) = 1 and GetType ( un ) = unit_human then
35955: LD_VAR 0 1
35959: PPUSH
35960: CALL_OW 255
35964: PUSH
35965: LD_INT 1
35967: EQUAL
35968: PUSH
35969: LD_VAR 0 1
35973: PPUSH
35974: CALL_OW 247
35978: PUSH
35979: LD_INT 1
35981: EQUAL
35982: AND
35983: IFFALSE 35999
// friends_kill_counter := friends_kill_counter + 1 ;
35985: LD_ADDR_EXP 8
35989: PUSH
35990: LD_EXP 8
35994: PUSH
35995: LD_INT 1
35997: PLUS
35998: ST_TO_ADDR
// if GetSide ( un ) <> 1 then
35999: LD_VAR 0 1
36003: PPUSH
36004: CALL_OW 255
36008: PUSH
36009: LD_INT 1
36011: NONEQUAL
36012: IFFALSE 36016
// exit ;
36014: GO 36093
// if GetControl ( un ) = control_remote then
36016: LD_VAR 0 1
36020: PPUSH
36021: CALL_OW 263
36025: PUSH
36026: LD_INT 2
36028: EQUAL
36029: IFFALSE 36047
// defenders := defenders diff un ;
36031: LD_ADDR_EXP 20
36035: PUSH
36036: LD_EXP 20
36040: PUSH
36041: LD_VAR 0 1
36045: DIFF
36046: ST_TO_ADDR
// if not un in defenders then
36047: LD_VAR 0 1
36051: PUSH
36052: LD_EXP 20
36056: IN
36057: NOT
36058: IFFALSE 36093
// begin defcon := [ GetX ( un ) , GetY ( un ) ] ;
36060: LD_ADDR_EXP 21
36064: PUSH
36065: LD_VAR 0 1
36069: PPUSH
36070: CALL_OW 250
36074: PUSH
36075: LD_VAR 0 1
36079: PPUSH
36080: CALL_OW 251
36084: PUSH
36085: EMPTY
36086: LIST
36087: LIST
36088: ST_TO_ADDR
// Defend ;
36089: CALL 2772 0 0
// end ; end ;
36093: PPOPN 1
36095: END
// on VehicleConstructed ( veh , fac ) do begin if GetSide ( veh ) <> 1 then
36096: LD_VAR 0 1
36100: PPUSH
36101: CALL_OW 255
36105: PUSH
36106: LD_INT 1
36108: NONEQUAL
36109: IFFALSE 36113
// exit ;
36111: GO 36137
// if GetControl ( veh ) = control_remote then
36113: LD_VAR 0 1
36117: PPUSH
36118: CALL_OW 263
36122: PUSH
36123: LD_INT 2
36125: EQUAL
36126: IFFALSE 36137
// Connect ( veh ) ;
36128: LD_VAR 0 1
36132: PPUSH
36133: CALL 6265 0 1
// end ;
36137: PPOPN 2
36139: END
// on UnitGoesToRed ( un ) do var i , veh ;
36140: LD_INT 0
36142: PPUSH
36143: PPUSH
// begin if GetSide ( un ) = 1 and GetControl ( un ) = control_remote then
36144: LD_VAR 0 1
36148: PPUSH
36149: CALL_OW 255
36153: PUSH
36154: LD_INT 1
36156: EQUAL
36157: PUSH
36158: LD_VAR 0 1
36162: PPUSH
36163: CALL_OW 263
36167: PUSH
36168: LD_INT 2
36170: EQUAL
36171: AND
36172: IFFALSE 36183
// ComUnlink ( un ) ;
36174: LD_VAR 0 1
36178: PPUSH
36179: CALL_OW 136
// if un = ambar0 then
36183: LD_VAR 0 1
36187: PUSH
36188: LD_INT 18
36190: EQUAL
36191: IFFALSE 36301
// begin uc_side := 1 ;
36193: LD_ADDR_OWVAR 20
36197: PUSH
36198: LD_INT 1
36200: ST_TO_ADDR
// uc_nation := 1 ;
36201: LD_ADDR_OWVAR 21
36205: PUSH
36206: LD_INT 1
36208: ST_TO_ADDR
// for i = 1 to 6 do
36209: LD_ADDR_VAR 0 2
36213: PUSH
36214: DOUBLE
36215: LD_INT 1
36217: DEC
36218: ST_TO_ADDR
36219: LD_INT 6
36221: PUSH
36222: FOR_TO
36223: IFFALSE 36299
// begin PrepareVehicle ( us_medium_tracked , engine_combustion , control_computer , us_gatling_gun , 100 ) ;
36225: LD_INT 3
36227: PPUSH
36228: LD_INT 1
36230: PPUSH
36231: LD_INT 3
36233: PPUSH
36234: LD_INT 4
36236: PPUSH
36237: LD_INT 100
36239: PPUSH
36240: CALL 6029 0 5
// veh := CreateVehicle ;
36244: LD_ADDR_VAR 0 3
36248: PUSH
36249: CALL_OW 45
36253: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
36254: LD_VAR 0 3
36258: PPUSH
36259: LD_INT 1
36261: PPUSH
36262: CALL_OW 233
// PlaceUnitArea ( veh , west_spawn , false ) ;
36266: LD_VAR 0 3
36270: PPUSH
36271: LD_INT 25
36273: PPUSH
36274: LD_INT 0
36276: PPUSH
36277: CALL_OW 49
// defenders := defenders ^ veh ;
36281: LD_ADDR_EXP 20
36285: PUSH
36286: LD_EXP 20
36290: PUSH
36291: LD_VAR 0 3
36295: ADD
36296: ST_TO_ADDR
// end ;
36297: GO 36222
36299: POP
36300: POP
// end ; end ;
36301: PPOPN 3
36303: END
// on EnterBuilding ( building , unit ) do begin if unit = Powell then
36304: LD_VAR 0 2
36308: PUSH
36309: LD_EXP 16
36313: EQUAL
36314: IFFALSE 36325
// RemoveUnit ( Powell ) ;
36316: LD_EXP 16
36320: PPUSH
36321: CALL_OW 64
// end ;
36325: PPOPN 2
36327: END
// on Command ( cmd ) do begin SOS_Command ( cmd ) ;
36328: LD_VAR 0 1
36332: PPUSH
36333: CALL 36482 0 1
// end ; end_of_file
36337: PPOPN 1
36339: END
// export ru_radar , ru_big_cargo_bay , us_hack , us_artillery , ar_bio_bomb ; every 1 do
36340: GO 36342
36342: DISABLE
// begin ru_radar := 98 ;
36343: LD_ADDR_EXP 38
36347: PUSH
36348: LD_INT 98
36350: ST_TO_ADDR
// ru_big_cargo_bay := 89 ;
36351: LD_ADDR_EXP 39
36355: PUSH
36356: LD_INT 89
36358: ST_TO_ADDR
// us_hack := 99 ;
36359: LD_ADDR_EXP 40
36363: PUSH
36364: LD_INT 99
36366: ST_TO_ADDR
// us_artillery := 97 ;
36367: LD_ADDR_EXP 41
36371: PUSH
36372: LD_INT 97
36374: ST_TO_ADDR
// ar_bio_bomb := 91 ;
36375: LD_ADDR_EXP 42
36379: PUSH
36380: LD_INT 91
36382: ST_TO_ADDR
// end ; end_of_file end_of_file end_of_file
36383: END
// export function SOS_UnitExtraDestroyed ( un , killerSide , killerUnit ) ; var i , eff , side ; begin
36384: LD_INT 0
36386: PPUSH
36387: PPUSH
36388: PPUSH
36389: PPUSH
// if GetWeapon ( un ) = ar_bio_bomb then
36390: LD_VAR 0 1
36394: PPUSH
36395: CALL_OW 264
36399: PUSH
36400: LD_EXP 42
36404: EQUAL
36405: IFFALSE 36477
// begin if GetTech ( tech_bio3 , GetSide ( un ) ) = state_researched then
36407: LD_INT 68
36409: PPUSH
36410: LD_VAR 0 1
36414: PPUSH
36415: CALL_OW 255
36419: PPUSH
36420: CALL_OW 321
36424: PUSH
36425: LD_INT 2
36427: EQUAL
36428: IFFALSE 36440
// eff := 70 else
36430: LD_ADDR_VAR 0 6
36434: PUSH
36435: LD_INT 70
36437: ST_TO_ADDR
36438: GO 36448
// eff := 30 ;
36440: LD_ADDR_VAR 0 6
36444: PUSH
36445: LD_INT 30
36447: ST_TO_ADDR
// ArtContamination ( GetX ( un ) , GetY ( un ) , eff ) ;
36448: LD_VAR 0 1
36452: PPUSH
36453: CALL_OW 250
36457: PPUSH
36458: LD_VAR 0 1
36462: PPUSH
36463: CALL_OW 251
36467: PPUSH
36468: LD_VAR 0 6
36472: PPUSH
36473: CALL_OW 495
// end ; end ;
36477: LD_VAR 0 4
36481: RET
// export function SOS_Command ( cmd ) ; var i , j , tmp , taskList , _taskList ; begin
36482: LD_INT 0
36484: PPUSH
36485: PPUSH
36486: PPUSH
36487: PPUSH
36488: PPUSH
36489: PPUSH
// if cmd = 124 then
36490: LD_VAR 0 1
36494: PUSH
36495: LD_INT 124
36497: EQUAL
36498: IFFALSE 36704
// begin tmp := FilterAllUnits ( [ f_or , [ f_weapon , ru_bulldozer ] , [ f_weapon , us_bulldozer ] ] ) ;
36500: LD_ADDR_VAR 0 5
36504: PUSH
36505: LD_INT 2
36507: PUSH
36508: LD_INT 34
36510: PUSH
36511: LD_INT 53
36513: PUSH
36514: EMPTY
36515: LIST
36516: LIST
36517: PUSH
36518: LD_INT 34
36520: PUSH
36521: LD_INT 14
36523: PUSH
36524: EMPTY
36525: LIST
36526: LIST
36527: PUSH
36528: EMPTY
36529: LIST
36530: LIST
36531: LIST
36532: PPUSH
36533: CALL_OW 69
36537: ST_TO_ADDR
// if not tmp then
36538: LD_VAR 0 5
36542: NOT
36543: IFFALSE 36547
// exit ;
36545: GO 36704
// for i in tmp do
36547: LD_ADDR_VAR 0 3
36551: PUSH
36552: LD_VAR 0 5
36556: PUSH
36557: FOR_IN
36558: IFFALSE 36702
// begin taskList := GetTaskList ( i ) ;
36560: LD_ADDR_VAR 0 6
36564: PUSH
36565: LD_VAR 0 3
36569: PPUSH
36570: CALL_OW 437
36574: ST_TO_ADDR
// if not taskList then
36575: LD_VAR 0 6
36579: NOT
36580: IFFALSE 36584
// continue ;
36582: GO 36557
// for j = 1 to taskList do
36584: LD_ADDR_VAR 0 4
36588: PUSH
36589: DOUBLE
36590: LD_INT 1
36592: DEC
36593: ST_TO_ADDR
36594: LD_VAR 0 6
36598: PUSH
36599: FOR_TO
36600: IFFALSE 36698
// if taskList [ j ] [ 1 ] = | then
36602: LD_VAR 0 6
36606: PUSH
36607: LD_VAR 0 4
36611: ARRAY
36612: PUSH
36613: LD_INT 1
36615: ARRAY
36616: PUSH
36617: LD_STRING |
36619: EQUAL
36620: IFFALSE 36696
// begin _taskList := Delete ( taskList , 1 ) ;
36622: LD_ADDR_VAR 0 7
36626: PUSH
36627: LD_VAR 0 6
36631: PPUSH
36632: LD_INT 1
36634: PPUSH
36635: CALL_OW 3
36639: ST_TO_ADDR
// SetTaskList ( i , _taskList ) ;
36640: LD_VAR 0 3
36644: PPUSH
36645: LD_VAR 0 7
36649: PPUSH
36650: CALL_OW 446
// CutTreeXYR ( i , taskList [ j ] [ 2 ] , taskList [ j ] [ 3 ] , 8 ) ;
36654: LD_VAR 0 3
36658: PPUSH
36659: LD_VAR 0 6
36663: PUSH
36664: LD_VAR 0 4
36668: ARRAY
36669: PUSH
36670: LD_INT 2
36672: ARRAY
36673: PPUSH
36674: LD_VAR 0 6
36678: PUSH
36679: LD_VAR 0 4
36683: ARRAY
36684: PUSH
36685: LD_INT 3
36687: ARRAY
36688: PPUSH
36689: LD_INT 8
36691: PPUSH
36692: CALL 36709 0 4
// end ;
36696: GO 36599
36698: POP
36699: POP
// end ;
36700: GO 36557
36702: POP
36703: POP
// end ; end ;
36704: LD_VAR 0 2
36708: RET
// function CutTreeXYR ( bulldozer , x , y , r ) ; var i , min_x , min_y , max_x , max_y , _x , _y , list ; begin
36709: LD_INT 0
36711: PPUSH
36712: PPUSH
36713: PPUSH
36714: PPUSH
36715: PPUSH
36716: PPUSH
36717: PPUSH
36718: PPUSH
36719: PPUSH
// if not bulldozer or not ValidHex ( x , y ) or not r then
36720: LD_VAR 0 1
36724: NOT
36725: PUSH
36726: LD_VAR 0 2
36730: PPUSH
36731: LD_VAR 0 3
36735: PPUSH
36736: CALL_OW 488
36740: NOT
36741: OR
36742: PUSH
36743: LD_VAR 0 4
36747: NOT
36748: OR
36749: IFFALSE 36753
// exit ;
36751: GO 37093
// list := [ ] ;
36753: LD_ADDR_VAR 0 13
36757: PUSH
36758: EMPTY
36759: ST_TO_ADDR
// if x - r < 0 then
36760: LD_VAR 0 2
36764: PUSH
36765: LD_VAR 0 4
36769: MINUS
36770: PUSH
36771: LD_INT 0
36773: LESS
36774: IFFALSE 36786
// min_x := 0 else
36776: LD_ADDR_VAR 0 7
36780: PUSH
36781: LD_INT 0
36783: ST_TO_ADDR
36784: GO 36802
// min_x := x - r ;
36786: LD_ADDR_VAR 0 7
36790: PUSH
36791: LD_VAR 0 2
36795: PUSH
36796: LD_VAR 0 4
36800: MINUS
36801: ST_TO_ADDR
// if y - r < 0 then
36802: LD_VAR 0 3
36806: PUSH
36807: LD_VAR 0 4
36811: MINUS
36812: PUSH
36813: LD_INT 0
36815: LESS
36816: IFFALSE 36828
// min_y := 0 else
36818: LD_ADDR_VAR 0 8
36822: PUSH
36823: LD_INT 0
36825: ST_TO_ADDR
36826: GO 36844
// min_y := y - r ;
36828: LD_ADDR_VAR 0 8
36832: PUSH
36833: LD_VAR 0 3
36837: PUSH
36838: LD_VAR 0 4
36842: MINUS
36843: ST_TO_ADDR
// max_x := x + r ;
36844: LD_ADDR_VAR 0 9
36848: PUSH
36849: LD_VAR 0 2
36853: PUSH
36854: LD_VAR 0 4
36858: PLUS
36859: ST_TO_ADDR
// max_y := y + r ;
36860: LD_ADDR_VAR 0 10
36864: PUSH
36865: LD_VAR 0 3
36869: PUSH
36870: LD_VAR 0 4
36874: PLUS
36875: ST_TO_ADDR
// for _x = min_x to max_x do
36876: LD_ADDR_VAR 0 11
36880: PUSH
36881: DOUBLE
36882: LD_VAR 0 7
36886: DEC
36887: ST_TO_ADDR
36888: LD_VAR 0 9
36892: PUSH
36893: FOR_TO
36894: IFFALSE 37011
// for _y = min_y to max_y do
36896: LD_ADDR_VAR 0 12
36900: PUSH
36901: DOUBLE
36902: LD_VAR 0 8
36906: DEC
36907: ST_TO_ADDR
36908: LD_VAR 0 10
36912: PUSH
36913: FOR_TO
36914: IFFALSE 37007
// begin if not ValidHex ( _x , _y ) then
36916: LD_VAR 0 11
36920: PPUSH
36921: LD_VAR 0 12
36925: PPUSH
36926: CALL_OW 488
36930: NOT
36931: IFFALSE 36935
// continue ;
36933: GO 36913
// if IsEnvironment ( _x , _y ) and IsEnvironmentDestroyable ( _x , _y ) then
36935: LD_VAR 0 11
36939: PPUSH
36940: LD_VAR 0 12
36944: PPUSH
36945: CALL_OW 351
36949: PUSH
36950: LD_VAR 0 11
36954: PPUSH
36955: LD_VAR 0 12
36959: PPUSH
36960: CALL_OW 554
36964: AND
36965: IFFALSE 37005
// list := Insert ( list , list + 1 , [ _x , _y ] ) ;
36967: LD_ADDR_VAR 0 13
36971: PUSH
36972: LD_VAR 0 13
36976: PPUSH
36977: LD_VAR 0 13
36981: PUSH
36982: LD_INT 1
36984: PLUS
36985: PPUSH
36986: LD_VAR 0 11
36990: PUSH
36991: LD_VAR 0 12
36995: PUSH
36996: EMPTY
36997: LIST
36998: LIST
36999: PPUSH
37000: CALL_OW 2
37004: ST_TO_ADDR
// end ;
37005: GO 36913
37007: POP
37008: POP
37009: GO 36893
37011: POP
37012: POP
// if not list then
37013: LD_VAR 0 13
37017: NOT
37018: IFFALSE 37022
// exit ;
37020: GO 37093
// for i in list do
37022: LD_ADDR_VAR 0 6
37026: PUSH
37027: LD_VAR 0 13
37031: PUSH
37032: FOR_IN
37033: IFFALSE 37091
// AddTaskList ( bulldozer , [ [ M , i [ 1 ] , i [ 2 ] , 0 , 0 , 0 , 0 ] ] ) ;
37035: LD_VAR 0 1
37039: PPUSH
37040: LD_STRING M
37042: PUSH
37043: LD_VAR 0 6
37047: PUSH
37048: LD_INT 1
37050: ARRAY
37051: PUSH
37052: LD_VAR 0 6
37056: PUSH
37057: LD_INT 2
37059: ARRAY
37060: PUSH
37061: LD_INT 0
37063: PUSH
37064: LD_INT 0
37066: PUSH
37067: LD_INT 0
37069: PUSH
37070: LD_INT 0
37072: PUSH
37073: EMPTY
37074: LIST
37075: LIST
37076: LIST
37077: LIST
37078: LIST
37079: LIST
37080: LIST
37081: PUSH
37082: EMPTY
37083: LIST
37084: PPUSH
37085: CALL_OW 447
37089: GO 37032
37091: POP
37092: POP
// end ;
37093: LD_VAR 0 5
37097: RET
