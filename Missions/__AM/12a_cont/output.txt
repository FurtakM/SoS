// starting begin ResetFog ;
   0: CALL_OW 335
// InitVariables ;
   4: CALL 116 0 0
// PrepareNature ;
   8: CALL 30211 0 0
// PrepareAlliance ;
  12: CALL 218 0 0
// PrepareFriends ;
  16: CALL 3350 0 0
// PrepareAmerican ;
  20: CALL 655 0 0
// PlaceSeeing ( 91 , 70 , 7 , - 32178 ) ;
  24: LD_INT 91
  26: PPUSH
  27: LD_INT 70
  29: PPUSH
  30: LD_INT 7
  32: PPUSH
  33: LD_INT 32178
  35: NEG
  36: PPUSH
  37: CALL_OW 330
// RemoveSeeing ( 91 , 70 , 7 ) ;
  41: LD_INT 91
  43: PPUSH
  44: LD_INT 70
  46: PPUSH
  47: LD_INT 7
  49: PPUSH
  50: CALL_OW 331
// if debug then
  54: LD_EXP 1
  58: IFFALSE 99
// begin SetAttitude ( 1 , 7 , att_enemy , true ) ;
  60: LD_INT 1
  62: PPUSH
  63: LD_INT 7
  65: PPUSH
  66: LD_INT 2
  68: PPUSH
  69: LD_INT 1
  71: PPUSH
  72: CALL_OW 80
// RemoveUnit ( Powell ) ;
  76: LD_EXP 14
  80: PPUSH
  81: CALL_OW 64
// DoNotAttack ( 1 , JMM ) ;
  85: LD_INT 1
  87: PPUSH
  88: LD_EXP 12
  92: PPUSH
  93: CALL_OW 471
// end else
  97: GO 103
// Action ;
  99: CALL 30547 0 0
// PreparePatrol ;
 103: CALL 1003 0 0
// game := true ;
 107: LD_ADDR_EXP 2
 111: PUSH
 112: LD_INT 1
 114: ST_TO_ADDR
// end ;
 115: END
// export debug , game , selected , friends , reached_lab , can_escape , on_hill , friends_kill_counter , team_kill_counter , gamma_commander , extra_patrol ; export function InitVariables ; begin
 116: LD_INT 0
 118: PPUSH
// debug := false ;
 119: LD_ADDR_EXP 1
 123: PUSH
 124: LD_INT 0
 126: ST_TO_ADDR
// friends := [ ] ;
 127: LD_ADDR_EXP 4
 131: PUSH
 132: EMPTY
 133: ST_TO_ADDR
// selected := [ ] ;
 134: LD_ADDR_EXP 3
 138: PUSH
 139: EMPTY
 140: ST_TO_ADDR
// reached_lab := false ;
 141: LD_ADDR_EXP 5
 145: PUSH
 146: LD_INT 0
 148: ST_TO_ADDR
// can_escape := false ;
 149: LD_ADDR_EXP 6
 153: PUSH
 154: LD_INT 0
 156: ST_TO_ADDR
// game := false ;
 157: LD_ADDR_EXP 2
 161: PUSH
 162: LD_INT 0
 164: ST_TO_ADDR
// gamma_commander := LoadVariable ( GammaCommander , 2 ) ;
 165: LD_ADDR_EXP 10
 169: PUSH
 170: LD_STRING GammaCommander
 172: PPUSH
 173: LD_INT 2
 175: PPUSH
 176: CALL_OW 30
 180: ST_TO_ADDR
// friends_kill_counter := 0 ;
 181: LD_ADDR_EXP 8
 185: PUSH
 186: LD_INT 0
 188: ST_TO_ADDR
// team_kill_counter := 0 ;
 189: LD_ADDR_EXP 9
 193: PUSH
 194: LD_INT 0
 196: ST_TO_ADDR
// extra_patrol := true ;
 197: LD_ADDR_EXP 11
 201: PUSH
 202: LD_INT 1
 204: ST_TO_ADDR
// on_hill := false ;
 205: LD_ADDR_EXP 7
 209: PUSH
 210: LD_INT 0
 212: ST_TO_ADDR
// end ; end_of_file
 213: LD_VAR 0 1
 217: RET
// export JMM , Roth ; export function PrepareAlliance ; var cargo ; begin
 218: LD_INT 0
 220: PPUSH
 221: PPUSH
// uc_side := 7 ;
 222: LD_ADDR_OWVAR 20
 226: PUSH
 227: LD_INT 7
 229: ST_TO_ADDR
// uc_nation := 1 ;
 230: LD_ADDR_OWVAR 21
 234: PUSH
 235: LD_INT 1
 237: ST_TO_ADDR
// JMM := PrepareUnit ( JMM , ( not debug ) , 11_ ) ;
 238: LD_ADDR_EXP 12
 242: PUSH
 243: LD_STRING JMM
 245: PPUSH
 246: LD_EXP 1
 250: NOT
 251: PPUSH
 252: LD_STRING 11_
 254: PPUSH
 255: CALL 5635 0 3
 259: ST_TO_ADDR
// uc_side := 4 ;
 260: LD_ADDR_OWVAR 20
 264: PUSH
 265: LD_INT 4
 267: ST_TO_ADDR
// Roth := NewCharacter ( Roth ) ;
 268: LD_ADDR_EXP 13
 272: PUSH
 273: LD_STRING Roth
 275: PPUSH
 276: CALL_OW 25
 280: ST_TO_ADDR
// SetDir ( JMM , 1 ) ;
 281: LD_EXP 12
 285: PPUSH
 286: LD_INT 1
 288: PPUSH
 289: CALL_OW 233
// SetClass ( JMM , 1 ) ;
 293: LD_EXP 12
 297: PPUSH
 298: LD_INT 1
 300: PPUSH
 301: CALL_OW 336
// PlaceUnitXY ( JMM , 105 , 10 , false ) ;
 305: LD_EXP 12
 309: PPUSH
 310: LD_INT 105
 312: PPUSH
 313: LD_INT 10
 315: PPUSH
 316: LD_INT 0
 318: PPUSH
 319: CALL_OW 48
// SetDir ( Roth , 4 ) ;
 323: LD_EXP 13
 327: PPUSH
 328: LD_INT 4
 330: PPUSH
 331: CALL_OW 233
// PlaceUnitXY ( Roth , 109 , 10 , false ) ;
 335: LD_EXP 13
 339: PPUSH
 340: LD_INT 109
 342: PPUSH
 343: LD_INT 10
 345: PPUSH
 346: LD_INT 0
 348: PPUSH
 349: CALL_OW 48
// ComTurnUnit ( JMM , Roth ) ;
 353: LD_EXP 12
 357: PPUSH
 358: LD_EXP 13
 362: PPUSH
 363: CALL_OW 119
// ComTurnUnit ( Roth , JMM ) ;
 367: LD_EXP 13
 371: PPUSH
 372: LD_EXP 12
 376: PPUSH
 377: CALL_OW 119
// PrepareVehicle ( us_medium_tracked , engine_siberite , control_computer , us_cargo_bay , 100 ) ;
 381: LD_INT 3
 383: PPUSH
 384: LD_INT 3
 386: PPUSH
 387: LD_INT 3
 389: PPUSH
 390: LD_INT 12
 392: PPUSH
 393: LD_INT 100
 395: PPUSH
 396: CALL 5698 0 5
// cargo := CreateVehicle ;
 400: LD_ADDR_VAR 0 2
 404: PUSH
 405: CALL_OW 45
 409: ST_TO_ADDR
// SetDir ( cargo , 1 ) ;
 410: LD_VAR 0 2
 414: PPUSH
 415: LD_INT 1
 417: PPUSH
 418: CALL_OW 233
// PlaceUnitXY ( cargo , 179 , 45 , false ) ;
 422: LD_VAR 0 2
 426: PPUSH
 427: LD_INT 179
 429: PPUSH
 430: LD_INT 45
 432: PPUSH
 433: LD_INT 0
 435: PPUSH
 436: CALL_OW 48
// SetCargo ( cargo , mat_artifact , 30 ) ;
 440: LD_VAR 0 2
 444: PPUSH
 445: LD_INT 4
 447: PPUSH
 448: LD_INT 30
 450: PPUSH
 451: CALL_OW 290
// if LoadVariable ( 11_artifact_captured , 0 ) then
 455: LD_STRING 11_artifact_captured
 457: PPUSH
 458: LD_INT 0
 460: PPUSH
 461: CALL_OW 30
 465: IFFALSE 522
// begin cargo := CreateVehicle ;
 467: LD_ADDR_VAR 0 2
 471: PUSH
 472: CALL_OW 45
 476: ST_TO_ADDR
// SetDir ( cargo , 0 ) ;
 477: LD_VAR 0 2
 481: PPUSH
 482: LD_INT 0
 484: PPUSH
 485: CALL_OW 233
// PlaceUnitXY ( cargo , 171 , 85 , false ) ;
 489: LD_VAR 0 2
 493: PPUSH
 494: LD_INT 171
 496: PPUSH
 497: LD_INT 85
 499: PPUSH
 500: LD_INT 0
 502: PPUSH
 503: CALL_OW 48
// SetCargo ( cargo , mat_artifact , 50 ) ;
 507: LD_VAR 0 2
 511: PPUSH
 512: LD_INT 4
 514: PPUSH
 515: LD_INT 50
 517: PPUSH
 518: CALL_OW 290
// end ; SetSide ( amlab , 7 ) ;
 522: LD_INT 47
 524: PPUSH
 525: LD_INT 7
 527: PPUSH
 528: CALL_OW 235
// DoNotAttack ( 1 , amlab ) ;
 532: LD_INT 1
 534: PPUSH
 535: LD_INT 47
 537: PPUSH
 538: CALL_OW 471
// end ;
 542: LD_VAR 0 1
 546: RET
// every 0 0$1 trigger FilterUnitsInArea ( hill , [ f_side , 7 ] ) and not on_hill do
 547: LD_INT 38
 549: PPUSH
 550: LD_INT 22
 552: PUSH
 553: LD_INT 7
 555: PUSH
 556: EMPTY
 557: LIST
 558: LIST
 559: PPUSH
 560: CALL_OW 70
 564: PUSH
 565: LD_EXP 7
 569: NOT
 570: AND
 571: IFFALSE 602
 573: GO 575
 575: DISABLE
// begin enable ;
 576: ENABLE
// on_hill := true ;
 577: LD_ADDR_EXP 7
 581: PUSH
 582: LD_INT 1
 584: ST_TO_ADDR
// PlaceSeeing ( 126 , 13 , 7 , - 90 ) ;
 585: LD_INT 126
 587: PPUSH
 588: LD_INT 13
 590: PPUSH
 591: LD_INT 7
 593: PPUSH
 594: LD_INT 90
 596: NEG
 597: PPUSH
 598: CALL_OW 330
// end ;
 602: END
// every 0 0$1 trigger not FilterUnitsInArea ( hill , [ f_side , 7 ] ) and on_hill do
 603: LD_INT 38
 605: PPUSH
 606: LD_INT 22
 608: PUSH
 609: LD_INT 7
 611: PUSH
 612: EMPTY
 613: LIST
 614: LIST
 615: PPUSH
 616: CALL_OW 70
 620: NOT
 621: PUSH
 622: LD_EXP 7
 626: AND
 627: IFFALSE 654
 629: GO 631
 631: DISABLE
// begin enable ;
 632: ENABLE
// on_hill := false ;
 633: LD_ADDR_EXP 7
 637: PUSH
 638: LD_INT 0
 640: ST_TO_ADDR
// RemoveSeeing ( 126 , 13 , 7 ) ;
 641: LD_INT 126
 643: PPUSH
 644: LD_INT 13
 646: PPUSH
 647: LD_INT 7
 649: PPUSH
 650: CALL_OW 331
// end ; end_of_file
 654: END
// export Powell , mobile_patrol , mobile_points , powell_guards , defenders , defcon , defcon_wave ; export function PrepareAmerican ; var i , j , b , un ; begin
 655: LD_INT 0
 657: PPUSH
 658: PPUSH
 659: PPUSH
 660: PPUSH
 661: PPUSH
// defcon := 0 ;
 662: LD_ADDR_EXP 19
 666: PUSH
 667: LD_INT 0
 669: ST_TO_ADDR
// defcon_wave := 0 ;
 670: LD_ADDR_EXP 20
 674: PUSH
 675: LD_INT 0
 677: ST_TO_ADDR
// defenders := [ ] ;
 678: LD_ADDR_EXP 18
 682: PUSH
 683: EMPTY
 684: ST_TO_ADDR
// SetBName ( alfa , alpha ) ;
 685: LD_INT 5
 687: PPUSH
 688: LD_STRING alpha
 690: PPUSH
 691: CALL_OW 500
// uc_side := 1 ;
 695: LD_ADDR_OWVAR 20
 699: PUSH
 700: LD_INT 1
 702: ST_TO_ADDR
// uc_nation := 1 ;
 703: LD_ADDR_OWVAR 21
 707: PUSH
 708: LD_INT 1
 710: ST_TO_ADDR
// Powell := NewCharacter ( Powell ) ;
 711: LD_ADDR_EXP 14
 715: PUSH
 716: LD_STRING Powell
 718: PPUSH
 719: CALL_OW 25
 723: ST_TO_ADDR
// PlaceUnitXY ( Powell , 110 , 26 , false ) ;
 724: LD_EXP 14
 728: PPUSH
 729: LD_INT 110
 731: PPUSH
 732: LD_INT 26
 734: PPUSH
 735: LD_INT 0
 737: PPUSH
 738: CALL_OW 48
// ComHold ( Powell ) ;
 742: LD_EXP 14
 746: PPUSH
 747: CALL_OW 140
// for i = 1 to 5 do
 751: LD_ADDR_VAR 0 2
 755: PUSH
 756: DOUBLE
 757: LD_INT 1
 759: DEC
 760: ST_TO_ADDR
 761: LD_INT 5
 763: PUSH
 764: FOR_TO
 765: IFFALSE 821
// begin PrepareHuman ( false , 1 , 10 ) ;
 767: LD_INT 0
 769: PPUSH
 770: LD_INT 1
 772: PPUSH
 773: LD_INT 10
 775: PPUSH
 776: CALL_OW 380
// powell_guards := Insert ( powell_guards , 1 , CreateHuman ) ;
 780: LD_ADDR_EXP 17
 784: PUSH
 785: LD_EXP 17
 789: PPUSH
 790: LD_INT 1
 792: PPUSH
 793: CALL_OW 44
 797: PPUSH
 798: CALL_OW 2
 802: ST_TO_ADDR
// PlaceHumanInUnit ( powell_guards [ 1 ] , ambar0 ) ;
 803: LD_EXP 17
 807: PUSH
 808: LD_INT 1
 810: ARRAY
 811: PPUSH
 812: LD_INT 18
 814: PPUSH
 815: CALL_OW 52
// end ;
 819: GO 764
 821: POP
 822: POP
// if Difficulty > 2 then
 823: LD_OWVAR 67
 827: PUSH
 828: LD_INT 2
 830: GREATER
 831: IFFALSE 880
// begin bc_type := b_turret ;
 833: LD_ADDR_OWVAR 42
 837: PUSH
 838: LD_INT 33
 840: ST_TO_ADDR
// bc_level := 7 ;
 841: LD_ADDR_OWVAR 43
 845: PUSH
 846: LD_INT 7
 848: ST_TO_ADDR
// b := CreateAndPlaceBuildingXYD ( 107 , 55 , 5 ) ;
 849: LD_ADDR_VAR 0 4
 853: PUSH
 854: LD_INT 107
 856: PPUSH
 857: LD_INT 55
 859: PPUSH
 860: LD_INT 5
 862: PPUSH
 863: CALL_OW 47
 867: ST_TO_ADDR
// PlaceWeaponTurret ( b , us_rocket_launcher ) ;
 868: LD_VAR 0 4
 872: PPUSH
 873: LD_INT 7
 875: PPUSH
 876: CALL_OW 431
// end ; for i in FilterAllUnits ( [ [ f_side , 1 ] , [ f_btype , b_factory ] ] ) ^ FilterAllUnits ( [ [ f_side , 1 ] , [ f_btype , b_control_tower ] ] ) do
 880: LD_ADDR_VAR 0 2
 884: PUSH
 885: LD_INT 22
 887: PUSH
 888: LD_INT 1
 890: PUSH
 891: EMPTY
 892: LIST
 893: LIST
 894: PUSH
 895: LD_INT 30
 897: PUSH
 898: LD_INT 3
 900: PUSH
 901: EMPTY
 902: LIST
 903: LIST
 904: PUSH
 905: EMPTY
 906: LIST
 907: LIST
 908: PPUSH
 909: CALL_OW 69
 913: PUSH
 914: LD_INT 22
 916: PUSH
 917: LD_INT 1
 919: PUSH
 920: EMPTY
 921: LIST
 922: LIST
 923: PUSH
 924: LD_INT 30
 926: PUSH
 927: LD_INT 36
 929: PUSH
 930: EMPTY
 931: LIST
 932: LIST
 933: PUSH
 934: EMPTY
 935: LIST
 936: LIST
 937: PPUSH
 938: CALL_OW 69
 942: ADD
 943: PUSH
 944: FOR_IN
 945: IFFALSE 996
// for j = 1 to 3 do
 947: LD_ADDR_VAR 0 3
 951: PUSH
 952: DOUBLE
 953: LD_INT 1
 955: DEC
 956: ST_TO_ADDR
 957: LD_INT 3
 959: PUSH
 960: FOR_TO
 961: IFFALSE 992
// begin PrepareHuman ( false , 3 , 6 ) ;
 963: LD_INT 0
 965: PPUSH
 966: LD_INT 3
 968: PPUSH
 969: LD_INT 6
 971: PPUSH
 972: CALL_OW 380
// PlaceHumanInUnit ( CreateHuman , i ) ;
 976: CALL_OW 44
 980: PPUSH
 981: LD_VAR 0 2
 985: PPUSH
 986: CALL_OW 52
// end ;
 990: GO 960
 992: POP
 993: POP
 994: GO 944
 996: POP
 997: POP
// end ;
 998: LD_VAR 0 1
1002: RET
// export function PreparePatrol ; var i , un ; begin
1003: LD_INT 0
1005: PPUSH
1006: PPUSH
1007: PPUSH
// uc_side := 1 ;
1008: LD_ADDR_OWVAR 20
1012: PUSH
1013: LD_INT 1
1015: ST_TO_ADDR
// uc_nation := 1 ;
1016: LD_ADDR_OWVAR 21
1020: PUSH
1021: LD_INT 1
1023: ST_TO_ADDR
// mobile_points := [ [ [ 99 , 55 ] , [ 113 , 67 ] , [ 129 , 68 ] , [ 135 , 62 ] , [ 103 , 41 ] ] , [ [ 27 , 49 ] , [ 46 , 49 ] , [ 87 , 70 ] , [ 99 , 79 ] , [ 118 , 111 ] , [ 99 , 79 ] , [ 87 , 70 ] , [ 46 , 49 ] ] , [ [ 200 , 88 ] , [ 175 , 80 ] , [ 135 , 62 ] , [ 117 , 53 ] , [ 103 , 41 ] , [ 99 , 24 ] , [ 85 , 3 ] , [ 99 , 24 ] , [ 103 , 41 ] , [ 98 , 47 ] , [ 99 , 56 ] , [ 96 , 66 ] , [ 99 , 56 ] , [ 112 , 66 ] , [ 129 , 68 ] , [ 135 , 62 ] , [ 156 , 71 ] , [ 168 , 76 ] , [ 168 , 61 ] , [ 168 , 75 ] , [ 185 , 85 ] ] ] ;
1024: LD_ADDR_EXP 16
1028: PUSH
1029: LD_INT 99
1031: PUSH
1032: LD_INT 55
1034: PUSH
1035: EMPTY
1036: LIST
1037: LIST
1038: PUSH
1039: LD_INT 113
1041: PUSH
1042: LD_INT 67
1044: PUSH
1045: EMPTY
1046: LIST
1047: LIST
1048: PUSH
1049: LD_INT 129
1051: PUSH
1052: LD_INT 68
1054: PUSH
1055: EMPTY
1056: LIST
1057: LIST
1058: PUSH
1059: LD_INT 135
1061: PUSH
1062: LD_INT 62
1064: PUSH
1065: EMPTY
1066: LIST
1067: LIST
1068: PUSH
1069: LD_INT 103
1071: PUSH
1072: LD_INT 41
1074: PUSH
1075: EMPTY
1076: LIST
1077: LIST
1078: PUSH
1079: EMPTY
1080: LIST
1081: LIST
1082: LIST
1083: LIST
1084: LIST
1085: PUSH
1086: LD_INT 27
1088: PUSH
1089: LD_INT 49
1091: PUSH
1092: EMPTY
1093: LIST
1094: LIST
1095: PUSH
1096: LD_INT 46
1098: PUSH
1099: LD_INT 49
1101: PUSH
1102: EMPTY
1103: LIST
1104: LIST
1105: PUSH
1106: LD_INT 87
1108: PUSH
1109: LD_INT 70
1111: PUSH
1112: EMPTY
1113: LIST
1114: LIST
1115: PUSH
1116: LD_INT 99
1118: PUSH
1119: LD_INT 79
1121: PUSH
1122: EMPTY
1123: LIST
1124: LIST
1125: PUSH
1126: LD_INT 118
1128: PUSH
1129: LD_INT 111
1131: PUSH
1132: EMPTY
1133: LIST
1134: LIST
1135: PUSH
1136: LD_INT 99
1138: PUSH
1139: LD_INT 79
1141: PUSH
1142: EMPTY
1143: LIST
1144: LIST
1145: PUSH
1146: LD_INT 87
1148: PUSH
1149: LD_INT 70
1151: PUSH
1152: EMPTY
1153: LIST
1154: LIST
1155: PUSH
1156: LD_INT 46
1158: PUSH
1159: LD_INT 49
1161: PUSH
1162: EMPTY
1163: LIST
1164: LIST
1165: PUSH
1166: EMPTY
1167: LIST
1168: LIST
1169: LIST
1170: LIST
1171: LIST
1172: LIST
1173: LIST
1174: LIST
1175: PUSH
1176: LD_INT 200
1178: PUSH
1179: LD_INT 88
1181: PUSH
1182: EMPTY
1183: LIST
1184: LIST
1185: PUSH
1186: LD_INT 175
1188: PUSH
1189: LD_INT 80
1191: PUSH
1192: EMPTY
1193: LIST
1194: LIST
1195: PUSH
1196: LD_INT 135
1198: PUSH
1199: LD_INT 62
1201: PUSH
1202: EMPTY
1203: LIST
1204: LIST
1205: PUSH
1206: LD_INT 117
1208: PUSH
1209: LD_INT 53
1211: PUSH
1212: EMPTY
1213: LIST
1214: LIST
1215: PUSH
1216: LD_INT 103
1218: PUSH
1219: LD_INT 41
1221: PUSH
1222: EMPTY
1223: LIST
1224: LIST
1225: PUSH
1226: LD_INT 99
1228: PUSH
1229: LD_INT 24
1231: PUSH
1232: EMPTY
1233: LIST
1234: LIST
1235: PUSH
1236: LD_INT 85
1238: PUSH
1239: LD_INT 3
1241: PUSH
1242: EMPTY
1243: LIST
1244: LIST
1245: PUSH
1246: LD_INT 99
1248: PUSH
1249: LD_INT 24
1251: PUSH
1252: EMPTY
1253: LIST
1254: LIST
1255: PUSH
1256: LD_INT 103
1258: PUSH
1259: LD_INT 41
1261: PUSH
1262: EMPTY
1263: LIST
1264: LIST
1265: PUSH
1266: LD_INT 98
1268: PUSH
1269: LD_INT 47
1271: PUSH
1272: EMPTY
1273: LIST
1274: LIST
1275: PUSH
1276: LD_INT 99
1278: PUSH
1279: LD_INT 56
1281: PUSH
1282: EMPTY
1283: LIST
1284: LIST
1285: PUSH
1286: LD_INT 96
1288: PUSH
1289: LD_INT 66
1291: PUSH
1292: EMPTY
1293: LIST
1294: LIST
1295: PUSH
1296: LD_INT 99
1298: PUSH
1299: LD_INT 56
1301: PUSH
1302: EMPTY
1303: LIST
1304: LIST
1305: PUSH
1306: LD_INT 112
1308: PUSH
1309: LD_INT 66
1311: PUSH
1312: EMPTY
1313: LIST
1314: LIST
1315: PUSH
1316: LD_INT 129
1318: PUSH
1319: LD_INT 68
1321: PUSH
1322: EMPTY
1323: LIST
1324: LIST
1325: PUSH
1326: LD_INT 135
1328: PUSH
1329: LD_INT 62
1331: PUSH
1332: EMPTY
1333: LIST
1334: LIST
1335: PUSH
1336: LD_INT 156
1338: PUSH
1339: LD_INT 71
1341: PUSH
1342: EMPTY
1343: LIST
1344: LIST
1345: PUSH
1346: LD_INT 168
1348: PUSH
1349: LD_INT 76
1351: PUSH
1352: EMPTY
1353: LIST
1354: LIST
1355: PUSH
1356: LD_INT 168
1358: PUSH
1359: LD_INT 61
1361: PUSH
1362: EMPTY
1363: LIST
1364: LIST
1365: PUSH
1366: LD_INT 168
1368: PUSH
1369: LD_INT 75
1371: PUSH
1372: EMPTY
1373: LIST
1374: LIST
1375: PUSH
1376: LD_INT 185
1378: PUSH
1379: LD_INT 85
1381: PUSH
1382: EMPTY
1383: LIST
1384: LIST
1385: PUSH
1386: EMPTY
1387: LIST
1388: LIST
1389: LIST
1390: LIST
1391: LIST
1392: LIST
1393: LIST
1394: LIST
1395: LIST
1396: LIST
1397: LIST
1398: LIST
1399: LIST
1400: LIST
1401: LIST
1402: LIST
1403: LIST
1404: LIST
1405: LIST
1406: LIST
1407: LIST
1408: PUSH
1409: EMPTY
1410: LIST
1411: LIST
1412: LIST
1413: ST_TO_ADDR
// mobile_patrol := [ ] ;
1414: LD_ADDR_EXP 15
1418: PUSH
1419: EMPTY
1420: ST_TO_ADDR
// PrepareVehicle ( us_medium_tracked , engine_combustion , control_computer , us_gatling_gun , 100 ) ;
1421: LD_INT 3
1423: PPUSH
1424: LD_INT 1
1426: PPUSH
1427: LD_INT 3
1429: PPUSH
1430: LD_INT 4
1432: PPUSH
1433: LD_INT 100
1435: PPUSH
1436: CALL 5698 0 5
// mobile_patrol := Insert ( mobile_patrol , 1 , CreateVehicle ) ;
1440: LD_ADDR_EXP 15
1444: PUSH
1445: LD_EXP 15
1449: PPUSH
1450: LD_INT 1
1452: PPUSH
1453: CALL_OW 45
1457: PPUSH
1458: CALL_OW 2
1462: ST_TO_ADDR
// PlaceUnitXY ( mobile_patrol [ 1 ] , 99 , 55 , false ) ;
1463: LD_EXP 15
1467: PUSH
1468: LD_INT 1
1470: ARRAY
1471: PPUSH
1472: LD_INT 99
1474: PPUSH
1475: LD_INT 55
1477: PPUSH
1478: LD_INT 0
1480: PPUSH
1481: CALL_OW 48
// PrepareVehicle ( us_medium_wheeled , engine_combustion , control_computer , us_gatling_gun , 100 ) ;
1485: LD_INT 2
1487: PPUSH
1488: LD_INT 1
1490: PPUSH
1491: LD_INT 3
1493: PPUSH
1494: LD_INT 4
1496: PPUSH
1497: LD_INT 100
1499: PPUSH
1500: CALL 5698 0 5
// mobile_patrol := Insert ( mobile_patrol , 2 , CreateVehicle ) ;
1504: LD_ADDR_EXP 15
1508: PUSH
1509: LD_EXP 15
1513: PPUSH
1514: LD_INT 2
1516: PPUSH
1517: CALL_OW 45
1521: PPUSH
1522: CALL_OW 2
1526: ST_TO_ADDR
// PlaceUnitXY ( mobile_patrol [ 2 ] , 27 , 49 , false ) ;
1527: LD_EXP 15
1531: PUSH
1532: LD_INT 2
1534: ARRAY
1535: PPUSH
1536: LD_INT 27
1538: PPUSH
1539: LD_INT 49
1541: PPUSH
1542: LD_INT 0
1544: PPUSH
1545: CALL_OW 48
// PrepareVehicle ( us_medium_tracked , engine_combustion , control_computer , us_rocket_launcher , 100 ) ;
1549: LD_INT 3
1551: PPUSH
1552: LD_INT 1
1554: PPUSH
1555: LD_INT 3
1557: PPUSH
1558: LD_INT 7
1560: PPUSH
1561: LD_INT 100
1563: PPUSH
1564: CALL 5698 0 5
// mobile_patrol := Insert ( mobile_patrol , 3 , CreateVehicle ) ;
1568: LD_ADDR_EXP 15
1572: PUSH
1573: LD_EXP 15
1577: PPUSH
1578: LD_INT 3
1580: PPUSH
1581: CALL_OW 45
1585: PPUSH
1586: CALL_OW 2
1590: ST_TO_ADDR
// PlaceUnitXY ( mobile_patrol [ 3 ] , 200 , 88 , false ) ;
1591: LD_EXP 15
1595: PUSH
1596: LD_INT 3
1598: ARRAY
1599: PPUSH
1600: LD_INT 200
1602: PPUSH
1603: LD_INT 88
1605: PPUSH
1606: LD_INT 0
1608: PPUSH
1609: CALL_OW 48
// for i = mobile_patrol downto 1 do
1613: LD_ADDR_VAR 0 2
1617: PUSH
1618: DOUBLE
1619: LD_EXP 15
1623: INC
1624: ST_TO_ADDR
1625: LD_INT 1
1627: PUSH
1628: FOR_DOWNTO
1629: IFFALSE 1640
// RaiseSailEvent ( 1 ) ;
1631: LD_INT 1
1633: PPUSH
1634: CALL_OW 427
1638: GO 1628
1640: POP
1641: POP
// end ;
1642: LD_VAR 0 1
1646: RET
// export function SpawnCargo ( ) ; var i , c , k , areas , road , tmp , veh ; begin
1647: LD_INT 0
1649: PPUSH
1650: PPUSH
1651: PPUSH
1652: PPUSH
1653: PPUSH
1654: PPUSH
1655: PPUSH
1656: PPUSH
// areas := [ [ road_east , 4 ] , [ road_south , 5 ] , [ road_west , 1 ] ] ;
1657: LD_ADDR_VAR 0 5
1661: PUSH
1662: LD_INT 20
1664: PUSH
1665: LD_INT 4
1667: PUSH
1668: EMPTY
1669: LIST
1670: LIST
1671: PUSH
1672: LD_INT 21
1674: PUSH
1675: LD_INT 5
1677: PUSH
1678: EMPTY
1679: LIST
1680: LIST
1681: PUSH
1682: LD_INT 22
1684: PUSH
1685: LD_INT 1
1687: PUSH
1688: EMPTY
1689: LIST
1690: LIST
1691: PUSH
1692: EMPTY
1693: LIST
1694: LIST
1695: LIST
1696: ST_TO_ADDR
// road := [ [ 176 , 81 , 135 , 62 , 114 , 67 , 93 , 71 , 76 , 67 ] , [ 107 , 92 , 92 , 72 , 77 , 68 ] , [ 45 , 49 , 67 , 59 , 77 , 68 ] ] ;
1697: LD_ADDR_VAR 0 6
1701: PUSH
1702: LD_INT 176
1704: PUSH
1705: LD_INT 81
1707: PUSH
1708: LD_INT 135
1710: PUSH
1711: LD_INT 62
1713: PUSH
1714: LD_INT 114
1716: PUSH
1717: LD_INT 67
1719: PUSH
1720: LD_INT 93
1722: PUSH
1723: LD_INT 71
1725: PUSH
1726: LD_INT 76
1728: PUSH
1729: LD_INT 67
1731: PUSH
1732: EMPTY
1733: LIST
1734: LIST
1735: LIST
1736: LIST
1737: LIST
1738: LIST
1739: LIST
1740: LIST
1741: LIST
1742: LIST
1743: PUSH
1744: LD_INT 107
1746: PUSH
1747: LD_INT 92
1749: PUSH
1750: LD_INT 92
1752: PUSH
1753: LD_INT 72
1755: PUSH
1756: LD_INT 77
1758: PUSH
1759: LD_INT 68
1761: PUSH
1762: EMPTY
1763: LIST
1764: LIST
1765: LIST
1766: LIST
1767: LIST
1768: LIST
1769: PUSH
1770: LD_INT 45
1772: PUSH
1773: LD_INT 49
1775: PUSH
1776: LD_INT 67
1778: PUSH
1779: LD_INT 59
1781: PUSH
1782: LD_INT 77
1784: PUSH
1785: LD_INT 68
1787: PUSH
1788: EMPTY
1789: LIST
1790: LIST
1791: LIST
1792: LIST
1793: LIST
1794: LIST
1795: PUSH
1796: EMPTY
1797: LIST
1798: LIST
1799: LIST
1800: ST_TO_ADDR
// k := rand ( 1 , areas ) ;
1801: LD_ADDR_VAR 0 4
1805: PUSH
1806: LD_INT 1
1808: PPUSH
1809: LD_VAR 0 5
1813: PPUSH
1814: CALL_OW 12
1818: ST_TO_ADDR
// c := rand ( 1 , 2 ) ;
1819: LD_ADDR_VAR 0 3
1823: PUSH
1824: LD_INT 1
1826: PPUSH
1827: LD_INT 2
1829: PPUSH
1830: CALL_OW 12
1834: ST_TO_ADDR
// uc_side := 1 ;
1835: LD_ADDR_OWVAR 20
1839: PUSH
1840: LD_INT 1
1842: ST_TO_ADDR
// uc_nation := 1 ;
1843: LD_ADDR_OWVAR 21
1847: PUSH
1848: LD_INT 1
1850: ST_TO_ADDR
// PrepareVehicle ( us_medium_wheeled , engine_siberite , control_computer , us_cargo_bay , 100 ) ;
1851: LD_INT 2
1853: PPUSH
1854: LD_INT 3
1856: PPUSH
1857: LD_INT 3
1859: PPUSH
1860: LD_INT 12
1862: PPUSH
1863: LD_INT 100
1865: PPUSH
1866: CALL 5698 0 5
// veh := CreateVehicle ;
1870: LD_ADDR_VAR 0 8
1874: PUSH
1875: CALL_OW 45
1879: ST_TO_ADDR
// SetDir ( veh , areas [ k ] [ 2 ] ) ;
1880: LD_VAR 0 8
1884: PPUSH
1885: LD_VAR 0 5
1889: PUSH
1890: LD_VAR 0 4
1894: ARRAY
1895: PUSH
1896: LD_INT 2
1898: ARRAY
1899: PPUSH
1900: CALL_OW 233
// PlaceUnitArea ( veh , areas [ k ] [ 1 ] , false ) ;
1904: LD_VAR 0 8
1908: PPUSH
1909: LD_VAR 0 5
1913: PUSH
1914: LD_VAR 0 4
1918: ARRAY
1919: PUSH
1920: LD_INT 1
1922: ARRAY
1923: PPUSH
1924: LD_INT 0
1926: PPUSH
1927: CALL_OW 49
// SetCargo ( veh , [ mat_cans , mat_siberit ] [ c ] , 100 ) ;
1931: LD_VAR 0 8
1935: PPUSH
1936: LD_INT 1
1938: PUSH
1939: LD_INT 3
1941: PUSH
1942: EMPTY
1943: LIST
1944: LIST
1945: PUSH
1946: LD_VAR 0 3
1950: ARRAY
1951: PPUSH
1952: LD_INT 100
1954: PPUSH
1955: CALL_OW 290
// tmp := road [ k ] ;
1959: LD_ADDR_VAR 0 7
1963: PUSH
1964: LD_VAR 0 6
1968: PUSH
1969: LD_VAR 0 4
1973: ARRAY
1974: ST_TO_ADDR
// for i = 1 to tmp div 2 do
1975: LD_ADDR_VAR 0 2
1979: PUSH
1980: DOUBLE
1981: LD_INT 1
1983: DEC
1984: ST_TO_ADDR
1985: LD_VAR 0 7
1989: PUSH
1990: LD_INT 2
1992: DIV
1993: PUSH
1994: FOR_TO
1995: IFFALSE 2042
// AddComMoveXY ( veh , tmp [ i * 2 - 1 ] , tmp [ i * 2 ] ) ;
1997: LD_VAR 0 8
2001: PPUSH
2002: LD_VAR 0 7
2006: PUSH
2007: LD_VAR 0 2
2011: PUSH
2012: LD_INT 2
2014: MUL
2015: PUSH
2016: LD_INT 1
2018: MINUS
2019: ARRAY
2020: PPUSH
2021: LD_VAR 0 7
2025: PUSH
2026: LD_VAR 0 2
2030: PUSH
2031: LD_INT 2
2033: MUL
2034: ARRAY
2035: PPUSH
2036: CALL_OW 171
2040: GO 1994
2042: POP
2043: POP
// AddComGive ( veh , alfa ) ;
2044: LD_VAR 0 8
2048: PPUSH
2049: LD_INT 5
2051: PPUSH
2052: CALL_OW 221
// AddComWait ( veh , 0 0$2 ) ;
2056: LD_VAR 0 8
2060: PPUSH
2061: LD_INT 70
2063: PPUSH
2064: CALL_OW 202
// for i = tmp div 2 downto 1 do
2068: LD_ADDR_VAR 0 2
2072: PUSH
2073: DOUBLE
2074: LD_VAR 0 7
2078: PUSH
2079: LD_INT 2
2081: DIV
2082: INC
2083: ST_TO_ADDR
2084: LD_INT 1
2086: PUSH
2087: FOR_DOWNTO
2088: IFFALSE 2135
// AddComMoveXY ( veh , tmp [ i * 2 - 1 ] , tmp [ i * 2 ] ) ;
2090: LD_VAR 0 8
2094: PPUSH
2095: LD_VAR 0 7
2099: PUSH
2100: LD_VAR 0 2
2104: PUSH
2105: LD_INT 2
2107: MUL
2108: PUSH
2109: LD_INT 1
2111: MINUS
2112: ARRAY
2113: PPUSH
2114: LD_VAR 0 7
2118: PUSH
2119: LD_VAR 0 2
2123: PUSH
2124: LD_INT 2
2126: MUL
2127: ARRAY
2128: PPUSH
2129: CALL_OW 171
2133: GO 2087
2135: POP
2136: POP
// AddComMoveToArea ( veh , areas [ k ] [ 1 ] ) ;
2137: LD_VAR 0 8
2141: PPUSH
2142: LD_VAR 0 5
2146: PUSH
2147: LD_VAR 0 4
2151: ARRAY
2152: PUSH
2153: LD_INT 1
2155: ARRAY
2156: PPUSH
2157: CALL_OW 173
// repeat wait ( 0 0$1 ) ;
2161: LD_INT 35
2163: PPUSH
2164: CALL_OW 67
// until IsInArea ( veh , areas [ k ] [ 1 ] ) and GetCargo ( veh , c ) = 0 ;
2168: LD_VAR 0 8
2172: PPUSH
2173: LD_VAR 0 5
2177: PUSH
2178: LD_VAR 0 4
2182: ARRAY
2183: PUSH
2184: LD_INT 1
2186: ARRAY
2187: PPUSH
2188: CALL_OW 308
2192: PUSH
2193: LD_VAR 0 8
2197: PPUSH
2198: LD_VAR 0 3
2202: PPUSH
2203: CALL_OW 289
2207: PUSH
2208: LD_INT 0
2210: EQUAL
2211: AND
2212: IFFALSE 2161
// RemoveUnit ( veh ) ;
2214: LD_VAR 0 8
2218: PPUSH
2219: CALL_OW 64
// end ;
2223: LD_VAR 0 1
2227: RET
// every 3 3$00 do
2228: GO 2230
2230: DISABLE
// begin enable ;
2231: ENABLE
// SpawnCargo ;
2232: CALL 1647 0 0
// end ;
2236: END
// export function PrepareDefenders ; var i , tmp ; begin
2237: LD_INT 0
2239: PPUSH
2240: PPUSH
2241: PPUSH
// if defenders then
2242: LD_EXP 18
2246: IFFALSE 2250
// exit ;
2248: GO 2514
// for i = 1 to [ 4 , 5 , 6 ] [ Difficulty ] do
2250: LD_ADDR_VAR 0 2
2254: PUSH
2255: DOUBLE
2256: LD_INT 1
2258: DEC
2259: ST_TO_ADDR
2260: LD_INT 4
2262: PUSH
2263: LD_INT 5
2265: PUSH
2266: LD_INT 6
2268: PUSH
2269: EMPTY
2270: LIST
2271: LIST
2272: LIST
2273: PUSH
2274: LD_OWVAR 67
2278: ARRAY
2279: PUSH
2280: FOR_TO
2281: IFFALSE 2420
// begin tmp := Produce ( amfac2 , [ us_medium_wheeled , us_medium_tracked ] [ rand ( 1 , 2 ) ] , [ engine_combustion , engine_siberite ] [ rand ( 1 , 2 ) ] , control_remote , [ us_gatling_gun , us_double_gun , us_laser ] [ rand ( 1 , 3 ) ] ) ;
2283: LD_ADDR_VAR 0 3
2287: PUSH
2288: LD_INT 6
2290: PPUSH
2291: LD_INT 2
2293: PUSH
2294: LD_INT 3
2296: PUSH
2297: EMPTY
2298: LIST
2299: LIST
2300: PUSH
2301: LD_INT 1
2303: PPUSH
2304: LD_INT 2
2306: PPUSH
2307: CALL_OW 12
2311: ARRAY
2312: PPUSH
2313: LD_INT 1
2315: PUSH
2316: LD_INT 3
2318: PUSH
2319: EMPTY
2320: LIST
2321: LIST
2322: PUSH
2323: LD_INT 1
2325: PPUSH
2326: LD_INT 2
2328: PPUSH
2329: CALL_OW 12
2333: ARRAY
2334: PPUSH
2335: LD_INT 2
2337: PPUSH
2338: LD_INT 4
2340: PUSH
2341: LD_INT 5
2343: PUSH
2344: LD_INT 9
2346: PUSH
2347: EMPTY
2348: LIST
2349: LIST
2350: LIST
2351: PUSH
2352: LD_INT 1
2354: PPUSH
2355: LD_INT 3
2357: PPUSH
2358: CALL_OW 12
2362: ARRAY
2363: PPUSH
2364: CALL 28393 0 5
2368: ST_TO_ADDR
// if tmp then
2369: LD_VAR 0 3
2373: IFFALSE 2418
// AddComConstruct ( amfac2 , tmp [ 1 ] , tmp [ 2 ] , tmp [ 3 ] , tmp [ 4 ] ) ;
2375: LD_INT 6
2377: PPUSH
2378: LD_VAR 0 3
2382: PUSH
2383: LD_INT 1
2385: ARRAY
2386: PPUSH
2387: LD_VAR 0 3
2391: PUSH
2392: LD_INT 2
2394: ARRAY
2395: PPUSH
2396: LD_VAR 0 3
2400: PUSH
2401: LD_INT 3
2403: ARRAY
2404: PPUSH
2405: LD_VAR 0 3
2409: PUSH
2410: LD_INT 4
2412: ARRAY
2413: PPUSH
2414: CALL_OW 185
// end ;
2418: GO 2280
2420: POP
2421: POP
// repeat wait ( 0 0$1 ) ;
2422: LD_INT 35
2424: PPUSH
2425: CALL_OW 67
// until FilterAllUnits ( [ [ f_side , 1 ] , [ f_control , control_remote ] ] ) >= [ 4 , 5 , 6 ] [ Difficulty ] ;
2429: LD_INT 22
2431: PUSH
2432: LD_INT 1
2434: PUSH
2435: EMPTY
2436: LIST
2437: LIST
2438: PUSH
2439: LD_INT 33
2441: PUSH
2442: LD_INT 2
2444: PUSH
2445: EMPTY
2446: LIST
2447: LIST
2448: PUSH
2449: EMPTY
2450: LIST
2451: LIST
2452: PPUSH
2453: CALL_OW 69
2457: PUSH
2458: LD_INT 4
2460: PUSH
2461: LD_INT 5
2463: PUSH
2464: LD_INT 6
2466: PUSH
2467: EMPTY
2468: LIST
2469: LIST
2470: LIST
2471: PUSH
2472: LD_OWVAR 67
2476: ARRAY
2477: GREATEREQUAL
2478: IFFALSE 2422
// defenders := FilterAllUnits ( [ [ f_side , 1 ] , [ f_control , control_remote ] ] ) ;
2480: LD_ADDR_EXP 18
2484: PUSH
2485: LD_INT 22
2487: PUSH
2488: LD_INT 1
2490: PUSH
2491: EMPTY
2492: LIST
2493: LIST
2494: PUSH
2495: LD_INT 33
2497: PUSH
2498: LD_INT 2
2500: PUSH
2501: EMPTY
2502: LIST
2503: LIST
2504: PUSH
2505: EMPTY
2506: LIST
2507: LIST
2508: PPUSH
2509: CALL_OW 69
2513: ST_TO_ADDR
// end ;
2514: LD_VAR 0 1
2518: RET
// export function Defend ; var i , un , veh , tmp ; begin
2519: LD_INT 0
2521: PPUSH
2522: PPUSH
2523: PPUSH
2524: PPUSH
2525: PPUSH
// defcon_wave := defcon_wave + 1 ;
2526: LD_ADDR_EXP 20
2530: PUSH
2531: LD_EXP 20
2535: PUSH
2536: LD_INT 1
2538: PLUS
2539: ST_TO_ADDR
// if not defenders then
2540: LD_EXP 18
2544: NOT
2545: IFFALSE 2551
// PrepareDefenders ;
2547: CALL 2237 0 0
// if defcon_wave > 1 then
2551: LD_EXP 20
2555: PUSH
2556: LD_INT 1
2558: GREATER
2559: IFFALSE 2785
// begin for i = 1 to defcon_wave + 2 do
2561: LD_ADDR_VAR 0 2
2565: PUSH
2566: DOUBLE
2567: LD_INT 1
2569: DEC
2570: ST_TO_ADDR
2571: LD_EXP 20
2575: PUSH
2576: LD_INT 2
2578: PLUS
2579: PUSH
2580: FOR_TO
2581: IFFALSE 2707
// begin PrepareVehicle ( us_heavy_tracked , engine_siberite , control_manual , [ us_gatling_gun , us_heavy_gun , us_rocket_launcher ] [ rand ( 1 , 3 ) ] , 100 ) ;
2583: LD_INT 4
2585: PPUSH
2586: LD_INT 3
2588: PPUSH
2589: LD_INT 1
2591: PPUSH
2592: LD_INT 4
2594: PUSH
2595: LD_INT 6
2597: PUSH
2598: LD_INT 7
2600: PUSH
2601: EMPTY
2602: LIST
2603: LIST
2604: LIST
2605: PUSH
2606: LD_INT 1
2608: PPUSH
2609: LD_INT 3
2611: PPUSH
2612: CALL_OW 12
2616: ARRAY
2617: PPUSH
2618: LD_INT 100
2620: PPUSH
2621: CALL 5698 0 5
// veh := CreateVehicle ;
2625: LD_ADDR_VAR 0 4
2629: PUSH
2630: CALL_OW 45
2634: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
2635: LD_VAR 0 4
2639: PPUSH
2640: LD_INT 1
2642: PPUSH
2643: CALL_OW 233
// defenders := defenders ^ veh ;
2647: LD_ADDR_EXP 18
2651: PUSH
2652: LD_EXP 18
2656: PUSH
2657: LD_VAR 0 4
2661: ADD
2662: ST_TO_ADDR
// PrepareHuman ( false , 3 , 9 ) ;
2663: LD_INT 0
2665: PPUSH
2666: LD_INT 3
2668: PPUSH
2669: LD_INT 9
2671: PPUSH
2672: CALL_OW 380
// PlaceHumanInUnit ( CreateHuman , veh ) ;
2676: CALL_OW 44
2680: PPUSH
2681: LD_VAR 0 4
2685: PPUSH
2686: CALL_OW 52
// PlaceUnitArea ( veh , west_spawn , false ) ;
2690: LD_VAR 0 4
2694: PPUSH
2695: LD_INT 25
2697: PPUSH
2698: LD_INT 0
2700: PPUSH
2701: CALL_OW 49
// end ;
2705: GO 2580
2707: POP
2708: POP
// for i = 1 to defcon_wave do
2709: LD_ADDR_VAR 0 2
2713: PUSH
2714: DOUBLE
2715: LD_INT 1
2717: DEC
2718: ST_TO_ADDR
2719: LD_EXP 20
2723: PUSH
2724: FOR_TO
2725: IFFALSE 2783
// begin PrepareHuman ( false , 5 , 9 ) ;
2727: LD_INT 0
2729: PPUSH
2730: LD_INT 5
2732: PPUSH
2733: LD_INT 9
2735: PPUSH
2736: CALL_OW 380
// un := CreateHuman ;
2740: LD_ADDR_VAR 0 3
2744: PUSH
2745: CALL_OW 44
2749: ST_TO_ADDR
// PlaceUnitArea ( un , west_spawn , false ) ;
2750: LD_VAR 0 3
2754: PPUSH
2755: LD_INT 25
2757: PPUSH
2758: LD_INT 0
2760: PPUSH
2761: CALL_OW 49
// defenders := defenders ^ un ;
2765: LD_ADDR_EXP 18
2769: PUSH
2770: LD_EXP 18
2774: PUSH
2775: LD_VAR 0 3
2779: ADD
2780: ST_TO_ADDR
// end ;
2781: GO 2724
2783: POP
2784: POP
// end ; repeat wait ( 0 0$1 ) ;
2785: LD_INT 35
2787: PPUSH
2788: CALL_OW 67
// for i in defenders do
2792: LD_ADDR_VAR 0 2
2796: PUSH
2797: LD_EXP 18
2801: PUSH
2802: FOR_IN
2803: IFFALSE 2885
// begin if defcon and GetDistUnitXY ( i , defcon [ 1 ] , defcon [ 2 ] ) > 10 and not HasTask ( i ) then
2805: LD_EXP 19
2809: PUSH
2810: LD_VAR 0 2
2814: PPUSH
2815: LD_EXP 19
2819: PUSH
2820: LD_INT 1
2822: ARRAY
2823: PPUSH
2824: LD_EXP 19
2828: PUSH
2829: LD_INT 2
2831: ARRAY
2832: PPUSH
2833: CALL_OW 297
2837: PUSH
2838: LD_INT 10
2840: GREATER
2841: AND
2842: PUSH
2843: LD_VAR 0 2
2847: PPUSH
2848: CALL_OW 314
2852: NOT
2853: AND
2854: IFFALSE 2883
// ComAgressiveMove ( i , defcon [ 1 ] , defcon [ 2 ] ) ;
2856: LD_VAR 0 2
2860: PPUSH
2861: LD_EXP 19
2865: PUSH
2866: LD_INT 1
2868: ARRAY
2869: PPUSH
2870: LD_EXP 19
2874: PUSH
2875: LD_INT 2
2877: ARRAY
2878: PPUSH
2879: CALL_OW 114
// end ;
2883: GO 2802
2885: POP
2886: POP
// until not defenders ;
2887: LD_EXP 18
2891: NOT
2892: IFFALSE 2785
// end ;
2894: LD_VAR 0 1
2898: RET
// every 0 0$1 do var radar , i ;
2899: GO 2901
2901: DISABLE
2902: LD_INT 0
2904: PPUSH
2905: PPUSH
// begin uc_side := 1 ;
2906: LD_ADDR_OWVAR 20
2910: PUSH
2911: LD_INT 1
2913: ST_TO_ADDR
// uc_nation := 1 ;
2914: LD_ADDR_OWVAR 21
2918: PUSH
2919: LD_INT 1
2921: ST_TO_ADDR
// PrepareVehicle ( us_light_wheeled , engine_solar , control_computer , us_radar , 100 ) ;
2922: LD_INT 1
2924: PPUSH
2925: LD_INT 2
2927: PPUSH
2928: LD_INT 3
2930: PPUSH
2931: LD_INT 11
2933: PPUSH
2934: LD_INT 100
2936: PPUSH
2937: CALL 5698 0 5
// radar := CreateVehicle ;
2941: LD_ADDR_VAR 0 1
2945: PUSH
2946: CALL_OW 45
2950: ST_TO_ADDR
// SetDir ( radar , 4 ) ;
2951: LD_VAR 0 1
2955: PPUSH
2956: LD_INT 4
2958: PPUSH
2959: CALL_OW 233
// PlaceUnitXY ( radar , 51 , 45 , false ) ;
2963: LD_VAR 0 1
2967: PPUSH
2968: LD_INT 51
2970: PPUSH
2971: LD_INT 45
2973: PPUSH
2974: LD_INT 0
2976: PPUSH
2977: CALL_OW 48
// repeat AddComWait ( radar , 0 0$20 ) ;
2981: LD_VAR 0 1
2985: PPUSH
2986: LD_INT 700
2988: PPUSH
2989: CALL_OW 202
// AddComMoveXY ( radar , 65 , 75 ) ;
2993: LD_VAR 0 1
2997: PPUSH
2998: LD_INT 65
3000: PPUSH
3001: LD_INT 75
3003: PPUSH
3004: CALL_OW 171
// AddComWait ( radar , 0 0$10 ) ;
3008: LD_VAR 0 1
3012: PPUSH
3013: LD_INT 350
3015: PPUSH
3016: CALL_OW 202
// AddComMoveXY ( radar , 83 , 87 ) ;
3020: LD_VAR 0 1
3024: PPUSH
3025: LD_INT 83
3027: PPUSH
3028: LD_INT 87
3030: PPUSH
3031: CALL_OW 171
// AddComWait ( radar , 0 0$15 ) ;
3035: LD_VAR 0 1
3039: PPUSH
3040: LD_INT 525
3042: PPUSH
3043: CALL_OW 202
// AddComMoveXY ( radar , 94 , 81 ) ;
3047: LD_VAR 0 1
3051: PPUSH
3052: LD_INT 94
3054: PPUSH
3055: LD_INT 81
3057: PPUSH
3058: CALL_OW 171
// AddComWait ( radar , 0 0$10 ) ;
3062: LD_VAR 0 1
3066: PPUSH
3067: LD_INT 350
3069: PPUSH
3070: CALL_OW 202
// AddComMoveXY ( radar , 55 , 48 ) ;
3074: LD_VAR 0 1
3078: PPUSH
3079: LD_INT 55
3081: PPUSH
3082: LD_INT 48
3084: PPUSH
3085: CALL_OW 171
// wait ( 1 1$00 ) ;
3089: LD_INT 2100
3091: PPUSH
3092: CALL_OW 67
// until not IsOk ( radar ) ;
3096: LD_VAR 0 1
3100: PPUSH
3101: CALL_OW 302
3105: NOT
3106: IFFALSE 2981
// end ;
3108: PPOPN 2
3110: END
// every 7 7$30 trigger Difficulty > 1 and extra_patrol do var un ;
3111: LD_OWVAR 67
3115: PUSH
3116: LD_INT 1
3118: GREATER
3119: PUSH
3120: LD_EXP 11
3124: AND
3125: IFFALSE 3347
3127: GO 3129
3129: DISABLE
3130: LD_INT 0
3132: PPUSH
// begin enable ;
3133: ENABLE
// uc_side := 1 ;
3134: LD_ADDR_OWVAR 20
3138: PUSH
3139: LD_INT 1
3141: ST_TO_ADDR
// uc_nation := 1 ;
3142: LD_ADDR_OWVAR 21
3146: PUSH
3147: LD_INT 1
3149: ST_TO_ADDR
// PrepareVehicle ( us_morphling , engine_siberite , control_computer , us_gatling_gun , 100 ) ;
3150: LD_INT 5
3152: PPUSH
3153: LD_INT 3
3155: PPUSH
3156: LD_INT 3
3158: PPUSH
3159: LD_INT 4
3161: PPUSH
3162: LD_INT 100
3164: PPUSH
3165: CALL 5698 0 5
// un := CreateVehicle ;
3169: LD_ADDR_VAR 0 1
3173: PUSH
3174: CALL_OW 45
3178: ST_TO_ADDR
// SetDir ( un , 3 ) ;
3179: LD_VAR 0 1
3183: PPUSH
3184: LD_INT 3
3186: PPUSH
3187: CALL_OW 233
// PlaceUnitXY ( un , 155 , 2 , false ) ;
3191: LD_VAR 0 1
3195: PPUSH
3196: LD_INT 155
3198: PPUSH
3199: LD_INT 2
3201: PPUSH
3202: LD_INT 0
3204: PPUSH
3205: CALL_OW 48
// ComAgressiveMove ( un , 169 , 77 ) ;
3209: LD_VAR 0 1
3213: PPUSH
3214: LD_INT 169
3216: PPUSH
3217: LD_INT 77
3219: PPUSH
3220: CALL_OW 114
// AddComWait ( un , 0 0$2 ) ;
3224: LD_VAR 0 1
3228: PPUSH
3229: LD_INT 70
3231: PPUSH
3232: CALL_OW 202
// AddComAgressiveMove ( un , 134 , 62 ) ;
3236: LD_VAR 0 1
3240: PPUSH
3241: LD_INT 134
3243: PPUSH
3244: LD_INT 62
3246: PPUSH
3247: CALL_OW 174
// AddComAgressiveMove ( un , 103 , 42 ) ;
3251: LD_VAR 0 1
3255: PPUSH
3256: LD_INT 103
3258: PPUSH
3259: LD_INT 42
3261: PPUSH
3262: CALL_OW 174
// AddComWait ( un , 0 0$2 ) ;
3266: LD_VAR 0 1
3270: PPUSH
3271: LD_INT 70
3273: PPUSH
3274: CALL_OW 202
// AddComAgressiveMove ( un , 84 , 2 ) ;
3278: LD_VAR 0 1
3282: PPUSH
3283: LD_INT 84
3285: PPUSH
3286: LD_INT 2
3288: PPUSH
3289: CALL_OW 174
// repeat wait ( 0 0$1 ) ;
3293: LD_INT 35
3295: PPUSH
3296: CALL_OW 67
// if IsDead ( un ) then
3300: LD_VAR 0 1
3304: PPUSH
3305: CALL_OW 301
3309: IFFALSE 3321
// begin extra_patrol := false ;
3311: LD_ADDR_EXP 11
3315: PUSH
3316: LD_INT 0
3318: ST_TO_ADDR
// exit ;
3319: GO 3347
// end ; until IsAt ( un , 84 , 2 ) ;
3321: LD_VAR 0 1
3325: PPUSH
3326: LD_INT 84
3328: PPUSH
3329: LD_INT 2
3331: PPUSH
3332: CALL_OW 307
3336: IFFALSE 3293
// RemoveUnit ( un ) ;
3338: LD_VAR 0 1
3342: PPUSH
3343: CALL_OW 64
// end ; end_of_file
3347: PPOPN 1
3349: END
// export Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi , Simms , Joan , DeltaDoctor ; export function PrepareFriends ; var i , tmp , buildings , areas , bunkers , cl ; begin
3350: LD_INT 0
3352: PPUSH
3353: PPUSH
3354: PPUSH
3355: PPUSH
3356: PPUSH
3357: PPUSH
3358: PPUSH
// uc_side := 4 ;
3359: LD_ADDR_OWVAR 20
3363: PUSH
3364: LD_INT 4
3366: ST_TO_ADDR
// uc_nation := 1 ;
3367: LD_ADDR_OWVAR 21
3371: PUSH
3372: LD_INT 1
3374: ST_TO_ADDR
// DeltaDoctor := PrepareUnit ( DeltaDoctor , ( not debug ) , 10c_ ) ;
3375: LD_ADDR_EXP 35
3379: PUSH
3380: LD_STRING DeltaDoctor
3382: PPUSH
3383: LD_EXP 1
3387: NOT
3388: PPUSH
3389: LD_STRING 10c_
3391: PPUSH
3392: CALL 5635 0 3
3396: ST_TO_ADDR
// Joan := PrepareUnit ( Joan , ( not debug ) , 10c_ ) ;
3397: LD_ADDR_EXP 34
3401: PUSH
3402: LD_STRING Joan
3404: PPUSH
3405: LD_EXP 1
3409: NOT
3410: PPUSH
3411: LD_STRING 10c_
3413: PPUSH
3414: CALL 5635 0 3
3418: ST_TO_ADDR
// if Joan then
3419: LD_EXP 34
3423: IFFALSE 3454
// friends := Insert ( friends , friends + 1 , Joan ) ;
3425: LD_ADDR_EXP 4
3429: PUSH
3430: LD_EXP 4
3434: PPUSH
3435: LD_EXP 4
3439: PUSH
3440: LD_INT 1
3442: PLUS
3443: PPUSH
3444: LD_EXP 34
3448: PPUSH
3449: CALL_OW 2
3453: ST_TO_ADDR
// Simms := PrepareUnit ( Simms , ( not debug ) , 10c_ ) ;
3454: LD_ADDR_EXP 33
3458: PUSH
3459: LD_STRING Simms
3461: PPUSH
3462: LD_EXP 1
3466: NOT
3467: PPUSH
3468: LD_STRING 10c_
3470: PPUSH
3471: CALL 5635 0 3
3475: ST_TO_ADDR
// Kikuchi := PrepareUnit ( Kikuchi , ( not debug ) , 11_ ) ;
3476: LD_ADDR_EXP 32
3480: PUSH
3481: LD_STRING Kikuchi
3483: PPUSH
3484: LD_EXP 1
3488: NOT
3489: PPUSH
3490: LD_STRING 11_
3492: PPUSH
3493: CALL 5635 0 3
3497: ST_TO_ADDR
// if Kikuchi then
3498: LD_EXP 32
3502: IFFALSE 3533
// friends := Insert ( friends , friends + 1 , Kikuchi ) ;
3504: LD_ADDR_EXP 4
3508: PUSH
3509: LD_EXP 4
3513: PPUSH
3514: LD_EXP 4
3518: PUSH
3519: LD_INT 1
3521: PLUS
3522: PPUSH
3523: LD_EXP 32
3527: PPUSH
3528: CALL_OW 2
3532: ST_TO_ADDR
// Frank := PrepareUnit ( Frank , ( not debug ) , 11_ ) ;
3533: LD_ADDR_EXP 31
3537: PUSH
3538: LD_STRING Frank
3540: PPUSH
3541: LD_EXP 1
3545: NOT
3546: PPUSH
3547: LD_STRING 11_
3549: PPUSH
3550: CALL 5635 0 3
3554: ST_TO_ADDR
// if Frank then
3555: LD_EXP 31
3559: IFFALSE 3590
// friends := Insert ( friends , friends + 1 , Frank ) ;
3561: LD_ADDR_EXP 4
3565: PUSH
3566: LD_EXP 4
3570: PPUSH
3571: LD_EXP 4
3575: PUSH
3576: LD_INT 1
3578: PLUS
3579: PPUSH
3580: LD_EXP 31
3584: PPUSH
3585: CALL_OW 2
3589: ST_TO_ADDR
// Gary := PrepareUnit ( Gary , ( not debug ) , 11_ ) ;
3590: LD_ADDR_EXP 30
3594: PUSH
3595: LD_STRING Gary
3597: PPUSH
3598: LD_EXP 1
3602: NOT
3603: PPUSH
3604: LD_STRING 11_
3606: PPUSH
3607: CALL 5635 0 3
3611: ST_TO_ADDR
// if Gary then
3612: LD_EXP 30
3616: IFFALSE 3647
// friends := Insert ( friends , friends + 1 , Gary ) ;
3618: LD_ADDR_EXP 4
3622: PUSH
3623: LD_EXP 4
3627: PPUSH
3628: LD_EXP 4
3632: PUSH
3633: LD_INT 1
3635: PLUS
3636: PPUSH
3637: LD_EXP 30
3641: PPUSH
3642: CALL_OW 2
3646: ST_TO_ADDR
// Cornel := PrepareUnit ( Cornell , ( not debug ) , 11_ ) ;
3647: LD_ADDR_EXP 29
3651: PUSH
3652: LD_STRING Cornell
3654: PPUSH
3655: LD_EXP 1
3659: NOT
3660: PPUSH
3661: LD_STRING 11_
3663: PPUSH
3664: CALL 5635 0 3
3668: ST_TO_ADDR
// if Cornel then
3669: LD_EXP 29
3673: IFFALSE 3704
// friends := Insert ( friends , friends + 1 , Cornel ) ;
3675: LD_ADDR_EXP 4
3679: PUSH
3680: LD_EXP 4
3684: PPUSH
3685: LD_EXP 4
3689: PUSH
3690: LD_INT 1
3692: PLUS
3693: PPUSH
3694: LD_EXP 29
3698: PPUSH
3699: CALL_OW 2
3703: ST_TO_ADDR
// Houten := PrepareUnit ( Houten , ( not debug ) , 11_ ) ;
3704: LD_ADDR_EXP 28
3708: PUSH
3709: LD_STRING Houten
3711: PPUSH
3712: LD_EXP 1
3716: NOT
3717: PPUSH
3718: LD_STRING 11_
3720: PPUSH
3721: CALL 5635 0 3
3725: ST_TO_ADDR
// if Houten then
3726: LD_EXP 28
3730: IFFALSE 3761
// friends := Insert ( friends , friends + 1 , Houten ) ;
3732: LD_ADDR_EXP 4
3736: PUSH
3737: LD_EXP 4
3741: PPUSH
3742: LD_EXP 4
3746: PUSH
3747: LD_INT 1
3749: PLUS
3750: PPUSH
3751: LD_EXP 28
3755: PPUSH
3756: CALL_OW 2
3760: ST_TO_ADDR
// Gladstone := PrepareUnit ( Gladstone , ( not debug ) , 11_ ) ;
3761: LD_ADDR_EXP 27
3765: PUSH
3766: LD_STRING Gladstone
3768: PPUSH
3769: LD_EXP 1
3773: NOT
3774: PPUSH
3775: LD_STRING 11_
3777: PPUSH
3778: CALL 5635 0 3
3782: ST_TO_ADDR
// if Gladstone then
3783: LD_EXP 27
3787: IFFALSE 3818
// friends := Insert ( friends , friends + 1 , Gladstone ) ;
3789: LD_ADDR_EXP 4
3793: PUSH
3794: LD_EXP 4
3798: PPUSH
3799: LD_EXP 4
3803: PUSH
3804: LD_INT 1
3806: PLUS
3807: PPUSH
3808: LD_EXP 27
3812: PPUSH
3813: CALL_OW 2
3817: ST_TO_ADDR
// Lisa := PrepareUnit ( Lisa , ( not debug ) , 11_ ) ;
3818: LD_ADDR_EXP 21
3822: PUSH
3823: LD_STRING Lisa
3825: PPUSH
3826: LD_EXP 1
3830: NOT
3831: PPUSH
3832: LD_STRING 11_
3834: PPUSH
3835: CALL 5635 0 3
3839: ST_TO_ADDR
// if Lisa then
3840: LD_EXP 21
3844: IFFALSE 3869
// friends := Insert ( friends , 1 , Lisa ) ;
3846: LD_ADDR_EXP 4
3850: PUSH
3851: LD_EXP 4
3855: PPUSH
3856: LD_INT 1
3858: PPUSH
3859: LD_EXP 21
3863: PPUSH
3864: CALL_OW 2
3868: ST_TO_ADDR
// Donaldson := PrepareUnit ( Donaldson , ( not debug ) , 11_ ) ;
3869: LD_ADDR_EXP 22
3873: PUSH
3874: LD_STRING Donaldson
3876: PPUSH
3877: LD_EXP 1
3881: NOT
3882: PPUSH
3883: LD_STRING 11_
3885: PPUSH
3886: CALL 5635 0 3
3890: ST_TO_ADDR
// if Donaldson then
3891: LD_EXP 22
3895: IFFALSE 3926
// friends := Insert ( friends , friends + 1 , Donaldson ) ;
3897: LD_ADDR_EXP 4
3901: PUSH
3902: LD_EXP 4
3906: PPUSH
3907: LD_EXP 4
3911: PUSH
3912: LD_INT 1
3914: PLUS
3915: PPUSH
3916: LD_EXP 22
3920: PPUSH
3921: CALL_OW 2
3925: ST_TO_ADDR
// Bobby := PrepareUnit ( Bobby , ( not debug ) , 11_ ) ;
3926: LD_ADDR_EXP 23
3930: PUSH
3931: LD_STRING Bobby
3933: PPUSH
3934: LD_EXP 1
3938: NOT
3939: PPUSH
3940: LD_STRING 11_
3942: PPUSH
3943: CALL 5635 0 3
3947: ST_TO_ADDR
// if Bobby then
3948: LD_EXP 23
3952: IFFALSE 3983
// friends := Insert ( friends , friends + 1 , Bobby ) ;
3954: LD_ADDR_EXP 4
3958: PUSH
3959: LD_EXP 4
3963: PPUSH
3964: LD_EXP 4
3968: PUSH
3969: LD_INT 1
3971: PLUS
3972: PPUSH
3973: LD_EXP 23
3977: PPUSH
3978: CALL_OW 2
3982: ST_TO_ADDR
// Cyrus := PrepareUnit ( Cyrus , ( not debug ) , 11_ ) ;
3983: LD_ADDR_EXP 24
3987: PUSH
3988: LD_STRING Cyrus
3990: PPUSH
3991: LD_EXP 1
3995: NOT
3996: PPUSH
3997: LD_STRING 11_
3999: PPUSH
4000: CALL 5635 0 3
4004: ST_TO_ADDR
// if Cyrus then
4005: LD_EXP 24
4009: IFFALSE 4040
// friends := Insert ( friends , friends + 1 , Cyrus ) ;
4011: LD_ADDR_EXP 4
4015: PUSH
4016: LD_EXP 4
4020: PPUSH
4021: LD_EXP 4
4025: PUSH
4026: LD_INT 1
4028: PLUS
4029: PPUSH
4030: LD_EXP 24
4034: PPUSH
4035: CALL_OW 2
4039: ST_TO_ADDR
// Denis := PrepareUnit ( Denis , ( not debug ) , 11_ ) ;
4040: LD_ADDR_EXP 25
4044: PUSH
4045: LD_STRING Denis
4047: PPUSH
4048: LD_EXP 1
4052: NOT
4053: PPUSH
4054: LD_STRING 11_
4056: PPUSH
4057: CALL 5635 0 3
4061: ST_TO_ADDR
// Brown := PrepareUnit ( Brown , ( not debug ) , 11_ ) ;
4062: LD_ADDR_EXP 26
4066: PUSH
4067: LD_STRING Brown
4069: PPUSH
4070: LD_EXP 1
4074: NOT
4075: PPUSH
4076: LD_STRING 11_
4078: PPUSH
4079: CALL 5635 0 3
4083: ST_TO_ADDR
// if Brown then
4084: LD_EXP 26
4088: IFFALSE 4119
// friends := Insert ( friends , friends + 1 , Brown ) ;
4090: LD_ADDR_EXP 4
4094: PUSH
4095: LD_EXP 4
4099: PPUSH
4100: LD_EXP 4
4104: PUSH
4105: LD_INT 1
4107: PLUS
4108: PPUSH
4109: LD_EXP 26
4113: PPUSH
4114: CALL_OW 2
4118: ST_TO_ADDR
// friends := friends ^ CreateCharacterSet ( 11c_others ) ^ CreateCharacterSet ( 11_others ) ;
4119: LD_ADDR_EXP 4
4123: PUSH
4124: LD_EXP 4
4128: PUSH
4129: LD_STRING 11c_others
4131: PPUSH
4132: CALL_OW 31
4136: ADD
4137: PUSH
4138: LD_STRING 11_others
4140: PPUSH
4141: CALL_OW 31
4145: ADD
4146: ST_TO_ADDR
// if friends < 18 then
4147: LD_EXP 4
4151: PUSH
4152: LD_INT 18
4154: LESS
4155: IFFALSE 4227
// for i = 1 to 18 do
4157: LD_ADDR_VAR 0 2
4161: PUSH
4162: DOUBLE
4163: LD_INT 1
4165: DEC
4166: ST_TO_ADDR
4167: LD_INT 18
4169: PUSH
4170: FOR_TO
4171: IFFALSE 4225
// begin PrepareHuman ( false , rand ( 1 , 4 ) , 7 ) ;
4173: LD_INT 0
4175: PPUSH
4176: LD_INT 1
4178: PPUSH
4179: LD_INT 4
4181: PPUSH
4182: CALL_OW 12
4186: PPUSH
4187: LD_INT 7
4189: PPUSH
4190: CALL_OW 380
// friends := Insert ( friends , friends + 1 , CreateHuman ) ;
4194: LD_ADDR_EXP 4
4198: PUSH
4199: LD_EXP 4
4203: PPUSH
4204: LD_EXP 4
4208: PUSH
4209: LD_INT 1
4211: PLUS
4212: PPUSH
4213: CALL_OW 44
4217: PPUSH
4218: CALL_OW 2
4222: ST_TO_ADDR
// end ;
4223: GO 4170
4225: POP
4226: POP
// for i in friends do
4227: LD_ADDR_VAR 0 2
4231: PUSH
4232: LD_EXP 4
4236: PUSH
4237: FOR_IN
4238: IFFALSE 4296
// if GetSkill ( i , 1 ) >= GetSkill ( i , 4 ) then
4240: LD_VAR 0 2
4244: PPUSH
4245: LD_INT 1
4247: PPUSH
4248: CALL_OW 259
4252: PUSH
4253: LD_VAR 0 2
4257: PPUSH
4258: LD_INT 4
4260: PPUSH
4261: CALL_OW 259
4265: GREATEREQUAL
4266: IFFALSE 4282
// SetClass ( i , class_soldier ) else
4268: LD_VAR 0 2
4272: PPUSH
4273: LD_INT 1
4275: PPUSH
4276: CALL_OW 336
4280: GO 4294
// SetClass ( i , class_scientistic ) ;
4282: LD_VAR 0 2
4286: PPUSH
4287: LD_INT 4
4289: PPUSH
4290: CALL_OW 336
4294: GO 4237
4296: POP
4297: POP
// if Frank then
4298: LD_EXP 31
4302: IFFALSE 4316
// SetClass ( Frank , class_sniper ) ;
4304: LD_EXP 31
4308: PPUSH
4309: LD_INT 5
4311: PPUSH
4312: CALL_OW 336
// SetClass ( [ Joan , Denis , DeltaDoctor , Simms ] , class_scientistic ) ;
4316: LD_EXP 34
4320: PUSH
4321: LD_EXP 25
4325: PUSH
4326: LD_EXP 35
4330: PUSH
4331: LD_EXP 33
4335: PUSH
4336: EMPTY
4337: LIST
4338: LIST
4339: LIST
4340: LIST
4341: PPUSH
4342: LD_INT 4
4344: PPUSH
4345: CALL_OW 336
// selected = CharacterSelection (  , 7 , 7 , [ sel_dont_change_class , JMM , Roth , Simms , Denis , DeltaDoctor , sel_not_hired , sel_changeable , sel_change_class ] ^ friends , [ class_soldier , [ class_scientistic , 2 ] , [ class_sniper , 0 , 3 ] ] ) ;
4349: LD_ADDR_EXP 3
4353: PUSH
4354: LD_STRING 
4356: PPUSH
4357: LD_INT 7
4359: PPUSH
4360: LD_INT 7
4362: PPUSH
4363: LD_INT -6
4365: PUSH
4366: LD_EXP 12
4370: PUSH
4371: LD_EXP 13
4375: PUSH
4376: LD_EXP 33
4380: PUSH
4381: LD_EXP 25
4385: PUSH
4386: LD_EXP 35
4390: PUSH
4391: LD_INT -2
4393: PUSH
4394: LD_INT -3
4396: PUSH
4397: LD_INT -5
4399: PUSH
4400: EMPTY
4401: LIST
4402: LIST
4403: LIST
4404: LIST
4405: LIST
4406: LIST
4407: LIST
4408: LIST
4409: LIST
4410: PUSH
4411: LD_EXP 4
4415: ADD
4416: PPUSH
4417: LD_INT 1
4419: PUSH
4420: LD_INT 4
4422: PUSH
4423: LD_INT 2
4425: PUSH
4426: EMPTY
4427: LIST
4428: LIST
4429: PUSH
4430: LD_INT 5
4432: PUSH
4433: LD_INT 0
4435: PUSH
4436: LD_INT 3
4438: PUSH
4439: EMPTY
4440: LIST
4441: LIST
4442: LIST
4443: PUSH
4444: EMPTY
4445: LIST
4446: LIST
4447: LIST
4448: PPUSH
4449: CALL_OW 42
4453: ST_TO_ADDR
// if Simms then
4454: LD_EXP 33
4458: IFFALSE 4476
// selected := selected ^ Simms ;
4460: LD_ADDR_EXP 3
4464: PUSH
4465: LD_EXP 3
4469: PUSH
4470: LD_EXP 33
4474: ADD
4475: ST_TO_ADDR
// if Denis then
4476: LD_EXP 25
4480: IFFALSE 4498
// selected := selected ^ Denis ;
4482: LD_ADDR_EXP 3
4486: PUSH
4487: LD_EXP 3
4491: PUSH
4492: LD_EXP 25
4496: ADD
4497: ST_TO_ADDR
// if DeltaDoctor then
4498: LD_EXP 35
4502: IFFALSE 4520
// selected := selected ^ DeltaDoctor ;
4504: LD_ADDR_EXP 3
4508: PUSH
4509: LD_EXP 3
4513: PUSH
4514: LD_EXP 35
4518: ADD
4519: ST_TO_ADDR
// friends := friends diff selected ;
4520: LD_ADDR_EXP 4
4524: PUSH
4525: LD_EXP 4
4529: PUSH
4530: LD_EXP 3
4534: DIFF
4535: ST_TO_ADDR
// buildings := [ [ ambar1 , ambar2 , ambar3 ] , [ amlab2 , amlab3 , amlab4 ] ] ;
4536: LD_ADDR_VAR 0 4
4540: PUSH
4541: LD_INT 111
4543: PUSH
4544: LD_INT 137
4546: PUSH
4547: LD_INT 51
4549: PUSH
4550: EMPTY
4551: LIST
4552: LIST
4553: LIST
4554: PUSH
4555: LD_INT 147
4557: PUSH
4558: LD_INT 129
4560: PUSH
4561: LD_INT 25
4563: PUSH
4564: EMPTY
4565: LIST
4566: LIST
4567: LIST
4568: PUSH
4569: EMPTY
4570: LIST
4571: LIST
4572: ST_TO_ADDR
// areas := [ friends_spawn_1 , friends_spawn_2 , friends_spawn_3 , friends_spawn_4 , friends_spawn_5 , friends_spawn_6 ] ;
4573: LD_ADDR_VAR 0 5
4577: PUSH
4578: LD_INT 5
4580: PUSH
4581: LD_INT 6
4583: PUSH
4584: LD_INT 7
4586: PUSH
4587: LD_INT 8
4589: PUSH
4590: LD_INT 17
4592: PUSH
4593: LD_INT 18
4595: PUSH
4596: EMPTY
4597: LIST
4598: LIST
4599: LIST
4600: LIST
4601: LIST
4602: LIST
4603: ST_TO_ADDR
// for i in buildings do
4604: LD_ADDR_VAR 0 2
4608: PUSH
4609: LD_VAR 0 4
4613: PUSH
4614: FOR_IN
4615: IFFALSE 4631
// SetSide ( i , 4 ) ;
4617: LD_VAR 0 2
4621: PPUSH
4622: LD_INT 4
4624: PPUSH
4625: CALL_OW 235
4629: GO 4614
4631: POP
4632: POP
// for i in selected do
4633: LD_ADDR_VAR 0 2
4637: PUSH
4638: LD_EXP 3
4642: PUSH
4643: FOR_IN
4644: IFFALSE 4906
// begin if GetClass ( i ) in [ 1 , 5 ] then
4646: LD_VAR 0 2
4650: PPUSH
4651: CALL_OW 257
4655: PUSH
4656: LD_INT 1
4658: PUSH
4659: LD_INT 5
4661: PUSH
4662: EMPTY
4663: LIST
4664: LIST
4665: IN
4666: IFFALSE 4787
// begin if buildings [ 1 ] then
4668: LD_VAR 0 4
4672: PUSH
4673: LD_INT 1
4675: ARRAY
4676: IFFALSE 4737
// begin PlaceHumanInUnit ( i , buildings [ 1 ] [ 1 ] ) ;
4678: LD_VAR 0 2
4682: PPUSH
4683: LD_VAR 0 4
4687: PUSH
4688: LD_INT 1
4690: ARRAY
4691: PUSH
4692: LD_INT 1
4694: ARRAY
4695: PPUSH
4696: CALL_OW 52
// buildings := Replace ( buildings , 1 , Delete ( buildings [ 1 ] , 1 ) ) ;
4700: LD_ADDR_VAR 0 4
4704: PUSH
4705: LD_VAR 0 4
4709: PPUSH
4710: LD_INT 1
4712: PPUSH
4713: LD_VAR 0 4
4717: PUSH
4718: LD_INT 1
4720: ARRAY
4721: PPUSH
4722: LD_INT 1
4724: PPUSH
4725: CALL_OW 3
4729: PPUSH
4730: CALL_OW 1
4734: ST_TO_ADDR
// end else
4735: GO 4785
// begin PlaceUnitArea ( i , areas [ 1 ] , false ) ;
4737: LD_VAR 0 2
4741: PPUSH
4742: LD_VAR 0 5
4746: PUSH
4747: LD_INT 1
4749: ARRAY
4750: PPUSH
4751: LD_INT 0
4753: PPUSH
4754: CALL_OW 49
// ComHold ( i ) ;
4758: LD_VAR 0 2
4762: PPUSH
4763: CALL_OW 140
// areas := Delete ( areas , 1 ) ;
4767: LD_ADDR_VAR 0 5
4771: PUSH
4772: LD_VAR 0 5
4776: PPUSH
4777: LD_INT 1
4779: PPUSH
4780: CALL_OW 3
4784: ST_TO_ADDR
// end ; end else
4785: GO 4904
// begin if buildings [ 2 ] then
4787: LD_VAR 0 4
4791: PUSH
4792: LD_INT 2
4794: ARRAY
4795: IFFALSE 4856
// begin PlaceHumanInUnit ( i , buildings [ 2 ] [ 1 ] ) ;
4797: LD_VAR 0 2
4801: PPUSH
4802: LD_VAR 0 4
4806: PUSH
4807: LD_INT 2
4809: ARRAY
4810: PUSH
4811: LD_INT 1
4813: ARRAY
4814: PPUSH
4815: CALL_OW 52
// buildings := Replace ( buildings , 2 , Delete ( buildings [ 2 ] , 1 ) ) ;
4819: LD_ADDR_VAR 0 4
4823: PUSH
4824: LD_VAR 0 4
4828: PPUSH
4829: LD_INT 2
4831: PPUSH
4832: LD_VAR 0 4
4836: PUSH
4837: LD_INT 2
4839: ARRAY
4840: PPUSH
4841: LD_INT 1
4843: PPUSH
4844: CALL_OW 3
4848: PPUSH
4849: CALL_OW 1
4853: ST_TO_ADDR
// end else
4854: GO 4904
// begin PlaceUnitArea ( i , areas [ 1 ] , false ) ;
4856: LD_VAR 0 2
4860: PPUSH
4861: LD_VAR 0 5
4865: PUSH
4866: LD_INT 1
4868: ARRAY
4869: PPUSH
4870: LD_INT 0
4872: PPUSH
4873: CALL_OW 49
// ComHold ( i ) ;
4877: LD_VAR 0 2
4881: PPUSH
4882: CALL_OW 140
// areas := Delete ( areas , 1 ) ;
4886: LD_ADDR_VAR 0 5
4890: PUSH
4891: LD_VAR 0 5
4895: PPUSH
4896: LD_INT 1
4898: PPUSH
4899: CALL_OW 3
4903: ST_TO_ADDR
// end ; end ; end ;
4904: GO 4643
4906: POP
4907: POP
// bunkers := FilterAllUnits ( [ [ f_side , 1 ] , [ f_btype , b_bunker ] ] ) ;
4908: LD_ADDR_VAR 0 6
4912: PUSH
4913: LD_INT 22
4915: PUSH
4916: LD_INT 1
4918: PUSH
4919: EMPTY
4920: LIST
4921: LIST
4922: PUSH
4923: LD_INT 30
4925: PUSH
4926: LD_INT 32
4928: PUSH
4929: EMPTY
4930: LIST
4931: LIST
4932: PUSH
4933: EMPTY
4934: LIST
4935: LIST
4936: PPUSH
4937: CALL_OW 69
4941: ST_TO_ADDR
// for i = bunkers - friends downto 1 do
4942: LD_ADDR_VAR 0 2
4946: PUSH
4947: DOUBLE
4948: LD_VAR 0 6
4952: PUSH
4953: LD_EXP 4
4957: MINUS
4958: INC
4959: ST_TO_ADDR
4960: LD_INT 1
4962: PUSH
4963: FOR_DOWNTO
4964: IFFALSE 5027
// begin PrepareHuman ( false , 1 , [ 7 , 8 , 9 ] [ Difficulty ] ) ;
4966: LD_INT 0
4968: PPUSH
4969: LD_INT 1
4971: PPUSH
4972: LD_INT 7
4974: PUSH
4975: LD_INT 8
4977: PUSH
4978: LD_INT 9
4980: PUSH
4981: EMPTY
4982: LIST
4983: LIST
4984: LIST
4985: PUSH
4986: LD_OWVAR 67
4990: ARRAY
4991: PPUSH
4992: CALL_OW 380
// friends := Insert ( friends , friends + 1 , CreateHuman ) ;
4996: LD_ADDR_EXP 4
5000: PUSH
5001: LD_EXP 4
5005: PPUSH
5006: LD_EXP 4
5010: PUSH
5011: LD_INT 1
5013: PLUS
5014: PPUSH
5015: CALL_OW 44
5019: PPUSH
5020: CALL_OW 2
5024: ST_TO_ADDR
// end ;
5025: GO 4963
5027: POP
5028: POP
// if friends then
5029: LD_EXP 4
5033: IFFALSE 5149
// begin tmp := friends ;
5035: LD_ADDR_VAR 0 3
5039: PUSH
5040: LD_EXP 4
5044: ST_TO_ADDR
// for i = 1 to bunkers do
5045: LD_ADDR_VAR 0 2
5049: PUSH
5050: DOUBLE
5051: LD_INT 1
5053: DEC
5054: ST_TO_ADDR
5055: LD_VAR 0 6
5059: PUSH
5060: FOR_TO
5061: IFFALSE 5147
// begin SetSide ( tmp [ tmp ] , 1 ) ;
5063: LD_VAR 0 3
5067: PUSH
5068: LD_VAR 0 3
5072: ARRAY
5073: PPUSH
5074: LD_INT 1
5076: PPUSH
5077: CALL_OW 235
// SetClass ( tmp [ tmp ] , 1 ) ;
5081: LD_VAR 0 3
5085: PUSH
5086: LD_VAR 0 3
5090: ARRAY
5091: PPUSH
5092: LD_INT 1
5094: PPUSH
5095: CALL_OW 336
// PlaceHumanInUnit ( tmp [ tmp ] , bunkers [ i ] ) ;
5099: LD_VAR 0 3
5103: PUSH
5104: LD_VAR 0 3
5108: ARRAY
5109: PPUSH
5110: LD_VAR 0 6
5114: PUSH
5115: LD_VAR 0 2
5119: ARRAY
5120: PPUSH
5121: CALL_OW 52
// tmp := Delete ( tmp , tmp ) ;
5125: LD_ADDR_VAR 0 3
5129: PUSH
5130: LD_VAR 0 3
5134: PPUSH
5135: LD_VAR 0 3
5139: PPUSH
5140: CALL_OW 3
5144: ST_TO_ADDR
// end ;
5145: GO 5060
5147: POP
5148: POP
// end ; areas := areas union [ guard_spawn_1 , guard_spawn_2 , guard_spawn_3 , guard_spawn_4 , guard_spawn_5 , guard_spawn_6 , guard_spawn_7 , guard_spawn_8 , guard_spawn_9 , guard_spawn_10 , guard_spawn_11 , guard_spawn_12 , guard_spawn_13 , guard_spawn_14 , guard_spawn_15 , guard_spawn_16 , guard_spawn_17 , guard_spawn_18 , guard_spawn_19 , guard_spawn_20 ] ;
5149: LD_ADDR_VAR 0 5
5153: PUSH
5154: LD_VAR 0 5
5158: PUSH
5159: LD_INT 9
5161: PUSH
5162: LD_INT 10
5164: PUSH
5165: LD_INT 11
5167: PUSH
5168: LD_INT 12
5170: PUSH
5171: LD_INT 13
5173: PUSH
5174: LD_INT 14
5176: PUSH
5177: LD_INT 15
5179: PUSH
5180: LD_INT 16
5182: PUSH
5183: LD_INT 26
5185: PUSH
5186: LD_INT 27
5188: PUSH
5189: LD_INT 28
5191: PUSH
5192: LD_INT 29
5194: PUSH
5195: LD_INT 30
5197: PUSH
5198: LD_INT 31
5200: PUSH
5201: LD_INT 32
5203: PUSH
5204: LD_INT 33
5206: PUSH
5207: LD_INT 34
5209: PUSH
5210: LD_INT 35
5212: PUSH
5213: LD_INT 36
5215: PUSH
5216: LD_INT 37
5218: PUSH
5219: EMPTY
5220: LIST
5221: LIST
5222: LIST
5223: LIST
5224: LIST
5225: LIST
5226: LIST
5227: LIST
5228: LIST
5229: LIST
5230: LIST
5231: LIST
5232: LIST
5233: LIST
5234: LIST
5235: LIST
5236: LIST
5237: LIST
5238: LIST
5239: LIST
5240: UNION
5241: ST_TO_ADDR
// for i in friends do
5242: LD_ADDR_VAR 0 2
5246: PUSH
5247: LD_EXP 4
5251: PUSH
5252: FOR_IN
5253: IFFALSE 5521
// begin SetTag ( i , 2 ) ;
5255: LD_VAR 0 2
5259: PPUSH
5260: LD_INT 2
5262: PPUSH
5263: CALL_OW 109
// if GetClass ( i ) = 1 and buildings [ 1 ] then
5267: LD_VAR 0 2
5271: PPUSH
5272: CALL_OW 257
5276: PUSH
5277: LD_INT 1
5279: EQUAL
5280: PUSH
5281: LD_VAR 0 4
5285: PUSH
5286: LD_INT 1
5288: ARRAY
5289: AND
5290: IFFALSE 5351
// begin PlaceHumanInUnit ( i , buildings [ 1 ] [ 1 ] ) ;
5292: LD_VAR 0 2
5296: PPUSH
5297: LD_VAR 0 4
5301: PUSH
5302: LD_INT 1
5304: ARRAY
5305: PUSH
5306: LD_INT 1
5308: ARRAY
5309: PPUSH
5310: CALL_OW 52
// buildings := Replace ( buildings , 1 , Delete ( buildings [ 1 ] , 1 ) ) ;
5314: LD_ADDR_VAR 0 4
5318: PUSH
5319: LD_VAR 0 4
5323: PPUSH
5324: LD_INT 1
5326: PPUSH
5327: LD_VAR 0 4
5331: PUSH
5332: LD_INT 1
5334: ARRAY
5335: PPUSH
5336: LD_INT 1
5338: PPUSH
5339: CALL_OW 3
5343: PPUSH
5344: CALL_OW 1
5348: ST_TO_ADDR
// continue ;
5349: GO 5252
// end ; if GetClass ( i ) = 4 and buildings [ 2 ] then
5351: LD_VAR 0 2
5355: PPUSH
5356: CALL_OW 257
5360: PUSH
5361: LD_INT 4
5363: EQUAL
5364: PUSH
5365: LD_VAR 0 4
5369: PUSH
5370: LD_INT 2
5372: ARRAY
5373: AND
5374: IFFALSE 5435
// begin PlaceHumanInUnit ( i , buildings [ 2 ] [ 1 ] ) ;
5376: LD_VAR 0 2
5380: PPUSH
5381: LD_VAR 0 4
5385: PUSH
5386: LD_INT 2
5388: ARRAY
5389: PUSH
5390: LD_INT 1
5392: ARRAY
5393: PPUSH
5394: CALL_OW 52
// buildings := Replace ( buildings , 2 , Delete ( buildings [ 2 ] , 1 ) ) ;
5398: LD_ADDR_VAR 0 4
5402: PUSH
5403: LD_VAR 0 4
5407: PPUSH
5408: LD_INT 2
5410: PPUSH
5411: LD_VAR 0 4
5415: PUSH
5416: LD_INT 2
5418: ARRAY
5419: PPUSH
5420: LD_INT 1
5422: PPUSH
5423: CALL_OW 3
5427: PPUSH
5428: CALL_OW 1
5432: ST_TO_ADDR
// continue ;
5433: GO 5252
// end ; PlaceUnitArea ( i , areas [ 1 ] , false ) ;
5435: LD_VAR 0 2
5439: PPUSH
5440: LD_VAR 0 5
5444: PUSH
5445: LD_INT 1
5447: ARRAY
5448: PPUSH
5449: LD_INT 0
5451: PPUSH
5452: CALL_OW 49
// areas := Delete ( areas , 1 ) ;
5456: LD_ADDR_VAR 0 5
5460: PUSH
5461: LD_VAR 0 5
5465: PPUSH
5466: LD_INT 1
5468: PPUSH
5469: CALL_OW 3
5473: ST_TO_ADDR
// if GetClass ( i ) <> 1 then
5474: LD_VAR 0 2
5478: PPUSH
5479: CALL_OW 257
5483: PUSH
5484: LD_INT 1
5486: NONEQUAL
5487: IFFALSE 5501
// SetClass ( i , 1 ) ;
5489: LD_VAR 0 2
5493: PPUSH
5494: LD_INT 1
5496: PPUSH
5497: CALL_OW 336
// ComHold ( i ) ;
5501: LD_VAR 0 2
5505: PPUSH
5506: CALL_OW 140
// if not areas then
5510: LD_VAR 0 5
5514: NOT
5515: IFFALSE 5519
// break ;
5517: GO 5521
// end ;
5519: GO 5252
5521: POP
5522: POP
// if UnitFilter ( friends , [ f_not , [ f_placed ] ] ) then
5523: LD_EXP 4
5527: PPUSH
5528: LD_INT 3
5530: PUSH
5531: LD_INT 52
5533: PUSH
5534: EMPTY
5535: LIST
5536: PUSH
5537: EMPTY
5538: LIST
5539: LIST
5540: PPUSH
5541: CALL_OW 72
5545: IFFALSE 5612
// for i in UnitFilter ( friends , [ f_not , [ f_placed ] ] ) do
5547: LD_ADDR_VAR 0 2
5551: PUSH
5552: LD_EXP 4
5556: PPUSH
5557: LD_INT 3
5559: PUSH
5560: LD_INT 52
5562: PUSH
5563: EMPTY
5564: LIST
5565: PUSH
5566: EMPTY
5567: LIST
5568: LIST
5569: PPUSH
5570: CALL_OW 72
5574: PUSH
5575: FOR_IN
5576: IFFALSE 5610
// begin PlaceUnitXYR ( i , 65 , 58 , 7 , false ) ;
5578: LD_VAR 0 2
5582: PPUSH
5583: LD_INT 65
5585: PPUSH
5586: LD_INT 58
5588: PPUSH
5589: LD_INT 7
5591: PPUSH
5592: LD_INT 0
5594: PPUSH
5595: CALL_OW 50
// ComHold ( i ) ;
5599: LD_VAR 0 2
5603: PPUSH
5604: CALL_OW 140
// end ;
5608: GO 5575
5610: POP
5611: POP
// if Frank then
5612: LD_EXP 31
5616: IFFALSE 5630
// SetClass ( Frank , class_sniper ) ;
5618: LD_EXP 31
5622: PPUSH
5623: LD_INT 5
5625: PPUSH
5626: CALL_OW 336
// end ; end_of_file
5630: LD_VAR 0 1
5634: RET
// export function PrepareUnit ( ident , exist_mode , prefix ) ; var unit ; begin
5635: LD_INT 0
5637: PPUSH
5638: PPUSH
// if exist_mode then
5639: LD_VAR 0 2
5643: IFFALSE 5668
// unit := CreateCharacter ( prefix & ident ) else
5645: LD_ADDR_VAR 0 5
5649: PUSH
5650: LD_VAR 0 3
5654: PUSH
5655: LD_VAR 0 1
5659: STR
5660: PPUSH
5661: CALL_OW 34
5665: ST_TO_ADDR
5666: GO 5683
// unit := NewCharacter ( ident ) ;
5668: LD_ADDR_VAR 0 5
5672: PUSH
5673: LD_VAR 0 1
5677: PPUSH
5678: CALL_OW 25
5682: ST_TO_ADDR
// result := unit ;
5683: LD_ADDR_VAR 0 4
5687: PUSH
5688: LD_VAR 0 5
5692: ST_TO_ADDR
// end ;
5693: LD_VAR 0 4
5697: RET
// export function PrepareVehicle ( chassis , engine , control , weapon , fuel ) ; begin
5698: LD_INT 0
5700: PPUSH
// vc_chassis := chassis ;
5701: LD_ADDR_OWVAR 37
5705: PUSH
5706: LD_VAR 0 1
5710: ST_TO_ADDR
// vc_engine := engine ;
5711: LD_ADDR_OWVAR 39
5715: PUSH
5716: LD_VAR 0 2
5720: ST_TO_ADDR
// vc_control := control ;
5721: LD_ADDR_OWVAR 38
5725: PUSH
5726: LD_VAR 0 3
5730: ST_TO_ADDR
// vc_weapon := weapon ;
5731: LD_ADDR_OWVAR 40
5735: PUSH
5736: LD_VAR 0 4
5740: ST_TO_ADDR
// vc_fuel_battery := fuel ;
5741: LD_ADDR_OWVAR 41
5745: PUSH
5746: LD_VAR 0 5
5750: ST_TO_ADDR
// end ;
5751: LD_VAR 0 6
5755: RET
// export function CanSayRand ( side ) ; begin
5756: LD_INT 0
5758: PPUSH
// result := FilterAllUnits ( [ [ f_placed ] , [ f_side , side ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] ] ] ) diff [ JMM , Frank , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Powell , Cornel , Gary , Kikuchi ] ;
5759: LD_ADDR_VAR 0 2
5763: PUSH
5764: LD_INT 52
5766: PUSH
5767: EMPTY
5768: LIST
5769: PUSH
5770: LD_INT 22
5772: PUSH
5773: LD_VAR 0 1
5777: PUSH
5778: EMPTY
5779: LIST
5780: LIST
5781: PUSH
5782: LD_INT 2
5784: PUSH
5785: LD_INT 25
5787: PUSH
5788: LD_INT 1
5790: PUSH
5791: EMPTY
5792: LIST
5793: LIST
5794: PUSH
5795: LD_INT 25
5797: PUSH
5798: LD_INT 2
5800: PUSH
5801: EMPTY
5802: LIST
5803: LIST
5804: PUSH
5805: LD_INT 25
5807: PUSH
5808: LD_INT 3
5810: PUSH
5811: EMPTY
5812: LIST
5813: LIST
5814: PUSH
5815: LD_INT 25
5817: PUSH
5818: LD_INT 4
5820: PUSH
5821: EMPTY
5822: LIST
5823: LIST
5824: PUSH
5825: EMPTY
5826: LIST
5827: LIST
5828: LIST
5829: LIST
5830: LIST
5831: PUSH
5832: EMPTY
5833: LIST
5834: LIST
5835: LIST
5836: PPUSH
5837: CALL_OW 69
5841: PUSH
5842: LD_EXP 12
5846: PUSH
5847: LD_EXP 31
5851: PUSH
5852: LD_EXP 21
5856: PUSH
5857: LD_EXP 22
5861: PUSH
5862: LD_EXP 23
5866: PUSH
5867: LD_EXP 24
5871: PUSH
5872: LD_EXP 25
5876: PUSH
5877: LD_EXP 26
5881: PUSH
5882: LD_EXP 27
5886: PUSH
5887: LD_EXP 28
5891: PUSH
5892: LD_EXP 14
5896: PUSH
5897: LD_EXP 29
5901: PUSH
5902: LD_EXP 30
5906: PUSH
5907: LD_EXP 32
5911: PUSH
5912: EMPTY
5913: LIST
5914: LIST
5915: LIST
5916: LIST
5917: LIST
5918: LIST
5919: LIST
5920: LIST
5921: LIST
5922: LIST
5923: LIST
5924: LIST
5925: LIST
5926: LIST
5927: DIFF
5928: ST_TO_ADDR
// end ;
5929: LD_VAR 0 2
5933: RET
// export function Connect ( vehicle ) ; var i , t , mech , tmp , j ; begin
5934: LD_INT 0
5936: PPUSH
5937: PPUSH
5938: PPUSH
5939: PPUSH
5940: PPUSH
5941: PPUSH
// if not vehicle or not GetControl ( vehicle ) = control_remote then
5942: LD_VAR 0 1
5946: NOT
5947: PUSH
5948: LD_VAR 0 1
5952: PPUSH
5953: CALL_OW 263
5957: PUSH
5958: LD_INT 2
5960: EQUAL
5961: NOT
5962: OR
5963: IFFALSE 5967
// exit ;
5965: GO 6283
// tmp := FilterAllUnits ( [ [ f_side , GetSide ( vehicle ) ] , [ f_or , [ f_btype , b_control_tower ] , [ f_weapon , ar_control_tower ] ] ] ) ;
5967: LD_ADDR_VAR 0 6
5971: PUSH
5972: LD_INT 22
5974: PUSH
5975: LD_VAR 0 1
5979: PPUSH
5980: CALL_OW 255
5984: PUSH
5985: EMPTY
5986: LIST
5987: LIST
5988: PUSH
5989: LD_INT 2
5991: PUSH
5992: LD_INT 30
5994: PUSH
5995: LD_INT 36
5997: PUSH
5998: EMPTY
5999: LIST
6000: LIST
6001: PUSH
6002: LD_INT 34
6004: PUSH
6005: LD_INT 31
6007: PUSH
6008: EMPTY
6009: LIST
6010: LIST
6011: PUSH
6012: EMPTY
6013: LIST
6014: LIST
6015: LIST
6016: PUSH
6017: EMPTY
6018: LIST
6019: LIST
6020: PPUSH
6021: CALL_OW 69
6025: ST_TO_ADDR
// if not tmp then
6026: LD_VAR 0 6
6030: NOT
6031: IFFALSE 6035
// exit ;
6033: GO 6283
// result := [ ] ;
6035: LD_ADDR_VAR 0 2
6039: PUSH
6040: EMPTY
6041: ST_TO_ADDR
// for i in tmp do
6042: LD_ADDR_VAR 0 3
6046: PUSH
6047: LD_VAR 0 6
6051: PUSH
6052: FOR_IN
6053: IFFALSE 6124
// begin t := UnitsInside ( i ) ;
6055: LD_ADDR_VAR 0 4
6059: PUSH
6060: LD_VAR 0 3
6064: PPUSH
6065: CALL_OW 313
6069: ST_TO_ADDR
// if t then
6070: LD_VAR 0 4
6074: IFFALSE 6122
// for j in t do
6076: LD_ADDR_VAR 0 7
6080: PUSH
6081: LD_VAR 0 4
6085: PUSH
6086: FOR_IN
6087: IFFALSE 6120
// result := Insert ( result , result + 1 , j ) ;
6089: LD_ADDR_VAR 0 2
6093: PUSH
6094: LD_VAR 0 2
6098: PPUSH
6099: LD_VAR 0 2
6103: PUSH
6104: LD_INT 1
6106: PLUS
6107: PPUSH
6108: LD_VAR 0 7
6112: PPUSH
6113: CALL_OW 2
6117: ST_TO_ADDR
6118: GO 6086
6120: POP
6121: POP
// end ;
6122: GO 6052
6124: POP
6125: POP
// if not result then
6126: LD_VAR 0 2
6130: NOT
6131: IFFALSE 6135
// exit ;
6133: GO 6283
// mech := result [ 1 ] ;
6135: LD_ADDR_VAR 0 5
6139: PUSH
6140: LD_VAR 0 2
6144: PUSH
6145: LD_INT 1
6147: ARRAY
6148: ST_TO_ADDR
// if result > 1 then
6149: LD_VAR 0 2
6153: PUSH
6154: LD_INT 1
6156: GREATER
6157: IFFALSE 6269
// for i = 2 to result do
6159: LD_ADDR_VAR 0 3
6163: PUSH
6164: DOUBLE
6165: LD_INT 2
6167: DEC
6168: ST_TO_ADDR
6169: LD_VAR 0 2
6173: PUSH
6174: FOR_TO
6175: IFFALSE 6267
// begin t := GetSkill ( result [ i ] , 3 ) - UnitsLinked ( result [ i ] ) ;
6177: LD_ADDR_VAR 0 4
6181: PUSH
6182: LD_VAR 0 2
6186: PUSH
6187: LD_VAR 0 3
6191: ARRAY
6192: PPUSH
6193: LD_INT 3
6195: PPUSH
6196: CALL_OW 259
6200: PUSH
6201: LD_VAR 0 2
6205: PUSH
6206: LD_VAR 0 3
6210: ARRAY
6211: PPUSH
6212: CALL_OW 432
6216: MINUS
6217: ST_TO_ADDR
// if t >= ( GetSkill ( mech , 3 ) - UnitsLinked ( mech ) ) then
6218: LD_VAR 0 4
6222: PUSH
6223: LD_VAR 0 5
6227: PPUSH
6228: LD_INT 3
6230: PPUSH
6231: CALL_OW 259
6235: PUSH
6236: LD_VAR 0 5
6240: PPUSH
6241: CALL_OW 432
6245: MINUS
6246: GREATEREQUAL
6247: IFFALSE 6265
// mech := result [ i ] ;
6249: LD_ADDR_VAR 0 5
6253: PUSH
6254: LD_VAR 0 2
6258: PUSH
6259: LD_VAR 0 3
6263: ARRAY
6264: ST_TO_ADDR
// end ;
6265: GO 6174
6267: POP
6268: POP
// ComLinkTo ( vehicle , mech ) ;
6269: LD_VAR 0 1
6273: PPUSH
6274: LD_VAR 0 5
6278: PPUSH
6279: CALL_OW 135
// end ;
6283: LD_VAR 0 2
6287: RET
// export function SayRand ( sex , dial ) ; begin
6288: LD_INT 0
6290: PPUSH
// result := FilterAllUnits ( [ [ f_placed ] , [ f_side , 1 ] , [ f_sex , sex ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] ] ] ) diff [ JMM , Frank , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Powell , Cornel , Gary , Kikuchi ] ;
6291: LD_ADDR_VAR 0 3
6295: PUSH
6296: LD_INT 52
6298: PUSH
6299: EMPTY
6300: LIST
6301: PUSH
6302: LD_INT 22
6304: PUSH
6305: LD_INT 1
6307: PUSH
6308: EMPTY
6309: LIST
6310: LIST
6311: PUSH
6312: LD_INT 26
6314: PUSH
6315: LD_VAR 0 1
6319: PUSH
6320: EMPTY
6321: LIST
6322: LIST
6323: PUSH
6324: LD_INT 2
6326: PUSH
6327: LD_INT 25
6329: PUSH
6330: LD_INT 1
6332: PUSH
6333: EMPTY
6334: LIST
6335: LIST
6336: PUSH
6337: LD_INT 25
6339: PUSH
6340: LD_INT 2
6342: PUSH
6343: EMPTY
6344: LIST
6345: LIST
6346: PUSH
6347: LD_INT 25
6349: PUSH
6350: LD_INT 3
6352: PUSH
6353: EMPTY
6354: LIST
6355: LIST
6356: PUSH
6357: LD_INT 25
6359: PUSH
6360: LD_INT 4
6362: PUSH
6363: EMPTY
6364: LIST
6365: LIST
6366: PUSH
6367: EMPTY
6368: LIST
6369: LIST
6370: LIST
6371: LIST
6372: LIST
6373: PUSH
6374: EMPTY
6375: LIST
6376: LIST
6377: LIST
6378: LIST
6379: PPUSH
6380: CALL_OW 69
6384: PUSH
6385: LD_EXP 12
6389: PUSH
6390: LD_EXP 31
6394: PUSH
6395: LD_EXP 21
6399: PUSH
6400: LD_EXP 22
6404: PUSH
6405: LD_EXP 23
6409: PUSH
6410: LD_EXP 24
6414: PUSH
6415: LD_EXP 25
6419: PUSH
6420: LD_EXP 26
6424: PUSH
6425: LD_EXP 27
6429: PUSH
6430: LD_EXP 28
6434: PUSH
6435: LD_EXP 14
6439: PUSH
6440: LD_EXP 29
6444: PUSH
6445: LD_EXP 30
6449: PUSH
6450: LD_EXP 32
6454: PUSH
6455: EMPTY
6456: LIST
6457: LIST
6458: LIST
6459: LIST
6460: LIST
6461: LIST
6462: LIST
6463: LIST
6464: LIST
6465: LIST
6466: LIST
6467: LIST
6468: LIST
6469: LIST
6470: DIFF
6471: ST_TO_ADDR
// if not result then
6472: LD_VAR 0 3
6476: NOT
6477: IFFALSE 6481
// exit ;
6479: GO 6509
// result := result [ 1 ] ;
6481: LD_ADDR_VAR 0 3
6485: PUSH
6486: LD_VAR 0 3
6490: PUSH
6491: LD_INT 1
6493: ARRAY
6494: ST_TO_ADDR
// Say ( result , dial ) ;
6495: LD_VAR 0 3
6499: PPUSH
6500: LD_VAR 0 2
6504: PPUSH
6505: CALL_OW 88
// end ;
6509: LD_VAR 0 3
6513: RET
// export function SayRand2 ( sex , dial , filter ) ; begin
6514: LD_INT 0
6516: PPUSH
// result := FilterAllUnits ( [ [ f_side , 1 ] , [ f_sex , sex ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] ] ] ) diff [ JMM , Frank , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Powell , Cornel , Gary , Kikuchi ] ^ filter ;
6517: LD_ADDR_VAR 0 4
6521: PUSH
6522: LD_INT 22
6524: PUSH
6525: LD_INT 1
6527: PUSH
6528: EMPTY
6529: LIST
6530: LIST
6531: PUSH
6532: LD_INT 26
6534: PUSH
6535: LD_VAR 0 1
6539: PUSH
6540: EMPTY
6541: LIST
6542: LIST
6543: PUSH
6544: LD_INT 2
6546: PUSH
6547: LD_INT 25
6549: PUSH
6550: LD_INT 1
6552: PUSH
6553: EMPTY
6554: LIST
6555: LIST
6556: PUSH
6557: LD_INT 25
6559: PUSH
6560: LD_INT 2
6562: PUSH
6563: EMPTY
6564: LIST
6565: LIST
6566: PUSH
6567: LD_INT 25
6569: PUSH
6570: LD_INT 3
6572: PUSH
6573: EMPTY
6574: LIST
6575: LIST
6576: PUSH
6577: LD_INT 25
6579: PUSH
6580: LD_INT 4
6582: PUSH
6583: EMPTY
6584: LIST
6585: LIST
6586: PUSH
6587: EMPTY
6588: LIST
6589: LIST
6590: LIST
6591: LIST
6592: LIST
6593: PUSH
6594: EMPTY
6595: LIST
6596: LIST
6597: LIST
6598: PPUSH
6599: CALL_OW 69
6603: PUSH
6604: LD_EXP 12
6608: PUSH
6609: LD_EXP 31
6613: PUSH
6614: LD_EXP 21
6618: PUSH
6619: LD_EXP 22
6623: PUSH
6624: LD_EXP 23
6628: PUSH
6629: LD_EXP 24
6633: PUSH
6634: LD_EXP 25
6638: PUSH
6639: LD_EXP 26
6643: PUSH
6644: LD_EXP 27
6648: PUSH
6649: LD_EXP 28
6653: PUSH
6654: LD_EXP 14
6658: PUSH
6659: LD_EXP 29
6663: PUSH
6664: LD_EXP 30
6668: PUSH
6669: LD_EXP 32
6673: PUSH
6674: EMPTY
6675: LIST
6676: LIST
6677: LIST
6678: LIST
6679: LIST
6680: LIST
6681: LIST
6682: LIST
6683: LIST
6684: LIST
6685: LIST
6686: LIST
6687: LIST
6688: LIST
6689: PUSH
6690: LD_VAR 0 3
6694: ADD
6695: DIFF
6696: ST_TO_ADDR
// if not result then
6697: LD_VAR 0 4
6701: NOT
6702: IFFALSE 6706
// exit ;
6704: GO 6734
// result := result [ 1 ] ;
6706: LD_ADDR_VAR 0 4
6710: PUSH
6711: LD_VAR 0 4
6715: PUSH
6716: LD_INT 1
6718: ARRAY
6719: ST_TO_ADDR
// Say ( result , dial ) ;
6720: LD_VAR 0 4
6724: PPUSH
6725: LD_VAR 0 2
6729: PPUSH
6730: CALL_OW 88
// end ;
6734: LD_VAR 0 4
6738: RET
// export function Patrol ( unit , path , flags ) ; var i , x , y , c , p , station , tmp_path , status , enemy , e , spot_dist , safe_place , chase_range , need_refuel ; begin
6739: LD_INT 0
6741: PPUSH
6742: PPUSH
6743: PPUSH
6744: PPUSH
6745: PPUSH
6746: PPUSH
6747: PPUSH
6748: PPUSH
6749: PPUSH
6750: PPUSH
6751: PPUSH
6752: PPUSH
6753: PPUSH
6754: PPUSH
6755: PPUSH
// if not unit or not path or GetType ( unit ) = unit_building then
6756: LD_VAR 0 1
6760: NOT
6761: PUSH
6762: LD_VAR 0 2
6766: NOT
6767: OR
6768: PUSH
6769: LD_VAR 0 1
6773: PPUSH
6774: CALL_OW 247
6778: PUSH
6779: LD_INT 3
6781: EQUAL
6782: OR
6783: IFFALSE 6787
// exit ;
6785: GO 8326
// for i = path downto 1 do
6787: LD_ADDR_VAR 0 5
6791: PUSH
6792: DOUBLE
6793: LD_VAR 0 2
6797: INC
6798: ST_TO_ADDR
6799: LD_INT 1
6801: PUSH
6802: FOR_DOWNTO
6803: IFFALSE 6864
// begin if not ValidHex ( path [ i ] [ 1 ] , path [ i ] [ 2 ] ) then
6805: LD_VAR 0 2
6809: PUSH
6810: LD_VAR 0 5
6814: ARRAY
6815: PUSH
6816: LD_INT 1
6818: ARRAY
6819: PPUSH
6820: LD_VAR 0 2
6824: PUSH
6825: LD_VAR 0 5
6829: ARRAY
6830: PUSH
6831: LD_INT 2
6833: ARRAY
6834: PPUSH
6835: CALL_OW 488
6839: NOT
6840: IFFALSE 6862
// path = Delete ( path , i ) ;
6842: LD_ADDR_VAR 0 2
6846: PUSH
6847: LD_VAR 0 2
6851: PPUSH
6852: LD_VAR 0 5
6856: PPUSH
6857: CALL_OW 3
6861: ST_TO_ADDR
// end ;
6862: GO 6802
6864: POP
6865: POP
// if not path then
6866: LD_VAR 0 2
6870: NOT
6871: IFFALSE 6875
// exit ;
6873: GO 8326
// tmp_path := [ ] ;
6875: LD_ADDR_VAR 0 11
6879: PUSH
6880: EMPTY
6881: ST_TO_ADDR
// if flags then
6882: LD_VAR 0 3
6886: IFFALSE 6960
// begin if flags [ 1 ] then
6888: LD_VAR 0 3
6892: PUSH
6893: LD_INT 1
6895: ARRAY
6896: IFFALSE 6912
// safe_place = flags [ 1 ] ;
6898: LD_ADDR_VAR 0 16
6902: PUSH
6903: LD_VAR 0 3
6907: PUSH
6908: LD_INT 1
6910: ARRAY
6911: ST_TO_ADDR
// if flags [ 2 ] then
6912: LD_VAR 0 3
6916: PUSH
6917: LD_INT 2
6919: ARRAY
6920: IFFALSE 6936
// spot_dist = flags [ 2 ] ;
6922: LD_ADDR_VAR 0 15
6926: PUSH
6927: LD_VAR 0 3
6931: PUSH
6932: LD_INT 2
6934: ARRAY
6935: ST_TO_ADDR
// if flags [ 3 ] then
6936: LD_VAR 0 3
6940: PUSH
6941: LD_INT 3
6943: ARRAY
6944: IFFALSE 6960
// chase_range = flags [ 3 ] ;
6946: LD_ADDR_VAR 0 17
6950: PUSH
6951: LD_VAR 0 3
6955: PUSH
6956: LD_INT 3
6958: ARRAY
6959: ST_TO_ADDR
// end ; if not chase_range then
6960: LD_VAR 0 17
6964: NOT
6965: IFFALSE 6975
// chase_range = 8 ;
6967: LD_ADDR_VAR 0 17
6971: PUSH
6972: LD_INT 8
6974: ST_TO_ADDR
// if not spot_dist then
6975: LD_VAR 0 15
6979: NOT
6980: IFFALSE 6990
// spot_dist := 8 ;
6982: LD_ADDR_VAR 0 15
6986: PUSH
6987: LD_INT 8
6989: ST_TO_ADDR
// need_refuel = ( GetType ( unit ) = unit_vehicle and GetEngine ( unit ) <> engine_siberite ) ;
6990: LD_ADDR_VAR 0 18
6994: PUSH
6995: LD_VAR 0 1
6999: PPUSH
7000: CALL_OW 247
7004: PUSH
7005: LD_INT 2
7007: EQUAL
7008: PUSH
7009: LD_VAR 0 1
7013: PPUSH
7014: CALL_OW 262
7018: PUSH
7019: LD_INT 3
7021: NONEQUAL
7022: AND
7023: ST_TO_ADDR
// status = 1 ;
7024: LD_ADDR_VAR 0 12
7028: PUSH
7029: LD_INT 1
7031: ST_TO_ADDR
// tmp_path = [ 1 , path [ 1 ] ] ;
7032: LD_ADDR_VAR 0 11
7036: PUSH
7037: LD_INT 1
7039: PUSH
7040: LD_VAR 0 2
7044: PUSH
7045: LD_INT 1
7047: ARRAY
7048: PUSH
7049: EMPTY
7050: LIST
7051: LIST
7052: ST_TO_ADDR
// repeat wait ( 0 0$1 ) ;
7053: LD_INT 35
7055: PPUSH
7056: CALL_OW 67
// if need_refuel and GetFuel ( unit ) < 20 then
7060: LD_VAR 0 18
7064: PUSH
7065: LD_VAR 0 1
7069: PPUSH
7070: CALL_OW 261
7074: PUSH
7075: LD_INT 20
7077: LESS
7078: AND
7079: IFFALSE 7272
// begin station := FilterAllUnits ( [ [ f_side , GetSide ( unit ) ] , [ f_or , [ f_btype , b_depot ] , [ f_btype , b_warehouse ] , [ f_btype , b_oil_mine ] , [ f_btype , b_factory ] ] ] ) ;
7081: LD_ADDR_VAR 0 10
7085: PUSH
7086: LD_INT 22
7088: PUSH
7089: LD_VAR 0 1
7093: PPUSH
7094: CALL_OW 255
7098: PUSH
7099: EMPTY
7100: LIST
7101: LIST
7102: PUSH
7103: LD_INT 2
7105: PUSH
7106: LD_INT 30
7108: PUSH
7109: LD_INT 0
7111: PUSH
7112: EMPTY
7113: LIST
7114: LIST
7115: PUSH
7116: LD_INT 30
7118: PUSH
7119: LD_INT 1
7121: PUSH
7122: EMPTY
7123: LIST
7124: LIST
7125: PUSH
7126: LD_INT 30
7128: PUSH
7129: LD_INT 29
7131: PUSH
7132: EMPTY
7133: LIST
7134: LIST
7135: PUSH
7136: LD_INT 30
7138: PUSH
7139: LD_INT 3
7141: PUSH
7142: EMPTY
7143: LIST
7144: LIST
7145: PUSH
7146: EMPTY
7147: LIST
7148: LIST
7149: LIST
7150: LIST
7151: LIST
7152: PUSH
7153: EMPTY
7154: LIST
7155: LIST
7156: PPUSH
7157: CALL_OW 69
7161: ST_TO_ADDR
// if not station then
7162: LD_VAR 0 10
7166: NOT
7167: IFFALSE 7183
// begin SetFuel ( unit , 40 ) ;
7169: LD_VAR 0 1
7173: PPUSH
7174: LD_INT 40
7176: PPUSH
7177: CALL_OW 240
// continue ;
7181: GO 7053
// end ; status := 6 ;
7183: LD_ADDR_VAR 0 12
7187: PUSH
7188: LD_INT 6
7190: ST_TO_ADDR
// station := NearestUnitToUnit ( station , unit ) ;
7191: LD_ADDR_VAR 0 10
7195: PUSH
7196: LD_VAR 0 10
7200: PPUSH
7201: LD_VAR 0 1
7205: PPUSH
7206: CALL_OW 74
7210: ST_TO_ADDR
// repeat wait ( 0 0$1 ) ;
7211: LD_INT 35
7213: PPUSH
7214: CALL_OW 67
// ComMoveUnit ( unit , station ) ;
7218: LD_VAR 0 1
7222: PPUSH
7223: LD_VAR 0 10
7227: PPUSH
7228: CALL_OW 112
// until GetDistUnits ( unit , station ) < 6 ;
7232: LD_VAR 0 1
7236: PPUSH
7237: LD_VAR 0 10
7241: PPUSH
7242: CALL_OW 296
7246: PUSH
7247: LD_INT 6
7249: LESS
7250: IFFALSE 7211
// SetFuel ( unit , 100 ) ;
7252: LD_VAR 0 1
7256: PPUSH
7257: LD_INT 100
7259: PPUSH
7260: CALL_OW 240
// status := 5 ;
7264: LD_ADDR_VAR 0 12
7268: PUSH
7269: LD_INT 5
7271: ST_TO_ADDR
// end ; if status = 1 then
7272: LD_VAR 0 12
7276: PUSH
7277: LD_INT 1
7279: EQUAL
7280: IFFALSE 7656
// begin enemy := FilterAllUnits ( [ [ f_enemy , GetSide ( unit ) ] , [ f_not , [ f_type , unit_building ] ] , [ f_dist , unit , spot_dist ] , [ f_see , 1 ] ] ) ;
7282: LD_ADDR_VAR 0 13
7286: PUSH
7287: LD_INT 81
7289: PUSH
7290: LD_VAR 0 1
7294: PPUSH
7295: CALL_OW 255
7299: PUSH
7300: EMPTY
7301: LIST
7302: LIST
7303: PUSH
7304: LD_INT 3
7306: PUSH
7307: LD_INT 21
7309: PUSH
7310: LD_INT 3
7312: PUSH
7313: EMPTY
7314: LIST
7315: LIST
7316: PUSH
7317: EMPTY
7318: LIST
7319: LIST
7320: PUSH
7321: LD_INT 91
7323: PUSH
7324: LD_VAR 0 1
7328: PUSH
7329: LD_VAR 0 15
7333: PUSH
7334: EMPTY
7335: LIST
7336: LIST
7337: LIST
7338: PUSH
7339: LD_INT 101
7341: PUSH
7342: LD_INT 1
7344: PUSH
7345: EMPTY
7346: LIST
7347: LIST
7348: PUSH
7349: EMPTY
7350: LIST
7351: LIST
7352: LIST
7353: LIST
7354: PPUSH
7355: CALL_OW 69
7359: ST_TO_ADDR
// for i in enemy do
7360: LD_ADDR_VAR 0 5
7364: PUSH
7365: LD_VAR 0 13
7369: PUSH
7370: FOR_IN
7371: IFFALSE 7402
// if IsInvisible ( i ) then
7373: LD_VAR 0 5
7377: PPUSH
7378: CALL_OW 571
7382: IFFALSE 7400
// enemy := enemy diff i ;
7384: LD_ADDR_VAR 0 13
7388: PUSH
7389: LD_VAR 0 13
7393: PUSH
7394: LD_VAR 0 5
7398: DIFF
7399: ST_TO_ADDR
7400: GO 7370
7402: POP
7403: POP
// if enemy then
7404: LD_VAR 0 13
7408: IFFALSE 7458
// begin SetRememberedX ( unit , GetX ( unit ) ) ;
7410: LD_VAR 0 1
7414: PPUSH
7415: LD_VAR 0 1
7419: PPUSH
7420: CALL_OW 250
7424: PPUSH
7425: CALL_OW 231
// SetRememberedY ( unit , GetY ( unit ) ) ;
7429: LD_VAR 0 1
7433: PPUSH
7434: LD_VAR 0 1
7438: PPUSH
7439: CALL_OW 251
7443: PPUSH
7444: CALL_OW 232
// status = 2 ;
7448: LD_ADDR_VAR 0 12
7452: PUSH
7453: LD_INT 2
7455: ST_TO_ADDR
// end else
7456: GO 7656
// begin if IsAt ( unit , tmp_path [ 2 ] [ 1 ] , tmp_path [ 2 ] [ 2 ] ) or not HasTask ( unit ) then
7458: LD_VAR 0 1
7462: PPUSH
7463: LD_VAR 0 11
7467: PUSH
7468: LD_INT 2
7470: ARRAY
7471: PUSH
7472: LD_INT 1
7474: ARRAY
7475: PPUSH
7476: LD_VAR 0 11
7480: PUSH
7481: LD_INT 2
7483: ARRAY
7484: PUSH
7485: LD_INT 2
7487: ARRAY
7488: PPUSH
7489: CALL_OW 307
7493: PUSH
7494: LD_VAR 0 1
7498: PPUSH
7499: CALL_OW 314
7503: NOT
7504: OR
7505: IFFALSE 7656
// begin wait ( 0 0$2 ) ;
7507: LD_INT 70
7509: PPUSH
7510: CALL_OW 67
// if tmp_path [ 1 ] + 1 > path then
7514: LD_VAR 0 11
7518: PUSH
7519: LD_INT 1
7521: ARRAY
7522: PUSH
7523: LD_INT 1
7525: PLUS
7526: PUSH
7527: LD_VAR 0 2
7531: GREATER
7532: IFFALSE 7557
// tmp_path := Replace ( tmp_path , 1 , 1 ) else
7534: LD_ADDR_VAR 0 11
7538: PUSH
7539: LD_VAR 0 11
7543: PPUSH
7544: LD_INT 1
7546: PPUSH
7547: LD_INT 1
7549: PPUSH
7550: CALL_OW 1
7554: ST_TO_ADDR
7555: GO 7588
// tmp_path := Replace ( tmp_path , 1 , tmp_path [ 1 ] + 1 ) ;
7557: LD_ADDR_VAR 0 11
7561: PUSH
7562: LD_VAR 0 11
7566: PPUSH
7567: LD_INT 1
7569: PPUSH
7570: LD_VAR 0 11
7574: PUSH
7575: LD_INT 1
7577: ARRAY
7578: PUSH
7579: LD_INT 1
7581: PLUS
7582: PPUSH
7583: CALL_OW 1
7587: ST_TO_ADDR
// tmp_path := Replace ( tmp_path , 2 , path [ tmp_path [ 1 ] ] ) ;
7588: LD_ADDR_VAR 0 11
7592: PUSH
7593: LD_VAR 0 11
7597: PPUSH
7598: LD_INT 2
7600: PPUSH
7601: LD_VAR 0 2
7605: PUSH
7606: LD_VAR 0 11
7610: PUSH
7611: LD_INT 1
7613: ARRAY
7614: ARRAY
7615: PPUSH
7616: CALL_OW 1
7620: ST_TO_ADDR
// ComAgressiveMove ( unit , tmp_path [ 2 ] [ 1 ] , tmp_path [ 2 ] [ 2 ] ) ;
7621: LD_VAR 0 1
7625: PPUSH
7626: LD_VAR 0 11
7630: PUSH
7631: LD_INT 2
7633: ARRAY
7634: PUSH
7635: LD_INT 1
7637: ARRAY
7638: PPUSH
7639: LD_VAR 0 11
7643: PUSH
7644: LD_INT 2
7646: ARRAY
7647: PUSH
7648: LD_INT 2
7650: ARRAY
7651: PPUSH
7652: CALL_OW 114
// end ; end ; end ; if status = 2 then
7656: LD_VAR 0 12
7660: PUSH
7661: LD_INT 2
7663: EQUAL
7664: IFFALSE 7885
// begin if GetLives ( unit ) < 650 and safe_place then
7666: LD_VAR 0 1
7670: PPUSH
7671: CALL_OW 256
7675: PUSH
7676: LD_INT 650
7678: LESS
7679: PUSH
7680: LD_VAR 0 16
7684: AND
7685: IFFALSE 7697
// begin status = 3 ;
7687: LD_ADDR_VAR 0 12
7691: PUSH
7692: LD_INT 3
7694: ST_TO_ADDR
// continue ;
7695: GO 7053
// end ; x := GetRememberedX ( unit ) ;
7697: LD_ADDR_VAR 0 6
7701: PUSH
7702: LD_VAR 0 1
7706: PPUSH
7707: CALL_OW 252
7711: ST_TO_ADDR
// y := GetRememberedY ( unit ) ;
7712: LD_ADDR_VAR 0 7
7716: PUSH
7717: LD_VAR 0 1
7721: PPUSH
7722: CALL_OW 253
7726: ST_TO_ADDR
// enemy := FilterAllUnits ( [ [ f_enemy , GetSide ( unit ) ] , [ f_distxy , x , y , spot_dist ] , [ f_see , 1 ] ] ) ;
7727: LD_ADDR_VAR 0 13
7731: PUSH
7732: LD_INT 81
7734: PUSH
7735: LD_VAR 0 1
7739: PPUSH
7740: CALL_OW 255
7744: PUSH
7745: EMPTY
7746: LIST
7747: LIST
7748: PUSH
7749: LD_INT 92
7751: PUSH
7752: LD_VAR 0 6
7756: PUSH
7757: LD_VAR 0 7
7761: PUSH
7762: LD_VAR 0 15
7766: PUSH
7767: EMPTY
7768: LIST
7769: LIST
7770: LIST
7771: LIST
7772: PUSH
7773: LD_INT 101
7775: PUSH
7776: LD_INT 1
7778: PUSH
7779: EMPTY
7780: LIST
7781: LIST
7782: PUSH
7783: EMPTY
7784: LIST
7785: LIST
7786: LIST
7787: PPUSH
7788: CALL_OW 69
7792: ST_TO_ADDR
// if enemy then
7793: LD_VAR 0 13
7797: IFFALSE 7868
// begin e := NearestUnitToUnit ( enemy , unit ) ;
7799: LD_ADDR_VAR 0 14
7803: PUSH
7804: LD_VAR 0 13
7808: PPUSH
7809: LD_VAR 0 1
7813: PPUSH
7814: CALL_OW 74
7818: ST_TO_ADDR
// if GetDistUnitXY ( e , x , y ) < spot_dist + chase_range then
7819: LD_VAR 0 14
7823: PPUSH
7824: LD_VAR 0 6
7828: PPUSH
7829: LD_VAR 0 7
7833: PPUSH
7834: CALL_OW 297
7838: PUSH
7839: LD_VAR 0 15
7843: PUSH
7844: LD_VAR 0 17
7848: PLUS
7849: LESS
7850: IFFALSE 7866
// ComAttackUnit ( unit , e ) ;
7852: LD_VAR 0 1
7856: PPUSH
7857: LD_VAR 0 14
7861: PPUSH
7862: CALL_OW 115
// end else
7866: GO 7885
// begin ComStop ( unit ) ;
7868: LD_VAR 0 1
7872: PPUSH
7873: CALL_OW 141
// status = 5 ;
7877: LD_ADDR_VAR 0 12
7881: PUSH
7882: LD_INT 5
7884: ST_TO_ADDR
// end ; end ; if status = 3 and safe_place then
7885: LD_VAR 0 12
7889: PUSH
7890: LD_INT 3
7892: EQUAL
7893: PUSH
7894: LD_VAR 0 16
7898: AND
7899: IFFALSE 7985
// begin repeat ComMoveXY ( unit , safe_place [ 1 ] , safe_place [ 2 ] ) ;
7901: LD_VAR 0 1
7905: PPUSH
7906: LD_VAR 0 16
7910: PUSH
7911: LD_INT 1
7913: ARRAY
7914: PPUSH
7915: LD_VAR 0 16
7919: PUSH
7920: LD_INT 2
7922: ARRAY
7923: PPUSH
7924: CALL_OW 111
// wait ( 0 0$1 ) ;
7928: LD_INT 35
7930: PPUSH
7931: CALL_OW 67
// until GetDistUnitXY ( unit , safe_place [ 1 ] , safe_place [ 2 ] ) < 4 ;
7935: LD_VAR 0 1
7939: PPUSH
7940: LD_VAR 0 16
7944: PUSH
7945: LD_INT 1
7947: ARRAY
7948: PPUSH
7949: LD_VAR 0 16
7953: PUSH
7954: LD_INT 2
7956: ARRAY
7957: PPUSH
7958: CALL_OW 297
7962: PUSH
7963: LD_INT 4
7965: LESS
7966: IFFALSE 7901
// ComStop ( unit ) ;
7968: LD_VAR 0 1
7972: PPUSH
7973: CALL_OW 141
// status = 4 ;
7977: LD_ADDR_VAR 0 12
7981: PUSH
7982: LD_INT 4
7984: ST_TO_ADDR
// end ; if status = 4 then
7985: LD_VAR 0 12
7989: PUSH
7990: LD_INT 4
7992: EQUAL
7993: IFFALSE 8025
// begin repeat wait ( 0 0$1 ) ;
7995: LD_INT 35
7997: PPUSH
7998: CALL_OW 67
// until GetLives ( unit ) = 1000 ;
8002: LD_VAR 0 1
8006: PPUSH
8007: CALL_OW 256
8011: PUSH
8012: LD_INT 1000
8014: EQUAL
8015: IFFALSE 7995
// status = 5 ;
8017: LD_ADDR_VAR 0 12
8021: PUSH
8022: LD_INT 5
8024: ST_TO_ADDR
// end ; if status = 5 then
8025: LD_VAR 0 12
8029: PUSH
8030: LD_INT 5
8032: EQUAL
8033: IFFALSE 8315
// begin p := 999 ;
8035: LD_ADDR_VAR 0 9
8039: PUSH
8040: LD_INT 999
8042: ST_TO_ADDR
// e := [ tmp_path [ 2 ] [ 1 ] , tmp_path [ 2 ] [ 2 ] ] ;
8043: LD_ADDR_VAR 0 14
8047: PUSH
8048: LD_VAR 0 11
8052: PUSH
8053: LD_INT 2
8055: ARRAY
8056: PUSH
8057: LD_INT 1
8059: ARRAY
8060: PUSH
8061: LD_VAR 0 11
8065: PUSH
8066: LD_INT 2
8068: ARRAY
8069: PUSH
8070: LD_INT 2
8072: ARRAY
8073: PUSH
8074: EMPTY
8075: LIST
8076: LIST
8077: ST_TO_ADDR
// c := 1 ;
8078: LD_ADDR_VAR 0 8
8082: PUSH
8083: LD_INT 1
8085: ST_TO_ADDR
// for i = 1 to tmp_path [ 2 ] div 2 do
8086: LD_ADDR_VAR 0 5
8090: PUSH
8091: DOUBLE
8092: LD_INT 1
8094: DEC
8095: ST_TO_ADDR
8096: LD_VAR 0 11
8100: PUSH
8101: LD_INT 2
8103: ARRAY
8104: PUSH
8105: LD_INT 2
8107: DIV
8108: PUSH
8109: FOR_TO
8110: IFFALSE 8242
// begin x := GetDistUnitXY ( unit , tmp_path [ 2 ] [ c ] , tmp_path [ 2 ] [ c + 1 ] ) ;
8112: LD_ADDR_VAR 0 6
8116: PUSH
8117: LD_VAR 0 1
8121: PPUSH
8122: LD_VAR 0 11
8126: PUSH
8127: LD_INT 2
8129: ARRAY
8130: PUSH
8131: LD_VAR 0 8
8135: ARRAY
8136: PPUSH
8137: LD_VAR 0 11
8141: PUSH
8142: LD_INT 2
8144: ARRAY
8145: PUSH
8146: LD_VAR 0 8
8150: PUSH
8151: LD_INT 1
8153: PLUS
8154: ARRAY
8155: PPUSH
8156: CALL_OW 297
8160: ST_TO_ADDR
// if x < p then
8161: LD_VAR 0 6
8165: PUSH
8166: LD_VAR 0 9
8170: LESS
8171: IFFALSE 8226
// begin p := x ;
8173: LD_ADDR_VAR 0 9
8177: PUSH
8178: LD_VAR 0 6
8182: ST_TO_ADDR
// e := [ tmp_path [ 2 ] [ c ] , tmp_path [ 2 ] [ c + 1 ] ] ;
8183: LD_ADDR_VAR 0 14
8187: PUSH
8188: LD_VAR 0 11
8192: PUSH
8193: LD_INT 2
8195: ARRAY
8196: PUSH
8197: LD_VAR 0 8
8201: ARRAY
8202: PUSH
8203: LD_VAR 0 11
8207: PUSH
8208: LD_INT 2
8210: ARRAY
8211: PUSH
8212: LD_VAR 0 8
8216: PUSH
8217: LD_INT 1
8219: PLUS
8220: ARRAY
8221: PUSH
8222: EMPTY
8223: LIST
8224: LIST
8225: ST_TO_ADDR
// end ; c = c + 2 ;
8226: LD_ADDR_VAR 0 8
8230: PUSH
8231: LD_VAR 0 8
8235: PUSH
8236: LD_INT 2
8238: PLUS
8239: ST_TO_ADDR
// end ;
8240: GO 8109
8242: POP
8243: POP
// repeat ComMoveXY ( unit , e [ 1 ] , e [ 2 ] ) ;
8244: LD_VAR 0 1
8248: PPUSH
8249: LD_VAR 0 14
8253: PUSH
8254: LD_INT 1
8256: ARRAY
8257: PPUSH
8258: LD_VAR 0 14
8262: PUSH
8263: LD_INT 2
8265: ARRAY
8266: PPUSH
8267: CALL_OW 111
// wait ( 0 0$1 ) ;
8271: LD_INT 35
8273: PPUSH
8274: CALL_OW 67
// until IsAt ( unit , e [ 1 ] , e [ 2 ] ) ;
8278: LD_VAR 0 1
8282: PPUSH
8283: LD_VAR 0 14
8287: PUSH
8288: LD_INT 1
8290: ARRAY
8291: PPUSH
8292: LD_VAR 0 14
8296: PUSH
8297: LD_INT 2
8299: ARRAY
8300: PPUSH
8301: CALL_OW 307
8305: IFFALSE 8244
// status = 1 ;
8307: LD_ADDR_VAR 0 12
8311: PUSH
8312: LD_INT 1
8314: ST_TO_ADDR
// end ; until IsDead ( unit ) ;
8315: LD_VAR 0 1
8319: PPUSH
8320: CALL_OW 301
8324: IFFALSE 7053
// end ;
8326: LD_VAR 0 4
8330: RET
// export function Talk ( units , type , sequence , sex , class , id , order_id ) ; var i , unit , tmp , unit_id , dialog_id , sex_id , class_id ; begin
8331: LD_INT 0
8333: PPUSH
8334: PPUSH
8335: PPUSH
8336: PPUSH
8337: PPUSH
8338: PPUSH
8339: PPUSH
8340: PPUSH
// if not units or not sequence or not sex in [ sex_male , sex_female , 0 ] or not id or not order_id then
8341: LD_VAR 0 1
8345: NOT
8346: PUSH
8347: LD_VAR 0 3
8351: NOT
8352: OR
8353: PUSH
8354: LD_VAR 0 4
8358: PUSH
8359: LD_INT 1
8361: PUSH
8362: LD_INT 2
8364: PUSH
8365: LD_INT 0
8367: PUSH
8368: EMPTY
8369: LIST
8370: LIST
8371: LIST
8372: IN
8373: NOT
8374: OR
8375: PUSH
8376: LD_VAR 0 6
8380: NOT
8381: OR
8382: PUSH
8383: LD_VAR 0 7
8387: NOT
8388: OR
8389: IFFALSE 8393
// exit ;
8391: GO 8784
// sex_id :=  ;
8393: LD_ADDR_VAR 0 14
8397: PUSH
8398: LD_STRING 
8400: ST_TO_ADDR
// case class of 1 :
8401: LD_VAR 0 5
8405: PUSH
8406: LD_INT 1
8408: DOUBLE
8409: EQUAL
8410: IFTRUE 8414
8412: GO 8425
8414: POP
// class_id := Sol ; 2 :
8415: LD_ADDR_VAR 0 15
8419: PUSH
8420: LD_STRING Sol
8422: ST_TO_ADDR
8423: GO 8483
8425: LD_INT 2
8427: DOUBLE
8428: EQUAL
8429: IFTRUE 8433
8431: GO 8444
8433: POP
// class_id := Eng ; 3 :
8434: LD_ADDR_VAR 0 15
8438: PUSH
8439: LD_STRING Eng
8441: ST_TO_ADDR
8442: GO 8483
8444: LD_INT 3
8446: DOUBLE
8447: EQUAL
8448: IFTRUE 8452
8450: GO 8463
8452: POP
// class_id := Mech ; 4 :
8453: LD_ADDR_VAR 0 15
8457: PUSH
8458: LD_STRING Mech
8460: ST_TO_ADDR
8461: GO 8483
8463: LD_INT 4
8465: DOUBLE
8466: EQUAL
8467: IFTRUE 8471
8469: GO 8482
8471: POP
// class_id := Sci ; end ;
8472: LD_ADDR_VAR 0 15
8476: PUSH
8477: LD_STRING Sci
8479: ST_TO_ADDR
8480: GO 8483
8482: POP
// tmp := UnitFilter ( units , [ f_class , class ] ) ;
8483: LD_ADDR_VAR 0 11
8487: PUSH
8488: LD_VAR 0 1
8492: PPUSH
8493: LD_INT 25
8495: PUSH
8496: LD_VAR 0 5
8500: PUSH
8501: EMPTY
8502: LIST
8503: LIST
8504: PPUSH
8505: CALL_OW 72
8509: ST_TO_ADDR
// if tmp then
8510: LD_VAR 0 11
8514: IFFALSE 8526
// units := tmp ;
8516: LD_ADDR_VAR 0 1
8520: PUSH
8521: LD_VAR 0 11
8525: ST_TO_ADDR
// if sex then
8526: LD_VAR 0 4
8530: IFFALSE 8586
// begin if sex = sex_female then
8532: LD_VAR 0 4
8536: PUSH
8537: LD_INT 2
8539: EQUAL
8540: IFFALSE 8550
// sex_id := F ;
8542: LD_ADDR_VAR 0 14
8546: PUSH
8547: LD_STRING F
8549: ST_TO_ADDR
// units := UnitFilter ( units , [ f_sex , sex ] ) ;
8550: LD_ADDR_VAR 0 1
8554: PUSH
8555: LD_VAR 0 1
8559: PPUSH
8560: LD_INT 26
8562: PUSH
8563: LD_VAR 0 4
8567: PUSH
8568: EMPTY
8569: LIST
8570: LIST
8571: PPUSH
8572: CALL_OW 72
8576: ST_TO_ADDR
// if not units then
8577: LD_VAR 0 1
8581: NOT
8582: IFFALSE 8586
// exit ;
8584: GO 8784
// end ; unit_id := id ;
8586: LD_ADDR_VAR 0 12
8590: PUSH
8591: LD_VAR 0 6
8595: ST_TO_ADDR
// if unit_id > units then
8596: LD_VAR 0 12
8600: PUSH
8601: LD_VAR 0 1
8605: GREATER
8606: IFFALSE 8616
// unit_id := 1 ;
8608: LD_ADDR_VAR 0 12
8612: PUSH
8613: LD_INT 1
8615: ST_TO_ADDR
// if not units [ unit_id ] then
8616: LD_VAR 0 1
8620: PUSH
8621: LD_VAR 0 12
8625: ARRAY
8626: NOT
8627: IFFALSE 8631
// exit ;
8629: GO 8784
// unit := units [ unit_id ] ;
8631: LD_ADDR_VAR 0 10
8635: PUSH
8636: LD_VAR 0 1
8640: PUSH
8641: LD_VAR 0 12
8645: ARRAY
8646: ST_TO_ADDR
// dialog_id := D & sequence & - & sex_id & class_id & id & - & order_id ;
8647: LD_ADDR_VAR 0 13
8651: PUSH
8652: LD_STRING D
8654: PUSH
8655: LD_VAR 0 3
8659: STR
8660: PUSH
8661: LD_STRING -
8663: STR
8664: PUSH
8665: LD_VAR 0 14
8669: STR
8670: PUSH
8671: LD_VAR 0 15
8675: STR
8676: PUSH
8677: LD_VAR 0 6
8681: STR
8682: PUSH
8683: LD_STRING -
8685: STR
8686: PUSH
8687: LD_VAR 0 7
8691: STR
8692: ST_TO_ADDR
// case type of 0 :
8693: LD_VAR 0 2
8697: PUSH
8698: LD_INT 0
8700: DOUBLE
8701: EQUAL
8702: IFTRUE 8706
8704: GO 8723
8706: POP
// Say ( unit , dialog_id ) ; 1 :
8707: LD_VAR 0 10
8711: PPUSH
8712: LD_VAR 0 13
8716: PPUSH
8717: CALL_OW 88
8721: GO 8774
8723: LD_INT 1
8725: DOUBLE
8726: EQUAL
8727: IFTRUE 8731
8729: GO 8748
8731: POP
// SayRadio ( unit , dialog_id ) ; 2 :
8732: LD_VAR 0 10
8736: PPUSH
8737: LD_VAR 0 13
8741: PPUSH
8742: CALL_OW 94
8746: GO 8774
8748: LD_INT 2
8750: DOUBLE
8751: EQUAL
8752: IFTRUE 8756
8754: GO 8773
8756: POP
// ForceSay ( unit , dialog_id ) ; end ;
8757: LD_VAR 0 10
8761: PPUSH
8762: LD_VAR 0 13
8766: PPUSH
8767: CALL_OW 91
8771: GO 8774
8773: POP
// result := unit ;
8774: LD_ADDR_VAR 0 8
8778: PUSH
8779: LD_VAR 0 10
8783: ST_TO_ADDR
// end ;
8784: LD_VAR 0 8
8788: RET
// export function Reindex ( array , i_from , i_to , direction ) ; var i , j , k , d , tmp , length ; begin
8789: LD_INT 0
8791: PPUSH
8792: PPUSH
8793: PPUSH
8794: PPUSH
8795: PPUSH
8796: PPUSH
8797: PPUSH
// result := array ;
8798: LD_ADDR_VAR 0 5
8802: PUSH
8803: LD_VAR 0 1
8807: ST_TO_ADDR
// if not array or not i_from or not i_to or i_from > array or i_to > array then
8808: LD_VAR 0 1
8812: NOT
8813: PUSH
8814: LD_VAR 0 2
8818: NOT
8819: OR
8820: PUSH
8821: LD_VAR 0 3
8825: NOT
8826: OR
8827: PUSH
8828: LD_VAR 0 2
8832: PUSH
8833: LD_VAR 0 1
8837: GREATER
8838: OR
8839: PUSH
8840: LD_VAR 0 3
8844: PUSH
8845: LD_VAR 0 1
8849: GREATER
8850: OR
8851: IFFALSE 8855
// exit ;
8853: GO 9151
// if direction then
8855: LD_VAR 0 4
8859: IFFALSE 8923
// begin d := 1 ;
8861: LD_ADDR_VAR 0 9
8865: PUSH
8866: LD_INT 1
8868: ST_TO_ADDR
// if i_from > i_to then
8869: LD_VAR 0 2
8873: PUSH
8874: LD_VAR 0 3
8878: GREATER
8879: IFFALSE 8905
// length := ( array - i_from ) + i_to else
8881: LD_ADDR_VAR 0 11
8885: PUSH
8886: LD_VAR 0 1
8890: PUSH
8891: LD_VAR 0 2
8895: MINUS
8896: PUSH
8897: LD_VAR 0 3
8901: PLUS
8902: ST_TO_ADDR
8903: GO 8921
// length := i_to - i_from ;
8905: LD_ADDR_VAR 0 11
8909: PUSH
8910: LD_VAR 0 3
8914: PUSH
8915: LD_VAR 0 2
8919: MINUS
8920: ST_TO_ADDR
// end else
8921: GO 8984
// begin d := - 1 ;
8923: LD_ADDR_VAR 0 9
8927: PUSH
8928: LD_INT 1
8930: NEG
8931: ST_TO_ADDR
// if i_from > i_to then
8932: LD_VAR 0 2
8936: PUSH
8937: LD_VAR 0 3
8941: GREATER
8942: IFFALSE 8962
// length := i_from - i_to else
8944: LD_ADDR_VAR 0 11
8948: PUSH
8949: LD_VAR 0 2
8953: PUSH
8954: LD_VAR 0 3
8958: MINUS
8959: ST_TO_ADDR
8960: GO 8984
// length := ( array - i_to ) + i_from ;
8962: LD_ADDR_VAR 0 11
8966: PUSH
8967: LD_VAR 0 1
8971: PUSH
8972: LD_VAR 0 3
8976: MINUS
8977: PUSH
8978: LD_VAR 0 2
8982: PLUS
8983: ST_TO_ADDR
// end ; if not length then
8984: LD_VAR 0 11
8988: NOT
8989: IFFALSE 8993
// exit ;
8991: GO 9151
// tmp := array ;
8993: LD_ADDR_VAR 0 10
8997: PUSH
8998: LD_VAR 0 1
9002: ST_TO_ADDR
// for i = 1 to length do
9003: LD_ADDR_VAR 0 6
9007: PUSH
9008: DOUBLE
9009: LD_INT 1
9011: DEC
9012: ST_TO_ADDR
9013: LD_VAR 0 11
9017: PUSH
9018: FOR_TO
9019: IFFALSE 9139
// begin for j = 1 to array do
9021: LD_ADDR_VAR 0 7
9025: PUSH
9026: DOUBLE
9027: LD_INT 1
9029: DEC
9030: ST_TO_ADDR
9031: LD_VAR 0 1
9035: PUSH
9036: FOR_TO
9037: IFFALSE 9125
// begin k := j + d ;
9039: LD_ADDR_VAR 0 8
9043: PUSH
9044: LD_VAR 0 7
9048: PUSH
9049: LD_VAR 0 9
9053: PLUS
9054: ST_TO_ADDR
// if k > array then
9055: LD_VAR 0 8
9059: PUSH
9060: LD_VAR 0 1
9064: GREATER
9065: IFFALSE 9075
// k := 1 ;
9067: LD_ADDR_VAR 0 8
9071: PUSH
9072: LD_INT 1
9074: ST_TO_ADDR
// if not k then
9075: LD_VAR 0 8
9079: NOT
9080: IFFALSE 9092
// k := array ;
9082: LD_ADDR_VAR 0 8
9086: PUSH
9087: LD_VAR 0 1
9091: ST_TO_ADDR
// tmp := Replace ( tmp , k , array [ j ] ) ;
9092: LD_ADDR_VAR 0 10
9096: PUSH
9097: LD_VAR 0 10
9101: PPUSH
9102: LD_VAR 0 8
9106: PPUSH
9107: LD_VAR 0 1
9111: PUSH
9112: LD_VAR 0 7
9116: ARRAY
9117: PPUSH
9118: CALL_OW 1
9122: ST_TO_ADDR
// end ;
9123: GO 9036
9125: POP
9126: POP
// array := tmp ;
9127: LD_ADDR_VAR 0 1
9131: PUSH
9132: LD_VAR 0 10
9136: ST_TO_ADDR
// end ;
9137: GO 9018
9139: POP
9140: POP
// result := array ;
9141: LD_ADDR_VAR 0 5
9145: PUSH
9146: LD_VAR 0 1
9150: ST_TO_ADDR
// end ;
9151: LD_VAR 0 5
9155: RET
// export function GetBuildingHexes ( btype , x , y , dir , nation , mode ) ; var i , temp_list , temp_list2 ; var DepotAm0 , DepotAm1 , DepotAm2 , DepotAm3 , DepotAm4 , DepotAm5 , DepotAr0 , DepotAr1 , DepotAr2 , DepotAr3 , DepotAr4 , DepotAr5 , DepotRu0 , DepotRu1 , DepotRu2 , DepotRu3 , DepotRu4 , DepotRu5 ; var Factory0 , Factory1 , Factory2 , Factory3 , Factory4 , Factory5 , Ext0 , Ext1 , Ext2 , Ext3 , Ext4 , Ext5 ; var Lab0 , Lab1 , Lab2 , Lab3 , Lab4 , Lab5 , ControlTower0 , ControlTower1 , ControlTower2 , ControlTower3 , ControlTower4 , ControlTower5 ; var Barracks0 , Barracks1 , Barracks2 , Barracks3 , Barracks4 , Barracks5 , Bunker0 , Bunker1 , Bunker2 , Bunker3 , Bunker4 , Bunker5 ; begin
9156: LD_INT 0
9158: PPUSH
9159: PPUSH
9160: PPUSH
9161: PPUSH
9162: PPUSH
9163: PPUSH
9164: PPUSH
9165: PPUSH
9166: PPUSH
9167: PPUSH
9168: PPUSH
9169: PPUSH
9170: PPUSH
9171: PPUSH
9172: PPUSH
9173: PPUSH
9174: PPUSH
9175: PPUSH
9176: PPUSH
9177: PPUSH
9178: PPUSH
9179: PPUSH
9180: PPUSH
9181: PPUSH
9182: PPUSH
9183: PPUSH
9184: PPUSH
9185: PPUSH
9186: PPUSH
9187: PPUSH
9188: PPUSH
9189: PPUSH
9190: PPUSH
9191: PPUSH
9192: PPUSH
9193: PPUSH
9194: PPUSH
9195: PPUSH
9196: PPUSH
9197: PPUSH
9198: PPUSH
9199: PPUSH
9200: PPUSH
9201: PPUSH
9202: PPUSH
9203: PPUSH
9204: PPUSH
9205: PPUSH
9206: PPUSH
9207: PPUSH
9208: PPUSH
9209: PPUSH
9210: PPUSH
9211: PPUSH
9212: PPUSH
9213: PPUSH
9214: PPUSH
9215: PPUSH
// result = [ ] ;
9216: LD_ADDR_VAR 0 7
9220: PUSH
9221: EMPTY
9222: ST_TO_ADDR
// temp_list = [ ] ;
9223: LD_ADDR_VAR 0 9
9227: PUSH
9228: EMPTY
9229: ST_TO_ADDR
// if not dir in [ 0 , 1 , 2 , 3 , 4 , 5 ] or ( btype in [ b_depot , b_warehouse ] and not nation in [ nation_american , nation_arabian , nation_russian ] ) then
9230: LD_VAR 0 4
9234: PUSH
9235: LD_INT 0
9237: PUSH
9238: LD_INT 1
9240: PUSH
9241: LD_INT 2
9243: PUSH
9244: LD_INT 3
9246: PUSH
9247: LD_INT 4
9249: PUSH
9250: LD_INT 5
9252: PUSH
9253: EMPTY
9254: LIST
9255: LIST
9256: LIST
9257: LIST
9258: LIST
9259: LIST
9260: IN
9261: NOT
9262: PUSH
9263: LD_VAR 0 1
9267: PUSH
9268: LD_INT 0
9270: PUSH
9271: LD_INT 1
9273: PUSH
9274: EMPTY
9275: LIST
9276: LIST
9277: IN
9278: PUSH
9279: LD_VAR 0 5
9283: PUSH
9284: LD_INT 1
9286: PUSH
9287: LD_INT 2
9289: PUSH
9290: LD_INT 3
9292: PUSH
9293: EMPTY
9294: LIST
9295: LIST
9296: LIST
9297: IN
9298: NOT
9299: AND
9300: OR
9301: IFFALSE 9305
// exit ;
9303: GO 27690
// if btype in [ b_lab , b_lab_half , b_lab_full , b_lab_biological , b_lab_computer , b_lab_opto , b_lab_siberium , b_lab_spacetime , b_lab_weapon ] then
9305: LD_VAR 0 1
9309: PUSH
9310: LD_INT 6
9312: PUSH
9313: LD_INT 7
9315: PUSH
9316: LD_INT 8
9318: PUSH
9319: LD_INT 13
9321: PUSH
9322: LD_INT 12
9324: PUSH
9325: LD_INT 15
9327: PUSH
9328: LD_INT 11
9330: PUSH
9331: LD_INT 14
9333: PUSH
9334: LD_INT 10
9336: PUSH
9337: EMPTY
9338: LIST
9339: LIST
9340: LIST
9341: LIST
9342: LIST
9343: LIST
9344: LIST
9345: LIST
9346: LIST
9347: IN
9348: IFFALSE 9358
// btype = b_lab ;
9350: LD_ADDR_VAR 0 1
9354: PUSH
9355: LD_INT 6
9357: ST_TO_ADDR
// if not mode in [ 0 , 1 , 2 ] or ( not btype in [ b_depot , b_warehouse , b_workshop , b_factory , b_lab , b_control_tower , b_armoury , b_barracks , b_breastwork , b_bunker , b_turret ] and mode = 1 ) or ( not btype in [ b_workshop , b_factory ] and mode = 2 ) then
9358: LD_VAR 0 6
9362: PUSH
9363: LD_INT 0
9365: PUSH
9366: LD_INT 1
9368: PUSH
9369: LD_INT 2
9371: PUSH
9372: EMPTY
9373: LIST
9374: LIST
9375: LIST
9376: IN
9377: NOT
9378: PUSH
9379: LD_VAR 0 1
9383: PUSH
9384: LD_INT 0
9386: PUSH
9387: LD_INT 1
9389: PUSH
9390: LD_INT 2
9392: PUSH
9393: LD_INT 3
9395: PUSH
9396: LD_INT 6
9398: PUSH
9399: LD_INT 36
9401: PUSH
9402: LD_INT 4
9404: PUSH
9405: LD_INT 5
9407: PUSH
9408: LD_INT 31
9410: PUSH
9411: LD_INT 32
9413: PUSH
9414: LD_INT 33
9416: PUSH
9417: EMPTY
9418: LIST
9419: LIST
9420: LIST
9421: LIST
9422: LIST
9423: LIST
9424: LIST
9425: LIST
9426: LIST
9427: LIST
9428: LIST
9429: IN
9430: NOT
9431: PUSH
9432: LD_VAR 0 6
9436: PUSH
9437: LD_INT 1
9439: EQUAL
9440: AND
9441: OR
9442: PUSH
9443: LD_VAR 0 1
9447: PUSH
9448: LD_INT 2
9450: PUSH
9451: LD_INT 3
9453: PUSH
9454: EMPTY
9455: LIST
9456: LIST
9457: IN
9458: NOT
9459: PUSH
9460: LD_VAR 0 6
9464: PUSH
9465: LD_INT 2
9467: EQUAL
9468: AND
9469: OR
9470: IFFALSE 9480
// mode = 0 ;
9472: LD_ADDR_VAR 0 6
9476: PUSH
9477: LD_INT 0
9479: ST_TO_ADDR
// case mode of 0 :
9480: LD_VAR 0 6
9484: PUSH
9485: LD_INT 0
9487: DOUBLE
9488: EQUAL
9489: IFTRUE 9493
9491: GO 20946
9493: POP
// begin DepotAm0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
9494: LD_ADDR_VAR 0 11
9498: PUSH
9499: LD_INT 0
9501: PUSH
9502: LD_INT 0
9504: PUSH
9505: EMPTY
9506: LIST
9507: LIST
9508: PUSH
9509: LD_INT 0
9511: PUSH
9512: LD_INT 1
9514: NEG
9515: PUSH
9516: EMPTY
9517: LIST
9518: LIST
9519: PUSH
9520: LD_INT 1
9522: PUSH
9523: LD_INT 0
9525: PUSH
9526: EMPTY
9527: LIST
9528: LIST
9529: PUSH
9530: LD_INT 1
9532: PUSH
9533: LD_INT 1
9535: PUSH
9536: EMPTY
9537: LIST
9538: LIST
9539: PUSH
9540: LD_INT 0
9542: PUSH
9543: LD_INT 1
9545: PUSH
9546: EMPTY
9547: LIST
9548: LIST
9549: PUSH
9550: LD_INT 1
9552: NEG
9553: PUSH
9554: LD_INT 0
9556: PUSH
9557: EMPTY
9558: LIST
9559: LIST
9560: PUSH
9561: LD_INT 1
9563: NEG
9564: PUSH
9565: LD_INT 1
9567: NEG
9568: PUSH
9569: EMPTY
9570: LIST
9571: LIST
9572: PUSH
9573: LD_INT 1
9575: NEG
9576: PUSH
9577: LD_INT 2
9579: NEG
9580: PUSH
9581: EMPTY
9582: LIST
9583: LIST
9584: PUSH
9585: LD_INT 0
9587: PUSH
9588: LD_INT 2
9590: NEG
9591: PUSH
9592: EMPTY
9593: LIST
9594: LIST
9595: PUSH
9596: LD_INT 1
9598: PUSH
9599: LD_INT 1
9601: NEG
9602: PUSH
9603: EMPTY
9604: LIST
9605: LIST
9606: PUSH
9607: LD_INT 1
9609: PUSH
9610: LD_INT 2
9612: PUSH
9613: EMPTY
9614: LIST
9615: LIST
9616: PUSH
9617: LD_INT 0
9619: PUSH
9620: LD_INT 2
9622: PUSH
9623: EMPTY
9624: LIST
9625: LIST
9626: PUSH
9627: LD_INT 1
9629: NEG
9630: PUSH
9631: LD_INT 1
9633: PUSH
9634: EMPTY
9635: LIST
9636: LIST
9637: PUSH
9638: LD_INT 1
9640: PUSH
9641: LD_INT 3
9643: PUSH
9644: EMPTY
9645: LIST
9646: LIST
9647: PUSH
9648: LD_INT 0
9650: PUSH
9651: LD_INT 3
9653: PUSH
9654: EMPTY
9655: LIST
9656: LIST
9657: PUSH
9658: LD_INT 1
9660: NEG
9661: PUSH
9662: LD_INT 2
9664: PUSH
9665: EMPTY
9666: LIST
9667: LIST
9668: PUSH
9669: EMPTY
9670: LIST
9671: LIST
9672: LIST
9673: LIST
9674: LIST
9675: LIST
9676: LIST
9677: LIST
9678: LIST
9679: LIST
9680: LIST
9681: LIST
9682: LIST
9683: LIST
9684: LIST
9685: LIST
9686: ST_TO_ADDR
// DepotAm1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
9687: LD_ADDR_VAR 0 12
9691: PUSH
9692: LD_INT 0
9694: PUSH
9695: LD_INT 0
9697: PUSH
9698: EMPTY
9699: LIST
9700: LIST
9701: PUSH
9702: LD_INT 0
9704: PUSH
9705: LD_INT 1
9707: NEG
9708: PUSH
9709: EMPTY
9710: LIST
9711: LIST
9712: PUSH
9713: LD_INT 1
9715: PUSH
9716: LD_INT 0
9718: PUSH
9719: EMPTY
9720: LIST
9721: LIST
9722: PUSH
9723: LD_INT 1
9725: PUSH
9726: LD_INT 1
9728: PUSH
9729: EMPTY
9730: LIST
9731: LIST
9732: PUSH
9733: LD_INT 0
9735: PUSH
9736: LD_INT 1
9738: PUSH
9739: EMPTY
9740: LIST
9741: LIST
9742: PUSH
9743: LD_INT 1
9745: NEG
9746: PUSH
9747: LD_INT 0
9749: PUSH
9750: EMPTY
9751: LIST
9752: LIST
9753: PUSH
9754: LD_INT 1
9756: NEG
9757: PUSH
9758: LD_INT 1
9760: NEG
9761: PUSH
9762: EMPTY
9763: LIST
9764: LIST
9765: PUSH
9766: LD_INT 1
9768: PUSH
9769: LD_INT 1
9771: NEG
9772: PUSH
9773: EMPTY
9774: LIST
9775: LIST
9776: PUSH
9777: LD_INT 2
9779: PUSH
9780: LD_INT 0
9782: PUSH
9783: EMPTY
9784: LIST
9785: LIST
9786: PUSH
9787: LD_INT 2
9789: PUSH
9790: LD_INT 1
9792: PUSH
9793: EMPTY
9794: LIST
9795: LIST
9796: PUSH
9797: LD_INT 1
9799: NEG
9800: PUSH
9801: LD_INT 1
9803: PUSH
9804: EMPTY
9805: LIST
9806: LIST
9807: PUSH
9808: LD_INT 2
9810: NEG
9811: PUSH
9812: LD_INT 0
9814: PUSH
9815: EMPTY
9816: LIST
9817: LIST
9818: PUSH
9819: LD_INT 2
9821: NEG
9822: PUSH
9823: LD_INT 1
9825: NEG
9826: PUSH
9827: EMPTY
9828: LIST
9829: LIST
9830: PUSH
9831: LD_INT 2
9833: NEG
9834: PUSH
9835: LD_INT 1
9837: PUSH
9838: EMPTY
9839: LIST
9840: LIST
9841: PUSH
9842: LD_INT 3
9844: NEG
9845: PUSH
9846: LD_INT 0
9848: PUSH
9849: EMPTY
9850: LIST
9851: LIST
9852: PUSH
9853: LD_INT 3
9855: NEG
9856: PUSH
9857: LD_INT 1
9859: NEG
9860: PUSH
9861: EMPTY
9862: LIST
9863: LIST
9864: PUSH
9865: EMPTY
9866: LIST
9867: LIST
9868: LIST
9869: LIST
9870: LIST
9871: LIST
9872: LIST
9873: LIST
9874: LIST
9875: LIST
9876: LIST
9877: LIST
9878: LIST
9879: LIST
9880: LIST
9881: LIST
9882: ST_TO_ADDR
// DepotAm2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
9883: LD_ADDR_VAR 0 13
9887: PUSH
9888: LD_INT 0
9890: PUSH
9891: LD_INT 0
9893: PUSH
9894: EMPTY
9895: LIST
9896: LIST
9897: PUSH
9898: LD_INT 0
9900: PUSH
9901: LD_INT 1
9903: NEG
9904: PUSH
9905: EMPTY
9906: LIST
9907: LIST
9908: PUSH
9909: LD_INT 1
9911: PUSH
9912: LD_INT 0
9914: PUSH
9915: EMPTY
9916: LIST
9917: LIST
9918: PUSH
9919: LD_INT 1
9921: PUSH
9922: LD_INT 1
9924: PUSH
9925: EMPTY
9926: LIST
9927: LIST
9928: PUSH
9929: LD_INT 0
9931: PUSH
9932: LD_INT 1
9934: PUSH
9935: EMPTY
9936: LIST
9937: LIST
9938: PUSH
9939: LD_INT 1
9941: NEG
9942: PUSH
9943: LD_INT 0
9945: PUSH
9946: EMPTY
9947: LIST
9948: LIST
9949: PUSH
9950: LD_INT 1
9952: NEG
9953: PUSH
9954: LD_INT 1
9956: NEG
9957: PUSH
9958: EMPTY
9959: LIST
9960: LIST
9961: PUSH
9962: LD_INT 1
9964: NEG
9965: PUSH
9966: LD_INT 2
9968: NEG
9969: PUSH
9970: EMPTY
9971: LIST
9972: LIST
9973: PUSH
9974: LD_INT 2
9976: PUSH
9977: LD_INT 1
9979: PUSH
9980: EMPTY
9981: LIST
9982: LIST
9983: PUSH
9984: LD_INT 2
9986: PUSH
9987: LD_INT 2
9989: PUSH
9990: EMPTY
9991: LIST
9992: LIST
9993: PUSH
9994: LD_INT 1
9996: PUSH
9997: LD_INT 2
9999: PUSH
10000: EMPTY
10001: LIST
10002: LIST
10003: PUSH
10004: LD_INT 2
10006: NEG
10007: PUSH
10008: LD_INT 1
10010: NEG
10011: PUSH
10012: EMPTY
10013: LIST
10014: LIST
10015: PUSH
10016: LD_INT 2
10018: NEG
10019: PUSH
10020: LD_INT 2
10022: NEG
10023: PUSH
10024: EMPTY
10025: LIST
10026: LIST
10027: PUSH
10028: LD_INT 2
10030: NEG
10031: PUSH
10032: LD_INT 3
10034: NEG
10035: PUSH
10036: EMPTY
10037: LIST
10038: LIST
10039: PUSH
10040: LD_INT 3
10042: NEG
10043: PUSH
10044: LD_INT 2
10046: NEG
10047: PUSH
10048: EMPTY
10049: LIST
10050: LIST
10051: PUSH
10052: LD_INT 3
10054: NEG
10055: PUSH
10056: LD_INT 3
10058: NEG
10059: PUSH
10060: EMPTY
10061: LIST
10062: LIST
10063: PUSH
10064: EMPTY
10065: LIST
10066: LIST
10067: LIST
10068: LIST
10069: LIST
10070: LIST
10071: LIST
10072: LIST
10073: LIST
10074: LIST
10075: LIST
10076: LIST
10077: LIST
10078: LIST
10079: LIST
10080: LIST
10081: ST_TO_ADDR
// DepotAm3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
10082: LD_ADDR_VAR 0 14
10086: PUSH
10087: LD_INT 0
10089: PUSH
10090: LD_INT 0
10092: PUSH
10093: EMPTY
10094: LIST
10095: LIST
10096: PUSH
10097: LD_INT 0
10099: PUSH
10100: LD_INT 1
10102: NEG
10103: PUSH
10104: EMPTY
10105: LIST
10106: LIST
10107: PUSH
10108: LD_INT 1
10110: PUSH
10111: LD_INT 0
10113: PUSH
10114: EMPTY
10115: LIST
10116: LIST
10117: PUSH
10118: LD_INT 1
10120: PUSH
10121: LD_INT 1
10123: PUSH
10124: EMPTY
10125: LIST
10126: LIST
10127: PUSH
10128: LD_INT 0
10130: PUSH
10131: LD_INT 1
10133: PUSH
10134: EMPTY
10135: LIST
10136: LIST
10137: PUSH
10138: LD_INT 1
10140: NEG
10141: PUSH
10142: LD_INT 0
10144: PUSH
10145: EMPTY
10146: LIST
10147: LIST
10148: PUSH
10149: LD_INT 1
10151: NEG
10152: PUSH
10153: LD_INT 1
10155: NEG
10156: PUSH
10157: EMPTY
10158: LIST
10159: LIST
10160: PUSH
10161: LD_INT 1
10163: NEG
10164: PUSH
10165: LD_INT 2
10167: NEG
10168: PUSH
10169: EMPTY
10170: LIST
10171: LIST
10172: PUSH
10173: LD_INT 0
10175: PUSH
10176: LD_INT 2
10178: NEG
10179: PUSH
10180: EMPTY
10181: LIST
10182: LIST
10183: PUSH
10184: LD_INT 1
10186: PUSH
10187: LD_INT 1
10189: NEG
10190: PUSH
10191: EMPTY
10192: LIST
10193: LIST
10194: PUSH
10195: LD_INT 1
10197: PUSH
10198: LD_INT 2
10200: PUSH
10201: EMPTY
10202: LIST
10203: LIST
10204: PUSH
10205: LD_INT 0
10207: PUSH
10208: LD_INT 2
10210: PUSH
10211: EMPTY
10212: LIST
10213: LIST
10214: PUSH
10215: LD_INT 1
10217: NEG
10218: PUSH
10219: LD_INT 1
10221: PUSH
10222: EMPTY
10223: LIST
10224: LIST
10225: PUSH
10226: LD_INT 1
10228: NEG
10229: PUSH
10230: LD_INT 3
10232: NEG
10233: PUSH
10234: EMPTY
10235: LIST
10236: LIST
10237: PUSH
10238: LD_INT 0
10240: PUSH
10241: LD_INT 3
10243: NEG
10244: PUSH
10245: EMPTY
10246: LIST
10247: LIST
10248: PUSH
10249: LD_INT 1
10251: PUSH
10252: LD_INT 2
10254: NEG
10255: PUSH
10256: EMPTY
10257: LIST
10258: LIST
10259: PUSH
10260: EMPTY
10261: LIST
10262: LIST
10263: LIST
10264: LIST
10265: LIST
10266: LIST
10267: LIST
10268: LIST
10269: LIST
10270: LIST
10271: LIST
10272: LIST
10273: LIST
10274: LIST
10275: LIST
10276: LIST
10277: ST_TO_ADDR
// DepotAm4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
10278: LD_ADDR_VAR 0 15
10282: PUSH
10283: LD_INT 0
10285: PUSH
10286: LD_INT 0
10288: PUSH
10289: EMPTY
10290: LIST
10291: LIST
10292: PUSH
10293: LD_INT 0
10295: PUSH
10296: LD_INT 1
10298: NEG
10299: PUSH
10300: EMPTY
10301: LIST
10302: LIST
10303: PUSH
10304: LD_INT 1
10306: PUSH
10307: LD_INT 0
10309: PUSH
10310: EMPTY
10311: LIST
10312: LIST
10313: PUSH
10314: LD_INT 1
10316: PUSH
10317: LD_INT 1
10319: PUSH
10320: EMPTY
10321: LIST
10322: LIST
10323: PUSH
10324: LD_INT 0
10326: PUSH
10327: LD_INT 1
10329: PUSH
10330: EMPTY
10331: LIST
10332: LIST
10333: PUSH
10334: LD_INT 1
10336: NEG
10337: PUSH
10338: LD_INT 0
10340: PUSH
10341: EMPTY
10342: LIST
10343: LIST
10344: PUSH
10345: LD_INT 1
10347: NEG
10348: PUSH
10349: LD_INT 1
10351: NEG
10352: PUSH
10353: EMPTY
10354: LIST
10355: LIST
10356: PUSH
10357: LD_INT 1
10359: PUSH
10360: LD_INT 1
10362: NEG
10363: PUSH
10364: EMPTY
10365: LIST
10366: LIST
10367: PUSH
10368: LD_INT 2
10370: PUSH
10371: LD_INT 0
10373: PUSH
10374: EMPTY
10375: LIST
10376: LIST
10377: PUSH
10378: LD_INT 2
10380: PUSH
10381: LD_INT 1
10383: PUSH
10384: EMPTY
10385: LIST
10386: LIST
10387: PUSH
10388: LD_INT 1
10390: NEG
10391: PUSH
10392: LD_INT 1
10394: PUSH
10395: EMPTY
10396: LIST
10397: LIST
10398: PUSH
10399: LD_INT 2
10401: NEG
10402: PUSH
10403: LD_INT 0
10405: PUSH
10406: EMPTY
10407: LIST
10408: LIST
10409: PUSH
10410: LD_INT 2
10412: NEG
10413: PUSH
10414: LD_INT 1
10416: NEG
10417: PUSH
10418: EMPTY
10419: LIST
10420: LIST
10421: PUSH
10422: LD_INT 2
10424: PUSH
10425: LD_INT 1
10427: NEG
10428: PUSH
10429: EMPTY
10430: LIST
10431: LIST
10432: PUSH
10433: LD_INT 3
10435: PUSH
10436: LD_INT 0
10438: PUSH
10439: EMPTY
10440: LIST
10441: LIST
10442: PUSH
10443: LD_INT 3
10445: PUSH
10446: LD_INT 1
10448: PUSH
10449: EMPTY
10450: LIST
10451: LIST
10452: PUSH
10453: EMPTY
10454: LIST
10455: LIST
10456: LIST
10457: LIST
10458: LIST
10459: LIST
10460: LIST
10461: LIST
10462: LIST
10463: LIST
10464: LIST
10465: LIST
10466: LIST
10467: LIST
10468: LIST
10469: LIST
10470: ST_TO_ADDR
// DepotAm5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
10471: LD_ADDR_VAR 0 16
10475: PUSH
10476: LD_INT 0
10478: PUSH
10479: LD_INT 0
10481: PUSH
10482: EMPTY
10483: LIST
10484: LIST
10485: PUSH
10486: LD_INT 0
10488: PUSH
10489: LD_INT 1
10491: NEG
10492: PUSH
10493: EMPTY
10494: LIST
10495: LIST
10496: PUSH
10497: LD_INT 1
10499: PUSH
10500: LD_INT 0
10502: PUSH
10503: EMPTY
10504: LIST
10505: LIST
10506: PUSH
10507: LD_INT 1
10509: PUSH
10510: LD_INT 1
10512: PUSH
10513: EMPTY
10514: LIST
10515: LIST
10516: PUSH
10517: LD_INT 0
10519: PUSH
10520: LD_INT 1
10522: PUSH
10523: EMPTY
10524: LIST
10525: LIST
10526: PUSH
10527: LD_INT 1
10529: NEG
10530: PUSH
10531: LD_INT 0
10533: PUSH
10534: EMPTY
10535: LIST
10536: LIST
10537: PUSH
10538: LD_INT 1
10540: NEG
10541: PUSH
10542: LD_INT 1
10544: NEG
10545: PUSH
10546: EMPTY
10547: LIST
10548: LIST
10549: PUSH
10550: LD_INT 1
10552: NEG
10553: PUSH
10554: LD_INT 2
10556: NEG
10557: PUSH
10558: EMPTY
10559: LIST
10560: LIST
10561: PUSH
10562: LD_INT 2
10564: PUSH
10565: LD_INT 1
10567: PUSH
10568: EMPTY
10569: LIST
10570: LIST
10571: PUSH
10572: LD_INT 2
10574: PUSH
10575: LD_INT 2
10577: PUSH
10578: EMPTY
10579: LIST
10580: LIST
10581: PUSH
10582: LD_INT 1
10584: PUSH
10585: LD_INT 2
10587: PUSH
10588: EMPTY
10589: LIST
10590: LIST
10591: PUSH
10592: LD_INT 2
10594: NEG
10595: PUSH
10596: LD_INT 1
10598: NEG
10599: PUSH
10600: EMPTY
10601: LIST
10602: LIST
10603: PUSH
10604: LD_INT 2
10606: NEG
10607: PUSH
10608: LD_INT 2
10610: NEG
10611: PUSH
10612: EMPTY
10613: LIST
10614: LIST
10615: PUSH
10616: LD_INT 3
10618: PUSH
10619: LD_INT 2
10621: PUSH
10622: EMPTY
10623: LIST
10624: LIST
10625: PUSH
10626: LD_INT 3
10628: PUSH
10629: LD_INT 3
10631: PUSH
10632: EMPTY
10633: LIST
10634: LIST
10635: PUSH
10636: LD_INT 2
10638: PUSH
10639: LD_INT 3
10641: PUSH
10642: EMPTY
10643: LIST
10644: LIST
10645: PUSH
10646: EMPTY
10647: LIST
10648: LIST
10649: LIST
10650: LIST
10651: LIST
10652: LIST
10653: LIST
10654: LIST
10655: LIST
10656: LIST
10657: LIST
10658: LIST
10659: LIST
10660: LIST
10661: LIST
10662: LIST
10663: ST_TO_ADDR
// DepotAr0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10664: LD_ADDR_VAR 0 17
10668: PUSH
10669: LD_INT 0
10671: PUSH
10672: LD_INT 0
10674: PUSH
10675: EMPTY
10676: LIST
10677: LIST
10678: PUSH
10679: LD_INT 0
10681: PUSH
10682: LD_INT 1
10684: NEG
10685: PUSH
10686: EMPTY
10687: LIST
10688: LIST
10689: PUSH
10690: LD_INT 1
10692: PUSH
10693: LD_INT 0
10695: PUSH
10696: EMPTY
10697: LIST
10698: LIST
10699: PUSH
10700: LD_INT 1
10702: PUSH
10703: LD_INT 1
10705: PUSH
10706: EMPTY
10707: LIST
10708: LIST
10709: PUSH
10710: LD_INT 0
10712: PUSH
10713: LD_INT 1
10715: PUSH
10716: EMPTY
10717: LIST
10718: LIST
10719: PUSH
10720: LD_INT 1
10722: NEG
10723: PUSH
10724: LD_INT 0
10726: PUSH
10727: EMPTY
10728: LIST
10729: LIST
10730: PUSH
10731: LD_INT 1
10733: NEG
10734: PUSH
10735: LD_INT 1
10737: NEG
10738: PUSH
10739: EMPTY
10740: LIST
10741: LIST
10742: PUSH
10743: LD_INT 1
10745: NEG
10746: PUSH
10747: LD_INT 2
10749: NEG
10750: PUSH
10751: EMPTY
10752: LIST
10753: LIST
10754: PUSH
10755: LD_INT 0
10757: PUSH
10758: LD_INT 2
10760: NEG
10761: PUSH
10762: EMPTY
10763: LIST
10764: LIST
10765: PUSH
10766: LD_INT 1
10768: PUSH
10769: LD_INT 1
10771: NEG
10772: PUSH
10773: EMPTY
10774: LIST
10775: LIST
10776: PUSH
10777: LD_INT 2
10779: PUSH
10780: LD_INT 0
10782: PUSH
10783: EMPTY
10784: LIST
10785: LIST
10786: PUSH
10787: LD_INT 2
10789: PUSH
10790: LD_INT 1
10792: PUSH
10793: EMPTY
10794: LIST
10795: LIST
10796: PUSH
10797: LD_INT 2
10799: PUSH
10800: LD_INT 2
10802: PUSH
10803: EMPTY
10804: LIST
10805: LIST
10806: PUSH
10807: LD_INT 1
10809: PUSH
10810: LD_INT 2
10812: PUSH
10813: EMPTY
10814: LIST
10815: LIST
10816: PUSH
10817: LD_INT 0
10819: PUSH
10820: LD_INT 2
10822: PUSH
10823: EMPTY
10824: LIST
10825: LIST
10826: PUSH
10827: LD_INT 1
10829: NEG
10830: PUSH
10831: LD_INT 1
10833: PUSH
10834: EMPTY
10835: LIST
10836: LIST
10837: PUSH
10838: LD_INT 2
10840: NEG
10841: PUSH
10842: LD_INT 0
10844: PUSH
10845: EMPTY
10846: LIST
10847: LIST
10848: PUSH
10849: LD_INT 2
10851: NEG
10852: PUSH
10853: LD_INT 1
10855: NEG
10856: PUSH
10857: EMPTY
10858: LIST
10859: LIST
10860: PUSH
10861: LD_INT 2
10863: NEG
10864: PUSH
10865: LD_INT 2
10867: NEG
10868: PUSH
10869: EMPTY
10870: LIST
10871: LIST
10872: PUSH
10873: EMPTY
10874: LIST
10875: LIST
10876: LIST
10877: LIST
10878: LIST
10879: LIST
10880: LIST
10881: LIST
10882: LIST
10883: LIST
10884: LIST
10885: LIST
10886: LIST
10887: LIST
10888: LIST
10889: LIST
10890: LIST
10891: LIST
10892: LIST
10893: ST_TO_ADDR
// DepotAr1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10894: LD_ADDR_VAR 0 18
10898: PUSH
10899: LD_INT 0
10901: PUSH
10902: LD_INT 0
10904: PUSH
10905: EMPTY
10906: LIST
10907: LIST
10908: PUSH
10909: LD_INT 0
10911: PUSH
10912: LD_INT 1
10914: NEG
10915: PUSH
10916: EMPTY
10917: LIST
10918: LIST
10919: PUSH
10920: LD_INT 1
10922: PUSH
10923: LD_INT 0
10925: PUSH
10926: EMPTY
10927: LIST
10928: LIST
10929: PUSH
10930: LD_INT 1
10932: PUSH
10933: LD_INT 1
10935: PUSH
10936: EMPTY
10937: LIST
10938: LIST
10939: PUSH
10940: LD_INT 0
10942: PUSH
10943: LD_INT 1
10945: PUSH
10946: EMPTY
10947: LIST
10948: LIST
10949: PUSH
10950: LD_INT 1
10952: NEG
10953: PUSH
10954: LD_INT 0
10956: PUSH
10957: EMPTY
10958: LIST
10959: LIST
10960: PUSH
10961: LD_INT 1
10963: NEG
10964: PUSH
10965: LD_INT 1
10967: NEG
10968: PUSH
10969: EMPTY
10970: LIST
10971: LIST
10972: PUSH
10973: LD_INT 1
10975: NEG
10976: PUSH
10977: LD_INT 2
10979: NEG
10980: PUSH
10981: EMPTY
10982: LIST
10983: LIST
10984: PUSH
10985: LD_INT 0
10987: PUSH
10988: LD_INT 2
10990: NEG
10991: PUSH
10992: EMPTY
10993: LIST
10994: LIST
10995: PUSH
10996: LD_INT 1
10998: PUSH
10999: LD_INT 1
11001: NEG
11002: PUSH
11003: EMPTY
11004: LIST
11005: LIST
11006: PUSH
11007: LD_INT 2
11009: PUSH
11010: LD_INT 0
11012: PUSH
11013: EMPTY
11014: LIST
11015: LIST
11016: PUSH
11017: LD_INT 2
11019: PUSH
11020: LD_INT 1
11022: PUSH
11023: EMPTY
11024: LIST
11025: LIST
11026: PUSH
11027: LD_INT 2
11029: PUSH
11030: LD_INT 2
11032: PUSH
11033: EMPTY
11034: LIST
11035: LIST
11036: PUSH
11037: LD_INT 1
11039: PUSH
11040: LD_INT 2
11042: PUSH
11043: EMPTY
11044: LIST
11045: LIST
11046: PUSH
11047: LD_INT 0
11049: PUSH
11050: LD_INT 2
11052: PUSH
11053: EMPTY
11054: LIST
11055: LIST
11056: PUSH
11057: LD_INT 1
11059: NEG
11060: PUSH
11061: LD_INT 1
11063: PUSH
11064: EMPTY
11065: LIST
11066: LIST
11067: PUSH
11068: LD_INT 2
11070: NEG
11071: PUSH
11072: LD_INT 0
11074: PUSH
11075: EMPTY
11076: LIST
11077: LIST
11078: PUSH
11079: LD_INT 2
11081: NEG
11082: PUSH
11083: LD_INT 1
11085: NEG
11086: PUSH
11087: EMPTY
11088: LIST
11089: LIST
11090: PUSH
11091: LD_INT 2
11093: NEG
11094: PUSH
11095: LD_INT 2
11097: NEG
11098: PUSH
11099: EMPTY
11100: LIST
11101: LIST
11102: PUSH
11103: EMPTY
11104: LIST
11105: LIST
11106: LIST
11107: LIST
11108: LIST
11109: LIST
11110: LIST
11111: LIST
11112: LIST
11113: LIST
11114: LIST
11115: LIST
11116: LIST
11117: LIST
11118: LIST
11119: LIST
11120: LIST
11121: LIST
11122: LIST
11123: ST_TO_ADDR
// DepotAr2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
11124: LD_ADDR_VAR 0 19
11128: PUSH
11129: LD_INT 0
11131: PUSH
11132: LD_INT 0
11134: PUSH
11135: EMPTY
11136: LIST
11137: LIST
11138: PUSH
11139: LD_INT 0
11141: PUSH
11142: LD_INT 1
11144: NEG
11145: PUSH
11146: EMPTY
11147: LIST
11148: LIST
11149: PUSH
11150: LD_INT 1
11152: PUSH
11153: LD_INT 0
11155: PUSH
11156: EMPTY
11157: LIST
11158: LIST
11159: PUSH
11160: LD_INT 1
11162: PUSH
11163: LD_INT 1
11165: PUSH
11166: EMPTY
11167: LIST
11168: LIST
11169: PUSH
11170: LD_INT 0
11172: PUSH
11173: LD_INT 1
11175: PUSH
11176: EMPTY
11177: LIST
11178: LIST
11179: PUSH
11180: LD_INT 1
11182: NEG
11183: PUSH
11184: LD_INT 0
11186: PUSH
11187: EMPTY
11188: LIST
11189: LIST
11190: PUSH
11191: LD_INT 1
11193: NEG
11194: PUSH
11195: LD_INT 1
11197: NEG
11198: PUSH
11199: EMPTY
11200: LIST
11201: LIST
11202: PUSH
11203: LD_INT 1
11205: NEG
11206: PUSH
11207: LD_INT 2
11209: NEG
11210: PUSH
11211: EMPTY
11212: LIST
11213: LIST
11214: PUSH
11215: LD_INT 0
11217: PUSH
11218: LD_INT 2
11220: NEG
11221: PUSH
11222: EMPTY
11223: LIST
11224: LIST
11225: PUSH
11226: LD_INT 1
11228: PUSH
11229: LD_INT 1
11231: NEG
11232: PUSH
11233: EMPTY
11234: LIST
11235: LIST
11236: PUSH
11237: LD_INT 2
11239: PUSH
11240: LD_INT 0
11242: PUSH
11243: EMPTY
11244: LIST
11245: LIST
11246: PUSH
11247: LD_INT 2
11249: PUSH
11250: LD_INT 1
11252: PUSH
11253: EMPTY
11254: LIST
11255: LIST
11256: PUSH
11257: LD_INT 2
11259: PUSH
11260: LD_INT 2
11262: PUSH
11263: EMPTY
11264: LIST
11265: LIST
11266: PUSH
11267: LD_INT 1
11269: PUSH
11270: LD_INT 2
11272: PUSH
11273: EMPTY
11274: LIST
11275: LIST
11276: PUSH
11277: LD_INT 0
11279: PUSH
11280: LD_INT 2
11282: PUSH
11283: EMPTY
11284: LIST
11285: LIST
11286: PUSH
11287: LD_INT 1
11289: NEG
11290: PUSH
11291: LD_INT 1
11293: PUSH
11294: EMPTY
11295: LIST
11296: LIST
11297: PUSH
11298: LD_INT 2
11300: NEG
11301: PUSH
11302: LD_INT 0
11304: PUSH
11305: EMPTY
11306: LIST
11307: LIST
11308: PUSH
11309: LD_INT 2
11311: NEG
11312: PUSH
11313: LD_INT 1
11315: NEG
11316: PUSH
11317: EMPTY
11318: LIST
11319: LIST
11320: PUSH
11321: LD_INT 2
11323: NEG
11324: PUSH
11325: LD_INT 2
11327: NEG
11328: PUSH
11329: EMPTY
11330: LIST
11331: LIST
11332: PUSH
11333: EMPTY
11334: LIST
11335: LIST
11336: LIST
11337: LIST
11338: LIST
11339: LIST
11340: LIST
11341: LIST
11342: LIST
11343: LIST
11344: LIST
11345: LIST
11346: LIST
11347: LIST
11348: LIST
11349: LIST
11350: LIST
11351: LIST
11352: LIST
11353: ST_TO_ADDR
// DepotAr3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
11354: LD_ADDR_VAR 0 20
11358: PUSH
11359: LD_INT 0
11361: PUSH
11362: LD_INT 0
11364: PUSH
11365: EMPTY
11366: LIST
11367: LIST
11368: PUSH
11369: LD_INT 0
11371: PUSH
11372: LD_INT 1
11374: NEG
11375: PUSH
11376: EMPTY
11377: LIST
11378: LIST
11379: PUSH
11380: LD_INT 1
11382: PUSH
11383: LD_INT 0
11385: PUSH
11386: EMPTY
11387: LIST
11388: LIST
11389: PUSH
11390: LD_INT 1
11392: PUSH
11393: LD_INT 1
11395: PUSH
11396: EMPTY
11397: LIST
11398: LIST
11399: PUSH
11400: LD_INT 0
11402: PUSH
11403: LD_INT 1
11405: PUSH
11406: EMPTY
11407: LIST
11408: LIST
11409: PUSH
11410: LD_INT 1
11412: NEG
11413: PUSH
11414: LD_INT 0
11416: PUSH
11417: EMPTY
11418: LIST
11419: LIST
11420: PUSH
11421: LD_INT 1
11423: NEG
11424: PUSH
11425: LD_INT 1
11427: NEG
11428: PUSH
11429: EMPTY
11430: LIST
11431: LIST
11432: PUSH
11433: LD_INT 1
11435: NEG
11436: PUSH
11437: LD_INT 2
11439: NEG
11440: PUSH
11441: EMPTY
11442: LIST
11443: LIST
11444: PUSH
11445: LD_INT 0
11447: PUSH
11448: LD_INT 2
11450: NEG
11451: PUSH
11452: EMPTY
11453: LIST
11454: LIST
11455: PUSH
11456: LD_INT 1
11458: PUSH
11459: LD_INT 1
11461: NEG
11462: PUSH
11463: EMPTY
11464: LIST
11465: LIST
11466: PUSH
11467: LD_INT 2
11469: PUSH
11470: LD_INT 0
11472: PUSH
11473: EMPTY
11474: LIST
11475: LIST
11476: PUSH
11477: LD_INT 2
11479: PUSH
11480: LD_INT 1
11482: PUSH
11483: EMPTY
11484: LIST
11485: LIST
11486: PUSH
11487: LD_INT 2
11489: PUSH
11490: LD_INT 2
11492: PUSH
11493: EMPTY
11494: LIST
11495: LIST
11496: PUSH
11497: LD_INT 1
11499: PUSH
11500: LD_INT 2
11502: PUSH
11503: EMPTY
11504: LIST
11505: LIST
11506: PUSH
11507: LD_INT 0
11509: PUSH
11510: LD_INT 2
11512: PUSH
11513: EMPTY
11514: LIST
11515: LIST
11516: PUSH
11517: LD_INT 1
11519: NEG
11520: PUSH
11521: LD_INT 1
11523: PUSH
11524: EMPTY
11525: LIST
11526: LIST
11527: PUSH
11528: LD_INT 2
11530: NEG
11531: PUSH
11532: LD_INT 0
11534: PUSH
11535: EMPTY
11536: LIST
11537: LIST
11538: PUSH
11539: LD_INT 2
11541: NEG
11542: PUSH
11543: LD_INT 1
11545: NEG
11546: PUSH
11547: EMPTY
11548: LIST
11549: LIST
11550: PUSH
11551: LD_INT 2
11553: NEG
11554: PUSH
11555: LD_INT 2
11557: NEG
11558: PUSH
11559: EMPTY
11560: LIST
11561: LIST
11562: PUSH
11563: EMPTY
11564: LIST
11565: LIST
11566: LIST
11567: LIST
11568: LIST
11569: LIST
11570: LIST
11571: LIST
11572: LIST
11573: LIST
11574: LIST
11575: LIST
11576: LIST
11577: LIST
11578: LIST
11579: LIST
11580: LIST
11581: LIST
11582: LIST
11583: ST_TO_ADDR
// DepotAr4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
11584: LD_ADDR_VAR 0 21
11588: PUSH
11589: LD_INT 0
11591: PUSH
11592: LD_INT 0
11594: PUSH
11595: EMPTY
11596: LIST
11597: LIST
11598: PUSH
11599: LD_INT 0
11601: PUSH
11602: LD_INT 1
11604: NEG
11605: PUSH
11606: EMPTY
11607: LIST
11608: LIST
11609: PUSH
11610: LD_INT 1
11612: PUSH
11613: LD_INT 0
11615: PUSH
11616: EMPTY
11617: LIST
11618: LIST
11619: PUSH
11620: LD_INT 1
11622: PUSH
11623: LD_INT 1
11625: PUSH
11626: EMPTY
11627: LIST
11628: LIST
11629: PUSH
11630: LD_INT 0
11632: PUSH
11633: LD_INT 1
11635: PUSH
11636: EMPTY
11637: LIST
11638: LIST
11639: PUSH
11640: LD_INT 1
11642: NEG
11643: PUSH
11644: LD_INT 0
11646: PUSH
11647: EMPTY
11648: LIST
11649: LIST
11650: PUSH
11651: LD_INT 1
11653: NEG
11654: PUSH
11655: LD_INT 1
11657: NEG
11658: PUSH
11659: EMPTY
11660: LIST
11661: LIST
11662: PUSH
11663: LD_INT 1
11665: NEG
11666: PUSH
11667: LD_INT 2
11669: NEG
11670: PUSH
11671: EMPTY
11672: LIST
11673: LIST
11674: PUSH
11675: LD_INT 0
11677: PUSH
11678: LD_INT 2
11680: NEG
11681: PUSH
11682: EMPTY
11683: LIST
11684: LIST
11685: PUSH
11686: LD_INT 1
11688: PUSH
11689: LD_INT 1
11691: NEG
11692: PUSH
11693: EMPTY
11694: LIST
11695: LIST
11696: PUSH
11697: LD_INT 2
11699: PUSH
11700: LD_INT 0
11702: PUSH
11703: EMPTY
11704: LIST
11705: LIST
11706: PUSH
11707: LD_INT 2
11709: PUSH
11710: LD_INT 1
11712: PUSH
11713: EMPTY
11714: LIST
11715: LIST
11716: PUSH
11717: LD_INT 2
11719: PUSH
11720: LD_INT 2
11722: PUSH
11723: EMPTY
11724: LIST
11725: LIST
11726: PUSH
11727: LD_INT 1
11729: PUSH
11730: LD_INT 2
11732: PUSH
11733: EMPTY
11734: LIST
11735: LIST
11736: PUSH
11737: LD_INT 0
11739: PUSH
11740: LD_INT 2
11742: PUSH
11743: EMPTY
11744: LIST
11745: LIST
11746: PUSH
11747: LD_INT 1
11749: NEG
11750: PUSH
11751: LD_INT 1
11753: PUSH
11754: EMPTY
11755: LIST
11756: LIST
11757: PUSH
11758: LD_INT 2
11760: NEG
11761: PUSH
11762: LD_INT 0
11764: PUSH
11765: EMPTY
11766: LIST
11767: LIST
11768: PUSH
11769: LD_INT 2
11771: NEG
11772: PUSH
11773: LD_INT 1
11775: NEG
11776: PUSH
11777: EMPTY
11778: LIST
11779: LIST
11780: PUSH
11781: LD_INT 2
11783: NEG
11784: PUSH
11785: LD_INT 2
11787: NEG
11788: PUSH
11789: EMPTY
11790: LIST
11791: LIST
11792: PUSH
11793: EMPTY
11794: LIST
11795: LIST
11796: LIST
11797: LIST
11798: LIST
11799: LIST
11800: LIST
11801: LIST
11802: LIST
11803: LIST
11804: LIST
11805: LIST
11806: LIST
11807: LIST
11808: LIST
11809: LIST
11810: LIST
11811: LIST
11812: LIST
11813: ST_TO_ADDR
// DepotAr5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
11814: LD_ADDR_VAR 0 22
11818: PUSH
11819: LD_INT 0
11821: PUSH
11822: LD_INT 0
11824: PUSH
11825: EMPTY
11826: LIST
11827: LIST
11828: PUSH
11829: LD_INT 0
11831: PUSH
11832: LD_INT 1
11834: NEG
11835: PUSH
11836: EMPTY
11837: LIST
11838: LIST
11839: PUSH
11840: LD_INT 1
11842: PUSH
11843: LD_INT 0
11845: PUSH
11846: EMPTY
11847: LIST
11848: LIST
11849: PUSH
11850: LD_INT 1
11852: PUSH
11853: LD_INT 1
11855: PUSH
11856: EMPTY
11857: LIST
11858: LIST
11859: PUSH
11860: LD_INT 0
11862: PUSH
11863: LD_INT 1
11865: PUSH
11866: EMPTY
11867: LIST
11868: LIST
11869: PUSH
11870: LD_INT 1
11872: NEG
11873: PUSH
11874: LD_INT 0
11876: PUSH
11877: EMPTY
11878: LIST
11879: LIST
11880: PUSH
11881: LD_INT 1
11883: NEG
11884: PUSH
11885: LD_INT 1
11887: NEG
11888: PUSH
11889: EMPTY
11890: LIST
11891: LIST
11892: PUSH
11893: LD_INT 1
11895: NEG
11896: PUSH
11897: LD_INT 2
11899: NEG
11900: PUSH
11901: EMPTY
11902: LIST
11903: LIST
11904: PUSH
11905: LD_INT 0
11907: PUSH
11908: LD_INT 2
11910: NEG
11911: PUSH
11912: EMPTY
11913: LIST
11914: LIST
11915: PUSH
11916: LD_INT 1
11918: PUSH
11919: LD_INT 1
11921: NEG
11922: PUSH
11923: EMPTY
11924: LIST
11925: LIST
11926: PUSH
11927: LD_INT 2
11929: PUSH
11930: LD_INT 0
11932: PUSH
11933: EMPTY
11934: LIST
11935: LIST
11936: PUSH
11937: LD_INT 2
11939: PUSH
11940: LD_INT 1
11942: PUSH
11943: EMPTY
11944: LIST
11945: LIST
11946: PUSH
11947: LD_INT 2
11949: PUSH
11950: LD_INT 2
11952: PUSH
11953: EMPTY
11954: LIST
11955: LIST
11956: PUSH
11957: LD_INT 1
11959: PUSH
11960: LD_INT 2
11962: PUSH
11963: EMPTY
11964: LIST
11965: LIST
11966: PUSH
11967: LD_INT 0
11969: PUSH
11970: LD_INT 2
11972: PUSH
11973: EMPTY
11974: LIST
11975: LIST
11976: PUSH
11977: LD_INT 1
11979: NEG
11980: PUSH
11981: LD_INT 1
11983: PUSH
11984: EMPTY
11985: LIST
11986: LIST
11987: PUSH
11988: LD_INT 2
11990: NEG
11991: PUSH
11992: LD_INT 0
11994: PUSH
11995: EMPTY
11996: LIST
11997: LIST
11998: PUSH
11999: LD_INT 2
12001: NEG
12002: PUSH
12003: LD_INT 1
12005: NEG
12006: PUSH
12007: EMPTY
12008: LIST
12009: LIST
12010: PUSH
12011: LD_INT 2
12013: NEG
12014: PUSH
12015: LD_INT 2
12017: NEG
12018: PUSH
12019: EMPTY
12020: LIST
12021: LIST
12022: PUSH
12023: EMPTY
12024: LIST
12025: LIST
12026: LIST
12027: LIST
12028: LIST
12029: LIST
12030: LIST
12031: LIST
12032: LIST
12033: LIST
12034: LIST
12035: LIST
12036: LIST
12037: LIST
12038: LIST
12039: LIST
12040: LIST
12041: LIST
12042: LIST
12043: ST_TO_ADDR
// DepotRu0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 2 , - 1 ] ] ;
12044: LD_ADDR_VAR 0 23
12048: PUSH
12049: LD_INT 0
12051: PUSH
12052: LD_INT 0
12054: PUSH
12055: EMPTY
12056: LIST
12057: LIST
12058: PUSH
12059: LD_INT 0
12061: PUSH
12062: LD_INT 1
12064: NEG
12065: PUSH
12066: EMPTY
12067: LIST
12068: LIST
12069: PUSH
12070: LD_INT 1
12072: PUSH
12073: LD_INT 0
12075: PUSH
12076: EMPTY
12077: LIST
12078: LIST
12079: PUSH
12080: LD_INT 1
12082: PUSH
12083: LD_INT 1
12085: PUSH
12086: EMPTY
12087: LIST
12088: LIST
12089: PUSH
12090: LD_INT 0
12092: PUSH
12093: LD_INT 1
12095: PUSH
12096: EMPTY
12097: LIST
12098: LIST
12099: PUSH
12100: LD_INT 1
12102: NEG
12103: PUSH
12104: LD_INT 0
12106: PUSH
12107: EMPTY
12108: LIST
12109: LIST
12110: PUSH
12111: LD_INT 1
12113: NEG
12114: PUSH
12115: LD_INT 1
12117: NEG
12118: PUSH
12119: EMPTY
12120: LIST
12121: LIST
12122: PUSH
12123: LD_INT 1
12125: NEG
12126: PUSH
12127: LD_INT 2
12129: NEG
12130: PUSH
12131: EMPTY
12132: LIST
12133: LIST
12134: PUSH
12135: LD_INT 0
12137: PUSH
12138: LD_INT 2
12140: NEG
12141: PUSH
12142: EMPTY
12143: LIST
12144: LIST
12145: PUSH
12146: LD_INT 1
12148: PUSH
12149: LD_INT 1
12151: NEG
12152: PUSH
12153: EMPTY
12154: LIST
12155: LIST
12156: PUSH
12157: LD_INT 2
12159: PUSH
12160: LD_INT 0
12162: PUSH
12163: EMPTY
12164: LIST
12165: LIST
12166: PUSH
12167: LD_INT 2
12169: PUSH
12170: LD_INT 1
12172: PUSH
12173: EMPTY
12174: LIST
12175: LIST
12176: PUSH
12177: LD_INT 2
12179: PUSH
12180: LD_INT 2
12182: PUSH
12183: EMPTY
12184: LIST
12185: LIST
12186: PUSH
12187: LD_INT 1
12189: PUSH
12190: LD_INT 2
12192: PUSH
12193: EMPTY
12194: LIST
12195: LIST
12196: PUSH
12197: LD_INT 0
12199: PUSH
12200: LD_INT 2
12202: PUSH
12203: EMPTY
12204: LIST
12205: LIST
12206: PUSH
12207: LD_INT 1
12209: NEG
12210: PUSH
12211: LD_INT 1
12213: PUSH
12214: EMPTY
12215: LIST
12216: LIST
12217: PUSH
12218: LD_INT 2
12220: NEG
12221: PUSH
12222: LD_INT 0
12224: PUSH
12225: EMPTY
12226: LIST
12227: LIST
12228: PUSH
12229: LD_INT 2
12231: NEG
12232: PUSH
12233: LD_INT 1
12235: NEG
12236: PUSH
12237: EMPTY
12238: LIST
12239: LIST
12240: PUSH
12241: LD_INT 2
12243: NEG
12244: PUSH
12245: LD_INT 2
12247: NEG
12248: PUSH
12249: EMPTY
12250: LIST
12251: LIST
12252: PUSH
12253: LD_INT 2
12255: NEG
12256: PUSH
12257: LD_INT 3
12259: NEG
12260: PUSH
12261: EMPTY
12262: LIST
12263: LIST
12264: PUSH
12265: LD_INT 1
12267: NEG
12268: PUSH
12269: LD_INT 3
12271: NEG
12272: PUSH
12273: EMPTY
12274: LIST
12275: LIST
12276: PUSH
12277: LD_INT 1
12279: PUSH
12280: LD_INT 2
12282: NEG
12283: PUSH
12284: EMPTY
12285: LIST
12286: LIST
12287: PUSH
12288: LD_INT 2
12290: PUSH
12291: LD_INT 1
12293: NEG
12294: PUSH
12295: EMPTY
12296: LIST
12297: LIST
12298: PUSH
12299: EMPTY
12300: LIST
12301: LIST
12302: LIST
12303: LIST
12304: LIST
12305: LIST
12306: LIST
12307: LIST
12308: LIST
12309: LIST
12310: LIST
12311: LIST
12312: LIST
12313: LIST
12314: LIST
12315: LIST
12316: LIST
12317: LIST
12318: LIST
12319: LIST
12320: LIST
12321: LIST
12322: LIST
12323: ST_TO_ADDR
// DepotRu1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 1 , - 2 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 3 , 2 ] ] ;
12324: LD_ADDR_VAR 0 24
12328: PUSH
12329: LD_INT 0
12331: PUSH
12332: LD_INT 0
12334: PUSH
12335: EMPTY
12336: LIST
12337: LIST
12338: PUSH
12339: LD_INT 0
12341: PUSH
12342: LD_INT 1
12344: NEG
12345: PUSH
12346: EMPTY
12347: LIST
12348: LIST
12349: PUSH
12350: LD_INT 1
12352: PUSH
12353: LD_INT 0
12355: PUSH
12356: EMPTY
12357: LIST
12358: LIST
12359: PUSH
12360: LD_INT 1
12362: PUSH
12363: LD_INT 1
12365: PUSH
12366: EMPTY
12367: LIST
12368: LIST
12369: PUSH
12370: LD_INT 0
12372: PUSH
12373: LD_INT 1
12375: PUSH
12376: EMPTY
12377: LIST
12378: LIST
12379: PUSH
12380: LD_INT 1
12382: NEG
12383: PUSH
12384: LD_INT 0
12386: PUSH
12387: EMPTY
12388: LIST
12389: LIST
12390: PUSH
12391: LD_INT 1
12393: NEG
12394: PUSH
12395: LD_INT 1
12397: NEG
12398: PUSH
12399: EMPTY
12400: LIST
12401: LIST
12402: PUSH
12403: LD_INT 1
12405: NEG
12406: PUSH
12407: LD_INT 2
12409: NEG
12410: PUSH
12411: EMPTY
12412: LIST
12413: LIST
12414: PUSH
12415: LD_INT 0
12417: PUSH
12418: LD_INT 2
12420: NEG
12421: PUSH
12422: EMPTY
12423: LIST
12424: LIST
12425: PUSH
12426: LD_INT 1
12428: PUSH
12429: LD_INT 1
12431: NEG
12432: PUSH
12433: EMPTY
12434: LIST
12435: LIST
12436: PUSH
12437: LD_INT 2
12439: PUSH
12440: LD_INT 0
12442: PUSH
12443: EMPTY
12444: LIST
12445: LIST
12446: PUSH
12447: LD_INT 2
12449: PUSH
12450: LD_INT 1
12452: PUSH
12453: EMPTY
12454: LIST
12455: LIST
12456: PUSH
12457: LD_INT 2
12459: PUSH
12460: LD_INT 2
12462: PUSH
12463: EMPTY
12464: LIST
12465: LIST
12466: PUSH
12467: LD_INT 1
12469: PUSH
12470: LD_INT 2
12472: PUSH
12473: EMPTY
12474: LIST
12475: LIST
12476: PUSH
12477: LD_INT 0
12479: PUSH
12480: LD_INT 2
12482: PUSH
12483: EMPTY
12484: LIST
12485: LIST
12486: PUSH
12487: LD_INT 1
12489: NEG
12490: PUSH
12491: LD_INT 1
12493: PUSH
12494: EMPTY
12495: LIST
12496: LIST
12497: PUSH
12498: LD_INT 2
12500: NEG
12501: PUSH
12502: LD_INT 0
12504: PUSH
12505: EMPTY
12506: LIST
12507: LIST
12508: PUSH
12509: LD_INT 2
12511: NEG
12512: PUSH
12513: LD_INT 1
12515: NEG
12516: PUSH
12517: EMPTY
12518: LIST
12519: LIST
12520: PUSH
12521: LD_INT 2
12523: NEG
12524: PUSH
12525: LD_INT 2
12527: NEG
12528: PUSH
12529: EMPTY
12530: LIST
12531: LIST
12532: PUSH
12533: LD_INT 1
12535: PUSH
12536: LD_INT 2
12538: NEG
12539: PUSH
12540: EMPTY
12541: LIST
12542: LIST
12543: PUSH
12544: LD_INT 2
12546: PUSH
12547: LD_INT 1
12549: NEG
12550: PUSH
12551: EMPTY
12552: LIST
12553: LIST
12554: PUSH
12555: LD_INT 3
12557: PUSH
12558: LD_INT 1
12560: PUSH
12561: EMPTY
12562: LIST
12563: LIST
12564: PUSH
12565: LD_INT 3
12567: PUSH
12568: LD_INT 2
12570: PUSH
12571: EMPTY
12572: LIST
12573: LIST
12574: PUSH
12575: EMPTY
12576: LIST
12577: LIST
12578: LIST
12579: LIST
12580: LIST
12581: LIST
12582: LIST
12583: LIST
12584: LIST
12585: LIST
12586: LIST
12587: LIST
12588: LIST
12589: LIST
12590: LIST
12591: LIST
12592: LIST
12593: LIST
12594: LIST
12595: LIST
12596: LIST
12597: LIST
12598: LIST
12599: ST_TO_ADDR
// DepotRu2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 3 , 1 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ 1 , 3 ] ] ;
12600: LD_ADDR_VAR 0 25
12604: PUSH
12605: LD_INT 0
12607: PUSH
12608: LD_INT 0
12610: PUSH
12611: EMPTY
12612: LIST
12613: LIST
12614: PUSH
12615: LD_INT 0
12617: PUSH
12618: LD_INT 1
12620: NEG
12621: PUSH
12622: EMPTY
12623: LIST
12624: LIST
12625: PUSH
12626: LD_INT 1
12628: PUSH
12629: LD_INT 0
12631: PUSH
12632: EMPTY
12633: LIST
12634: LIST
12635: PUSH
12636: LD_INT 1
12638: PUSH
12639: LD_INT 1
12641: PUSH
12642: EMPTY
12643: LIST
12644: LIST
12645: PUSH
12646: LD_INT 0
12648: PUSH
12649: LD_INT 1
12651: PUSH
12652: EMPTY
12653: LIST
12654: LIST
12655: PUSH
12656: LD_INT 1
12658: NEG
12659: PUSH
12660: LD_INT 0
12662: PUSH
12663: EMPTY
12664: LIST
12665: LIST
12666: PUSH
12667: LD_INT 1
12669: NEG
12670: PUSH
12671: LD_INT 1
12673: NEG
12674: PUSH
12675: EMPTY
12676: LIST
12677: LIST
12678: PUSH
12679: LD_INT 1
12681: NEG
12682: PUSH
12683: LD_INT 2
12685: NEG
12686: PUSH
12687: EMPTY
12688: LIST
12689: LIST
12690: PUSH
12691: LD_INT 0
12693: PUSH
12694: LD_INT 2
12696: NEG
12697: PUSH
12698: EMPTY
12699: LIST
12700: LIST
12701: PUSH
12702: LD_INT 1
12704: PUSH
12705: LD_INT 1
12707: NEG
12708: PUSH
12709: EMPTY
12710: LIST
12711: LIST
12712: PUSH
12713: LD_INT 2
12715: PUSH
12716: LD_INT 0
12718: PUSH
12719: EMPTY
12720: LIST
12721: LIST
12722: PUSH
12723: LD_INT 2
12725: PUSH
12726: LD_INT 1
12728: PUSH
12729: EMPTY
12730: LIST
12731: LIST
12732: PUSH
12733: LD_INT 2
12735: PUSH
12736: LD_INT 2
12738: PUSH
12739: EMPTY
12740: LIST
12741: LIST
12742: PUSH
12743: LD_INT 1
12745: PUSH
12746: LD_INT 2
12748: PUSH
12749: EMPTY
12750: LIST
12751: LIST
12752: PUSH
12753: LD_INT 0
12755: PUSH
12756: LD_INT 2
12758: PUSH
12759: EMPTY
12760: LIST
12761: LIST
12762: PUSH
12763: LD_INT 1
12765: NEG
12766: PUSH
12767: LD_INT 1
12769: PUSH
12770: EMPTY
12771: LIST
12772: LIST
12773: PUSH
12774: LD_INT 2
12776: NEG
12777: PUSH
12778: LD_INT 0
12780: PUSH
12781: EMPTY
12782: LIST
12783: LIST
12784: PUSH
12785: LD_INT 2
12787: NEG
12788: PUSH
12789: LD_INT 1
12791: NEG
12792: PUSH
12793: EMPTY
12794: LIST
12795: LIST
12796: PUSH
12797: LD_INT 2
12799: NEG
12800: PUSH
12801: LD_INT 2
12803: NEG
12804: PUSH
12805: EMPTY
12806: LIST
12807: LIST
12808: PUSH
12809: LD_INT 3
12811: PUSH
12812: LD_INT 1
12814: PUSH
12815: EMPTY
12816: LIST
12817: LIST
12818: PUSH
12819: LD_INT 3
12821: PUSH
12822: LD_INT 2
12824: PUSH
12825: EMPTY
12826: LIST
12827: LIST
12828: PUSH
12829: LD_INT 2
12831: PUSH
12832: LD_INT 3
12834: PUSH
12835: EMPTY
12836: LIST
12837: LIST
12838: PUSH
12839: LD_INT 1
12841: PUSH
12842: LD_INT 3
12844: PUSH
12845: EMPTY
12846: LIST
12847: LIST
12848: PUSH
12849: EMPTY
12850: LIST
12851: LIST
12852: LIST
12853: LIST
12854: LIST
12855: LIST
12856: LIST
12857: LIST
12858: LIST
12859: LIST
12860: LIST
12861: LIST
12862: LIST
12863: LIST
12864: LIST
12865: LIST
12866: LIST
12867: LIST
12868: LIST
12869: LIST
12870: LIST
12871: LIST
12872: LIST
12873: ST_TO_ADDR
// DepotRu3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 2 , 3 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 2 , 1 ] ] ;
12874: LD_ADDR_VAR 0 26
12878: PUSH
12879: LD_INT 0
12881: PUSH
12882: LD_INT 0
12884: PUSH
12885: EMPTY
12886: LIST
12887: LIST
12888: PUSH
12889: LD_INT 0
12891: PUSH
12892: LD_INT 1
12894: NEG
12895: PUSH
12896: EMPTY
12897: LIST
12898: LIST
12899: PUSH
12900: LD_INT 1
12902: PUSH
12903: LD_INT 0
12905: PUSH
12906: EMPTY
12907: LIST
12908: LIST
12909: PUSH
12910: LD_INT 1
12912: PUSH
12913: LD_INT 1
12915: PUSH
12916: EMPTY
12917: LIST
12918: LIST
12919: PUSH
12920: LD_INT 0
12922: PUSH
12923: LD_INT 1
12925: PUSH
12926: EMPTY
12927: LIST
12928: LIST
12929: PUSH
12930: LD_INT 1
12932: NEG
12933: PUSH
12934: LD_INT 0
12936: PUSH
12937: EMPTY
12938: LIST
12939: LIST
12940: PUSH
12941: LD_INT 1
12943: NEG
12944: PUSH
12945: LD_INT 1
12947: NEG
12948: PUSH
12949: EMPTY
12950: LIST
12951: LIST
12952: PUSH
12953: LD_INT 1
12955: NEG
12956: PUSH
12957: LD_INT 2
12959: NEG
12960: PUSH
12961: EMPTY
12962: LIST
12963: LIST
12964: PUSH
12965: LD_INT 0
12967: PUSH
12968: LD_INT 2
12970: NEG
12971: PUSH
12972: EMPTY
12973: LIST
12974: LIST
12975: PUSH
12976: LD_INT 1
12978: PUSH
12979: LD_INT 1
12981: NEG
12982: PUSH
12983: EMPTY
12984: LIST
12985: LIST
12986: PUSH
12987: LD_INT 2
12989: PUSH
12990: LD_INT 0
12992: PUSH
12993: EMPTY
12994: LIST
12995: LIST
12996: PUSH
12997: LD_INT 2
12999: PUSH
13000: LD_INT 1
13002: PUSH
13003: EMPTY
13004: LIST
13005: LIST
13006: PUSH
13007: LD_INT 2
13009: PUSH
13010: LD_INT 2
13012: PUSH
13013: EMPTY
13014: LIST
13015: LIST
13016: PUSH
13017: LD_INT 1
13019: PUSH
13020: LD_INT 2
13022: PUSH
13023: EMPTY
13024: LIST
13025: LIST
13026: PUSH
13027: LD_INT 0
13029: PUSH
13030: LD_INT 2
13032: PUSH
13033: EMPTY
13034: LIST
13035: LIST
13036: PUSH
13037: LD_INT 1
13039: NEG
13040: PUSH
13041: LD_INT 1
13043: PUSH
13044: EMPTY
13045: LIST
13046: LIST
13047: PUSH
13048: LD_INT 2
13050: NEG
13051: PUSH
13052: LD_INT 0
13054: PUSH
13055: EMPTY
13056: LIST
13057: LIST
13058: PUSH
13059: LD_INT 2
13061: NEG
13062: PUSH
13063: LD_INT 1
13065: NEG
13066: PUSH
13067: EMPTY
13068: LIST
13069: LIST
13070: PUSH
13071: LD_INT 2
13073: NEG
13074: PUSH
13075: LD_INT 2
13077: NEG
13078: PUSH
13079: EMPTY
13080: LIST
13081: LIST
13082: PUSH
13083: LD_INT 2
13085: PUSH
13086: LD_INT 3
13088: PUSH
13089: EMPTY
13090: LIST
13091: LIST
13092: PUSH
13093: LD_INT 1
13095: PUSH
13096: LD_INT 3
13098: PUSH
13099: EMPTY
13100: LIST
13101: LIST
13102: PUSH
13103: LD_INT 1
13105: NEG
13106: PUSH
13107: LD_INT 2
13109: PUSH
13110: EMPTY
13111: LIST
13112: LIST
13113: PUSH
13114: LD_INT 2
13116: NEG
13117: PUSH
13118: LD_INT 1
13120: PUSH
13121: EMPTY
13122: LIST
13123: LIST
13124: PUSH
13125: EMPTY
13126: LIST
13127: LIST
13128: LIST
13129: LIST
13130: LIST
13131: LIST
13132: LIST
13133: LIST
13134: LIST
13135: LIST
13136: LIST
13137: LIST
13138: LIST
13139: LIST
13140: LIST
13141: LIST
13142: LIST
13143: LIST
13144: LIST
13145: LIST
13146: LIST
13147: LIST
13148: LIST
13149: ST_TO_ADDR
// DepotRu4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 1 , 2 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] ] ;
13150: LD_ADDR_VAR 0 27
13154: PUSH
13155: LD_INT 0
13157: PUSH
13158: LD_INT 0
13160: PUSH
13161: EMPTY
13162: LIST
13163: LIST
13164: PUSH
13165: LD_INT 0
13167: PUSH
13168: LD_INT 1
13170: NEG
13171: PUSH
13172: EMPTY
13173: LIST
13174: LIST
13175: PUSH
13176: LD_INT 1
13178: PUSH
13179: LD_INT 0
13181: PUSH
13182: EMPTY
13183: LIST
13184: LIST
13185: PUSH
13186: LD_INT 1
13188: PUSH
13189: LD_INT 1
13191: PUSH
13192: EMPTY
13193: LIST
13194: LIST
13195: PUSH
13196: LD_INT 0
13198: PUSH
13199: LD_INT 1
13201: PUSH
13202: EMPTY
13203: LIST
13204: LIST
13205: PUSH
13206: LD_INT 1
13208: NEG
13209: PUSH
13210: LD_INT 0
13212: PUSH
13213: EMPTY
13214: LIST
13215: LIST
13216: PUSH
13217: LD_INT 1
13219: NEG
13220: PUSH
13221: LD_INT 1
13223: NEG
13224: PUSH
13225: EMPTY
13226: LIST
13227: LIST
13228: PUSH
13229: LD_INT 1
13231: NEG
13232: PUSH
13233: LD_INT 2
13235: NEG
13236: PUSH
13237: EMPTY
13238: LIST
13239: LIST
13240: PUSH
13241: LD_INT 0
13243: PUSH
13244: LD_INT 2
13246: NEG
13247: PUSH
13248: EMPTY
13249: LIST
13250: LIST
13251: PUSH
13252: LD_INT 1
13254: PUSH
13255: LD_INT 1
13257: NEG
13258: PUSH
13259: EMPTY
13260: LIST
13261: LIST
13262: PUSH
13263: LD_INT 2
13265: PUSH
13266: LD_INT 0
13268: PUSH
13269: EMPTY
13270: LIST
13271: LIST
13272: PUSH
13273: LD_INT 2
13275: PUSH
13276: LD_INT 1
13278: PUSH
13279: EMPTY
13280: LIST
13281: LIST
13282: PUSH
13283: LD_INT 2
13285: PUSH
13286: LD_INT 2
13288: PUSH
13289: EMPTY
13290: LIST
13291: LIST
13292: PUSH
13293: LD_INT 1
13295: PUSH
13296: LD_INT 2
13298: PUSH
13299: EMPTY
13300: LIST
13301: LIST
13302: PUSH
13303: LD_INT 0
13305: PUSH
13306: LD_INT 2
13308: PUSH
13309: EMPTY
13310: LIST
13311: LIST
13312: PUSH
13313: LD_INT 1
13315: NEG
13316: PUSH
13317: LD_INT 1
13319: PUSH
13320: EMPTY
13321: LIST
13322: LIST
13323: PUSH
13324: LD_INT 2
13326: NEG
13327: PUSH
13328: LD_INT 0
13330: PUSH
13331: EMPTY
13332: LIST
13333: LIST
13334: PUSH
13335: LD_INT 2
13337: NEG
13338: PUSH
13339: LD_INT 1
13341: NEG
13342: PUSH
13343: EMPTY
13344: LIST
13345: LIST
13346: PUSH
13347: LD_INT 2
13349: NEG
13350: PUSH
13351: LD_INT 2
13353: NEG
13354: PUSH
13355: EMPTY
13356: LIST
13357: LIST
13358: PUSH
13359: LD_INT 1
13361: NEG
13362: PUSH
13363: LD_INT 2
13365: PUSH
13366: EMPTY
13367: LIST
13368: LIST
13369: PUSH
13370: LD_INT 2
13372: NEG
13373: PUSH
13374: LD_INT 1
13376: PUSH
13377: EMPTY
13378: LIST
13379: LIST
13380: PUSH
13381: LD_INT 3
13383: NEG
13384: PUSH
13385: LD_INT 1
13387: NEG
13388: PUSH
13389: EMPTY
13390: LIST
13391: LIST
13392: PUSH
13393: LD_INT 3
13395: NEG
13396: PUSH
13397: LD_INT 2
13399: NEG
13400: PUSH
13401: EMPTY
13402: LIST
13403: LIST
13404: PUSH
13405: EMPTY
13406: LIST
13407: LIST
13408: LIST
13409: LIST
13410: LIST
13411: LIST
13412: LIST
13413: LIST
13414: LIST
13415: LIST
13416: LIST
13417: LIST
13418: LIST
13419: LIST
13420: LIST
13421: LIST
13422: LIST
13423: LIST
13424: LIST
13425: LIST
13426: LIST
13427: LIST
13428: LIST
13429: ST_TO_ADDR
// DepotRu5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] ] ;
13430: LD_ADDR_VAR 0 28
13434: PUSH
13435: LD_INT 0
13437: PUSH
13438: LD_INT 0
13440: PUSH
13441: EMPTY
13442: LIST
13443: LIST
13444: PUSH
13445: LD_INT 0
13447: PUSH
13448: LD_INT 1
13450: NEG
13451: PUSH
13452: EMPTY
13453: LIST
13454: LIST
13455: PUSH
13456: LD_INT 1
13458: PUSH
13459: LD_INT 0
13461: PUSH
13462: EMPTY
13463: LIST
13464: LIST
13465: PUSH
13466: LD_INT 1
13468: PUSH
13469: LD_INT 1
13471: PUSH
13472: EMPTY
13473: LIST
13474: LIST
13475: PUSH
13476: LD_INT 0
13478: PUSH
13479: LD_INT 1
13481: PUSH
13482: EMPTY
13483: LIST
13484: LIST
13485: PUSH
13486: LD_INT 1
13488: NEG
13489: PUSH
13490: LD_INT 0
13492: PUSH
13493: EMPTY
13494: LIST
13495: LIST
13496: PUSH
13497: LD_INT 1
13499: NEG
13500: PUSH
13501: LD_INT 1
13503: NEG
13504: PUSH
13505: EMPTY
13506: LIST
13507: LIST
13508: PUSH
13509: LD_INT 1
13511: NEG
13512: PUSH
13513: LD_INT 2
13515: NEG
13516: PUSH
13517: EMPTY
13518: LIST
13519: LIST
13520: PUSH
13521: LD_INT 0
13523: PUSH
13524: LD_INT 2
13526: NEG
13527: PUSH
13528: EMPTY
13529: LIST
13530: LIST
13531: PUSH
13532: LD_INT 1
13534: PUSH
13535: LD_INT 1
13537: NEG
13538: PUSH
13539: EMPTY
13540: LIST
13541: LIST
13542: PUSH
13543: LD_INT 2
13545: PUSH
13546: LD_INT 0
13548: PUSH
13549: EMPTY
13550: LIST
13551: LIST
13552: PUSH
13553: LD_INT 2
13555: PUSH
13556: LD_INT 1
13558: PUSH
13559: EMPTY
13560: LIST
13561: LIST
13562: PUSH
13563: LD_INT 2
13565: PUSH
13566: LD_INT 2
13568: PUSH
13569: EMPTY
13570: LIST
13571: LIST
13572: PUSH
13573: LD_INT 1
13575: PUSH
13576: LD_INT 2
13578: PUSH
13579: EMPTY
13580: LIST
13581: LIST
13582: PUSH
13583: LD_INT 0
13585: PUSH
13586: LD_INT 2
13588: PUSH
13589: EMPTY
13590: LIST
13591: LIST
13592: PUSH
13593: LD_INT 1
13595: NEG
13596: PUSH
13597: LD_INT 1
13599: PUSH
13600: EMPTY
13601: LIST
13602: LIST
13603: PUSH
13604: LD_INT 2
13606: NEG
13607: PUSH
13608: LD_INT 0
13610: PUSH
13611: EMPTY
13612: LIST
13613: LIST
13614: PUSH
13615: LD_INT 2
13617: NEG
13618: PUSH
13619: LD_INT 1
13621: NEG
13622: PUSH
13623: EMPTY
13624: LIST
13625: LIST
13626: PUSH
13627: LD_INT 2
13629: NEG
13630: PUSH
13631: LD_INT 2
13633: NEG
13634: PUSH
13635: EMPTY
13636: LIST
13637: LIST
13638: PUSH
13639: LD_INT 2
13641: NEG
13642: PUSH
13643: LD_INT 3
13645: NEG
13646: PUSH
13647: EMPTY
13648: LIST
13649: LIST
13650: PUSH
13651: LD_INT 1
13653: NEG
13654: PUSH
13655: LD_INT 3
13657: NEG
13658: PUSH
13659: EMPTY
13660: LIST
13661: LIST
13662: PUSH
13663: LD_INT 3
13665: NEG
13666: PUSH
13667: LD_INT 1
13669: NEG
13670: PUSH
13671: EMPTY
13672: LIST
13673: LIST
13674: PUSH
13675: LD_INT 3
13677: NEG
13678: PUSH
13679: LD_INT 2
13681: NEG
13682: PUSH
13683: EMPTY
13684: LIST
13685: LIST
13686: PUSH
13687: EMPTY
13688: LIST
13689: LIST
13690: LIST
13691: LIST
13692: LIST
13693: LIST
13694: LIST
13695: LIST
13696: LIST
13697: LIST
13698: LIST
13699: LIST
13700: LIST
13701: LIST
13702: LIST
13703: LIST
13704: LIST
13705: LIST
13706: LIST
13707: LIST
13708: LIST
13709: LIST
13710: LIST
13711: ST_TO_ADDR
// Factory0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] ] ;
13712: LD_ADDR_VAR 0 29
13716: PUSH
13717: LD_INT 0
13719: PUSH
13720: LD_INT 0
13722: PUSH
13723: EMPTY
13724: LIST
13725: LIST
13726: PUSH
13727: LD_INT 0
13729: PUSH
13730: LD_INT 1
13732: NEG
13733: PUSH
13734: EMPTY
13735: LIST
13736: LIST
13737: PUSH
13738: LD_INT 1
13740: PUSH
13741: LD_INT 0
13743: PUSH
13744: EMPTY
13745: LIST
13746: LIST
13747: PUSH
13748: LD_INT 1
13750: PUSH
13751: LD_INT 1
13753: PUSH
13754: EMPTY
13755: LIST
13756: LIST
13757: PUSH
13758: LD_INT 0
13760: PUSH
13761: LD_INT 1
13763: PUSH
13764: EMPTY
13765: LIST
13766: LIST
13767: PUSH
13768: LD_INT 1
13770: NEG
13771: PUSH
13772: LD_INT 0
13774: PUSH
13775: EMPTY
13776: LIST
13777: LIST
13778: PUSH
13779: LD_INT 1
13781: NEG
13782: PUSH
13783: LD_INT 1
13785: NEG
13786: PUSH
13787: EMPTY
13788: LIST
13789: LIST
13790: PUSH
13791: LD_INT 1
13793: NEG
13794: PUSH
13795: LD_INT 2
13797: NEG
13798: PUSH
13799: EMPTY
13800: LIST
13801: LIST
13802: PUSH
13803: LD_INT 0
13805: PUSH
13806: LD_INT 2
13808: NEG
13809: PUSH
13810: EMPTY
13811: LIST
13812: LIST
13813: PUSH
13814: LD_INT 1
13816: PUSH
13817: LD_INT 1
13819: NEG
13820: PUSH
13821: EMPTY
13822: LIST
13823: LIST
13824: PUSH
13825: LD_INT 2
13827: PUSH
13828: LD_INT 0
13830: PUSH
13831: EMPTY
13832: LIST
13833: LIST
13834: PUSH
13835: LD_INT 2
13837: PUSH
13838: LD_INT 1
13840: PUSH
13841: EMPTY
13842: LIST
13843: LIST
13844: PUSH
13845: LD_INT 1
13847: PUSH
13848: LD_INT 2
13850: PUSH
13851: EMPTY
13852: LIST
13853: LIST
13854: PUSH
13855: LD_INT 0
13857: PUSH
13858: LD_INT 2
13860: PUSH
13861: EMPTY
13862: LIST
13863: LIST
13864: PUSH
13865: LD_INT 1
13867: NEG
13868: PUSH
13869: LD_INT 1
13871: PUSH
13872: EMPTY
13873: LIST
13874: LIST
13875: PUSH
13876: LD_INT 2
13878: NEG
13879: PUSH
13880: LD_INT 1
13882: NEG
13883: PUSH
13884: EMPTY
13885: LIST
13886: LIST
13887: PUSH
13888: LD_INT 2
13890: NEG
13891: PUSH
13892: LD_INT 2
13894: NEG
13895: PUSH
13896: EMPTY
13897: LIST
13898: LIST
13899: PUSH
13900: LD_INT 2
13902: NEG
13903: PUSH
13904: LD_INT 3
13906: NEG
13907: PUSH
13908: EMPTY
13909: LIST
13910: LIST
13911: PUSH
13912: LD_INT 2
13914: PUSH
13915: LD_INT 1
13917: NEG
13918: PUSH
13919: EMPTY
13920: LIST
13921: LIST
13922: PUSH
13923: LD_INT 3
13925: PUSH
13926: LD_INT 1
13928: PUSH
13929: EMPTY
13930: LIST
13931: LIST
13932: PUSH
13933: LD_INT 1
13935: PUSH
13936: LD_INT 3
13938: PUSH
13939: EMPTY
13940: LIST
13941: LIST
13942: PUSH
13943: LD_INT 1
13945: NEG
13946: PUSH
13947: LD_INT 2
13949: PUSH
13950: EMPTY
13951: LIST
13952: LIST
13953: PUSH
13954: LD_INT 3
13956: NEG
13957: PUSH
13958: LD_INT 2
13960: NEG
13961: PUSH
13962: EMPTY
13963: LIST
13964: LIST
13965: PUSH
13966: EMPTY
13967: LIST
13968: LIST
13969: LIST
13970: LIST
13971: LIST
13972: LIST
13973: LIST
13974: LIST
13975: LIST
13976: LIST
13977: LIST
13978: LIST
13979: LIST
13980: LIST
13981: LIST
13982: LIST
13983: LIST
13984: LIST
13985: LIST
13986: LIST
13987: LIST
13988: LIST
13989: LIST
13990: ST_TO_ADDR
// Factory1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
13991: LD_ADDR_VAR 0 30
13995: PUSH
13996: LD_INT 0
13998: PUSH
13999: LD_INT 0
14001: PUSH
14002: EMPTY
14003: LIST
14004: LIST
14005: PUSH
14006: LD_INT 0
14008: PUSH
14009: LD_INT 1
14011: NEG
14012: PUSH
14013: EMPTY
14014: LIST
14015: LIST
14016: PUSH
14017: LD_INT 1
14019: PUSH
14020: LD_INT 0
14022: PUSH
14023: EMPTY
14024: LIST
14025: LIST
14026: PUSH
14027: LD_INT 1
14029: PUSH
14030: LD_INT 1
14032: PUSH
14033: EMPTY
14034: LIST
14035: LIST
14036: PUSH
14037: LD_INT 0
14039: PUSH
14040: LD_INT 1
14042: PUSH
14043: EMPTY
14044: LIST
14045: LIST
14046: PUSH
14047: LD_INT 1
14049: NEG
14050: PUSH
14051: LD_INT 0
14053: PUSH
14054: EMPTY
14055: LIST
14056: LIST
14057: PUSH
14058: LD_INT 1
14060: NEG
14061: PUSH
14062: LD_INT 1
14064: NEG
14065: PUSH
14066: EMPTY
14067: LIST
14068: LIST
14069: PUSH
14070: LD_INT 1
14072: NEG
14073: PUSH
14074: LD_INT 2
14076: NEG
14077: PUSH
14078: EMPTY
14079: LIST
14080: LIST
14081: PUSH
14082: LD_INT 0
14084: PUSH
14085: LD_INT 2
14087: NEG
14088: PUSH
14089: EMPTY
14090: LIST
14091: LIST
14092: PUSH
14093: LD_INT 1
14095: PUSH
14096: LD_INT 1
14098: NEG
14099: PUSH
14100: EMPTY
14101: LIST
14102: LIST
14103: PUSH
14104: LD_INT 2
14106: PUSH
14107: LD_INT 0
14109: PUSH
14110: EMPTY
14111: LIST
14112: LIST
14113: PUSH
14114: LD_INT 2
14116: PUSH
14117: LD_INT 1
14119: PUSH
14120: EMPTY
14121: LIST
14122: LIST
14123: PUSH
14124: LD_INT 2
14126: PUSH
14127: LD_INT 2
14129: PUSH
14130: EMPTY
14131: LIST
14132: LIST
14133: PUSH
14134: LD_INT 1
14136: PUSH
14137: LD_INT 2
14139: PUSH
14140: EMPTY
14141: LIST
14142: LIST
14143: PUSH
14144: LD_INT 1
14146: NEG
14147: PUSH
14148: LD_INT 1
14150: PUSH
14151: EMPTY
14152: LIST
14153: LIST
14154: PUSH
14155: LD_INT 2
14157: NEG
14158: PUSH
14159: LD_INT 0
14161: PUSH
14162: EMPTY
14163: LIST
14164: LIST
14165: PUSH
14166: LD_INT 2
14168: NEG
14169: PUSH
14170: LD_INT 1
14172: NEG
14173: PUSH
14174: EMPTY
14175: LIST
14176: LIST
14177: PUSH
14178: LD_INT 1
14180: NEG
14181: PUSH
14182: LD_INT 3
14184: NEG
14185: PUSH
14186: EMPTY
14187: LIST
14188: LIST
14189: PUSH
14190: LD_INT 1
14192: PUSH
14193: LD_INT 2
14195: NEG
14196: PUSH
14197: EMPTY
14198: LIST
14199: LIST
14200: PUSH
14201: LD_INT 3
14203: PUSH
14204: LD_INT 2
14206: PUSH
14207: EMPTY
14208: LIST
14209: LIST
14210: PUSH
14211: LD_INT 2
14213: PUSH
14214: LD_INT 3
14216: PUSH
14217: EMPTY
14218: LIST
14219: LIST
14220: PUSH
14221: LD_INT 2
14223: NEG
14224: PUSH
14225: LD_INT 1
14227: PUSH
14228: EMPTY
14229: LIST
14230: LIST
14231: PUSH
14232: LD_INT 3
14234: NEG
14235: PUSH
14236: LD_INT 1
14238: NEG
14239: PUSH
14240: EMPTY
14241: LIST
14242: LIST
14243: PUSH
14244: EMPTY
14245: LIST
14246: LIST
14247: LIST
14248: LIST
14249: LIST
14250: LIST
14251: LIST
14252: LIST
14253: LIST
14254: LIST
14255: LIST
14256: LIST
14257: LIST
14258: LIST
14259: LIST
14260: LIST
14261: LIST
14262: LIST
14263: LIST
14264: LIST
14265: LIST
14266: LIST
14267: LIST
14268: ST_TO_ADDR
// Factory2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] ] ;
14269: LD_ADDR_VAR 0 31
14273: PUSH
14274: LD_INT 0
14276: PUSH
14277: LD_INT 0
14279: PUSH
14280: EMPTY
14281: LIST
14282: LIST
14283: PUSH
14284: LD_INT 0
14286: PUSH
14287: LD_INT 1
14289: NEG
14290: PUSH
14291: EMPTY
14292: LIST
14293: LIST
14294: PUSH
14295: LD_INT 1
14297: PUSH
14298: LD_INT 0
14300: PUSH
14301: EMPTY
14302: LIST
14303: LIST
14304: PUSH
14305: LD_INT 1
14307: PUSH
14308: LD_INT 1
14310: PUSH
14311: EMPTY
14312: LIST
14313: LIST
14314: PUSH
14315: LD_INT 0
14317: PUSH
14318: LD_INT 1
14320: PUSH
14321: EMPTY
14322: LIST
14323: LIST
14324: PUSH
14325: LD_INT 1
14327: NEG
14328: PUSH
14329: LD_INT 0
14331: PUSH
14332: EMPTY
14333: LIST
14334: LIST
14335: PUSH
14336: LD_INT 1
14338: NEG
14339: PUSH
14340: LD_INT 1
14342: NEG
14343: PUSH
14344: EMPTY
14345: LIST
14346: LIST
14347: PUSH
14348: LD_INT 1
14350: NEG
14351: PUSH
14352: LD_INT 2
14354: NEG
14355: PUSH
14356: EMPTY
14357: LIST
14358: LIST
14359: PUSH
14360: LD_INT 1
14362: PUSH
14363: LD_INT 1
14365: NEG
14366: PUSH
14367: EMPTY
14368: LIST
14369: LIST
14370: PUSH
14371: LD_INT 2
14373: PUSH
14374: LD_INT 0
14376: PUSH
14377: EMPTY
14378: LIST
14379: LIST
14380: PUSH
14381: LD_INT 2
14383: PUSH
14384: LD_INT 1
14386: PUSH
14387: EMPTY
14388: LIST
14389: LIST
14390: PUSH
14391: LD_INT 2
14393: PUSH
14394: LD_INT 2
14396: PUSH
14397: EMPTY
14398: LIST
14399: LIST
14400: PUSH
14401: LD_INT 1
14403: PUSH
14404: LD_INT 2
14406: PUSH
14407: EMPTY
14408: LIST
14409: LIST
14410: PUSH
14411: LD_INT 0
14413: PUSH
14414: LD_INT 2
14416: PUSH
14417: EMPTY
14418: LIST
14419: LIST
14420: PUSH
14421: LD_INT 1
14423: NEG
14424: PUSH
14425: LD_INT 1
14427: PUSH
14428: EMPTY
14429: LIST
14430: LIST
14431: PUSH
14432: LD_INT 2
14434: NEG
14435: PUSH
14436: LD_INT 1
14438: NEG
14439: PUSH
14440: EMPTY
14441: LIST
14442: LIST
14443: PUSH
14444: LD_INT 2
14446: NEG
14447: PUSH
14448: LD_INT 2
14450: NEG
14451: PUSH
14452: EMPTY
14453: LIST
14454: LIST
14455: PUSH
14456: LD_INT 2
14458: NEG
14459: PUSH
14460: LD_INT 3
14462: NEG
14463: PUSH
14464: EMPTY
14465: LIST
14466: LIST
14467: PUSH
14468: LD_INT 2
14470: PUSH
14471: LD_INT 1
14473: NEG
14474: PUSH
14475: EMPTY
14476: LIST
14477: LIST
14478: PUSH
14479: LD_INT 3
14481: PUSH
14482: LD_INT 1
14484: PUSH
14485: EMPTY
14486: LIST
14487: LIST
14488: PUSH
14489: LD_INT 1
14491: PUSH
14492: LD_INT 3
14494: PUSH
14495: EMPTY
14496: LIST
14497: LIST
14498: PUSH
14499: LD_INT 1
14501: NEG
14502: PUSH
14503: LD_INT 2
14505: PUSH
14506: EMPTY
14507: LIST
14508: LIST
14509: PUSH
14510: LD_INT 3
14512: NEG
14513: PUSH
14514: LD_INT 2
14516: NEG
14517: PUSH
14518: EMPTY
14519: LIST
14520: LIST
14521: PUSH
14522: EMPTY
14523: LIST
14524: LIST
14525: LIST
14526: LIST
14527: LIST
14528: LIST
14529: LIST
14530: LIST
14531: LIST
14532: LIST
14533: LIST
14534: LIST
14535: LIST
14536: LIST
14537: LIST
14538: LIST
14539: LIST
14540: LIST
14541: LIST
14542: LIST
14543: LIST
14544: LIST
14545: LIST
14546: ST_TO_ADDR
// Factory3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
14547: LD_ADDR_VAR 0 32
14551: PUSH
14552: LD_INT 0
14554: PUSH
14555: LD_INT 0
14557: PUSH
14558: EMPTY
14559: LIST
14560: LIST
14561: PUSH
14562: LD_INT 0
14564: PUSH
14565: LD_INT 1
14567: NEG
14568: PUSH
14569: EMPTY
14570: LIST
14571: LIST
14572: PUSH
14573: LD_INT 1
14575: PUSH
14576: LD_INT 0
14578: PUSH
14579: EMPTY
14580: LIST
14581: LIST
14582: PUSH
14583: LD_INT 1
14585: PUSH
14586: LD_INT 1
14588: PUSH
14589: EMPTY
14590: LIST
14591: LIST
14592: PUSH
14593: LD_INT 0
14595: PUSH
14596: LD_INT 1
14598: PUSH
14599: EMPTY
14600: LIST
14601: LIST
14602: PUSH
14603: LD_INT 1
14605: NEG
14606: PUSH
14607: LD_INT 0
14609: PUSH
14610: EMPTY
14611: LIST
14612: LIST
14613: PUSH
14614: LD_INT 1
14616: NEG
14617: PUSH
14618: LD_INT 1
14620: NEG
14621: PUSH
14622: EMPTY
14623: LIST
14624: LIST
14625: PUSH
14626: LD_INT 1
14628: NEG
14629: PUSH
14630: LD_INT 2
14632: NEG
14633: PUSH
14634: EMPTY
14635: LIST
14636: LIST
14637: PUSH
14638: LD_INT 0
14640: PUSH
14641: LD_INT 2
14643: NEG
14644: PUSH
14645: EMPTY
14646: LIST
14647: LIST
14648: PUSH
14649: LD_INT 1
14651: PUSH
14652: LD_INT 1
14654: NEG
14655: PUSH
14656: EMPTY
14657: LIST
14658: LIST
14659: PUSH
14660: LD_INT 2
14662: PUSH
14663: LD_INT 1
14665: PUSH
14666: EMPTY
14667: LIST
14668: LIST
14669: PUSH
14670: LD_INT 2
14672: PUSH
14673: LD_INT 2
14675: PUSH
14676: EMPTY
14677: LIST
14678: LIST
14679: PUSH
14680: LD_INT 1
14682: PUSH
14683: LD_INT 2
14685: PUSH
14686: EMPTY
14687: LIST
14688: LIST
14689: PUSH
14690: LD_INT 0
14692: PUSH
14693: LD_INT 2
14695: PUSH
14696: EMPTY
14697: LIST
14698: LIST
14699: PUSH
14700: LD_INT 1
14702: NEG
14703: PUSH
14704: LD_INT 1
14706: PUSH
14707: EMPTY
14708: LIST
14709: LIST
14710: PUSH
14711: LD_INT 2
14713: NEG
14714: PUSH
14715: LD_INT 0
14717: PUSH
14718: EMPTY
14719: LIST
14720: LIST
14721: PUSH
14722: LD_INT 2
14724: NEG
14725: PUSH
14726: LD_INT 1
14728: NEG
14729: PUSH
14730: EMPTY
14731: LIST
14732: LIST
14733: PUSH
14734: LD_INT 1
14736: NEG
14737: PUSH
14738: LD_INT 3
14740: NEG
14741: PUSH
14742: EMPTY
14743: LIST
14744: LIST
14745: PUSH
14746: LD_INT 1
14748: PUSH
14749: LD_INT 2
14751: NEG
14752: PUSH
14753: EMPTY
14754: LIST
14755: LIST
14756: PUSH
14757: LD_INT 3
14759: PUSH
14760: LD_INT 2
14762: PUSH
14763: EMPTY
14764: LIST
14765: LIST
14766: PUSH
14767: LD_INT 2
14769: PUSH
14770: LD_INT 3
14772: PUSH
14773: EMPTY
14774: LIST
14775: LIST
14776: PUSH
14777: LD_INT 2
14779: NEG
14780: PUSH
14781: LD_INT 1
14783: PUSH
14784: EMPTY
14785: LIST
14786: LIST
14787: PUSH
14788: LD_INT 3
14790: NEG
14791: PUSH
14792: LD_INT 1
14794: NEG
14795: PUSH
14796: EMPTY
14797: LIST
14798: LIST
14799: PUSH
14800: EMPTY
14801: LIST
14802: LIST
14803: LIST
14804: LIST
14805: LIST
14806: LIST
14807: LIST
14808: LIST
14809: LIST
14810: LIST
14811: LIST
14812: LIST
14813: LIST
14814: LIST
14815: LIST
14816: LIST
14817: LIST
14818: LIST
14819: LIST
14820: LIST
14821: LIST
14822: LIST
14823: LIST
14824: ST_TO_ADDR
// Factory4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] ] ;
14825: LD_ADDR_VAR 0 33
14829: PUSH
14830: LD_INT 0
14832: PUSH
14833: LD_INT 0
14835: PUSH
14836: EMPTY
14837: LIST
14838: LIST
14839: PUSH
14840: LD_INT 0
14842: PUSH
14843: LD_INT 1
14845: NEG
14846: PUSH
14847: EMPTY
14848: LIST
14849: LIST
14850: PUSH
14851: LD_INT 1
14853: PUSH
14854: LD_INT 0
14856: PUSH
14857: EMPTY
14858: LIST
14859: LIST
14860: PUSH
14861: LD_INT 1
14863: PUSH
14864: LD_INT 1
14866: PUSH
14867: EMPTY
14868: LIST
14869: LIST
14870: PUSH
14871: LD_INT 0
14873: PUSH
14874: LD_INT 1
14876: PUSH
14877: EMPTY
14878: LIST
14879: LIST
14880: PUSH
14881: LD_INT 1
14883: NEG
14884: PUSH
14885: LD_INT 0
14887: PUSH
14888: EMPTY
14889: LIST
14890: LIST
14891: PUSH
14892: LD_INT 1
14894: NEG
14895: PUSH
14896: LD_INT 1
14898: NEG
14899: PUSH
14900: EMPTY
14901: LIST
14902: LIST
14903: PUSH
14904: LD_INT 1
14906: NEG
14907: PUSH
14908: LD_INT 2
14910: NEG
14911: PUSH
14912: EMPTY
14913: LIST
14914: LIST
14915: PUSH
14916: LD_INT 1
14918: PUSH
14919: LD_INT 1
14921: NEG
14922: PUSH
14923: EMPTY
14924: LIST
14925: LIST
14926: PUSH
14927: LD_INT 2
14929: PUSH
14930: LD_INT 0
14932: PUSH
14933: EMPTY
14934: LIST
14935: LIST
14936: PUSH
14937: LD_INT 2
14939: PUSH
14940: LD_INT 1
14942: PUSH
14943: EMPTY
14944: LIST
14945: LIST
14946: PUSH
14947: LD_INT 1
14949: PUSH
14950: LD_INT 2
14952: PUSH
14953: EMPTY
14954: LIST
14955: LIST
14956: PUSH
14957: LD_INT 0
14959: PUSH
14960: LD_INT 2
14962: PUSH
14963: EMPTY
14964: LIST
14965: LIST
14966: PUSH
14967: LD_INT 1
14969: NEG
14970: PUSH
14971: LD_INT 1
14973: PUSH
14974: EMPTY
14975: LIST
14976: LIST
14977: PUSH
14978: LD_INT 2
14980: NEG
14981: PUSH
14982: LD_INT 0
14984: PUSH
14985: EMPTY
14986: LIST
14987: LIST
14988: PUSH
14989: LD_INT 2
14991: NEG
14992: PUSH
14993: LD_INT 1
14995: NEG
14996: PUSH
14997: EMPTY
14998: LIST
14999: LIST
15000: PUSH
15001: LD_INT 2
15003: NEG
15004: PUSH
15005: LD_INT 2
15007: NEG
15008: PUSH
15009: EMPTY
15010: LIST
15011: LIST
15012: PUSH
15013: LD_INT 2
15015: NEG
15016: PUSH
15017: LD_INT 3
15019: NEG
15020: PUSH
15021: EMPTY
15022: LIST
15023: LIST
15024: PUSH
15025: LD_INT 2
15027: PUSH
15028: LD_INT 1
15030: NEG
15031: PUSH
15032: EMPTY
15033: LIST
15034: LIST
15035: PUSH
15036: LD_INT 3
15038: PUSH
15039: LD_INT 1
15041: PUSH
15042: EMPTY
15043: LIST
15044: LIST
15045: PUSH
15046: LD_INT 1
15048: PUSH
15049: LD_INT 3
15051: PUSH
15052: EMPTY
15053: LIST
15054: LIST
15055: PUSH
15056: LD_INT 1
15058: NEG
15059: PUSH
15060: LD_INT 2
15062: PUSH
15063: EMPTY
15064: LIST
15065: LIST
15066: PUSH
15067: LD_INT 3
15069: NEG
15070: PUSH
15071: LD_INT 2
15073: NEG
15074: PUSH
15075: EMPTY
15076: LIST
15077: LIST
15078: PUSH
15079: EMPTY
15080: LIST
15081: LIST
15082: LIST
15083: LIST
15084: LIST
15085: LIST
15086: LIST
15087: LIST
15088: LIST
15089: LIST
15090: LIST
15091: LIST
15092: LIST
15093: LIST
15094: LIST
15095: LIST
15096: LIST
15097: LIST
15098: LIST
15099: LIST
15100: LIST
15101: LIST
15102: LIST
15103: ST_TO_ADDR
// Factory5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
15104: LD_ADDR_VAR 0 34
15108: PUSH
15109: LD_INT 0
15111: PUSH
15112: LD_INT 0
15114: PUSH
15115: EMPTY
15116: LIST
15117: LIST
15118: PUSH
15119: LD_INT 0
15121: PUSH
15122: LD_INT 1
15124: NEG
15125: PUSH
15126: EMPTY
15127: LIST
15128: LIST
15129: PUSH
15130: LD_INT 1
15132: PUSH
15133: LD_INT 0
15135: PUSH
15136: EMPTY
15137: LIST
15138: LIST
15139: PUSH
15140: LD_INT 1
15142: PUSH
15143: LD_INT 1
15145: PUSH
15146: EMPTY
15147: LIST
15148: LIST
15149: PUSH
15150: LD_INT 0
15152: PUSH
15153: LD_INT 1
15155: PUSH
15156: EMPTY
15157: LIST
15158: LIST
15159: PUSH
15160: LD_INT 1
15162: NEG
15163: PUSH
15164: LD_INT 0
15166: PUSH
15167: EMPTY
15168: LIST
15169: LIST
15170: PUSH
15171: LD_INT 1
15173: NEG
15174: PUSH
15175: LD_INT 1
15177: NEG
15178: PUSH
15179: EMPTY
15180: LIST
15181: LIST
15182: PUSH
15183: LD_INT 1
15185: NEG
15186: PUSH
15187: LD_INT 2
15189: NEG
15190: PUSH
15191: EMPTY
15192: LIST
15193: LIST
15194: PUSH
15195: LD_INT 0
15197: PUSH
15198: LD_INT 2
15200: NEG
15201: PUSH
15202: EMPTY
15203: LIST
15204: LIST
15205: PUSH
15206: LD_INT 1
15208: PUSH
15209: LD_INT 1
15211: NEG
15212: PUSH
15213: EMPTY
15214: LIST
15215: LIST
15216: PUSH
15217: LD_INT 2
15219: PUSH
15220: LD_INT 1
15222: PUSH
15223: EMPTY
15224: LIST
15225: LIST
15226: PUSH
15227: LD_INT 2
15229: PUSH
15230: LD_INT 2
15232: PUSH
15233: EMPTY
15234: LIST
15235: LIST
15236: PUSH
15237: LD_INT 1
15239: PUSH
15240: LD_INT 2
15242: PUSH
15243: EMPTY
15244: LIST
15245: LIST
15246: PUSH
15247: LD_INT 1
15249: NEG
15250: PUSH
15251: LD_INT 1
15253: PUSH
15254: EMPTY
15255: LIST
15256: LIST
15257: PUSH
15258: LD_INT 2
15260: NEG
15261: PUSH
15262: LD_INT 0
15264: PUSH
15265: EMPTY
15266: LIST
15267: LIST
15268: PUSH
15269: LD_INT 2
15271: NEG
15272: PUSH
15273: LD_INT 1
15275: NEG
15276: PUSH
15277: EMPTY
15278: LIST
15279: LIST
15280: PUSH
15281: LD_INT 2
15283: NEG
15284: PUSH
15285: LD_INT 2
15287: NEG
15288: PUSH
15289: EMPTY
15290: LIST
15291: LIST
15292: PUSH
15293: LD_INT 1
15295: NEG
15296: PUSH
15297: LD_INT 3
15299: NEG
15300: PUSH
15301: EMPTY
15302: LIST
15303: LIST
15304: PUSH
15305: LD_INT 1
15307: PUSH
15308: LD_INT 2
15310: NEG
15311: PUSH
15312: EMPTY
15313: LIST
15314: LIST
15315: PUSH
15316: LD_INT 3
15318: PUSH
15319: LD_INT 2
15321: PUSH
15322: EMPTY
15323: LIST
15324: LIST
15325: PUSH
15326: LD_INT 2
15328: PUSH
15329: LD_INT 3
15331: PUSH
15332: EMPTY
15333: LIST
15334: LIST
15335: PUSH
15336: LD_INT 2
15338: NEG
15339: PUSH
15340: LD_INT 1
15342: PUSH
15343: EMPTY
15344: LIST
15345: LIST
15346: PUSH
15347: LD_INT 3
15349: NEG
15350: PUSH
15351: LD_INT 1
15353: NEG
15354: PUSH
15355: EMPTY
15356: LIST
15357: LIST
15358: PUSH
15359: EMPTY
15360: LIST
15361: LIST
15362: LIST
15363: LIST
15364: LIST
15365: LIST
15366: LIST
15367: LIST
15368: LIST
15369: LIST
15370: LIST
15371: LIST
15372: LIST
15373: LIST
15374: LIST
15375: LIST
15376: LIST
15377: LIST
15378: LIST
15379: LIST
15380: LIST
15381: LIST
15382: LIST
15383: ST_TO_ADDR
// Ext0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 2 , 1 ] , [ - 2 , - 1 ] ] ;
15384: LD_ADDR_VAR 0 35
15388: PUSH
15389: LD_INT 0
15391: PUSH
15392: LD_INT 0
15394: PUSH
15395: EMPTY
15396: LIST
15397: LIST
15398: PUSH
15399: LD_INT 0
15401: PUSH
15402: LD_INT 1
15404: NEG
15405: PUSH
15406: EMPTY
15407: LIST
15408: LIST
15409: PUSH
15410: LD_INT 1
15412: PUSH
15413: LD_INT 0
15415: PUSH
15416: EMPTY
15417: LIST
15418: LIST
15419: PUSH
15420: LD_INT 1
15422: PUSH
15423: LD_INT 1
15425: PUSH
15426: EMPTY
15427: LIST
15428: LIST
15429: PUSH
15430: LD_INT 0
15432: PUSH
15433: LD_INT 1
15435: PUSH
15436: EMPTY
15437: LIST
15438: LIST
15439: PUSH
15440: LD_INT 1
15442: NEG
15443: PUSH
15444: LD_INT 0
15446: PUSH
15447: EMPTY
15448: LIST
15449: LIST
15450: PUSH
15451: LD_INT 1
15453: NEG
15454: PUSH
15455: LD_INT 1
15457: NEG
15458: PUSH
15459: EMPTY
15460: LIST
15461: LIST
15462: PUSH
15463: LD_INT 2
15465: PUSH
15466: LD_INT 1
15468: PUSH
15469: EMPTY
15470: LIST
15471: LIST
15472: PUSH
15473: LD_INT 2
15475: NEG
15476: PUSH
15477: LD_INT 1
15479: NEG
15480: PUSH
15481: EMPTY
15482: LIST
15483: LIST
15484: PUSH
15485: EMPTY
15486: LIST
15487: LIST
15488: LIST
15489: LIST
15490: LIST
15491: LIST
15492: LIST
15493: LIST
15494: LIST
15495: ST_TO_ADDR
// Ext1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , 2 ] ] ;
15496: LD_ADDR_VAR 0 36
15500: PUSH
15501: LD_INT 0
15503: PUSH
15504: LD_INT 0
15506: PUSH
15507: EMPTY
15508: LIST
15509: LIST
15510: PUSH
15511: LD_INT 0
15513: PUSH
15514: LD_INT 1
15516: NEG
15517: PUSH
15518: EMPTY
15519: LIST
15520: LIST
15521: PUSH
15522: LD_INT 1
15524: PUSH
15525: LD_INT 0
15527: PUSH
15528: EMPTY
15529: LIST
15530: LIST
15531: PUSH
15532: LD_INT 1
15534: PUSH
15535: LD_INT 1
15537: PUSH
15538: EMPTY
15539: LIST
15540: LIST
15541: PUSH
15542: LD_INT 0
15544: PUSH
15545: LD_INT 1
15547: PUSH
15548: EMPTY
15549: LIST
15550: LIST
15551: PUSH
15552: LD_INT 1
15554: NEG
15555: PUSH
15556: LD_INT 0
15558: PUSH
15559: EMPTY
15560: LIST
15561: LIST
15562: PUSH
15563: LD_INT 1
15565: NEG
15566: PUSH
15567: LD_INT 1
15569: NEG
15570: PUSH
15571: EMPTY
15572: LIST
15573: LIST
15574: PUSH
15575: LD_INT 1
15577: NEG
15578: PUSH
15579: LD_INT 2
15581: NEG
15582: PUSH
15583: EMPTY
15584: LIST
15585: LIST
15586: PUSH
15587: LD_INT 1
15589: PUSH
15590: LD_INT 2
15592: PUSH
15593: EMPTY
15594: LIST
15595: LIST
15596: PUSH
15597: EMPTY
15598: LIST
15599: LIST
15600: LIST
15601: LIST
15602: LIST
15603: LIST
15604: LIST
15605: LIST
15606: LIST
15607: ST_TO_ADDR
// Ext2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ - 1 , 1 ] ] ;
15608: LD_ADDR_VAR 0 37
15612: PUSH
15613: LD_INT 0
15615: PUSH
15616: LD_INT 0
15618: PUSH
15619: EMPTY
15620: LIST
15621: LIST
15622: PUSH
15623: LD_INT 0
15625: PUSH
15626: LD_INT 1
15628: NEG
15629: PUSH
15630: EMPTY
15631: LIST
15632: LIST
15633: PUSH
15634: LD_INT 1
15636: PUSH
15637: LD_INT 0
15639: PUSH
15640: EMPTY
15641: LIST
15642: LIST
15643: PUSH
15644: LD_INT 1
15646: PUSH
15647: LD_INT 1
15649: PUSH
15650: EMPTY
15651: LIST
15652: LIST
15653: PUSH
15654: LD_INT 0
15656: PUSH
15657: LD_INT 1
15659: PUSH
15660: EMPTY
15661: LIST
15662: LIST
15663: PUSH
15664: LD_INT 1
15666: NEG
15667: PUSH
15668: LD_INT 0
15670: PUSH
15671: EMPTY
15672: LIST
15673: LIST
15674: PUSH
15675: LD_INT 1
15677: NEG
15678: PUSH
15679: LD_INT 1
15681: NEG
15682: PUSH
15683: EMPTY
15684: LIST
15685: LIST
15686: PUSH
15687: LD_INT 1
15689: PUSH
15690: LD_INT 1
15692: NEG
15693: PUSH
15694: EMPTY
15695: LIST
15696: LIST
15697: PUSH
15698: LD_INT 1
15700: NEG
15701: PUSH
15702: LD_INT 1
15704: PUSH
15705: EMPTY
15706: LIST
15707: LIST
15708: PUSH
15709: EMPTY
15710: LIST
15711: LIST
15712: LIST
15713: LIST
15714: LIST
15715: LIST
15716: LIST
15717: LIST
15718: LIST
15719: ST_TO_ADDR
// Ext3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 2 , 1 ] , [ - 2 , - 1 ] ] ;
15720: LD_ADDR_VAR 0 38
15724: PUSH
15725: LD_INT 0
15727: PUSH
15728: LD_INT 0
15730: PUSH
15731: EMPTY
15732: LIST
15733: LIST
15734: PUSH
15735: LD_INT 0
15737: PUSH
15738: LD_INT 1
15740: NEG
15741: PUSH
15742: EMPTY
15743: LIST
15744: LIST
15745: PUSH
15746: LD_INT 1
15748: PUSH
15749: LD_INT 0
15751: PUSH
15752: EMPTY
15753: LIST
15754: LIST
15755: PUSH
15756: LD_INT 1
15758: PUSH
15759: LD_INT 1
15761: PUSH
15762: EMPTY
15763: LIST
15764: LIST
15765: PUSH
15766: LD_INT 0
15768: PUSH
15769: LD_INT 1
15771: PUSH
15772: EMPTY
15773: LIST
15774: LIST
15775: PUSH
15776: LD_INT 1
15778: NEG
15779: PUSH
15780: LD_INT 0
15782: PUSH
15783: EMPTY
15784: LIST
15785: LIST
15786: PUSH
15787: LD_INT 1
15789: NEG
15790: PUSH
15791: LD_INT 1
15793: NEG
15794: PUSH
15795: EMPTY
15796: LIST
15797: LIST
15798: PUSH
15799: LD_INT 2
15801: PUSH
15802: LD_INT 1
15804: PUSH
15805: EMPTY
15806: LIST
15807: LIST
15808: PUSH
15809: LD_INT 2
15811: NEG
15812: PUSH
15813: LD_INT 1
15815: NEG
15816: PUSH
15817: EMPTY
15818: LIST
15819: LIST
15820: PUSH
15821: EMPTY
15822: LIST
15823: LIST
15824: LIST
15825: LIST
15826: LIST
15827: LIST
15828: LIST
15829: LIST
15830: LIST
15831: ST_TO_ADDR
// Ext4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , 2 ] ] ;
15832: LD_ADDR_VAR 0 39
15836: PUSH
15837: LD_INT 0
15839: PUSH
15840: LD_INT 0
15842: PUSH
15843: EMPTY
15844: LIST
15845: LIST
15846: PUSH
15847: LD_INT 0
15849: PUSH
15850: LD_INT 1
15852: NEG
15853: PUSH
15854: EMPTY
15855: LIST
15856: LIST
15857: PUSH
15858: LD_INT 1
15860: PUSH
15861: LD_INT 0
15863: PUSH
15864: EMPTY
15865: LIST
15866: LIST
15867: PUSH
15868: LD_INT 1
15870: PUSH
15871: LD_INT 1
15873: PUSH
15874: EMPTY
15875: LIST
15876: LIST
15877: PUSH
15878: LD_INT 0
15880: PUSH
15881: LD_INT 1
15883: PUSH
15884: EMPTY
15885: LIST
15886: LIST
15887: PUSH
15888: LD_INT 1
15890: NEG
15891: PUSH
15892: LD_INT 0
15894: PUSH
15895: EMPTY
15896: LIST
15897: LIST
15898: PUSH
15899: LD_INT 1
15901: NEG
15902: PUSH
15903: LD_INT 1
15905: NEG
15906: PUSH
15907: EMPTY
15908: LIST
15909: LIST
15910: PUSH
15911: LD_INT 1
15913: NEG
15914: PUSH
15915: LD_INT 2
15917: NEG
15918: PUSH
15919: EMPTY
15920: LIST
15921: LIST
15922: PUSH
15923: LD_INT 1
15925: PUSH
15926: LD_INT 2
15928: PUSH
15929: EMPTY
15930: LIST
15931: LIST
15932: PUSH
15933: EMPTY
15934: LIST
15935: LIST
15936: LIST
15937: LIST
15938: LIST
15939: LIST
15940: LIST
15941: LIST
15942: LIST
15943: ST_TO_ADDR
// Ext5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ - 1 , 1 ] ] ;
15944: LD_ADDR_VAR 0 40
15948: PUSH
15949: LD_INT 0
15951: PUSH
15952: LD_INT 0
15954: PUSH
15955: EMPTY
15956: LIST
15957: LIST
15958: PUSH
15959: LD_INT 0
15961: PUSH
15962: LD_INT 1
15964: NEG
15965: PUSH
15966: EMPTY
15967: LIST
15968: LIST
15969: PUSH
15970: LD_INT 1
15972: PUSH
15973: LD_INT 0
15975: PUSH
15976: EMPTY
15977: LIST
15978: LIST
15979: PUSH
15980: LD_INT 1
15982: PUSH
15983: LD_INT 1
15985: PUSH
15986: EMPTY
15987: LIST
15988: LIST
15989: PUSH
15990: LD_INT 0
15992: PUSH
15993: LD_INT 1
15995: PUSH
15996: EMPTY
15997: LIST
15998: LIST
15999: PUSH
16000: LD_INT 1
16002: NEG
16003: PUSH
16004: LD_INT 0
16006: PUSH
16007: EMPTY
16008: LIST
16009: LIST
16010: PUSH
16011: LD_INT 1
16013: NEG
16014: PUSH
16015: LD_INT 1
16017: NEG
16018: PUSH
16019: EMPTY
16020: LIST
16021: LIST
16022: PUSH
16023: LD_INT 1
16025: PUSH
16026: LD_INT 1
16028: NEG
16029: PUSH
16030: EMPTY
16031: LIST
16032: LIST
16033: PUSH
16034: LD_INT 1
16036: NEG
16037: PUSH
16038: LD_INT 1
16040: PUSH
16041: EMPTY
16042: LIST
16043: LIST
16044: PUSH
16045: EMPTY
16046: LIST
16047: LIST
16048: LIST
16049: LIST
16050: LIST
16051: LIST
16052: LIST
16053: LIST
16054: LIST
16055: ST_TO_ADDR
// Lab0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
16056: LD_ADDR_VAR 0 41
16060: PUSH
16061: LD_INT 0
16063: PUSH
16064: LD_INT 0
16066: PUSH
16067: EMPTY
16068: LIST
16069: LIST
16070: PUSH
16071: LD_INT 0
16073: PUSH
16074: LD_INT 1
16076: NEG
16077: PUSH
16078: EMPTY
16079: LIST
16080: LIST
16081: PUSH
16082: LD_INT 1
16084: PUSH
16085: LD_INT 0
16087: PUSH
16088: EMPTY
16089: LIST
16090: LIST
16091: PUSH
16092: LD_INT 1
16094: PUSH
16095: LD_INT 1
16097: PUSH
16098: EMPTY
16099: LIST
16100: LIST
16101: PUSH
16102: LD_INT 0
16104: PUSH
16105: LD_INT 1
16107: PUSH
16108: EMPTY
16109: LIST
16110: LIST
16111: PUSH
16112: LD_INT 1
16114: NEG
16115: PUSH
16116: LD_INT 0
16118: PUSH
16119: EMPTY
16120: LIST
16121: LIST
16122: PUSH
16123: LD_INT 1
16125: NEG
16126: PUSH
16127: LD_INT 1
16129: NEG
16130: PUSH
16131: EMPTY
16132: LIST
16133: LIST
16134: PUSH
16135: LD_INT 1
16137: NEG
16138: PUSH
16139: LD_INT 2
16141: NEG
16142: PUSH
16143: EMPTY
16144: LIST
16145: LIST
16146: PUSH
16147: LD_INT 1
16149: PUSH
16150: LD_INT 1
16152: NEG
16153: PUSH
16154: EMPTY
16155: LIST
16156: LIST
16157: PUSH
16158: LD_INT 2
16160: PUSH
16161: LD_INT 0
16163: PUSH
16164: EMPTY
16165: LIST
16166: LIST
16167: PUSH
16168: LD_INT 2
16170: PUSH
16171: LD_INT 1
16173: PUSH
16174: EMPTY
16175: LIST
16176: LIST
16177: PUSH
16178: LD_INT 2
16180: PUSH
16181: LD_INT 2
16183: PUSH
16184: EMPTY
16185: LIST
16186: LIST
16187: PUSH
16188: LD_INT 1
16190: PUSH
16191: LD_INT 2
16193: PUSH
16194: EMPTY
16195: LIST
16196: LIST
16197: PUSH
16198: LD_INT 1
16200: NEG
16201: PUSH
16202: LD_INT 1
16204: PUSH
16205: EMPTY
16206: LIST
16207: LIST
16208: PUSH
16209: LD_INT 2
16211: NEG
16212: PUSH
16213: LD_INT 0
16215: PUSH
16216: EMPTY
16217: LIST
16218: LIST
16219: PUSH
16220: LD_INT 2
16222: NEG
16223: PUSH
16224: LD_INT 1
16226: NEG
16227: PUSH
16228: EMPTY
16229: LIST
16230: LIST
16231: PUSH
16232: LD_INT 2
16234: NEG
16235: PUSH
16236: LD_INT 2
16238: NEG
16239: PUSH
16240: EMPTY
16241: LIST
16242: LIST
16243: PUSH
16244: LD_INT 2
16246: NEG
16247: PUSH
16248: LD_INT 3
16250: NEG
16251: PUSH
16252: EMPTY
16253: LIST
16254: LIST
16255: PUSH
16256: LD_INT 2
16258: PUSH
16259: LD_INT 1
16261: NEG
16262: PUSH
16263: EMPTY
16264: LIST
16265: LIST
16266: PUSH
16267: LD_INT 3
16269: PUSH
16270: LD_INT 0
16272: PUSH
16273: EMPTY
16274: LIST
16275: LIST
16276: PUSH
16277: LD_INT 3
16279: PUSH
16280: LD_INT 1
16282: PUSH
16283: EMPTY
16284: LIST
16285: LIST
16286: PUSH
16287: LD_INT 3
16289: PUSH
16290: LD_INT 2
16292: PUSH
16293: EMPTY
16294: LIST
16295: LIST
16296: PUSH
16297: LD_INT 3
16299: PUSH
16300: LD_INT 3
16302: PUSH
16303: EMPTY
16304: LIST
16305: LIST
16306: PUSH
16307: LD_INT 2
16309: PUSH
16310: LD_INT 3
16312: PUSH
16313: EMPTY
16314: LIST
16315: LIST
16316: PUSH
16317: LD_INT 2
16319: NEG
16320: PUSH
16321: LD_INT 1
16323: PUSH
16324: EMPTY
16325: LIST
16326: LIST
16327: PUSH
16328: LD_INT 3
16330: NEG
16331: PUSH
16332: LD_INT 0
16334: PUSH
16335: EMPTY
16336: LIST
16337: LIST
16338: PUSH
16339: LD_INT 3
16341: NEG
16342: PUSH
16343: LD_INT 1
16345: NEG
16346: PUSH
16347: EMPTY
16348: LIST
16349: LIST
16350: PUSH
16351: LD_INT 3
16353: NEG
16354: PUSH
16355: LD_INT 2
16357: NEG
16358: PUSH
16359: EMPTY
16360: LIST
16361: LIST
16362: PUSH
16363: LD_INT 3
16365: NEG
16366: PUSH
16367: LD_INT 3
16369: NEG
16370: PUSH
16371: EMPTY
16372: LIST
16373: LIST
16374: PUSH
16375: EMPTY
16376: LIST
16377: LIST
16378: LIST
16379: LIST
16380: LIST
16381: LIST
16382: LIST
16383: LIST
16384: LIST
16385: LIST
16386: LIST
16387: LIST
16388: LIST
16389: LIST
16390: LIST
16391: LIST
16392: LIST
16393: LIST
16394: LIST
16395: LIST
16396: LIST
16397: LIST
16398: LIST
16399: LIST
16400: LIST
16401: LIST
16402: LIST
16403: LIST
16404: LIST
16405: ST_TO_ADDR
// Lab1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
16406: LD_ADDR_VAR 0 42
16410: PUSH
16411: LD_INT 0
16413: PUSH
16414: LD_INT 0
16416: PUSH
16417: EMPTY
16418: LIST
16419: LIST
16420: PUSH
16421: LD_INT 0
16423: PUSH
16424: LD_INT 1
16426: NEG
16427: PUSH
16428: EMPTY
16429: LIST
16430: LIST
16431: PUSH
16432: LD_INT 1
16434: PUSH
16435: LD_INT 0
16437: PUSH
16438: EMPTY
16439: LIST
16440: LIST
16441: PUSH
16442: LD_INT 1
16444: PUSH
16445: LD_INT 1
16447: PUSH
16448: EMPTY
16449: LIST
16450: LIST
16451: PUSH
16452: LD_INT 0
16454: PUSH
16455: LD_INT 1
16457: PUSH
16458: EMPTY
16459: LIST
16460: LIST
16461: PUSH
16462: LD_INT 1
16464: NEG
16465: PUSH
16466: LD_INT 0
16468: PUSH
16469: EMPTY
16470: LIST
16471: LIST
16472: PUSH
16473: LD_INT 1
16475: NEG
16476: PUSH
16477: LD_INT 1
16479: NEG
16480: PUSH
16481: EMPTY
16482: LIST
16483: LIST
16484: PUSH
16485: LD_INT 1
16487: NEG
16488: PUSH
16489: LD_INT 2
16491: NEG
16492: PUSH
16493: EMPTY
16494: LIST
16495: LIST
16496: PUSH
16497: LD_INT 0
16499: PUSH
16500: LD_INT 2
16502: NEG
16503: PUSH
16504: EMPTY
16505: LIST
16506: LIST
16507: PUSH
16508: LD_INT 1
16510: PUSH
16511: LD_INT 1
16513: NEG
16514: PUSH
16515: EMPTY
16516: LIST
16517: LIST
16518: PUSH
16519: LD_INT 2
16521: PUSH
16522: LD_INT 1
16524: PUSH
16525: EMPTY
16526: LIST
16527: LIST
16528: PUSH
16529: LD_INT 2
16531: PUSH
16532: LD_INT 2
16534: PUSH
16535: EMPTY
16536: LIST
16537: LIST
16538: PUSH
16539: LD_INT 1
16541: PUSH
16542: LD_INT 2
16544: PUSH
16545: EMPTY
16546: LIST
16547: LIST
16548: PUSH
16549: LD_INT 0
16551: PUSH
16552: LD_INT 2
16554: PUSH
16555: EMPTY
16556: LIST
16557: LIST
16558: PUSH
16559: LD_INT 1
16561: NEG
16562: PUSH
16563: LD_INT 1
16565: PUSH
16566: EMPTY
16567: LIST
16568: LIST
16569: PUSH
16570: LD_INT 2
16572: NEG
16573: PUSH
16574: LD_INT 1
16576: NEG
16577: PUSH
16578: EMPTY
16579: LIST
16580: LIST
16581: PUSH
16582: LD_INT 2
16584: NEG
16585: PUSH
16586: LD_INT 2
16588: NEG
16589: PUSH
16590: EMPTY
16591: LIST
16592: LIST
16593: PUSH
16594: LD_INT 2
16596: NEG
16597: PUSH
16598: LD_INT 3
16600: NEG
16601: PUSH
16602: EMPTY
16603: LIST
16604: LIST
16605: PUSH
16606: LD_INT 1
16608: NEG
16609: PUSH
16610: LD_INT 3
16612: NEG
16613: PUSH
16614: EMPTY
16615: LIST
16616: LIST
16617: PUSH
16618: LD_INT 0
16620: PUSH
16621: LD_INT 3
16623: NEG
16624: PUSH
16625: EMPTY
16626: LIST
16627: LIST
16628: PUSH
16629: LD_INT 1
16631: PUSH
16632: LD_INT 2
16634: NEG
16635: PUSH
16636: EMPTY
16637: LIST
16638: LIST
16639: PUSH
16640: LD_INT 3
16642: PUSH
16643: LD_INT 2
16645: PUSH
16646: EMPTY
16647: LIST
16648: LIST
16649: PUSH
16650: LD_INT 3
16652: PUSH
16653: LD_INT 3
16655: PUSH
16656: EMPTY
16657: LIST
16658: LIST
16659: PUSH
16660: LD_INT 2
16662: PUSH
16663: LD_INT 3
16665: PUSH
16666: EMPTY
16667: LIST
16668: LIST
16669: PUSH
16670: LD_INT 1
16672: PUSH
16673: LD_INT 3
16675: PUSH
16676: EMPTY
16677: LIST
16678: LIST
16679: PUSH
16680: LD_INT 0
16682: PUSH
16683: LD_INT 3
16685: PUSH
16686: EMPTY
16687: LIST
16688: LIST
16689: PUSH
16690: LD_INT 1
16692: NEG
16693: PUSH
16694: LD_INT 2
16696: PUSH
16697: EMPTY
16698: LIST
16699: LIST
16700: PUSH
16701: LD_INT 3
16703: NEG
16704: PUSH
16705: LD_INT 2
16707: NEG
16708: PUSH
16709: EMPTY
16710: LIST
16711: LIST
16712: PUSH
16713: LD_INT 3
16715: NEG
16716: PUSH
16717: LD_INT 3
16719: NEG
16720: PUSH
16721: EMPTY
16722: LIST
16723: LIST
16724: PUSH
16725: EMPTY
16726: LIST
16727: LIST
16728: LIST
16729: LIST
16730: LIST
16731: LIST
16732: LIST
16733: LIST
16734: LIST
16735: LIST
16736: LIST
16737: LIST
16738: LIST
16739: LIST
16740: LIST
16741: LIST
16742: LIST
16743: LIST
16744: LIST
16745: LIST
16746: LIST
16747: LIST
16748: LIST
16749: LIST
16750: LIST
16751: LIST
16752: LIST
16753: LIST
16754: LIST
16755: ST_TO_ADDR
// Lab2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
16756: LD_ADDR_VAR 0 43
16760: PUSH
16761: LD_INT 0
16763: PUSH
16764: LD_INT 0
16766: PUSH
16767: EMPTY
16768: LIST
16769: LIST
16770: PUSH
16771: LD_INT 0
16773: PUSH
16774: LD_INT 1
16776: NEG
16777: PUSH
16778: EMPTY
16779: LIST
16780: LIST
16781: PUSH
16782: LD_INT 1
16784: PUSH
16785: LD_INT 0
16787: PUSH
16788: EMPTY
16789: LIST
16790: LIST
16791: PUSH
16792: LD_INT 1
16794: PUSH
16795: LD_INT 1
16797: PUSH
16798: EMPTY
16799: LIST
16800: LIST
16801: PUSH
16802: LD_INT 0
16804: PUSH
16805: LD_INT 1
16807: PUSH
16808: EMPTY
16809: LIST
16810: LIST
16811: PUSH
16812: LD_INT 1
16814: NEG
16815: PUSH
16816: LD_INT 0
16818: PUSH
16819: EMPTY
16820: LIST
16821: LIST
16822: PUSH
16823: LD_INT 1
16825: NEG
16826: PUSH
16827: LD_INT 1
16829: NEG
16830: PUSH
16831: EMPTY
16832: LIST
16833: LIST
16834: PUSH
16835: LD_INT 1
16837: NEG
16838: PUSH
16839: LD_INT 2
16841: NEG
16842: PUSH
16843: EMPTY
16844: LIST
16845: LIST
16846: PUSH
16847: LD_INT 0
16849: PUSH
16850: LD_INT 2
16852: NEG
16853: PUSH
16854: EMPTY
16855: LIST
16856: LIST
16857: PUSH
16858: LD_INT 1
16860: PUSH
16861: LD_INT 1
16863: NEG
16864: PUSH
16865: EMPTY
16866: LIST
16867: LIST
16868: PUSH
16869: LD_INT 2
16871: PUSH
16872: LD_INT 0
16874: PUSH
16875: EMPTY
16876: LIST
16877: LIST
16878: PUSH
16879: LD_INT 2
16881: PUSH
16882: LD_INT 1
16884: PUSH
16885: EMPTY
16886: LIST
16887: LIST
16888: PUSH
16889: LD_INT 1
16891: PUSH
16892: LD_INT 2
16894: PUSH
16895: EMPTY
16896: LIST
16897: LIST
16898: PUSH
16899: LD_INT 0
16901: PUSH
16902: LD_INT 2
16904: PUSH
16905: EMPTY
16906: LIST
16907: LIST
16908: PUSH
16909: LD_INT 1
16911: NEG
16912: PUSH
16913: LD_INT 1
16915: PUSH
16916: EMPTY
16917: LIST
16918: LIST
16919: PUSH
16920: LD_INT 2
16922: NEG
16923: PUSH
16924: LD_INT 0
16926: PUSH
16927: EMPTY
16928: LIST
16929: LIST
16930: PUSH
16931: LD_INT 2
16933: NEG
16934: PUSH
16935: LD_INT 1
16937: NEG
16938: PUSH
16939: EMPTY
16940: LIST
16941: LIST
16942: PUSH
16943: LD_INT 1
16945: NEG
16946: PUSH
16947: LD_INT 3
16949: NEG
16950: PUSH
16951: EMPTY
16952: LIST
16953: LIST
16954: PUSH
16955: LD_INT 0
16957: PUSH
16958: LD_INT 3
16960: NEG
16961: PUSH
16962: EMPTY
16963: LIST
16964: LIST
16965: PUSH
16966: LD_INT 1
16968: PUSH
16969: LD_INT 2
16971: NEG
16972: PUSH
16973: EMPTY
16974: LIST
16975: LIST
16976: PUSH
16977: LD_INT 2
16979: PUSH
16980: LD_INT 1
16982: NEG
16983: PUSH
16984: EMPTY
16985: LIST
16986: LIST
16987: PUSH
16988: LD_INT 3
16990: PUSH
16991: LD_INT 0
16993: PUSH
16994: EMPTY
16995: LIST
16996: LIST
16997: PUSH
16998: LD_INT 3
17000: PUSH
17001: LD_INT 1
17003: PUSH
17004: EMPTY
17005: LIST
17006: LIST
17007: PUSH
17008: LD_INT 1
17010: PUSH
17011: LD_INT 3
17013: PUSH
17014: EMPTY
17015: LIST
17016: LIST
17017: PUSH
17018: LD_INT 0
17020: PUSH
17021: LD_INT 3
17023: PUSH
17024: EMPTY
17025: LIST
17026: LIST
17027: PUSH
17028: LD_INT 1
17030: NEG
17031: PUSH
17032: LD_INT 2
17034: PUSH
17035: EMPTY
17036: LIST
17037: LIST
17038: PUSH
17039: LD_INT 2
17041: NEG
17042: PUSH
17043: LD_INT 1
17045: PUSH
17046: EMPTY
17047: LIST
17048: LIST
17049: PUSH
17050: LD_INT 3
17052: NEG
17053: PUSH
17054: LD_INT 0
17056: PUSH
17057: EMPTY
17058: LIST
17059: LIST
17060: PUSH
17061: LD_INT 3
17063: NEG
17064: PUSH
17065: LD_INT 1
17067: NEG
17068: PUSH
17069: EMPTY
17070: LIST
17071: LIST
17072: PUSH
17073: EMPTY
17074: LIST
17075: LIST
17076: LIST
17077: LIST
17078: LIST
17079: LIST
17080: LIST
17081: LIST
17082: LIST
17083: LIST
17084: LIST
17085: LIST
17086: LIST
17087: LIST
17088: LIST
17089: LIST
17090: LIST
17091: LIST
17092: LIST
17093: LIST
17094: LIST
17095: LIST
17096: LIST
17097: LIST
17098: LIST
17099: LIST
17100: LIST
17101: LIST
17102: LIST
17103: ST_TO_ADDR
// Lab3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
17104: LD_ADDR_VAR 0 44
17108: PUSH
17109: LD_INT 0
17111: PUSH
17112: LD_INT 0
17114: PUSH
17115: EMPTY
17116: LIST
17117: LIST
17118: PUSH
17119: LD_INT 0
17121: PUSH
17122: LD_INT 1
17124: NEG
17125: PUSH
17126: EMPTY
17127: LIST
17128: LIST
17129: PUSH
17130: LD_INT 1
17132: PUSH
17133: LD_INT 0
17135: PUSH
17136: EMPTY
17137: LIST
17138: LIST
17139: PUSH
17140: LD_INT 1
17142: PUSH
17143: LD_INT 1
17145: PUSH
17146: EMPTY
17147: LIST
17148: LIST
17149: PUSH
17150: LD_INT 0
17152: PUSH
17153: LD_INT 1
17155: PUSH
17156: EMPTY
17157: LIST
17158: LIST
17159: PUSH
17160: LD_INT 1
17162: NEG
17163: PUSH
17164: LD_INT 0
17166: PUSH
17167: EMPTY
17168: LIST
17169: LIST
17170: PUSH
17171: LD_INT 1
17173: NEG
17174: PUSH
17175: LD_INT 1
17177: NEG
17178: PUSH
17179: EMPTY
17180: LIST
17181: LIST
17182: PUSH
17183: LD_INT 1
17185: NEG
17186: PUSH
17187: LD_INT 2
17189: NEG
17190: PUSH
17191: EMPTY
17192: LIST
17193: LIST
17194: PUSH
17195: LD_INT 1
17197: PUSH
17198: LD_INT 1
17200: NEG
17201: PUSH
17202: EMPTY
17203: LIST
17204: LIST
17205: PUSH
17206: LD_INT 2
17208: PUSH
17209: LD_INT 0
17211: PUSH
17212: EMPTY
17213: LIST
17214: LIST
17215: PUSH
17216: LD_INT 2
17218: PUSH
17219: LD_INT 1
17221: PUSH
17222: EMPTY
17223: LIST
17224: LIST
17225: PUSH
17226: LD_INT 2
17228: PUSH
17229: LD_INT 2
17231: PUSH
17232: EMPTY
17233: LIST
17234: LIST
17235: PUSH
17236: LD_INT 1
17238: PUSH
17239: LD_INT 2
17241: PUSH
17242: EMPTY
17243: LIST
17244: LIST
17245: PUSH
17246: LD_INT 1
17248: NEG
17249: PUSH
17250: LD_INT 1
17252: PUSH
17253: EMPTY
17254: LIST
17255: LIST
17256: PUSH
17257: LD_INT 2
17259: NEG
17260: PUSH
17261: LD_INT 0
17263: PUSH
17264: EMPTY
17265: LIST
17266: LIST
17267: PUSH
17268: LD_INT 2
17270: NEG
17271: PUSH
17272: LD_INT 1
17274: NEG
17275: PUSH
17276: EMPTY
17277: LIST
17278: LIST
17279: PUSH
17280: LD_INT 2
17282: NEG
17283: PUSH
17284: LD_INT 2
17286: NEG
17287: PUSH
17288: EMPTY
17289: LIST
17290: LIST
17291: PUSH
17292: LD_INT 2
17294: NEG
17295: PUSH
17296: LD_INT 3
17298: NEG
17299: PUSH
17300: EMPTY
17301: LIST
17302: LIST
17303: PUSH
17304: LD_INT 2
17306: PUSH
17307: LD_INT 1
17309: NEG
17310: PUSH
17311: EMPTY
17312: LIST
17313: LIST
17314: PUSH
17315: LD_INT 3
17317: PUSH
17318: LD_INT 0
17320: PUSH
17321: EMPTY
17322: LIST
17323: LIST
17324: PUSH
17325: LD_INT 3
17327: PUSH
17328: LD_INT 1
17330: PUSH
17331: EMPTY
17332: LIST
17333: LIST
17334: PUSH
17335: LD_INT 3
17337: PUSH
17338: LD_INT 2
17340: PUSH
17341: EMPTY
17342: LIST
17343: LIST
17344: PUSH
17345: LD_INT 3
17347: PUSH
17348: LD_INT 3
17350: PUSH
17351: EMPTY
17352: LIST
17353: LIST
17354: PUSH
17355: LD_INT 2
17357: PUSH
17358: LD_INT 3
17360: PUSH
17361: EMPTY
17362: LIST
17363: LIST
17364: PUSH
17365: LD_INT 2
17367: NEG
17368: PUSH
17369: LD_INT 1
17371: PUSH
17372: EMPTY
17373: LIST
17374: LIST
17375: PUSH
17376: LD_INT 3
17378: NEG
17379: PUSH
17380: LD_INT 0
17382: PUSH
17383: EMPTY
17384: LIST
17385: LIST
17386: PUSH
17387: LD_INT 3
17389: NEG
17390: PUSH
17391: LD_INT 1
17393: NEG
17394: PUSH
17395: EMPTY
17396: LIST
17397: LIST
17398: PUSH
17399: LD_INT 3
17401: NEG
17402: PUSH
17403: LD_INT 2
17405: NEG
17406: PUSH
17407: EMPTY
17408: LIST
17409: LIST
17410: PUSH
17411: LD_INT 3
17413: NEG
17414: PUSH
17415: LD_INT 3
17417: NEG
17418: PUSH
17419: EMPTY
17420: LIST
17421: LIST
17422: PUSH
17423: EMPTY
17424: LIST
17425: LIST
17426: LIST
17427: LIST
17428: LIST
17429: LIST
17430: LIST
17431: LIST
17432: LIST
17433: LIST
17434: LIST
17435: LIST
17436: LIST
17437: LIST
17438: LIST
17439: LIST
17440: LIST
17441: LIST
17442: LIST
17443: LIST
17444: LIST
17445: LIST
17446: LIST
17447: LIST
17448: LIST
17449: LIST
17450: LIST
17451: LIST
17452: LIST
17453: ST_TO_ADDR
// Lab4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
17454: LD_ADDR_VAR 0 45
17458: PUSH
17459: LD_INT 0
17461: PUSH
17462: LD_INT 0
17464: PUSH
17465: EMPTY
17466: LIST
17467: LIST
17468: PUSH
17469: LD_INT 0
17471: PUSH
17472: LD_INT 1
17474: NEG
17475: PUSH
17476: EMPTY
17477: LIST
17478: LIST
17479: PUSH
17480: LD_INT 1
17482: PUSH
17483: LD_INT 0
17485: PUSH
17486: EMPTY
17487: LIST
17488: LIST
17489: PUSH
17490: LD_INT 1
17492: PUSH
17493: LD_INT 1
17495: PUSH
17496: EMPTY
17497: LIST
17498: LIST
17499: PUSH
17500: LD_INT 0
17502: PUSH
17503: LD_INT 1
17505: PUSH
17506: EMPTY
17507: LIST
17508: LIST
17509: PUSH
17510: LD_INT 1
17512: NEG
17513: PUSH
17514: LD_INT 0
17516: PUSH
17517: EMPTY
17518: LIST
17519: LIST
17520: PUSH
17521: LD_INT 1
17523: NEG
17524: PUSH
17525: LD_INT 1
17527: NEG
17528: PUSH
17529: EMPTY
17530: LIST
17531: LIST
17532: PUSH
17533: LD_INT 1
17535: NEG
17536: PUSH
17537: LD_INT 2
17539: NEG
17540: PUSH
17541: EMPTY
17542: LIST
17543: LIST
17544: PUSH
17545: LD_INT 0
17547: PUSH
17548: LD_INT 2
17550: NEG
17551: PUSH
17552: EMPTY
17553: LIST
17554: LIST
17555: PUSH
17556: LD_INT 1
17558: PUSH
17559: LD_INT 1
17561: NEG
17562: PUSH
17563: EMPTY
17564: LIST
17565: LIST
17566: PUSH
17567: LD_INT 2
17569: PUSH
17570: LD_INT 1
17572: PUSH
17573: EMPTY
17574: LIST
17575: LIST
17576: PUSH
17577: LD_INT 2
17579: PUSH
17580: LD_INT 2
17582: PUSH
17583: EMPTY
17584: LIST
17585: LIST
17586: PUSH
17587: LD_INT 1
17589: PUSH
17590: LD_INT 2
17592: PUSH
17593: EMPTY
17594: LIST
17595: LIST
17596: PUSH
17597: LD_INT 0
17599: PUSH
17600: LD_INT 2
17602: PUSH
17603: EMPTY
17604: LIST
17605: LIST
17606: PUSH
17607: LD_INT 1
17609: NEG
17610: PUSH
17611: LD_INT 1
17613: PUSH
17614: EMPTY
17615: LIST
17616: LIST
17617: PUSH
17618: LD_INT 2
17620: NEG
17621: PUSH
17622: LD_INT 1
17624: NEG
17625: PUSH
17626: EMPTY
17627: LIST
17628: LIST
17629: PUSH
17630: LD_INT 2
17632: NEG
17633: PUSH
17634: LD_INT 2
17636: NEG
17637: PUSH
17638: EMPTY
17639: LIST
17640: LIST
17641: PUSH
17642: LD_INT 2
17644: NEG
17645: PUSH
17646: LD_INT 3
17648: NEG
17649: PUSH
17650: EMPTY
17651: LIST
17652: LIST
17653: PUSH
17654: LD_INT 1
17656: NEG
17657: PUSH
17658: LD_INT 3
17660: NEG
17661: PUSH
17662: EMPTY
17663: LIST
17664: LIST
17665: PUSH
17666: LD_INT 0
17668: PUSH
17669: LD_INT 3
17671: NEG
17672: PUSH
17673: EMPTY
17674: LIST
17675: LIST
17676: PUSH
17677: LD_INT 1
17679: PUSH
17680: LD_INT 2
17682: NEG
17683: PUSH
17684: EMPTY
17685: LIST
17686: LIST
17687: PUSH
17688: LD_INT 3
17690: PUSH
17691: LD_INT 2
17693: PUSH
17694: EMPTY
17695: LIST
17696: LIST
17697: PUSH
17698: LD_INT 3
17700: PUSH
17701: LD_INT 3
17703: PUSH
17704: EMPTY
17705: LIST
17706: LIST
17707: PUSH
17708: LD_INT 2
17710: PUSH
17711: LD_INT 3
17713: PUSH
17714: EMPTY
17715: LIST
17716: LIST
17717: PUSH
17718: LD_INT 1
17720: PUSH
17721: LD_INT 3
17723: PUSH
17724: EMPTY
17725: LIST
17726: LIST
17727: PUSH
17728: LD_INT 0
17730: PUSH
17731: LD_INT 3
17733: PUSH
17734: EMPTY
17735: LIST
17736: LIST
17737: PUSH
17738: LD_INT 1
17740: NEG
17741: PUSH
17742: LD_INT 2
17744: PUSH
17745: EMPTY
17746: LIST
17747: LIST
17748: PUSH
17749: LD_INT 3
17751: NEG
17752: PUSH
17753: LD_INT 2
17755: NEG
17756: PUSH
17757: EMPTY
17758: LIST
17759: LIST
17760: PUSH
17761: LD_INT 3
17763: NEG
17764: PUSH
17765: LD_INT 3
17767: NEG
17768: PUSH
17769: EMPTY
17770: LIST
17771: LIST
17772: PUSH
17773: EMPTY
17774: LIST
17775: LIST
17776: LIST
17777: LIST
17778: LIST
17779: LIST
17780: LIST
17781: LIST
17782: LIST
17783: LIST
17784: LIST
17785: LIST
17786: LIST
17787: LIST
17788: LIST
17789: LIST
17790: LIST
17791: LIST
17792: LIST
17793: LIST
17794: LIST
17795: LIST
17796: LIST
17797: LIST
17798: LIST
17799: LIST
17800: LIST
17801: LIST
17802: LIST
17803: ST_TO_ADDR
// Lab5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
17804: LD_ADDR_VAR 0 46
17808: PUSH
17809: LD_INT 0
17811: PUSH
17812: LD_INT 0
17814: PUSH
17815: EMPTY
17816: LIST
17817: LIST
17818: PUSH
17819: LD_INT 0
17821: PUSH
17822: LD_INT 1
17824: NEG
17825: PUSH
17826: EMPTY
17827: LIST
17828: LIST
17829: PUSH
17830: LD_INT 1
17832: PUSH
17833: LD_INT 0
17835: PUSH
17836: EMPTY
17837: LIST
17838: LIST
17839: PUSH
17840: LD_INT 1
17842: PUSH
17843: LD_INT 1
17845: PUSH
17846: EMPTY
17847: LIST
17848: LIST
17849: PUSH
17850: LD_INT 0
17852: PUSH
17853: LD_INT 1
17855: PUSH
17856: EMPTY
17857: LIST
17858: LIST
17859: PUSH
17860: LD_INT 1
17862: NEG
17863: PUSH
17864: LD_INT 0
17866: PUSH
17867: EMPTY
17868: LIST
17869: LIST
17870: PUSH
17871: LD_INT 1
17873: NEG
17874: PUSH
17875: LD_INT 1
17877: NEG
17878: PUSH
17879: EMPTY
17880: LIST
17881: LIST
17882: PUSH
17883: LD_INT 1
17885: NEG
17886: PUSH
17887: LD_INT 2
17889: NEG
17890: PUSH
17891: EMPTY
17892: LIST
17893: LIST
17894: PUSH
17895: LD_INT 0
17897: PUSH
17898: LD_INT 2
17900: NEG
17901: PUSH
17902: EMPTY
17903: LIST
17904: LIST
17905: PUSH
17906: LD_INT 1
17908: PUSH
17909: LD_INT 1
17911: NEG
17912: PUSH
17913: EMPTY
17914: LIST
17915: LIST
17916: PUSH
17917: LD_INT 2
17919: PUSH
17920: LD_INT 0
17922: PUSH
17923: EMPTY
17924: LIST
17925: LIST
17926: PUSH
17927: LD_INT 2
17929: PUSH
17930: LD_INT 1
17932: PUSH
17933: EMPTY
17934: LIST
17935: LIST
17936: PUSH
17937: LD_INT 1
17939: PUSH
17940: LD_INT 2
17942: PUSH
17943: EMPTY
17944: LIST
17945: LIST
17946: PUSH
17947: LD_INT 0
17949: PUSH
17950: LD_INT 2
17952: PUSH
17953: EMPTY
17954: LIST
17955: LIST
17956: PUSH
17957: LD_INT 1
17959: NEG
17960: PUSH
17961: LD_INT 1
17963: PUSH
17964: EMPTY
17965: LIST
17966: LIST
17967: PUSH
17968: LD_INT 2
17970: NEG
17971: PUSH
17972: LD_INT 0
17974: PUSH
17975: EMPTY
17976: LIST
17977: LIST
17978: PUSH
17979: LD_INT 2
17981: NEG
17982: PUSH
17983: LD_INT 1
17985: NEG
17986: PUSH
17987: EMPTY
17988: LIST
17989: LIST
17990: PUSH
17991: LD_INT 1
17993: NEG
17994: PUSH
17995: LD_INT 3
17997: NEG
17998: PUSH
17999: EMPTY
18000: LIST
18001: LIST
18002: PUSH
18003: LD_INT 0
18005: PUSH
18006: LD_INT 3
18008: NEG
18009: PUSH
18010: EMPTY
18011: LIST
18012: LIST
18013: PUSH
18014: LD_INT 1
18016: PUSH
18017: LD_INT 2
18019: NEG
18020: PUSH
18021: EMPTY
18022: LIST
18023: LIST
18024: PUSH
18025: LD_INT 2
18027: PUSH
18028: LD_INT 1
18030: NEG
18031: PUSH
18032: EMPTY
18033: LIST
18034: LIST
18035: PUSH
18036: LD_INT 3
18038: PUSH
18039: LD_INT 0
18041: PUSH
18042: EMPTY
18043: LIST
18044: LIST
18045: PUSH
18046: LD_INT 3
18048: PUSH
18049: LD_INT 1
18051: PUSH
18052: EMPTY
18053: LIST
18054: LIST
18055: PUSH
18056: LD_INT 1
18058: PUSH
18059: LD_INT 3
18061: PUSH
18062: EMPTY
18063: LIST
18064: LIST
18065: PUSH
18066: LD_INT 0
18068: PUSH
18069: LD_INT 3
18071: PUSH
18072: EMPTY
18073: LIST
18074: LIST
18075: PUSH
18076: LD_INT 1
18078: NEG
18079: PUSH
18080: LD_INT 2
18082: PUSH
18083: EMPTY
18084: LIST
18085: LIST
18086: PUSH
18087: LD_INT 2
18089: NEG
18090: PUSH
18091: LD_INT 1
18093: PUSH
18094: EMPTY
18095: LIST
18096: LIST
18097: PUSH
18098: LD_INT 3
18100: NEG
18101: PUSH
18102: LD_INT 0
18104: PUSH
18105: EMPTY
18106: LIST
18107: LIST
18108: PUSH
18109: LD_INT 3
18111: NEG
18112: PUSH
18113: LD_INT 1
18115: NEG
18116: PUSH
18117: EMPTY
18118: LIST
18119: LIST
18120: PUSH
18121: EMPTY
18122: LIST
18123: LIST
18124: LIST
18125: LIST
18126: LIST
18127: LIST
18128: LIST
18129: LIST
18130: LIST
18131: LIST
18132: LIST
18133: LIST
18134: LIST
18135: LIST
18136: LIST
18137: LIST
18138: LIST
18139: LIST
18140: LIST
18141: LIST
18142: LIST
18143: LIST
18144: LIST
18145: LIST
18146: LIST
18147: LIST
18148: LIST
18149: LIST
18150: LIST
18151: ST_TO_ADDR
// ControlTower0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
18152: LD_ADDR_VAR 0 47
18156: PUSH
18157: LD_INT 0
18159: PUSH
18160: LD_INT 0
18162: PUSH
18163: EMPTY
18164: LIST
18165: LIST
18166: PUSH
18167: LD_INT 0
18169: PUSH
18170: LD_INT 1
18172: NEG
18173: PUSH
18174: EMPTY
18175: LIST
18176: LIST
18177: PUSH
18178: LD_INT 1
18180: PUSH
18181: LD_INT 0
18183: PUSH
18184: EMPTY
18185: LIST
18186: LIST
18187: PUSH
18188: LD_INT 1
18190: PUSH
18191: LD_INT 1
18193: PUSH
18194: EMPTY
18195: LIST
18196: LIST
18197: PUSH
18198: LD_INT 0
18200: PUSH
18201: LD_INT 1
18203: PUSH
18204: EMPTY
18205: LIST
18206: LIST
18207: PUSH
18208: LD_INT 1
18210: NEG
18211: PUSH
18212: LD_INT 0
18214: PUSH
18215: EMPTY
18216: LIST
18217: LIST
18218: PUSH
18219: LD_INT 1
18221: NEG
18222: PUSH
18223: LD_INT 1
18225: NEG
18226: PUSH
18227: EMPTY
18228: LIST
18229: LIST
18230: PUSH
18231: LD_INT 1
18233: NEG
18234: PUSH
18235: LD_INT 2
18237: NEG
18238: PUSH
18239: EMPTY
18240: LIST
18241: LIST
18242: PUSH
18243: LD_INT 0
18245: PUSH
18246: LD_INT 2
18248: NEG
18249: PUSH
18250: EMPTY
18251: LIST
18252: LIST
18253: PUSH
18254: LD_INT 1
18256: PUSH
18257: LD_INT 1
18259: NEG
18260: PUSH
18261: EMPTY
18262: LIST
18263: LIST
18264: PUSH
18265: LD_INT 2
18267: NEG
18268: PUSH
18269: LD_INT 1
18271: NEG
18272: PUSH
18273: EMPTY
18274: LIST
18275: LIST
18276: PUSH
18277: LD_INT 2
18279: NEG
18280: PUSH
18281: LD_INT 2
18283: NEG
18284: PUSH
18285: EMPTY
18286: LIST
18287: LIST
18288: PUSH
18289: EMPTY
18290: LIST
18291: LIST
18292: LIST
18293: LIST
18294: LIST
18295: LIST
18296: LIST
18297: LIST
18298: LIST
18299: LIST
18300: LIST
18301: LIST
18302: ST_TO_ADDR
// ControlTower1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] ] ;
18303: LD_ADDR_VAR 0 48
18307: PUSH
18308: LD_INT 0
18310: PUSH
18311: LD_INT 0
18313: PUSH
18314: EMPTY
18315: LIST
18316: LIST
18317: PUSH
18318: LD_INT 0
18320: PUSH
18321: LD_INT 1
18323: NEG
18324: PUSH
18325: EMPTY
18326: LIST
18327: LIST
18328: PUSH
18329: LD_INT 1
18331: PUSH
18332: LD_INT 0
18334: PUSH
18335: EMPTY
18336: LIST
18337: LIST
18338: PUSH
18339: LD_INT 1
18341: PUSH
18342: LD_INT 1
18344: PUSH
18345: EMPTY
18346: LIST
18347: LIST
18348: PUSH
18349: LD_INT 0
18351: PUSH
18352: LD_INT 1
18354: PUSH
18355: EMPTY
18356: LIST
18357: LIST
18358: PUSH
18359: LD_INT 1
18361: NEG
18362: PUSH
18363: LD_INT 0
18365: PUSH
18366: EMPTY
18367: LIST
18368: LIST
18369: PUSH
18370: LD_INT 1
18372: NEG
18373: PUSH
18374: LD_INT 1
18376: NEG
18377: PUSH
18378: EMPTY
18379: LIST
18380: LIST
18381: PUSH
18382: LD_INT 1
18384: NEG
18385: PUSH
18386: LD_INT 2
18388: NEG
18389: PUSH
18390: EMPTY
18391: LIST
18392: LIST
18393: PUSH
18394: LD_INT 0
18396: PUSH
18397: LD_INT 2
18399: NEG
18400: PUSH
18401: EMPTY
18402: LIST
18403: LIST
18404: PUSH
18405: LD_INT 1
18407: PUSH
18408: LD_INT 1
18410: NEG
18411: PUSH
18412: EMPTY
18413: LIST
18414: LIST
18415: PUSH
18416: LD_INT 2
18418: PUSH
18419: LD_INT 0
18421: PUSH
18422: EMPTY
18423: LIST
18424: LIST
18425: PUSH
18426: LD_INT 2
18428: PUSH
18429: LD_INT 1
18431: PUSH
18432: EMPTY
18433: LIST
18434: LIST
18435: PUSH
18436: EMPTY
18437: LIST
18438: LIST
18439: LIST
18440: LIST
18441: LIST
18442: LIST
18443: LIST
18444: LIST
18445: LIST
18446: LIST
18447: LIST
18448: LIST
18449: ST_TO_ADDR
// ControlTower2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] ] ;
18450: LD_ADDR_VAR 0 49
18454: PUSH
18455: LD_INT 0
18457: PUSH
18458: LD_INT 0
18460: PUSH
18461: EMPTY
18462: LIST
18463: LIST
18464: PUSH
18465: LD_INT 0
18467: PUSH
18468: LD_INT 1
18470: NEG
18471: PUSH
18472: EMPTY
18473: LIST
18474: LIST
18475: PUSH
18476: LD_INT 1
18478: PUSH
18479: LD_INT 0
18481: PUSH
18482: EMPTY
18483: LIST
18484: LIST
18485: PUSH
18486: LD_INT 1
18488: PUSH
18489: LD_INT 1
18491: PUSH
18492: EMPTY
18493: LIST
18494: LIST
18495: PUSH
18496: LD_INT 0
18498: PUSH
18499: LD_INT 1
18501: PUSH
18502: EMPTY
18503: LIST
18504: LIST
18505: PUSH
18506: LD_INT 1
18508: NEG
18509: PUSH
18510: LD_INT 0
18512: PUSH
18513: EMPTY
18514: LIST
18515: LIST
18516: PUSH
18517: LD_INT 1
18519: NEG
18520: PUSH
18521: LD_INT 1
18523: NEG
18524: PUSH
18525: EMPTY
18526: LIST
18527: LIST
18528: PUSH
18529: LD_INT 1
18531: PUSH
18532: LD_INT 1
18534: NEG
18535: PUSH
18536: EMPTY
18537: LIST
18538: LIST
18539: PUSH
18540: LD_INT 2
18542: PUSH
18543: LD_INT 0
18545: PUSH
18546: EMPTY
18547: LIST
18548: LIST
18549: PUSH
18550: LD_INT 2
18552: PUSH
18553: LD_INT 1
18555: PUSH
18556: EMPTY
18557: LIST
18558: LIST
18559: PUSH
18560: LD_INT 2
18562: PUSH
18563: LD_INT 2
18565: PUSH
18566: EMPTY
18567: LIST
18568: LIST
18569: PUSH
18570: LD_INT 1
18572: PUSH
18573: LD_INT 2
18575: PUSH
18576: EMPTY
18577: LIST
18578: LIST
18579: PUSH
18580: EMPTY
18581: LIST
18582: LIST
18583: LIST
18584: LIST
18585: LIST
18586: LIST
18587: LIST
18588: LIST
18589: LIST
18590: LIST
18591: LIST
18592: LIST
18593: ST_TO_ADDR
// ControlTower3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] ] ;
18594: LD_ADDR_VAR 0 50
18598: PUSH
18599: LD_INT 0
18601: PUSH
18602: LD_INT 0
18604: PUSH
18605: EMPTY
18606: LIST
18607: LIST
18608: PUSH
18609: LD_INT 0
18611: PUSH
18612: LD_INT 1
18614: NEG
18615: PUSH
18616: EMPTY
18617: LIST
18618: LIST
18619: PUSH
18620: LD_INT 1
18622: PUSH
18623: LD_INT 0
18625: PUSH
18626: EMPTY
18627: LIST
18628: LIST
18629: PUSH
18630: LD_INT 1
18632: PUSH
18633: LD_INT 1
18635: PUSH
18636: EMPTY
18637: LIST
18638: LIST
18639: PUSH
18640: LD_INT 0
18642: PUSH
18643: LD_INT 1
18645: PUSH
18646: EMPTY
18647: LIST
18648: LIST
18649: PUSH
18650: LD_INT 1
18652: NEG
18653: PUSH
18654: LD_INT 0
18656: PUSH
18657: EMPTY
18658: LIST
18659: LIST
18660: PUSH
18661: LD_INT 1
18663: NEG
18664: PUSH
18665: LD_INT 1
18667: NEG
18668: PUSH
18669: EMPTY
18670: LIST
18671: LIST
18672: PUSH
18673: LD_INT 2
18675: PUSH
18676: LD_INT 1
18678: PUSH
18679: EMPTY
18680: LIST
18681: LIST
18682: PUSH
18683: LD_INT 2
18685: PUSH
18686: LD_INT 2
18688: PUSH
18689: EMPTY
18690: LIST
18691: LIST
18692: PUSH
18693: LD_INT 1
18695: PUSH
18696: LD_INT 2
18698: PUSH
18699: EMPTY
18700: LIST
18701: LIST
18702: PUSH
18703: LD_INT 0
18705: PUSH
18706: LD_INT 2
18708: PUSH
18709: EMPTY
18710: LIST
18711: LIST
18712: PUSH
18713: LD_INT 1
18715: NEG
18716: PUSH
18717: LD_INT 1
18719: PUSH
18720: EMPTY
18721: LIST
18722: LIST
18723: PUSH
18724: EMPTY
18725: LIST
18726: LIST
18727: LIST
18728: LIST
18729: LIST
18730: LIST
18731: LIST
18732: LIST
18733: LIST
18734: LIST
18735: LIST
18736: LIST
18737: ST_TO_ADDR
// ControlTower4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] ] ;
18738: LD_ADDR_VAR 0 51
18742: PUSH
18743: LD_INT 0
18745: PUSH
18746: LD_INT 0
18748: PUSH
18749: EMPTY
18750: LIST
18751: LIST
18752: PUSH
18753: LD_INT 0
18755: PUSH
18756: LD_INT 1
18758: NEG
18759: PUSH
18760: EMPTY
18761: LIST
18762: LIST
18763: PUSH
18764: LD_INT 1
18766: PUSH
18767: LD_INT 0
18769: PUSH
18770: EMPTY
18771: LIST
18772: LIST
18773: PUSH
18774: LD_INT 1
18776: PUSH
18777: LD_INT 1
18779: PUSH
18780: EMPTY
18781: LIST
18782: LIST
18783: PUSH
18784: LD_INT 0
18786: PUSH
18787: LD_INT 1
18789: PUSH
18790: EMPTY
18791: LIST
18792: LIST
18793: PUSH
18794: LD_INT 1
18796: NEG
18797: PUSH
18798: LD_INT 0
18800: PUSH
18801: EMPTY
18802: LIST
18803: LIST
18804: PUSH
18805: LD_INT 1
18807: NEG
18808: PUSH
18809: LD_INT 1
18811: NEG
18812: PUSH
18813: EMPTY
18814: LIST
18815: LIST
18816: PUSH
18817: LD_INT 1
18819: PUSH
18820: LD_INT 2
18822: PUSH
18823: EMPTY
18824: LIST
18825: LIST
18826: PUSH
18827: LD_INT 0
18829: PUSH
18830: LD_INT 2
18832: PUSH
18833: EMPTY
18834: LIST
18835: LIST
18836: PUSH
18837: LD_INT 1
18839: NEG
18840: PUSH
18841: LD_INT 1
18843: PUSH
18844: EMPTY
18845: LIST
18846: LIST
18847: PUSH
18848: LD_INT 2
18850: NEG
18851: PUSH
18852: LD_INT 0
18854: PUSH
18855: EMPTY
18856: LIST
18857: LIST
18858: PUSH
18859: LD_INT 2
18861: NEG
18862: PUSH
18863: LD_INT 1
18865: NEG
18866: PUSH
18867: EMPTY
18868: LIST
18869: LIST
18870: PUSH
18871: EMPTY
18872: LIST
18873: LIST
18874: LIST
18875: LIST
18876: LIST
18877: LIST
18878: LIST
18879: LIST
18880: LIST
18881: LIST
18882: LIST
18883: LIST
18884: ST_TO_ADDR
// ControlTower5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
18885: LD_ADDR_VAR 0 52
18889: PUSH
18890: LD_INT 0
18892: PUSH
18893: LD_INT 0
18895: PUSH
18896: EMPTY
18897: LIST
18898: LIST
18899: PUSH
18900: LD_INT 0
18902: PUSH
18903: LD_INT 1
18905: NEG
18906: PUSH
18907: EMPTY
18908: LIST
18909: LIST
18910: PUSH
18911: LD_INT 1
18913: PUSH
18914: LD_INT 0
18916: PUSH
18917: EMPTY
18918: LIST
18919: LIST
18920: PUSH
18921: LD_INT 1
18923: PUSH
18924: LD_INT 1
18926: PUSH
18927: EMPTY
18928: LIST
18929: LIST
18930: PUSH
18931: LD_INT 0
18933: PUSH
18934: LD_INT 1
18936: PUSH
18937: EMPTY
18938: LIST
18939: LIST
18940: PUSH
18941: LD_INT 1
18943: NEG
18944: PUSH
18945: LD_INT 0
18947: PUSH
18948: EMPTY
18949: LIST
18950: LIST
18951: PUSH
18952: LD_INT 1
18954: NEG
18955: PUSH
18956: LD_INT 1
18958: NEG
18959: PUSH
18960: EMPTY
18961: LIST
18962: LIST
18963: PUSH
18964: LD_INT 1
18966: NEG
18967: PUSH
18968: LD_INT 2
18970: NEG
18971: PUSH
18972: EMPTY
18973: LIST
18974: LIST
18975: PUSH
18976: LD_INT 1
18978: NEG
18979: PUSH
18980: LD_INT 1
18982: PUSH
18983: EMPTY
18984: LIST
18985: LIST
18986: PUSH
18987: LD_INT 2
18989: NEG
18990: PUSH
18991: LD_INT 0
18993: PUSH
18994: EMPTY
18995: LIST
18996: LIST
18997: PUSH
18998: LD_INT 2
19000: NEG
19001: PUSH
19002: LD_INT 1
19004: NEG
19005: PUSH
19006: EMPTY
19007: LIST
19008: LIST
19009: PUSH
19010: LD_INT 2
19012: NEG
19013: PUSH
19014: LD_INT 2
19016: NEG
19017: PUSH
19018: EMPTY
19019: LIST
19020: LIST
19021: PUSH
19022: EMPTY
19023: LIST
19024: LIST
19025: LIST
19026: LIST
19027: LIST
19028: LIST
19029: LIST
19030: LIST
19031: LIST
19032: LIST
19033: LIST
19034: LIST
19035: ST_TO_ADDR
// Barracks0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19036: LD_ADDR_VAR 0 53
19040: PUSH
19041: LD_INT 0
19043: PUSH
19044: LD_INT 0
19046: PUSH
19047: EMPTY
19048: LIST
19049: LIST
19050: PUSH
19051: LD_INT 0
19053: PUSH
19054: LD_INT 1
19056: NEG
19057: PUSH
19058: EMPTY
19059: LIST
19060: LIST
19061: PUSH
19062: LD_INT 1
19064: PUSH
19065: LD_INT 0
19067: PUSH
19068: EMPTY
19069: LIST
19070: LIST
19071: PUSH
19072: LD_INT 1
19074: PUSH
19075: LD_INT 1
19077: PUSH
19078: EMPTY
19079: LIST
19080: LIST
19081: PUSH
19082: LD_INT 0
19084: PUSH
19085: LD_INT 1
19087: PUSH
19088: EMPTY
19089: LIST
19090: LIST
19091: PUSH
19092: LD_INT 1
19094: NEG
19095: PUSH
19096: LD_INT 0
19098: PUSH
19099: EMPTY
19100: LIST
19101: LIST
19102: PUSH
19103: LD_INT 1
19105: NEG
19106: PUSH
19107: LD_INT 1
19109: NEG
19110: PUSH
19111: EMPTY
19112: LIST
19113: LIST
19114: PUSH
19115: LD_INT 1
19117: NEG
19118: PUSH
19119: LD_INT 2
19121: NEG
19122: PUSH
19123: EMPTY
19124: LIST
19125: LIST
19126: PUSH
19127: LD_INT 0
19129: PUSH
19130: LD_INT 2
19132: NEG
19133: PUSH
19134: EMPTY
19135: LIST
19136: LIST
19137: PUSH
19138: LD_INT 1
19140: PUSH
19141: LD_INT 1
19143: NEG
19144: PUSH
19145: EMPTY
19146: LIST
19147: LIST
19148: PUSH
19149: LD_INT 2
19151: PUSH
19152: LD_INT 0
19154: PUSH
19155: EMPTY
19156: LIST
19157: LIST
19158: PUSH
19159: LD_INT 2
19161: PUSH
19162: LD_INT 1
19164: PUSH
19165: EMPTY
19166: LIST
19167: LIST
19168: PUSH
19169: LD_INT 2
19171: PUSH
19172: LD_INT 2
19174: PUSH
19175: EMPTY
19176: LIST
19177: LIST
19178: PUSH
19179: LD_INT 1
19181: PUSH
19182: LD_INT 2
19184: PUSH
19185: EMPTY
19186: LIST
19187: LIST
19188: PUSH
19189: LD_INT 0
19191: PUSH
19192: LD_INT 2
19194: PUSH
19195: EMPTY
19196: LIST
19197: LIST
19198: PUSH
19199: LD_INT 1
19201: NEG
19202: PUSH
19203: LD_INT 1
19205: PUSH
19206: EMPTY
19207: LIST
19208: LIST
19209: PUSH
19210: LD_INT 2
19212: NEG
19213: PUSH
19214: LD_INT 0
19216: PUSH
19217: EMPTY
19218: LIST
19219: LIST
19220: PUSH
19221: LD_INT 2
19223: NEG
19224: PUSH
19225: LD_INT 1
19227: NEG
19228: PUSH
19229: EMPTY
19230: LIST
19231: LIST
19232: PUSH
19233: LD_INT 2
19235: NEG
19236: PUSH
19237: LD_INT 2
19239: NEG
19240: PUSH
19241: EMPTY
19242: LIST
19243: LIST
19244: PUSH
19245: EMPTY
19246: LIST
19247: LIST
19248: LIST
19249: LIST
19250: LIST
19251: LIST
19252: LIST
19253: LIST
19254: LIST
19255: LIST
19256: LIST
19257: LIST
19258: LIST
19259: LIST
19260: LIST
19261: LIST
19262: LIST
19263: LIST
19264: LIST
19265: ST_TO_ADDR
// Barracks1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19266: LD_ADDR_VAR 0 54
19270: PUSH
19271: LD_INT 0
19273: PUSH
19274: LD_INT 0
19276: PUSH
19277: EMPTY
19278: LIST
19279: LIST
19280: PUSH
19281: LD_INT 0
19283: PUSH
19284: LD_INT 1
19286: NEG
19287: PUSH
19288: EMPTY
19289: LIST
19290: LIST
19291: PUSH
19292: LD_INT 1
19294: PUSH
19295: LD_INT 0
19297: PUSH
19298: EMPTY
19299: LIST
19300: LIST
19301: PUSH
19302: LD_INT 1
19304: PUSH
19305: LD_INT 1
19307: PUSH
19308: EMPTY
19309: LIST
19310: LIST
19311: PUSH
19312: LD_INT 0
19314: PUSH
19315: LD_INT 1
19317: PUSH
19318: EMPTY
19319: LIST
19320: LIST
19321: PUSH
19322: LD_INT 1
19324: NEG
19325: PUSH
19326: LD_INT 0
19328: PUSH
19329: EMPTY
19330: LIST
19331: LIST
19332: PUSH
19333: LD_INT 1
19335: NEG
19336: PUSH
19337: LD_INT 1
19339: NEG
19340: PUSH
19341: EMPTY
19342: LIST
19343: LIST
19344: PUSH
19345: LD_INT 1
19347: NEG
19348: PUSH
19349: LD_INT 2
19351: NEG
19352: PUSH
19353: EMPTY
19354: LIST
19355: LIST
19356: PUSH
19357: LD_INT 0
19359: PUSH
19360: LD_INT 2
19362: NEG
19363: PUSH
19364: EMPTY
19365: LIST
19366: LIST
19367: PUSH
19368: LD_INT 1
19370: PUSH
19371: LD_INT 1
19373: NEG
19374: PUSH
19375: EMPTY
19376: LIST
19377: LIST
19378: PUSH
19379: LD_INT 2
19381: PUSH
19382: LD_INT 0
19384: PUSH
19385: EMPTY
19386: LIST
19387: LIST
19388: PUSH
19389: LD_INT 2
19391: PUSH
19392: LD_INT 1
19394: PUSH
19395: EMPTY
19396: LIST
19397: LIST
19398: PUSH
19399: LD_INT 2
19401: PUSH
19402: LD_INT 2
19404: PUSH
19405: EMPTY
19406: LIST
19407: LIST
19408: PUSH
19409: LD_INT 1
19411: PUSH
19412: LD_INT 2
19414: PUSH
19415: EMPTY
19416: LIST
19417: LIST
19418: PUSH
19419: LD_INT 0
19421: PUSH
19422: LD_INT 2
19424: PUSH
19425: EMPTY
19426: LIST
19427: LIST
19428: PUSH
19429: LD_INT 1
19431: NEG
19432: PUSH
19433: LD_INT 1
19435: PUSH
19436: EMPTY
19437: LIST
19438: LIST
19439: PUSH
19440: LD_INT 2
19442: NEG
19443: PUSH
19444: LD_INT 0
19446: PUSH
19447: EMPTY
19448: LIST
19449: LIST
19450: PUSH
19451: LD_INT 2
19453: NEG
19454: PUSH
19455: LD_INT 1
19457: NEG
19458: PUSH
19459: EMPTY
19460: LIST
19461: LIST
19462: PUSH
19463: LD_INT 2
19465: NEG
19466: PUSH
19467: LD_INT 2
19469: NEG
19470: PUSH
19471: EMPTY
19472: LIST
19473: LIST
19474: PUSH
19475: EMPTY
19476: LIST
19477: LIST
19478: LIST
19479: LIST
19480: LIST
19481: LIST
19482: LIST
19483: LIST
19484: LIST
19485: LIST
19486: LIST
19487: LIST
19488: LIST
19489: LIST
19490: LIST
19491: LIST
19492: LIST
19493: LIST
19494: LIST
19495: ST_TO_ADDR
// Barracks2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19496: LD_ADDR_VAR 0 55
19500: PUSH
19501: LD_INT 0
19503: PUSH
19504: LD_INT 0
19506: PUSH
19507: EMPTY
19508: LIST
19509: LIST
19510: PUSH
19511: LD_INT 0
19513: PUSH
19514: LD_INT 1
19516: NEG
19517: PUSH
19518: EMPTY
19519: LIST
19520: LIST
19521: PUSH
19522: LD_INT 1
19524: PUSH
19525: LD_INT 0
19527: PUSH
19528: EMPTY
19529: LIST
19530: LIST
19531: PUSH
19532: LD_INT 1
19534: PUSH
19535: LD_INT 1
19537: PUSH
19538: EMPTY
19539: LIST
19540: LIST
19541: PUSH
19542: LD_INT 0
19544: PUSH
19545: LD_INT 1
19547: PUSH
19548: EMPTY
19549: LIST
19550: LIST
19551: PUSH
19552: LD_INT 1
19554: NEG
19555: PUSH
19556: LD_INT 0
19558: PUSH
19559: EMPTY
19560: LIST
19561: LIST
19562: PUSH
19563: LD_INT 1
19565: NEG
19566: PUSH
19567: LD_INT 1
19569: NEG
19570: PUSH
19571: EMPTY
19572: LIST
19573: LIST
19574: PUSH
19575: LD_INT 1
19577: NEG
19578: PUSH
19579: LD_INT 2
19581: NEG
19582: PUSH
19583: EMPTY
19584: LIST
19585: LIST
19586: PUSH
19587: LD_INT 0
19589: PUSH
19590: LD_INT 2
19592: NEG
19593: PUSH
19594: EMPTY
19595: LIST
19596: LIST
19597: PUSH
19598: LD_INT 1
19600: PUSH
19601: LD_INT 1
19603: NEG
19604: PUSH
19605: EMPTY
19606: LIST
19607: LIST
19608: PUSH
19609: LD_INT 2
19611: PUSH
19612: LD_INT 0
19614: PUSH
19615: EMPTY
19616: LIST
19617: LIST
19618: PUSH
19619: LD_INT 2
19621: PUSH
19622: LD_INT 1
19624: PUSH
19625: EMPTY
19626: LIST
19627: LIST
19628: PUSH
19629: LD_INT 2
19631: PUSH
19632: LD_INT 2
19634: PUSH
19635: EMPTY
19636: LIST
19637: LIST
19638: PUSH
19639: LD_INT 1
19641: PUSH
19642: LD_INT 2
19644: PUSH
19645: EMPTY
19646: LIST
19647: LIST
19648: PUSH
19649: LD_INT 0
19651: PUSH
19652: LD_INT 2
19654: PUSH
19655: EMPTY
19656: LIST
19657: LIST
19658: PUSH
19659: LD_INT 1
19661: NEG
19662: PUSH
19663: LD_INT 1
19665: PUSH
19666: EMPTY
19667: LIST
19668: LIST
19669: PUSH
19670: LD_INT 2
19672: NEG
19673: PUSH
19674: LD_INT 0
19676: PUSH
19677: EMPTY
19678: LIST
19679: LIST
19680: PUSH
19681: LD_INT 2
19683: NEG
19684: PUSH
19685: LD_INT 1
19687: NEG
19688: PUSH
19689: EMPTY
19690: LIST
19691: LIST
19692: PUSH
19693: LD_INT 2
19695: NEG
19696: PUSH
19697: LD_INT 2
19699: NEG
19700: PUSH
19701: EMPTY
19702: LIST
19703: LIST
19704: PUSH
19705: EMPTY
19706: LIST
19707: LIST
19708: LIST
19709: LIST
19710: LIST
19711: LIST
19712: LIST
19713: LIST
19714: LIST
19715: LIST
19716: LIST
19717: LIST
19718: LIST
19719: LIST
19720: LIST
19721: LIST
19722: LIST
19723: LIST
19724: LIST
19725: ST_TO_ADDR
// Barracks3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19726: LD_ADDR_VAR 0 56
19730: PUSH
19731: LD_INT 0
19733: PUSH
19734: LD_INT 0
19736: PUSH
19737: EMPTY
19738: LIST
19739: LIST
19740: PUSH
19741: LD_INT 0
19743: PUSH
19744: LD_INT 1
19746: NEG
19747: PUSH
19748: EMPTY
19749: LIST
19750: LIST
19751: PUSH
19752: LD_INT 1
19754: PUSH
19755: LD_INT 0
19757: PUSH
19758: EMPTY
19759: LIST
19760: LIST
19761: PUSH
19762: LD_INT 1
19764: PUSH
19765: LD_INT 1
19767: PUSH
19768: EMPTY
19769: LIST
19770: LIST
19771: PUSH
19772: LD_INT 0
19774: PUSH
19775: LD_INT 1
19777: PUSH
19778: EMPTY
19779: LIST
19780: LIST
19781: PUSH
19782: LD_INT 1
19784: NEG
19785: PUSH
19786: LD_INT 0
19788: PUSH
19789: EMPTY
19790: LIST
19791: LIST
19792: PUSH
19793: LD_INT 1
19795: NEG
19796: PUSH
19797: LD_INT 1
19799: NEG
19800: PUSH
19801: EMPTY
19802: LIST
19803: LIST
19804: PUSH
19805: LD_INT 1
19807: NEG
19808: PUSH
19809: LD_INT 2
19811: NEG
19812: PUSH
19813: EMPTY
19814: LIST
19815: LIST
19816: PUSH
19817: LD_INT 0
19819: PUSH
19820: LD_INT 2
19822: NEG
19823: PUSH
19824: EMPTY
19825: LIST
19826: LIST
19827: PUSH
19828: LD_INT 1
19830: PUSH
19831: LD_INT 1
19833: NEG
19834: PUSH
19835: EMPTY
19836: LIST
19837: LIST
19838: PUSH
19839: LD_INT 2
19841: PUSH
19842: LD_INT 0
19844: PUSH
19845: EMPTY
19846: LIST
19847: LIST
19848: PUSH
19849: LD_INT 2
19851: PUSH
19852: LD_INT 1
19854: PUSH
19855: EMPTY
19856: LIST
19857: LIST
19858: PUSH
19859: LD_INT 2
19861: PUSH
19862: LD_INT 2
19864: PUSH
19865: EMPTY
19866: LIST
19867: LIST
19868: PUSH
19869: LD_INT 1
19871: PUSH
19872: LD_INT 2
19874: PUSH
19875: EMPTY
19876: LIST
19877: LIST
19878: PUSH
19879: LD_INT 0
19881: PUSH
19882: LD_INT 2
19884: PUSH
19885: EMPTY
19886: LIST
19887: LIST
19888: PUSH
19889: LD_INT 1
19891: NEG
19892: PUSH
19893: LD_INT 1
19895: PUSH
19896: EMPTY
19897: LIST
19898: LIST
19899: PUSH
19900: LD_INT 2
19902: NEG
19903: PUSH
19904: LD_INT 0
19906: PUSH
19907: EMPTY
19908: LIST
19909: LIST
19910: PUSH
19911: LD_INT 2
19913: NEG
19914: PUSH
19915: LD_INT 1
19917: NEG
19918: PUSH
19919: EMPTY
19920: LIST
19921: LIST
19922: PUSH
19923: LD_INT 2
19925: NEG
19926: PUSH
19927: LD_INT 2
19929: NEG
19930: PUSH
19931: EMPTY
19932: LIST
19933: LIST
19934: PUSH
19935: EMPTY
19936: LIST
19937: LIST
19938: LIST
19939: LIST
19940: LIST
19941: LIST
19942: LIST
19943: LIST
19944: LIST
19945: LIST
19946: LIST
19947: LIST
19948: LIST
19949: LIST
19950: LIST
19951: LIST
19952: LIST
19953: LIST
19954: LIST
19955: ST_TO_ADDR
// Barracks4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19956: LD_ADDR_VAR 0 57
19960: PUSH
19961: LD_INT 0
19963: PUSH
19964: LD_INT 0
19966: PUSH
19967: EMPTY
19968: LIST
19969: LIST
19970: PUSH
19971: LD_INT 0
19973: PUSH
19974: LD_INT 1
19976: NEG
19977: PUSH
19978: EMPTY
19979: LIST
19980: LIST
19981: PUSH
19982: LD_INT 1
19984: PUSH
19985: LD_INT 0
19987: PUSH
19988: EMPTY
19989: LIST
19990: LIST
19991: PUSH
19992: LD_INT 1
19994: PUSH
19995: LD_INT 1
19997: PUSH
19998: EMPTY
19999: LIST
20000: LIST
20001: PUSH
20002: LD_INT 0
20004: PUSH
20005: LD_INT 1
20007: PUSH
20008: EMPTY
20009: LIST
20010: LIST
20011: PUSH
20012: LD_INT 1
20014: NEG
20015: PUSH
20016: LD_INT 0
20018: PUSH
20019: EMPTY
20020: LIST
20021: LIST
20022: PUSH
20023: LD_INT 1
20025: NEG
20026: PUSH
20027: LD_INT 1
20029: NEG
20030: PUSH
20031: EMPTY
20032: LIST
20033: LIST
20034: PUSH
20035: LD_INT 1
20037: NEG
20038: PUSH
20039: LD_INT 2
20041: NEG
20042: PUSH
20043: EMPTY
20044: LIST
20045: LIST
20046: PUSH
20047: LD_INT 0
20049: PUSH
20050: LD_INT 2
20052: NEG
20053: PUSH
20054: EMPTY
20055: LIST
20056: LIST
20057: PUSH
20058: LD_INT 1
20060: PUSH
20061: LD_INT 1
20063: NEG
20064: PUSH
20065: EMPTY
20066: LIST
20067: LIST
20068: PUSH
20069: LD_INT 2
20071: PUSH
20072: LD_INT 0
20074: PUSH
20075: EMPTY
20076: LIST
20077: LIST
20078: PUSH
20079: LD_INT 2
20081: PUSH
20082: LD_INT 1
20084: PUSH
20085: EMPTY
20086: LIST
20087: LIST
20088: PUSH
20089: LD_INT 2
20091: PUSH
20092: LD_INT 2
20094: PUSH
20095: EMPTY
20096: LIST
20097: LIST
20098: PUSH
20099: LD_INT 1
20101: PUSH
20102: LD_INT 2
20104: PUSH
20105: EMPTY
20106: LIST
20107: LIST
20108: PUSH
20109: LD_INT 0
20111: PUSH
20112: LD_INT 2
20114: PUSH
20115: EMPTY
20116: LIST
20117: LIST
20118: PUSH
20119: LD_INT 1
20121: NEG
20122: PUSH
20123: LD_INT 1
20125: PUSH
20126: EMPTY
20127: LIST
20128: LIST
20129: PUSH
20130: LD_INT 2
20132: NEG
20133: PUSH
20134: LD_INT 0
20136: PUSH
20137: EMPTY
20138: LIST
20139: LIST
20140: PUSH
20141: LD_INT 2
20143: NEG
20144: PUSH
20145: LD_INT 1
20147: NEG
20148: PUSH
20149: EMPTY
20150: LIST
20151: LIST
20152: PUSH
20153: LD_INT 2
20155: NEG
20156: PUSH
20157: LD_INT 2
20159: NEG
20160: PUSH
20161: EMPTY
20162: LIST
20163: LIST
20164: PUSH
20165: EMPTY
20166: LIST
20167: LIST
20168: LIST
20169: LIST
20170: LIST
20171: LIST
20172: LIST
20173: LIST
20174: LIST
20175: LIST
20176: LIST
20177: LIST
20178: LIST
20179: LIST
20180: LIST
20181: LIST
20182: LIST
20183: LIST
20184: LIST
20185: ST_TO_ADDR
// Barracks5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
20186: LD_ADDR_VAR 0 58
20190: PUSH
20191: LD_INT 0
20193: PUSH
20194: LD_INT 0
20196: PUSH
20197: EMPTY
20198: LIST
20199: LIST
20200: PUSH
20201: LD_INT 0
20203: PUSH
20204: LD_INT 1
20206: NEG
20207: PUSH
20208: EMPTY
20209: LIST
20210: LIST
20211: PUSH
20212: LD_INT 1
20214: PUSH
20215: LD_INT 0
20217: PUSH
20218: EMPTY
20219: LIST
20220: LIST
20221: PUSH
20222: LD_INT 1
20224: PUSH
20225: LD_INT 1
20227: PUSH
20228: EMPTY
20229: LIST
20230: LIST
20231: PUSH
20232: LD_INT 0
20234: PUSH
20235: LD_INT 1
20237: PUSH
20238: EMPTY
20239: LIST
20240: LIST
20241: PUSH
20242: LD_INT 1
20244: NEG
20245: PUSH
20246: LD_INT 0
20248: PUSH
20249: EMPTY
20250: LIST
20251: LIST
20252: PUSH
20253: LD_INT 1
20255: NEG
20256: PUSH
20257: LD_INT 1
20259: NEG
20260: PUSH
20261: EMPTY
20262: LIST
20263: LIST
20264: PUSH
20265: LD_INT 1
20267: NEG
20268: PUSH
20269: LD_INT 2
20271: NEG
20272: PUSH
20273: EMPTY
20274: LIST
20275: LIST
20276: PUSH
20277: LD_INT 0
20279: PUSH
20280: LD_INT 2
20282: NEG
20283: PUSH
20284: EMPTY
20285: LIST
20286: LIST
20287: PUSH
20288: LD_INT 1
20290: PUSH
20291: LD_INT 1
20293: NEG
20294: PUSH
20295: EMPTY
20296: LIST
20297: LIST
20298: PUSH
20299: LD_INT 2
20301: PUSH
20302: LD_INT 0
20304: PUSH
20305: EMPTY
20306: LIST
20307: LIST
20308: PUSH
20309: LD_INT 2
20311: PUSH
20312: LD_INT 1
20314: PUSH
20315: EMPTY
20316: LIST
20317: LIST
20318: PUSH
20319: LD_INT 2
20321: PUSH
20322: LD_INT 2
20324: PUSH
20325: EMPTY
20326: LIST
20327: LIST
20328: PUSH
20329: LD_INT 1
20331: PUSH
20332: LD_INT 2
20334: PUSH
20335: EMPTY
20336: LIST
20337: LIST
20338: PUSH
20339: LD_INT 0
20341: PUSH
20342: LD_INT 2
20344: PUSH
20345: EMPTY
20346: LIST
20347: LIST
20348: PUSH
20349: LD_INT 1
20351: NEG
20352: PUSH
20353: LD_INT 1
20355: PUSH
20356: EMPTY
20357: LIST
20358: LIST
20359: PUSH
20360: LD_INT 2
20362: NEG
20363: PUSH
20364: LD_INT 0
20366: PUSH
20367: EMPTY
20368: LIST
20369: LIST
20370: PUSH
20371: LD_INT 2
20373: NEG
20374: PUSH
20375: LD_INT 1
20377: NEG
20378: PUSH
20379: EMPTY
20380: LIST
20381: LIST
20382: PUSH
20383: LD_INT 2
20385: NEG
20386: PUSH
20387: LD_INT 2
20389: NEG
20390: PUSH
20391: EMPTY
20392: LIST
20393: LIST
20394: PUSH
20395: EMPTY
20396: LIST
20397: LIST
20398: LIST
20399: LIST
20400: LIST
20401: LIST
20402: LIST
20403: LIST
20404: LIST
20405: LIST
20406: LIST
20407: LIST
20408: LIST
20409: LIST
20410: LIST
20411: LIST
20412: LIST
20413: LIST
20414: LIST
20415: ST_TO_ADDR
// Bunker0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20416: LD_ADDR_VAR 0 59
20420: PUSH
20421: LD_INT 0
20423: PUSH
20424: LD_INT 0
20426: PUSH
20427: EMPTY
20428: LIST
20429: LIST
20430: PUSH
20431: LD_INT 0
20433: PUSH
20434: LD_INT 1
20436: NEG
20437: PUSH
20438: EMPTY
20439: LIST
20440: LIST
20441: PUSH
20442: LD_INT 1
20444: PUSH
20445: LD_INT 0
20447: PUSH
20448: EMPTY
20449: LIST
20450: LIST
20451: PUSH
20452: LD_INT 1
20454: PUSH
20455: LD_INT 1
20457: PUSH
20458: EMPTY
20459: LIST
20460: LIST
20461: PUSH
20462: LD_INT 0
20464: PUSH
20465: LD_INT 1
20467: PUSH
20468: EMPTY
20469: LIST
20470: LIST
20471: PUSH
20472: LD_INT 1
20474: NEG
20475: PUSH
20476: LD_INT 0
20478: PUSH
20479: EMPTY
20480: LIST
20481: LIST
20482: PUSH
20483: LD_INT 1
20485: NEG
20486: PUSH
20487: LD_INT 1
20489: NEG
20490: PUSH
20491: EMPTY
20492: LIST
20493: LIST
20494: PUSH
20495: EMPTY
20496: LIST
20497: LIST
20498: LIST
20499: LIST
20500: LIST
20501: LIST
20502: LIST
20503: ST_TO_ADDR
// Bunker1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20504: LD_ADDR_VAR 0 60
20508: PUSH
20509: LD_INT 0
20511: PUSH
20512: LD_INT 0
20514: PUSH
20515: EMPTY
20516: LIST
20517: LIST
20518: PUSH
20519: LD_INT 0
20521: PUSH
20522: LD_INT 1
20524: NEG
20525: PUSH
20526: EMPTY
20527: LIST
20528: LIST
20529: PUSH
20530: LD_INT 1
20532: PUSH
20533: LD_INT 0
20535: PUSH
20536: EMPTY
20537: LIST
20538: LIST
20539: PUSH
20540: LD_INT 1
20542: PUSH
20543: LD_INT 1
20545: PUSH
20546: EMPTY
20547: LIST
20548: LIST
20549: PUSH
20550: LD_INT 0
20552: PUSH
20553: LD_INT 1
20555: PUSH
20556: EMPTY
20557: LIST
20558: LIST
20559: PUSH
20560: LD_INT 1
20562: NEG
20563: PUSH
20564: LD_INT 0
20566: PUSH
20567: EMPTY
20568: LIST
20569: LIST
20570: PUSH
20571: LD_INT 1
20573: NEG
20574: PUSH
20575: LD_INT 1
20577: NEG
20578: PUSH
20579: EMPTY
20580: LIST
20581: LIST
20582: PUSH
20583: EMPTY
20584: LIST
20585: LIST
20586: LIST
20587: LIST
20588: LIST
20589: LIST
20590: LIST
20591: ST_TO_ADDR
// Bunker2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20592: LD_ADDR_VAR 0 61
20596: PUSH
20597: LD_INT 0
20599: PUSH
20600: LD_INT 0
20602: PUSH
20603: EMPTY
20604: LIST
20605: LIST
20606: PUSH
20607: LD_INT 0
20609: PUSH
20610: LD_INT 1
20612: NEG
20613: PUSH
20614: EMPTY
20615: LIST
20616: LIST
20617: PUSH
20618: LD_INT 1
20620: PUSH
20621: LD_INT 0
20623: PUSH
20624: EMPTY
20625: LIST
20626: LIST
20627: PUSH
20628: LD_INT 1
20630: PUSH
20631: LD_INT 1
20633: PUSH
20634: EMPTY
20635: LIST
20636: LIST
20637: PUSH
20638: LD_INT 0
20640: PUSH
20641: LD_INT 1
20643: PUSH
20644: EMPTY
20645: LIST
20646: LIST
20647: PUSH
20648: LD_INT 1
20650: NEG
20651: PUSH
20652: LD_INT 0
20654: PUSH
20655: EMPTY
20656: LIST
20657: LIST
20658: PUSH
20659: LD_INT 1
20661: NEG
20662: PUSH
20663: LD_INT 1
20665: NEG
20666: PUSH
20667: EMPTY
20668: LIST
20669: LIST
20670: PUSH
20671: EMPTY
20672: LIST
20673: LIST
20674: LIST
20675: LIST
20676: LIST
20677: LIST
20678: LIST
20679: ST_TO_ADDR
// Bunker3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20680: LD_ADDR_VAR 0 62
20684: PUSH
20685: LD_INT 0
20687: PUSH
20688: LD_INT 0
20690: PUSH
20691: EMPTY
20692: LIST
20693: LIST
20694: PUSH
20695: LD_INT 0
20697: PUSH
20698: LD_INT 1
20700: NEG
20701: PUSH
20702: EMPTY
20703: LIST
20704: LIST
20705: PUSH
20706: LD_INT 1
20708: PUSH
20709: LD_INT 0
20711: PUSH
20712: EMPTY
20713: LIST
20714: LIST
20715: PUSH
20716: LD_INT 1
20718: PUSH
20719: LD_INT 1
20721: PUSH
20722: EMPTY
20723: LIST
20724: LIST
20725: PUSH
20726: LD_INT 0
20728: PUSH
20729: LD_INT 1
20731: PUSH
20732: EMPTY
20733: LIST
20734: LIST
20735: PUSH
20736: LD_INT 1
20738: NEG
20739: PUSH
20740: LD_INT 0
20742: PUSH
20743: EMPTY
20744: LIST
20745: LIST
20746: PUSH
20747: LD_INT 1
20749: NEG
20750: PUSH
20751: LD_INT 1
20753: NEG
20754: PUSH
20755: EMPTY
20756: LIST
20757: LIST
20758: PUSH
20759: EMPTY
20760: LIST
20761: LIST
20762: LIST
20763: LIST
20764: LIST
20765: LIST
20766: LIST
20767: ST_TO_ADDR
// Bunker4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20768: LD_ADDR_VAR 0 63
20772: PUSH
20773: LD_INT 0
20775: PUSH
20776: LD_INT 0
20778: PUSH
20779: EMPTY
20780: LIST
20781: LIST
20782: PUSH
20783: LD_INT 0
20785: PUSH
20786: LD_INT 1
20788: NEG
20789: PUSH
20790: EMPTY
20791: LIST
20792: LIST
20793: PUSH
20794: LD_INT 1
20796: PUSH
20797: LD_INT 0
20799: PUSH
20800: EMPTY
20801: LIST
20802: LIST
20803: PUSH
20804: LD_INT 1
20806: PUSH
20807: LD_INT 1
20809: PUSH
20810: EMPTY
20811: LIST
20812: LIST
20813: PUSH
20814: LD_INT 0
20816: PUSH
20817: LD_INT 1
20819: PUSH
20820: EMPTY
20821: LIST
20822: LIST
20823: PUSH
20824: LD_INT 1
20826: NEG
20827: PUSH
20828: LD_INT 0
20830: PUSH
20831: EMPTY
20832: LIST
20833: LIST
20834: PUSH
20835: LD_INT 1
20837: NEG
20838: PUSH
20839: LD_INT 1
20841: NEG
20842: PUSH
20843: EMPTY
20844: LIST
20845: LIST
20846: PUSH
20847: EMPTY
20848: LIST
20849: LIST
20850: LIST
20851: LIST
20852: LIST
20853: LIST
20854: LIST
20855: ST_TO_ADDR
// Bunker5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20856: LD_ADDR_VAR 0 64
20860: PUSH
20861: LD_INT 0
20863: PUSH
20864: LD_INT 0
20866: PUSH
20867: EMPTY
20868: LIST
20869: LIST
20870: PUSH
20871: LD_INT 0
20873: PUSH
20874: LD_INT 1
20876: NEG
20877: PUSH
20878: EMPTY
20879: LIST
20880: LIST
20881: PUSH
20882: LD_INT 1
20884: PUSH
20885: LD_INT 0
20887: PUSH
20888: EMPTY
20889: LIST
20890: LIST
20891: PUSH
20892: LD_INT 1
20894: PUSH
20895: LD_INT 1
20897: PUSH
20898: EMPTY
20899: LIST
20900: LIST
20901: PUSH
20902: LD_INT 0
20904: PUSH
20905: LD_INT 1
20907: PUSH
20908: EMPTY
20909: LIST
20910: LIST
20911: PUSH
20912: LD_INT 1
20914: NEG
20915: PUSH
20916: LD_INT 0
20918: PUSH
20919: EMPTY
20920: LIST
20921: LIST
20922: PUSH
20923: LD_INT 1
20925: NEG
20926: PUSH
20927: LD_INT 1
20929: NEG
20930: PUSH
20931: EMPTY
20932: LIST
20933: LIST
20934: PUSH
20935: EMPTY
20936: LIST
20937: LIST
20938: LIST
20939: LIST
20940: LIST
20941: LIST
20942: LIST
20943: ST_TO_ADDR
// end ; 1 :
20944: GO 26841
20946: LD_INT 1
20948: DOUBLE
20949: EQUAL
20950: IFTRUE 20954
20952: GO 23577
20954: POP
// begin DepotAm0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
20955: LD_ADDR_VAR 0 11
20959: PUSH
20960: LD_INT 1
20962: NEG
20963: PUSH
20964: LD_INT 3
20966: NEG
20967: PUSH
20968: EMPTY
20969: LIST
20970: LIST
20971: PUSH
20972: LD_INT 0
20974: PUSH
20975: LD_INT 3
20977: NEG
20978: PUSH
20979: EMPTY
20980: LIST
20981: LIST
20982: PUSH
20983: LD_INT 1
20985: PUSH
20986: LD_INT 2
20988: NEG
20989: PUSH
20990: EMPTY
20991: LIST
20992: LIST
20993: PUSH
20994: EMPTY
20995: LIST
20996: LIST
20997: LIST
20998: ST_TO_ADDR
// DepotAm1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
20999: LD_ADDR_VAR 0 12
21003: PUSH
21004: LD_INT 2
21006: PUSH
21007: LD_INT 1
21009: NEG
21010: PUSH
21011: EMPTY
21012: LIST
21013: LIST
21014: PUSH
21015: LD_INT 3
21017: PUSH
21018: LD_INT 0
21020: PUSH
21021: EMPTY
21022: LIST
21023: LIST
21024: PUSH
21025: LD_INT 3
21027: PUSH
21028: LD_INT 1
21030: PUSH
21031: EMPTY
21032: LIST
21033: LIST
21034: PUSH
21035: EMPTY
21036: LIST
21037: LIST
21038: LIST
21039: ST_TO_ADDR
// DepotAm2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
21040: LD_ADDR_VAR 0 13
21044: PUSH
21045: LD_INT 3
21047: PUSH
21048: LD_INT 2
21050: PUSH
21051: EMPTY
21052: LIST
21053: LIST
21054: PUSH
21055: LD_INT 3
21057: PUSH
21058: LD_INT 3
21060: PUSH
21061: EMPTY
21062: LIST
21063: LIST
21064: PUSH
21065: LD_INT 2
21067: PUSH
21068: LD_INT 3
21070: PUSH
21071: EMPTY
21072: LIST
21073: LIST
21074: PUSH
21075: EMPTY
21076: LIST
21077: LIST
21078: LIST
21079: ST_TO_ADDR
// DepotAm3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
21080: LD_ADDR_VAR 0 14
21084: PUSH
21085: LD_INT 1
21087: PUSH
21088: LD_INT 3
21090: PUSH
21091: EMPTY
21092: LIST
21093: LIST
21094: PUSH
21095: LD_INT 0
21097: PUSH
21098: LD_INT 3
21100: PUSH
21101: EMPTY
21102: LIST
21103: LIST
21104: PUSH
21105: LD_INT 1
21107: NEG
21108: PUSH
21109: LD_INT 2
21111: PUSH
21112: EMPTY
21113: LIST
21114: LIST
21115: PUSH
21116: EMPTY
21117: LIST
21118: LIST
21119: LIST
21120: ST_TO_ADDR
// DepotAm4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
21121: LD_ADDR_VAR 0 15
21125: PUSH
21126: LD_INT 2
21128: NEG
21129: PUSH
21130: LD_INT 1
21132: PUSH
21133: EMPTY
21134: LIST
21135: LIST
21136: PUSH
21137: LD_INT 3
21139: NEG
21140: PUSH
21141: LD_INT 0
21143: PUSH
21144: EMPTY
21145: LIST
21146: LIST
21147: PUSH
21148: LD_INT 3
21150: NEG
21151: PUSH
21152: LD_INT 1
21154: NEG
21155: PUSH
21156: EMPTY
21157: LIST
21158: LIST
21159: PUSH
21160: EMPTY
21161: LIST
21162: LIST
21163: LIST
21164: ST_TO_ADDR
// DepotAm5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
21165: LD_ADDR_VAR 0 16
21169: PUSH
21170: LD_INT 2
21172: NEG
21173: PUSH
21174: LD_INT 3
21176: NEG
21177: PUSH
21178: EMPTY
21179: LIST
21180: LIST
21181: PUSH
21182: LD_INT 3
21184: NEG
21185: PUSH
21186: LD_INT 2
21188: NEG
21189: PUSH
21190: EMPTY
21191: LIST
21192: LIST
21193: PUSH
21194: LD_INT 3
21196: NEG
21197: PUSH
21198: LD_INT 3
21200: NEG
21201: PUSH
21202: EMPTY
21203: LIST
21204: LIST
21205: PUSH
21206: EMPTY
21207: LIST
21208: LIST
21209: LIST
21210: ST_TO_ADDR
// DepotAr0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
21211: LD_ADDR_VAR 0 17
21215: PUSH
21216: LD_INT 1
21218: NEG
21219: PUSH
21220: LD_INT 3
21222: NEG
21223: PUSH
21224: EMPTY
21225: LIST
21226: LIST
21227: PUSH
21228: LD_INT 0
21230: PUSH
21231: LD_INT 3
21233: NEG
21234: PUSH
21235: EMPTY
21236: LIST
21237: LIST
21238: PUSH
21239: LD_INT 1
21241: PUSH
21242: LD_INT 2
21244: NEG
21245: PUSH
21246: EMPTY
21247: LIST
21248: LIST
21249: PUSH
21250: EMPTY
21251: LIST
21252: LIST
21253: LIST
21254: ST_TO_ADDR
// DepotAr1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
21255: LD_ADDR_VAR 0 18
21259: PUSH
21260: LD_INT 2
21262: PUSH
21263: LD_INT 1
21265: NEG
21266: PUSH
21267: EMPTY
21268: LIST
21269: LIST
21270: PUSH
21271: LD_INT 3
21273: PUSH
21274: LD_INT 0
21276: PUSH
21277: EMPTY
21278: LIST
21279: LIST
21280: PUSH
21281: LD_INT 3
21283: PUSH
21284: LD_INT 1
21286: PUSH
21287: EMPTY
21288: LIST
21289: LIST
21290: PUSH
21291: EMPTY
21292: LIST
21293: LIST
21294: LIST
21295: ST_TO_ADDR
// DepotAr2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
21296: LD_ADDR_VAR 0 19
21300: PUSH
21301: LD_INT 3
21303: PUSH
21304: LD_INT 2
21306: PUSH
21307: EMPTY
21308: LIST
21309: LIST
21310: PUSH
21311: LD_INT 3
21313: PUSH
21314: LD_INT 3
21316: PUSH
21317: EMPTY
21318: LIST
21319: LIST
21320: PUSH
21321: LD_INT 2
21323: PUSH
21324: LD_INT 3
21326: PUSH
21327: EMPTY
21328: LIST
21329: LIST
21330: PUSH
21331: EMPTY
21332: LIST
21333: LIST
21334: LIST
21335: ST_TO_ADDR
// DepotAr3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
21336: LD_ADDR_VAR 0 20
21340: PUSH
21341: LD_INT 1
21343: PUSH
21344: LD_INT 3
21346: PUSH
21347: EMPTY
21348: LIST
21349: LIST
21350: PUSH
21351: LD_INT 0
21353: PUSH
21354: LD_INT 3
21356: PUSH
21357: EMPTY
21358: LIST
21359: LIST
21360: PUSH
21361: LD_INT 1
21363: NEG
21364: PUSH
21365: LD_INT 2
21367: PUSH
21368: EMPTY
21369: LIST
21370: LIST
21371: PUSH
21372: EMPTY
21373: LIST
21374: LIST
21375: LIST
21376: ST_TO_ADDR
// DepotAr4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
21377: LD_ADDR_VAR 0 21
21381: PUSH
21382: LD_INT 2
21384: NEG
21385: PUSH
21386: LD_INT 1
21388: PUSH
21389: EMPTY
21390: LIST
21391: LIST
21392: PUSH
21393: LD_INT 3
21395: NEG
21396: PUSH
21397: LD_INT 0
21399: PUSH
21400: EMPTY
21401: LIST
21402: LIST
21403: PUSH
21404: LD_INT 3
21406: NEG
21407: PUSH
21408: LD_INT 1
21410: NEG
21411: PUSH
21412: EMPTY
21413: LIST
21414: LIST
21415: PUSH
21416: EMPTY
21417: LIST
21418: LIST
21419: LIST
21420: ST_TO_ADDR
// DepotAr5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
21421: LD_ADDR_VAR 0 22
21425: PUSH
21426: LD_INT 2
21428: NEG
21429: PUSH
21430: LD_INT 3
21432: NEG
21433: PUSH
21434: EMPTY
21435: LIST
21436: LIST
21437: PUSH
21438: LD_INT 3
21440: NEG
21441: PUSH
21442: LD_INT 2
21444: NEG
21445: PUSH
21446: EMPTY
21447: LIST
21448: LIST
21449: PUSH
21450: LD_INT 3
21452: NEG
21453: PUSH
21454: LD_INT 3
21456: NEG
21457: PUSH
21458: EMPTY
21459: LIST
21460: LIST
21461: PUSH
21462: EMPTY
21463: LIST
21464: LIST
21465: LIST
21466: ST_TO_ADDR
// DepotRu0 = [ [ 0 , - 3 ] , [ - 1 , - 4 ] , [ 1 , - 3 ] ] ;
21467: LD_ADDR_VAR 0 23
21471: PUSH
21472: LD_INT 0
21474: PUSH
21475: LD_INT 3
21477: NEG
21478: PUSH
21479: EMPTY
21480: LIST
21481: LIST
21482: PUSH
21483: LD_INT 1
21485: NEG
21486: PUSH
21487: LD_INT 4
21489: NEG
21490: PUSH
21491: EMPTY
21492: LIST
21493: LIST
21494: PUSH
21495: LD_INT 1
21497: PUSH
21498: LD_INT 3
21500: NEG
21501: PUSH
21502: EMPTY
21503: LIST
21504: LIST
21505: PUSH
21506: EMPTY
21507: LIST
21508: LIST
21509: LIST
21510: ST_TO_ADDR
// DepotRu1 = [ [ 3 , 0 ] , [ 3 , - 1 ] , [ 4 , 1 ] ] ;
21511: LD_ADDR_VAR 0 24
21515: PUSH
21516: LD_INT 3
21518: PUSH
21519: LD_INT 0
21521: PUSH
21522: EMPTY
21523: LIST
21524: LIST
21525: PUSH
21526: LD_INT 3
21528: PUSH
21529: LD_INT 1
21531: NEG
21532: PUSH
21533: EMPTY
21534: LIST
21535: LIST
21536: PUSH
21537: LD_INT 4
21539: PUSH
21540: LD_INT 1
21542: PUSH
21543: EMPTY
21544: LIST
21545: LIST
21546: PUSH
21547: EMPTY
21548: LIST
21549: LIST
21550: LIST
21551: ST_TO_ADDR
// DepotRu2 = [ [ 3 , 3 ] , [ 4 , 3 ] , [ 3 , 4 ] ] ;
21552: LD_ADDR_VAR 0 25
21556: PUSH
21557: LD_INT 3
21559: PUSH
21560: LD_INT 3
21562: PUSH
21563: EMPTY
21564: LIST
21565: LIST
21566: PUSH
21567: LD_INT 4
21569: PUSH
21570: LD_INT 3
21572: PUSH
21573: EMPTY
21574: LIST
21575: LIST
21576: PUSH
21577: LD_INT 3
21579: PUSH
21580: LD_INT 4
21582: PUSH
21583: EMPTY
21584: LIST
21585: LIST
21586: PUSH
21587: EMPTY
21588: LIST
21589: LIST
21590: LIST
21591: ST_TO_ADDR
// DepotRu3 = [ [ 0 , 3 ] , [ 1 , 4 ] , [ - 1 , 3 ] ] ;
21592: LD_ADDR_VAR 0 26
21596: PUSH
21597: LD_INT 0
21599: PUSH
21600: LD_INT 3
21602: PUSH
21603: EMPTY
21604: LIST
21605: LIST
21606: PUSH
21607: LD_INT 1
21609: PUSH
21610: LD_INT 4
21612: PUSH
21613: EMPTY
21614: LIST
21615: LIST
21616: PUSH
21617: LD_INT 1
21619: NEG
21620: PUSH
21621: LD_INT 3
21623: PUSH
21624: EMPTY
21625: LIST
21626: LIST
21627: PUSH
21628: EMPTY
21629: LIST
21630: LIST
21631: LIST
21632: ST_TO_ADDR
// DepotRu4 = [ [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , - 1 ] ] ;
21633: LD_ADDR_VAR 0 27
21637: PUSH
21638: LD_INT 3
21640: NEG
21641: PUSH
21642: LD_INT 0
21644: PUSH
21645: EMPTY
21646: LIST
21647: LIST
21648: PUSH
21649: LD_INT 3
21651: NEG
21652: PUSH
21653: LD_INT 1
21655: PUSH
21656: EMPTY
21657: LIST
21658: LIST
21659: PUSH
21660: LD_INT 4
21662: NEG
21663: PUSH
21664: LD_INT 1
21666: NEG
21667: PUSH
21668: EMPTY
21669: LIST
21670: LIST
21671: PUSH
21672: EMPTY
21673: LIST
21674: LIST
21675: LIST
21676: ST_TO_ADDR
// DepotRu5 = [ [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 4 , - 3 ] ] ;
21677: LD_ADDR_VAR 0 28
21681: PUSH
21682: LD_INT 3
21684: NEG
21685: PUSH
21686: LD_INT 3
21688: NEG
21689: PUSH
21690: EMPTY
21691: LIST
21692: LIST
21693: PUSH
21694: LD_INT 3
21696: NEG
21697: PUSH
21698: LD_INT 4
21700: NEG
21701: PUSH
21702: EMPTY
21703: LIST
21704: LIST
21705: PUSH
21706: LD_INT 4
21708: NEG
21709: PUSH
21710: LD_INT 3
21712: NEG
21713: PUSH
21714: EMPTY
21715: LIST
21716: LIST
21717: PUSH
21718: EMPTY
21719: LIST
21720: LIST
21721: LIST
21722: ST_TO_ADDR
// Factory0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ - 1 , - 4 ] , [ 0 , - 4 ] , [ 1 , - 3 ] , [ - 1 , - 5 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ - 1 , - 6 ] , [ 0 , - 6 ] , [ 1 , - 5 ] ] ;
21723: LD_ADDR_VAR 0 29
21727: PUSH
21728: LD_INT 1
21730: NEG
21731: PUSH
21732: LD_INT 3
21734: NEG
21735: PUSH
21736: EMPTY
21737: LIST
21738: LIST
21739: PUSH
21740: LD_INT 0
21742: PUSH
21743: LD_INT 3
21745: NEG
21746: PUSH
21747: EMPTY
21748: LIST
21749: LIST
21750: PUSH
21751: LD_INT 1
21753: PUSH
21754: LD_INT 2
21756: NEG
21757: PUSH
21758: EMPTY
21759: LIST
21760: LIST
21761: PUSH
21762: LD_INT 1
21764: NEG
21765: PUSH
21766: LD_INT 4
21768: NEG
21769: PUSH
21770: EMPTY
21771: LIST
21772: LIST
21773: PUSH
21774: LD_INT 0
21776: PUSH
21777: LD_INT 4
21779: NEG
21780: PUSH
21781: EMPTY
21782: LIST
21783: LIST
21784: PUSH
21785: LD_INT 1
21787: PUSH
21788: LD_INT 3
21790: NEG
21791: PUSH
21792: EMPTY
21793: LIST
21794: LIST
21795: PUSH
21796: LD_INT 1
21798: NEG
21799: PUSH
21800: LD_INT 5
21802: NEG
21803: PUSH
21804: EMPTY
21805: LIST
21806: LIST
21807: PUSH
21808: LD_INT 0
21810: PUSH
21811: LD_INT 5
21813: NEG
21814: PUSH
21815: EMPTY
21816: LIST
21817: LIST
21818: PUSH
21819: LD_INT 1
21821: PUSH
21822: LD_INT 4
21824: NEG
21825: PUSH
21826: EMPTY
21827: LIST
21828: LIST
21829: PUSH
21830: LD_INT 1
21832: NEG
21833: PUSH
21834: LD_INT 6
21836: NEG
21837: PUSH
21838: EMPTY
21839: LIST
21840: LIST
21841: PUSH
21842: LD_INT 0
21844: PUSH
21845: LD_INT 6
21847: NEG
21848: PUSH
21849: EMPTY
21850: LIST
21851: LIST
21852: PUSH
21853: LD_INT 1
21855: PUSH
21856: LD_INT 5
21858: NEG
21859: PUSH
21860: EMPTY
21861: LIST
21862: LIST
21863: PUSH
21864: EMPTY
21865: LIST
21866: LIST
21867: LIST
21868: LIST
21869: LIST
21870: LIST
21871: LIST
21872: LIST
21873: LIST
21874: LIST
21875: LIST
21876: LIST
21877: ST_TO_ADDR
// Factory1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 3 , - 1 ] , [ 4 , 0 ] , [ 4 , 1 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 5 , - 1 ] , [ 6 , 0 ] , [ 6 , 1 ] ] ;
21878: LD_ADDR_VAR 0 30
21882: PUSH
21883: LD_INT 2
21885: PUSH
21886: LD_INT 1
21888: NEG
21889: PUSH
21890: EMPTY
21891: LIST
21892: LIST
21893: PUSH
21894: LD_INT 3
21896: PUSH
21897: LD_INT 0
21899: PUSH
21900: EMPTY
21901: LIST
21902: LIST
21903: PUSH
21904: LD_INT 3
21906: PUSH
21907: LD_INT 1
21909: PUSH
21910: EMPTY
21911: LIST
21912: LIST
21913: PUSH
21914: LD_INT 3
21916: PUSH
21917: LD_INT 1
21919: NEG
21920: PUSH
21921: EMPTY
21922: LIST
21923: LIST
21924: PUSH
21925: LD_INT 4
21927: PUSH
21928: LD_INT 0
21930: PUSH
21931: EMPTY
21932: LIST
21933: LIST
21934: PUSH
21935: LD_INT 4
21937: PUSH
21938: LD_INT 1
21940: PUSH
21941: EMPTY
21942: LIST
21943: LIST
21944: PUSH
21945: LD_INT 4
21947: PUSH
21948: LD_INT 1
21950: NEG
21951: PUSH
21952: EMPTY
21953: LIST
21954: LIST
21955: PUSH
21956: LD_INT 5
21958: PUSH
21959: LD_INT 0
21961: PUSH
21962: EMPTY
21963: LIST
21964: LIST
21965: PUSH
21966: LD_INT 5
21968: PUSH
21969: LD_INT 1
21971: PUSH
21972: EMPTY
21973: LIST
21974: LIST
21975: PUSH
21976: LD_INT 5
21978: PUSH
21979: LD_INT 1
21981: NEG
21982: PUSH
21983: EMPTY
21984: LIST
21985: LIST
21986: PUSH
21987: LD_INT 6
21989: PUSH
21990: LD_INT 0
21992: PUSH
21993: EMPTY
21994: LIST
21995: LIST
21996: PUSH
21997: LD_INT 6
21999: PUSH
22000: LD_INT 1
22002: PUSH
22003: EMPTY
22004: LIST
22005: LIST
22006: PUSH
22007: EMPTY
22008: LIST
22009: LIST
22010: LIST
22011: LIST
22012: LIST
22013: LIST
22014: LIST
22015: LIST
22016: LIST
22017: LIST
22018: LIST
22019: LIST
22020: ST_TO_ADDR
// Factory2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ 4 , 3 ] , [ 4 , 4 ] , [ 3 , 4 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 6 , 5 ] , [ 6 , 6 ] , [ 5 , 6 ] ] ;
22021: LD_ADDR_VAR 0 31
22025: PUSH
22026: LD_INT 3
22028: PUSH
22029: LD_INT 2
22031: PUSH
22032: EMPTY
22033: LIST
22034: LIST
22035: PUSH
22036: LD_INT 3
22038: PUSH
22039: LD_INT 3
22041: PUSH
22042: EMPTY
22043: LIST
22044: LIST
22045: PUSH
22046: LD_INT 2
22048: PUSH
22049: LD_INT 3
22051: PUSH
22052: EMPTY
22053: LIST
22054: LIST
22055: PUSH
22056: LD_INT 4
22058: PUSH
22059: LD_INT 3
22061: PUSH
22062: EMPTY
22063: LIST
22064: LIST
22065: PUSH
22066: LD_INT 4
22068: PUSH
22069: LD_INT 4
22071: PUSH
22072: EMPTY
22073: LIST
22074: LIST
22075: PUSH
22076: LD_INT 3
22078: PUSH
22079: LD_INT 4
22081: PUSH
22082: EMPTY
22083: LIST
22084: LIST
22085: PUSH
22086: LD_INT 5
22088: PUSH
22089: LD_INT 4
22091: PUSH
22092: EMPTY
22093: LIST
22094: LIST
22095: PUSH
22096: LD_INT 5
22098: PUSH
22099: LD_INT 5
22101: PUSH
22102: EMPTY
22103: LIST
22104: LIST
22105: PUSH
22106: LD_INT 4
22108: PUSH
22109: LD_INT 5
22111: PUSH
22112: EMPTY
22113: LIST
22114: LIST
22115: PUSH
22116: LD_INT 6
22118: PUSH
22119: LD_INT 5
22121: PUSH
22122: EMPTY
22123: LIST
22124: LIST
22125: PUSH
22126: LD_INT 6
22128: PUSH
22129: LD_INT 6
22131: PUSH
22132: EMPTY
22133: LIST
22134: LIST
22135: PUSH
22136: LD_INT 5
22138: PUSH
22139: LD_INT 6
22141: PUSH
22142: EMPTY
22143: LIST
22144: LIST
22145: PUSH
22146: EMPTY
22147: LIST
22148: LIST
22149: LIST
22150: LIST
22151: LIST
22152: LIST
22153: LIST
22154: LIST
22155: LIST
22156: LIST
22157: LIST
22158: LIST
22159: ST_TO_ADDR
// Factory3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ 1 , 4 ] , [ 0 , 4 ] , [ - 1 , 3 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ 1 , 6 ] , [ 0 , 6 ] , [ - 1 , 5 ] ] ;
22160: LD_ADDR_VAR 0 32
22164: PUSH
22165: LD_INT 1
22167: PUSH
22168: LD_INT 3
22170: PUSH
22171: EMPTY
22172: LIST
22173: LIST
22174: PUSH
22175: LD_INT 0
22177: PUSH
22178: LD_INT 3
22180: PUSH
22181: EMPTY
22182: LIST
22183: LIST
22184: PUSH
22185: LD_INT 1
22187: NEG
22188: PUSH
22189: LD_INT 2
22191: PUSH
22192: EMPTY
22193: LIST
22194: LIST
22195: PUSH
22196: LD_INT 1
22198: PUSH
22199: LD_INT 4
22201: PUSH
22202: EMPTY
22203: LIST
22204: LIST
22205: PUSH
22206: LD_INT 0
22208: PUSH
22209: LD_INT 4
22211: PUSH
22212: EMPTY
22213: LIST
22214: LIST
22215: PUSH
22216: LD_INT 1
22218: NEG
22219: PUSH
22220: LD_INT 3
22222: PUSH
22223: EMPTY
22224: LIST
22225: LIST
22226: PUSH
22227: LD_INT 1
22229: PUSH
22230: LD_INT 5
22232: PUSH
22233: EMPTY
22234: LIST
22235: LIST
22236: PUSH
22237: LD_INT 0
22239: PUSH
22240: LD_INT 5
22242: PUSH
22243: EMPTY
22244: LIST
22245: LIST
22246: PUSH
22247: LD_INT 1
22249: NEG
22250: PUSH
22251: LD_INT 4
22253: PUSH
22254: EMPTY
22255: LIST
22256: LIST
22257: PUSH
22258: LD_INT 1
22260: PUSH
22261: LD_INT 6
22263: PUSH
22264: EMPTY
22265: LIST
22266: LIST
22267: PUSH
22268: LD_INT 0
22270: PUSH
22271: LD_INT 6
22273: PUSH
22274: EMPTY
22275: LIST
22276: LIST
22277: PUSH
22278: LD_INT 1
22280: NEG
22281: PUSH
22282: LD_INT 5
22284: PUSH
22285: EMPTY
22286: LIST
22287: LIST
22288: PUSH
22289: EMPTY
22290: LIST
22291: LIST
22292: LIST
22293: LIST
22294: LIST
22295: LIST
22296: LIST
22297: LIST
22298: LIST
22299: LIST
22300: LIST
22301: LIST
22302: ST_TO_ADDR
// Factory4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 3 , 1 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , 1 ] , [ - 6 , 0 ] , [ - 6 , - 1 ] ] ;
22303: LD_ADDR_VAR 0 33
22307: PUSH
22308: LD_INT 2
22310: NEG
22311: PUSH
22312: LD_INT 1
22314: PUSH
22315: EMPTY
22316: LIST
22317: LIST
22318: PUSH
22319: LD_INT 3
22321: NEG
22322: PUSH
22323: LD_INT 0
22325: PUSH
22326: EMPTY
22327: LIST
22328: LIST
22329: PUSH
22330: LD_INT 3
22332: NEG
22333: PUSH
22334: LD_INT 1
22336: NEG
22337: PUSH
22338: EMPTY
22339: LIST
22340: LIST
22341: PUSH
22342: LD_INT 3
22344: NEG
22345: PUSH
22346: LD_INT 1
22348: PUSH
22349: EMPTY
22350: LIST
22351: LIST
22352: PUSH
22353: LD_INT 4
22355: NEG
22356: PUSH
22357: LD_INT 0
22359: PUSH
22360: EMPTY
22361: LIST
22362: LIST
22363: PUSH
22364: LD_INT 4
22366: NEG
22367: PUSH
22368: LD_INT 1
22370: NEG
22371: PUSH
22372: EMPTY
22373: LIST
22374: LIST
22375: PUSH
22376: LD_INT 4
22378: NEG
22379: PUSH
22380: LD_INT 1
22382: PUSH
22383: EMPTY
22384: LIST
22385: LIST
22386: PUSH
22387: LD_INT 5
22389: NEG
22390: PUSH
22391: LD_INT 0
22393: PUSH
22394: EMPTY
22395: LIST
22396: LIST
22397: PUSH
22398: LD_INT 5
22400: NEG
22401: PUSH
22402: LD_INT 1
22404: NEG
22405: PUSH
22406: EMPTY
22407: LIST
22408: LIST
22409: PUSH
22410: LD_INT 5
22412: NEG
22413: PUSH
22414: LD_INT 1
22416: PUSH
22417: EMPTY
22418: LIST
22419: LIST
22420: PUSH
22421: LD_INT 6
22423: NEG
22424: PUSH
22425: LD_INT 0
22427: PUSH
22428: EMPTY
22429: LIST
22430: LIST
22431: PUSH
22432: LD_INT 6
22434: NEG
22435: PUSH
22436: LD_INT 1
22438: NEG
22439: PUSH
22440: EMPTY
22441: LIST
22442: LIST
22443: PUSH
22444: EMPTY
22445: LIST
22446: LIST
22447: LIST
22448: LIST
22449: LIST
22450: LIST
22451: LIST
22452: LIST
22453: LIST
22454: LIST
22455: LIST
22456: LIST
22457: ST_TO_ADDR
// Factory5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 4 , - 3 ] , [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 5 , - 6 ] , [ - 6 , - 5 ] , [ - 6 , - 6 ] ] ;
22458: LD_ADDR_VAR 0 34
22462: PUSH
22463: LD_INT 2
22465: NEG
22466: PUSH
22467: LD_INT 3
22469: NEG
22470: PUSH
22471: EMPTY
22472: LIST
22473: LIST
22474: PUSH
22475: LD_INT 3
22477: NEG
22478: PUSH
22479: LD_INT 2
22481: NEG
22482: PUSH
22483: EMPTY
22484: LIST
22485: LIST
22486: PUSH
22487: LD_INT 3
22489: NEG
22490: PUSH
22491: LD_INT 3
22493: NEG
22494: PUSH
22495: EMPTY
22496: LIST
22497: LIST
22498: PUSH
22499: LD_INT 3
22501: NEG
22502: PUSH
22503: LD_INT 4
22505: NEG
22506: PUSH
22507: EMPTY
22508: LIST
22509: LIST
22510: PUSH
22511: LD_INT 4
22513: NEG
22514: PUSH
22515: LD_INT 3
22517: NEG
22518: PUSH
22519: EMPTY
22520: LIST
22521: LIST
22522: PUSH
22523: LD_INT 4
22525: NEG
22526: PUSH
22527: LD_INT 4
22529: NEG
22530: PUSH
22531: EMPTY
22532: LIST
22533: LIST
22534: PUSH
22535: LD_INT 4
22537: NEG
22538: PUSH
22539: LD_INT 5
22541: NEG
22542: PUSH
22543: EMPTY
22544: LIST
22545: LIST
22546: PUSH
22547: LD_INT 5
22549: NEG
22550: PUSH
22551: LD_INT 4
22553: NEG
22554: PUSH
22555: EMPTY
22556: LIST
22557: LIST
22558: PUSH
22559: LD_INT 5
22561: NEG
22562: PUSH
22563: LD_INT 5
22565: NEG
22566: PUSH
22567: EMPTY
22568: LIST
22569: LIST
22570: PUSH
22571: LD_INT 5
22573: NEG
22574: PUSH
22575: LD_INT 6
22577: NEG
22578: PUSH
22579: EMPTY
22580: LIST
22581: LIST
22582: PUSH
22583: LD_INT 6
22585: NEG
22586: PUSH
22587: LD_INT 5
22589: NEG
22590: PUSH
22591: EMPTY
22592: LIST
22593: LIST
22594: PUSH
22595: LD_INT 6
22597: NEG
22598: PUSH
22599: LD_INT 6
22601: NEG
22602: PUSH
22603: EMPTY
22604: LIST
22605: LIST
22606: PUSH
22607: EMPTY
22608: LIST
22609: LIST
22610: LIST
22611: LIST
22612: LIST
22613: LIST
22614: LIST
22615: LIST
22616: LIST
22617: LIST
22618: LIST
22619: LIST
22620: ST_TO_ADDR
// Lab0 = [ [ 0 , - 2 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] ] ;
22621: LD_ADDR_VAR 0 41
22625: PUSH
22626: LD_INT 0
22628: PUSH
22629: LD_INT 2
22631: NEG
22632: PUSH
22633: EMPTY
22634: LIST
22635: LIST
22636: PUSH
22637: LD_INT 1
22639: NEG
22640: PUSH
22641: LD_INT 3
22643: NEG
22644: PUSH
22645: EMPTY
22646: LIST
22647: LIST
22648: PUSH
22649: LD_INT 1
22651: PUSH
22652: LD_INT 2
22654: NEG
22655: PUSH
22656: EMPTY
22657: LIST
22658: LIST
22659: PUSH
22660: EMPTY
22661: LIST
22662: LIST
22663: LIST
22664: ST_TO_ADDR
// Lab1 = [ [ 2 , 0 ] , [ 2 , - 1 ] , [ 3 , 1 ] ] ;
22665: LD_ADDR_VAR 0 42
22669: PUSH
22670: LD_INT 2
22672: PUSH
22673: LD_INT 0
22675: PUSH
22676: EMPTY
22677: LIST
22678: LIST
22679: PUSH
22680: LD_INT 2
22682: PUSH
22683: LD_INT 1
22685: NEG
22686: PUSH
22687: EMPTY
22688: LIST
22689: LIST
22690: PUSH
22691: LD_INT 3
22693: PUSH
22694: LD_INT 1
22696: PUSH
22697: EMPTY
22698: LIST
22699: LIST
22700: PUSH
22701: EMPTY
22702: LIST
22703: LIST
22704: LIST
22705: ST_TO_ADDR
// Lab2 = [ [ 2 , 2 ] , [ 3 , 2 ] , [ 2 , 3 ] ] ;
22706: LD_ADDR_VAR 0 43
22710: PUSH
22711: LD_INT 2
22713: PUSH
22714: LD_INT 2
22716: PUSH
22717: EMPTY
22718: LIST
22719: LIST
22720: PUSH
22721: LD_INT 3
22723: PUSH
22724: LD_INT 2
22726: PUSH
22727: EMPTY
22728: LIST
22729: LIST
22730: PUSH
22731: LD_INT 2
22733: PUSH
22734: LD_INT 3
22736: PUSH
22737: EMPTY
22738: LIST
22739: LIST
22740: PUSH
22741: EMPTY
22742: LIST
22743: LIST
22744: LIST
22745: ST_TO_ADDR
// Lab3 = [ [ 0 , 2 ] , [ 1 , 3 ] , [ - 1 , 2 ] ] ;
22746: LD_ADDR_VAR 0 44
22750: PUSH
22751: LD_INT 0
22753: PUSH
22754: LD_INT 2
22756: PUSH
22757: EMPTY
22758: LIST
22759: LIST
22760: PUSH
22761: LD_INT 1
22763: PUSH
22764: LD_INT 3
22766: PUSH
22767: EMPTY
22768: LIST
22769: LIST
22770: PUSH
22771: LD_INT 1
22773: NEG
22774: PUSH
22775: LD_INT 2
22777: PUSH
22778: EMPTY
22779: LIST
22780: LIST
22781: PUSH
22782: EMPTY
22783: LIST
22784: LIST
22785: LIST
22786: ST_TO_ADDR
// Lab4 = [ [ - 2 , 0 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
22787: LD_ADDR_VAR 0 45
22791: PUSH
22792: LD_INT 2
22794: NEG
22795: PUSH
22796: LD_INT 0
22798: PUSH
22799: EMPTY
22800: LIST
22801: LIST
22802: PUSH
22803: LD_INT 2
22805: NEG
22806: PUSH
22807: LD_INT 1
22809: PUSH
22810: EMPTY
22811: LIST
22812: LIST
22813: PUSH
22814: LD_INT 3
22816: NEG
22817: PUSH
22818: LD_INT 1
22820: NEG
22821: PUSH
22822: EMPTY
22823: LIST
22824: LIST
22825: PUSH
22826: EMPTY
22827: LIST
22828: LIST
22829: LIST
22830: ST_TO_ADDR
// Lab5 = [ [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 3 , - 2 ] ] ;
22831: LD_ADDR_VAR 0 46
22835: PUSH
22836: LD_INT 2
22838: NEG
22839: PUSH
22840: LD_INT 2
22842: NEG
22843: PUSH
22844: EMPTY
22845: LIST
22846: LIST
22847: PUSH
22848: LD_INT 2
22850: NEG
22851: PUSH
22852: LD_INT 3
22854: NEG
22855: PUSH
22856: EMPTY
22857: LIST
22858: LIST
22859: PUSH
22860: LD_INT 3
22862: NEG
22863: PUSH
22864: LD_INT 2
22866: NEG
22867: PUSH
22868: EMPTY
22869: LIST
22870: LIST
22871: PUSH
22872: EMPTY
22873: LIST
22874: LIST
22875: LIST
22876: ST_TO_ADDR
// ControlTower0 = [ [ - 2 , - 3 ] , [ - 1 , - 3 ] ] ;
22877: LD_ADDR_VAR 0 47
22881: PUSH
22882: LD_INT 2
22884: NEG
22885: PUSH
22886: LD_INT 3
22888: NEG
22889: PUSH
22890: EMPTY
22891: LIST
22892: LIST
22893: PUSH
22894: LD_INT 1
22896: NEG
22897: PUSH
22898: LD_INT 3
22900: NEG
22901: PUSH
22902: EMPTY
22903: LIST
22904: LIST
22905: PUSH
22906: EMPTY
22907: LIST
22908: LIST
22909: ST_TO_ADDR
// ControlTower1 = [ [ 1 , - 2 ] , [ 2 , - 1 ] ] ;
22910: LD_ADDR_VAR 0 48
22914: PUSH
22915: LD_INT 1
22917: PUSH
22918: LD_INT 2
22920: NEG
22921: PUSH
22922: EMPTY
22923: LIST
22924: LIST
22925: PUSH
22926: LD_INT 2
22928: PUSH
22929: LD_INT 1
22931: NEG
22932: PUSH
22933: EMPTY
22934: LIST
22935: LIST
22936: PUSH
22937: EMPTY
22938: LIST
22939: LIST
22940: ST_TO_ADDR
// ControlTower2 = [ [ 3 , 1 ] , [ 3 , 2 ] ] ;
22941: LD_ADDR_VAR 0 49
22945: PUSH
22946: LD_INT 3
22948: PUSH
22949: LD_INT 1
22951: PUSH
22952: EMPTY
22953: LIST
22954: LIST
22955: PUSH
22956: LD_INT 3
22958: PUSH
22959: LD_INT 2
22961: PUSH
22962: EMPTY
22963: LIST
22964: LIST
22965: PUSH
22966: EMPTY
22967: LIST
22968: LIST
22969: ST_TO_ADDR
// ControlTower3 = [ [ 2 , 3 ] , [ 1 , 3 ] ] ;
22970: LD_ADDR_VAR 0 50
22974: PUSH
22975: LD_INT 2
22977: PUSH
22978: LD_INT 3
22980: PUSH
22981: EMPTY
22982: LIST
22983: LIST
22984: PUSH
22985: LD_INT 1
22987: PUSH
22988: LD_INT 3
22990: PUSH
22991: EMPTY
22992: LIST
22993: LIST
22994: PUSH
22995: EMPTY
22996: LIST
22997: LIST
22998: ST_TO_ADDR
// ControlTower4 = [ [ - 1 , 2 ] , [ - 2 , 1 ] ] ;
22999: LD_ADDR_VAR 0 51
23003: PUSH
23004: LD_INT 1
23006: NEG
23007: PUSH
23008: LD_INT 2
23010: PUSH
23011: EMPTY
23012: LIST
23013: LIST
23014: PUSH
23015: LD_INT 2
23017: NEG
23018: PUSH
23019: LD_INT 1
23021: PUSH
23022: EMPTY
23023: LIST
23024: LIST
23025: PUSH
23026: EMPTY
23027: LIST
23028: LIST
23029: ST_TO_ADDR
// ControlTower5 = [ [ - 3 , - 1 ] , [ - 3 , - 2 ] ] ;
23030: LD_ADDR_VAR 0 52
23034: PUSH
23035: LD_INT 3
23037: NEG
23038: PUSH
23039: LD_INT 1
23041: NEG
23042: PUSH
23043: EMPTY
23044: LIST
23045: LIST
23046: PUSH
23047: LD_INT 3
23049: NEG
23050: PUSH
23051: LD_INT 2
23053: NEG
23054: PUSH
23055: EMPTY
23056: LIST
23057: LIST
23058: PUSH
23059: EMPTY
23060: LIST
23061: LIST
23062: ST_TO_ADDR
// Barracks0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
23063: LD_ADDR_VAR 0 53
23067: PUSH
23068: LD_INT 1
23070: NEG
23071: PUSH
23072: LD_INT 3
23074: NEG
23075: PUSH
23076: EMPTY
23077: LIST
23078: LIST
23079: PUSH
23080: LD_INT 0
23082: PUSH
23083: LD_INT 3
23085: NEG
23086: PUSH
23087: EMPTY
23088: LIST
23089: LIST
23090: PUSH
23091: LD_INT 1
23093: PUSH
23094: LD_INT 2
23096: NEG
23097: PUSH
23098: EMPTY
23099: LIST
23100: LIST
23101: PUSH
23102: EMPTY
23103: LIST
23104: LIST
23105: LIST
23106: ST_TO_ADDR
// Barracks1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
23107: LD_ADDR_VAR 0 54
23111: PUSH
23112: LD_INT 2
23114: PUSH
23115: LD_INT 1
23117: NEG
23118: PUSH
23119: EMPTY
23120: LIST
23121: LIST
23122: PUSH
23123: LD_INT 3
23125: PUSH
23126: LD_INT 0
23128: PUSH
23129: EMPTY
23130: LIST
23131: LIST
23132: PUSH
23133: LD_INT 3
23135: PUSH
23136: LD_INT 1
23138: PUSH
23139: EMPTY
23140: LIST
23141: LIST
23142: PUSH
23143: EMPTY
23144: LIST
23145: LIST
23146: LIST
23147: ST_TO_ADDR
// Barracks2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
23148: LD_ADDR_VAR 0 55
23152: PUSH
23153: LD_INT 3
23155: PUSH
23156: LD_INT 2
23158: PUSH
23159: EMPTY
23160: LIST
23161: LIST
23162: PUSH
23163: LD_INT 3
23165: PUSH
23166: LD_INT 3
23168: PUSH
23169: EMPTY
23170: LIST
23171: LIST
23172: PUSH
23173: LD_INT 2
23175: PUSH
23176: LD_INT 3
23178: PUSH
23179: EMPTY
23180: LIST
23181: LIST
23182: PUSH
23183: EMPTY
23184: LIST
23185: LIST
23186: LIST
23187: ST_TO_ADDR
// Barracks3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
23188: LD_ADDR_VAR 0 56
23192: PUSH
23193: LD_INT 1
23195: PUSH
23196: LD_INT 3
23198: PUSH
23199: EMPTY
23200: LIST
23201: LIST
23202: PUSH
23203: LD_INT 0
23205: PUSH
23206: LD_INT 3
23208: PUSH
23209: EMPTY
23210: LIST
23211: LIST
23212: PUSH
23213: LD_INT 1
23215: NEG
23216: PUSH
23217: LD_INT 2
23219: PUSH
23220: EMPTY
23221: LIST
23222: LIST
23223: PUSH
23224: EMPTY
23225: LIST
23226: LIST
23227: LIST
23228: ST_TO_ADDR
// Barracks4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
23229: LD_ADDR_VAR 0 57
23233: PUSH
23234: LD_INT 2
23236: NEG
23237: PUSH
23238: LD_INT 1
23240: PUSH
23241: EMPTY
23242: LIST
23243: LIST
23244: PUSH
23245: LD_INT 3
23247: NEG
23248: PUSH
23249: LD_INT 0
23251: PUSH
23252: EMPTY
23253: LIST
23254: LIST
23255: PUSH
23256: LD_INT 3
23258: NEG
23259: PUSH
23260: LD_INT 1
23262: NEG
23263: PUSH
23264: EMPTY
23265: LIST
23266: LIST
23267: PUSH
23268: EMPTY
23269: LIST
23270: LIST
23271: LIST
23272: ST_TO_ADDR
// Barracks5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
23273: LD_ADDR_VAR 0 58
23277: PUSH
23278: LD_INT 2
23280: NEG
23281: PUSH
23282: LD_INT 3
23284: NEG
23285: PUSH
23286: EMPTY
23287: LIST
23288: LIST
23289: PUSH
23290: LD_INT 3
23292: NEG
23293: PUSH
23294: LD_INT 2
23296: NEG
23297: PUSH
23298: EMPTY
23299: LIST
23300: LIST
23301: PUSH
23302: LD_INT 3
23304: NEG
23305: PUSH
23306: LD_INT 3
23308: NEG
23309: PUSH
23310: EMPTY
23311: LIST
23312: LIST
23313: PUSH
23314: EMPTY
23315: LIST
23316: LIST
23317: LIST
23318: ST_TO_ADDR
// Bunker0 = [ [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] ] ;
23319: LD_ADDR_VAR 0 59
23323: PUSH
23324: LD_INT 1
23326: NEG
23327: PUSH
23328: LD_INT 2
23330: NEG
23331: PUSH
23332: EMPTY
23333: LIST
23334: LIST
23335: PUSH
23336: LD_INT 0
23338: PUSH
23339: LD_INT 2
23341: NEG
23342: PUSH
23343: EMPTY
23344: LIST
23345: LIST
23346: PUSH
23347: LD_INT 1
23349: PUSH
23350: LD_INT 1
23352: NEG
23353: PUSH
23354: EMPTY
23355: LIST
23356: LIST
23357: PUSH
23358: EMPTY
23359: LIST
23360: LIST
23361: LIST
23362: ST_TO_ADDR
// Bunker1 = [ [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] ] ;
23363: LD_ADDR_VAR 0 60
23367: PUSH
23368: LD_INT 1
23370: PUSH
23371: LD_INT 1
23373: NEG
23374: PUSH
23375: EMPTY
23376: LIST
23377: LIST
23378: PUSH
23379: LD_INT 2
23381: PUSH
23382: LD_INT 0
23384: PUSH
23385: EMPTY
23386: LIST
23387: LIST
23388: PUSH
23389: LD_INT 2
23391: PUSH
23392: LD_INT 1
23394: PUSH
23395: EMPTY
23396: LIST
23397: LIST
23398: PUSH
23399: EMPTY
23400: LIST
23401: LIST
23402: LIST
23403: ST_TO_ADDR
// Bunker2 = [ [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] ] ;
23404: LD_ADDR_VAR 0 61
23408: PUSH
23409: LD_INT 2
23411: PUSH
23412: LD_INT 1
23414: PUSH
23415: EMPTY
23416: LIST
23417: LIST
23418: PUSH
23419: LD_INT 2
23421: PUSH
23422: LD_INT 2
23424: PUSH
23425: EMPTY
23426: LIST
23427: LIST
23428: PUSH
23429: LD_INT 1
23431: PUSH
23432: LD_INT 2
23434: PUSH
23435: EMPTY
23436: LIST
23437: LIST
23438: PUSH
23439: EMPTY
23440: LIST
23441: LIST
23442: LIST
23443: ST_TO_ADDR
// Bunker3 = [ [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] ] ;
23444: LD_ADDR_VAR 0 62
23448: PUSH
23449: LD_INT 1
23451: PUSH
23452: LD_INT 2
23454: PUSH
23455: EMPTY
23456: LIST
23457: LIST
23458: PUSH
23459: LD_INT 0
23461: PUSH
23462: LD_INT 2
23464: PUSH
23465: EMPTY
23466: LIST
23467: LIST
23468: PUSH
23469: LD_INT 1
23471: NEG
23472: PUSH
23473: LD_INT 1
23475: PUSH
23476: EMPTY
23477: LIST
23478: LIST
23479: PUSH
23480: EMPTY
23481: LIST
23482: LIST
23483: LIST
23484: ST_TO_ADDR
// Bunker4 = [ [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] ] ;
23485: LD_ADDR_VAR 0 63
23489: PUSH
23490: LD_INT 1
23492: NEG
23493: PUSH
23494: LD_INT 1
23496: PUSH
23497: EMPTY
23498: LIST
23499: LIST
23500: PUSH
23501: LD_INT 2
23503: NEG
23504: PUSH
23505: LD_INT 0
23507: PUSH
23508: EMPTY
23509: LIST
23510: LIST
23511: PUSH
23512: LD_INT 2
23514: NEG
23515: PUSH
23516: LD_INT 1
23518: NEG
23519: PUSH
23520: EMPTY
23521: LIST
23522: LIST
23523: PUSH
23524: EMPTY
23525: LIST
23526: LIST
23527: LIST
23528: ST_TO_ADDR
// Bunker5 = [ [ - 1 , - 2 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
23529: LD_ADDR_VAR 0 64
23533: PUSH
23534: LD_INT 1
23536: NEG
23537: PUSH
23538: LD_INT 2
23540: NEG
23541: PUSH
23542: EMPTY
23543: LIST
23544: LIST
23545: PUSH
23546: LD_INT 2
23548: NEG
23549: PUSH
23550: LD_INT 1
23552: NEG
23553: PUSH
23554: EMPTY
23555: LIST
23556: LIST
23557: PUSH
23558: LD_INT 2
23560: NEG
23561: PUSH
23562: LD_INT 2
23564: NEG
23565: PUSH
23566: EMPTY
23567: LIST
23568: LIST
23569: PUSH
23570: EMPTY
23571: LIST
23572: LIST
23573: LIST
23574: ST_TO_ADDR
// end ; 2 :
23575: GO 26841
23577: LD_INT 2
23579: DOUBLE
23580: EQUAL
23581: IFTRUE 23585
23583: GO 26840
23585: POP
// begin Factory0 = [ [ 4 , 0 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 4 , 1 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 3 , - 2 ] , [ 5 , 2 ] , [ 3 , 3 ] , [ 3 , 2 ] , [ 4 , 3 ] , [ 4 , 4 ] , [ 3 , 4 ] , [ 2 , 3 ] , [ 2 , 2 ] , [ 4 , 2 ] , [ 2 , 4 ] , [ 0 , 4 ] , [ 0 , 3 ] , [ 1 , 4 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ - 1 , 3 ] , [ 2 , 5 ] , [ - 2 , 3 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 2 , 0 ] , [ - 2 , 1 ] , [ - 3 , 1 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 4 , - 2 ] , [ - 2 , 2 ] , [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 3 , - 4 ] , [ - 3 , - 3 ] , [ - 4 , - 3 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 3 , - 5 ] , [ - 5 , - 3 ] ] ;
23586: LD_ADDR_VAR 0 29
23590: PUSH
23591: LD_INT 4
23593: PUSH
23594: LD_INT 0
23596: PUSH
23597: EMPTY
23598: LIST
23599: LIST
23600: PUSH
23601: LD_INT 4
23603: PUSH
23604: LD_INT 1
23606: NEG
23607: PUSH
23608: EMPTY
23609: LIST
23610: LIST
23611: PUSH
23612: LD_INT 5
23614: PUSH
23615: LD_INT 0
23617: PUSH
23618: EMPTY
23619: LIST
23620: LIST
23621: PUSH
23622: LD_INT 5
23624: PUSH
23625: LD_INT 1
23627: PUSH
23628: EMPTY
23629: LIST
23630: LIST
23631: PUSH
23632: LD_INT 4
23634: PUSH
23635: LD_INT 1
23637: PUSH
23638: EMPTY
23639: LIST
23640: LIST
23641: PUSH
23642: LD_INT 3
23644: PUSH
23645: LD_INT 0
23647: PUSH
23648: EMPTY
23649: LIST
23650: LIST
23651: PUSH
23652: LD_INT 3
23654: PUSH
23655: LD_INT 1
23657: NEG
23658: PUSH
23659: EMPTY
23660: LIST
23661: LIST
23662: PUSH
23663: LD_INT 3
23665: PUSH
23666: LD_INT 2
23668: NEG
23669: PUSH
23670: EMPTY
23671: LIST
23672: LIST
23673: PUSH
23674: LD_INT 5
23676: PUSH
23677: LD_INT 2
23679: PUSH
23680: EMPTY
23681: LIST
23682: LIST
23683: PUSH
23684: LD_INT 3
23686: PUSH
23687: LD_INT 3
23689: PUSH
23690: EMPTY
23691: LIST
23692: LIST
23693: PUSH
23694: LD_INT 3
23696: PUSH
23697: LD_INT 2
23699: PUSH
23700: EMPTY
23701: LIST
23702: LIST
23703: PUSH
23704: LD_INT 4
23706: PUSH
23707: LD_INT 3
23709: PUSH
23710: EMPTY
23711: LIST
23712: LIST
23713: PUSH
23714: LD_INT 4
23716: PUSH
23717: LD_INT 4
23719: PUSH
23720: EMPTY
23721: LIST
23722: LIST
23723: PUSH
23724: LD_INT 3
23726: PUSH
23727: LD_INT 4
23729: PUSH
23730: EMPTY
23731: LIST
23732: LIST
23733: PUSH
23734: LD_INT 2
23736: PUSH
23737: LD_INT 3
23739: PUSH
23740: EMPTY
23741: LIST
23742: LIST
23743: PUSH
23744: LD_INT 2
23746: PUSH
23747: LD_INT 2
23749: PUSH
23750: EMPTY
23751: LIST
23752: LIST
23753: PUSH
23754: LD_INT 4
23756: PUSH
23757: LD_INT 2
23759: PUSH
23760: EMPTY
23761: LIST
23762: LIST
23763: PUSH
23764: LD_INT 2
23766: PUSH
23767: LD_INT 4
23769: PUSH
23770: EMPTY
23771: LIST
23772: LIST
23773: PUSH
23774: LD_INT 0
23776: PUSH
23777: LD_INT 4
23779: PUSH
23780: EMPTY
23781: LIST
23782: LIST
23783: PUSH
23784: LD_INT 0
23786: PUSH
23787: LD_INT 3
23789: PUSH
23790: EMPTY
23791: LIST
23792: LIST
23793: PUSH
23794: LD_INT 1
23796: PUSH
23797: LD_INT 4
23799: PUSH
23800: EMPTY
23801: LIST
23802: LIST
23803: PUSH
23804: LD_INT 1
23806: PUSH
23807: LD_INT 5
23809: PUSH
23810: EMPTY
23811: LIST
23812: LIST
23813: PUSH
23814: LD_INT 0
23816: PUSH
23817: LD_INT 5
23819: PUSH
23820: EMPTY
23821: LIST
23822: LIST
23823: PUSH
23824: LD_INT 1
23826: NEG
23827: PUSH
23828: LD_INT 4
23830: PUSH
23831: EMPTY
23832: LIST
23833: LIST
23834: PUSH
23835: LD_INT 1
23837: NEG
23838: PUSH
23839: LD_INT 3
23841: PUSH
23842: EMPTY
23843: LIST
23844: LIST
23845: PUSH
23846: LD_INT 2
23848: PUSH
23849: LD_INT 5
23851: PUSH
23852: EMPTY
23853: LIST
23854: LIST
23855: PUSH
23856: LD_INT 2
23858: NEG
23859: PUSH
23860: LD_INT 3
23862: PUSH
23863: EMPTY
23864: LIST
23865: LIST
23866: PUSH
23867: LD_INT 3
23869: NEG
23870: PUSH
23871: LD_INT 0
23873: PUSH
23874: EMPTY
23875: LIST
23876: LIST
23877: PUSH
23878: LD_INT 3
23880: NEG
23881: PUSH
23882: LD_INT 1
23884: NEG
23885: PUSH
23886: EMPTY
23887: LIST
23888: LIST
23889: PUSH
23890: LD_INT 2
23892: NEG
23893: PUSH
23894: LD_INT 0
23896: PUSH
23897: EMPTY
23898: LIST
23899: LIST
23900: PUSH
23901: LD_INT 2
23903: NEG
23904: PUSH
23905: LD_INT 1
23907: PUSH
23908: EMPTY
23909: LIST
23910: LIST
23911: PUSH
23912: LD_INT 3
23914: NEG
23915: PUSH
23916: LD_INT 1
23918: PUSH
23919: EMPTY
23920: LIST
23921: LIST
23922: PUSH
23923: LD_INT 4
23925: NEG
23926: PUSH
23927: LD_INT 0
23929: PUSH
23930: EMPTY
23931: LIST
23932: LIST
23933: PUSH
23934: LD_INT 4
23936: NEG
23937: PUSH
23938: LD_INT 1
23940: NEG
23941: PUSH
23942: EMPTY
23943: LIST
23944: LIST
23945: PUSH
23946: LD_INT 4
23948: NEG
23949: PUSH
23950: LD_INT 2
23952: NEG
23953: PUSH
23954: EMPTY
23955: LIST
23956: LIST
23957: PUSH
23958: LD_INT 2
23960: NEG
23961: PUSH
23962: LD_INT 2
23964: PUSH
23965: EMPTY
23966: LIST
23967: LIST
23968: PUSH
23969: LD_INT 4
23971: NEG
23972: PUSH
23973: LD_INT 4
23975: NEG
23976: PUSH
23977: EMPTY
23978: LIST
23979: LIST
23980: PUSH
23981: LD_INT 4
23983: NEG
23984: PUSH
23985: LD_INT 5
23987: NEG
23988: PUSH
23989: EMPTY
23990: LIST
23991: LIST
23992: PUSH
23993: LD_INT 3
23995: NEG
23996: PUSH
23997: LD_INT 4
23999: NEG
24000: PUSH
24001: EMPTY
24002: LIST
24003: LIST
24004: PUSH
24005: LD_INT 3
24007: NEG
24008: PUSH
24009: LD_INT 3
24011: NEG
24012: PUSH
24013: EMPTY
24014: LIST
24015: LIST
24016: PUSH
24017: LD_INT 4
24019: NEG
24020: PUSH
24021: LD_INT 3
24023: NEG
24024: PUSH
24025: EMPTY
24026: LIST
24027: LIST
24028: PUSH
24029: LD_INT 5
24031: NEG
24032: PUSH
24033: LD_INT 4
24035: NEG
24036: PUSH
24037: EMPTY
24038: LIST
24039: LIST
24040: PUSH
24041: LD_INT 5
24043: NEG
24044: PUSH
24045: LD_INT 5
24047: NEG
24048: PUSH
24049: EMPTY
24050: LIST
24051: LIST
24052: PUSH
24053: LD_INT 3
24055: NEG
24056: PUSH
24057: LD_INT 5
24059: NEG
24060: PUSH
24061: EMPTY
24062: LIST
24063: LIST
24064: PUSH
24065: LD_INT 5
24067: NEG
24068: PUSH
24069: LD_INT 3
24071: NEG
24072: PUSH
24073: EMPTY
24074: LIST
24075: LIST
24076: PUSH
24077: EMPTY
24078: LIST
24079: LIST
24080: LIST
24081: LIST
24082: LIST
24083: LIST
24084: LIST
24085: LIST
24086: LIST
24087: LIST
24088: LIST
24089: LIST
24090: LIST
24091: LIST
24092: LIST
24093: LIST
24094: LIST
24095: LIST
24096: LIST
24097: LIST
24098: LIST
24099: LIST
24100: LIST
24101: LIST
24102: LIST
24103: LIST
24104: LIST
24105: LIST
24106: LIST
24107: LIST
24108: LIST
24109: LIST
24110: LIST
24111: LIST
24112: LIST
24113: LIST
24114: LIST
24115: LIST
24116: LIST
24117: LIST
24118: LIST
24119: LIST
24120: LIST
24121: LIST
24122: LIST
24123: ST_TO_ADDR
// Factory1 = [ [ 4 , 4 ] , [ 4 , 3 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 3 , 4 ] , [ 3 , 3 ] , [ 5 , 3 ] , [ 3 , 5 ] , [ 0 , 3 ] , [ 0 , 2 ] , [ 1 , 3 ] , [ 1 , 4 ] , [ 0 , 4 ] , [ - 1 , 3 ] , [ - 1 , 2 ] , [ 2 , 4 ] , [ - 2 , 2 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , - 2 ] , [ - 3 , 2 ] , [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 2 , - 3 ] , [ - 2 , - 2 ] , [ - 3 , - 2 ] , [ - 4 , - 3 ] , [ - 4 , - 4 ] , [ - 2 , - 4 ] , [ - 4 , - 2 ] , [ 0 , - 4 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ 1 , - 3 ] , [ 0 , - 3 ] , [ - 1 , - 4 ] , [ - 1 , - 5 ] , [ 2 , - 3 ] , [ - 2 , - 5 ] ] ;
24124: LD_ADDR_VAR 0 30
24128: PUSH
24129: LD_INT 4
24131: PUSH
24132: LD_INT 4
24134: PUSH
24135: EMPTY
24136: LIST
24137: LIST
24138: PUSH
24139: LD_INT 4
24141: PUSH
24142: LD_INT 3
24144: PUSH
24145: EMPTY
24146: LIST
24147: LIST
24148: PUSH
24149: LD_INT 5
24151: PUSH
24152: LD_INT 4
24154: PUSH
24155: EMPTY
24156: LIST
24157: LIST
24158: PUSH
24159: LD_INT 5
24161: PUSH
24162: LD_INT 5
24164: PUSH
24165: EMPTY
24166: LIST
24167: LIST
24168: PUSH
24169: LD_INT 4
24171: PUSH
24172: LD_INT 5
24174: PUSH
24175: EMPTY
24176: LIST
24177: LIST
24178: PUSH
24179: LD_INT 3
24181: PUSH
24182: LD_INT 4
24184: PUSH
24185: EMPTY
24186: LIST
24187: LIST
24188: PUSH
24189: LD_INT 3
24191: PUSH
24192: LD_INT 3
24194: PUSH
24195: EMPTY
24196: LIST
24197: LIST
24198: PUSH
24199: LD_INT 5
24201: PUSH
24202: LD_INT 3
24204: PUSH
24205: EMPTY
24206: LIST
24207: LIST
24208: PUSH
24209: LD_INT 3
24211: PUSH
24212: LD_INT 5
24214: PUSH
24215: EMPTY
24216: LIST
24217: LIST
24218: PUSH
24219: LD_INT 0
24221: PUSH
24222: LD_INT 3
24224: PUSH
24225: EMPTY
24226: LIST
24227: LIST
24228: PUSH
24229: LD_INT 0
24231: PUSH
24232: LD_INT 2
24234: PUSH
24235: EMPTY
24236: LIST
24237: LIST
24238: PUSH
24239: LD_INT 1
24241: PUSH
24242: LD_INT 3
24244: PUSH
24245: EMPTY
24246: LIST
24247: LIST
24248: PUSH
24249: LD_INT 1
24251: PUSH
24252: LD_INT 4
24254: PUSH
24255: EMPTY
24256: LIST
24257: LIST
24258: PUSH
24259: LD_INT 0
24261: PUSH
24262: LD_INT 4
24264: PUSH
24265: EMPTY
24266: LIST
24267: LIST
24268: PUSH
24269: LD_INT 1
24271: NEG
24272: PUSH
24273: LD_INT 3
24275: PUSH
24276: EMPTY
24277: LIST
24278: LIST
24279: PUSH
24280: LD_INT 1
24282: NEG
24283: PUSH
24284: LD_INT 2
24286: PUSH
24287: EMPTY
24288: LIST
24289: LIST
24290: PUSH
24291: LD_INT 2
24293: PUSH
24294: LD_INT 4
24296: PUSH
24297: EMPTY
24298: LIST
24299: LIST
24300: PUSH
24301: LD_INT 2
24303: NEG
24304: PUSH
24305: LD_INT 2
24307: PUSH
24308: EMPTY
24309: LIST
24310: LIST
24311: PUSH
24312: LD_INT 4
24314: NEG
24315: PUSH
24316: LD_INT 0
24318: PUSH
24319: EMPTY
24320: LIST
24321: LIST
24322: PUSH
24323: LD_INT 4
24325: NEG
24326: PUSH
24327: LD_INT 1
24329: NEG
24330: PUSH
24331: EMPTY
24332: LIST
24333: LIST
24334: PUSH
24335: LD_INT 3
24337: NEG
24338: PUSH
24339: LD_INT 0
24341: PUSH
24342: EMPTY
24343: LIST
24344: LIST
24345: PUSH
24346: LD_INT 3
24348: NEG
24349: PUSH
24350: LD_INT 1
24352: PUSH
24353: EMPTY
24354: LIST
24355: LIST
24356: PUSH
24357: LD_INT 4
24359: NEG
24360: PUSH
24361: LD_INT 1
24363: PUSH
24364: EMPTY
24365: LIST
24366: LIST
24367: PUSH
24368: LD_INT 5
24370: NEG
24371: PUSH
24372: LD_INT 0
24374: PUSH
24375: EMPTY
24376: LIST
24377: LIST
24378: PUSH
24379: LD_INT 5
24381: NEG
24382: PUSH
24383: LD_INT 1
24385: NEG
24386: PUSH
24387: EMPTY
24388: LIST
24389: LIST
24390: PUSH
24391: LD_INT 5
24393: NEG
24394: PUSH
24395: LD_INT 2
24397: NEG
24398: PUSH
24399: EMPTY
24400: LIST
24401: LIST
24402: PUSH
24403: LD_INT 3
24405: NEG
24406: PUSH
24407: LD_INT 2
24409: PUSH
24410: EMPTY
24411: LIST
24412: LIST
24413: PUSH
24414: LD_INT 3
24416: NEG
24417: PUSH
24418: LD_INT 3
24420: NEG
24421: PUSH
24422: EMPTY
24423: LIST
24424: LIST
24425: PUSH
24426: LD_INT 3
24428: NEG
24429: PUSH
24430: LD_INT 4
24432: NEG
24433: PUSH
24434: EMPTY
24435: LIST
24436: LIST
24437: PUSH
24438: LD_INT 2
24440: NEG
24441: PUSH
24442: LD_INT 3
24444: NEG
24445: PUSH
24446: EMPTY
24447: LIST
24448: LIST
24449: PUSH
24450: LD_INT 2
24452: NEG
24453: PUSH
24454: LD_INT 2
24456: NEG
24457: PUSH
24458: EMPTY
24459: LIST
24460: LIST
24461: PUSH
24462: LD_INT 3
24464: NEG
24465: PUSH
24466: LD_INT 2
24468: NEG
24469: PUSH
24470: EMPTY
24471: LIST
24472: LIST
24473: PUSH
24474: LD_INT 4
24476: NEG
24477: PUSH
24478: LD_INT 3
24480: NEG
24481: PUSH
24482: EMPTY
24483: LIST
24484: LIST
24485: PUSH
24486: LD_INT 4
24488: NEG
24489: PUSH
24490: LD_INT 4
24492: NEG
24493: PUSH
24494: EMPTY
24495: LIST
24496: LIST
24497: PUSH
24498: LD_INT 2
24500: NEG
24501: PUSH
24502: LD_INT 4
24504: NEG
24505: PUSH
24506: EMPTY
24507: LIST
24508: LIST
24509: PUSH
24510: LD_INT 4
24512: NEG
24513: PUSH
24514: LD_INT 2
24516: NEG
24517: PUSH
24518: EMPTY
24519: LIST
24520: LIST
24521: PUSH
24522: LD_INT 0
24524: PUSH
24525: LD_INT 4
24527: NEG
24528: PUSH
24529: EMPTY
24530: LIST
24531: LIST
24532: PUSH
24533: LD_INT 0
24535: PUSH
24536: LD_INT 5
24538: NEG
24539: PUSH
24540: EMPTY
24541: LIST
24542: LIST
24543: PUSH
24544: LD_INT 1
24546: PUSH
24547: LD_INT 4
24549: NEG
24550: PUSH
24551: EMPTY
24552: LIST
24553: LIST
24554: PUSH
24555: LD_INT 1
24557: PUSH
24558: LD_INT 3
24560: NEG
24561: PUSH
24562: EMPTY
24563: LIST
24564: LIST
24565: PUSH
24566: LD_INT 0
24568: PUSH
24569: LD_INT 3
24571: NEG
24572: PUSH
24573: EMPTY
24574: LIST
24575: LIST
24576: PUSH
24577: LD_INT 1
24579: NEG
24580: PUSH
24581: LD_INT 4
24583: NEG
24584: PUSH
24585: EMPTY
24586: LIST
24587: LIST
24588: PUSH
24589: LD_INT 1
24591: NEG
24592: PUSH
24593: LD_INT 5
24595: NEG
24596: PUSH
24597: EMPTY
24598: LIST
24599: LIST
24600: PUSH
24601: LD_INT 2
24603: PUSH
24604: LD_INT 3
24606: NEG
24607: PUSH
24608: EMPTY
24609: LIST
24610: LIST
24611: PUSH
24612: LD_INT 2
24614: NEG
24615: PUSH
24616: LD_INT 5
24618: NEG
24619: PUSH
24620: EMPTY
24621: LIST
24622: LIST
24623: PUSH
24624: EMPTY
24625: LIST
24626: LIST
24627: LIST
24628: LIST
24629: LIST
24630: LIST
24631: LIST
24632: LIST
24633: LIST
24634: LIST
24635: LIST
24636: LIST
24637: LIST
24638: LIST
24639: LIST
24640: LIST
24641: LIST
24642: LIST
24643: LIST
24644: LIST
24645: LIST
24646: LIST
24647: LIST
24648: LIST
24649: LIST
24650: LIST
24651: LIST
24652: LIST
24653: LIST
24654: LIST
24655: LIST
24656: LIST
24657: LIST
24658: LIST
24659: LIST
24660: LIST
24661: LIST
24662: LIST
24663: LIST
24664: LIST
24665: LIST
24666: LIST
24667: LIST
24668: LIST
24669: LIST
24670: ST_TO_ADDR
// Factory2 = [ [ 0 , 4 ] , [ 0 , 3 ] , [ 1 , 4 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ - 1 , 3 ] , [ 2 , 5 ] , [ - 2 , 3 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 2 , 0 ] , [ - 2 , 1 ] , [ - 3 , 1 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 4 , - 2 ] , [ - 2 , 2 ] , [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 3 , - 4 ] , [ - 3 , - 3 ] , [ - 4 , - 3 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 3 , - 5 ] , [ - 5 , - 3 ] , [ 0 , - 3 ] , [ 0 , - 4 ] , [ 1 , - 3 ] , [ 1 , - 2 ] , [ 0 , - 2 ] , [ - 1 , - 3 ] , [ - 1 , - 4 ] , [ 2 , - 2 ] , [ - 2 , - 4 ] , [ 4 , 0 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 4 , 1 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 3 , - 2 ] , [ 5 , 2 ] ] ;
24671: LD_ADDR_VAR 0 31
24675: PUSH
24676: LD_INT 0
24678: PUSH
24679: LD_INT 4
24681: PUSH
24682: EMPTY
24683: LIST
24684: LIST
24685: PUSH
24686: LD_INT 0
24688: PUSH
24689: LD_INT 3
24691: PUSH
24692: EMPTY
24693: LIST
24694: LIST
24695: PUSH
24696: LD_INT 1
24698: PUSH
24699: LD_INT 4
24701: PUSH
24702: EMPTY
24703: LIST
24704: LIST
24705: PUSH
24706: LD_INT 1
24708: PUSH
24709: LD_INT 5
24711: PUSH
24712: EMPTY
24713: LIST
24714: LIST
24715: PUSH
24716: LD_INT 0
24718: PUSH
24719: LD_INT 5
24721: PUSH
24722: EMPTY
24723: LIST
24724: LIST
24725: PUSH
24726: LD_INT 1
24728: NEG
24729: PUSH
24730: LD_INT 4
24732: PUSH
24733: EMPTY
24734: LIST
24735: LIST
24736: PUSH
24737: LD_INT 1
24739: NEG
24740: PUSH
24741: LD_INT 3
24743: PUSH
24744: EMPTY
24745: LIST
24746: LIST
24747: PUSH
24748: LD_INT 2
24750: PUSH
24751: LD_INT 5
24753: PUSH
24754: EMPTY
24755: LIST
24756: LIST
24757: PUSH
24758: LD_INT 2
24760: NEG
24761: PUSH
24762: LD_INT 3
24764: PUSH
24765: EMPTY
24766: LIST
24767: LIST
24768: PUSH
24769: LD_INT 3
24771: NEG
24772: PUSH
24773: LD_INT 0
24775: PUSH
24776: EMPTY
24777: LIST
24778: LIST
24779: PUSH
24780: LD_INT 3
24782: NEG
24783: PUSH
24784: LD_INT 1
24786: NEG
24787: PUSH
24788: EMPTY
24789: LIST
24790: LIST
24791: PUSH
24792: LD_INT 2
24794: NEG
24795: PUSH
24796: LD_INT 0
24798: PUSH
24799: EMPTY
24800: LIST
24801: LIST
24802: PUSH
24803: LD_INT 2
24805: NEG
24806: PUSH
24807: LD_INT 1
24809: PUSH
24810: EMPTY
24811: LIST
24812: LIST
24813: PUSH
24814: LD_INT 3
24816: NEG
24817: PUSH
24818: LD_INT 1
24820: PUSH
24821: EMPTY
24822: LIST
24823: LIST
24824: PUSH
24825: LD_INT 4
24827: NEG
24828: PUSH
24829: LD_INT 0
24831: PUSH
24832: EMPTY
24833: LIST
24834: LIST
24835: PUSH
24836: LD_INT 4
24838: NEG
24839: PUSH
24840: LD_INT 1
24842: NEG
24843: PUSH
24844: EMPTY
24845: LIST
24846: LIST
24847: PUSH
24848: LD_INT 4
24850: NEG
24851: PUSH
24852: LD_INT 2
24854: NEG
24855: PUSH
24856: EMPTY
24857: LIST
24858: LIST
24859: PUSH
24860: LD_INT 2
24862: NEG
24863: PUSH
24864: LD_INT 2
24866: PUSH
24867: EMPTY
24868: LIST
24869: LIST
24870: PUSH
24871: LD_INT 4
24873: NEG
24874: PUSH
24875: LD_INT 4
24877: NEG
24878: PUSH
24879: EMPTY
24880: LIST
24881: LIST
24882: PUSH
24883: LD_INT 4
24885: NEG
24886: PUSH
24887: LD_INT 5
24889: NEG
24890: PUSH
24891: EMPTY
24892: LIST
24893: LIST
24894: PUSH
24895: LD_INT 3
24897: NEG
24898: PUSH
24899: LD_INT 4
24901: NEG
24902: PUSH
24903: EMPTY
24904: LIST
24905: LIST
24906: PUSH
24907: LD_INT 3
24909: NEG
24910: PUSH
24911: LD_INT 3
24913: NEG
24914: PUSH
24915: EMPTY
24916: LIST
24917: LIST
24918: PUSH
24919: LD_INT 4
24921: NEG
24922: PUSH
24923: LD_INT 3
24925: NEG
24926: PUSH
24927: EMPTY
24928: LIST
24929: LIST
24930: PUSH
24931: LD_INT 5
24933: NEG
24934: PUSH
24935: LD_INT 4
24937: NEG
24938: PUSH
24939: EMPTY
24940: LIST
24941: LIST
24942: PUSH
24943: LD_INT 5
24945: NEG
24946: PUSH
24947: LD_INT 5
24949: NEG
24950: PUSH
24951: EMPTY
24952: LIST
24953: LIST
24954: PUSH
24955: LD_INT 3
24957: NEG
24958: PUSH
24959: LD_INT 5
24961: NEG
24962: PUSH
24963: EMPTY
24964: LIST
24965: LIST
24966: PUSH
24967: LD_INT 5
24969: NEG
24970: PUSH
24971: LD_INT 3
24973: NEG
24974: PUSH
24975: EMPTY
24976: LIST
24977: LIST
24978: PUSH
24979: LD_INT 0
24981: PUSH
24982: LD_INT 3
24984: NEG
24985: PUSH
24986: EMPTY
24987: LIST
24988: LIST
24989: PUSH
24990: LD_INT 0
24992: PUSH
24993: LD_INT 4
24995: NEG
24996: PUSH
24997: EMPTY
24998: LIST
24999: LIST
25000: PUSH
25001: LD_INT 1
25003: PUSH
25004: LD_INT 3
25006: NEG
25007: PUSH
25008: EMPTY
25009: LIST
25010: LIST
25011: PUSH
25012: LD_INT 1
25014: PUSH
25015: LD_INT 2
25017: NEG
25018: PUSH
25019: EMPTY
25020: LIST
25021: LIST
25022: PUSH
25023: LD_INT 0
25025: PUSH
25026: LD_INT 2
25028: NEG
25029: PUSH
25030: EMPTY
25031: LIST
25032: LIST
25033: PUSH
25034: LD_INT 1
25036: NEG
25037: PUSH
25038: LD_INT 3
25040: NEG
25041: PUSH
25042: EMPTY
25043: LIST
25044: LIST
25045: PUSH
25046: LD_INT 1
25048: NEG
25049: PUSH
25050: LD_INT 4
25052: NEG
25053: PUSH
25054: EMPTY
25055: LIST
25056: LIST
25057: PUSH
25058: LD_INT 2
25060: PUSH
25061: LD_INT 2
25063: NEG
25064: PUSH
25065: EMPTY
25066: LIST
25067: LIST
25068: PUSH
25069: LD_INT 2
25071: NEG
25072: PUSH
25073: LD_INT 4
25075: NEG
25076: PUSH
25077: EMPTY
25078: LIST
25079: LIST
25080: PUSH
25081: LD_INT 4
25083: PUSH
25084: LD_INT 0
25086: PUSH
25087: EMPTY
25088: LIST
25089: LIST
25090: PUSH
25091: LD_INT 4
25093: PUSH
25094: LD_INT 1
25096: NEG
25097: PUSH
25098: EMPTY
25099: LIST
25100: LIST
25101: PUSH
25102: LD_INT 5
25104: PUSH
25105: LD_INT 0
25107: PUSH
25108: EMPTY
25109: LIST
25110: LIST
25111: PUSH
25112: LD_INT 5
25114: PUSH
25115: LD_INT 1
25117: PUSH
25118: EMPTY
25119: LIST
25120: LIST
25121: PUSH
25122: LD_INT 4
25124: PUSH
25125: LD_INT 1
25127: PUSH
25128: EMPTY
25129: LIST
25130: LIST
25131: PUSH
25132: LD_INT 3
25134: PUSH
25135: LD_INT 0
25137: PUSH
25138: EMPTY
25139: LIST
25140: LIST
25141: PUSH
25142: LD_INT 3
25144: PUSH
25145: LD_INT 1
25147: NEG
25148: PUSH
25149: EMPTY
25150: LIST
25151: LIST
25152: PUSH
25153: LD_INT 3
25155: PUSH
25156: LD_INT 2
25158: NEG
25159: PUSH
25160: EMPTY
25161: LIST
25162: LIST
25163: PUSH
25164: LD_INT 5
25166: PUSH
25167: LD_INT 2
25169: PUSH
25170: EMPTY
25171: LIST
25172: LIST
25173: PUSH
25174: EMPTY
25175: LIST
25176: LIST
25177: LIST
25178: LIST
25179: LIST
25180: LIST
25181: LIST
25182: LIST
25183: LIST
25184: LIST
25185: LIST
25186: LIST
25187: LIST
25188: LIST
25189: LIST
25190: LIST
25191: LIST
25192: LIST
25193: LIST
25194: LIST
25195: LIST
25196: LIST
25197: LIST
25198: LIST
25199: LIST
25200: LIST
25201: LIST
25202: LIST
25203: LIST
25204: LIST
25205: LIST
25206: LIST
25207: LIST
25208: LIST
25209: LIST
25210: LIST
25211: LIST
25212: LIST
25213: LIST
25214: LIST
25215: LIST
25216: LIST
25217: LIST
25218: LIST
25219: LIST
25220: ST_TO_ADDR
// Factory3 = [ [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , - 2 ] , [ - 3 , 2 ] , [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 2 , - 3 ] , [ - 2 , - 2 ] , [ - 3 , - 2 ] , [ - 4 , - 3 ] , [ - 4 , - 4 ] , [ - 2 , - 4 ] , [ - 4 , - 2 ] , [ 0 , - 4 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ 1 , - 3 ] , [ 0 , - 3 ] , [ - 1 , - 4 ] , [ - 1 , - 5 ] , [ 2 , - 3 ] , [ - 2 , - 5 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 4 , 0 ] , [ 4 , 1 ] , [ 3 , 1 ] , [ 2 , 0 ] , [ 2 , - 1 ] , [ 2 , - 2 ] , [ 4 , 2 ] , [ 4 , 4 ] , [ 4 , 3 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 3 , 4 ] , [ 3 , 3 ] , [ 5 , 3 ] , [ 3 , 5 ] ] ;
25221: LD_ADDR_VAR 0 32
25225: PUSH
25226: LD_INT 4
25228: NEG
25229: PUSH
25230: LD_INT 0
25232: PUSH
25233: EMPTY
25234: LIST
25235: LIST
25236: PUSH
25237: LD_INT 4
25239: NEG
25240: PUSH
25241: LD_INT 1
25243: NEG
25244: PUSH
25245: EMPTY
25246: LIST
25247: LIST
25248: PUSH
25249: LD_INT 3
25251: NEG
25252: PUSH
25253: LD_INT 0
25255: PUSH
25256: EMPTY
25257: LIST
25258: LIST
25259: PUSH
25260: LD_INT 3
25262: NEG
25263: PUSH
25264: LD_INT 1
25266: PUSH
25267: EMPTY
25268: LIST
25269: LIST
25270: PUSH
25271: LD_INT 4
25273: NEG
25274: PUSH
25275: LD_INT 1
25277: PUSH
25278: EMPTY
25279: LIST
25280: LIST
25281: PUSH
25282: LD_INT 5
25284: NEG
25285: PUSH
25286: LD_INT 0
25288: PUSH
25289: EMPTY
25290: LIST
25291: LIST
25292: PUSH
25293: LD_INT 5
25295: NEG
25296: PUSH
25297: LD_INT 1
25299: NEG
25300: PUSH
25301: EMPTY
25302: LIST
25303: LIST
25304: PUSH
25305: LD_INT 5
25307: NEG
25308: PUSH
25309: LD_INT 2
25311: NEG
25312: PUSH
25313: EMPTY
25314: LIST
25315: LIST
25316: PUSH
25317: LD_INT 3
25319: NEG
25320: PUSH
25321: LD_INT 2
25323: PUSH
25324: EMPTY
25325: LIST
25326: LIST
25327: PUSH
25328: LD_INT 3
25330: NEG
25331: PUSH
25332: LD_INT 3
25334: NEG
25335: PUSH
25336: EMPTY
25337: LIST
25338: LIST
25339: PUSH
25340: LD_INT 3
25342: NEG
25343: PUSH
25344: LD_INT 4
25346: NEG
25347: PUSH
25348: EMPTY
25349: LIST
25350: LIST
25351: PUSH
25352: LD_INT 2
25354: NEG
25355: PUSH
25356: LD_INT 3
25358: NEG
25359: PUSH
25360: EMPTY
25361: LIST
25362: LIST
25363: PUSH
25364: LD_INT 2
25366: NEG
25367: PUSH
25368: LD_INT 2
25370: NEG
25371: PUSH
25372: EMPTY
25373: LIST
25374: LIST
25375: PUSH
25376: LD_INT 3
25378: NEG
25379: PUSH
25380: LD_INT 2
25382: NEG
25383: PUSH
25384: EMPTY
25385: LIST
25386: LIST
25387: PUSH
25388: LD_INT 4
25390: NEG
25391: PUSH
25392: LD_INT 3
25394: NEG
25395: PUSH
25396: EMPTY
25397: LIST
25398: LIST
25399: PUSH
25400: LD_INT 4
25402: NEG
25403: PUSH
25404: LD_INT 4
25406: NEG
25407: PUSH
25408: EMPTY
25409: LIST
25410: LIST
25411: PUSH
25412: LD_INT 2
25414: NEG
25415: PUSH
25416: LD_INT 4
25418: NEG
25419: PUSH
25420: EMPTY
25421: LIST
25422: LIST
25423: PUSH
25424: LD_INT 4
25426: NEG
25427: PUSH
25428: LD_INT 2
25430: NEG
25431: PUSH
25432: EMPTY
25433: LIST
25434: LIST
25435: PUSH
25436: LD_INT 0
25438: PUSH
25439: LD_INT 4
25441: NEG
25442: PUSH
25443: EMPTY
25444: LIST
25445: LIST
25446: PUSH
25447: LD_INT 0
25449: PUSH
25450: LD_INT 5
25452: NEG
25453: PUSH
25454: EMPTY
25455: LIST
25456: LIST
25457: PUSH
25458: LD_INT 1
25460: PUSH
25461: LD_INT 4
25463: NEG
25464: PUSH
25465: EMPTY
25466: LIST
25467: LIST
25468: PUSH
25469: LD_INT 1
25471: PUSH
25472: LD_INT 3
25474: NEG
25475: PUSH
25476: EMPTY
25477: LIST
25478: LIST
25479: PUSH
25480: LD_INT 0
25482: PUSH
25483: LD_INT 3
25485: NEG
25486: PUSH
25487: EMPTY
25488: LIST
25489: LIST
25490: PUSH
25491: LD_INT 1
25493: NEG
25494: PUSH
25495: LD_INT 4
25497: NEG
25498: PUSH
25499: EMPTY
25500: LIST
25501: LIST
25502: PUSH
25503: LD_INT 1
25505: NEG
25506: PUSH
25507: LD_INT 5
25509: NEG
25510: PUSH
25511: EMPTY
25512: LIST
25513: LIST
25514: PUSH
25515: LD_INT 2
25517: PUSH
25518: LD_INT 3
25520: NEG
25521: PUSH
25522: EMPTY
25523: LIST
25524: LIST
25525: PUSH
25526: LD_INT 2
25528: NEG
25529: PUSH
25530: LD_INT 5
25532: NEG
25533: PUSH
25534: EMPTY
25535: LIST
25536: LIST
25537: PUSH
25538: LD_INT 3
25540: PUSH
25541: LD_INT 0
25543: PUSH
25544: EMPTY
25545: LIST
25546: LIST
25547: PUSH
25548: LD_INT 3
25550: PUSH
25551: LD_INT 1
25553: NEG
25554: PUSH
25555: EMPTY
25556: LIST
25557: LIST
25558: PUSH
25559: LD_INT 4
25561: PUSH
25562: LD_INT 0
25564: PUSH
25565: EMPTY
25566: LIST
25567: LIST
25568: PUSH
25569: LD_INT 4
25571: PUSH
25572: LD_INT 1
25574: PUSH
25575: EMPTY
25576: LIST
25577: LIST
25578: PUSH
25579: LD_INT 3
25581: PUSH
25582: LD_INT 1
25584: PUSH
25585: EMPTY
25586: LIST
25587: LIST
25588: PUSH
25589: LD_INT 2
25591: PUSH
25592: LD_INT 0
25594: PUSH
25595: EMPTY
25596: LIST
25597: LIST
25598: PUSH
25599: LD_INT 2
25601: PUSH
25602: LD_INT 1
25604: NEG
25605: PUSH
25606: EMPTY
25607: LIST
25608: LIST
25609: PUSH
25610: LD_INT 2
25612: PUSH
25613: LD_INT 2
25615: NEG
25616: PUSH
25617: EMPTY
25618: LIST
25619: LIST
25620: PUSH
25621: LD_INT 4
25623: PUSH
25624: LD_INT 2
25626: PUSH
25627: EMPTY
25628: LIST
25629: LIST
25630: PUSH
25631: LD_INT 4
25633: PUSH
25634: LD_INT 4
25636: PUSH
25637: EMPTY
25638: LIST
25639: LIST
25640: PUSH
25641: LD_INT 4
25643: PUSH
25644: LD_INT 3
25646: PUSH
25647: EMPTY
25648: LIST
25649: LIST
25650: PUSH
25651: LD_INT 5
25653: PUSH
25654: LD_INT 4
25656: PUSH
25657: EMPTY
25658: LIST
25659: LIST
25660: PUSH
25661: LD_INT 5
25663: PUSH
25664: LD_INT 5
25666: PUSH
25667: EMPTY
25668: LIST
25669: LIST
25670: PUSH
25671: LD_INT 4
25673: PUSH
25674: LD_INT 5
25676: PUSH
25677: EMPTY
25678: LIST
25679: LIST
25680: PUSH
25681: LD_INT 3
25683: PUSH
25684: LD_INT 4
25686: PUSH
25687: EMPTY
25688: LIST
25689: LIST
25690: PUSH
25691: LD_INT 3
25693: PUSH
25694: LD_INT 3
25696: PUSH
25697: EMPTY
25698: LIST
25699: LIST
25700: PUSH
25701: LD_INT 5
25703: PUSH
25704: LD_INT 3
25706: PUSH
25707: EMPTY
25708: LIST
25709: LIST
25710: PUSH
25711: LD_INT 3
25713: PUSH
25714: LD_INT 5
25716: PUSH
25717: EMPTY
25718: LIST
25719: LIST
25720: PUSH
25721: EMPTY
25722: LIST
25723: LIST
25724: LIST
25725: LIST
25726: LIST
25727: LIST
25728: LIST
25729: LIST
25730: LIST
25731: LIST
25732: LIST
25733: LIST
25734: LIST
25735: LIST
25736: LIST
25737: LIST
25738: LIST
25739: LIST
25740: LIST
25741: LIST
25742: LIST
25743: LIST
25744: LIST
25745: LIST
25746: LIST
25747: LIST
25748: LIST
25749: LIST
25750: LIST
25751: LIST
25752: LIST
25753: LIST
25754: LIST
25755: LIST
25756: LIST
25757: LIST
25758: LIST
25759: LIST
25760: LIST
25761: LIST
25762: LIST
25763: LIST
25764: LIST
25765: LIST
25766: LIST
25767: ST_TO_ADDR
// Factory4 = [ [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 3 , - 4 ] , [ - 3 , - 3 ] , [ - 4 , - 3 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 3 , - 5 ] , [ - 5 , - 3 ] , [ 0 , - 3 ] , [ 0 , - 4 ] , [ 1 , - 3 ] , [ 1 , - 2 ] , [ 0 , - 2 ] , [ - 1 , - 3 ] , [ - 1 , - 4 ] , [ 2 , - 2 ] , [ - 2 , - 4 ] , [ 4 , 0 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 4 , 1 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 3 , - 2 ] , [ 5 , 2 ] , [ 3 , 3 ] , [ 3 , 2 ] , [ 4 , 3 ] , [ 4 , 4 ] , [ 3 , 4 ] , [ 2 , 3 ] , [ 2 , 2 ] , [ 4 , 2 ] , [ 2 , 4 ] , [ 0 , 4 ] , [ 0 , 3 ] , [ 1 , 4 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ - 1 , 3 ] , [ 2 , 5 ] , [ - 2 , 3 ] ] ;
25768: LD_ADDR_VAR 0 33
25772: PUSH
25773: LD_INT 4
25775: NEG
25776: PUSH
25777: LD_INT 4
25779: NEG
25780: PUSH
25781: EMPTY
25782: LIST
25783: LIST
25784: PUSH
25785: LD_INT 4
25787: NEG
25788: PUSH
25789: LD_INT 5
25791: NEG
25792: PUSH
25793: EMPTY
25794: LIST
25795: LIST
25796: PUSH
25797: LD_INT 3
25799: NEG
25800: PUSH
25801: LD_INT 4
25803: NEG
25804: PUSH
25805: EMPTY
25806: LIST
25807: LIST
25808: PUSH
25809: LD_INT 3
25811: NEG
25812: PUSH
25813: LD_INT 3
25815: NEG
25816: PUSH
25817: EMPTY
25818: LIST
25819: LIST
25820: PUSH
25821: LD_INT 4
25823: NEG
25824: PUSH
25825: LD_INT 3
25827: NEG
25828: PUSH
25829: EMPTY
25830: LIST
25831: LIST
25832: PUSH
25833: LD_INT 5
25835: NEG
25836: PUSH
25837: LD_INT 4
25839: NEG
25840: PUSH
25841: EMPTY
25842: LIST
25843: LIST
25844: PUSH
25845: LD_INT 5
25847: NEG
25848: PUSH
25849: LD_INT 5
25851: NEG
25852: PUSH
25853: EMPTY
25854: LIST
25855: LIST
25856: PUSH
25857: LD_INT 3
25859: NEG
25860: PUSH
25861: LD_INT 5
25863: NEG
25864: PUSH
25865: EMPTY
25866: LIST
25867: LIST
25868: PUSH
25869: LD_INT 5
25871: NEG
25872: PUSH
25873: LD_INT 3
25875: NEG
25876: PUSH
25877: EMPTY
25878: LIST
25879: LIST
25880: PUSH
25881: LD_INT 0
25883: PUSH
25884: LD_INT 3
25886: NEG
25887: PUSH
25888: EMPTY
25889: LIST
25890: LIST
25891: PUSH
25892: LD_INT 0
25894: PUSH
25895: LD_INT 4
25897: NEG
25898: PUSH
25899: EMPTY
25900: LIST
25901: LIST
25902: PUSH
25903: LD_INT 1
25905: PUSH
25906: LD_INT 3
25908: NEG
25909: PUSH
25910: EMPTY
25911: LIST
25912: LIST
25913: PUSH
25914: LD_INT 1
25916: PUSH
25917: LD_INT 2
25919: NEG
25920: PUSH
25921: EMPTY
25922: LIST
25923: LIST
25924: PUSH
25925: LD_INT 0
25927: PUSH
25928: LD_INT 2
25930: NEG
25931: PUSH
25932: EMPTY
25933: LIST
25934: LIST
25935: PUSH
25936: LD_INT 1
25938: NEG
25939: PUSH
25940: LD_INT 3
25942: NEG
25943: PUSH
25944: EMPTY
25945: LIST
25946: LIST
25947: PUSH
25948: LD_INT 1
25950: NEG
25951: PUSH
25952: LD_INT 4
25954: NEG
25955: PUSH
25956: EMPTY
25957: LIST
25958: LIST
25959: PUSH
25960: LD_INT 2
25962: PUSH
25963: LD_INT 2
25965: NEG
25966: PUSH
25967: EMPTY
25968: LIST
25969: LIST
25970: PUSH
25971: LD_INT 2
25973: NEG
25974: PUSH
25975: LD_INT 4
25977: NEG
25978: PUSH
25979: EMPTY
25980: LIST
25981: LIST
25982: PUSH
25983: LD_INT 4
25985: PUSH
25986: LD_INT 0
25988: PUSH
25989: EMPTY
25990: LIST
25991: LIST
25992: PUSH
25993: LD_INT 4
25995: PUSH
25996: LD_INT 1
25998: NEG
25999: PUSH
26000: EMPTY
26001: LIST
26002: LIST
26003: PUSH
26004: LD_INT 5
26006: PUSH
26007: LD_INT 0
26009: PUSH
26010: EMPTY
26011: LIST
26012: LIST
26013: PUSH
26014: LD_INT 5
26016: PUSH
26017: LD_INT 1
26019: PUSH
26020: EMPTY
26021: LIST
26022: LIST
26023: PUSH
26024: LD_INT 4
26026: PUSH
26027: LD_INT 1
26029: PUSH
26030: EMPTY
26031: LIST
26032: LIST
26033: PUSH
26034: LD_INT 3
26036: PUSH
26037: LD_INT 0
26039: PUSH
26040: EMPTY
26041: LIST
26042: LIST
26043: PUSH
26044: LD_INT 3
26046: PUSH
26047: LD_INT 1
26049: NEG
26050: PUSH
26051: EMPTY
26052: LIST
26053: LIST
26054: PUSH
26055: LD_INT 3
26057: PUSH
26058: LD_INT 2
26060: NEG
26061: PUSH
26062: EMPTY
26063: LIST
26064: LIST
26065: PUSH
26066: LD_INT 5
26068: PUSH
26069: LD_INT 2
26071: PUSH
26072: EMPTY
26073: LIST
26074: LIST
26075: PUSH
26076: LD_INT 3
26078: PUSH
26079: LD_INT 3
26081: PUSH
26082: EMPTY
26083: LIST
26084: LIST
26085: PUSH
26086: LD_INT 3
26088: PUSH
26089: LD_INT 2
26091: PUSH
26092: EMPTY
26093: LIST
26094: LIST
26095: PUSH
26096: LD_INT 4
26098: PUSH
26099: LD_INT 3
26101: PUSH
26102: EMPTY
26103: LIST
26104: LIST
26105: PUSH
26106: LD_INT 4
26108: PUSH
26109: LD_INT 4
26111: PUSH
26112: EMPTY
26113: LIST
26114: LIST
26115: PUSH
26116: LD_INT 3
26118: PUSH
26119: LD_INT 4
26121: PUSH
26122: EMPTY
26123: LIST
26124: LIST
26125: PUSH
26126: LD_INT 2
26128: PUSH
26129: LD_INT 3
26131: PUSH
26132: EMPTY
26133: LIST
26134: LIST
26135: PUSH
26136: LD_INT 2
26138: PUSH
26139: LD_INT 2
26141: PUSH
26142: EMPTY
26143: LIST
26144: LIST
26145: PUSH
26146: LD_INT 4
26148: PUSH
26149: LD_INT 2
26151: PUSH
26152: EMPTY
26153: LIST
26154: LIST
26155: PUSH
26156: LD_INT 2
26158: PUSH
26159: LD_INT 4
26161: PUSH
26162: EMPTY
26163: LIST
26164: LIST
26165: PUSH
26166: LD_INT 0
26168: PUSH
26169: LD_INT 4
26171: PUSH
26172: EMPTY
26173: LIST
26174: LIST
26175: PUSH
26176: LD_INT 0
26178: PUSH
26179: LD_INT 3
26181: PUSH
26182: EMPTY
26183: LIST
26184: LIST
26185: PUSH
26186: LD_INT 1
26188: PUSH
26189: LD_INT 4
26191: PUSH
26192: EMPTY
26193: LIST
26194: LIST
26195: PUSH
26196: LD_INT 1
26198: PUSH
26199: LD_INT 5
26201: PUSH
26202: EMPTY
26203: LIST
26204: LIST
26205: PUSH
26206: LD_INT 0
26208: PUSH
26209: LD_INT 5
26211: PUSH
26212: EMPTY
26213: LIST
26214: LIST
26215: PUSH
26216: LD_INT 1
26218: NEG
26219: PUSH
26220: LD_INT 4
26222: PUSH
26223: EMPTY
26224: LIST
26225: LIST
26226: PUSH
26227: LD_INT 1
26229: NEG
26230: PUSH
26231: LD_INT 3
26233: PUSH
26234: EMPTY
26235: LIST
26236: LIST
26237: PUSH
26238: LD_INT 2
26240: PUSH
26241: LD_INT 5
26243: PUSH
26244: EMPTY
26245: LIST
26246: LIST
26247: PUSH
26248: LD_INT 2
26250: NEG
26251: PUSH
26252: LD_INT 3
26254: PUSH
26255: EMPTY
26256: LIST
26257: LIST
26258: PUSH
26259: EMPTY
26260: LIST
26261: LIST
26262: LIST
26263: LIST
26264: LIST
26265: LIST
26266: LIST
26267: LIST
26268: LIST
26269: LIST
26270: LIST
26271: LIST
26272: LIST
26273: LIST
26274: LIST
26275: LIST
26276: LIST
26277: LIST
26278: LIST
26279: LIST
26280: LIST
26281: LIST
26282: LIST
26283: LIST
26284: LIST
26285: LIST
26286: LIST
26287: LIST
26288: LIST
26289: LIST
26290: LIST
26291: LIST
26292: LIST
26293: LIST
26294: LIST
26295: LIST
26296: LIST
26297: LIST
26298: LIST
26299: LIST
26300: LIST
26301: LIST
26302: LIST
26303: LIST
26304: LIST
26305: ST_TO_ADDR
// Factory5 = [ [ 0 , - 4 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ 1 , - 3 ] , [ 0 , - 3 ] , [ - 1 , - 4 ] , [ - 1 , - 5 ] , [ 2 , - 3 ] , [ - 2 , - 5 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 4 , 0 ] , [ 4 , 1 ] , [ 3 , 1 ] , [ 2 , 0 ] , [ 2 , - 1 ] , [ 2 , - 2 ] , [ 4 , 2 ] , [ 4 , 4 ] , [ 4 , 3 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 3 , 4 ] , [ 3 , 3 ] , [ 5 , 3 ] , [ 3 , 5 ] , [ 0 , 3 ] , [ 0 , 2 ] , [ 1 , 3 ] , [ 1 , 4 ] , [ 0 , 4 ] , [ - 1 , 3 ] , [ - 1 , 2 ] , [ 2 , 4 ] , [ - 2 , 2 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , - 2 ] , [ - 3 , 2 ] ] ;
26306: LD_ADDR_VAR 0 34
26310: PUSH
26311: LD_INT 0
26313: PUSH
26314: LD_INT 4
26316: NEG
26317: PUSH
26318: EMPTY
26319: LIST
26320: LIST
26321: PUSH
26322: LD_INT 0
26324: PUSH
26325: LD_INT 5
26327: NEG
26328: PUSH
26329: EMPTY
26330: LIST
26331: LIST
26332: PUSH
26333: LD_INT 1
26335: PUSH
26336: LD_INT 4
26338: NEG
26339: PUSH
26340: EMPTY
26341: LIST
26342: LIST
26343: PUSH
26344: LD_INT 1
26346: PUSH
26347: LD_INT 3
26349: NEG
26350: PUSH
26351: EMPTY
26352: LIST
26353: LIST
26354: PUSH
26355: LD_INT 0
26357: PUSH
26358: LD_INT 3
26360: NEG
26361: PUSH
26362: EMPTY
26363: LIST
26364: LIST
26365: PUSH
26366: LD_INT 1
26368: NEG
26369: PUSH
26370: LD_INT 4
26372: NEG
26373: PUSH
26374: EMPTY
26375: LIST
26376: LIST
26377: PUSH
26378: LD_INT 1
26380: NEG
26381: PUSH
26382: LD_INT 5
26384: NEG
26385: PUSH
26386: EMPTY
26387: LIST
26388: LIST
26389: PUSH
26390: LD_INT 2
26392: PUSH
26393: LD_INT 3
26395: NEG
26396: PUSH
26397: EMPTY
26398: LIST
26399: LIST
26400: PUSH
26401: LD_INT 2
26403: NEG
26404: PUSH
26405: LD_INT 5
26407: NEG
26408: PUSH
26409: EMPTY
26410: LIST
26411: LIST
26412: PUSH
26413: LD_INT 3
26415: PUSH
26416: LD_INT 0
26418: PUSH
26419: EMPTY
26420: LIST
26421: LIST
26422: PUSH
26423: LD_INT 3
26425: PUSH
26426: LD_INT 1
26428: NEG
26429: PUSH
26430: EMPTY
26431: LIST
26432: LIST
26433: PUSH
26434: LD_INT 4
26436: PUSH
26437: LD_INT 0
26439: PUSH
26440: EMPTY
26441: LIST
26442: LIST
26443: PUSH
26444: LD_INT 4
26446: PUSH
26447: LD_INT 1
26449: PUSH
26450: EMPTY
26451: LIST
26452: LIST
26453: PUSH
26454: LD_INT 3
26456: PUSH
26457: LD_INT 1
26459: PUSH
26460: EMPTY
26461: LIST
26462: LIST
26463: PUSH
26464: LD_INT 2
26466: PUSH
26467: LD_INT 0
26469: PUSH
26470: EMPTY
26471: LIST
26472: LIST
26473: PUSH
26474: LD_INT 2
26476: PUSH
26477: LD_INT 1
26479: NEG
26480: PUSH
26481: EMPTY
26482: LIST
26483: LIST
26484: PUSH
26485: LD_INT 2
26487: PUSH
26488: LD_INT 2
26490: NEG
26491: PUSH
26492: EMPTY
26493: LIST
26494: LIST
26495: PUSH
26496: LD_INT 4
26498: PUSH
26499: LD_INT 2
26501: PUSH
26502: EMPTY
26503: LIST
26504: LIST
26505: PUSH
26506: LD_INT 4
26508: PUSH
26509: LD_INT 4
26511: PUSH
26512: EMPTY
26513: LIST
26514: LIST
26515: PUSH
26516: LD_INT 4
26518: PUSH
26519: LD_INT 3
26521: PUSH
26522: EMPTY
26523: LIST
26524: LIST
26525: PUSH
26526: LD_INT 5
26528: PUSH
26529: LD_INT 4
26531: PUSH
26532: EMPTY
26533: LIST
26534: LIST
26535: PUSH
26536: LD_INT 5
26538: PUSH
26539: LD_INT 5
26541: PUSH
26542: EMPTY
26543: LIST
26544: LIST
26545: PUSH
26546: LD_INT 4
26548: PUSH
26549: LD_INT 5
26551: PUSH
26552: EMPTY
26553: LIST
26554: LIST
26555: PUSH
26556: LD_INT 3
26558: PUSH
26559: LD_INT 4
26561: PUSH
26562: EMPTY
26563: LIST
26564: LIST
26565: PUSH
26566: LD_INT 3
26568: PUSH
26569: LD_INT 3
26571: PUSH
26572: EMPTY
26573: LIST
26574: LIST
26575: PUSH
26576: LD_INT 5
26578: PUSH
26579: LD_INT 3
26581: PUSH
26582: EMPTY
26583: LIST
26584: LIST
26585: PUSH
26586: LD_INT 3
26588: PUSH
26589: LD_INT 5
26591: PUSH
26592: EMPTY
26593: LIST
26594: LIST
26595: PUSH
26596: LD_INT 0
26598: PUSH
26599: LD_INT 3
26601: PUSH
26602: EMPTY
26603: LIST
26604: LIST
26605: PUSH
26606: LD_INT 0
26608: PUSH
26609: LD_INT 2
26611: PUSH
26612: EMPTY
26613: LIST
26614: LIST
26615: PUSH
26616: LD_INT 1
26618: PUSH
26619: LD_INT 3
26621: PUSH
26622: EMPTY
26623: LIST
26624: LIST
26625: PUSH
26626: LD_INT 1
26628: PUSH
26629: LD_INT 4
26631: PUSH
26632: EMPTY
26633: LIST
26634: LIST
26635: PUSH
26636: LD_INT 0
26638: PUSH
26639: LD_INT 4
26641: PUSH
26642: EMPTY
26643: LIST
26644: LIST
26645: PUSH
26646: LD_INT 1
26648: NEG
26649: PUSH
26650: LD_INT 3
26652: PUSH
26653: EMPTY
26654: LIST
26655: LIST
26656: PUSH
26657: LD_INT 1
26659: NEG
26660: PUSH
26661: LD_INT 2
26663: PUSH
26664: EMPTY
26665: LIST
26666: LIST
26667: PUSH
26668: LD_INT 2
26670: PUSH
26671: LD_INT 4
26673: PUSH
26674: EMPTY
26675: LIST
26676: LIST
26677: PUSH
26678: LD_INT 2
26680: NEG
26681: PUSH
26682: LD_INT 2
26684: PUSH
26685: EMPTY
26686: LIST
26687: LIST
26688: PUSH
26689: LD_INT 4
26691: NEG
26692: PUSH
26693: LD_INT 0
26695: PUSH
26696: EMPTY
26697: LIST
26698: LIST
26699: PUSH
26700: LD_INT 4
26702: NEG
26703: PUSH
26704: LD_INT 1
26706: NEG
26707: PUSH
26708: EMPTY
26709: LIST
26710: LIST
26711: PUSH
26712: LD_INT 3
26714: NEG
26715: PUSH
26716: LD_INT 0
26718: PUSH
26719: EMPTY
26720: LIST
26721: LIST
26722: PUSH
26723: LD_INT 3
26725: NEG
26726: PUSH
26727: LD_INT 1
26729: PUSH
26730: EMPTY
26731: LIST
26732: LIST
26733: PUSH
26734: LD_INT 4
26736: NEG
26737: PUSH
26738: LD_INT 1
26740: PUSH
26741: EMPTY
26742: LIST
26743: LIST
26744: PUSH
26745: LD_INT 5
26747: NEG
26748: PUSH
26749: LD_INT 0
26751: PUSH
26752: EMPTY
26753: LIST
26754: LIST
26755: PUSH
26756: LD_INT 5
26758: NEG
26759: PUSH
26760: LD_INT 1
26762: NEG
26763: PUSH
26764: EMPTY
26765: LIST
26766: LIST
26767: PUSH
26768: LD_INT 5
26770: NEG
26771: PUSH
26772: LD_INT 2
26774: NEG
26775: PUSH
26776: EMPTY
26777: LIST
26778: LIST
26779: PUSH
26780: LD_INT 3
26782: NEG
26783: PUSH
26784: LD_INT 2
26786: PUSH
26787: EMPTY
26788: LIST
26789: LIST
26790: PUSH
26791: EMPTY
26792: LIST
26793: LIST
26794: LIST
26795: LIST
26796: LIST
26797: LIST
26798: LIST
26799: LIST
26800: LIST
26801: LIST
26802: LIST
26803: LIST
26804: LIST
26805: LIST
26806: LIST
26807: LIST
26808: LIST
26809: LIST
26810: LIST
26811: LIST
26812: LIST
26813: LIST
26814: LIST
26815: LIST
26816: LIST
26817: LIST
26818: LIST
26819: LIST
26820: LIST
26821: LIST
26822: LIST
26823: LIST
26824: LIST
26825: LIST
26826: LIST
26827: LIST
26828: LIST
26829: LIST
26830: LIST
26831: LIST
26832: LIST
26833: LIST
26834: LIST
26835: LIST
26836: LIST
26837: ST_TO_ADDR
// end ; end ;
26838: GO 26841
26840: POP
// case btype of b_depot , b_warehouse :
26841: LD_VAR 0 1
26845: PUSH
26846: LD_INT 0
26848: DOUBLE
26849: EQUAL
26850: IFTRUE 26860
26852: LD_INT 1
26854: DOUBLE
26855: EQUAL
26856: IFTRUE 26860
26858: GO 27061
26860: POP
// case nation of nation_american :
26861: LD_VAR 0 5
26865: PUSH
26866: LD_INT 1
26868: DOUBLE
26869: EQUAL
26870: IFTRUE 26874
26872: GO 26930
26874: POP
// temp_list = [ DepotAm0 , DepotAm1 , DepotAm2 , DepotAm3 , DepotAm4 , DepotAm5 ] [ dir + 1 ] ; nation_arabian :
26875: LD_ADDR_VAR 0 9
26879: PUSH
26880: LD_VAR 0 11
26884: PUSH
26885: LD_VAR 0 12
26889: PUSH
26890: LD_VAR 0 13
26894: PUSH
26895: LD_VAR 0 14
26899: PUSH
26900: LD_VAR 0 15
26904: PUSH
26905: LD_VAR 0 16
26909: PUSH
26910: EMPTY
26911: LIST
26912: LIST
26913: LIST
26914: LIST
26915: LIST
26916: LIST
26917: PUSH
26918: LD_VAR 0 4
26922: PUSH
26923: LD_INT 1
26925: PLUS
26926: ARRAY
26927: ST_TO_ADDR
26928: GO 27059
26930: LD_INT 2
26932: DOUBLE
26933: EQUAL
26934: IFTRUE 26938
26936: GO 26994
26938: POP
// temp_list = [ DepotAr0 , DepotAr1 , DepotAr2 , DepotAr3 , DepotAr4 , DepotAr5 ] [ dir + 1 ] ; nation_russian :
26939: LD_ADDR_VAR 0 9
26943: PUSH
26944: LD_VAR 0 17
26948: PUSH
26949: LD_VAR 0 18
26953: PUSH
26954: LD_VAR 0 19
26958: PUSH
26959: LD_VAR 0 20
26963: PUSH
26964: LD_VAR 0 21
26968: PUSH
26969: LD_VAR 0 22
26973: PUSH
26974: EMPTY
26975: LIST
26976: LIST
26977: LIST
26978: LIST
26979: LIST
26980: LIST
26981: PUSH
26982: LD_VAR 0 4
26986: PUSH
26987: LD_INT 1
26989: PLUS
26990: ARRAY
26991: ST_TO_ADDR
26992: GO 27059
26994: LD_INT 3
26996: DOUBLE
26997: EQUAL
26998: IFTRUE 27002
27000: GO 27058
27002: POP
// temp_list = [ DepotRu0 , DepotRu1 , DepotRu2 , DepotRu3 , DepotRu4 , DepotRu5 ] [ dir + 1 ] ; end ; b_workshop , b_factory :
27003: LD_ADDR_VAR 0 9
27007: PUSH
27008: LD_VAR 0 23
27012: PUSH
27013: LD_VAR 0 24
27017: PUSH
27018: LD_VAR 0 25
27022: PUSH
27023: LD_VAR 0 26
27027: PUSH
27028: LD_VAR 0 27
27032: PUSH
27033: LD_VAR 0 28
27037: PUSH
27038: EMPTY
27039: LIST
27040: LIST
27041: LIST
27042: LIST
27043: LIST
27044: LIST
27045: PUSH
27046: LD_VAR 0 4
27050: PUSH
27051: LD_INT 1
27053: PLUS
27054: ARRAY
27055: ST_TO_ADDR
27056: GO 27059
27058: POP
27059: GO 27608
27061: LD_INT 2
27063: DOUBLE
27064: EQUAL
27065: IFTRUE 27075
27067: LD_INT 3
27069: DOUBLE
27070: EQUAL
27071: IFTRUE 27075
27073: GO 27131
27075: POP
// temp_list = [ Factory0 , Factory1 , Factory2 , Factory3 , Factory4 , Factory5 ] [ dir + 1 ] ; b_ext_track , b_ext_gun , b_ext_rocket , b_ext_noncombat , b_ext_radar , b_ext_siberium , b_ext_stitch , b_ext_computer , b_ext_laser :
27076: LD_ADDR_VAR 0 9
27080: PUSH
27081: LD_VAR 0 29
27085: PUSH
27086: LD_VAR 0 30
27090: PUSH
27091: LD_VAR 0 31
27095: PUSH
27096: LD_VAR 0 32
27100: PUSH
27101: LD_VAR 0 33
27105: PUSH
27106: LD_VAR 0 34
27110: PUSH
27111: EMPTY
27112: LIST
27113: LIST
27114: LIST
27115: LIST
27116: LIST
27117: LIST
27118: PUSH
27119: LD_VAR 0 4
27123: PUSH
27124: LD_INT 1
27126: PLUS
27127: ARRAY
27128: ST_TO_ADDR
27129: GO 27608
27131: LD_INT 16
27133: DOUBLE
27134: EQUAL
27135: IFTRUE 27187
27137: LD_INT 17
27139: DOUBLE
27140: EQUAL
27141: IFTRUE 27187
27143: LD_INT 18
27145: DOUBLE
27146: EQUAL
27147: IFTRUE 27187
27149: LD_INT 19
27151: DOUBLE
27152: EQUAL
27153: IFTRUE 27187
27155: LD_INT 20
27157: DOUBLE
27158: EQUAL
27159: IFTRUE 27187
27161: LD_INT 21
27163: DOUBLE
27164: EQUAL
27165: IFTRUE 27187
27167: LD_INT 23
27169: DOUBLE
27170: EQUAL
27171: IFTRUE 27187
27173: LD_INT 24
27175: DOUBLE
27176: EQUAL
27177: IFTRUE 27187
27179: LD_INT 25
27181: DOUBLE
27182: EQUAL
27183: IFTRUE 27187
27185: GO 27243
27187: POP
// temp_list = [ Ext0 , Ext1 , Ext2 , Ext3 , Ext4 , Ext5 ] [ dir + 1 ] ; b_lab , b_lab_half , b_lab_full , b_lab_biological , b_lab_computer , b_lab_opto , b_lab_siberium , b_lab_spacetime , b_lab_weapon :
27188: LD_ADDR_VAR 0 9
27192: PUSH
27193: LD_VAR 0 35
27197: PUSH
27198: LD_VAR 0 36
27202: PUSH
27203: LD_VAR 0 37
27207: PUSH
27208: LD_VAR 0 38
27212: PUSH
27213: LD_VAR 0 39
27217: PUSH
27218: LD_VAR 0 40
27222: PUSH
27223: EMPTY
27224: LIST
27225: LIST
27226: LIST
27227: LIST
27228: LIST
27229: LIST
27230: PUSH
27231: LD_VAR 0 4
27235: PUSH
27236: LD_INT 1
27238: PLUS
27239: ARRAY
27240: ST_TO_ADDR
27241: GO 27608
27243: LD_INT 6
27245: DOUBLE
27246: EQUAL
27247: IFTRUE 27299
27249: LD_INT 7
27251: DOUBLE
27252: EQUAL
27253: IFTRUE 27299
27255: LD_INT 8
27257: DOUBLE
27258: EQUAL
27259: IFTRUE 27299
27261: LD_INT 13
27263: DOUBLE
27264: EQUAL
27265: IFTRUE 27299
27267: LD_INT 12
27269: DOUBLE
27270: EQUAL
27271: IFTRUE 27299
27273: LD_INT 15
27275: DOUBLE
27276: EQUAL
27277: IFTRUE 27299
27279: LD_INT 11
27281: DOUBLE
27282: EQUAL
27283: IFTRUE 27299
27285: LD_INT 14
27287: DOUBLE
27288: EQUAL
27289: IFTRUE 27299
27291: LD_INT 10
27293: DOUBLE
27294: EQUAL
27295: IFTRUE 27299
27297: GO 27355
27299: POP
// temp_list = [ Lab0 , Lab1 , Lab2 , Lab3 , Lab4 , Lab5 ] [ dir + 1 ] ; b_control_tower :
27300: LD_ADDR_VAR 0 9
27304: PUSH
27305: LD_VAR 0 41
27309: PUSH
27310: LD_VAR 0 42
27314: PUSH
27315: LD_VAR 0 43
27319: PUSH
27320: LD_VAR 0 44
27324: PUSH
27325: LD_VAR 0 45
27329: PUSH
27330: LD_VAR 0 46
27334: PUSH
27335: EMPTY
27336: LIST
27337: LIST
27338: LIST
27339: LIST
27340: LIST
27341: LIST
27342: PUSH
27343: LD_VAR 0 4
27347: PUSH
27348: LD_INT 1
27350: PLUS
27351: ARRAY
27352: ST_TO_ADDR
27353: GO 27608
27355: LD_INT 36
27357: DOUBLE
27358: EQUAL
27359: IFTRUE 27363
27361: GO 27419
27363: POP
// temp_list = [ ControlTower0 , ControlTower1 , ControlTower2 , ControlTower3 , ControlTower4 , ControlTower5 ] [ dir + 1 ] ; b_armoury , b_barracks , b_teleport , b_behemoth :
27364: LD_ADDR_VAR 0 9
27368: PUSH
27369: LD_VAR 0 47
27373: PUSH
27374: LD_VAR 0 48
27378: PUSH
27379: LD_VAR 0 49
27383: PUSH
27384: LD_VAR 0 50
27388: PUSH
27389: LD_VAR 0 51
27393: PUSH
27394: LD_VAR 0 52
27398: PUSH
27399: EMPTY
27400: LIST
27401: LIST
27402: LIST
27403: LIST
27404: LIST
27405: LIST
27406: PUSH
27407: LD_VAR 0 4
27411: PUSH
27412: LD_INT 1
27414: PLUS
27415: ARRAY
27416: ST_TO_ADDR
27417: GO 27608
27419: LD_INT 4
27421: DOUBLE
27422: EQUAL
27423: IFTRUE 27445
27425: LD_INT 5
27427: DOUBLE
27428: EQUAL
27429: IFTRUE 27445
27431: LD_INT 34
27433: DOUBLE
27434: EQUAL
27435: IFTRUE 27445
27437: LD_INT 37
27439: DOUBLE
27440: EQUAL
27441: IFTRUE 27445
27443: GO 27501
27445: POP
// temp_list = [ Barracks0 , Barracks1 , Barracks2 , Barracks3 , Barracks4 , Barracks5 ] [ dir + 1 ] ; b_breastwork , b_bunker , b_turret , b_solar_power , b_oil_power , b_siberite_power , b_oil_mine , b_siberite_mine :
27446: LD_ADDR_VAR 0 9
27450: PUSH
27451: LD_VAR 0 53
27455: PUSH
27456: LD_VAR 0 54
27460: PUSH
27461: LD_VAR 0 55
27465: PUSH
27466: LD_VAR 0 56
27470: PUSH
27471: LD_VAR 0 57
27475: PUSH
27476: LD_VAR 0 58
27480: PUSH
27481: EMPTY
27482: LIST
27483: LIST
27484: LIST
27485: LIST
27486: LIST
27487: LIST
27488: PUSH
27489: LD_VAR 0 4
27493: PUSH
27494: LD_INT 1
27496: PLUS
27497: ARRAY
27498: ST_TO_ADDR
27499: GO 27608
27501: LD_INT 31
27503: DOUBLE
27504: EQUAL
27505: IFTRUE 27551
27507: LD_INT 32
27509: DOUBLE
27510: EQUAL
27511: IFTRUE 27551
27513: LD_INT 33
27515: DOUBLE
27516: EQUAL
27517: IFTRUE 27551
27519: LD_INT 27
27521: DOUBLE
27522: EQUAL
27523: IFTRUE 27551
27525: LD_INT 26
27527: DOUBLE
27528: EQUAL
27529: IFTRUE 27551
27531: LD_INT 28
27533: DOUBLE
27534: EQUAL
27535: IFTRUE 27551
27537: LD_INT 29
27539: DOUBLE
27540: EQUAL
27541: IFTRUE 27551
27543: LD_INT 30
27545: DOUBLE
27546: EQUAL
27547: IFTRUE 27551
27549: GO 27607
27551: POP
// temp_list = [ Bunker0 , Bunker1 , Bunker2 , Bunker3 , Bunker4 , Bunker5 ] [ dir + 1 ] ; end ;
27552: LD_ADDR_VAR 0 9
27556: PUSH
27557: LD_VAR 0 59
27561: PUSH
27562: LD_VAR 0 60
27566: PUSH
27567: LD_VAR 0 61
27571: PUSH
27572: LD_VAR 0 62
27576: PUSH
27577: LD_VAR 0 63
27581: PUSH
27582: LD_VAR 0 64
27586: PUSH
27587: EMPTY
27588: LIST
27589: LIST
27590: LIST
27591: LIST
27592: LIST
27593: LIST
27594: PUSH
27595: LD_VAR 0 4
27599: PUSH
27600: LD_INT 1
27602: PLUS
27603: ARRAY
27604: ST_TO_ADDR
27605: GO 27608
27607: POP
// temp_list2 = [ ] ;
27608: LD_ADDR_VAR 0 10
27612: PUSH
27613: EMPTY
27614: ST_TO_ADDR
// for i in temp_list do
27615: LD_ADDR_VAR 0 8
27619: PUSH
27620: LD_VAR 0 9
27624: PUSH
27625: FOR_IN
27626: IFFALSE 27678
// temp_list2 = temp_list2 ^ [ [ i [ 1 ] + x , i [ 2 ] + y ] ] ;
27628: LD_ADDR_VAR 0 10
27632: PUSH
27633: LD_VAR 0 10
27637: PUSH
27638: LD_VAR 0 8
27642: PUSH
27643: LD_INT 1
27645: ARRAY
27646: PUSH
27647: LD_VAR 0 2
27651: PLUS
27652: PUSH
27653: LD_VAR 0 8
27657: PUSH
27658: LD_INT 2
27660: ARRAY
27661: PUSH
27662: LD_VAR 0 3
27666: PLUS
27667: PUSH
27668: EMPTY
27669: LIST
27670: LIST
27671: PUSH
27672: EMPTY
27673: LIST
27674: ADD
27675: ST_TO_ADDR
27676: GO 27625
27678: POP
27679: POP
// result = temp_list2 ;
27680: LD_ADDR_VAR 0 7
27684: PUSH
27685: LD_VAR 0 10
27689: ST_TO_ADDR
// end ;
27690: LD_VAR 0 7
27694: RET
// export function IsNearbyEntrance ( unit , building , distance ) ; var i , entrance ; begin
27695: LD_INT 0
27697: PPUSH
27698: PPUSH
27699: PPUSH
// result := false ;
27700: LD_ADDR_VAR 0 4
27704: PUSH
27705: LD_INT 0
27707: ST_TO_ADDR
// if not unit or not building or IsInUnit ( unit ) then
27708: LD_VAR 0 1
27712: NOT
27713: PUSH
27714: LD_VAR 0 2
27718: NOT
27719: OR
27720: PUSH
27721: LD_VAR 0 1
27725: PPUSH
27726: CALL_OW 310
27730: OR
27731: IFFALSE 27735
// exit ;
27733: GO 27939
// if distance < 0 then
27735: LD_VAR 0 3
27739: PUSH
27740: LD_INT 0
27742: LESS
27743: IFFALSE 27753
// distance := 0 ;
27745: LD_ADDR_VAR 0 3
27749: PUSH
27750: LD_INT 0
27752: ST_TO_ADDR
// entrance := GetBuildingHexes ( GetBType ( building ) , GetX ( building ) , GetY ( building ) , GetDir ( building ) , GetNation ( building ) , 1 ) ;
27753: LD_ADDR_VAR 0 6
27757: PUSH
27758: LD_VAR 0 2
27762: PPUSH
27763: CALL_OW 266
27767: PPUSH
27768: LD_VAR 0 2
27772: PPUSH
27773: CALL_OW 250
27777: PPUSH
27778: LD_VAR 0 2
27782: PPUSH
27783: CALL_OW 251
27787: PPUSH
27788: LD_VAR 0 2
27792: PPUSH
27793: CALL_OW 254
27797: PPUSH
27798: LD_VAR 0 2
27802: PPUSH
27803: CALL_OW 248
27807: PPUSH
27808: LD_INT 1
27810: PPUSH
27811: CALL 9156 0 6
27815: ST_TO_ADDR
// if not entrance then
27816: LD_VAR 0 6
27820: NOT
27821: IFFALSE 27825
// exit ;
27823: GO 27939
// for i in entrance do
27825: LD_ADDR_VAR 0 5
27829: PUSH
27830: LD_VAR 0 6
27834: PUSH
27835: FOR_IN
27836: IFFALSE 27937
// begin if not distance then
27838: LD_VAR 0 3
27842: NOT
27843: IFFALSE 27888
// begin if IsAt ( unit , i [ 1 ] , i [ 2 ] ) then
27845: LD_VAR 0 1
27849: PPUSH
27850: LD_VAR 0 5
27854: PUSH
27855: LD_INT 1
27857: ARRAY
27858: PPUSH
27859: LD_VAR 0 5
27863: PUSH
27864: LD_INT 2
27866: ARRAY
27867: PPUSH
27868: CALL_OW 307
27872: IFFALSE 27886
// begin result := true ;
27874: LD_ADDR_VAR 0 4
27878: PUSH
27879: LD_INT 1
27881: ST_TO_ADDR
// exit ;
27882: POP
27883: POP
27884: GO 27939
// end ; end else
27886: GO 27935
// begin if GetDistUnitXY ( unit , i [ 1 ] , i [ 2 ] ) <= distance then
27888: LD_VAR 0 1
27892: PPUSH
27893: LD_VAR 0 5
27897: PUSH
27898: LD_INT 1
27900: ARRAY
27901: PPUSH
27902: LD_VAR 0 5
27906: PUSH
27907: LD_INT 2
27909: ARRAY
27910: PPUSH
27911: CALL_OW 297
27915: PUSH
27916: LD_VAR 0 3
27920: LESSEQUAL
27921: IFFALSE 27935
// begin result := true ;
27923: LD_ADDR_VAR 0 4
27927: PUSH
27928: LD_INT 1
27930: ST_TO_ADDR
// exit ;
27931: POP
27932: POP
27933: GO 27939
// end ; end ; end ;
27935: GO 27835
27937: POP
27938: POP
// end ;
27939: LD_VAR 0 4
27943: RET
// export function CanSpot ( unit , unit2 ) ; var i , building ; begin
27944: LD_INT 0
27946: PPUSH
27947: PPUSH
27948: PPUSH
// result := false ;
27949: LD_ADDR_VAR 0 3
27953: PUSH
27954: LD_INT 0
27956: ST_TO_ADDR
// if not unit or not unit2 or not IsOk ( unit ) or not IsOk ( unit2 ) then
27957: LD_VAR 0 1
27961: NOT
27962: PUSH
27963: LD_VAR 0 2
27967: NOT
27968: OR
27969: PUSH
27970: LD_VAR 0 1
27974: PPUSH
27975: CALL_OW 302
27979: NOT
27980: OR
27981: PUSH
27982: LD_VAR 0 2
27986: PPUSH
27987: CALL_OW 302
27991: NOT
27992: OR
27993: IFFALSE 27997
// exit ;
27995: GO 28158
// if GetDistUnits ( unit , NearestUnitToUnit ( FilterAllUnits ( [ [ f_enemy , GetSide ( unit ) ] , [ f_not , [ f_type , unit_building ] ] ] ) , unit ) ) < 8 then
27997: LD_VAR 0 1
28001: PPUSH
28002: LD_INT 81
28004: PUSH
28005: LD_VAR 0 1
28009: PPUSH
28010: CALL_OW 255
28014: PUSH
28015: EMPTY
28016: LIST
28017: LIST
28018: PUSH
28019: LD_INT 3
28021: PUSH
28022: LD_INT 21
28024: PUSH
28025: LD_INT 3
28027: PUSH
28028: EMPTY
28029: LIST
28030: LIST
28031: PUSH
28032: EMPTY
28033: LIST
28034: LIST
28035: PUSH
28036: EMPTY
28037: LIST
28038: LIST
28039: PPUSH
28040: CALL_OW 69
28044: PPUSH
28045: LD_VAR 0 1
28049: PPUSH
28050: CALL_OW 74
28054: PPUSH
28055: CALL_OW 296
28059: PUSH
28060: LD_INT 8
28062: LESS
28063: IFFALSE 28067
// exit ;
28065: GO 28158
// building := IsInUnit ( unit2 ) ;
28067: LD_ADDR_VAR 0 5
28071: PUSH
28072: LD_VAR 0 2
28076: PPUSH
28077: CALL_OW 310
28081: ST_TO_ADDR
// if building then
28082: LD_VAR 0 5
28086: IFFALSE 28113
// result := IsNearbyEntrance ( unit , building , 2 ) else
28088: LD_ADDR_VAR 0 3
28092: PUSH
28093: LD_VAR 0 1
28097: PPUSH
28098: LD_VAR 0 5
28102: PPUSH
28103: LD_INT 2
28105: PPUSH
28106: CALL 27695 0 3
28110: ST_TO_ADDR
28111: GO 28158
// result := ( GetDistUnits ( unit , unit2 ) < 6 and See ( GetSide ( unit2 ) , unit ) ) ;
28113: LD_ADDR_VAR 0 3
28117: PUSH
28118: LD_VAR 0 1
28122: PPUSH
28123: LD_VAR 0 2
28127: PPUSH
28128: CALL_OW 296
28132: PUSH
28133: LD_INT 6
28135: LESS
28136: PUSH
28137: LD_VAR 0 2
28141: PPUSH
28142: CALL_OW 255
28146: PPUSH
28147: LD_VAR 0 1
28151: PPUSH
28152: CALL_OW 292
28156: AND
28157: ST_TO_ADDR
// end ;
28158: LD_VAR 0 3
28162: RET
// export function GetFacExt ( factory ) ; var tmp , i , list ; begin
28163: LD_INT 0
28165: PPUSH
28166: PPUSH
28167: PPUSH
28168: PPUSH
// tmp := [ ] ;
28169: LD_ADDR_VAR 0 3
28173: PUSH
28174: EMPTY
28175: ST_TO_ADDR
// list := [ ] ;
28176: LD_ADDR_VAR 0 5
28180: PUSH
28181: EMPTY
28182: ST_TO_ADDR
// for i = 16 to 25 do
28183: LD_ADDR_VAR 0 4
28187: PUSH
28188: DOUBLE
28189: LD_INT 16
28191: DEC
28192: ST_TO_ADDR
28193: LD_INT 25
28195: PUSH
28196: FOR_TO
28197: IFFALSE 28270
// tmp := tmp ^ FilterAllUnits ( [ [ [ f_side , GetSide ( factory ) ] , [ f_dist , factory , 6 ] , [ f_btype , i ] ] ] ) ;
28199: LD_ADDR_VAR 0 3
28203: PUSH
28204: LD_VAR 0 3
28208: PUSH
28209: LD_INT 22
28211: PUSH
28212: LD_VAR 0 1
28216: PPUSH
28217: CALL_OW 255
28221: PUSH
28222: EMPTY
28223: LIST
28224: LIST
28225: PUSH
28226: LD_INT 91
28228: PUSH
28229: LD_VAR 0 1
28233: PUSH
28234: LD_INT 6
28236: PUSH
28237: EMPTY
28238: LIST
28239: LIST
28240: LIST
28241: PUSH
28242: LD_INT 30
28244: PUSH
28245: LD_VAR 0 4
28249: PUSH
28250: EMPTY
28251: LIST
28252: LIST
28253: PUSH
28254: EMPTY
28255: LIST
28256: LIST
28257: LIST
28258: PUSH
28259: EMPTY
28260: LIST
28261: PPUSH
28262: CALL_OW 69
28266: ADD
28267: ST_TO_ADDR
28268: GO 28196
28270: POP
28271: POP
// for i = 1 to tmp do
28272: LD_ADDR_VAR 0 4
28276: PUSH
28277: DOUBLE
28278: LD_INT 1
28280: DEC
28281: ST_TO_ADDR
28282: LD_VAR 0 3
28286: PUSH
28287: FOR_TO
28288: IFFALSE 28376
// list := list ^ [ [ GetBType ( tmp [ i ] ) , GetX ( tmp [ i ] ) , GetY ( tmp [ i ] ) , GetDir ( tmp [ i ] ) ] ] ;
28290: LD_ADDR_VAR 0 5
28294: PUSH
28295: LD_VAR 0 5
28299: PUSH
28300: LD_VAR 0 3
28304: PUSH
28305: LD_VAR 0 4
28309: ARRAY
28310: PPUSH
28311: CALL_OW 266
28315: PUSH
28316: LD_VAR 0 3
28320: PUSH
28321: LD_VAR 0 4
28325: ARRAY
28326: PPUSH
28327: CALL_OW 250
28331: PUSH
28332: LD_VAR 0 3
28336: PUSH
28337: LD_VAR 0 4
28341: ARRAY
28342: PPUSH
28343: CALL_OW 251
28347: PUSH
28348: LD_VAR 0 3
28352: PUSH
28353: LD_VAR 0 4
28357: ARRAY
28358: PPUSH
28359: CALL_OW 254
28363: PUSH
28364: EMPTY
28365: LIST
28366: LIST
28367: LIST
28368: LIST
28369: PUSH
28370: EMPTY
28371: LIST
28372: ADD
28373: ST_TO_ADDR
28374: GO 28287
28376: POP
28377: POP
// result := list ;
28378: LD_ADDR_VAR 0 2
28382: PUSH
28383: LD_VAR 0 5
28387: ST_TO_ADDR
// end ;
28388: LD_VAR 0 2
28392: RET
// export function Produce ( factory , chassis , engine , control , weapon ) ; var i , tmp , _chassis , _weapon , _engine , _control ; begin
28393: LD_INT 0
28395: PPUSH
28396: PPUSH
28397: PPUSH
28398: PPUSH
28399: PPUSH
28400: PPUSH
28401: PPUSH
// if not factory then
28402: LD_VAR 0 1
28406: NOT
28407: IFFALSE 28411
// exit ;
28409: GO 28936
// if control = control_apeman then
28411: LD_VAR 0 4
28415: PUSH
28416: LD_INT 5
28418: EQUAL
28419: IFFALSE 28528
// begin tmp := UnitsInside ( factory ) ;
28421: LD_ADDR_VAR 0 8
28425: PUSH
28426: LD_VAR 0 1
28430: PPUSH
28431: CALL_OW 313
28435: ST_TO_ADDR
// if not UnitFilter ( tmp , [ f_class , class_apeman ] ) then
28436: LD_VAR 0 8
28440: PPUSH
28441: LD_INT 25
28443: PUSH
28444: LD_INT 12
28446: PUSH
28447: EMPTY
28448: LIST
28449: LIST
28450: PPUSH
28451: CALL_OW 72
28455: NOT
28456: IFFALSE 28466
// control := control_manual ;
28458: LD_ADDR_VAR 0 4
28462: PUSH
28463: LD_INT 1
28465: ST_TO_ADDR
// tmp := GetFacExt ( factory ) ;
28466: LD_ADDR_VAR 0 8
28470: PUSH
28471: LD_VAR 0 1
28475: PPUSH
28476: CALL 28163 0 1
28480: ST_TO_ADDR
// if tmp then
28481: LD_VAR 0 8
28485: IFFALSE 28528
// begin for i in tmp do
28487: LD_ADDR_VAR 0 7
28491: PUSH
28492: LD_VAR 0 8
28496: PUSH
28497: FOR_IN
28498: IFFALSE 28526
// if i [ 1 ] = b_ext_radar then
28500: LD_VAR 0 7
28504: PUSH
28505: LD_INT 1
28507: ARRAY
28508: PUSH
28509: LD_INT 20
28511: EQUAL
28512: IFFALSE 28524
// begin control := control_remote ;
28514: LD_ADDR_VAR 0 4
28518: PUSH
28519: LD_INT 2
28521: ST_TO_ADDR
// break ;
28522: GO 28526
// end ;
28524: GO 28497
28526: POP
28527: POP
// end ; end ; if CanBeConstructed ( factory , chassis , engine , control , weapon ) then
28528: LD_VAR 0 1
28532: PPUSH
28533: LD_VAR 0 2
28537: PPUSH
28538: LD_VAR 0 3
28542: PPUSH
28543: LD_VAR 0 4
28547: PPUSH
28548: LD_VAR 0 5
28552: PPUSH
28553: CALL_OW 448
28557: IFFALSE 28592
// begin result := [ chassis , engine , control , weapon ] ;
28559: LD_ADDR_VAR 0 6
28563: PUSH
28564: LD_VAR 0 2
28568: PUSH
28569: LD_VAR 0 3
28573: PUSH
28574: LD_VAR 0 4
28578: PUSH
28579: LD_VAR 0 5
28583: PUSH
28584: EMPTY
28585: LIST
28586: LIST
28587: LIST
28588: LIST
28589: ST_TO_ADDR
// exit ;
28590: GO 28936
// end ; _chassis := AvailableChassisList ( factory ) ;
28592: LD_ADDR_VAR 0 9
28596: PUSH
28597: LD_VAR 0 1
28601: PPUSH
28602: CALL_OW 475
28606: ST_TO_ADDR
// _engine := AvailableEngineList ( factory ) ;
28607: LD_ADDR_VAR 0 11
28611: PUSH
28612: LD_VAR 0 1
28616: PPUSH
28617: CALL_OW 476
28621: ST_TO_ADDR
// _control := AvailableControlList ( factory ) ;
28622: LD_ADDR_VAR 0 12
28626: PUSH
28627: LD_VAR 0 1
28631: PPUSH
28632: CALL_OW 477
28636: ST_TO_ADDR
// _weapon := AvailableWeaponList ( factory ) ;
28637: LD_ADDR_VAR 0 10
28641: PUSH
28642: LD_VAR 0 1
28646: PPUSH
28647: CALL_OW 478
28651: ST_TO_ADDR
// if not chassis in _chassis then
28652: LD_VAR 0 2
28656: PUSH
28657: LD_VAR 0 9
28661: IN
28662: NOT
28663: IFFALSE 28689
// chassis := _chassis [ rand ( 1 , _chassis ) ] ;
28665: LD_ADDR_VAR 0 2
28669: PUSH
28670: LD_VAR 0 9
28674: PUSH
28675: LD_INT 1
28677: PPUSH
28678: LD_VAR 0 9
28682: PPUSH
28683: CALL_OW 12
28687: ARRAY
28688: ST_TO_ADDR
// if not EngineCanBeMount ( chassis , engine ) then
28689: LD_VAR 0 2
28693: PPUSH
28694: LD_VAR 0 3
28698: PPUSH
28699: CALL 28941 0 2
28703: NOT
28704: IFFALSE 28763
// repeat engine := _engine [ 1 ] ;
28706: LD_ADDR_VAR 0 3
28710: PUSH
28711: LD_VAR 0 11
28715: PUSH
28716: LD_INT 1
28718: ARRAY
28719: ST_TO_ADDR
// _engine := Delete ( _engine , 1 ) ;
28720: LD_ADDR_VAR 0 11
28724: PUSH
28725: LD_VAR 0 11
28729: PPUSH
28730: LD_INT 1
28732: PPUSH
28733: CALL_OW 3
28737: ST_TO_ADDR
// until EngineCanBeMount ( chassis , engine ) or _engine = [ ] ;
28738: LD_VAR 0 2
28742: PPUSH
28743: LD_VAR 0 3
28747: PPUSH
28748: CALL 28941 0 2
28752: PUSH
28753: LD_VAR 0 11
28757: PUSH
28758: EMPTY
28759: EQUAL
28760: OR
28761: IFFALSE 28706
// if not control in _control then
28763: LD_VAR 0 4
28767: PUSH
28768: LD_VAR 0 12
28772: IN
28773: NOT
28774: IFFALSE 28800
// control := _control [ rand ( 1 , _control ) ] ;
28776: LD_ADDR_VAR 0 4
28780: PUSH
28781: LD_VAR 0 12
28785: PUSH
28786: LD_INT 1
28788: PPUSH
28789: LD_VAR 0 12
28793: PPUSH
28794: CALL_OW 12
28798: ARRAY
28799: ST_TO_ADDR
// if not WeaponCanBeMount ( chassis , weapon ) then
28800: LD_VAR 0 2
28804: PPUSH
28805: LD_VAR 0 5
28809: PPUSH
28810: CALL 29161 0 2
28814: NOT
28815: IFFALSE 28874
// repeat weapon := _weapon [ 1 ] ;
28817: LD_ADDR_VAR 0 5
28821: PUSH
28822: LD_VAR 0 10
28826: PUSH
28827: LD_INT 1
28829: ARRAY
28830: ST_TO_ADDR
// _weapon := Delete ( _weapon , 1 ) ;
28831: LD_ADDR_VAR 0 10
28835: PUSH
28836: LD_VAR 0 10
28840: PPUSH
28841: LD_INT 1
28843: PPUSH
28844: CALL_OW 3
28848: ST_TO_ADDR
// until WeaponCanBeMount ( chassis , weapon ) or _weapon = [ ] ;
28849: LD_VAR 0 2
28853: PPUSH
28854: LD_VAR 0 5
28858: PPUSH
28859: CALL 29161 0 2
28863: PUSH
28864: LD_VAR 0 10
28868: PUSH
28869: EMPTY
28870: EQUAL
28871: OR
28872: IFFALSE 28817
// if CanBeConstructed ( factory , chassis , engine , control , weapon ) then
28874: LD_VAR 0 1
28878: PPUSH
28879: LD_VAR 0 2
28883: PPUSH
28884: LD_VAR 0 3
28888: PPUSH
28889: LD_VAR 0 4
28893: PPUSH
28894: LD_VAR 0 5
28898: PPUSH
28899: CALL_OW 448
28903: IFFALSE 28936
// result := [ chassis , engine , control , weapon ] ;
28905: LD_ADDR_VAR 0 6
28909: PUSH
28910: LD_VAR 0 2
28914: PUSH
28915: LD_VAR 0 3
28919: PUSH
28920: LD_VAR 0 4
28924: PUSH
28925: LD_VAR 0 5
28929: PUSH
28930: EMPTY
28931: LIST
28932: LIST
28933: LIST
28934: LIST
28935: ST_TO_ADDR
// end ;
28936: LD_VAR 0 6
28940: RET
// export function EngineCanBeMount ( chassis , engine ) ; begin
28941: LD_INT 0
28943: PPUSH
// if not chassis or not engine then
28944: LD_VAR 0 1
28948: NOT
28949: PUSH
28950: LD_VAR 0 2
28954: NOT
28955: OR
28956: IFFALSE 28960
// exit ;
28958: GO 29156
// case engine of engine_solar :
28960: LD_VAR 0 2
28964: PUSH
28965: LD_INT 2
28967: DOUBLE
28968: EQUAL
28969: IFTRUE 28973
28971: GO 29011
28973: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked , us_light_wheeled , us_medium_wheeled , us_medium_tracked ] ; engine_combustion :
28974: LD_ADDR_VAR 0 3
28978: PUSH
28979: LD_INT 11
28981: PUSH
28982: LD_INT 12
28984: PUSH
28985: LD_INT 13
28987: PUSH
28988: LD_INT 14
28990: PUSH
28991: LD_INT 1
28993: PUSH
28994: LD_INT 2
28996: PUSH
28997: LD_INT 3
28999: PUSH
29000: EMPTY
29001: LIST
29002: LIST
29003: LIST
29004: LIST
29005: LIST
29006: LIST
29007: LIST
29008: ST_TO_ADDR
29009: GO 29140
29011: LD_INT 1
29013: DOUBLE
29014: EQUAL
29015: IFTRUE 29019
29017: GO 29081
29019: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked , us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling , ru_medium_wheeled , ru_heavy_wheeled , ru_medium_tracked , ru_heavy_tracked ] ; engine_siberite :
29020: LD_ADDR_VAR 0 3
29024: PUSH
29025: LD_INT 11
29027: PUSH
29028: LD_INT 12
29030: PUSH
29031: LD_INT 13
29033: PUSH
29034: LD_INT 14
29036: PUSH
29037: LD_INT 1
29039: PUSH
29040: LD_INT 2
29042: PUSH
29043: LD_INT 3
29045: PUSH
29046: LD_INT 4
29048: PUSH
29049: LD_INT 5
29051: PUSH
29052: LD_INT 21
29054: PUSH
29055: LD_INT 23
29057: PUSH
29058: LD_INT 22
29060: PUSH
29061: LD_INT 24
29063: PUSH
29064: EMPTY
29065: LIST
29066: LIST
29067: LIST
29068: LIST
29069: LIST
29070: LIST
29071: LIST
29072: LIST
29073: LIST
29074: LIST
29075: LIST
29076: LIST
29077: LIST
29078: ST_TO_ADDR
29079: GO 29140
29081: LD_INT 3
29083: DOUBLE
29084: EQUAL
29085: IFTRUE 29089
29087: GO 29139
29089: POP
// result := [ ar_medium_trike , ar_half_tracked , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling , ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; end ;
29090: LD_ADDR_VAR 0 3
29094: PUSH
29095: LD_INT 13
29097: PUSH
29098: LD_INT 14
29100: PUSH
29101: LD_INT 2
29103: PUSH
29104: LD_INT 3
29106: PUSH
29107: LD_INT 4
29109: PUSH
29110: LD_INT 5
29112: PUSH
29113: LD_INT 21
29115: PUSH
29116: LD_INT 22
29118: PUSH
29119: LD_INT 23
29121: PUSH
29122: LD_INT 24
29124: PUSH
29125: EMPTY
29126: LIST
29127: LIST
29128: LIST
29129: LIST
29130: LIST
29131: LIST
29132: LIST
29133: LIST
29134: LIST
29135: LIST
29136: ST_TO_ADDR
29137: GO 29140
29139: POP
// result := ( chassis in result ) ;
29140: LD_ADDR_VAR 0 3
29144: PUSH
29145: LD_VAR 0 1
29149: PUSH
29150: LD_VAR 0 3
29154: IN
29155: ST_TO_ADDR
// end ;
29156: LD_VAR 0 3
29160: RET
// export function WeaponCanBeMount ( chassis , weapon ) ; begin
29161: LD_INT 0
29163: PPUSH
// if not chassis or not weapon then
29164: LD_VAR 0 1
29168: NOT
29169: PUSH
29170: LD_VAR 0 2
29174: NOT
29175: OR
29176: IFFALSE 29180
// exit ;
29178: GO 30206
// case weapon of us_machine_gun :
29180: LD_VAR 0 2
29184: PUSH
29185: LD_INT 2
29187: DOUBLE
29188: EQUAL
29189: IFTRUE 29193
29191: GO 29223
29193: POP
// result := [ us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_light_gun :
29194: LD_ADDR_VAR 0 3
29198: PUSH
29199: LD_INT 1
29201: PUSH
29202: LD_INT 2
29204: PUSH
29205: LD_INT 3
29207: PUSH
29208: LD_INT 4
29210: PUSH
29211: LD_INT 5
29213: PUSH
29214: EMPTY
29215: LIST
29216: LIST
29217: LIST
29218: LIST
29219: LIST
29220: ST_TO_ADDR
29221: GO 30190
29223: LD_INT 3
29225: DOUBLE
29226: EQUAL
29227: IFTRUE 29231
29229: GO 29261
29231: POP
// result := [ us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_radar :
29232: LD_ADDR_VAR 0 3
29236: PUSH
29237: LD_INT 1
29239: PUSH
29240: LD_INT 2
29242: PUSH
29243: LD_INT 3
29245: PUSH
29246: LD_INT 4
29248: PUSH
29249: LD_INT 5
29251: PUSH
29252: EMPTY
29253: LIST
29254: LIST
29255: LIST
29256: LIST
29257: LIST
29258: ST_TO_ADDR
29259: GO 30190
29261: LD_INT 11
29263: DOUBLE
29264: EQUAL
29265: IFTRUE 29269
29267: GO 29299
29269: POP
// result := [ us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_gatling_gun :
29270: LD_ADDR_VAR 0 3
29274: PUSH
29275: LD_INT 1
29277: PUSH
29278: LD_INT 2
29280: PUSH
29281: LD_INT 3
29283: PUSH
29284: LD_INT 4
29286: PUSH
29287: LD_INT 5
29289: PUSH
29290: EMPTY
29291: LIST
29292: LIST
29293: LIST
29294: LIST
29295: LIST
29296: ST_TO_ADDR
29297: GO 30190
29299: LD_INT 4
29301: DOUBLE
29302: EQUAL
29303: IFTRUE 29307
29305: GO 29333
29307: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_double_gun :
29308: LD_ADDR_VAR 0 3
29312: PUSH
29313: LD_INT 2
29315: PUSH
29316: LD_INT 3
29318: PUSH
29319: LD_INT 4
29321: PUSH
29322: LD_INT 5
29324: PUSH
29325: EMPTY
29326: LIST
29327: LIST
29328: LIST
29329: LIST
29330: ST_TO_ADDR
29331: GO 30190
29333: LD_INT 5
29335: DOUBLE
29336: EQUAL
29337: IFTRUE 29341
29339: GO 29367
29341: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_laser :
29342: LD_ADDR_VAR 0 3
29346: PUSH
29347: LD_INT 2
29349: PUSH
29350: LD_INT 3
29352: PUSH
29353: LD_INT 4
29355: PUSH
29356: LD_INT 5
29358: PUSH
29359: EMPTY
29360: LIST
29361: LIST
29362: LIST
29363: LIST
29364: ST_TO_ADDR
29365: GO 30190
29367: LD_INT 9
29369: DOUBLE
29370: EQUAL
29371: IFTRUE 29375
29373: GO 29401
29375: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_rocket_launcher :
29376: LD_ADDR_VAR 0 3
29380: PUSH
29381: LD_INT 2
29383: PUSH
29384: LD_INT 3
29386: PUSH
29387: LD_INT 4
29389: PUSH
29390: LD_INT 5
29392: PUSH
29393: EMPTY
29394: LIST
29395: LIST
29396: LIST
29397: LIST
29398: ST_TO_ADDR
29399: GO 30190
29401: LD_INT 7
29403: DOUBLE
29404: EQUAL
29405: IFTRUE 29409
29407: GO 29435
29409: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_cargo_bay :
29410: LD_ADDR_VAR 0 3
29414: PUSH
29415: LD_INT 2
29417: PUSH
29418: LD_INT 3
29420: PUSH
29421: LD_INT 4
29423: PUSH
29424: LD_INT 5
29426: PUSH
29427: EMPTY
29428: LIST
29429: LIST
29430: LIST
29431: LIST
29432: ST_TO_ADDR
29433: GO 30190
29435: LD_INT 12
29437: DOUBLE
29438: EQUAL
29439: IFTRUE 29443
29441: GO 29469
29443: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_crane :
29444: LD_ADDR_VAR 0 3
29448: PUSH
29449: LD_INT 2
29451: PUSH
29452: LD_INT 3
29454: PUSH
29455: LD_INT 4
29457: PUSH
29458: LD_INT 5
29460: PUSH
29461: EMPTY
29462: LIST
29463: LIST
29464: LIST
29465: LIST
29466: ST_TO_ADDR
29467: GO 30190
29469: LD_INT 13
29471: DOUBLE
29472: EQUAL
29473: IFTRUE 29477
29475: GO 29503
29477: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_bulldozer :
29478: LD_ADDR_VAR 0 3
29482: PUSH
29483: LD_INT 2
29485: PUSH
29486: LD_INT 3
29488: PUSH
29489: LD_INT 4
29491: PUSH
29492: LD_INT 5
29494: PUSH
29495: EMPTY
29496: LIST
29497: LIST
29498: LIST
29499: LIST
29500: ST_TO_ADDR
29501: GO 30190
29503: LD_INT 14
29505: DOUBLE
29506: EQUAL
29507: IFTRUE 29511
29509: GO 29529
29511: POP
// result := [ us_heavy_tracked , us_morphling ] ; us_heavy_gun :
29512: LD_ADDR_VAR 0 3
29516: PUSH
29517: LD_INT 4
29519: PUSH
29520: LD_INT 5
29522: PUSH
29523: EMPTY
29524: LIST
29525: LIST
29526: ST_TO_ADDR
29527: GO 30190
29529: LD_INT 6
29531: DOUBLE
29532: EQUAL
29533: IFTRUE 29537
29535: GO 29555
29537: POP
// result := [ us_heavy_tracked , us_morphling ] ; us_double_laser :
29538: LD_ADDR_VAR 0 3
29542: PUSH
29543: LD_INT 4
29545: PUSH
29546: LD_INT 5
29548: PUSH
29549: EMPTY
29550: LIST
29551: LIST
29552: ST_TO_ADDR
29553: GO 30190
29555: LD_INT 10
29557: DOUBLE
29558: EQUAL
29559: IFTRUE 29563
29561: GO 29581
29563: POP
// result := [ us_heavy_tracked , us_morphling ] ; ar_multimissile_ballista :
29564: LD_ADDR_VAR 0 3
29568: PUSH
29569: LD_INT 4
29571: PUSH
29572: LD_INT 5
29574: PUSH
29575: EMPTY
29576: LIST
29577: LIST
29578: ST_TO_ADDR
29579: GO 30190
29581: LD_INT 22
29583: DOUBLE
29584: EQUAL
29585: IFTRUE 29589
29587: GO 29615
29589: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_light_gun :
29590: LD_ADDR_VAR 0 3
29594: PUSH
29595: LD_INT 11
29597: PUSH
29598: LD_INT 12
29600: PUSH
29601: LD_INT 13
29603: PUSH
29604: LD_INT 14
29606: PUSH
29607: EMPTY
29608: LIST
29609: LIST
29610: LIST
29611: LIST
29612: ST_TO_ADDR
29613: GO 30190
29615: LD_INT 23
29617: DOUBLE
29618: EQUAL
29619: IFTRUE 29623
29621: GO 29649
29623: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_double_machine_gun :
29624: LD_ADDR_VAR 0 3
29628: PUSH
29629: LD_INT 11
29631: PUSH
29632: LD_INT 12
29634: PUSH
29635: LD_INT 13
29637: PUSH
29638: LD_INT 14
29640: PUSH
29641: EMPTY
29642: LIST
29643: LIST
29644: LIST
29645: LIST
29646: ST_TO_ADDR
29647: GO 30190
29649: LD_INT 24
29651: DOUBLE
29652: EQUAL
29653: IFTRUE 29657
29655: GO 29683
29657: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_radar :
29658: LD_ADDR_VAR 0 3
29662: PUSH
29663: LD_INT 11
29665: PUSH
29666: LD_INT 12
29668: PUSH
29669: LD_INT 13
29671: PUSH
29672: LD_INT 14
29674: PUSH
29675: EMPTY
29676: LIST
29677: LIST
29678: LIST
29679: LIST
29680: ST_TO_ADDR
29681: GO 30190
29683: LD_INT 30
29685: DOUBLE
29686: EQUAL
29687: IFTRUE 29691
29689: GO 29717
29691: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_gatling_gun :
29692: LD_ADDR_VAR 0 3
29696: PUSH
29697: LD_INT 11
29699: PUSH
29700: LD_INT 12
29702: PUSH
29703: LD_INT 13
29705: PUSH
29706: LD_INT 14
29708: PUSH
29709: EMPTY
29710: LIST
29711: LIST
29712: LIST
29713: LIST
29714: ST_TO_ADDR
29715: GO 30190
29717: LD_INT 25
29719: DOUBLE
29720: EQUAL
29721: IFTRUE 29725
29723: GO 29743
29725: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_gun :
29726: LD_ADDR_VAR 0 3
29730: PUSH
29731: LD_INT 13
29733: PUSH
29734: LD_INT 14
29736: PUSH
29737: EMPTY
29738: LIST
29739: LIST
29740: ST_TO_ADDR
29741: GO 30190
29743: LD_INT 27
29745: DOUBLE
29746: EQUAL
29747: IFTRUE 29751
29749: GO 29769
29751: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_rocket_launcher :
29752: LD_ADDR_VAR 0 3
29756: PUSH
29757: LD_INT 13
29759: PUSH
29760: LD_INT 14
29762: PUSH
29763: EMPTY
29764: LIST
29765: LIST
29766: ST_TO_ADDR
29767: GO 30190
29769: LD_INT 28
29771: DOUBLE
29772: EQUAL
29773: IFTRUE 29777
29775: GO 29795
29777: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_selfpropelled_bomb :
29778: LD_ADDR_VAR 0 3
29782: PUSH
29783: LD_INT 13
29785: PUSH
29786: LD_INT 14
29788: PUSH
29789: EMPTY
29790: LIST
29791: LIST
29792: ST_TO_ADDR
29793: GO 30190
29795: LD_INT 29
29797: DOUBLE
29798: EQUAL
29799: IFTRUE 29803
29801: GO 29821
29803: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_control_tower :
29804: LD_ADDR_VAR 0 3
29808: PUSH
29809: LD_INT 13
29811: PUSH
29812: LD_INT 14
29814: PUSH
29815: EMPTY
29816: LIST
29817: LIST
29818: ST_TO_ADDR
29819: GO 30190
29821: LD_INT 31
29823: DOUBLE
29824: EQUAL
29825: IFTRUE 29829
29827: GO 29847
29829: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_flame_thrower :
29830: LD_ADDR_VAR 0 3
29834: PUSH
29835: LD_INT 13
29837: PUSH
29838: LD_INT 14
29840: PUSH
29841: EMPTY
29842: LIST
29843: LIST
29844: ST_TO_ADDR
29845: GO 30190
29847: LD_INT 26
29849: DOUBLE
29850: EQUAL
29851: IFTRUE 29855
29853: GO 29873
29855: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ru_heavy_machine_gun :
29856: LD_ADDR_VAR 0 3
29860: PUSH
29861: LD_INT 13
29863: PUSH
29864: LD_INT 14
29866: PUSH
29867: EMPTY
29868: LIST
29869: LIST
29870: ST_TO_ADDR
29871: GO 30190
29873: LD_INT 42
29875: DOUBLE
29876: EQUAL
29877: IFTRUE 29881
29879: GO 29907
29881: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_gatling_gun :
29882: LD_ADDR_VAR 0 3
29886: PUSH
29887: LD_INT 21
29889: PUSH
29890: LD_INT 22
29892: PUSH
29893: LD_INT 23
29895: PUSH
29896: LD_INT 24
29898: PUSH
29899: EMPTY
29900: LIST
29901: LIST
29902: LIST
29903: LIST
29904: ST_TO_ADDR
29905: GO 30190
29907: LD_INT 43
29909: DOUBLE
29910: EQUAL
29911: IFTRUE 29915
29913: GO 29941
29915: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_gun :
29916: LD_ADDR_VAR 0 3
29920: PUSH
29921: LD_INT 21
29923: PUSH
29924: LD_INT 22
29926: PUSH
29927: LD_INT 23
29929: PUSH
29930: LD_INT 24
29932: PUSH
29933: EMPTY
29934: LIST
29935: LIST
29936: LIST
29937: LIST
29938: ST_TO_ADDR
29939: GO 30190
29941: LD_INT 44
29943: DOUBLE
29944: EQUAL
29945: IFTRUE 29949
29947: GO 29975
29949: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_rocket_launcher :
29950: LD_ADDR_VAR 0 3
29954: PUSH
29955: LD_INT 21
29957: PUSH
29958: LD_INT 22
29960: PUSH
29961: LD_INT 23
29963: PUSH
29964: LD_INT 24
29966: PUSH
29967: EMPTY
29968: LIST
29969: LIST
29970: LIST
29971: LIST
29972: ST_TO_ADDR
29973: GO 30190
29975: LD_INT 45
29977: DOUBLE
29978: EQUAL
29979: IFTRUE 29983
29981: GO 30009
29983: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_time_lapser :
29984: LD_ADDR_VAR 0 3
29988: PUSH
29989: LD_INT 21
29991: PUSH
29992: LD_INT 22
29994: PUSH
29995: LD_INT 23
29997: PUSH
29998: LD_INT 24
30000: PUSH
30001: EMPTY
30002: LIST
30003: LIST
30004: LIST
30005: LIST
30006: ST_TO_ADDR
30007: GO 30190
30009: LD_INT 49
30011: DOUBLE
30012: EQUAL
30013: IFTRUE 30017
30015: GO 30043
30017: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_cargo_bay :
30018: LD_ADDR_VAR 0 3
30022: PUSH
30023: LD_INT 21
30025: PUSH
30026: LD_INT 22
30028: PUSH
30029: LD_INT 23
30031: PUSH
30032: LD_INT 24
30034: PUSH
30035: EMPTY
30036: LIST
30037: LIST
30038: LIST
30039: LIST
30040: ST_TO_ADDR
30041: GO 30190
30043: LD_INT 51
30045: DOUBLE
30046: EQUAL
30047: IFTRUE 30051
30049: GO 30077
30051: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_crane :
30052: LD_ADDR_VAR 0 3
30056: PUSH
30057: LD_INT 21
30059: PUSH
30060: LD_INT 22
30062: PUSH
30063: LD_INT 23
30065: PUSH
30066: LD_INT 24
30068: PUSH
30069: EMPTY
30070: LIST
30071: LIST
30072: LIST
30073: LIST
30074: ST_TO_ADDR
30075: GO 30190
30077: LD_INT 52
30079: DOUBLE
30080: EQUAL
30081: IFTRUE 30085
30083: GO 30111
30085: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_bulldozer :
30086: LD_ADDR_VAR 0 3
30090: PUSH
30091: LD_INT 21
30093: PUSH
30094: LD_INT 22
30096: PUSH
30097: LD_INT 23
30099: PUSH
30100: LD_INT 24
30102: PUSH
30103: EMPTY
30104: LIST
30105: LIST
30106: LIST
30107: LIST
30108: ST_TO_ADDR
30109: GO 30190
30111: LD_INT 53
30113: DOUBLE
30114: EQUAL
30115: IFTRUE 30119
30117: GO 30137
30119: POP
// result := [ ru_heavy_wheeled , ru_heavy_tracked ] ; ru_heavy_gun :
30120: LD_ADDR_VAR 0 3
30124: PUSH
30125: LD_INT 23
30127: PUSH
30128: LD_INT 24
30130: PUSH
30131: EMPTY
30132: LIST
30133: LIST
30134: ST_TO_ADDR
30135: GO 30190
30137: LD_INT 46
30139: DOUBLE
30140: EQUAL
30141: IFTRUE 30145
30143: GO 30163
30145: POP
// result := [ ru_heavy_wheeled , ru_heavy_tracked ] ; ru_rocket :
30146: LD_ADDR_VAR 0 3
30150: PUSH
30151: LD_INT 23
30153: PUSH
30154: LD_INT 24
30156: PUSH
30157: EMPTY
30158: LIST
30159: LIST
30160: ST_TO_ADDR
30161: GO 30190
30163: LD_INT 47
30165: DOUBLE
30166: EQUAL
30167: IFTRUE 30171
30169: GO 30189
30171: POP
// result := [ ru_heavy_wheeled , ru_heavy_tracked ] ; end ;
30172: LD_ADDR_VAR 0 3
30176: PUSH
30177: LD_INT 23
30179: PUSH
30180: LD_INT 24
30182: PUSH
30183: EMPTY
30184: LIST
30185: LIST
30186: ST_TO_ADDR
30187: GO 30190
30189: POP
// result := ( chassis in result ) ;
30190: LD_ADDR_VAR 0 3
30194: PUSH
30195: LD_VAR 0 1
30199: PUSH
30200: LD_VAR 0 3
30204: IN
30205: ST_TO_ADDR
// end ;
30206: LD_VAR 0 3
30210: RET
// export function PrepareNature ; var i , animal , nat_area ; begin
30211: LD_INT 0
30213: PPUSH
30214: PPUSH
30215: PPUSH
30216: PPUSH
// uc_side = 0 ;
30217: LD_ADDR_OWVAR 20
30221: PUSH
30222: LD_INT 0
30224: ST_TO_ADDR
// uc_nation = 0 ;
30225: LD_ADDR_OWVAR 21
30229: PUSH
30230: LD_INT 0
30232: ST_TO_ADDR
// nat_area := nature_area ;
30233: LD_ADDR_VAR 0 4
30237: PUSH
30238: LD_INT 24
30240: ST_TO_ADDR
// InitHc ;
30241: CALL_OW 19
// for i = 1 to 4 do
30245: LD_ADDR_VAR 0 2
30249: PUSH
30250: DOUBLE
30251: LD_INT 1
30253: DEC
30254: ST_TO_ADDR
30255: LD_INT 4
30257: PUSH
30258: FOR_TO
30259: IFFALSE 30306
// begin hc_class = 18 ;
30261: LD_ADDR_OWVAR 28
30265: PUSH
30266: LD_INT 18
30268: ST_TO_ADDR
// hc_gallery =  ;
30269: LD_ADDR_OWVAR 33
30273: PUSH
30274: LD_STRING 
30276: ST_TO_ADDR
// animal := CreateHuman ;
30277: LD_ADDR_VAR 0 3
30281: PUSH
30282: CALL_OW 44
30286: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
30287: LD_VAR 0 3
30291: PPUSH
30292: LD_VAR 0 4
30296: PPUSH
30297: LD_INT 0
30299: PPUSH
30300: CALL_OW 49
// end ;
30304: GO 30258
30306: POP
30307: POP
// for i = 1 to 3 do
30308: LD_ADDR_VAR 0 2
30312: PUSH
30313: DOUBLE
30314: LD_INT 1
30316: DEC
30317: ST_TO_ADDR
30318: LD_INT 3
30320: PUSH
30321: FOR_TO
30322: IFFALSE 30416
// begin hc_class = class_apeman ;
30324: LD_ADDR_OWVAR 28
30328: PUSH
30329: LD_INT 12
30331: ST_TO_ADDR
// hc_gallery =  ;
30332: LD_ADDR_OWVAR 33
30336: PUSH
30337: LD_STRING 
30339: ST_TO_ADDR
// hc_agressivity = 0 ;
30340: LD_ADDR_OWVAR 35
30344: PUSH
30345: LD_INT 0
30347: ST_TO_ADDR
// hc_skills := [ rand ( 1 , 3 ) , rand ( 1 , 3 ) , 0 , 0 ] ;
30348: LD_ADDR_OWVAR 31
30352: PUSH
30353: LD_INT 1
30355: PPUSH
30356: LD_INT 3
30358: PPUSH
30359: CALL_OW 12
30363: PUSH
30364: LD_INT 1
30366: PPUSH
30367: LD_INT 3
30369: PPUSH
30370: CALL_OW 12
30374: PUSH
30375: LD_INT 0
30377: PUSH
30378: LD_INT 0
30380: PUSH
30381: EMPTY
30382: LIST
30383: LIST
30384: LIST
30385: LIST
30386: ST_TO_ADDR
// animal := CreateHuman ;
30387: LD_ADDR_VAR 0 3
30391: PUSH
30392: CALL_OW 44
30396: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
30397: LD_VAR 0 3
30401: PPUSH
30402: LD_VAR 0 4
30406: PPUSH
30407: LD_INT 0
30409: PPUSH
30410: CALL_OW 49
// end ;
30414: GO 30321
30416: POP
30417: POP
// for i = 1 to 3 do
30418: LD_ADDR_VAR 0 2
30422: PUSH
30423: DOUBLE
30424: LD_INT 1
30426: DEC
30427: ST_TO_ADDR
30428: LD_INT 3
30430: PUSH
30431: FOR_TO
30432: IFFALSE 30479
// begin hc_class = 13 ;
30434: LD_ADDR_OWVAR 28
30438: PUSH
30439: LD_INT 13
30441: ST_TO_ADDR
// hc_gallery =  ;
30442: LD_ADDR_OWVAR 33
30446: PUSH
30447: LD_STRING 
30449: ST_TO_ADDR
// animal := CreateHuman ;
30450: LD_ADDR_VAR 0 3
30454: PUSH
30455: CALL_OW 44
30459: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
30460: LD_VAR 0 3
30464: PPUSH
30465: LD_VAR 0 4
30469: PPUSH
30470: LD_INT 0
30472: PPUSH
30473: CALL_OW 49
// end ;
30477: GO 30431
30479: POP
30480: POP
// for i = 1 to 3 do
30481: LD_ADDR_VAR 0 2
30485: PUSH
30486: DOUBLE
30487: LD_INT 1
30489: DEC
30490: ST_TO_ADDR
30491: LD_INT 3
30493: PUSH
30494: FOR_TO
30495: IFFALSE 30540
// begin hc_class = 20 ;
30497: LD_ADDR_OWVAR 28
30501: PUSH
30502: LD_INT 20
30504: ST_TO_ADDR
// hc_gallery =  ;
30505: LD_ADDR_OWVAR 33
30509: PUSH
30510: LD_STRING 
30512: ST_TO_ADDR
// animal := CreateHuman ;
30513: LD_ADDR_VAR 0 3
30517: PUSH
30518: CALL_OW 44
30522: ST_TO_ADDR
// PlaceUnitArea ( animal , lake_area , false ) ;
30523: LD_VAR 0 3
30527: PPUSH
30528: LD_INT 4
30530: PPUSH
30531: LD_INT 0
30533: PPUSH
30534: CALL_OW 49
// end ;
30538: GO 30494
30540: POP
30541: POP
// end ; end_of_file
30542: LD_VAR 0 1
30546: RET
// export function Action ; begin
30547: LD_INT 0
30549: PPUSH
// InGameOn ;
30550: CALL_OW 8
// CenterNowOnUnits ( JMM ) ;
30554: LD_EXP 12
30558: PPUSH
30559: CALL_OW 87
// Say ( JMM , D1-JMM-1 ) ;
30563: LD_EXP 12
30567: PPUSH
30568: LD_STRING D1-JMM-1
30570: PPUSH
30571: CALL_OW 88
// Say ( Roth , D1-Roth-1 ) ;
30575: LD_EXP 13
30579: PPUSH
30580: LD_STRING D1-Roth-1
30582: PPUSH
30583: CALL_OW 88
// Say ( JMM , D1-JMM-2 ) ;
30587: LD_EXP 12
30591: PPUSH
30592: LD_STRING D1-JMM-2
30594: PPUSH
30595: CALL_OW 88
// Say ( Roth , D1-Roth-2 ) ;
30599: LD_EXP 13
30603: PPUSH
30604: LD_STRING D1-Roth-2
30606: PPUSH
30607: CALL_OW 88
// Say ( JMM , D1-JMM-3 ) ;
30611: LD_EXP 12
30615: PPUSH
30616: LD_STRING D1-JMM-3
30618: PPUSH
30619: CALL_OW 88
// Say ( Roth , D1-Roth-3 ) ;
30623: LD_EXP 13
30627: PPUSH
30628: LD_STRING D1-Roth-3
30630: PPUSH
30631: CALL_OW 88
// ComInvisible ( Roth ) ;
30635: LD_EXP 13
30639: PPUSH
30640: CALL_OW 152
// wait ( 0 0$1.3 ) ;
30644: LD_INT 46
30646: PPUSH
30647: CALL_OW 67
// Say ( JMM , D1-JMM-4 ) ;
30651: LD_EXP 12
30655: PPUSH
30656: LD_STRING D1-JMM-4
30658: PPUSH
30659: CALL_OW 88
// wait ( 0 0$0.3 ) ;
30663: LD_INT 10
30665: PPUSH
30666: CALL_OW 67
// ComTurnUnit ( Roth , JMM ) ;
30670: LD_EXP 13
30674: PPUSH
30675: LD_EXP 12
30679: PPUSH
30680: CALL_OW 119
// Say ( JMM , D1-JMM-4a ) ;
30684: LD_EXP 12
30688: PPUSH
30689: LD_STRING D1-JMM-4a
30691: PPUSH
30692: CALL_OW 88
// Say ( Roth , D1-Roth-4 ) ;
30696: LD_EXP 13
30700: PPUSH
30701: LD_STRING D1-Roth-4
30703: PPUSH
30704: CALL_OW 88
// Say ( JMM , D1-JMM-5 ) ;
30708: LD_EXP 12
30712: PPUSH
30713: LD_STRING D1-JMM-5
30715: PPUSH
30716: CALL_OW 88
// Say ( Roth , D1-Roth-5 ) ;
30720: LD_EXP 13
30724: PPUSH
30725: LD_STRING D1-Roth-5
30727: PPUSH
30728: CALL_OW 88
// Say ( JMM , D1-JMM-6 ) ;
30732: LD_EXP 12
30736: PPUSH
30737: LD_STRING D1-JMM-6
30739: PPUSH
30740: CALL_OW 88
// Say ( Roth , D1-Roth-6 ) ;
30744: LD_EXP 13
30748: PPUSH
30749: LD_STRING D1-Roth-6
30751: PPUSH
30752: CALL_OW 88
// Say ( JMM , D1-JMM-7 ) ;
30756: LD_EXP 12
30760: PPUSH
30761: LD_STRING D1-JMM-7
30763: PPUSH
30764: CALL_OW 88
// ComMoveXY ( Powell , GetX ( JMM ) , GetY ( JMM ) ) ;
30768: LD_EXP 14
30772: PPUSH
30773: LD_EXP 12
30777: PPUSH
30778: CALL_OW 250
30782: PPUSH
30783: LD_EXP 12
30787: PPUSH
30788: CALL_OW 251
30792: PPUSH
30793: CALL_OW 111
// Say ( Roth , D1-Roth-7 ) ;
30797: LD_EXP 13
30801: PPUSH
30802: LD_STRING D1-Roth-7
30804: PPUSH
30805: CALL_OW 88
// repeat wait ( 0 0$0.3 ) ;
30809: LD_INT 10
30811: PPUSH
30812: CALL_OW 67
// until GetDistUnits ( Powell , JMM ) < 6 ;
30816: LD_EXP 14
30820: PPUSH
30821: LD_EXP 12
30825: PPUSH
30826: CALL_OW 296
30830: PUSH
30831: LD_INT 6
30833: LESS
30834: IFFALSE 30809
// ComTurnUnit ( Powell , JMM ) ;
30836: LD_EXP 14
30840: PPUSH
30841: LD_EXP 12
30845: PPUSH
30846: CALL_OW 119
// Say ( Powell , D1-Pow-7 ) ;
30850: LD_EXP 14
30854: PPUSH
30855: LD_STRING D1-Pow-7
30857: PPUSH
30858: CALL_OW 88
// ComTurnUnit ( JMM , Powell ) ;
30862: LD_EXP 12
30866: PPUSH
30867: LD_EXP 14
30871: PPUSH
30872: CALL_OW 119
// ComTurnUnit ( Roth , Powell ) ;
30876: LD_EXP 13
30880: PPUSH
30881: LD_EXP 14
30885: PPUSH
30886: CALL_OW 119
// Say ( JMM , D1-JMM-8 ) ;
30890: LD_EXP 12
30894: PPUSH
30895: LD_STRING D1-JMM-8
30897: PPUSH
30898: CALL_OW 88
// Say ( Powell , D1-Pow-8 ) ;
30902: LD_EXP 14
30906: PPUSH
30907: LD_STRING D1-Pow-8
30909: PPUSH
30910: CALL_OW 88
// Say ( JMM , D1-JMM-9 ) ;
30914: LD_EXP 12
30918: PPUSH
30919: LD_STRING D1-JMM-9
30921: PPUSH
30922: CALL_OW 88
// ComMoveXY ( Powell , 124 , 61 ) ;
30926: LD_EXP 14
30930: PPUSH
30931: LD_INT 124
30933: PPUSH
30934: LD_INT 61
30936: PPUSH
30937: CALL_OW 111
// repeat wait ( 0 0$1 ) ;
30941: LD_INT 35
30943: PPUSH
30944: CALL_OW 67
// until GetDistUnits ( JMM , Powell ) > 6 ;
30948: LD_EXP 12
30952: PPUSH
30953: LD_EXP 14
30957: PPUSH
30958: CALL_OW 296
30962: PUSH
30963: LD_INT 6
30965: GREATER
30966: IFFALSE 30941
// SayRadio ( Powell , D1-Pow-9 ) ;
30968: LD_EXP 14
30972: PPUSH
30973: LD_STRING D1-Pow-9
30975: PPUSH
30976: CALL_OW 94
// RemoveUnit ( Powell ) ;
30980: LD_EXP 14
30984: PPUSH
30985: CALL_OW 64
// PlaceHumanInUnit ( Powell , ambar0 ) ;
30989: LD_EXP 14
30993: PPUSH
30994: LD_INT 18
30996: PPUSH
30997: CALL_OW 52
// if Joan and not Joan in selected then
31001: LD_EXP 34
31005: PUSH
31006: LD_EXP 34
31010: PUSH
31011: LD_EXP 3
31015: IN
31016: NOT
31017: AND
31018: IFFALSE 31032
// SayRadio ( Joan , D1-Joan-9 ) ;
31020: LD_EXP 34
31024: PPUSH
31025: LD_STRING D1-Joan-9
31027: PPUSH
31028: CALL_OW 94
// ComTurnUnit ( Roth , JMM ) ;
31032: LD_EXP 13
31036: PPUSH
31037: LD_EXP 12
31041: PPUSH
31042: CALL_OW 119
// ComTurnUnit ( JMM , Roth ) ;
31046: LD_EXP 12
31050: PPUSH
31051: LD_EXP 13
31055: PPUSH
31056: CALL_OW 119
// Say ( Roth , D1-Roth-9 ) ;
31060: LD_EXP 13
31064: PPUSH
31065: LD_STRING D1-Roth-9
31067: PPUSH
31068: CALL_OW 88
// Say ( JMM , D1-JMM-10 ) ;
31072: LD_EXP 12
31076: PPUSH
31077: LD_STRING D1-JMM-10
31079: PPUSH
31080: CALL_OW 88
// InGameOff ;
31084: CALL_OW 9
// ChangeMissionObjectives ( M1 ) ;
31088: LD_STRING M1
31090: PPUSH
31091: CALL_OW 337
// if Difficulty < 3 then
31095: LD_OWVAR 67
31099: PUSH
31100: LD_INT 3
31102: LESS
31103: IFFALSE 31115
// ChangeSideFog ( 4 , 7 ) ;
31105: LD_INT 4
31107: PPUSH
31108: LD_INT 7
31110: PPUSH
31111: CALL_OW 343
// SaveForQuickRestart ;
31115: CALL_OW 22
// SetAttitude ( 7 , 1 , att_enemy , true ) ;
31119: LD_INT 7
31121: PPUSH
31122: LD_INT 1
31124: PPUSH
31125: LD_INT 2
31127: PPUSH
31128: LD_INT 1
31130: PPUSH
31131: CALL_OW 80
// wait ( 0 0$3 ) ;
31135: LD_INT 105
31137: PPUSH
31138: CALL_OW 67
// ComMoveXY ( Roth , 124 , 18 ) ;
31142: LD_EXP 13
31146: PPUSH
31147: LD_INT 124
31149: PPUSH
31150: LD_INT 18
31152: PPUSH
31153: CALL_OW 111
// AddComInvisible ( Roth ) ;
31157: LD_EXP 13
31161: PPUSH
31162: CALL_OW 212
// wait ( 0 0$30 ) ;
31166: LD_INT 1050
31168: PPUSH
31169: CALL_OW 67
// AddComWait ( Roth , 1 1$00 ) ;
31173: LD_EXP 13
31177: PPUSH
31178: LD_INT 2100
31180: PPUSH
31181: CALL_OW 202
// AddComMoveXY ( Roth , 156 , 20 ) ;
31185: LD_EXP 13
31189: PPUSH
31190: LD_INT 156
31192: PPUSH
31193: LD_INT 20
31195: PPUSH
31196: CALL_OW 171
// AddComMoveXY ( Roth , 178 , 42 ) ;
31200: LD_EXP 13
31204: PPUSH
31205: LD_INT 178
31207: PPUSH
31208: LD_INT 42
31210: PPUSH
31211: CALL_OW 171
// AddComInvisible ( Roth ) ;
31215: LD_EXP 13
31219: PPUSH
31220: CALL_OW 212
// end ;
31224: LD_VAR 0 1
31228: RET
// every 0 0$1 do var i , tmp ;
31229: GO 31231
31231: DISABLE
31232: LD_INT 0
31234: PPUSH
31235: PPUSH
// begin tmp := selected union friends ;
31236: LD_ADDR_VAR 0 2
31240: PUSH
31241: LD_EXP 3
31245: PUSH
31246: LD_EXP 4
31250: UNION
31251: ST_TO_ADDR
// if not tmp then
31252: LD_VAR 0 2
31256: NOT
31257: IFFALSE 31261
// exit ;
31259: GO 31333
// repeat wait ( 0 0$1 ) ;
31261: LD_INT 35
31263: PPUSH
31264: CALL_OW 67
// for i in tmp do
31268: LD_ADDR_VAR 0 1
31272: PUSH
31273: LD_VAR 0 2
31277: PUSH
31278: FOR_IN
31279: IFFALSE 31324
// if CanSpot ( JMM , i ) then
31281: LD_EXP 12
31285: PPUSH
31286: LD_VAR 0 1
31290: PPUSH
31291: CALL 27944 0 2
31295: IFFALSE 31322
// begin tmp := tmp diff i ;
31297: LD_ADDR_VAR 0 2
31301: PUSH
31302: LD_VAR 0 2
31306: PUSH
31307: LD_VAR 0 1
31311: DIFF
31312: ST_TO_ADDR
// Spot ( i ) ;
31313: LD_VAR 0 1
31317: PPUSH
31318: CALL 31336 0 1
// end ;
31322: GO 31278
31324: POP
31325: POP
// until not tmp ;
31326: LD_VAR 0 2
31330: NOT
31331: IFFALSE 31261
// end ;
31333: PPOPN 2
31335: END
// export function Spot ( unit ) ; var building , side , joined ; begin
31336: LD_INT 0
31338: PPUSH
31339: PPUSH
31340: PPUSH
31341: PPUSH
// if not unit or GetSide ( unit ) <> 4 or IsSleeping ( unit ) or not IsOk ( unit ) then
31342: LD_VAR 0 1
31346: NOT
31347: PUSH
31348: LD_VAR 0 1
31352: PPUSH
31353: CALL_OW 255
31357: PUSH
31358: LD_INT 4
31360: NONEQUAL
31361: OR
31362: PUSH
31363: LD_VAR 0 1
31367: PPUSH
31368: CALL_OW 555
31372: OR
31373: PUSH
31374: LD_VAR 0 1
31378: PPUSH
31379: CALL_OW 302
31383: NOT
31384: OR
31385: IFFALSE 31389
// exit ;
31387: GO 33278
// InGameOn ;
31389: CALL_OW 8
// side := GetSide ( JMM ) ;
31393: LD_ADDR_VAR 0 4
31397: PUSH
31398: LD_EXP 12
31402: PPUSH
31403: CALL_OW 255
31407: ST_TO_ADDR
// joined := false ;
31408: LD_ADDR_VAR 0 5
31412: PUSH
31413: LD_INT 0
31415: ST_TO_ADDR
// building := IsInUnit ( unit ) ;
31416: LD_ADDR_VAR 0 3
31420: PUSH
31421: LD_VAR 0 1
31425: PPUSH
31426: CALL_OW 310
31430: ST_TO_ADDR
// if building then
31431: LD_VAR 0 3
31435: IFFALSE 31494
// begin SetSide ( JMM , GetSide ( unit ) ) ;
31437: LD_EXP 12
31441: PPUSH
31442: LD_VAR 0 1
31446: PPUSH
31447: CALL_OW 255
31451: PPUSH
31452: CALL_OW 235
// ComEnterUnit ( JMM , building ) ;
31456: LD_EXP 12
31460: PPUSH
31461: LD_VAR 0 3
31465: PPUSH
31466: CALL_OW 120
// repeat wait ( 3 ) ;
31470: LD_INT 3
31472: PPUSH
31473: CALL_OW 67
// until IsInUnit ( JMM ) ;
31477: LD_EXP 12
31481: PPUSH
31482: CALL_OW 310
31486: IFFALSE 31470
// DialogueOn ;
31488: CALL_OW 6
// end else
31492: GO 31526
// begin ComTurnUnit ( JMM , unit ) ;
31494: LD_EXP 12
31498: PPUSH
31499: LD_VAR 0 1
31503: PPUSH
31504: CALL_OW 119
// ComTurnUnit ( unit , JMM ) ;
31508: LD_VAR 0 1
31512: PPUSH
31513: LD_EXP 12
31517: PPUSH
31518: CALL_OW 119
// DialogueOn ;
31522: CALL_OW 6
// end ; if unit = Joan then
31526: LD_VAR 0 1
31530: PUSH
31531: LD_EXP 34
31535: EQUAL
31536: IFFALSE 31646
// begin joined := true ;
31538: LD_ADDR_VAR 0 5
31542: PUSH
31543: LD_INT 1
31545: ST_TO_ADDR
// if Joan in selected then
31546: LD_EXP 34
31550: PUSH
31551: LD_EXP 3
31555: IN
31556: IFFALSE 31584
// begin Say ( Joan , D3-Joan-Joan-1 ) ;
31558: LD_EXP 34
31562: PPUSH
31563: LD_STRING D3-Joan-Joan-1
31565: PPUSH
31566: CALL_OW 88
// Say ( JMM , D3-Joan-JMM-1 ) ;
31570: LD_EXP 12
31574: PPUSH
31575: LD_STRING D3-Joan-JMM-1
31577: PPUSH
31578: CALL_OW 88
// end else
31582: GO 31644
// begin Say ( Joan , D4-Joan-Joan-1 ) ;
31584: LD_EXP 34
31588: PPUSH
31589: LD_STRING D4-Joan-Joan-1
31591: PPUSH
31592: CALL_OW 88
// Say ( JMM , D4-Joan-JMM-1 ) ;
31596: LD_EXP 12
31600: PPUSH
31601: LD_STRING D4-Joan-JMM-1
31603: PPUSH
31604: CALL_OW 88
// Say ( Joan , D4-Joan-Joan-2 ) ;
31608: LD_EXP 34
31612: PPUSH
31613: LD_STRING D4-Joan-Joan-2
31615: PPUSH
31616: CALL_OW 88
// Say ( JMM , D4-Joan-JMM-2 ) ;
31620: LD_EXP 12
31624: PPUSH
31625: LD_STRING D4-Joan-JMM-2
31627: PPUSH
31628: CALL_OW 88
// Say ( Joan , D4-Joan-Joan-3 ) ;
31632: LD_EXP 34
31636: PPUSH
31637: LD_STRING D4-Joan-Joan-3
31639: PPUSH
31640: CALL_OW 88
// end ; end else
31644: GO 33086
// if unit = Lisa then
31646: LD_VAR 0 1
31650: PUSH
31651: LD_EXP 21
31655: EQUAL
31656: IFFALSE 31848
// begin if Lisa in selected then
31658: LD_EXP 21
31662: PUSH
31663: LD_EXP 3
31667: IN
31668: IFFALSE 31781
// begin if GetSide ( Joan ) = 7 then
31670: LD_EXP 34
31674: PPUSH
31675: CALL_OW 255
31679: PUSH
31680: LD_INT 7
31682: EQUAL
31683: IFFALSE 31747
// begin Say ( Lisa , D3-LisaJ-Lisa-1 ) ;
31685: LD_EXP 21
31689: PPUSH
31690: LD_STRING D3-LisaJ-Lisa-1
31692: PPUSH
31693: CALL_OW 88
// Say ( JMM , D3-LisaJ-JMM-1 ) ;
31697: LD_EXP 12
31701: PPUSH
31702: LD_STRING D3-LisaJ-JMM-1
31704: PPUSH
31705: CALL_OW 88
// Say ( Lisa , D3-LisaJ-Lisa-2 ) ;
31709: LD_EXP 21
31713: PPUSH
31714: LD_STRING D3-LisaJ-Lisa-2
31716: PPUSH
31717: CALL_OW 88
// Say ( JMM , D3-LisaJ-JMM-2 ) ;
31721: LD_EXP 12
31725: PPUSH
31726: LD_STRING D3-LisaJ-JMM-2
31728: PPUSH
31729: CALL_OW 88
// Say ( Lisa , D3-LisaJ-Lisa-3 ) ;
31733: LD_EXP 21
31737: PPUSH
31738: LD_STRING D3-LisaJ-Lisa-3
31740: PPUSH
31741: CALL_OW 88
// end else
31745: GO 31779
// begin Say ( Lisa , D3-LisaL-Lisa-1 ) ;
31747: LD_EXP 21
31751: PPUSH
31752: LD_STRING D3-LisaL-Lisa-1
31754: PPUSH
31755: CALL_OW 88
// Say ( JMM , D3-LisaL-JMM-1 ) ;
31759: LD_EXP 12
31763: PPUSH
31764: LD_STRING D3-LisaL-JMM-1
31766: PPUSH
31767: CALL_OW 88
// joined := true ;
31771: LD_ADDR_VAR 0 5
31775: PUSH
31776: LD_INT 1
31778: ST_TO_ADDR
// end ; end else
31779: GO 31846
// begin if GetSide ( Joan ) = 7 then
31781: LD_EXP 34
31785: PPUSH
31786: CALL_OW 255
31790: PUSH
31791: LD_INT 7
31793: EQUAL
31794: IFFALSE 31834
// begin Say ( Lisa , D4-LisaJ-Lisa-1 ) ;
31796: LD_EXP 21
31800: PPUSH
31801: LD_STRING D4-LisaJ-Lisa-1
31803: PPUSH
31804: CALL_OW 88
// Say ( JMM , D4-LisaJ-JMM-1 ) ;
31808: LD_EXP 12
31812: PPUSH
31813: LD_STRING D4-LisaJ-JMM-1
31815: PPUSH
31816: CALL_OW 88
// Say ( Lisa , D4-LisaJ-Lisa-2 ) ;
31820: LD_EXP 21
31824: PPUSH
31825: LD_STRING D4-LisaJ-Lisa-2
31827: PPUSH
31828: CALL_OW 88
// end else
31832: GO 31846
// begin Say ( Lisa , D4-LisaL-Lisa-1 ) ;
31834: LD_EXP 21
31838: PPUSH
31839: LD_STRING D4-LisaL-Lisa-1
31841: PPUSH
31842: CALL_OW 88
// end ; end ; end else
31846: GO 33086
// if unit = Frank then
31848: LD_VAR 0 1
31852: PUSH
31853: LD_EXP 31
31857: EQUAL
31858: IFFALSE 31998
// begin joined := true ;
31860: LD_ADDR_VAR 0 5
31864: PUSH
31865: LD_INT 1
31867: ST_TO_ADDR
// if Frank in selected then
31868: LD_EXP 31
31872: PUSH
31873: LD_EXP 3
31877: IN
31878: IFFALSE 31948
// begin Say ( Frank , D3-Frank-Frank-1 ) ;
31880: LD_EXP 31
31884: PPUSH
31885: LD_STRING D3-Frank-Frank-1
31887: PPUSH
31888: CALL_OW 88
// Say ( JMM , D3-Frank-JMM-1 ) ;
31892: LD_EXP 12
31896: PPUSH
31897: LD_STRING D3-Frank-JMM-1
31899: PPUSH
31900: CALL_OW 88
// Say ( Frank , D3-Frank-Frank-2 ) ;
31904: LD_EXP 31
31908: PPUSH
31909: LD_STRING D3-Frank-Frank-2
31911: PPUSH
31912: CALL_OW 88
// if reached_lab then
31916: LD_EXP 5
31920: IFFALSE 31946
// begin Say ( JMM , D3-Frank-JMM-2 ) ;
31922: LD_EXP 12
31926: PPUSH
31927: LD_STRING D3-Frank-JMM-2
31929: PPUSH
31930: CALL_OW 88
// Say ( Frank , D3-Frank-Frank-3 ) ;
31934: LD_EXP 31
31938: PPUSH
31939: LD_STRING D3-Frank-Frank-3
31941: PPUSH
31942: CALL_OW 88
// end ; end else
31946: GO 31996
// begin Say ( Frank , D4-Frank-Frank-1 ) ;
31948: LD_EXP 31
31952: PPUSH
31953: LD_STRING D4-Frank-Frank-1
31955: PPUSH
31956: CALL_OW 88
// Say ( JMM , D4-Frank-JMM-1 ) ;
31960: LD_EXP 12
31964: PPUSH
31965: LD_STRING D4-Frank-JMM-1
31967: PPUSH
31968: CALL_OW 88
// Say ( Frank , D4-Frank-Frank-2 ) ;
31972: LD_EXP 31
31976: PPUSH
31977: LD_STRING D4-Frank-Frank-2
31979: PPUSH
31980: CALL_OW 88
// Say ( JMM , D4-Frank-JMM-2 ) ;
31984: LD_EXP 12
31988: PPUSH
31989: LD_STRING D4-Frank-JMM-2
31991: PPUSH
31992: CALL_OW 88
// end ; end else
31996: GO 33086
// if unit = Brown then
31998: LD_VAR 0 1
32002: PUSH
32003: LD_EXP 26
32007: EQUAL
32008: IFFALSE 32104
// begin if Brown in selected or gamma_commander = 2 then
32010: LD_EXP 26
32014: PUSH
32015: LD_EXP 3
32019: IN
32020: PUSH
32021: LD_EXP 10
32025: PUSH
32026: LD_INT 2
32028: EQUAL
32029: OR
32030: IFFALSE 32066
// begin Say ( Brown , D3-Soldier1-Sol1-1 ) ;
32032: LD_EXP 26
32036: PPUSH
32037: LD_STRING D3-Soldier1-Sol1-1
32039: PPUSH
32040: CALL_OW 88
// Say ( JMM , D3-Soldier1-JMM-1 ) ;
32044: LD_EXP 12
32048: PPUSH
32049: LD_STRING D3-Soldier1-JMM-1
32051: PPUSH
32052: CALL_OW 88
// joined := true ;
32056: LD_ADDR_VAR 0 5
32060: PUSH
32061: LD_INT 1
32063: ST_TO_ADDR
// end else
32064: GO 32102
// begin Say ( Brown , D4-Soldier2-Sol1-1 ) ;
32066: LD_EXP 26
32070: PPUSH
32071: LD_STRING D4-Soldier2-Sol1-1
32073: PPUSH
32074: CALL_OW 88
// Say ( JMM , D4-Soldier1-JMM-1 ) ;
32078: LD_EXP 12
32082: PPUSH
32083: LD_STRING D4-Soldier1-JMM-1
32085: PPUSH
32086: CALL_OW 88
// Say ( Brown , D4-Soldier2-Sol1-2 ) ;
32090: LD_EXP 26
32094: PPUSH
32095: LD_STRING D4-Soldier2-Sol1-2
32097: PPUSH
32098: CALL_OW 88
// end ; end else
32102: GO 33086
// if unit = Donaldson then
32104: LD_VAR 0 1
32108: PUSH
32109: LD_EXP 22
32113: EQUAL
32114: IFFALSE 32210
// begin if Donaldson in selected or gamma_commander = 1 then
32116: LD_EXP 22
32120: PUSH
32121: LD_EXP 3
32125: IN
32126: PUSH
32127: LD_EXP 10
32131: PUSH
32132: LD_INT 1
32134: EQUAL
32135: OR
32136: IFFALSE 32172
// begin Say ( Donaldson , D3-Soldier2-FSol2-1 ) ;
32138: LD_EXP 22
32142: PPUSH
32143: LD_STRING D3-Soldier2-FSol2-1
32145: PPUSH
32146: CALL_OW 88
// Say ( JMM , D3-Soldier2-JMM-1 ) ;
32150: LD_EXP 12
32154: PPUSH
32155: LD_STRING D3-Soldier2-JMM-1
32157: PPUSH
32158: CALL_OW 88
// joined := true ;
32162: LD_ADDR_VAR 0 5
32166: PUSH
32167: LD_INT 1
32169: ST_TO_ADDR
// end else
32170: GO 32208
// begin Say ( unit , D4-Soldier1-FSol1-1 ) ;
32172: LD_VAR 0 1
32176: PPUSH
32177: LD_STRING D4-Soldier1-FSol1-1
32179: PPUSH
32180: CALL_OW 88
// Say ( JMM , D4-Soldier1-JMM-1 ) ;
32184: LD_EXP 12
32188: PPUSH
32189: LD_STRING D4-Soldier1-JMM-1
32191: PPUSH
32192: CALL_OW 88
// Say ( unit , D4-Soldier1-FSol1-2 ) ;
32196: LD_VAR 0 1
32200: PPUSH
32201: LD_STRING D4-Soldier1-FSol1-2
32203: PPUSH
32204: CALL_OW 88
// end ; end else
32208: GO 33086
// if unit = Cyrus then
32210: LD_VAR 0 1
32214: PUSH
32215: LD_EXP 24
32219: EQUAL
32220: IFFALSE 32294
// begin if Cyrus in selected then
32222: LD_EXP 24
32226: PUSH
32227: LD_EXP 3
32231: IN
32232: IFFALSE 32268
// begin Say ( Cyrus , D3-Cyrus-Cyrus-1 ) ;
32234: LD_EXP 24
32238: PPUSH
32239: LD_STRING D3-Cyrus-Cyrus-1
32241: PPUSH
32242: CALL_OW 88
// Say ( JMM , D3-Cyrus-JMM-1 ) ;
32246: LD_EXP 12
32250: PPUSH
32251: LD_STRING D3-Cyrus-JMM-1
32253: PPUSH
32254: CALL_OW 88
// joined := true ;
32258: LD_ADDR_VAR 0 5
32262: PUSH
32263: LD_INT 1
32265: ST_TO_ADDR
// end else
32266: GO 32292
// begin Say ( Cyrus , D4-Cyrus-Cyrus-1 ) ;
32268: LD_EXP 24
32272: PPUSH
32273: LD_STRING D4-Cyrus-Cyrus-1
32275: PPUSH
32276: CALL_OW 88
// Say ( JMM , D4-Cyrus-JMM-1 ) ;
32280: LD_EXP 12
32284: PPUSH
32285: LD_STRING D4-Cyrus-JMM-1
32287: PPUSH
32288: CALL_OW 88
// end ; end else
32292: GO 33086
// if unit = Bobby then
32294: LD_VAR 0 1
32298: PUSH
32299: LD_EXP 23
32303: EQUAL
32304: IFFALSE 32390
// begin if Bobby in selected then
32306: LD_EXP 23
32310: PUSH
32311: LD_EXP 3
32315: IN
32316: IFFALSE 32352
// begin Say ( Bobby , D3-Bobby-Bobby-1 ) ;
32318: LD_EXP 23
32322: PPUSH
32323: LD_STRING D3-Bobby-Bobby-1
32325: PPUSH
32326: CALL_OW 88
// Say ( JMM , D3-Bobby-JMM-1 ) ;
32330: LD_EXP 12
32334: PPUSH
32335: LD_STRING D3-Bobby-JMM-1
32337: PPUSH
32338: CALL_OW 88
// joined := true ;
32342: LD_ADDR_VAR 0 5
32346: PUSH
32347: LD_INT 1
32349: ST_TO_ADDR
// end else
32350: GO 32388
// begin Say ( Bobby , D4-Bobby-Bobby-1 ) ;
32352: LD_EXP 23
32356: PPUSH
32357: LD_STRING D4-Bobby-Bobby-1
32359: PPUSH
32360: CALL_OW 88
// Say ( JMM , D4-Bobby-JMM-1 ) ;
32364: LD_EXP 12
32368: PPUSH
32369: LD_STRING D4-Bobby-JMM-1
32371: PPUSH
32372: CALL_OW 88
// Say ( Bobby , D4-Bobby-Bobby-2 ) ;
32376: LD_EXP 23
32380: PPUSH
32381: LD_STRING D4-Bobby-Bobby-2
32383: PPUSH
32384: CALL_OW 88
// end ; end else
32388: GO 33086
// if unit = Cornel then
32390: LD_VAR 0 1
32394: PUSH
32395: LD_EXP 29
32399: EQUAL
32400: IFFALSE 32498
// begin if Cornel in selected then
32402: LD_EXP 29
32406: PUSH
32407: LD_EXP 3
32411: IN
32412: IFFALSE 32460
// begin Say ( Cornel , D3-Mark-Corn-1 ) ;
32414: LD_EXP 29
32418: PPUSH
32419: LD_STRING D3-Mark-Corn-1
32421: PPUSH
32422: CALL_OW 88
// Say ( JMM , D3-Mark-JMM-1 ) ;
32426: LD_EXP 12
32430: PPUSH
32431: LD_STRING D3-Mark-JMM-1
32433: PPUSH
32434: CALL_OW 88
// Say ( Cornel , D3-Mark-Corn-2 ) ;
32438: LD_EXP 29
32442: PPUSH
32443: LD_STRING D3-Mark-Corn-2
32445: PPUSH
32446: CALL_OW 88
// joined := true ;
32450: LD_ADDR_VAR 0 5
32454: PUSH
32455: LD_INT 1
32457: ST_TO_ADDR
// end else
32458: GO 32496
// begin Say ( Cornel , D4-Mark-Corn-1 ) ;
32460: LD_EXP 29
32464: PPUSH
32465: LD_STRING D4-Mark-Corn-1
32467: PPUSH
32468: CALL_OW 88
// Say ( JMM , D3-Joan-JMM-1 ) ;
32472: LD_EXP 12
32476: PPUSH
32477: LD_STRING D3-Joan-JMM-1
32479: PPUSH
32480: CALL_OW 88
// Say ( Cornel , D4-Mark-Corn-2 ) ;
32484: LD_EXP 29
32488: PPUSH
32489: LD_STRING D4-Mark-Corn-2
32491: PPUSH
32492: CALL_OW 88
// end ; end else
32496: GO 33086
// if unit = Gary then
32498: LD_VAR 0 1
32502: PUSH
32503: LD_EXP 30
32507: EQUAL
32508: IFFALSE 32592
// begin if Gary in selected then
32510: LD_EXP 30
32514: PUSH
32515: LD_EXP 3
32519: IN
32520: IFFALSE 32556
// begin Say ( Gary , D3-Gary-Gary-1 ) ;
32522: LD_EXP 30
32526: PPUSH
32527: LD_STRING D3-Gary-Gary-1
32529: PPUSH
32530: CALL_OW 88
// Say ( JMM , D3-Gary-JMM-1 ) ;
32534: LD_EXP 12
32538: PPUSH
32539: LD_STRING D3-Gary-JMM-1
32541: PPUSH
32542: CALL_OW 88
// joined := true ;
32546: LD_ADDR_VAR 0 5
32550: PUSH
32551: LD_INT 1
32553: ST_TO_ADDR
// end else
32554: GO 32590
// begin Say ( Gary , D4-Gary-Gary-1 ) ;
32556: LD_EXP 30
32560: PPUSH
32561: LD_STRING D4-Gary-Gary-1
32563: PPUSH
32564: CALL_OW 88
// SetSide ( Gary , 1 ) ;
32568: LD_EXP 30
32572: PPUSH
32573: LD_INT 1
32575: PPUSH
32576: CALL_OW 235
// DialogueOff ;
32580: CALL_OW 7
// InGameOff ;
32584: CALL_OW 9
// exit ;
32588: GO 33278
// end ; end else
32590: GO 33086
// if unit = Kikuchi then
32592: LD_VAR 0 1
32596: PUSH
32597: LD_EXP 32
32601: EQUAL
32602: IFFALSE 32686
// begin if Kikuchi in selected then
32604: LD_EXP 32
32608: PUSH
32609: LD_EXP 3
32613: IN
32614: IFFALSE 32650
// begin Say ( Kikuchi , D3-Yamako-Yam-1 ) ;
32616: LD_EXP 32
32620: PPUSH
32621: LD_STRING D3-Yamako-Yam-1
32623: PPUSH
32624: CALL_OW 88
// Say ( JMM , D3-Soldier2-JMM-1 ) ;
32628: LD_EXP 12
32632: PPUSH
32633: LD_STRING D3-Soldier2-JMM-1
32635: PPUSH
32636: CALL_OW 88
// joined := true ;
32640: LD_ADDR_VAR 0 5
32644: PUSH
32645: LD_INT 1
32647: ST_TO_ADDR
// end else
32648: GO 32684
// begin Say ( Kikuchi , D4-Yamako-Yam-1 ) ;
32650: LD_EXP 32
32654: PPUSH
32655: LD_STRING D4-Yamako-Yam-1
32657: PPUSH
32658: CALL_OW 88
// SetSide ( Kikuchi , 1 ) ;
32662: LD_EXP 32
32666: PPUSH
32667: LD_INT 1
32669: PPUSH
32670: CALL_OW 235
// DialogueOff ;
32674: CALL_OW 7
// InGameOff ;
32678: CALL_OW 9
// exit ;
32682: GO 33278
// end ; end else
32684: GO 33086
// if unit = Gladstone then
32686: LD_VAR 0 1
32690: PUSH
32691: LD_EXP 27
32695: EQUAL
32696: IFFALSE 32770
// begin if Gladstone in selected then
32698: LD_EXP 27
32702: PUSH
32703: LD_EXP 3
32707: IN
32708: IFFALSE 32744
// begin joined := true ;
32710: LD_ADDR_VAR 0 5
32714: PUSH
32715: LD_INT 1
32717: ST_TO_ADDR
// Say ( JMM , D3-Tim-JMM-1 ) ;
32718: LD_EXP 12
32722: PPUSH
32723: LD_STRING D3-Tim-JMM-1
32725: PPUSH
32726: CALL_OW 88
// Say ( Gladstone , D3-Tim-Glad-1 ) ;
32730: LD_EXP 27
32734: PPUSH
32735: LD_STRING D3-Tim-Glad-1
32737: PPUSH
32738: CALL_OW 88
// end else
32742: GO 32768
// begin Say ( JMM , D4-Tim-JMM-1 ) ;
32744: LD_EXP 12
32748: PPUSH
32749: LD_STRING D4-Tim-JMM-1
32751: PPUSH
32752: CALL_OW 88
// Say ( Gladstone , D4-Tim-Glad-1 ) ;
32756: LD_EXP 27
32760: PPUSH
32761: LD_STRING D4-Tim-Glad-1
32763: PPUSH
32764: CALL_OW 88
// end ; end else
32768: GO 33086
// if unit = Denis then
32770: LD_VAR 0 1
32774: PUSH
32775: LD_EXP 25
32779: EQUAL
32780: IFFALSE 32816
// begin joined := true ;
32782: LD_ADDR_VAR 0 5
32786: PUSH
32787: LD_INT 1
32789: ST_TO_ADDR
// Say ( Denis , D3-Denis-Den-1 ) ;
32790: LD_EXP 25
32794: PPUSH
32795: LD_STRING D3-Denis-Den-1
32797: PPUSH
32798: CALL_OW 88
// Say ( JMM , D3-Denis-JMM-1 ) ;
32802: LD_EXP 12
32806: PPUSH
32807: LD_STRING D3-Denis-JMM-1
32809: PPUSH
32810: CALL_OW 88
// end else
32814: GO 33086
// if unit = Simms then
32816: LD_VAR 0 1
32820: PUSH
32821: LD_EXP 33
32825: EQUAL
32826: IFFALSE 32862
// begin joined := true ;
32828: LD_ADDR_VAR 0 5
32832: PUSH
32833: LD_INT 1
32835: ST_TO_ADDR
// Say ( Simms , D3-Simms-Sim-1 ) ;
32836: LD_EXP 33
32840: PPUSH
32841: LD_STRING D3-Simms-Sim-1
32843: PPUSH
32844: CALL_OW 88
// Say ( JMM , D3-Simms-JMM-1 ) ;
32848: LD_EXP 12
32852: PPUSH
32853: LD_STRING D3-Simms-JMM-1
32855: PPUSH
32856: CALL_OW 88
// end else
32860: GO 33086
// if unit = DeltaDoctor then
32862: LD_VAR 0 1
32866: PUSH
32867: LD_EXP 35
32871: EQUAL
32872: IFFALSE 32908
// begin joined := true ;
32874: LD_ADDR_VAR 0 5
32878: PUSH
32879: LD_INT 1
32881: ST_TO_ADDR
// Say ( DeltaDoctor , D3-Soldier1-Sol1-1 ) ;
32882: LD_EXP 35
32886: PPUSH
32887: LD_STRING D3-Soldier1-Sol1-1
32889: PPUSH
32890: CALL_OW 88
// Say ( JMM , D3-Soldier1-JMM-1 ) ;
32894: LD_EXP 12
32898: PPUSH
32899: LD_STRING D3-Soldier1-JMM-1
32901: PPUSH
32902: CALL_OW 88
// end else
32906: GO 33086
// begin joined := unit in selected ;
32908: LD_ADDR_VAR 0 5
32912: PUSH
32913: LD_VAR 0 1
32917: PUSH
32918: LD_EXP 3
32922: IN
32923: ST_TO_ADDR
// if joined then
32924: LD_VAR 0 5
32928: IFFALSE 32997
// begin if GetSex ( unit ) = sex_male then
32930: LD_VAR 0 1
32934: PPUSH
32935: CALL_OW 258
32939: PUSH
32940: LD_INT 1
32942: EQUAL
32943: IFFALSE 32971
// begin Say ( unit , D3-Soldier1-Sol1-1 ) ;
32945: LD_VAR 0 1
32949: PPUSH
32950: LD_STRING D3-Soldier1-Sol1-1
32952: PPUSH
32953: CALL_OW 88
// Say ( JMM , D3-Soldier1-JMM-1 ) ;
32957: LD_EXP 12
32961: PPUSH
32962: LD_STRING D3-Soldier1-JMM-1
32964: PPUSH
32965: CALL_OW 88
// end else
32969: GO 32995
// begin Say ( unit , D3-Soldier2-FSol2-1 ) ;
32971: LD_VAR 0 1
32975: PPUSH
32976: LD_STRING D3-Soldier2-FSol2-1
32978: PPUSH
32979: CALL_OW 88
// Say ( JMM , D3-Soldier2-JMM-1 ) ;
32983: LD_EXP 12
32987: PPUSH
32988: LD_STRING D3-Soldier2-JMM-1
32990: PPUSH
32991: CALL_OW 88
// end ; end else
32995: GO 33086
// begin if GetSex ( unit ) = sex_male then
32997: LD_VAR 0 1
33001: PPUSH
33002: CALL_OW 258
33006: PUSH
33007: LD_INT 1
33009: EQUAL
33010: IFFALSE 33050
// begin Say ( unit , D4-Soldier2-Sol1-1 ) ;
33012: LD_VAR 0 1
33016: PPUSH
33017: LD_STRING D4-Soldier2-Sol1-1
33019: PPUSH
33020: CALL_OW 88
// Say ( JMM , D4-Soldier2-JMM-1 ) ;
33024: LD_EXP 12
33028: PPUSH
33029: LD_STRING D4-Soldier2-JMM-1
33031: PPUSH
33032: CALL_OW 88
// Say ( unit , D4-Soldier2-Sol2-1 ) ;
33036: LD_VAR 0 1
33040: PPUSH
33041: LD_STRING D4-Soldier2-Sol2-1
33043: PPUSH
33044: CALL_OW 88
// end else
33048: GO 33086
// begin Say ( unit , D4-Soldier1-FSol1-1 ) ;
33050: LD_VAR 0 1
33054: PPUSH
33055: LD_STRING D4-Soldier1-FSol1-1
33057: PPUSH
33058: CALL_OW 88
// Say ( JMM , D4-Soldier1-JMM-1 ) ;
33062: LD_EXP 12
33066: PPUSH
33067: LD_STRING D4-Soldier1-JMM-1
33069: PPUSH
33070: CALL_OW 88
// Say ( unit , D4-Soldier1-FSol1-2 ) ;
33074: LD_VAR 0 1
33078: PPUSH
33079: LD_STRING D4-Soldier1-FSol1-2
33081: PPUSH
33082: CALL_OW 88
// end ; end ; end ; DialogueOff ;
33086: CALL_OW 7
// InGameOff ;
33090: CALL_OW 9
// if building then
33094: LD_VAR 0 3
33098: IFFALSE 33199
// begin SetSide ( JMM , side ) ;
33100: LD_EXP 12
33104: PPUSH
33105: LD_VAR 0 4
33109: PPUSH
33110: CALL_OW 235
// ComExitBuilding ( JMM ) ;
33114: LD_EXP 12
33118: PPUSH
33119: CALL_OW 122
// if joined then
33123: LD_VAR 0 5
33127: IFFALSE 33166
// begin SetSide ( unit , side ) ;
33129: LD_VAR 0 1
33133: PPUSH
33134: LD_VAR 0 4
33138: PPUSH
33139: CALL_OW 235
// SetSide ( building , 1 ) ;
33143: LD_VAR 0 3
33147: PPUSH
33148: LD_INT 1
33150: PPUSH
33151: CALL_OW 235
// ComExitBuilding ( unit ) ;
33155: LD_VAR 0 1
33159: PPUSH
33160: CALL_OW 122
// end else
33164: GO 33197
// begin wait ( 0 0$10 ) ;
33166: LD_INT 350
33168: PPUSH
33169: CALL_OW 67
// SetSide ( unit , 1 ) ;
33173: LD_VAR 0 1
33177: PPUSH
33178: LD_INT 1
33180: PPUSH
33181: CALL_OW 235
// SetSide ( building , 1 ) ;
33185: LD_VAR 0 3
33189: PPUSH
33190: LD_INT 1
33192: PPUSH
33193: CALL_OW 235
// end ; end else
33197: GO 33278
// begin ComStop ( [ JMM , unit ] ) ;
33199: LD_EXP 12
33203: PUSH
33204: LD_VAR 0 1
33208: PUSH
33209: EMPTY
33210: LIST
33211: LIST
33212: PPUSH
33213: CALL_OW 141
// if joined then
33217: LD_VAR 0 5
33221: IFFALSE 33239
// SetSide ( unit , side ) else
33223: LD_VAR 0 1
33227: PPUSH
33228: LD_VAR 0 4
33232: PPUSH
33233: CALL_OW 235
33237: GO 33278
// begin repeat wait ( 0 0$1 ) ;
33239: LD_INT 35
33241: PPUSH
33242: CALL_OW 67
// until GetDistUnits ( JMM , unit ) > 11 ;
33246: LD_EXP 12
33250: PPUSH
33251: LD_VAR 0 1
33255: PPUSH
33256: CALL_OW 296
33260: PUSH
33261: LD_INT 11
33263: GREATER
33264: IFFALSE 33239
// SetSide ( unit , 1 ) ;
33266: LD_VAR 0 1
33270: PPUSH
33271: LD_INT 1
33273: PPUSH
33274: CALL_OW 235
// end ; end ; end ;
33278: LD_VAR 0 2
33282: RET
// every 0 0$01 trigger IsInUnit ( JMM ) = amlab do
33283: LD_EXP 12
33287: PPUSH
33288: CALL_OW 310
33292: PUSH
33293: LD_INT 47
33295: EQUAL
33296: IFFALSE 33364
33298: GO 33300
33300: DISABLE
// begin ChangeMissionObjectives ( M1a ) ;
33301: LD_STRING M1a
33303: PPUSH
33304: CALL_OW 337
// SetTech ( tech_Soporific , 7 , state_researched ) ;
33308: LD_INT 13
33310: PPUSH
33311: LD_INT 7
33313: PPUSH
33314: LD_INT 2
33316: PPUSH
33317: CALL_OW 322
// SetTech ( tech_SpacAnom , 7 , state_researched ) ;
33321: LD_INT 29
33323: PPUSH
33324: LD_INT 7
33326: PPUSH
33327: LD_INT 2
33329: PPUSH
33330: CALL_OW 322
// SetClass ( JMM , class_bazooker ) ;
33334: LD_EXP 12
33338: PPUSH
33339: LD_INT 9
33341: PPUSH
33342: CALL_OW 336
// can_escape := true ;
33346: LD_ADDR_EXP 6
33350: PUSH
33351: LD_INT 1
33353: ST_TO_ADDR
// SetAreaMapShow ( escape_area , 1 ) ;
33354: LD_INT 19
33356: PPUSH
33357: LD_INT 1
33359: PPUSH
33360: CALL_OW 424
// end ;
33364: END
// every 0 0$01 trigger FilterAllUnits ( [ [ f_side , 4 ] , [ f_weapon , us_cargo_bay ] ] ) do var i ;
33365: LD_INT 22
33367: PUSH
33368: LD_INT 4
33370: PUSH
33371: EMPTY
33372: LIST
33373: LIST
33374: PUSH
33375: LD_INT 34
33377: PUSH
33378: LD_INT 12
33380: PUSH
33381: EMPTY
33382: LIST
33383: LIST
33384: PUSH
33385: EMPTY
33386: LIST
33387: LIST
33388: PPUSH
33389: CALL_OW 69
33393: IFFALSE 33475
33395: GO 33397
33397: DISABLE
33398: LD_INT 0
33400: PPUSH
// begin enable ;
33401: ENABLE
// for i in FilterAllUnits ( [ [ f_side , 4 ] , [ f_weapon , us_cargo_bay ] ] ) do
33402: LD_ADDR_VAR 0 1
33406: PUSH
33407: LD_INT 22
33409: PUSH
33410: LD_INT 4
33412: PUSH
33413: EMPTY
33414: LIST
33415: LIST
33416: PUSH
33417: LD_INT 34
33419: PUSH
33420: LD_INT 12
33422: PUSH
33423: EMPTY
33424: LIST
33425: LIST
33426: PUSH
33427: EMPTY
33428: LIST
33429: LIST
33430: PPUSH
33431: CALL_OW 69
33435: PUSH
33436: FOR_IN
33437: IFFALSE 33473
// if GetDistUnits ( i , JMM ) < 6 then
33439: LD_VAR 0 1
33443: PPUSH
33444: LD_EXP 12
33448: PPUSH
33449: CALL_OW 296
33453: PUSH
33454: LD_INT 6
33456: LESS
33457: IFFALSE 33471
// SetSide ( i , 7 ) ;
33459: LD_VAR 0 1
33463: PPUSH
33464: LD_INT 7
33466: PPUSH
33467: CALL_OW 235
33471: GO 33436
33473: POP
33474: POP
// end ;
33475: PPOPN 1
33477: END
// every 0 0$01 trigger can_escape and not FilterUnitsExceptArea ( escape_area , [ [ f_side , 7 ] , [ f_type , unit_human ] ] ) and not FindArtifact ( 3 ) and not FindArtifact ( 5 ) do var all_taken , tmp ;
33478: LD_EXP 6
33482: PUSH
33483: LD_INT 19
33485: PPUSH
33486: LD_INT 22
33488: PUSH
33489: LD_INT 7
33491: PUSH
33492: EMPTY
33493: LIST
33494: LIST
33495: PUSH
33496: LD_INT 21
33498: PUSH
33499: LD_INT 1
33501: PUSH
33502: EMPTY
33503: LIST
33504: LIST
33505: PUSH
33506: EMPTY
33507: LIST
33508: LIST
33509: PPUSH
33510: CALL_OW 71
33514: NOT
33515: AND
33516: PUSH
33517: LD_INT 3
33519: PPUSH
33520: CALL_OW 469
33524: NOT
33525: AND
33526: PUSH
33527: LD_INT 5
33529: PPUSH
33530: CALL_OW 469
33534: NOT
33535: AND
33536: IFFALSE 34762
33538: GO 33540
33540: DISABLE
33541: LD_INT 0
33543: PPUSH
33544: PPUSH
// begin all_taken := ( UnitFilter ( selected , [ [ f_side , 4 ] , [ f_type , unit_human ] ] ) = 0 ) ;
33545: LD_ADDR_VAR 0 1
33549: PUSH
33550: LD_EXP 3
33554: PPUSH
33555: LD_INT 22
33557: PUSH
33558: LD_INT 4
33560: PUSH
33561: EMPTY
33562: LIST
33563: LIST
33564: PUSH
33565: LD_INT 21
33567: PUSH
33568: LD_INT 1
33570: PUSH
33571: EMPTY
33572: LIST
33573: LIST
33574: PUSH
33575: EMPTY
33576: LIST
33577: LIST
33578: PPUSH
33579: CALL_OW 72
33583: PUSH
33584: LD_INT 0
33586: EQUAL
33587: ST_TO_ADDR
// if not all_taken then
33588: LD_VAR 0 1
33592: NOT
33593: IFFALSE 33734
// case query ( Q1 ) of 1 :
33595: LD_STRING Q1
33597: PPUSH
33598: CALL_OW 97
33602: PUSH
33603: LD_INT 1
33605: DOUBLE
33606: EQUAL
33607: IFTRUE 33611
33609: GO 33722
33611: POP
// begin repeat wait ( 0 0$1 ) ;
33612: LD_INT 35
33614: PPUSH
33615: CALL_OW 67
// until UnitFilter ( selected , [ [ f_side , 4 ] , [ f_type , unit_human ] ] ) = 0 and not FilterUnitsExceptArea ( escape_area , [ [ f_side , 7 ] , [ f_type , unit_human ] ] ) and not FindArtifact ( 3 ) and not FindArtifact ( 5 ) ;
33619: LD_EXP 3
33623: PPUSH
33624: LD_INT 22
33626: PUSH
33627: LD_INT 4
33629: PUSH
33630: EMPTY
33631: LIST
33632: LIST
33633: PUSH
33634: LD_INT 21
33636: PUSH
33637: LD_INT 1
33639: PUSH
33640: EMPTY
33641: LIST
33642: LIST
33643: PUSH
33644: EMPTY
33645: LIST
33646: LIST
33647: PPUSH
33648: CALL_OW 72
33652: PUSH
33653: LD_INT 0
33655: EQUAL
33656: PUSH
33657: LD_INT 19
33659: PPUSH
33660: LD_INT 22
33662: PUSH
33663: LD_INT 7
33665: PUSH
33666: EMPTY
33667: LIST
33668: LIST
33669: PUSH
33670: LD_INT 21
33672: PUSH
33673: LD_INT 1
33675: PUSH
33676: EMPTY
33677: LIST
33678: LIST
33679: PUSH
33680: EMPTY
33681: LIST
33682: LIST
33683: PPUSH
33684: CALL_OW 71
33688: NOT
33689: AND
33690: PUSH
33691: LD_INT 3
33693: PPUSH
33694: CALL_OW 469
33698: NOT
33699: AND
33700: PUSH
33701: LD_INT 5
33703: PPUSH
33704: CALL_OW 469
33708: NOT
33709: AND
33710: IFFALSE 33612
// all_taken := true ;
33712: LD_ADDR_VAR 0 1
33716: PUSH
33717: LD_INT 1
33719: ST_TO_ADDR
// end ; 2 :
33720: GO 33734
33722: LD_INT 2
33724: DOUBLE
33725: EQUAL
33726: IFTRUE 33730
33728: GO 33733
33730: POP
// ; end ;
33731: GO 33734
33733: POP
// if team_kill_counter then
33734: LD_EXP 9
33738: IFFALSE 33754
// Say ( JMM , D5-JMM-1 ) else
33740: LD_EXP 12
33744: PPUSH
33745: LD_STRING D5-JMM-1
33747: PPUSH
33748: CALL_OW 88
33752: GO 33766
// Say ( JMM , D5-JMM-1a ) ;
33754: LD_EXP 12
33758: PPUSH
33759: LD_STRING D5-JMM-1a
33761: PPUSH
33762: CALL_OW 88
// if all_taken then
33766: LD_VAR 0 1
33770: IFFALSE 33784
// AddMedal ( All , 1 ) else
33772: LD_STRING All
33774: PPUSH
33775: LD_INT 1
33777: PPUSH
33778: CALL_OW 101
33782: GO 33795
// AddMedal ( All , - 1 ) ;
33784: LD_STRING All
33786: PPUSH
33787: LD_INT 1
33789: NEG
33790: PPUSH
33791: CALL_OW 101
// if team_kill_counter then
33795: LD_EXP 9
33799: IFFALSE 33814
// AddMedal ( Save , - 1 ) else
33801: LD_STRING Save
33803: PPUSH
33804: LD_INT 1
33806: NEG
33807: PPUSH
33808: CALL_OW 101
33812: GO 33824
// AddMedal ( Save , 1 ) ;
33814: LD_STRING Save
33816: PPUSH
33817: LD_INT 1
33819: PPUSH
33820: CALL_OW 101
// if friends_kill_counter >= [ 2 , 1 , 1 ] [ Difficulty ] then
33824: LD_EXP 8
33828: PUSH
33829: LD_INT 2
33831: PUSH
33832: LD_INT 1
33834: PUSH
33835: LD_INT 1
33837: PUSH
33838: EMPTY
33839: LIST
33840: LIST
33841: LIST
33842: PUSH
33843: LD_OWVAR 67
33847: ARRAY
33848: GREATEREQUAL
33849: IFFALSE 33864
// AddMedal ( Friendship , - 1 ) else
33851: LD_STRING Friendship
33853: PPUSH
33854: LD_INT 1
33856: NEG
33857: PPUSH
33858: CALL_OW 101
33862: GO 33874
// AddMedal ( Friendship , 1 ) ;
33864: LD_STRING Friendship
33866: PPUSH
33867: LD_INT 1
33869: PPUSH
33870: CALL_OW 101
// GiveMedals ( MAIN ) ;
33874: LD_STRING MAIN
33876: PPUSH
33877: CALL_OW 102
// tmp := FilterAllUnits ( [ [ [ f_side , 7 ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] , [ f_class , 5 ] , [ f_class , 8 ] , [ f_class , 9 ] ] ] ] ) ;
33881: LD_ADDR_VAR 0 2
33885: PUSH
33886: LD_INT 22
33888: PUSH
33889: LD_INT 7
33891: PUSH
33892: EMPTY
33893: LIST
33894: LIST
33895: PUSH
33896: LD_INT 2
33898: PUSH
33899: LD_INT 25
33901: PUSH
33902: LD_INT 1
33904: PUSH
33905: EMPTY
33906: LIST
33907: LIST
33908: PUSH
33909: LD_INT 25
33911: PUSH
33912: LD_INT 2
33914: PUSH
33915: EMPTY
33916: LIST
33917: LIST
33918: PUSH
33919: LD_INT 25
33921: PUSH
33922: LD_INT 3
33924: PUSH
33925: EMPTY
33926: LIST
33927: LIST
33928: PUSH
33929: LD_INT 25
33931: PUSH
33932: LD_INT 4
33934: PUSH
33935: EMPTY
33936: LIST
33937: LIST
33938: PUSH
33939: LD_INT 25
33941: PUSH
33942: LD_INT 5
33944: PUSH
33945: EMPTY
33946: LIST
33947: LIST
33948: PUSH
33949: LD_INT 25
33951: PUSH
33952: LD_INT 8
33954: PUSH
33955: EMPTY
33956: LIST
33957: LIST
33958: PUSH
33959: LD_INT 25
33961: PUSH
33962: LD_INT 9
33964: PUSH
33965: EMPTY
33966: LIST
33967: LIST
33968: PUSH
33969: EMPTY
33970: LIST
33971: LIST
33972: LIST
33973: LIST
33974: LIST
33975: LIST
33976: LIST
33977: LIST
33978: PUSH
33979: EMPTY
33980: LIST
33981: LIST
33982: PUSH
33983: EMPTY
33984: LIST
33985: PPUSH
33986: CALL_OW 69
33990: ST_TO_ADDR
// RewardPeople ( tmp ^ Roth ) ;
33991: LD_VAR 0 2
33995: PUSH
33996: LD_EXP 13
34000: ADD
34001: PPUSH
34002: CALL_OW 43
// SaveCharacters ( JMM , 12a_JMM ) ;
34006: LD_EXP 12
34010: PPUSH
34011: LD_STRING 12a_JMM
34013: PPUSH
34014: CALL_OW 38
// if IsLive ( Roth ) then
34018: LD_EXP 13
34022: PPUSH
34023: CALL_OW 300
34027: IFFALSE 34041
// SaveCharacters ( Roth , 12a_Roth ) ;
34029: LD_EXP 13
34033: PPUSH
34034: LD_STRING 12a_Roth
34036: PPUSH
34037: CALL_OW 38
// if Lisa in tmp then
34041: LD_EXP 21
34045: PUSH
34046: LD_VAR 0 2
34050: IN
34051: IFFALSE 34067
// SaveCharacters ( Lisa , 12a_Lisa ) else
34053: LD_EXP 21
34057: PPUSH
34058: LD_STRING 12a_Lisa
34060: PPUSH
34061: CALL_OW 38
34065: GO 34085
// if Lisa then
34067: LD_EXP 21
34071: IFFALSE 34085
// SaveCharacters ( Lisa , 12p_Lisa ) ;
34073: LD_EXP 21
34077: PPUSH
34078: LD_STRING 12p_Lisa
34080: PPUSH
34081: CALL_OW 38
// if Donaldson in tmp then
34085: LD_EXP 22
34089: PUSH
34090: LD_VAR 0 2
34094: IN
34095: IFFALSE 34111
// SaveCharacters ( Donaldson , 12a_Donaldson ) else
34097: LD_EXP 22
34101: PPUSH
34102: LD_STRING 12a_Donaldson
34104: PPUSH
34105: CALL_OW 38
34109: GO 34129
// if Donaldson then
34111: LD_EXP 22
34115: IFFALSE 34129
// SaveCharacters ( Donaldson , 12p_Donaldson ) ;
34117: LD_EXP 22
34121: PPUSH
34122: LD_STRING 12p_Donaldson
34124: PPUSH
34125: CALL_OW 38
// if Bobby in tmp then
34129: LD_EXP 23
34133: PUSH
34134: LD_VAR 0 2
34138: IN
34139: IFFALSE 34155
// SaveCharacters ( Bobby , 12a_Bobby ) else
34141: LD_EXP 23
34145: PPUSH
34146: LD_STRING 12a_Bobby
34148: PPUSH
34149: CALL_OW 38
34153: GO 34173
// if Bobby then
34155: LD_EXP 23
34159: IFFALSE 34173
// SaveCharacters ( Bobby , 12p_Bobby ) ;
34161: LD_EXP 23
34165: PPUSH
34166: LD_STRING 12p_Bobby
34168: PPUSH
34169: CALL_OW 38
// if Cyrus in tmp then
34173: LD_EXP 24
34177: PUSH
34178: LD_VAR 0 2
34182: IN
34183: IFFALSE 34199
// SaveCharacters ( Cyrus , 12a_Cyrus ) else
34185: LD_EXP 24
34189: PPUSH
34190: LD_STRING 12a_Cyrus
34192: PPUSH
34193: CALL_OW 38
34197: GO 34217
// if Cyrus then
34199: LD_EXP 24
34203: IFFALSE 34217
// SaveCharacters ( Cyrus , 12p_Cyrus ) ;
34205: LD_EXP 24
34209: PPUSH
34210: LD_STRING 12p_Cyrus
34212: PPUSH
34213: CALL_OW 38
// if Denis in tmp then
34217: LD_EXP 25
34221: PUSH
34222: LD_VAR 0 2
34226: IN
34227: IFFALSE 34241
// SaveCharacters ( Denis , 12a_Denis ) ;
34229: LD_EXP 25
34233: PPUSH
34234: LD_STRING 12a_Denis
34236: PPUSH
34237: CALL_OW 38
// if Brown in tmp then
34241: LD_EXP 26
34245: PUSH
34246: LD_VAR 0 2
34250: IN
34251: IFFALSE 34267
// SaveCharacters ( Brown , 12a_Brown ) else
34253: LD_EXP 26
34257: PPUSH
34258: LD_STRING 12a_Brown
34260: PPUSH
34261: CALL_OW 38
34265: GO 34291
// if Brown in tmp then
34267: LD_EXP 26
34271: PUSH
34272: LD_VAR 0 2
34276: IN
34277: IFFALSE 34291
// SaveCharacters ( Brown , 12p_Brown ) ;
34279: LD_EXP 26
34283: PPUSH
34284: LD_STRING 12p_Brown
34286: PPUSH
34287: CALL_OW 38
// if Gladstone in tmp then
34291: LD_EXP 27
34295: PUSH
34296: LD_VAR 0 2
34300: IN
34301: IFFALSE 34317
// SaveCharacters ( Gladstone , 12a_Gladstone ) else
34303: LD_EXP 27
34307: PPUSH
34308: LD_STRING 12a_Gladstone
34310: PPUSH
34311: CALL_OW 38
34315: GO 34335
// if Gladstone then
34317: LD_EXP 27
34321: IFFALSE 34335
// SaveCharacters ( Gladstone , 12p_Gladstone ) ;
34323: LD_EXP 27
34327: PPUSH
34328: LD_STRING 12p_Gladstone
34330: PPUSH
34331: CALL_OW 38
// if Houten in tmp then
34335: LD_EXP 28
34339: PUSH
34340: LD_VAR 0 2
34344: IN
34345: IFFALSE 34361
// SaveCharacters ( Houten , 12a_Houten ) else
34347: LD_EXP 28
34351: PPUSH
34352: LD_STRING 12a_Houten
34354: PPUSH
34355: CALL_OW 38
34359: GO 34379
// if Houten then
34361: LD_EXP 28
34365: IFFALSE 34379
// SaveCharacters ( Houten , 12p_Houten ) ;
34367: LD_EXP 28
34371: PPUSH
34372: LD_STRING 12p_Houten
34374: PPUSH
34375: CALL_OW 38
// if Cornel in tmp then
34379: LD_EXP 29
34383: PUSH
34384: LD_VAR 0 2
34388: IN
34389: IFFALSE 34405
// SaveCharacters ( Cornel , 12a_Cornell ) else
34391: LD_EXP 29
34395: PPUSH
34396: LD_STRING 12a_Cornell
34398: PPUSH
34399: CALL_OW 38
34403: GO 34423
// if Cornel then
34405: LD_EXP 29
34409: IFFALSE 34423
// SaveCharacters ( Cornel , 12p_Cornell ) ;
34411: LD_EXP 29
34415: PPUSH
34416: LD_STRING 12p_Cornell
34418: PPUSH
34419: CALL_OW 38
// if Gary in tmp then
34423: LD_EXP 30
34427: PUSH
34428: LD_VAR 0 2
34432: IN
34433: IFFALSE 34449
// SaveCharacters ( Gary , 12a_Gary ) else
34435: LD_EXP 30
34439: PPUSH
34440: LD_STRING 12a_Gary
34442: PPUSH
34443: CALL_OW 38
34447: GO 34467
// if Gary then
34449: LD_EXP 30
34453: IFFALSE 34467
// SaveCharacters ( Gary , 12p_Gary ) ;
34455: LD_EXP 30
34459: PPUSH
34460: LD_STRING 12p_Gary
34462: PPUSH
34463: CALL_OW 38
// if Frank in tmp then
34467: LD_EXP 31
34471: PUSH
34472: LD_VAR 0 2
34476: IN
34477: IFFALSE 34491
// SaveCharacters ( Frank , 12a_Frank ) ;
34479: LD_EXP 31
34483: PPUSH
34484: LD_STRING 12a_Frank
34486: PPUSH
34487: CALL_OW 38
// if Kikuchi in tmp then
34491: LD_EXP 32
34495: PUSH
34496: LD_VAR 0 2
34500: IN
34501: IFFALSE 34517
// SaveCharacters ( Kikuchi , 12a_Kikuchi ) else
34503: LD_EXP 32
34507: PPUSH
34508: LD_STRING 12a_Kikuchi
34510: PPUSH
34511: CALL_OW 38
34515: GO 34535
// if Kikuchi then
34517: LD_EXP 32
34521: IFFALSE 34535
// SaveCharacters ( Kikuchi , 12p_Kikuchi ) ;
34523: LD_EXP 32
34527: PPUSH
34528: LD_STRING 12p_Kikuchi
34530: PPUSH
34531: CALL_OW 38
// if Simms in tmp then
34535: LD_EXP 33
34539: PUSH
34540: LD_VAR 0 2
34544: IN
34545: IFFALSE 34559
// SaveCharacters ( Simms , 12a_Simms ) ;
34547: LD_EXP 33
34551: PPUSH
34552: LD_STRING 12a_Simms
34554: PPUSH
34555: CALL_OW 38
// if Joan in tmp then
34559: LD_EXP 34
34563: PUSH
34564: LD_VAR 0 2
34568: IN
34569: IFFALSE 34583
// SaveCharacters ( Joan , 12a_Joan ) ;
34571: LD_EXP 34
34575: PPUSH
34576: LD_STRING 12a_Joan
34578: PPUSH
34579: CALL_OW 38
// if DeltaDoctor in tmp then
34583: LD_EXP 35
34587: PUSH
34588: LD_VAR 0 2
34592: IN
34593: IFFALSE 34607
// SaveCharacters ( DeltaDoctor , 12a_DeltaDoctor ) ;
34595: LD_EXP 35
34599: PPUSH
34600: LD_STRING 12a_DeltaDoctor
34602: PPUSH
34603: CALL_OW 38
// tmp := tmp diff [ JMM , Roth , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi , Simms , Joan , DeltaDoctor ] ;
34607: LD_ADDR_VAR 0 2
34611: PUSH
34612: LD_VAR 0 2
34616: PUSH
34617: LD_EXP 12
34621: PUSH
34622: LD_EXP 13
34626: PUSH
34627: LD_EXP 21
34631: PUSH
34632: LD_EXP 22
34636: PUSH
34637: LD_EXP 23
34641: PUSH
34642: LD_EXP 24
34646: PUSH
34647: LD_EXP 25
34651: PUSH
34652: LD_EXP 26
34656: PUSH
34657: LD_EXP 27
34661: PUSH
34662: LD_EXP 28
34666: PUSH
34667: LD_EXP 29
34671: PUSH
34672: LD_EXP 30
34676: PUSH
34677: LD_EXP 31
34681: PUSH
34682: LD_EXP 32
34686: PUSH
34687: LD_EXP 33
34691: PUSH
34692: LD_EXP 34
34696: PUSH
34697: LD_EXP 35
34701: PUSH
34702: EMPTY
34703: LIST
34704: LIST
34705: LIST
34706: LIST
34707: LIST
34708: LIST
34709: LIST
34710: LIST
34711: LIST
34712: LIST
34713: LIST
34714: LIST
34715: LIST
34716: LIST
34717: LIST
34718: LIST
34719: LIST
34720: DIFF
34721: ST_TO_ADDR
// if tmp then
34722: LD_VAR 0 2
34726: IFFALSE 34740
// SaveCharacters ( tmp , 12a_others ) ;
34728: LD_VAR 0 2
34732: PPUSH
34733: LD_STRING 12a_others
34735: PPUSH
34736: CALL_OW 38
// SaveCharacters ( friends diff tmp , 12p_others ) ;
34740: LD_EXP 4
34744: PUSH
34745: LD_VAR 0 2
34749: DIFF
34750: PPUSH
34751: LD_STRING 12p_others
34753: PPUSH
34754: CALL_OW 38
// YouWin ;
34758: CALL_OW 103
// end ; end_of_file
34762: PPOPN 2
34764: END
// on SailEvent ( event ) do var tmp ;
34765: LD_INT 0
34767: PPUSH
// begin if event = 1 then
34768: LD_VAR 0 1
34772: PUSH
34773: LD_INT 1
34775: EQUAL
34776: IFFALSE 34849
// begin if not mobile_patrol then
34778: LD_EXP 15
34782: NOT
34783: IFFALSE 34787
// exit ;
34785: GO 34849
// tmp := mobile_patrol [ mobile_patrol ] ;
34787: LD_ADDR_VAR 0 2
34791: PUSH
34792: LD_EXP 15
34796: PUSH
34797: LD_EXP 15
34801: ARRAY
34802: ST_TO_ADDR
// mobile_patrol := Delete ( mobile_patrol , mobile_patrol ) ;
34803: LD_ADDR_EXP 15
34807: PUSH
34808: LD_EXP 15
34812: PPUSH
34813: LD_EXP 15
34817: PPUSH
34818: CALL_OW 3
34822: ST_TO_ADDR
// Patrol ( tmp , mobile_points [ mobile_patrol + 1 ] , [ ] ) ;
34823: LD_VAR 0 2
34827: PPUSH
34828: LD_EXP 16
34832: PUSH
34833: LD_EXP 15
34837: PUSH
34838: LD_INT 1
34840: PLUS
34841: ARRAY
34842: PPUSH
34843: EMPTY
34844: PPUSH
34845: CALL 6739 0 3
// end ; end ;
34849: PPOPN 2
34851: END
// on UnitDestroyed ( un ) do begin if un = JMM then
34852: LD_VAR 0 1
34856: PUSH
34857: LD_EXP 12
34861: EQUAL
34862: IFFALSE 34871
// YouLost ( JMM ) ;
34864: LD_STRING JMM
34866: PPUSH
34867: CALL_OW 104
// if GetSide ( un ) = 7 and GetWeapon ( un ) = us_cargo_bay then
34871: LD_VAR 0 1
34875: PPUSH
34876: CALL_OW 255
34880: PUSH
34881: LD_INT 7
34883: EQUAL
34884: PUSH
34885: LD_VAR 0 1
34889: PPUSH
34890: CALL_OW 264
34894: PUSH
34895: LD_INT 12
34897: EQUAL
34898: AND
34899: IFFALSE 34908
// YouLost ( Artifact ) ;
34901: LD_STRING Artifact
34903: PPUSH
34904: CALL_OW 104
// if ( GetSide ( un ) = 7 and GetType ( un ) = unit_human ) or un = Roth then
34908: LD_VAR 0 1
34912: PPUSH
34913: CALL_OW 255
34917: PUSH
34918: LD_INT 7
34920: EQUAL
34921: PUSH
34922: LD_VAR 0 1
34926: PPUSH
34927: CALL_OW 247
34931: PUSH
34932: LD_INT 1
34934: EQUAL
34935: AND
34936: PUSH
34937: LD_VAR 0 1
34941: PUSH
34942: LD_EXP 13
34946: EQUAL
34947: OR
34948: IFFALSE 34964
// team_kill_counter := team_kill_counter + 1 ;
34950: LD_ADDR_EXP 9
34954: PUSH
34955: LD_EXP 9
34959: PUSH
34960: LD_INT 1
34962: PLUS
34963: ST_TO_ADDR
// if GetSide ( un ) = 1 and GetType ( un ) = unit_human then
34964: LD_VAR 0 1
34968: PPUSH
34969: CALL_OW 255
34973: PUSH
34974: LD_INT 1
34976: EQUAL
34977: PUSH
34978: LD_VAR 0 1
34982: PPUSH
34983: CALL_OW 247
34987: PUSH
34988: LD_INT 1
34990: EQUAL
34991: AND
34992: IFFALSE 35008
// friends_kill_counter := friends_kill_counter + 1 ;
34994: LD_ADDR_EXP 8
34998: PUSH
34999: LD_EXP 8
35003: PUSH
35004: LD_INT 1
35006: PLUS
35007: ST_TO_ADDR
// if GetSide ( un ) <> 1 then
35008: LD_VAR 0 1
35012: PPUSH
35013: CALL_OW 255
35017: PUSH
35018: LD_INT 1
35020: NONEQUAL
35021: IFFALSE 35025
// exit ;
35023: GO 35102
// if GetControl ( un ) = control_remote then
35025: LD_VAR 0 1
35029: PPUSH
35030: CALL_OW 263
35034: PUSH
35035: LD_INT 2
35037: EQUAL
35038: IFFALSE 35056
// defenders := defenders diff un ;
35040: LD_ADDR_EXP 18
35044: PUSH
35045: LD_EXP 18
35049: PUSH
35050: LD_VAR 0 1
35054: DIFF
35055: ST_TO_ADDR
// if not un in defenders then
35056: LD_VAR 0 1
35060: PUSH
35061: LD_EXP 18
35065: IN
35066: NOT
35067: IFFALSE 35102
// begin defcon := [ GetX ( un ) , GetY ( un ) ] ;
35069: LD_ADDR_EXP 19
35073: PUSH
35074: LD_VAR 0 1
35078: PPUSH
35079: CALL_OW 250
35083: PUSH
35084: LD_VAR 0 1
35088: PPUSH
35089: CALL_OW 251
35093: PUSH
35094: EMPTY
35095: LIST
35096: LIST
35097: ST_TO_ADDR
// Defend ;
35098: CALL 2519 0 0
// end ; end ;
35102: PPOPN 1
35104: END
// on VehicleConstructed ( veh , fac ) do begin if GetSide ( veh ) <> 1 then
35105: LD_VAR 0 1
35109: PPUSH
35110: CALL_OW 255
35114: PUSH
35115: LD_INT 1
35117: NONEQUAL
35118: IFFALSE 35122
// exit ;
35120: GO 35146
// if GetControl ( veh ) = control_remote then
35122: LD_VAR 0 1
35126: PPUSH
35127: CALL_OW 263
35131: PUSH
35132: LD_INT 2
35134: EQUAL
35135: IFFALSE 35146
// Connect ( veh ) ;
35137: LD_VAR 0 1
35141: PPUSH
35142: CALL 5934 0 1
// end ;
35146: PPOPN 2
35148: END
// on UnitGoesToRed ( un ) do var i , veh ;
35149: LD_INT 0
35151: PPUSH
35152: PPUSH
// begin if GetSide ( un ) = 1 and GetControl ( un ) = control_remote then
35153: LD_VAR 0 1
35157: PPUSH
35158: CALL_OW 255
35162: PUSH
35163: LD_INT 1
35165: EQUAL
35166: PUSH
35167: LD_VAR 0 1
35171: PPUSH
35172: CALL_OW 263
35176: PUSH
35177: LD_INT 2
35179: EQUAL
35180: AND
35181: IFFALSE 35192
// ComUnlink ( un ) ;
35183: LD_VAR 0 1
35187: PPUSH
35188: CALL_OW 136
// if un = ambar0 then
35192: LD_VAR 0 1
35196: PUSH
35197: LD_INT 18
35199: EQUAL
35200: IFFALSE 35310
// begin uc_side := 1 ;
35202: LD_ADDR_OWVAR 20
35206: PUSH
35207: LD_INT 1
35209: ST_TO_ADDR
// uc_nation := 1 ;
35210: LD_ADDR_OWVAR 21
35214: PUSH
35215: LD_INT 1
35217: ST_TO_ADDR
// for i = 1 to 6 do
35218: LD_ADDR_VAR 0 2
35222: PUSH
35223: DOUBLE
35224: LD_INT 1
35226: DEC
35227: ST_TO_ADDR
35228: LD_INT 6
35230: PUSH
35231: FOR_TO
35232: IFFALSE 35308
// begin PrepareVehicle ( us_medium_tracked , engine_combustion , control_computer , us_gatling_gun , 100 ) ;
35234: LD_INT 3
35236: PPUSH
35237: LD_INT 1
35239: PPUSH
35240: LD_INT 3
35242: PPUSH
35243: LD_INT 4
35245: PPUSH
35246: LD_INT 100
35248: PPUSH
35249: CALL 5698 0 5
// veh := CreateVehicle ;
35253: LD_ADDR_VAR 0 3
35257: PUSH
35258: CALL_OW 45
35262: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
35263: LD_VAR 0 3
35267: PPUSH
35268: LD_INT 1
35270: PPUSH
35271: CALL_OW 233
// PlaceUnitArea ( veh , west_spawn , false ) ;
35275: LD_VAR 0 3
35279: PPUSH
35280: LD_INT 25
35282: PPUSH
35283: LD_INT 0
35285: PPUSH
35286: CALL_OW 49
// defenders := defenders ^ veh ;
35290: LD_ADDR_EXP 18
35294: PUSH
35295: LD_EXP 18
35299: PUSH
35300: LD_VAR 0 3
35304: ADD
35305: ST_TO_ADDR
// end ;
35306: GO 35231
35308: POP
35309: POP
// end ; end ;
35310: PPOPN 3
35312: END
// on EnterBuilding ( building , unit ) do begin if unit = Powell then
35313: LD_VAR 0 2
35317: PUSH
35318: LD_EXP 14
35322: EQUAL
35323: IFFALSE 35334
// RemoveUnit ( Powell ) ;
35325: LD_EXP 14
35329: PPUSH
35330: CALL_OW 64
// end ;
35334: PPOPN 2
35336: END
