Export Schulz, Kozlov;
Export Function PrepareLegion;
var i, side, un, tmp;
begin
side := 8;

uc_side := side;
uc_nation := 2;

for i in FilterAllUnits([[f_side, side], [f_type, unit_building]]) do
    SetBLevel(i, 10);

Schulz := PrepareUnit('Schulz', false, '');
// PlaceHumanInUnit(Schulz, ar_depot1);

Kozlov := PrepareUnit('Kozlov', false, '');
PlaceHumanInUnit(Kozlov, FilterAllUnits([[f_side, 8], [f_nation, 3], [f_btype, b_lab_full]])[1]);
SetSkill(Kozlov, class_mechanic, 10);

tmp := FilterAllUnits([[f_side, side], [f_btype, b_bunker], [f_empty]]);

for i = 1 to 10 do
    begin
    uc_nation := nation_nature;
    hc_class := class_apeman_soldier;
    hc_gallery := '';
    hc_name := '';

    un := CreateHuman;
    PlaceHumanInUnit(un, tmp[tmp-i]);
    end;

// PrepareBase(base_dep, area, name, skill, sources, personel);
PrepareBase(ar_depot1, legionBaseArea, '', [8, 9, 10][Difficulty], [3000, 500, 150], [16, 6, 6, 8]);

mc_bases := Replace(mc_bases, 3, FilterAllUnits([[f_side, side], [f_nation, 2], [f_not, [f_type, unit_vehicle]]]) diff Schulz);
End;

Export Function BuildKozlovBomb;
begin
if not IsOk(kozlov_fac) or not IsOk(kozlov_lab) then
   exit;

ComChangeProfession(Kozlov, 4);
ComResearch(kozlov_lab, tech_sibFiss);

repeat
 wait(0$1);
until GetTech(tech_sibFiss, 8) = state_researched;

ComExitBuilding(Kozlov);
AddComEnterUnit(Kozlov, kozlov_fac);
AddComChangeProfession(Kozlov, 3);

ComConstruct(kozlov_fac, ru_heavy_wheeled, engine_siberite, control_manual, ru_siberium_rocket);
End;


// Legion attacks
Every 11$30 trigger not legionDestroyed and not MC_GetVehicles(3, true) do
var i, tmp, target;
begin
enable;

if not FilterAllUnits([[f_side, 8], [f_nation, 2], [f_btype, b_factory]]) then
   exit;

if Prob(40) then
   begin
   MC_InsertProduceList(3, [
      [ar_half_tracked, engine_combustion, control_remote, ar_rocket_launcher],
      [ar_half_tracked, engine_combustion, control_remote, ar_rocket_launcher],
      [ar_half_tracked, engine_combustion, control_remote, ar_rocket_launcher],
      [ar_half_tracked, engine_combustion, control_remote, ar_rocket_launcher],
      [ar_half_tracked, engine_combustion, control_remote, ar_rocket_launcher],
      [ar_half_tracked, engine_combustion, control_remote, ar_flame_thrower],
   ]);
   end
else
   begin
   MC_InsertProduceList(3, [
      [ar_half_tracked, engine_combustion, control_remote, [ar_gun, ar_flame_thrower, ar_flame_thrower][Difficulty]],
      [ar_half_tracked, engine_combustion, control_remote, [ar_gun, ar_flame_thrower, ar_flame_thrower][Difficulty]],
      [ar_half_tracked, engine_combustion, control_remote, [ar_flame_thrower, ar_flame_thrower, ar_selfpropelled_bomb][Difficulty]],
      [ar_medium_trike, engine_combustion, control_remote, [ar_flame_thrower, ar_selfpropelled_bomb, ar_selfpropelled_bomb][Difficulty]],
      [ar_medium_trike, engine_combustion, control_remote, ar_selfpropelled_bomb],
      [ar_half_tracked, engine_combustion, control_remote, ar_flame_thrower],
   ]);
   end;

repeat
 wait(0$1);
until MC_GetVehicles(3, true) >= 6;

wait(0$30);

tmp := MC_GetVehicles(3, true);
mc_vehicles := Replace(mc_vehicles, 3, mc_vehicles[3] diff tmp);

target := rand(0, 2);

if target then
   begin
   repeat
    tmp := UnitFilter(tmp, [f_lives, 250]);

    for i in tmp do
        if GetDistUnitXY(i, 89, 71) > 9 then
           ComMoveXY(i, 89, 71);

    wait(0$1);
   until UnitFilter(tmp, [f_distxy, 89, 71, 9]) >= (tmp-1);
   end
else
   begin
   repeat
    tmp := UnitFilter(tmp, [f_lives, 250]);

    for i in tmp do
        if GetDistUnitXY(i, 147, 4) > 9 then
           ComMoveXY(i, 147, 4);

    wait(0$1);
   until UnitFilter(tmp, [f_distxy, 147, 4, 9]) >= (tmp-1);
   end;

repeat
 wait(0$1);

 for i in tmp do
     begin
     if GetLives(i) > 251 then
        ComAttackUnit(i, NearestUnitToUnit(FilterAllUnits([f_enemy, 8]), i))
     else
      if IsDead(i) then
         tmp := tmp diff i;
     end;
until not tmp;
End;

// Legion build bomb
Every 0$1 trigger IsOk(Kozlov) and not legionDestroyed do
BuildKozlovBomb;

// Send bomb on motherlode
Every 0$3 trigger FilterAllUnits([[f_side, 8], [f_weapon, ru_siberium_rocket]]) do
begin
ComAttackPlace(FilterAllUnits([[f_side, 8], [f_weapon, ru_siberium_rocket]])[1], 173, 96);
End;