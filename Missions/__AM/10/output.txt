// export JMM , Powell ; export Brown , Donaldson , Bobby , Cyrus , Lisa , Frank , Houten , Gary ; export others08 ; export convoy , prepConv ; export coreHeroesTab , addHeroesTab ; export selectedToMission ; export siberite ; starting begin Resetfog ;
   0: CALL_OW 335
// SetBName ( Am_dep , alpha ) ;
   4: LD_INT 5
   6: PPUSH
   7: LD_STRING alpha
   9: PPUSH
  10: CALL_OW 500
// convoy := [ ] ;
  14: LD_ADDR_EXP 12
  18: PUSH
  19: EMPTY
  20: ST_TO_ADDR
// coreHeroesTab := [ ] ;
  21: LD_ADDR_EXP 14
  25: PUSH
  26: EMPTY
  27: ST_TO_ADDR
// addHeroesTab := [ ] ;
  28: LD_ADDR_EXP 15
  32: PUSH
  33: EMPTY
  34: ST_TO_ADDR
// selectedToMission := [ ] ;
  35: LD_ADDR_EXP 16
  39: PUSH
  40: EMPTY
  41: ST_TO_ADDR
// PrepareHeroes ;
  42: CALL 954 0 0
// Action ;
  46: CALL 51 0 0
// end ; end_of_file
  50: END
// export function Action ; var others ; begin
  51: LD_INT 0
  53: PPUSH
  54: PPUSH
// Video ( true ) ;
  55: LD_INT 1
  57: PPUSH
  58: CALL 5500 0 1
// AddComConstruct ( Am_tov1 , 2 , 1 , 1 , 4 ) ;
  62: LD_INT 60
  64: PPUSH
  65: LD_INT 2
  67: PPUSH
  68: LD_INT 1
  70: PPUSH
  71: LD_INT 1
  73: PPUSH
  74: LD_INT 4
  76: PPUSH
  77: CALL_OW 185
// AddComConstruct ( Am_tov2 , 4 , 1 , 1 , 6 ) ;
  81: LD_INT 6
  83: PPUSH
  84: LD_INT 4
  86: PPUSH
  87: LD_INT 1
  89: PPUSH
  90: LD_INT 1
  92: PPUSH
  93: LD_INT 6
  95: PPUSH
  96: CALL_OW 185
// AddComConstruct ( Am_tov1 , 2 , 1 , 1 , 3 ) ;
 100: LD_INT 60
 102: PPUSH
 103: LD_INT 2
 105: PPUSH
 106: LD_INT 1
 108: PPUSH
 109: LD_INT 1
 111: PPUSH
 112: LD_INT 3
 114: PPUSH
 115: CALL_OW 185
// AddComConstruct ( Am_tov2 , 4 , 1 , 1 , 4 ) ;
 119: LD_INT 6
 121: PPUSH
 122: LD_INT 4
 124: PPUSH
 125: LD_INT 1
 127: PPUSH
 128: LD_INT 1
 130: PPUSH
 131: LD_INT 4
 133: PPUSH
 134: CALL_OW 185
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap1 ) ;
 138: LD_INT 47
 140: PUSH
 141: LD_INT 4
 143: PUSH
 144: EMPTY
 145: LIST
 146: LIST
 147: PPUSH
 148: LD_INT 51
 150: PPUSH
 151: CALL_OW 184
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap2 ) ;
 155: LD_INT 47
 157: PUSH
 158: LD_INT 4
 160: PUSH
 161: EMPTY
 162: LIST
 163: LIST
 164: PPUSH
 165: LD_INT 52
 167: PPUSH
 168: CALL_OW 184
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap3 ) ;
 172: LD_INT 47
 174: PUSH
 175: LD_INT 4
 177: PUSH
 178: EMPTY
 179: LIST
 180: LIST
 181: PPUSH
 182: LD_INT 53
 184: PPUSH
 185: CALL_OW 184
// CenterNowOnUnits ( car ) ;
 189: LD_INT 138
 191: PPUSH
 192: CALL_OW 87
// ComMoveXY ( car , 69 , 36 ) ;
 196: LD_INT 138
 198: PPUSH
 199: LD_INT 69
 201: PPUSH
 202: LD_INT 36
 204: PPUSH
 205: CALL_OW 111
// AddComMoveXY ( car , 65 , 43 ) ;
 209: LD_INT 138
 211: PPUSH
 212: LD_INT 65
 214: PPUSH
 215: LD_INT 43
 217: PPUSH
 218: CALL_OW 171
// AddComMoveXY ( car , 63 , 48 ) ;
 222: LD_INT 138
 224: PPUSH
 225: LD_INT 63
 227: PPUSH
 228: LD_INT 48
 230: PPUSH
 231: CALL_OW 171
// AddComMoveXY ( car , 60 , 50 ) ;
 235: LD_INT 138
 237: PPUSH
 238: LD_INT 60
 240: PPUSH
 241: LD_INT 50
 243: PPUSH
 244: CALL_OW 171
// AddComMoveXY ( car , 54 , 47 ) ;
 248: LD_INT 138
 250: PPUSH
 251: LD_INT 54
 253: PPUSH
 254: LD_INT 47
 256: PPUSH
 257: CALL_OW 171
// AddComMoveXY ( car , 51 , 40 ) ;
 261: LD_INT 138
 263: PPUSH
 264: LD_INT 51
 266: PPUSH
 267: LD_INT 40
 269: PPUSH
 270: CALL_OW 171
// repeat wait ( 0 0$1 ) ;
 274: LD_INT 35
 276: PPUSH
 277: CALL_OW 67
// CenterNowOnUnits ( car ) ;
 281: LD_INT 138
 283: PPUSH
 284: CALL_OW 87
// until IsInArea ( car , stop ) ;
 288: LD_INT 138
 290: PPUSH
 291: LD_INT 7
 293: PPUSH
 294: CALL_OW 308
 298: IFFALSE 274
// ComExitVehicle ( JMM ) ;
 300: LD_EXP 1
 304: PPUSH
 305: CALL_OW 121
// wait ( 0 0$01 ) ;
 309: LD_INT 35
 311: PPUSH
 312: CALL_OW 67
// ComMoveXY ( JMM , 42 , 37 ) ;
 316: LD_EXP 1
 320: PPUSH
 321: LD_INT 42
 323: PPUSH
 324: LD_INT 37
 326: PPUSH
 327: CALL_OW 111
// wait ( 0 0$5 ) ;
 331: LD_INT 175
 333: PPUSH
 334: CALL_OW 67
// ComExitBuilding ( Powell ) ;
 338: LD_EXP 2
 342: PPUSH
 343: CALL_OW 122
// wait ( 0 0$01 ) ;
 347: LD_INT 35
 349: PPUSH
 350: CALL_OW 67
// ComTurnUnit ( Powell , JMM ) ;
 354: LD_EXP 2
 358: PPUSH
 359: LD_EXP 1
 363: PPUSH
 364: CALL_OW 119
// ComTurnUnit ( JMM , Powell ) ;
 368: LD_EXP 1
 372: PPUSH
 373: LD_EXP 2
 377: PPUSH
 378: CALL_OW 119
// Say ( JMM , D1-JMM-1 ) ;
 382: LD_EXP 1
 386: PPUSH
 387: LD_STRING D1-JMM-1
 389: PPUSH
 390: CALL_OW 88
// Say ( Powell , D1-Pow-1 ) ;
 394: LD_EXP 2
 398: PPUSH
 399: LD_STRING D1-Pow-1
 401: PPUSH
 402: CALL_OW 88
// Say ( JMM , D1-JMM-2 ) ;
 406: LD_EXP 1
 410: PPUSH
 411: LD_STRING D1-JMM-2
 413: PPUSH
 414: CALL_OW 88
// Say ( Powell , D1-Pow-2 ) ;
 418: LD_EXP 2
 422: PPUSH
 423: LD_STRING D1-Pow-2
 425: PPUSH
 426: CALL_OW 88
// Say ( JMM , D1-JMM-3 ) ;
 430: LD_EXP 1
 434: PPUSH
 435: LD_STRING D1-JMM-3
 437: PPUSH
 438: CALL_OW 88
// Say ( Powell , D1-Pow-3 ) ;
 442: LD_EXP 2
 446: PPUSH
 447: LD_STRING D1-Pow-3
 449: PPUSH
 450: CALL_OW 88
// Say ( JMM , D1-JMM-4 ) ;
 454: LD_EXP 1
 458: PPUSH
 459: LD_STRING D1-JMM-4
 461: PPUSH
 462: CALL_OW 88
// PrepareConvoy ;
 466: CALL 5224 0 0
// Say ( Powell , D1-Pow-4 ) ;
 470: LD_EXP 2
 474: PPUSH
 475: LD_STRING D1-Pow-4
 477: PPUSH
 478: CALL_OW 88
// if PrepareUnit ( 08_Joan , true ) then
 482: LD_STRING 08_Joan
 484: PPUSH
 485: LD_INT 1
 487: PPUSH
 488: CALL 5443 0 2
 492: IFFALSE 506
// Say ( Powell , D1-Pow-4a ) ;
 494: LD_EXP 2
 498: PPUSH
 499: LD_STRING D1-Pow-4a
 501: PPUSH
 502: CALL_OW 88
// Say ( Powell , D1-Pow-4b ) ;
 506: LD_EXP 2
 510: PPUSH
 511: LD_STRING D1-Pow-4b
 513: PPUSH
 514: CALL_OW 88
// AddComGive ( convoy , Am_dep ) ;
 518: LD_EXP 12
 522: PPUSH
 523: LD_INT 5
 525: PPUSH
 526: CALL_OW 221
// AddComMoveXY ( convoy , 81 , 77 ) ;
 530: LD_EXP 12
 534: PPUSH
 535: LD_INT 81
 537: PPUSH
 538: LD_INT 77
 540: PPUSH
 541: CALL_OW 171
// Say ( JMM , D1-JMM-5 ) ;
 545: LD_EXP 1
 549: PPUSH
 550: LD_STRING D1-JMM-5
 552: PPUSH
 553: CALL_OW 88
// Say ( Powell , D1-Pow-5 ) ;
 557: LD_EXP 2
 561: PPUSH
 562: LD_STRING D1-Pow-5
 564: PPUSH
 565: CALL_OW 88
// Say ( JMM , D1-JMM-6 ) ;
 569: LD_EXP 1
 573: PPUSH
 574: LD_STRING D1-JMM-6
 576: PPUSH
 577: CALL_OW 88
// Say ( Powell , D1-Pow-6 ) ;
 581: LD_EXP 2
 585: PPUSH
 586: LD_STRING D1-Pow-6
 588: PPUSH
 589: CALL_OW 88
// Say ( JMM , D1-JMM-7 ) ;
 593: LD_EXP 1
 597: PPUSH
 598: LD_STRING D1-JMM-7
 600: PPUSH
 601: CALL_OW 88
// Say ( Powell , D1-Pow-7 ) ;
 605: LD_EXP 2
 609: PPUSH
 610: LD_STRING D1-Pow-7
 612: PPUSH
 613: CALL_OW 88
// Say ( JMM , D1-JMM-8 ) ;
 617: LD_EXP 1
 621: PPUSH
 622: LD_STRING D1-JMM-8
 624: PPUSH
 625: CALL_OW 88
// ComMoveXY ( JMM , 47 , 48 ) ;
 629: LD_EXP 1
 633: PPUSH
 634: LD_INT 47
 636: PPUSH
 637: LD_INT 48
 639: PPUSH
 640: CALL_OW 111
// ComEnterUnit ( Powell , Am_bar ) ;
 644: LD_EXP 2
 648: PPUSH
 649: LD_INT 58
 651: PPUSH
 652: CALL_OW 120
// wait ( 0 0$3 ) ;
 656: LD_INT 105
 658: PPUSH
 659: CALL_OW 67
// others := FilterUnitsInArea ( CoreHeroes , [ [ f_side , 1 ] , [ f_type , unit_human ] ] ) ;
 663: LD_ADDR_VAR 0 2
 667: PUSH
 668: LD_INT 10
 670: PPUSH
 671: LD_INT 22
 673: PUSH
 674: LD_INT 1
 676: PUSH
 677: EMPTY
 678: LIST
 679: LIST
 680: PUSH
 681: LD_INT 21
 683: PUSH
 684: LD_INT 1
 686: PUSH
 687: EMPTY
 688: LIST
 689: LIST
 690: PUSH
 691: EMPTY
 692: LIST
 693: LIST
 694: PPUSH
 695: CALL_OW 70
 699: ST_TO_ADDR
// others := others ^ FilterUnitsInArea ( AddHeroes , [ [ f_side , 1 ] , [ f_type , unit_human ] ] ) ;
 700: LD_ADDR_VAR 0 2
 704: PUSH
 705: LD_VAR 0 2
 709: PUSH
 710: LD_INT 11
 712: PPUSH
 713: LD_INT 22
 715: PUSH
 716: LD_INT 1
 718: PUSH
 719: EMPTY
 720: LIST
 721: LIST
 722: PUSH
 723: LD_INT 21
 725: PUSH
 726: LD_INT 1
 728: PUSH
 729: EMPTY
 730: LIST
 731: LIST
 732: PUSH
 733: EMPTY
 734: LIST
 735: LIST
 736: PPUSH
 737: CALL_OW 70
 741: ADD
 742: ST_TO_ADDR
// others := others diff [ JMM , Powell , Brown , Donaldson , Bobby , Cyrus , Lisa , Frank , Houten , Gary ] ;
 743: LD_ADDR_VAR 0 2
 747: PUSH
 748: LD_VAR 0 2
 752: PUSH
 753: LD_EXP 1
 757: PUSH
 758: LD_EXP 2
 762: PUSH
 763: LD_EXP 3
 767: PUSH
 768: LD_EXP 4
 772: PUSH
 773: LD_EXP 5
 777: PUSH
 778: LD_EXP 6
 782: PUSH
 783: LD_EXP 7
 787: PUSH
 788: LD_EXP 8
 792: PUSH
 793: LD_EXP 9
 797: PUSH
 798: LD_EXP 10
 802: PUSH
 803: EMPTY
 804: LIST
 805: LIST
 806: LIST
 807: LIST
 808: LIST
 809: LIST
 810: LIST
 811: LIST
 812: LIST
 813: LIST
 814: DIFF
 815: ST_TO_ADDR
// SaveCharacters ( JMM , 10_JMM ) ;
 816: LD_EXP 1
 820: PPUSH
 821: LD_STRING 10_JMM
 823: PPUSH
 824: CALL_OW 38
// SaveCharacters ( others , OthersIn10 ) ;
 828: LD_VAR 0 2
 832: PPUSH
 833: LD_STRING OthersIn10
 835: PPUSH
 836: CALL_OW 38
// SaveCharacters ( others08 , 10_lock ) ;
 840: LD_EXP 11
 844: PPUSH
 845: LD_STRING 10_lock
 847: PPUSH
 848: CALL_OW 38
// DeleteCharacters ( 08_others ) ;
 852: LD_STRING 08_others
 854: PPUSH
 855: CALL_OW 40
// SaveCharacters ( others , 08_others ) ;
 859: LD_VAR 0 2
 863: PPUSH
 864: LD_STRING 08_others
 866: PPUSH
 867: CALL_OW 38
// ChangeMap ( 10 , %_cont ) ;
 871: LD_INT 10
 873: PPUSH
 874: LD_STRING %_cont
 876: PPUSH
 877: CALL_OW 340
// end ;
 881: LD_VAR 0 1
 885: RET
// every 0 0$1 trigger FilterUnitsInArea ( removeCar , [ f_side , 1 ] ) do var i ;
 886: LD_INT 12
 888: PPUSH
 889: LD_INT 22
 891: PUSH
 892: LD_INT 1
 894: PUSH
 895: EMPTY
 896: LIST
 897: LIST
 898: PPUSH
 899: CALL_OW 70
 903: IFFALSE 951
 905: GO 907
 907: DISABLE
 908: LD_INT 0
 910: PPUSH
// begin enable ;
 911: ENABLE
// for i in FilterUnitsInArea ( removeCar , [ f_side , 1 ] ) do
 912: LD_ADDR_VAR 0 1
 916: PUSH
 917: LD_INT 12
 919: PPUSH
 920: LD_INT 22
 922: PUSH
 923: LD_INT 1
 925: PUSH
 926: EMPTY
 927: LIST
 928: LIST
 929: PPUSH
 930: CALL_OW 70
 934: PUSH
 935: FOR_IN
 936: IFFALSE 949
// RemoveUnit ( i ) ;
 938: LD_VAR 0 1
 942: PPUSH
 943: CALL_OW 64
 947: GO 935
 949: POP
 950: POP
// end ; end_of_file
 951: PPOPN 1
 953: END
// export function PrepareHeroes ; var i , un ; begin
 954: LD_INT 0
 956: PPUSH
 957: PPUSH
 958: PPUSH
// uc_side := 1 ;
 959: LD_ADDR_OWVAR 20
 963: PUSH
 964: LD_INT 1
 966: ST_TO_ADDR
// uc_nation := 1 ;
 967: LD_ADDR_OWVAR 21
 971: PUSH
 972: LD_INT 1
 974: ST_TO_ADDR
// JMM := PrepareUnit ( 09_JMM , true ) ;
 975: LD_ADDR_EXP 1
 979: PUSH
 980: LD_STRING 09_JMM
 982: PPUSH
 983: LD_INT 1
 985: PPUSH
 986: CALL 5443 0 2
 990: ST_TO_ADDR
// Powell := PrepareUnit ( Powell , false ) ;
 991: LD_ADDR_EXP 2
 995: PUSH
 996: LD_STRING Powell
 998: PPUSH
 999: LD_INT 0
1001: PPUSH
1002: CALL 5443 0 2
1006: ST_TO_ADDR
// Bobby := PrepareUnit ( 09_Bobby , true ) ;
1007: LD_ADDR_EXP 5
1011: PUSH
1012: LD_STRING 09_Bobby
1014: PPUSH
1015: LD_INT 1
1017: PPUSH
1018: CALL 5443 0 2
1022: ST_TO_ADDR
// PlaceUnitArea ( Bobby , CoreHeroes , false ) ;
1023: LD_EXP 5
1027: PPUSH
1028: LD_INT 10
1030: PPUSH
1031: LD_INT 0
1033: PPUSH
1034: CALL_OW 49
// ComTurnXY ( Bobby , 42 , 35 ) ;
1038: LD_EXP 5
1042: PPUSH
1043: LD_INT 42
1045: PPUSH
1046: LD_INT 35
1048: PPUSH
1049: CALL_OW 118
// if IsPlaced ( Bobby ) then
1053: LD_EXP 5
1057: PPUSH
1058: CALL_OW 305
1062: IFFALSE 1092
// begin coreHeroesTab := coreHeroesTab ^ Bobby ;
1064: LD_ADDR_EXP 14
1068: PUSH
1069: LD_EXP 14
1073: PUSH
1074: LD_EXP 5
1078: ADD
1079: ST_TO_ADDR
// SaveCharacters ( Bobby , 10_Bobby ) ;
1080: LD_EXP 5
1084: PPUSH
1085: LD_STRING 10_Bobby
1087: PPUSH
1088: CALL_OW 38
// end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) then
1092: LD_EXP 5
1096: PPUSH
1097: CALL_OW 305
1101: NOT
1102: PUSH
1103: LD_EXP 3
1107: PPUSH
1108: CALL_OW 305
1112: NOT
1113: AND
1114: IFFALSE 1201
// begin Brown := PrepareUnit ( 08_Brown , true ) ;
1116: LD_ADDR_EXP 3
1120: PUSH
1121: LD_STRING 08_Brown
1123: PPUSH
1124: LD_INT 1
1126: PPUSH
1127: CALL 5443 0 2
1131: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
1132: LD_EXP 3
1136: PPUSH
1137: LD_INT 10
1139: PPUSH
1140: LD_INT 0
1142: PPUSH
1143: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
1147: LD_EXP 3
1151: PPUSH
1152: LD_INT 42
1154: PPUSH
1155: LD_INT 35
1157: PPUSH
1158: CALL_OW 118
// if IsPlaced ( Brown ) then
1162: LD_EXP 3
1166: PPUSH
1167: CALL_OW 305
1171: IFFALSE 1201
// begin coreHeroesTab := coreHeroesTab ^ Brown ;
1173: LD_ADDR_EXP 14
1177: PUSH
1178: LD_EXP 14
1182: PUSH
1183: LD_EXP 3
1187: ADD
1188: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
1189: LD_EXP 3
1193: PPUSH
1194: LD_STRING 10_Brown
1196: PPUSH
1197: CALL_OW 38
// end ; end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
1201: LD_EXP 5
1205: PPUSH
1206: CALL_OW 305
1210: NOT
1211: PUSH
1212: LD_EXP 3
1216: PPUSH
1217: CALL_OW 305
1221: NOT
1222: AND
1223: PUSH
1224: LD_EXP 4
1228: PPUSH
1229: CALL_OW 305
1233: NOT
1234: AND
1235: IFFALSE 1322
// begin Donaldson := PrepareUnit ( 08_Donaldson , true ) ;
1237: LD_ADDR_EXP 4
1241: PUSH
1242: LD_STRING 08_Donaldson
1244: PPUSH
1245: LD_INT 1
1247: PPUSH
1248: CALL 5443 0 2
1252: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
1253: LD_EXP 4
1257: PPUSH
1258: LD_INT 10
1260: PPUSH
1261: LD_INT 0
1263: PPUSH
1264: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
1268: LD_EXP 4
1272: PPUSH
1273: LD_INT 42
1275: PPUSH
1276: LD_INT 35
1278: PPUSH
1279: CALL_OW 118
// if IsPlaced ( Donaldson ) then
1283: LD_EXP 4
1287: PPUSH
1288: CALL_OW 305
1292: IFFALSE 1322
// begin coreHeroesTab := coreHeroesTab ^ Donaldson ;
1294: LD_ADDR_EXP 14
1298: PUSH
1299: LD_EXP 14
1303: PUSH
1304: LD_EXP 4
1308: ADD
1309: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
1310: LD_EXP 4
1314: PPUSH
1315: LD_STRING 10_Donaldson
1317: PPUSH
1318: CALL_OW 38
// end ; end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
1322: LD_EXP 5
1326: PPUSH
1327: CALL_OW 305
1331: NOT
1332: PUSH
1333: LD_EXP 3
1337: PPUSH
1338: CALL_OW 305
1342: NOT
1343: AND
1344: PUSH
1345: LD_EXP 4
1349: PPUSH
1350: CALL_OW 305
1354: NOT
1355: AND
1356: PUSH
1357: LD_EXP 8
1361: PPUSH
1362: CALL_OW 305
1366: NOT
1367: AND
1368: IFFALSE 1455
// begin Frank := PrepareUnit ( 08_Frank , true ) ;
1370: LD_ADDR_EXP 8
1374: PUSH
1375: LD_STRING 08_Frank
1377: PPUSH
1378: LD_INT 1
1380: PPUSH
1381: CALL 5443 0 2
1385: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
1386: LD_EXP 8
1390: PPUSH
1391: LD_INT 10
1393: PPUSH
1394: LD_INT 0
1396: PPUSH
1397: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
1401: LD_EXP 8
1405: PPUSH
1406: LD_INT 42
1408: PPUSH
1409: LD_INT 35
1411: PPUSH
1412: CALL_OW 118
// if IsPlaced ( Frank ) then
1416: LD_EXP 8
1420: PPUSH
1421: CALL_OW 305
1425: IFFALSE 1455
// begin coreHeroesTab := coreHeroesTab ^ Frank ;
1427: LD_ADDR_EXP 14
1431: PUSH
1432: LD_EXP 14
1436: PUSH
1437: LD_EXP 8
1441: ADD
1442: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
1443: LD_EXP 8
1447: PPUSH
1448: LD_STRING 10_Frank
1450: PPUSH
1451: CALL_OW 38
// end ; end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
1455: LD_EXP 5
1459: PPUSH
1460: CALL_OW 305
1464: NOT
1465: PUSH
1466: LD_EXP 3
1470: PPUSH
1471: CALL_OW 305
1475: NOT
1476: AND
1477: PUSH
1478: LD_EXP 4
1482: PPUSH
1483: CALL_OW 305
1487: NOT
1488: AND
1489: PUSH
1490: LD_EXP 8
1494: PPUSH
1495: CALL_OW 305
1499: NOT
1500: AND
1501: PUSH
1502: LD_EXP 9
1506: PPUSH
1507: CALL_OW 305
1511: NOT
1512: AND
1513: IFFALSE 1600
// begin Houten := PrepareUnit ( 09_Houten , true ) ;
1515: LD_ADDR_EXP 9
1519: PUSH
1520: LD_STRING 09_Houten
1522: PPUSH
1523: LD_INT 1
1525: PPUSH
1526: CALL 5443 0 2
1530: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
1531: LD_EXP 9
1535: PPUSH
1536: LD_INT 10
1538: PPUSH
1539: LD_INT 0
1541: PPUSH
1542: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
1546: LD_EXP 9
1550: PPUSH
1551: LD_INT 42
1553: PPUSH
1554: LD_INT 35
1556: PPUSH
1557: CALL_OW 118
// if IsPlaced ( Houten ) then
1561: LD_EXP 9
1565: PPUSH
1566: CALL_OW 305
1570: IFFALSE 1600
// begin coreHeroesTab := coreHeroesTab ^ Houten ;
1572: LD_ADDR_EXP 14
1576: PUSH
1577: LD_EXP 14
1581: PUSH
1582: LD_EXP 9
1586: ADD
1587: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
1588: LD_EXP 9
1592: PPUSH
1593: LD_STRING 10_Houten
1595: PPUSH
1596: CALL_OW 38
// end ; end ; Cyrus := PrepareUnit ( 09_Cyrus , true ) ;
1600: LD_ADDR_EXP 6
1604: PUSH
1605: LD_STRING 09_Cyrus
1607: PPUSH
1608: LD_INT 1
1610: PPUSH
1611: CALL 5443 0 2
1615: ST_TO_ADDR
// PlaceUnitArea ( Cyrus , CoreHeroes , false ) ;
1616: LD_EXP 6
1620: PPUSH
1621: LD_INT 10
1623: PPUSH
1624: LD_INT 0
1626: PPUSH
1627: CALL_OW 49
// ComTurnXY ( Cyrus , 42 , 35 ) ;
1631: LD_EXP 6
1635: PPUSH
1636: LD_INT 42
1638: PPUSH
1639: LD_INT 35
1641: PPUSH
1642: CALL_OW 118
// if IsPlaced ( Cyrus ) then
1646: LD_EXP 6
1650: PPUSH
1651: CALL_OW 305
1655: IFFALSE 1685
// begin coreHeroesTab := coreHeroesTab ^ Cyrus ;
1657: LD_ADDR_EXP 14
1661: PUSH
1662: LD_EXP 14
1666: PUSH
1667: LD_EXP 6
1671: ADD
1672: ST_TO_ADDR
// SaveCharacters ( Cyrus , 10_Cyrus ) ;
1673: LD_EXP 6
1677: PPUSH
1678: LD_STRING 10_Cyrus
1680: PPUSH
1681: CALL_OW 38
// end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) then
1685: LD_EXP 6
1689: PPUSH
1690: CALL_OW 305
1694: NOT
1695: PUSH
1696: LD_EXP 3
1700: PPUSH
1701: CALL_OW 305
1705: NOT
1706: AND
1707: IFFALSE 1794
// begin Brown := PrepareUnit ( 08_Brown , true ) ;
1709: LD_ADDR_EXP 3
1713: PUSH
1714: LD_STRING 08_Brown
1716: PPUSH
1717: LD_INT 1
1719: PPUSH
1720: CALL 5443 0 2
1724: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
1725: LD_EXP 3
1729: PPUSH
1730: LD_INT 10
1732: PPUSH
1733: LD_INT 0
1735: PPUSH
1736: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
1740: LD_EXP 3
1744: PPUSH
1745: LD_INT 42
1747: PPUSH
1748: LD_INT 35
1750: PPUSH
1751: CALL_OW 118
// if IsPlaced ( Brown ) then
1755: LD_EXP 3
1759: PPUSH
1760: CALL_OW 305
1764: IFFALSE 1794
// begin coreHeroesTab := coreHeroesTab ^ Brown ;
1766: LD_ADDR_EXP 14
1770: PUSH
1771: LD_EXP 14
1775: PUSH
1776: LD_EXP 3
1780: ADD
1781: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
1782: LD_EXP 3
1786: PPUSH
1787: LD_STRING 10_Brown
1789: PPUSH
1790: CALL_OW 38
// end ; end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
1794: LD_EXP 6
1798: PPUSH
1799: CALL_OW 305
1803: NOT
1804: PUSH
1805: LD_EXP 3
1809: PPUSH
1810: CALL_OW 305
1814: NOT
1815: AND
1816: PUSH
1817: LD_EXP 4
1821: PPUSH
1822: CALL_OW 305
1826: NOT
1827: AND
1828: IFFALSE 1915
// begin Donaldson := PrepareUnit ( 08_Donaldson , true ) ;
1830: LD_ADDR_EXP 4
1834: PUSH
1835: LD_STRING 08_Donaldson
1837: PPUSH
1838: LD_INT 1
1840: PPUSH
1841: CALL 5443 0 2
1845: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
1846: LD_EXP 4
1850: PPUSH
1851: LD_INT 10
1853: PPUSH
1854: LD_INT 0
1856: PPUSH
1857: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
1861: LD_EXP 4
1865: PPUSH
1866: LD_INT 42
1868: PPUSH
1869: LD_INT 35
1871: PPUSH
1872: CALL_OW 118
// if IsPlaced ( Donaldson ) then
1876: LD_EXP 4
1880: PPUSH
1881: CALL_OW 305
1885: IFFALSE 1915
// begin coreHeroesTab := coreHeroesTab ^ Donaldson ;
1887: LD_ADDR_EXP 14
1891: PUSH
1892: LD_EXP 14
1896: PUSH
1897: LD_EXP 4
1901: ADD
1902: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
1903: LD_EXP 4
1907: PPUSH
1908: LD_STRING 10_Donaldson
1910: PPUSH
1911: CALL_OW 38
// end ; end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
1915: LD_EXP 6
1919: PPUSH
1920: CALL_OW 305
1924: NOT
1925: PUSH
1926: LD_EXP 3
1930: PPUSH
1931: CALL_OW 305
1935: NOT
1936: AND
1937: PUSH
1938: LD_EXP 4
1942: PPUSH
1943: CALL_OW 305
1947: NOT
1948: AND
1949: PUSH
1950: LD_EXP 8
1954: PPUSH
1955: CALL_OW 305
1959: NOT
1960: AND
1961: IFFALSE 2048
// begin Frank := PrepareUnit ( 08_Frank , true ) ;
1963: LD_ADDR_EXP 8
1967: PUSH
1968: LD_STRING 08_Frank
1970: PPUSH
1971: LD_INT 1
1973: PPUSH
1974: CALL 5443 0 2
1978: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
1979: LD_EXP 8
1983: PPUSH
1984: LD_INT 10
1986: PPUSH
1987: LD_INT 0
1989: PPUSH
1990: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
1994: LD_EXP 8
1998: PPUSH
1999: LD_INT 42
2001: PPUSH
2002: LD_INT 35
2004: PPUSH
2005: CALL_OW 118
// if IsPlaced ( Frank ) then
2009: LD_EXP 8
2013: PPUSH
2014: CALL_OW 305
2018: IFFALSE 2048
// begin coreHeroesTab := coreHeroesTab ^ Frank ;
2020: LD_ADDR_EXP 14
2024: PUSH
2025: LD_EXP 14
2029: PUSH
2030: LD_EXP 8
2034: ADD
2035: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
2036: LD_EXP 8
2040: PPUSH
2041: LD_STRING 10_Frank
2043: PPUSH
2044: CALL_OW 38
// end ; end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
2048: LD_EXP 6
2052: PPUSH
2053: CALL_OW 305
2057: NOT
2058: PUSH
2059: LD_EXP 3
2063: PPUSH
2064: CALL_OW 305
2068: NOT
2069: AND
2070: PUSH
2071: LD_EXP 4
2075: PPUSH
2076: CALL_OW 305
2080: NOT
2081: AND
2082: PUSH
2083: LD_EXP 8
2087: PPUSH
2088: CALL_OW 305
2092: NOT
2093: AND
2094: PUSH
2095: LD_EXP 9
2099: PPUSH
2100: CALL_OW 305
2104: NOT
2105: AND
2106: IFFALSE 2193
// begin Houten := PrepareUnit ( 09_Houten , true ) ;
2108: LD_ADDR_EXP 9
2112: PUSH
2113: LD_STRING 09_Houten
2115: PPUSH
2116: LD_INT 1
2118: PPUSH
2119: CALL 5443 0 2
2123: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
2124: LD_EXP 9
2128: PPUSH
2129: LD_INT 10
2131: PPUSH
2132: LD_INT 0
2134: PPUSH
2135: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
2139: LD_EXP 9
2143: PPUSH
2144: LD_INT 42
2146: PPUSH
2147: LD_INT 35
2149: PPUSH
2150: CALL_OW 118
// if IsPlaced ( Houten ) then
2154: LD_EXP 9
2158: PPUSH
2159: CALL_OW 305
2163: IFFALSE 2193
// begin coreHeroesTab := coreHeroesTab ^ Houten ;
2165: LD_ADDR_EXP 14
2169: PUSH
2170: LD_EXP 14
2174: PUSH
2175: LD_EXP 9
2179: ADD
2180: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
2181: LD_EXP 9
2185: PPUSH
2186: LD_STRING 10_Houten
2188: PPUSH
2189: CALL_OW 38
// end ; end ; Lisa := PrepareUnit ( 08_Lisa , true ) ;
2193: LD_ADDR_EXP 7
2197: PUSH
2198: LD_STRING 08_Lisa
2200: PPUSH
2201: LD_INT 1
2203: PPUSH
2204: CALL 5443 0 2
2208: ST_TO_ADDR
// PlaceUnitArea ( Lisa , CoreHeroes , false ) ;
2209: LD_EXP 7
2213: PPUSH
2214: LD_INT 10
2216: PPUSH
2217: LD_INT 0
2219: PPUSH
2220: CALL_OW 49
// ComTurnXY ( Lisa , 42 , 35 ) ;
2224: LD_EXP 7
2228: PPUSH
2229: LD_INT 42
2231: PPUSH
2232: LD_INT 35
2234: PPUSH
2235: CALL_OW 118
// if IsPlaced ( Lisa ) then
2239: LD_EXP 7
2243: PPUSH
2244: CALL_OW 305
2248: IFFALSE 2278
// begin coreHeroesTab := coreHeroesTab ^ Lisa ;
2250: LD_ADDR_EXP 14
2254: PUSH
2255: LD_EXP 14
2259: PUSH
2260: LD_EXP 7
2264: ADD
2265: ST_TO_ADDR
// SaveCharacters ( Lisa , 10_Lisa ) ;
2266: LD_EXP 7
2270: PPUSH
2271: LD_STRING 10_Lisa
2273: PPUSH
2274: CALL_OW 38
// end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) then
2278: LD_EXP 7
2282: PPUSH
2283: CALL_OW 305
2287: NOT
2288: PUSH
2289: LD_EXP 3
2293: PPUSH
2294: CALL_OW 305
2298: NOT
2299: AND
2300: IFFALSE 2387
// begin Brown := PrepareUnit ( 08_Brown , true ) ;
2302: LD_ADDR_EXP 3
2306: PUSH
2307: LD_STRING 08_Brown
2309: PPUSH
2310: LD_INT 1
2312: PPUSH
2313: CALL 5443 0 2
2317: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
2318: LD_EXP 3
2322: PPUSH
2323: LD_INT 10
2325: PPUSH
2326: LD_INT 0
2328: PPUSH
2329: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
2333: LD_EXP 3
2337: PPUSH
2338: LD_INT 42
2340: PPUSH
2341: LD_INT 35
2343: PPUSH
2344: CALL_OW 118
// if IsPlaced ( Brown ) then
2348: LD_EXP 3
2352: PPUSH
2353: CALL_OW 305
2357: IFFALSE 2387
// begin coreHeroesTab := coreHeroesTab ^ Brown ;
2359: LD_ADDR_EXP 14
2363: PUSH
2364: LD_EXP 14
2368: PUSH
2369: LD_EXP 3
2373: ADD
2374: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
2375: LD_EXP 3
2379: PPUSH
2380: LD_STRING 10_Brown
2382: PPUSH
2383: CALL_OW 38
// end ; end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
2387: LD_EXP 7
2391: PPUSH
2392: CALL_OW 305
2396: NOT
2397: PUSH
2398: LD_EXP 3
2402: PPUSH
2403: CALL_OW 305
2407: NOT
2408: AND
2409: PUSH
2410: LD_EXP 4
2414: PPUSH
2415: CALL_OW 305
2419: NOT
2420: AND
2421: IFFALSE 2508
// begin Donaldson := PrepareUnit ( 08_Donaldson , true ) ;
2423: LD_ADDR_EXP 4
2427: PUSH
2428: LD_STRING 08_Donaldson
2430: PPUSH
2431: LD_INT 1
2433: PPUSH
2434: CALL 5443 0 2
2438: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
2439: LD_EXP 4
2443: PPUSH
2444: LD_INT 10
2446: PPUSH
2447: LD_INT 0
2449: PPUSH
2450: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
2454: LD_EXP 4
2458: PPUSH
2459: LD_INT 42
2461: PPUSH
2462: LD_INT 35
2464: PPUSH
2465: CALL_OW 118
// if IsPlaced ( Donaldson ) then
2469: LD_EXP 4
2473: PPUSH
2474: CALL_OW 305
2478: IFFALSE 2508
// begin coreHeroesTab := coreHeroesTab ^ Donaldson ;
2480: LD_ADDR_EXP 14
2484: PUSH
2485: LD_EXP 14
2489: PUSH
2490: LD_EXP 4
2494: ADD
2495: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
2496: LD_EXP 4
2500: PPUSH
2501: LD_STRING 10_Donaldson
2503: PPUSH
2504: CALL_OW 38
// end ; end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
2508: LD_EXP 7
2512: PPUSH
2513: CALL_OW 305
2517: NOT
2518: PUSH
2519: LD_EXP 3
2523: PPUSH
2524: CALL_OW 305
2528: NOT
2529: AND
2530: PUSH
2531: LD_EXP 4
2535: PPUSH
2536: CALL_OW 305
2540: NOT
2541: AND
2542: PUSH
2543: LD_EXP 8
2547: PPUSH
2548: CALL_OW 305
2552: NOT
2553: AND
2554: IFFALSE 2641
// begin Frank := PrepareUnit ( 08_Frank , true ) ;
2556: LD_ADDR_EXP 8
2560: PUSH
2561: LD_STRING 08_Frank
2563: PPUSH
2564: LD_INT 1
2566: PPUSH
2567: CALL 5443 0 2
2571: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
2572: LD_EXP 8
2576: PPUSH
2577: LD_INT 10
2579: PPUSH
2580: LD_INT 0
2582: PPUSH
2583: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
2587: LD_EXP 8
2591: PPUSH
2592: LD_INT 42
2594: PPUSH
2595: LD_INT 35
2597: PPUSH
2598: CALL_OW 118
// if IsPlaced ( Frank ) then
2602: LD_EXP 8
2606: PPUSH
2607: CALL_OW 305
2611: IFFALSE 2641
// begin coreHeroesTab := coreHeroesTab ^ Frank ;
2613: LD_ADDR_EXP 14
2617: PUSH
2618: LD_EXP 14
2622: PUSH
2623: LD_EXP 8
2627: ADD
2628: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
2629: LD_EXP 8
2633: PPUSH
2634: LD_STRING 10_Frank
2636: PPUSH
2637: CALL_OW 38
// end ; end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
2641: LD_EXP 7
2645: PPUSH
2646: CALL_OW 305
2650: NOT
2651: PUSH
2652: LD_EXP 3
2656: PPUSH
2657: CALL_OW 305
2661: NOT
2662: AND
2663: PUSH
2664: LD_EXP 4
2668: PPUSH
2669: CALL_OW 305
2673: NOT
2674: AND
2675: PUSH
2676: LD_EXP 8
2680: PPUSH
2681: CALL_OW 305
2685: NOT
2686: AND
2687: PUSH
2688: LD_EXP 9
2692: PPUSH
2693: CALL_OW 305
2697: NOT
2698: AND
2699: IFFALSE 2786
// begin Houten := PrepareUnit ( 09_Houten , true ) ;
2701: LD_ADDR_EXP 9
2705: PUSH
2706: LD_STRING 09_Houten
2708: PPUSH
2709: LD_INT 1
2711: PPUSH
2712: CALL 5443 0 2
2716: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
2717: LD_EXP 9
2721: PPUSH
2722: LD_INT 10
2724: PPUSH
2725: LD_INT 0
2727: PPUSH
2728: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
2732: LD_EXP 9
2736: PPUSH
2737: LD_INT 42
2739: PPUSH
2740: LD_INT 35
2742: PPUSH
2743: CALL_OW 118
// if IsPlaced ( Houten ) then
2747: LD_EXP 9
2751: PPUSH
2752: CALL_OW 305
2756: IFFALSE 2786
// begin coreHeroesTab := coreHeroesTab ^ Houten ;
2758: LD_ADDR_EXP 14
2762: PUSH
2763: LD_EXP 14
2767: PUSH
2768: LD_EXP 9
2772: ADD
2773: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
2774: LD_EXP 9
2778: PPUSH
2779: LD_STRING 10_Houten
2781: PPUSH
2782: CALL_OW 38
// end ; end ; Gary := PrepareUnit ( 09_Gary , true ) ;
2786: LD_ADDR_EXP 10
2790: PUSH
2791: LD_STRING 09_Gary
2793: PPUSH
2794: LD_INT 1
2796: PPUSH
2797: CALL 5443 0 2
2801: ST_TO_ADDR
// PlaceUnitArea ( Gary , CoreHeroes , false ) ;
2802: LD_EXP 10
2806: PPUSH
2807: LD_INT 10
2809: PPUSH
2810: LD_INT 0
2812: PPUSH
2813: CALL_OW 49
// ComTurnXY ( Gary , 42 , 35 ) ;
2817: LD_EXP 10
2821: PPUSH
2822: LD_INT 42
2824: PPUSH
2825: LD_INT 35
2827: PPUSH
2828: CALL_OW 118
// if IsPlaced ( Gary ) then
2832: LD_EXP 10
2836: PPUSH
2837: CALL_OW 305
2841: IFFALSE 2871
// begin coreHeroesTab := coreHeroesTab ^ Gary ;
2843: LD_ADDR_EXP 14
2847: PUSH
2848: LD_EXP 14
2852: PUSH
2853: LD_EXP 10
2857: ADD
2858: ST_TO_ADDR
// SaveCharacters ( Gary , 10_Gary ) ;
2859: LD_EXP 10
2863: PPUSH
2864: LD_STRING 10_Gary
2866: PPUSH
2867: CALL_OW 38
// end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) then
2871: LD_EXP 10
2875: PPUSH
2876: CALL_OW 305
2880: NOT
2881: PUSH
2882: LD_EXP 3
2886: PPUSH
2887: CALL_OW 305
2891: NOT
2892: AND
2893: IFFALSE 2980
// begin Brown := PrepareUnit ( 08_Brown , true ) ;
2895: LD_ADDR_EXP 3
2899: PUSH
2900: LD_STRING 08_Brown
2902: PPUSH
2903: LD_INT 1
2905: PPUSH
2906: CALL 5443 0 2
2910: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
2911: LD_EXP 3
2915: PPUSH
2916: LD_INT 10
2918: PPUSH
2919: LD_INT 0
2921: PPUSH
2922: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
2926: LD_EXP 3
2930: PPUSH
2931: LD_INT 42
2933: PPUSH
2934: LD_INT 35
2936: PPUSH
2937: CALL_OW 118
// if IsPlaced ( Brown ) then
2941: LD_EXP 3
2945: PPUSH
2946: CALL_OW 305
2950: IFFALSE 2980
// begin coreHeroesTab := coreHeroesTab ^ Brown ;
2952: LD_ADDR_EXP 14
2956: PUSH
2957: LD_EXP 14
2961: PUSH
2962: LD_EXP 3
2966: ADD
2967: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
2968: LD_EXP 3
2972: PPUSH
2973: LD_STRING 10_Brown
2975: PPUSH
2976: CALL_OW 38
// end ; end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
2980: LD_EXP 10
2984: PPUSH
2985: CALL_OW 305
2989: NOT
2990: PUSH
2991: LD_EXP 3
2995: PPUSH
2996: CALL_OW 305
3000: NOT
3001: AND
3002: PUSH
3003: LD_EXP 4
3007: PPUSH
3008: CALL_OW 305
3012: NOT
3013: AND
3014: IFFALSE 3101
// begin Donaldson := PrepareUnit ( 08_Donaldson , true ) ;
3016: LD_ADDR_EXP 4
3020: PUSH
3021: LD_STRING 08_Donaldson
3023: PPUSH
3024: LD_INT 1
3026: PPUSH
3027: CALL 5443 0 2
3031: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
3032: LD_EXP 4
3036: PPUSH
3037: LD_INT 10
3039: PPUSH
3040: LD_INT 0
3042: PPUSH
3043: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
3047: LD_EXP 4
3051: PPUSH
3052: LD_INT 42
3054: PPUSH
3055: LD_INT 35
3057: PPUSH
3058: CALL_OW 118
// if IsPlaced ( Donaldson ) then
3062: LD_EXP 4
3066: PPUSH
3067: CALL_OW 305
3071: IFFALSE 3101
// begin coreHeroesTab := coreHeroesTab ^ Donaldson ;
3073: LD_ADDR_EXP 14
3077: PUSH
3078: LD_EXP 14
3082: PUSH
3083: LD_EXP 4
3087: ADD
3088: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
3089: LD_EXP 4
3093: PPUSH
3094: LD_STRING 10_Donaldson
3096: PPUSH
3097: CALL_OW 38
// end ; end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
3101: LD_EXP 10
3105: PPUSH
3106: CALL_OW 305
3110: NOT
3111: PUSH
3112: LD_EXP 3
3116: PPUSH
3117: CALL_OW 305
3121: NOT
3122: AND
3123: PUSH
3124: LD_EXP 4
3128: PPUSH
3129: CALL_OW 305
3133: NOT
3134: AND
3135: PUSH
3136: LD_EXP 8
3140: PPUSH
3141: CALL_OW 305
3145: NOT
3146: AND
3147: IFFALSE 3234
// begin Frank := PrepareUnit ( 08_Frank , true ) ;
3149: LD_ADDR_EXP 8
3153: PUSH
3154: LD_STRING 08_Frank
3156: PPUSH
3157: LD_INT 1
3159: PPUSH
3160: CALL 5443 0 2
3164: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
3165: LD_EXP 8
3169: PPUSH
3170: LD_INT 10
3172: PPUSH
3173: LD_INT 0
3175: PPUSH
3176: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
3180: LD_EXP 8
3184: PPUSH
3185: LD_INT 42
3187: PPUSH
3188: LD_INT 35
3190: PPUSH
3191: CALL_OW 118
// if IsPlaced ( Frank ) then
3195: LD_EXP 8
3199: PPUSH
3200: CALL_OW 305
3204: IFFALSE 3234
// begin coreHeroesTab := coreHeroesTab ^ Frank ;
3206: LD_ADDR_EXP 14
3210: PUSH
3211: LD_EXP 14
3215: PUSH
3216: LD_EXP 8
3220: ADD
3221: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
3222: LD_EXP 8
3226: PPUSH
3227: LD_STRING 10_Frank
3229: PPUSH
3230: CALL_OW 38
// end ; end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
3234: LD_EXP 10
3238: PPUSH
3239: CALL_OW 305
3243: NOT
3244: PUSH
3245: LD_EXP 3
3249: PPUSH
3250: CALL_OW 305
3254: NOT
3255: AND
3256: PUSH
3257: LD_EXP 4
3261: PPUSH
3262: CALL_OW 305
3266: NOT
3267: AND
3268: PUSH
3269: LD_EXP 8
3273: PPUSH
3274: CALL_OW 305
3278: NOT
3279: AND
3280: PUSH
3281: LD_EXP 9
3285: PPUSH
3286: CALL_OW 305
3290: NOT
3291: AND
3292: IFFALSE 3379
// begin Houten := PrepareUnit ( 09_Houten , true ) ;
3294: LD_ADDR_EXP 9
3298: PUSH
3299: LD_STRING 09_Houten
3301: PPUSH
3302: LD_INT 1
3304: PPUSH
3305: CALL 5443 0 2
3309: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
3310: LD_EXP 9
3314: PPUSH
3315: LD_INT 10
3317: PPUSH
3318: LD_INT 0
3320: PPUSH
3321: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
3325: LD_EXP 9
3329: PPUSH
3330: LD_INT 42
3332: PPUSH
3333: LD_INT 35
3335: PPUSH
3336: CALL_OW 118
// if IsPlaced ( Houten ) then
3340: LD_EXP 9
3344: PPUSH
3345: CALL_OW 305
3349: IFFALSE 3379
// begin coreHeroesTab := coreHeroesTab ^ Houten ;
3351: LD_ADDR_EXP 14
3355: PUSH
3356: LD_EXP 14
3360: PUSH
3361: LD_EXP 9
3365: ADD
3366: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
3367: LD_EXP 9
3371: PPUSH
3372: LD_STRING 10_Houten
3374: PPUSH
3375: CALL_OW 38
// end ; end ; for i := 1 to 5 - coreHeroesTab do
3379: LD_ADDR_VAR 0 2
3383: PUSH
3384: DOUBLE
3385: LD_INT 1
3387: DEC
3388: ST_TO_ADDR
3389: LD_INT 5
3391: PUSH
3392: LD_EXP 14
3396: MINUS
3397: PUSH
3398: FOR_TO
3399: IFFALSE 3523
// begin hc_gallery =  ;
3401: LD_ADDR_OWVAR 33
3405: PUSH
3406: LD_STRING 
3408: ST_TO_ADDR
// hc_name =  ;
3409: LD_ADDR_OWVAR 26
3413: PUSH
3414: LD_STRING 
3416: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
3417: LD_INT 0
3419: PPUSH
3420: LD_INT 1
3422: PUSH
3423: LD_INT 2
3425: PUSH
3426: LD_INT 3
3428: PUSH
3429: LD_INT 4
3431: PUSH
3432: EMPTY
3433: LIST
3434: LIST
3435: LIST
3436: LIST
3437: PUSH
3438: LD_INT 1
3440: PPUSH
3441: LD_INT 4
3443: PPUSH
3444: CALL_OW 12
3448: ARRAY
3449: PPUSH
3450: LD_INT 4
3452: PPUSH
3453: LD_INT 6
3455: PPUSH
3456: CALL_OW 12
3460: PPUSH
3461: CALL_OW 380
// un := CreateHuman ;
3465: LD_ADDR_VAR 0 3
3469: PUSH
3470: CALL_OW 44
3474: ST_TO_ADDR
// coreHeroesTab := coreHeroesTab ^ un ;
3475: LD_ADDR_EXP 14
3479: PUSH
3480: LD_EXP 14
3484: PUSH
3485: LD_VAR 0 3
3489: ADD
3490: ST_TO_ADDR
// PlaceUnitArea ( un , CoreHeroes , false ) ;
3491: LD_VAR 0 3
3495: PPUSH
3496: LD_INT 10
3498: PPUSH
3499: LD_INT 0
3501: PPUSH
3502: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
3506: LD_VAR 0 3
3510: PPUSH
3511: LD_INT 42
3513: PPUSH
3514: LD_INT 35
3516: PPUSH
3517: CALL_OW 118
// end ;
3521: GO 3398
3523: POP
3524: POP
// siberite := LoadVariable ( 09_SibRes , 0 ) ;
3525: LD_ADDR_EXP 17
3529: PUSH
3530: LD_STRING 09_SibRes
3532: PPUSH
3533: LD_INT 0
3535: PPUSH
3536: CALL_OW 30
3540: ST_TO_ADDR
// if siberite > 500 then
3541: LD_EXP 17
3545: PUSH
3546: LD_INT 500
3548: GREATER
3549: IFFALSE 3559
// siberite := 500 ;
3551: LD_ADDR_EXP 17
3555: PUSH
3556: LD_INT 500
3558: ST_TO_ADDR
// others08 := CreateCharacterSet ( 08_other_survivors ) ;
3559: LD_ADDR_EXP 11
3563: PUSH
3564: LD_STRING 08_other_survivors
3566: PPUSH
3567: CALL_OW 31
3571: ST_TO_ADDR
// if siberite >= 200 then
3572: LD_EXP 17
3576: PUSH
3577: LD_INT 200
3579: GREATEREQUAL
3580: IFFALSE 4623
// begin if not IsPlaced ( Brown ) then
3582: LD_EXP 3
3586: PPUSH
3587: CALL_OW 305
3591: NOT
3592: IFFALSE 3679
// begin Brown := PrepareUnit ( 08_Brown , true ) ;
3594: LD_ADDR_EXP 3
3598: PUSH
3599: LD_STRING 08_Brown
3601: PPUSH
3602: LD_INT 1
3604: PPUSH
3605: CALL 5443 0 2
3609: ST_TO_ADDR
// PlaceUnitArea ( Brown , AddHeroes , false ) ;
3610: LD_EXP 3
3614: PPUSH
3615: LD_INT 11
3617: PPUSH
3618: LD_INT 0
3620: PPUSH
3621: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
3625: LD_EXP 3
3629: PPUSH
3630: LD_INT 42
3632: PPUSH
3633: LD_INT 35
3635: PPUSH
3636: CALL_OW 118
// if IsPlaced ( Brown ) then
3640: LD_EXP 3
3644: PPUSH
3645: CALL_OW 305
3649: IFFALSE 3679
// begin addHeroesTab := addHeroesTab ^ Brown ;
3651: LD_ADDR_EXP 15
3655: PUSH
3656: LD_EXP 15
3660: PUSH
3661: LD_EXP 3
3665: ADD
3666: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
3667: LD_EXP 3
3671: PPUSH
3672: LD_STRING 10_Brown
3674: PPUSH
3675: CALL_OW 38
// end ; end ; if not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
3679: LD_EXP 3
3683: PPUSH
3684: CALL_OW 305
3688: NOT
3689: PUSH
3690: LD_EXP 4
3694: PPUSH
3695: CALL_OW 305
3699: NOT
3700: AND
3701: IFFALSE 3788
// begin Donaldson := PrepareUnit ( 08_Donaldson , true ) ;
3703: LD_ADDR_EXP 4
3707: PUSH
3708: LD_STRING 08_Donaldson
3710: PPUSH
3711: LD_INT 1
3713: PPUSH
3714: CALL 5443 0 2
3718: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , addHeroes , false ) ;
3719: LD_EXP 4
3723: PPUSH
3724: LD_INT 11
3726: PPUSH
3727: LD_INT 0
3729: PPUSH
3730: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
3734: LD_EXP 4
3738: PPUSH
3739: LD_INT 42
3741: PPUSH
3742: LD_INT 35
3744: PPUSH
3745: CALL_OW 118
// if IsPlaced ( Donaldson ) then
3749: LD_EXP 4
3753: PPUSH
3754: CALL_OW 305
3758: IFFALSE 3788
// begin addHeroesTab := addHeroesTab ^ Donaldson ;
3760: LD_ADDR_EXP 15
3764: PUSH
3765: LD_EXP 15
3769: PUSH
3770: LD_EXP 4
3774: ADD
3775: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
3776: LD_EXP 4
3780: PPUSH
3781: LD_STRING 10_Donaldson
3783: PPUSH
3784: CALL_OW 38
// end ; end ; if not IsPlaced ( Brown ) and not IsPlaced ( Frank ) then
3788: LD_EXP 3
3792: PPUSH
3793: CALL_OW 305
3797: NOT
3798: PUSH
3799: LD_EXP 8
3803: PPUSH
3804: CALL_OW 305
3808: NOT
3809: AND
3810: IFFALSE 3897
// begin Frank := PrepareUnit ( 08_Frank , true ) ;
3812: LD_ADDR_EXP 8
3816: PUSH
3817: LD_STRING 08_Frank
3819: PPUSH
3820: LD_INT 1
3822: PPUSH
3823: CALL 5443 0 2
3827: ST_TO_ADDR
// PlaceUnitArea ( Frank , addHeroes , false ) ;
3828: LD_EXP 8
3832: PPUSH
3833: LD_INT 11
3835: PPUSH
3836: LD_INT 0
3838: PPUSH
3839: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
3843: LD_EXP 8
3847: PPUSH
3848: LD_INT 42
3850: PPUSH
3851: LD_INT 35
3853: PPUSH
3854: CALL_OW 118
// if IsPlaced ( Frank ) then
3858: LD_EXP 8
3862: PPUSH
3863: CALL_OW 305
3867: IFFALSE 3897
// begin addHeroesTab := addHeroesTab ^ Frank ;
3869: LD_ADDR_EXP 15
3873: PUSH
3874: LD_EXP 15
3878: PUSH
3879: LD_EXP 8
3883: ADD
3884: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
3885: LD_EXP 8
3889: PPUSH
3890: LD_STRING 10_Frank
3892: PPUSH
3893: CALL_OW 38
// end ; end ; if not IsPlaced ( Brown ) and not IsPlaced ( Houten ) then
3897: LD_EXP 3
3901: PPUSH
3902: CALL_OW 305
3906: NOT
3907: PUSH
3908: LD_EXP 9
3912: PPUSH
3913: CALL_OW 305
3917: NOT
3918: AND
3919: IFFALSE 4008
// begin Houten := PrepareUnit ( 09_Houten , true ) ;
3921: LD_ADDR_EXP 9
3925: PUSH
3926: LD_STRING 09_Houten
3928: PPUSH
3929: LD_INT 1
3931: PPUSH
3932: CALL 5443 0 2
3936: ST_TO_ADDR
// PlaceUnitArea ( Houten , addHeroes , false ) ;
3937: LD_EXP 9
3941: PPUSH
3942: LD_INT 11
3944: PPUSH
3945: LD_INT 0
3947: PPUSH
3948: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
3952: LD_EXP 9
3956: PPUSH
3957: LD_INT 42
3959: PPUSH
3960: LD_INT 35
3962: PPUSH
3963: CALL_OW 118
// if IsPlaced ( Houten ) then
3967: LD_EXP 9
3971: PPUSH
3972: CALL_OW 305
3976: IFFALSE 4006
// begin addHeroesTab := addHeroesTab ^ Houten ;
3978: LD_ADDR_EXP 15
3982: PUSH
3983: LD_EXP 15
3987: PUSH
3988: LD_EXP 9
3992: ADD
3993: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
3994: LD_EXP 9
3998: PPUSH
3999: LD_STRING 10_Houten
4001: PPUSH
4002: CALL_OW 38
// end ; end else
4006: GO 4084
// begin PlaceUnitArea ( others08 [ 1 ] , addHeroes , false ) ;
4008: LD_EXP 11
4012: PUSH
4013: LD_INT 1
4015: ARRAY
4016: PPUSH
4017: LD_INT 11
4019: PPUSH
4020: LD_INT 0
4022: PPUSH
4023: CALL_OW 49
// ComTurnXY ( others08 [ 1 ] , 42 , 35 ) ;
4027: LD_EXP 11
4031: PUSH
4032: LD_INT 1
4034: ARRAY
4035: PPUSH
4036: LD_INT 42
4038: PPUSH
4039: LD_INT 35
4041: PPUSH
4042: CALL_OW 118
// addHeroesTab := addHeroesTab ^ others08 [ 1 ] ;
4046: LD_ADDR_EXP 15
4050: PUSH
4051: LD_EXP 15
4055: PUSH
4056: LD_EXP 11
4060: PUSH
4061: LD_INT 1
4063: ARRAY
4064: ADD
4065: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
4066: LD_ADDR_EXP 11
4070: PUSH
4071: LD_EXP 11
4075: PPUSH
4076: LD_INT 1
4078: PPUSH
4079: CALL_OW 3
4083: ST_TO_ADDR
// end ; if not IsPlaced ( Donaldson ) then
4084: LD_EXP 4
4088: PPUSH
4089: CALL_OW 305
4093: NOT
4094: IFFALSE 4181
// begin Donaldson := PrepareUnit ( 08_Donaldson , true ) ;
4096: LD_ADDR_EXP 4
4100: PUSH
4101: LD_STRING 08_Donaldson
4103: PPUSH
4104: LD_INT 1
4106: PPUSH
4107: CALL 5443 0 2
4111: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , AddHeroes , false ) ;
4112: LD_EXP 4
4116: PPUSH
4117: LD_INT 11
4119: PPUSH
4120: LD_INT 0
4122: PPUSH
4123: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
4127: LD_EXP 4
4131: PPUSH
4132: LD_INT 42
4134: PPUSH
4135: LD_INT 35
4137: PPUSH
4138: CALL_OW 118
// if IsPlaced ( Donaldson ) then
4142: LD_EXP 4
4146: PPUSH
4147: CALL_OW 305
4151: IFFALSE 4181
// begin addHeroesTab := addHeroesTab ^ Donaldson ;
4153: LD_ADDR_EXP 15
4157: PUSH
4158: LD_EXP 15
4162: PUSH
4163: LD_EXP 4
4167: ADD
4168: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
4169: LD_EXP 4
4173: PPUSH
4174: LD_STRING 10_Donaldson
4176: PPUSH
4177: CALL_OW 38
// end ; end ; if not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
4181: LD_EXP 4
4185: PPUSH
4186: CALL_OW 305
4190: NOT
4191: PUSH
4192: LD_EXP 8
4196: PPUSH
4197: CALL_OW 305
4201: NOT
4202: AND
4203: IFFALSE 4290
// begin Frank := PrepareUnit ( 08_Frank , true ) ;
4205: LD_ADDR_EXP 8
4209: PUSH
4210: LD_STRING 08_Frank
4212: PPUSH
4213: LD_INT 1
4215: PPUSH
4216: CALL 5443 0 2
4220: ST_TO_ADDR
// PlaceUnitArea ( Frank , addHeroes , false ) ;
4221: LD_EXP 8
4225: PPUSH
4226: LD_INT 11
4228: PPUSH
4229: LD_INT 0
4231: PPUSH
4232: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
4236: LD_EXP 8
4240: PPUSH
4241: LD_INT 42
4243: PPUSH
4244: LD_INT 35
4246: PPUSH
4247: CALL_OW 118
// if IsPlaced ( Frank ) then
4251: LD_EXP 8
4255: PPUSH
4256: CALL_OW 305
4260: IFFALSE 4290
// begin addHeroesTab := addHeroesTab ^ Frank ;
4262: LD_ADDR_EXP 15
4266: PUSH
4267: LD_EXP 15
4271: PUSH
4272: LD_EXP 8
4276: ADD
4277: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
4278: LD_EXP 8
4282: PPUSH
4283: LD_STRING 10_Frank
4285: PPUSH
4286: CALL_OW 38
// end ; end ; if not IsPlaced ( Donaldson ) and not IsPlaced ( Houten ) then
4290: LD_EXP 4
4294: PPUSH
4295: CALL_OW 305
4299: NOT
4300: PUSH
4301: LD_EXP 9
4305: PPUSH
4306: CALL_OW 305
4310: NOT
4311: AND
4312: IFFALSE 4401
// begin Houten := PrepareUnit ( 09_Houten , true ) ;
4314: LD_ADDR_EXP 9
4318: PUSH
4319: LD_STRING 09_Houten
4321: PPUSH
4322: LD_INT 1
4324: PPUSH
4325: CALL 5443 0 2
4329: ST_TO_ADDR
// PlaceUnitArea ( Houten , addHeroes , false ) ;
4330: LD_EXP 9
4334: PPUSH
4335: LD_INT 11
4337: PPUSH
4338: LD_INT 0
4340: PPUSH
4341: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
4345: LD_EXP 9
4349: PPUSH
4350: LD_INT 42
4352: PPUSH
4353: LD_INT 35
4355: PPUSH
4356: CALL_OW 118
// if IsPlaced ( Houten ) then
4360: LD_EXP 9
4364: PPUSH
4365: CALL_OW 305
4369: IFFALSE 4399
// begin addHeroesTab = addHeroesTab ^ Houten ;
4371: LD_ADDR_EXP 15
4375: PUSH
4376: LD_EXP 15
4380: PUSH
4381: LD_EXP 9
4385: ADD
4386: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
4387: LD_EXP 9
4391: PPUSH
4392: LD_STRING 10_Houten
4394: PPUSH
4395: CALL_OW 38
// end ; end else
4399: GO 4477
// begin PlaceUnitArea ( others08 [ 1 ] , addHeroes , false ) ;
4401: LD_EXP 11
4405: PUSH
4406: LD_INT 1
4408: ARRAY
4409: PPUSH
4410: LD_INT 11
4412: PPUSH
4413: LD_INT 0
4415: PPUSH
4416: CALL_OW 49
// ComTurnXY ( others08 [ 1 ] , 42 , 35 ) ;
4420: LD_EXP 11
4424: PUSH
4425: LD_INT 1
4427: ARRAY
4428: PPUSH
4429: LD_INT 42
4431: PPUSH
4432: LD_INT 35
4434: PPUSH
4435: CALL_OW 118
// addHeroesTab := addHeroesTab ^ others08 [ 1 ] ;
4439: LD_ADDR_EXP 15
4443: PUSH
4444: LD_EXP 15
4448: PUSH
4449: LD_EXP 11
4453: PUSH
4454: LD_INT 1
4456: ARRAY
4457: ADD
4458: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
4459: LD_ADDR_EXP 11
4463: PUSH
4464: LD_EXP 11
4468: PPUSH
4469: LD_INT 1
4471: PPUSH
4472: CALL_OW 3
4476: ST_TO_ADDR
// end ; for i := 1 to 2 - addHeroesTab do
4477: LD_ADDR_VAR 0 2
4481: PUSH
4482: DOUBLE
4483: LD_INT 1
4485: DEC
4486: ST_TO_ADDR
4487: LD_INT 2
4489: PUSH
4490: LD_EXP 15
4494: MINUS
4495: PUSH
4496: FOR_TO
4497: IFFALSE 4621
// begin hc_gallery :=  ;
4499: LD_ADDR_OWVAR 33
4503: PUSH
4504: LD_STRING 
4506: ST_TO_ADDR
// hc_name :=  ;
4507: LD_ADDR_OWVAR 26
4511: PUSH
4512: LD_STRING 
4514: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
4515: LD_INT 0
4517: PPUSH
4518: LD_INT 1
4520: PUSH
4521: LD_INT 2
4523: PUSH
4524: LD_INT 3
4526: PUSH
4527: LD_INT 4
4529: PUSH
4530: EMPTY
4531: LIST
4532: LIST
4533: LIST
4534: LIST
4535: PUSH
4536: LD_INT 1
4538: PPUSH
4539: LD_INT 4
4541: PPUSH
4542: CALL_OW 12
4546: ARRAY
4547: PPUSH
4548: LD_INT 4
4550: PPUSH
4551: LD_INT 6
4553: PPUSH
4554: CALL_OW 12
4558: PPUSH
4559: CALL_OW 380
// un = CreateHuman ;
4563: LD_ADDR_VAR 0 3
4567: PUSH
4568: CALL_OW 44
4572: ST_TO_ADDR
// addHeroesTab = addHeroesTab ^ un ;
4573: LD_ADDR_EXP 15
4577: PUSH
4578: LD_EXP 15
4582: PUSH
4583: LD_VAR 0 3
4587: ADD
4588: ST_TO_ADDR
// PlaceUnitArea ( un , addHeroes , false ) ;
4589: LD_VAR 0 3
4593: PPUSH
4594: LD_INT 11
4596: PPUSH
4597: LD_INT 0
4599: PPUSH
4600: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
4604: LD_VAR 0 3
4608: PPUSH
4609: LD_INT 42
4611: PPUSH
4612: LD_INT 35
4614: PPUSH
4615: CALL_OW 118
// end ;
4619: GO 4496
4621: POP
4622: POP
// end ; if siberite > 200 then
4623: LD_EXP 17
4627: PUSH
4628: LD_INT 200
4630: GREATER
4631: IFFALSE 5183
// begin if others08 then
4633: LD_EXP 11
4637: IFFALSE 5027
// begin if others08 >= ( siberite - 200 ) / 100 then
4639: LD_EXP 11
4643: PUSH
4644: LD_EXP 17
4648: PUSH
4649: LD_INT 200
4651: MINUS
4652: PUSH
4653: LD_INT 100
4655: DIVREAL
4656: GREATEREQUAL
4657: IFFALSE 4769
// begin for i := 1 to ( siberite - 200 ) / 100 do
4659: LD_ADDR_VAR 0 2
4663: PUSH
4664: DOUBLE
4665: LD_INT 1
4667: DEC
4668: ST_TO_ADDR
4669: LD_EXP 17
4673: PUSH
4674: LD_INT 200
4676: MINUS
4677: PUSH
4678: LD_INT 100
4680: DIVREAL
4681: PUSH
4682: FOR_TO
4683: IFFALSE 4765
// begin PlaceUnitArea ( others08 [ 1 ] , addHeroes , false ) ;
4685: LD_EXP 11
4689: PUSH
4690: LD_INT 1
4692: ARRAY
4693: PPUSH
4694: LD_INT 11
4696: PPUSH
4697: LD_INT 0
4699: PPUSH
4700: CALL_OW 49
// ComTurnXY ( others08 [ 1 ] , 42 , 35 ) ;
4704: LD_EXP 11
4708: PUSH
4709: LD_INT 1
4711: ARRAY
4712: PPUSH
4713: LD_INT 42
4715: PPUSH
4716: LD_INT 35
4718: PPUSH
4719: CALL_OW 118
// addHeroesTab := addHeroesTab ^ others08 [ i ] ;
4723: LD_ADDR_EXP 15
4727: PUSH
4728: LD_EXP 15
4732: PUSH
4733: LD_EXP 11
4737: PUSH
4738: LD_VAR 0 2
4742: ARRAY
4743: ADD
4744: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
4745: LD_ADDR_EXP 11
4749: PUSH
4750: LD_EXP 11
4754: PPUSH
4755: LD_INT 1
4757: PPUSH
4758: CALL_OW 3
4762: ST_TO_ADDR
// end ;
4763: GO 4682
4765: POP
4766: POP
// end else
4767: GO 5025
// begin for i := 1 to others08 do
4769: LD_ADDR_VAR 0 2
4773: PUSH
4774: DOUBLE
4775: LD_INT 1
4777: DEC
4778: ST_TO_ADDR
4779: LD_EXP 11
4783: PUSH
4784: FOR_TO
4785: IFFALSE 4867
// begin PlaceUnitArea ( others08 [ 1 ] , addHeroes , false ) ;
4787: LD_EXP 11
4791: PUSH
4792: LD_INT 1
4794: ARRAY
4795: PPUSH
4796: LD_INT 11
4798: PPUSH
4799: LD_INT 0
4801: PPUSH
4802: CALL_OW 49
// ComTurnXY ( others08 [ 1 ] , 42 , 35 ) ;
4806: LD_EXP 11
4810: PUSH
4811: LD_INT 1
4813: ARRAY
4814: PPUSH
4815: LD_INT 42
4817: PPUSH
4818: LD_INT 35
4820: PPUSH
4821: CALL_OW 118
// addHeroesTab := addHeroesTab ^ others08 [ i ] ;
4825: LD_ADDR_EXP 15
4829: PUSH
4830: LD_EXP 15
4834: PUSH
4835: LD_EXP 11
4839: PUSH
4840: LD_VAR 0 2
4844: ARRAY
4845: ADD
4846: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
4847: LD_ADDR_EXP 11
4851: PUSH
4852: LD_EXP 11
4856: PPUSH
4857: LD_INT 1
4859: PPUSH
4860: CALL_OW 3
4864: ST_TO_ADDR
// end ;
4865: GO 4784
4867: POP
4868: POP
// for i := 1 to ( siberite - 200 ) / 100 - others08 do
4869: LD_ADDR_VAR 0 2
4873: PUSH
4874: DOUBLE
4875: LD_INT 1
4877: DEC
4878: ST_TO_ADDR
4879: LD_EXP 17
4883: PUSH
4884: LD_INT 200
4886: MINUS
4887: PUSH
4888: LD_INT 100
4890: DIVREAL
4891: PUSH
4892: LD_EXP 11
4896: MINUS
4897: PUSH
4898: FOR_TO
4899: IFFALSE 5023
// begin hc_gallery :=  ;
4901: LD_ADDR_OWVAR 33
4905: PUSH
4906: LD_STRING 
4908: ST_TO_ADDR
// hc_name :=  ;
4909: LD_ADDR_OWVAR 26
4913: PUSH
4914: LD_STRING 
4916: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
4917: LD_INT 0
4919: PPUSH
4920: LD_INT 1
4922: PUSH
4923: LD_INT 2
4925: PUSH
4926: LD_INT 3
4928: PUSH
4929: LD_INT 4
4931: PUSH
4932: EMPTY
4933: LIST
4934: LIST
4935: LIST
4936: LIST
4937: PUSH
4938: LD_INT 1
4940: PPUSH
4941: LD_INT 4
4943: PPUSH
4944: CALL_OW 12
4948: ARRAY
4949: PPUSH
4950: LD_INT 4
4952: PPUSH
4953: LD_INT 6
4955: PPUSH
4956: CALL_OW 12
4960: PPUSH
4961: CALL_OW 380
// un := CreateHuman ;
4965: LD_ADDR_VAR 0 3
4969: PUSH
4970: CALL_OW 44
4974: ST_TO_ADDR
// addHeroesTab := addHeroesTab ^ un ;
4975: LD_ADDR_EXP 15
4979: PUSH
4980: LD_EXP 15
4984: PUSH
4985: LD_VAR 0 3
4989: ADD
4990: ST_TO_ADDR
// PlaceUnitArea ( un , addHeroes , false ) ;
4991: LD_VAR 0 3
4995: PPUSH
4996: LD_INT 11
4998: PPUSH
4999: LD_INT 0
5001: PPUSH
5002: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
5006: LD_VAR 0 3
5010: PPUSH
5011: LD_INT 42
5013: PPUSH
5014: LD_INT 35
5016: PPUSH
5017: CALL_OW 118
// end ;
5021: GO 4898
5023: POP
5024: POP
// end ; end else
5025: GO 5183
// begin for i := 1 to ( siberite - 200 ) / 100 - others08 do
5027: LD_ADDR_VAR 0 2
5031: PUSH
5032: DOUBLE
5033: LD_INT 1
5035: DEC
5036: ST_TO_ADDR
5037: LD_EXP 17
5041: PUSH
5042: LD_INT 200
5044: MINUS
5045: PUSH
5046: LD_INT 100
5048: DIVREAL
5049: PUSH
5050: LD_EXP 11
5054: MINUS
5055: PUSH
5056: FOR_TO
5057: IFFALSE 5181
// begin hc_gallery :=  ;
5059: LD_ADDR_OWVAR 33
5063: PUSH
5064: LD_STRING 
5066: ST_TO_ADDR
// hc_name :=  ;
5067: LD_ADDR_OWVAR 26
5071: PUSH
5072: LD_STRING 
5074: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
5075: LD_INT 0
5077: PPUSH
5078: LD_INT 1
5080: PUSH
5081: LD_INT 2
5083: PUSH
5084: LD_INT 3
5086: PUSH
5087: LD_INT 4
5089: PUSH
5090: EMPTY
5091: LIST
5092: LIST
5093: LIST
5094: LIST
5095: PUSH
5096: LD_INT 1
5098: PPUSH
5099: LD_INT 4
5101: PPUSH
5102: CALL_OW 12
5106: ARRAY
5107: PPUSH
5108: LD_INT 4
5110: PPUSH
5111: LD_INT 6
5113: PPUSH
5114: CALL_OW 12
5118: PPUSH
5119: CALL_OW 380
// un := CreateHuman ;
5123: LD_ADDR_VAR 0 3
5127: PUSH
5128: CALL_OW 44
5132: ST_TO_ADDR
// addHeroesTab := addHeroesTab ^ un ;
5133: LD_ADDR_EXP 15
5137: PUSH
5138: LD_EXP 15
5142: PUSH
5143: LD_VAR 0 3
5147: ADD
5148: ST_TO_ADDR
// PlaceUnitArea ( un , addHeroes , false ) ;
5149: LD_VAR 0 3
5153: PPUSH
5154: LD_INT 11
5156: PPUSH
5157: LD_INT 0
5159: PPUSH
5160: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
5164: LD_VAR 0 3
5168: PPUSH
5169: LD_INT 42
5171: PPUSH
5172: LD_INT 35
5174: PPUSH
5175: CALL_OW 118
// end ;
5179: GO 5056
5181: POP
5182: POP
// end ; end ; PlaceHumanInUnit ( JMM , car ) ;
5183: LD_EXP 1
5187: PPUSH
5188: LD_INT 138
5190: PPUSH
5191: CALL_OW 52
// PlaceHumanInUnit ( Powell , Am_bar ) ;
5195: LD_EXP 2
5199: PPUSH
5200: LD_INT 58
5202: PPUSH
5203: CALL_OW 52
// SetClass ( JMM , 1 ) ;
5207: LD_EXP 1
5211: PPUSH
5212: LD_INT 1
5214: PPUSH
5215: CALL_OW 336
// end ;
5219: LD_VAR 0 1
5223: RET
// export function PrepareConvoy ; var i , veh , un ; begin
5224: LD_INT 0
5226: PPUSH
5227: PPUSH
5228: PPUSH
5229: PPUSH
// uc_side := 1 ;
5230: LD_ADDR_OWVAR 20
5234: PUSH
5235: LD_INT 1
5237: ST_TO_ADDR
// uc_nation := 1 ;
5238: LD_ADDR_OWVAR 21
5242: PUSH
5243: LD_INT 1
5245: ST_TO_ADDR
// for i := 1 to 2 do
5246: LD_ADDR_VAR 0 2
5250: PUSH
5251: DOUBLE
5252: LD_INT 1
5254: DEC
5255: ST_TO_ADDR
5256: LD_INT 2
5258: PUSH
5259: FOR_TO
5260: IFFALSE 5398
// begin vc_engine := 1 ;
5262: LD_ADDR_OWVAR 39
5266: PUSH
5267: LD_INT 1
5269: ST_TO_ADDR
// vc_control := 1 ;
5270: LD_ADDR_OWVAR 38
5274: PUSH
5275: LD_INT 1
5277: ST_TO_ADDR
// vc_weapon := 12 ;
5278: LD_ADDR_OWVAR 40
5282: PUSH
5283: LD_INT 12
5285: ST_TO_ADDR
// vc_chassis := 3 ;
5286: LD_ADDR_OWVAR 37
5290: PUSH
5291: LD_INT 3
5293: ST_TO_ADDR
// veh := CreateVehicle ;
5294: LD_ADDR_VAR 0 3
5298: PUSH
5299: CALL_OW 45
5303: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
5304: LD_VAR 0 3
5308: PPUSH
5309: LD_INT 1
5311: PPUSH
5312: CALL_OW 233
// PlaceUnitArea ( veh , Cargo , false ) ;
5316: LD_VAR 0 3
5320: PPUSH
5321: LD_INT 9
5323: PPUSH
5324: LD_INT 0
5326: PPUSH
5327: CALL_OW 49
// AddCargo ( veh , 1 , 100 ) ;
5331: LD_VAR 0 3
5335: PPUSH
5336: LD_INT 1
5338: PPUSH
5339: LD_INT 100
5341: PPUSH
5342: CALL_OW 291
// convoy = convoy ^ veh ;
5346: LD_ADDR_EXP 12
5350: PUSH
5351: LD_EXP 12
5355: PUSH
5356: LD_VAR 0 3
5360: ADD
5361: ST_TO_ADDR
// PrepareMechanic ( false , 10 ) ;
5362: LD_INT 0
5364: PPUSH
5365: LD_INT 10
5367: PPUSH
5368: CALL_OW 383
// un := CreateHuman ;
5372: LD_ADDR_VAR 0 4
5376: PUSH
5377: CALL_OW 44
5381: ST_TO_ADDR
// PlaceHumanInUnit ( un , veh ) ;
5382: LD_VAR 0 4
5386: PPUSH
5387: LD_VAR 0 3
5391: PPUSH
5392: CALL_OW 52
// end ;
5396: GO 5259
5398: POP
5399: POP
// AddComMoveXY ( convoy [ 1 ] , 45 , 43 ) ;
5400: LD_EXP 12
5404: PUSH
5405: LD_INT 1
5407: ARRAY
5408: PPUSH
5409: LD_INT 45
5411: PPUSH
5412: LD_INT 43
5414: PPUSH
5415: CALL_OW 171
// AddComMoveXY ( convoy [ 2 ] , 40 , 40 ) ;
5419: LD_EXP 12
5423: PUSH
5424: LD_INT 2
5426: ARRAY
5427: PPUSH
5428: LD_INT 40
5430: PPUSH
5431: LD_INT 40
5433: PPUSH
5434: CALL_OW 171
// end ; end_of_file
5438: LD_VAR 0 1
5442: RET
// export function PrepareUnit ( ident , exist_mode ) ; var unit ; begin
5443: LD_INT 0
5445: PPUSH
5446: PPUSH
// if exist_mode then
5447: LD_VAR 0 2
5451: IFFALSE 5470
// unit := CreateCharacter ( ident ) else
5453: LD_ADDR_VAR 0 4
5457: PUSH
5458: LD_VAR 0 1
5462: PPUSH
5463: CALL_OW 34
5467: ST_TO_ADDR
5468: GO 5485
// unit := NewCharacter ( ident ) ;
5470: LD_ADDR_VAR 0 4
5474: PUSH
5475: LD_VAR 0 1
5479: PPUSH
5480: CALL_OW 25
5484: ST_TO_ADDR
// result := unit ;
5485: LD_ADDR_VAR 0 3
5489: PUSH
5490: LD_VAR 0 4
5494: ST_TO_ADDR
// end ;
5495: LD_VAR 0 3
5499: RET
// export function Video ( mode ) ; begin
5500: LD_INT 0
5502: PPUSH
// ingame_video = mode ;
5503: LD_ADDR_OWVAR 52
5507: PUSH
5508: LD_VAR 0 1
5512: ST_TO_ADDR
// interface_hidden = mode ;
5513: LD_ADDR_OWVAR 54
5517: PUSH
5518: LD_VAR 0 1
5522: ST_TO_ADDR
// end ; end_of_file
5523: LD_VAR 0 2
5527: RET
// on VehicleConstructed ( veh , fac ) do begin AddComMoveXY ( veh , 82 , 77 ) ;
5528: LD_VAR 0 1
5532: PPUSH
5533: LD_INT 82
5535: PPUSH
5536: LD_INT 77
5538: PPUSH
5539: CALL_OW 171
// end ;
5543: PPOPN 2
5545: END
