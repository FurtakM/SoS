// export JMM , Powell ; export Brown , Donaldson , Bobby , Cyrus , Lisa , Frank , Houten , Gary ; export others08 ; export convoy , prepConv ; export coreHeroesTab , addHeroesTab ; export selectedToMission ; export siberite ; starting begin Resetfog ;
   0: CALL_OW 335
// SetBName ( Am_dep , alpha ) ;
   4: LD_INT 5
   6: PPUSH
   7: LD_STRING alpha
   9: PPUSH
  10: CALL_OW 500
// convoy := [ ] ;
  14: LD_ADDR_EXP 12
  18: PUSH
  19: EMPTY
  20: ST_TO_ADDR
// coreHeroesTab := [ ] ;
  21: LD_ADDR_EXP 14
  25: PUSH
  26: EMPTY
  27: ST_TO_ADDR
// addHeroesTab := [ ] ;
  28: LD_ADDR_EXP 15
  32: PUSH
  33: EMPTY
  34: ST_TO_ADDR
// selectedToMission := [ ] ;
  35: LD_ADDR_EXP 16
  39: PUSH
  40: EMPTY
  41: ST_TO_ADDR
// PrepareHeroes ;
  42: CALL 949 0 0
// Action ;
  46: CALL 51 0 0
// end ; end_of_file
  50: END
// export function Action ; var others ; begin
  51: LD_INT 0
  53: PPUSH
  54: PPUSH
// Video ( true ) ;
  55: LD_INT 1
  57: PPUSH
  58: CALL 5495 0 1
// AddComConstruct ( Am_tov1 , 2 , 1 , 1 , 4 ) ;
  62: LD_INT 60
  64: PPUSH
  65: LD_INT 2
  67: PPUSH
  68: LD_INT 1
  70: PPUSH
  71: LD_INT 1
  73: PPUSH
  74: LD_INT 4
  76: PPUSH
  77: CALL_OW 185
// AddComConstruct ( Am_tov2 , 4 , 1 , 1 , 6 ) ;
  81: LD_INT 6
  83: PPUSH
  84: LD_INT 4
  86: PPUSH
  87: LD_INT 1
  89: PPUSH
  90: LD_INT 1
  92: PPUSH
  93: LD_INT 6
  95: PPUSH
  96: CALL_OW 185
// AddComConstruct ( Am_tov1 , 2 , 1 , 1 , 3 ) ;
 100: LD_INT 60
 102: PPUSH
 103: LD_INT 2
 105: PPUSH
 106: LD_INT 1
 108: PPUSH
 109: LD_INT 1
 111: PPUSH
 112: LD_INT 3
 114: PPUSH
 115: CALL_OW 185
// AddComConstruct ( Am_tov2 , 4 , 1 , 1 , 4 ) ;
 119: LD_INT 6
 121: PPUSH
 122: LD_INT 4
 124: PPUSH
 125: LD_INT 1
 127: PPUSH
 128: LD_INT 1
 130: PPUSH
 131: LD_INT 4
 133: PPUSH
 134: CALL_OW 185
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap1 ) ;
 138: LD_INT 47
 140: PUSH
 141: LD_INT 4
 143: PUSH
 144: EMPTY
 145: LIST
 146: LIST
 147: PPUSH
 148: LD_INT 51
 150: PPUSH
 151: CALL_OW 184
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap2 ) ;
 155: LD_INT 47
 157: PUSH
 158: LD_INT 4
 160: PUSH
 161: EMPTY
 162: LIST
 163: LIST
 164: PPUSH
 165: LD_INT 52
 167: PPUSH
 168: CALL_OW 184
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap3 ) ;
 172: LD_INT 47
 174: PUSH
 175: LD_INT 4
 177: PUSH
 178: EMPTY
 179: LIST
 180: LIST
 181: PPUSH
 182: LD_INT 53
 184: PPUSH
 185: CALL_OW 184
// CenterNowOnUnits ( car ) ;
 189: LD_INT 138
 191: PPUSH
 192: CALL_OW 87
// ComMoveXY ( car , 69 , 36 ) ;
 196: LD_INT 138
 198: PPUSH
 199: LD_INT 69
 201: PPUSH
 202: LD_INT 36
 204: PPUSH
 205: CALL_OW 111
// AddComMoveXY ( car , 65 , 43 ) ;
 209: LD_INT 138
 211: PPUSH
 212: LD_INT 65
 214: PPUSH
 215: LD_INT 43
 217: PPUSH
 218: CALL_OW 171
// AddComMoveXY ( car , 63 , 48 ) ;
 222: LD_INT 138
 224: PPUSH
 225: LD_INT 63
 227: PPUSH
 228: LD_INT 48
 230: PPUSH
 231: CALL_OW 171
// AddComMoveXY ( car , 60 , 50 ) ;
 235: LD_INT 138
 237: PPUSH
 238: LD_INT 60
 240: PPUSH
 241: LD_INT 50
 243: PPUSH
 244: CALL_OW 171
// AddComMoveXY ( car , 54 , 47 ) ;
 248: LD_INT 138
 250: PPUSH
 251: LD_INT 54
 253: PPUSH
 254: LD_INT 47
 256: PPUSH
 257: CALL_OW 171
// AddComMoveXY ( car , 51 , 40 ) ;
 261: LD_INT 138
 263: PPUSH
 264: LD_INT 51
 266: PPUSH
 267: LD_INT 40
 269: PPUSH
 270: CALL_OW 171
// repeat wait ( 0 0$1 ) ;
 274: LD_INT 35
 276: PPUSH
 277: CALL_OW 67
// CenterNowOnUnits ( car ) ;
 281: LD_INT 138
 283: PPUSH
 284: CALL_OW 87
// until IsInArea ( car , stop ) ;
 288: LD_INT 138
 290: PPUSH
 291: LD_INT 7
 293: PPUSH
 294: CALL_OW 308
 298: IFFALSE 274
// ComExitVehicle ( JMM ) ;
 300: LD_EXP 1
 304: PPUSH
 305: CALL_OW 121
// wait ( 0 0$01 ) ;
 309: LD_INT 35
 311: PPUSH
 312: CALL_OW 67
// ComMoveXY ( JMM , 42 , 37 ) ;
 316: LD_EXP 1
 320: PPUSH
 321: LD_INT 42
 323: PPUSH
 324: LD_INT 37
 326: PPUSH
 327: CALL_OW 111
// wait ( 0 0$5 ) ;
 331: LD_INT 175
 333: PPUSH
 334: CALL_OW 67
// ComExitBuilding ( Powell ) ;
 338: LD_EXP 2
 342: PPUSH
 343: CALL_OW 122
// wait ( 0 0$01 ) ;
 347: LD_INT 35
 349: PPUSH
 350: CALL_OW 67
// ComTurnUnit ( Powell , JMM ) ;
 354: LD_EXP 2
 358: PPUSH
 359: LD_EXP 1
 363: PPUSH
 364: CALL_OW 119
// ComTurnUnit ( JMM , Powell ) ;
 368: LD_EXP 1
 372: PPUSH
 373: LD_EXP 2
 377: PPUSH
 378: CALL_OW 119
// Say ( JMM , D1-JMM-1 ) ;
 382: LD_EXP 1
 386: PPUSH
 387: LD_STRING D1-JMM-1
 389: PPUSH
 390: CALL_OW 88
// Say ( Powell , D1-Pow-1 ) ;
 394: LD_EXP 2
 398: PPUSH
 399: LD_STRING D1-Pow-1
 401: PPUSH
 402: CALL_OW 88
// Say ( JMM , D1-JMM-2 ) ;
 406: LD_EXP 1
 410: PPUSH
 411: LD_STRING D1-JMM-2
 413: PPUSH
 414: CALL_OW 88
// Say ( Powell , D1-Pow-2 ) ;
 418: LD_EXP 2
 422: PPUSH
 423: LD_STRING D1-Pow-2
 425: PPUSH
 426: CALL_OW 88
// Say ( JMM , D1-JMM-3 ) ;
 430: LD_EXP 1
 434: PPUSH
 435: LD_STRING D1-JMM-3
 437: PPUSH
 438: CALL_OW 88
// Say ( Powell , D1-Pow-3 ) ;
 442: LD_EXP 2
 446: PPUSH
 447: LD_STRING D1-Pow-3
 449: PPUSH
 450: CALL_OW 88
// Say ( JMM , D1-JMM-4 ) ;
 454: LD_EXP 1
 458: PPUSH
 459: LD_STRING D1-JMM-4
 461: PPUSH
 462: CALL_OW 88
// PrepareConvoy ;
 466: CALL 5219 0 0
// Say ( Powell , D1-Pow-4 ) ;
 470: LD_EXP 2
 474: PPUSH
 475: LD_STRING D1-Pow-4
 477: PPUSH
 478: CALL_OW 88
// if PrepareUnit ( 08_Joan , true ) then
 482: LD_STRING 08_Joan
 484: PPUSH
 485: LD_INT 1
 487: PPUSH
 488: CALL 5438 0 2
 492: IFFALSE 506
// Say ( Powell , D1-Pow-4a ) ;
 494: LD_EXP 2
 498: PPUSH
 499: LD_STRING D1-Pow-4a
 501: PPUSH
 502: CALL_OW 88
// Say ( Powell , D1-Pow-4b ) ;
 506: LD_EXP 2
 510: PPUSH
 511: LD_STRING D1-Pow-4b
 513: PPUSH
 514: CALL_OW 88
// AddComGive ( convoy , Am_dep ) ;
 518: LD_EXP 12
 522: PPUSH
 523: LD_INT 5
 525: PPUSH
 526: CALL_OW 221
// AddComMoveXY ( convoy , 81 , 77 ) ;
 530: LD_EXP 12
 534: PPUSH
 535: LD_INT 81
 537: PPUSH
 538: LD_INT 77
 540: PPUSH
 541: CALL_OW 171
// Say ( JMM , D1-JMM-5 ) ;
 545: LD_EXP 1
 549: PPUSH
 550: LD_STRING D1-JMM-5
 552: PPUSH
 553: CALL_OW 88
// Say ( Powell , D1-Pow-5 ) ;
 557: LD_EXP 2
 561: PPUSH
 562: LD_STRING D1-Pow-5
 564: PPUSH
 565: CALL_OW 88
// Say ( JMM , D1-JMM-6 ) ;
 569: LD_EXP 1
 573: PPUSH
 574: LD_STRING D1-JMM-6
 576: PPUSH
 577: CALL_OW 88
// Say ( Powell , D1-Pow-6 ) ;
 581: LD_EXP 2
 585: PPUSH
 586: LD_STRING D1-Pow-6
 588: PPUSH
 589: CALL_OW 88
// Say ( JMM , D1-JMM-7 ) ;
 593: LD_EXP 1
 597: PPUSH
 598: LD_STRING D1-JMM-7
 600: PPUSH
 601: CALL_OW 88
// Say ( Powell , D1-Pow-7 ) ;
 605: LD_EXP 2
 609: PPUSH
 610: LD_STRING D1-Pow-7
 612: PPUSH
 613: CALL_OW 88
// Say ( JMM , D1-JMM-8 ) ;
 617: LD_EXP 1
 621: PPUSH
 622: LD_STRING D1-JMM-8
 624: PPUSH
 625: CALL_OW 88
// ComMoveXY ( JMM , 47 , 48 ) ;
 629: LD_EXP 1
 633: PPUSH
 634: LD_INT 47
 636: PPUSH
 637: LD_INT 48
 639: PPUSH
 640: CALL_OW 111
// ComEnterUnit ( Powell , Am_bar ) ;
 644: LD_EXP 2
 648: PPUSH
 649: LD_INT 58
 651: PPUSH
 652: CALL_OW 120
// wait ( 0 0$3 ) ;
 656: LD_INT 105
 658: PPUSH
 659: CALL_OW 67
// others := FilterUnitsInArea ( CoreHeroes , [ [ f_side , 1 ] , [ f_type , unit_human ] ] ) ;
 663: LD_ADDR_VAR 0 2
 667: PUSH
 668: LD_INT 10
 670: PPUSH
 671: LD_INT 22
 673: PUSH
 674: LD_INT 1
 676: PUSH
 677: EMPTY
 678: LIST
 679: LIST
 680: PUSH
 681: LD_INT 21
 683: PUSH
 684: LD_INT 1
 686: PUSH
 687: EMPTY
 688: LIST
 689: LIST
 690: PUSH
 691: EMPTY
 692: LIST
 693: LIST
 694: PPUSH
 695: CALL_OW 70
 699: ST_TO_ADDR
// others := others ^ FilterUnitsInArea ( AddHeroes , [ [ f_side , 1 ] , [ f_type , unit_human ] ] ) ;
 700: LD_ADDR_VAR 0 2
 704: PUSH
 705: LD_VAR 0 2
 709: PUSH
 710: LD_INT 11
 712: PPUSH
 713: LD_INT 22
 715: PUSH
 716: LD_INT 1
 718: PUSH
 719: EMPTY
 720: LIST
 721: LIST
 722: PUSH
 723: LD_INT 21
 725: PUSH
 726: LD_INT 1
 728: PUSH
 729: EMPTY
 730: LIST
 731: LIST
 732: PUSH
 733: EMPTY
 734: LIST
 735: LIST
 736: PPUSH
 737: CALL_OW 70
 741: ADD
 742: ST_TO_ADDR
// others := others diff [ JMM , Powell , Brown , Donaldson , Bobby , Cyrus , Lisa , Frank , Houten , Gary ] ;
 743: LD_ADDR_VAR 0 2
 747: PUSH
 748: LD_VAR 0 2
 752: PUSH
 753: LD_EXP 1
 757: PUSH
 758: LD_EXP 2
 762: PUSH
 763: LD_EXP 3
 767: PUSH
 768: LD_EXP 4
 772: PUSH
 773: LD_EXP 5
 777: PUSH
 778: LD_EXP 6
 782: PUSH
 783: LD_EXP 7
 787: PUSH
 788: LD_EXP 8
 792: PUSH
 793: LD_EXP 9
 797: PUSH
 798: LD_EXP 10
 802: PUSH
 803: EMPTY
 804: LIST
 805: LIST
 806: LIST
 807: LIST
 808: LIST
 809: LIST
 810: LIST
 811: LIST
 812: LIST
 813: LIST
 814: DIFF
 815: ST_TO_ADDR
// SaveCharacters ( JMM , 10_JMM ) ;
 816: LD_EXP 1
 820: PPUSH
 821: LD_STRING 10_JMM
 823: PPUSH
 824: CALL_OW 38
// SaveCharacters ( others , OthersIn10 ) ;
 828: LD_VAR 0 2
 832: PPUSH
 833: LD_STRING OthersIn10
 835: PPUSH
 836: CALL_OW 38
// SaveCharacters ( others08 , 10_lock ) ;
 840: LD_EXP 11
 844: PPUSH
 845: LD_STRING 10_lock
 847: PPUSH
 848: CALL_OW 38
// ToLua ( enableBioCharacter(BIO_POW) ) ;
 852: LD_STRING enableBioCharacter(BIO_POW)
 854: PPUSH
 855: CALL_OW 559
// ToLua ( enableBioCharacter(BIO_CATH) ) ;
 859: LD_STRING enableBioCharacter(BIO_CATH)
 861: PPUSH
 862: CALL_OW 559
// ChangeMap ( 10 , %_cont ) ;
 866: LD_INT 10
 868: PPUSH
 869: LD_STRING %_cont
 871: PPUSH
 872: CALL_OW 340
// end ;
 876: LD_VAR 0 1
 880: RET
// every 0 0$1 trigger FilterUnitsInArea ( removeCar , [ f_side , 1 ] ) do var i ;
 881: LD_INT 12
 883: PPUSH
 884: LD_INT 22
 886: PUSH
 887: LD_INT 1
 889: PUSH
 890: EMPTY
 891: LIST
 892: LIST
 893: PPUSH
 894: CALL_OW 70
 898: IFFALSE 946
 900: GO 902
 902: DISABLE
 903: LD_INT 0
 905: PPUSH
// begin enable ;
 906: ENABLE
// for i in FilterUnitsInArea ( removeCar , [ f_side , 1 ] ) do
 907: LD_ADDR_VAR 0 1
 911: PUSH
 912: LD_INT 12
 914: PPUSH
 915: LD_INT 22
 917: PUSH
 918: LD_INT 1
 920: PUSH
 921: EMPTY
 922: LIST
 923: LIST
 924: PPUSH
 925: CALL_OW 70
 929: PUSH
 930: FOR_IN
 931: IFFALSE 944
// RemoveUnit ( i ) ;
 933: LD_VAR 0 1
 937: PPUSH
 938: CALL_OW 64
 942: GO 930
 944: POP
 945: POP
// end ; end_of_file
 946: PPOPN 1
 948: END
// export function PrepareHeroes ; var i , un ; begin
 949: LD_INT 0
 951: PPUSH
 952: PPUSH
 953: PPUSH
// uc_side := 1 ;
 954: LD_ADDR_OWVAR 20
 958: PUSH
 959: LD_INT 1
 961: ST_TO_ADDR
// uc_nation := 1 ;
 962: LD_ADDR_OWVAR 21
 966: PUSH
 967: LD_INT 1
 969: ST_TO_ADDR
// JMM := PrepareUnit ( 09_JMM , true ) ;
 970: LD_ADDR_EXP 1
 974: PUSH
 975: LD_STRING 09_JMM
 977: PPUSH
 978: LD_INT 1
 980: PPUSH
 981: CALL 5438 0 2
 985: ST_TO_ADDR
// Powell := PrepareUnit ( Powell , false ) ;
 986: LD_ADDR_EXP 2
 990: PUSH
 991: LD_STRING Powell
 993: PPUSH
 994: LD_INT 0
 996: PPUSH
 997: CALL 5438 0 2
1001: ST_TO_ADDR
// Bobby := PrepareUnit ( 09_Bobby , true ) ;
1002: LD_ADDR_EXP 5
1006: PUSH
1007: LD_STRING 09_Bobby
1009: PPUSH
1010: LD_INT 1
1012: PPUSH
1013: CALL 5438 0 2
1017: ST_TO_ADDR
// PlaceUnitArea ( Bobby , CoreHeroes , false ) ;
1018: LD_EXP 5
1022: PPUSH
1023: LD_INT 10
1025: PPUSH
1026: LD_INT 0
1028: PPUSH
1029: CALL_OW 49
// ComTurnXY ( Bobby , 42 , 35 ) ;
1033: LD_EXP 5
1037: PPUSH
1038: LD_INT 42
1040: PPUSH
1041: LD_INT 35
1043: PPUSH
1044: CALL_OW 118
// if IsPlaced ( Bobby ) then
1048: LD_EXP 5
1052: PPUSH
1053: CALL_OW 305
1057: IFFALSE 1087
// begin coreHeroesTab := coreHeroesTab ^ Bobby ;
1059: LD_ADDR_EXP 14
1063: PUSH
1064: LD_EXP 14
1068: PUSH
1069: LD_EXP 5
1073: ADD
1074: ST_TO_ADDR
// SaveCharacters ( Bobby , 10_Bobby ) ;
1075: LD_EXP 5
1079: PPUSH
1080: LD_STRING 10_Bobby
1082: PPUSH
1083: CALL_OW 38
// end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) then
1087: LD_EXP 5
1091: PPUSH
1092: CALL_OW 305
1096: NOT
1097: PUSH
1098: LD_EXP 3
1102: PPUSH
1103: CALL_OW 305
1107: NOT
1108: AND
1109: IFFALSE 1196
// begin Brown := PrepareUnit ( 08_Brown , true ) ;
1111: LD_ADDR_EXP 3
1115: PUSH
1116: LD_STRING 08_Brown
1118: PPUSH
1119: LD_INT 1
1121: PPUSH
1122: CALL 5438 0 2
1126: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
1127: LD_EXP 3
1131: PPUSH
1132: LD_INT 10
1134: PPUSH
1135: LD_INT 0
1137: PPUSH
1138: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
1142: LD_EXP 3
1146: PPUSH
1147: LD_INT 42
1149: PPUSH
1150: LD_INT 35
1152: PPUSH
1153: CALL_OW 118
// if IsPlaced ( Brown ) then
1157: LD_EXP 3
1161: PPUSH
1162: CALL_OW 305
1166: IFFALSE 1196
// begin coreHeroesTab := coreHeroesTab ^ Brown ;
1168: LD_ADDR_EXP 14
1172: PUSH
1173: LD_EXP 14
1177: PUSH
1178: LD_EXP 3
1182: ADD
1183: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
1184: LD_EXP 3
1188: PPUSH
1189: LD_STRING 10_Brown
1191: PPUSH
1192: CALL_OW 38
// end ; end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
1196: LD_EXP 5
1200: PPUSH
1201: CALL_OW 305
1205: NOT
1206: PUSH
1207: LD_EXP 3
1211: PPUSH
1212: CALL_OW 305
1216: NOT
1217: AND
1218: PUSH
1219: LD_EXP 4
1223: PPUSH
1224: CALL_OW 305
1228: NOT
1229: AND
1230: IFFALSE 1317
// begin Donaldson := PrepareUnit ( 08_Donaldson , true ) ;
1232: LD_ADDR_EXP 4
1236: PUSH
1237: LD_STRING 08_Donaldson
1239: PPUSH
1240: LD_INT 1
1242: PPUSH
1243: CALL 5438 0 2
1247: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
1248: LD_EXP 4
1252: PPUSH
1253: LD_INT 10
1255: PPUSH
1256: LD_INT 0
1258: PPUSH
1259: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
1263: LD_EXP 4
1267: PPUSH
1268: LD_INT 42
1270: PPUSH
1271: LD_INT 35
1273: PPUSH
1274: CALL_OW 118
// if IsPlaced ( Donaldson ) then
1278: LD_EXP 4
1282: PPUSH
1283: CALL_OW 305
1287: IFFALSE 1317
// begin coreHeroesTab := coreHeroesTab ^ Donaldson ;
1289: LD_ADDR_EXP 14
1293: PUSH
1294: LD_EXP 14
1298: PUSH
1299: LD_EXP 4
1303: ADD
1304: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
1305: LD_EXP 4
1309: PPUSH
1310: LD_STRING 10_Donaldson
1312: PPUSH
1313: CALL_OW 38
// end ; end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
1317: LD_EXP 5
1321: PPUSH
1322: CALL_OW 305
1326: NOT
1327: PUSH
1328: LD_EXP 3
1332: PPUSH
1333: CALL_OW 305
1337: NOT
1338: AND
1339: PUSH
1340: LD_EXP 4
1344: PPUSH
1345: CALL_OW 305
1349: NOT
1350: AND
1351: PUSH
1352: LD_EXP 8
1356: PPUSH
1357: CALL_OW 305
1361: NOT
1362: AND
1363: IFFALSE 1450
// begin Frank := PrepareUnit ( 08_Frank , true ) ;
1365: LD_ADDR_EXP 8
1369: PUSH
1370: LD_STRING 08_Frank
1372: PPUSH
1373: LD_INT 1
1375: PPUSH
1376: CALL 5438 0 2
1380: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
1381: LD_EXP 8
1385: PPUSH
1386: LD_INT 10
1388: PPUSH
1389: LD_INT 0
1391: PPUSH
1392: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
1396: LD_EXP 8
1400: PPUSH
1401: LD_INT 42
1403: PPUSH
1404: LD_INT 35
1406: PPUSH
1407: CALL_OW 118
// if IsPlaced ( Frank ) then
1411: LD_EXP 8
1415: PPUSH
1416: CALL_OW 305
1420: IFFALSE 1450
// begin coreHeroesTab := coreHeroesTab ^ Frank ;
1422: LD_ADDR_EXP 14
1426: PUSH
1427: LD_EXP 14
1431: PUSH
1432: LD_EXP 8
1436: ADD
1437: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
1438: LD_EXP 8
1442: PPUSH
1443: LD_STRING 10_Frank
1445: PPUSH
1446: CALL_OW 38
// end ; end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
1450: LD_EXP 5
1454: PPUSH
1455: CALL_OW 305
1459: NOT
1460: PUSH
1461: LD_EXP 3
1465: PPUSH
1466: CALL_OW 305
1470: NOT
1471: AND
1472: PUSH
1473: LD_EXP 4
1477: PPUSH
1478: CALL_OW 305
1482: NOT
1483: AND
1484: PUSH
1485: LD_EXP 8
1489: PPUSH
1490: CALL_OW 305
1494: NOT
1495: AND
1496: PUSH
1497: LD_EXP 9
1501: PPUSH
1502: CALL_OW 305
1506: NOT
1507: AND
1508: IFFALSE 1595
// begin Houten := PrepareUnit ( 09_Houten , true ) ;
1510: LD_ADDR_EXP 9
1514: PUSH
1515: LD_STRING 09_Houten
1517: PPUSH
1518: LD_INT 1
1520: PPUSH
1521: CALL 5438 0 2
1525: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
1526: LD_EXP 9
1530: PPUSH
1531: LD_INT 10
1533: PPUSH
1534: LD_INT 0
1536: PPUSH
1537: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
1541: LD_EXP 9
1545: PPUSH
1546: LD_INT 42
1548: PPUSH
1549: LD_INT 35
1551: PPUSH
1552: CALL_OW 118
// if IsPlaced ( Houten ) then
1556: LD_EXP 9
1560: PPUSH
1561: CALL_OW 305
1565: IFFALSE 1595
// begin coreHeroesTab := coreHeroesTab ^ Houten ;
1567: LD_ADDR_EXP 14
1571: PUSH
1572: LD_EXP 14
1576: PUSH
1577: LD_EXP 9
1581: ADD
1582: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
1583: LD_EXP 9
1587: PPUSH
1588: LD_STRING 10_Houten
1590: PPUSH
1591: CALL_OW 38
// end ; end ; Cyrus := PrepareUnit ( 09_Cyrus , true ) ;
1595: LD_ADDR_EXP 6
1599: PUSH
1600: LD_STRING 09_Cyrus
1602: PPUSH
1603: LD_INT 1
1605: PPUSH
1606: CALL 5438 0 2
1610: ST_TO_ADDR
// PlaceUnitArea ( Cyrus , CoreHeroes , false ) ;
1611: LD_EXP 6
1615: PPUSH
1616: LD_INT 10
1618: PPUSH
1619: LD_INT 0
1621: PPUSH
1622: CALL_OW 49
// ComTurnXY ( Cyrus , 42 , 35 ) ;
1626: LD_EXP 6
1630: PPUSH
1631: LD_INT 42
1633: PPUSH
1634: LD_INT 35
1636: PPUSH
1637: CALL_OW 118
// if IsPlaced ( Cyrus ) then
1641: LD_EXP 6
1645: PPUSH
1646: CALL_OW 305
1650: IFFALSE 1680
// begin coreHeroesTab := coreHeroesTab ^ Cyrus ;
1652: LD_ADDR_EXP 14
1656: PUSH
1657: LD_EXP 14
1661: PUSH
1662: LD_EXP 6
1666: ADD
1667: ST_TO_ADDR
// SaveCharacters ( Cyrus , 10_Cyrus ) ;
1668: LD_EXP 6
1672: PPUSH
1673: LD_STRING 10_Cyrus
1675: PPUSH
1676: CALL_OW 38
// end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) then
1680: LD_EXP 6
1684: PPUSH
1685: CALL_OW 305
1689: NOT
1690: PUSH
1691: LD_EXP 3
1695: PPUSH
1696: CALL_OW 305
1700: NOT
1701: AND
1702: IFFALSE 1789
// begin Brown := PrepareUnit ( 08_Brown , true ) ;
1704: LD_ADDR_EXP 3
1708: PUSH
1709: LD_STRING 08_Brown
1711: PPUSH
1712: LD_INT 1
1714: PPUSH
1715: CALL 5438 0 2
1719: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
1720: LD_EXP 3
1724: PPUSH
1725: LD_INT 10
1727: PPUSH
1728: LD_INT 0
1730: PPUSH
1731: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
1735: LD_EXP 3
1739: PPUSH
1740: LD_INT 42
1742: PPUSH
1743: LD_INT 35
1745: PPUSH
1746: CALL_OW 118
// if IsPlaced ( Brown ) then
1750: LD_EXP 3
1754: PPUSH
1755: CALL_OW 305
1759: IFFALSE 1789
// begin coreHeroesTab := coreHeroesTab ^ Brown ;
1761: LD_ADDR_EXP 14
1765: PUSH
1766: LD_EXP 14
1770: PUSH
1771: LD_EXP 3
1775: ADD
1776: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
1777: LD_EXP 3
1781: PPUSH
1782: LD_STRING 10_Brown
1784: PPUSH
1785: CALL_OW 38
// end ; end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
1789: LD_EXP 6
1793: PPUSH
1794: CALL_OW 305
1798: NOT
1799: PUSH
1800: LD_EXP 3
1804: PPUSH
1805: CALL_OW 305
1809: NOT
1810: AND
1811: PUSH
1812: LD_EXP 4
1816: PPUSH
1817: CALL_OW 305
1821: NOT
1822: AND
1823: IFFALSE 1910
// begin Donaldson := PrepareUnit ( 08_Donaldson , true ) ;
1825: LD_ADDR_EXP 4
1829: PUSH
1830: LD_STRING 08_Donaldson
1832: PPUSH
1833: LD_INT 1
1835: PPUSH
1836: CALL 5438 0 2
1840: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
1841: LD_EXP 4
1845: PPUSH
1846: LD_INT 10
1848: PPUSH
1849: LD_INT 0
1851: PPUSH
1852: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
1856: LD_EXP 4
1860: PPUSH
1861: LD_INT 42
1863: PPUSH
1864: LD_INT 35
1866: PPUSH
1867: CALL_OW 118
// if IsPlaced ( Donaldson ) then
1871: LD_EXP 4
1875: PPUSH
1876: CALL_OW 305
1880: IFFALSE 1910
// begin coreHeroesTab := coreHeroesTab ^ Donaldson ;
1882: LD_ADDR_EXP 14
1886: PUSH
1887: LD_EXP 14
1891: PUSH
1892: LD_EXP 4
1896: ADD
1897: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
1898: LD_EXP 4
1902: PPUSH
1903: LD_STRING 10_Donaldson
1905: PPUSH
1906: CALL_OW 38
// end ; end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
1910: LD_EXP 6
1914: PPUSH
1915: CALL_OW 305
1919: NOT
1920: PUSH
1921: LD_EXP 3
1925: PPUSH
1926: CALL_OW 305
1930: NOT
1931: AND
1932: PUSH
1933: LD_EXP 4
1937: PPUSH
1938: CALL_OW 305
1942: NOT
1943: AND
1944: PUSH
1945: LD_EXP 8
1949: PPUSH
1950: CALL_OW 305
1954: NOT
1955: AND
1956: IFFALSE 2043
// begin Frank := PrepareUnit ( 08_Frank , true ) ;
1958: LD_ADDR_EXP 8
1962: PUSH
1963: LD_STRING 08_Frank
1965: PPUSH
1966: LD_INT 1
1968: PPUSH
1969: CALL 5438 0 2
1973: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
1974: LD_EXP 8
1978: PPUSH
1979: LD_INT 10
1981: PPUSH
1982: LD_INT 0
1984: PPUSH
1985: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
1989: LD_EXP 8
1993: PPUSH
1994: LD_INT 42
1996: PPUSH
1997: LD_INT 35
1999: PPUSH
2000: CALL_OW 118
// if IsPlaced ( Frank ) then
2004: LD_EXP 8
2008: PPUSH
2009: CALL_OW 305
2013: IFFALSE 2043
// begin coreHeroesTab := coreHeroesTab ^ Frank ;
2015: LD_ADDR_EXP 14
2019: PUSH
2020: LD_EXP 14
2024: PUSH
2025: LD_EXP 8
2029: ADD
2030: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
2031: LD_EXP 8
2035: PPUSH
2036: LD_STRING 10_Frank
2038: PPUSH
2039: CALL_OW 38
// end ; end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
2043: LD_EXP 6
2047: PPUSH
2048: CALL_OW 305
2052: NOT
2053: PUSH
2054: LD_EXP 3
2058: PPUSH
2059: CALL_OW 305
2063: NOT
2064: AND
2065: PUSH
2066: LD_EXP 4
2070: PPUSH
2071: CALL_OW 305
2075: NOT
2076: AND
2077: PUSH
2078: LD_EXP 8
2082: PPUSH
2083: CALL_OW 305
2087: NOT
2088: AND
2089: PUSH
2090: LD_EXP 9
2094: PPUSH
2095: CALL_OW 305
2099: NOT
2100: AND
2101: IFFALSE 2188
// begin Houten := PrepareUnit ( 09_Houten , true ) ;
2103: LD_ADDR_EXP 9
2107: PUSH
2108: LD_STRING 09_Houten
2110: PPUSH
2111: LD_INT 1
2113: PPUSH
2114: CALL 5438 0 2
2118: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
2119: LD_EXP 9
2123: PPUSH
2124: LD_INT 10
2126: PPUSH
2127: LD_INT 0
2129: PPUSH
2130: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
2134: LD_EXP 9
2138: PPUSH
2139: LD_INT 42
2141: PPUSH
2142: LD_INT 35
2144: PPUSH
2145: CALL_OW 118
// if IsPlaced ( Houten ) then
2149: LD_EXP 9
2153: PPUSH
2154: CALL_OW 305
2158: IFFALSE 2188
// begin coreHeroesTab := coreHeroesTab ^ Houten ;
2160: LD_ADDR_EXP 14
2164: PUSH
2165: LD_EXP 14
2169: PUSH
2170: LD_EXP 9
2174: ADD
2175: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
2176: LD_EXP 9
2180: PPUSH
2181: LD_STRING 10_Houten
2183: PPUSH
2184: CALL_OW 38
// end ; end ; Lisa := PrepareUnit ( 08_Lisa , true ) ;
2188: LD_ADDR_EXP 7
2192: PUSH
2193: LD_STRING 08_Lisa
2195: PPUSH
2196: LD_INT 1
2198: PPUSH
2199: CALL 5438 0 2
2203: ST_TO_ADDR
// PlaceUnitArea ( Lisa , CoreHeroes , false ) ;
2204: LD_EXP 7
2208: PPUSH
2209: LD_INT 10
2211: PPUSH
2212: LD_INT 0
2214: PPUSH
2215: CALL_OW 49
// ComTurnXY ( Lisa , 42 , 35 ) ;
2219: LD_EXP 7
2223: PPUSH
2224: LD_INT 42
2226: PPUSH
2227: LD_INT 35
2229: PPUSH
2230: CALL_OW 118
// if IsPlaced ( Lisa ) then
2234: LD_EXP 7
2238: PPUSH
2239: CALL_OW 305
2243: IFFALSE 2273
// begin coreHeroesTab := coreHeroesTab ^ Lisa ;
2245: LD_ADDR_EXP 14
2249: PUSH
2250: LD_EXP 14
2254: PUSH
2255: LD_EXP 7
2259: ADD
2260: ST_TO_ADDR
// SaveCharacters ( Lisa , 10_Lisa ) ;
2261: LD_EXP 7
2265: PPUSH
2266: LD_STRING 10_Lisa
2268: PPUSH
2269: CALL_OW 38
// end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) then
2273: LD_EXP 7
2277: PPUSH
2278: CALL_OW 305
2282: NOT
2283: PUSH
2284: LD_EXP 3
2288: PPUSH
2289: CALL_OW 305
2293: NOT
2294: AND
2295: IFFALSE 2382
// begin Brown := PrepareUnit ( 08_Brown , true ) ;
2297: LD_ADDR_EXP 3
2301: PUSH
2302: LD_STRING 08_Brown
2304: PPUSH
2305: LD_INT 1
2307: PPUSH
2308: CALL 5438 0 2
2312: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
2313: LD_EXP 3
2317: PPUSH
2318: LD_INT 10
2320: PPUSH
2321: LD_INT 0
2323: PPUSH
2324: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
2328: LD_EXP 3
2332: PPUSH
2333: LD_INT 42
2335: PPUSH
2336: LD_INT 35
2338: PPUSH
2339: CALL_OW 118
// if IsPlaced ( Brown ) then
2343: LD_EXP 3
2347: PPUSH
2348: CALL_OW 305
2352: IFFALSE 2382
// begin coreHeroesTab := coreHeroesTab ^ Brown ;
2354: LD_ADDR_EXP 14
2358: PUSH
2359: LD_EXP 14
2363: PUSH
2364: LD_EXP 3
2368: ADD
2369: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
2370: LD_EXP 3
2374: PPUSH
2375: LD_STRING 10_Brown
2377: PPUSH
2378: CALL_OW 38
// end ; end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
2382: LD_EXP 7
2386: PPUSH
2387: CALL_OW 305
2391: NOT
2392: PUSH
2393: LD_EXP 3
2397: PPUSH
2398: CALL_OW 305
2402: NOT
2403: AND
2404: PUSH
2405: LD_EXP 4
2409: PPUSH
2410: CALL_OW 305
2414: NOT
2415: AND
2416: IFFALSE 2503
// begin Donaldson := PrepareUnit ( 08_Donaldson , true ) ;
2418: LD_ADDR_EXP 4
2422: PUSH
2423: LD_STRING 08_Donaldson
2425: PPUSH
2426: LD_INT 1
2428: PPUSH
2429: CALL 5438 0 2
2433: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
2434: LD_EXP 4
2438: PPUSH
2439: LD_INT 10
2441: PPUSH
2442: LD_INT 0
2444: PPUSH
2445: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
2449: LD_EXP 4
2453: PPUSH
2454: LD_INT 42
2456: PPUSH
2457: LD_INT 35
2459: PPUSH
2460: CALL_OW 118
// if IsPlaced ( Donaldson ) then
2464: LD_EXP 4
2468: PPUSH
2469: CALL_OW 305
2473: IFFALSE 2503
// begin coreHeroesTab := coreHeroesTab ^ Donaldson ;
2475: LD_ADDR_EXP 14
2479: PUSH
2480: LD_EXP 14
2484: PUSH
2485: LD_EXP 4
2489: ADD
2490: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
2491: LD_EXP 4
2495: PPUSH
2496: LD_STRING 10_Donaldson
2498: PPUSH
2499: CALL_OW 38
// end ; end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
2503: LD_EXP 7
2507: PPUSH
2508: CALL_OW 305
2512: NOT
2513: PUSH
2514: LD_EXP 3
2518: PPUSH
2519: CALL_OW 305
2523: NOT
2524: AND
2525: PUSH
2526: LD_EXP 4
2530: PPUSH
2531: CALL_OW 305
2535: NOT
2536: AND
2537: PUSH
2538: LD_EXP 8
2542: PPUSH
2543: CALL_OW 305
2547: NOT
2548: AND
2549: IFFALSE 2636
// begin Frank := PrepareUnit ( 08_Frank , true ) ;
2551: LD_ADDR_EXP 8
2555: PUSH
2556: LD_STRING 08_Frank
2558: PPUSH
2559: LD_INT 1
2561: PPUSH
2562: CALL 5438 0 2
2566: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
2567: LD_EXP 8
2571: PPUSH
2572: LD_INT 10
2574: PPUSH
2575: LD_INT 0
2577: PPUSH
2578: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
2582: LD_EXP 8
2586: PPUSH
2587: LD_INT 42
2589: PPUSH
2590: LD_INT 35
2592: PPUSH
2593: CALL_OW 118
// if IsPlaced ( Frank ) then
2597: LD_EXP 8
2601: PPUSH
2602: CALL_OW 305
2606: IFFALSE 2636
// begin coreHeroesTab := coreHeroesTab ^ Frank ;
2608: LD_ADDR_EXP 14
2612: PUSH
2613: LD_EXP 14
2617: PUSH
2618: LD_EXP 8
2622: ADD
2623: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
2624: LD_EXP 8
2628: PPUSH
2629: LD_STRING 10_Frank
2631: PPUSH
2632: CALL_OW 38
// end ; end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
2636: LD_EXP 7
2640: PPUSH
2641: CALL_OW 305
2645: NOT
2646: PUSH
2647: LD_EXP 3
2651: PPUSH
2652: CALL_OW 305
2656: NOT
2657: AND
2658: PUSH
2659: LD_EXP 4
2663: PPUSH
2664: CALL_OW 305
2668: NOT
2669: AND
2670: PUSH
2671: LD_EXP 8
2675: PPUSH
2676: CALL_OW 305
2680: NOT
2681: AND
2682: PUSH
2683: LD_EXP 9
2687: PPUSH
2688: CALL_OW 305
2692: NOT
2693: AND
2694: IFFALSE 2781
// begin Houten := PrepareUnit ( 09_Houten , true ) ;
2696: LD_ADDR_EXP 9
2700: PUSH
2701: LD_STRING 09_Houten
2703: PPUSH
2704: LD_INT 1
2706: PPUSH
2707: CALL 5438 0 2
2711: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
2712: LD_EXP 9
2716: PPUSH
2717: LD_INT 10
2719: PPUSH
2720: LD_INT 0
2722: PPUSH
2723: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
2727: LD_EXP 9
2731: PPUSH
2732: LD_INT 42
2734: PPUSH
2735: LD_INT 35
2737: PPUSH
2738: CALL_OW 118
// if IsPlaced ( Houten ) then
2742: LD_EXP 9
2746: PPUSH
2747: CALL_OW 305
2751: IFFALSE 2781
// begin coreHeroesTab := coreHeroesTab ^ Houten ;
2753: LD_ADDR_EXP 14
2757: PUSH
2758: LD_EXP 14
2762: PUSH
2763: LD_EXP 9
2767: ADD
2768: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
2769: LD_EXP 9
2773: PPUSH
2774: LD_STRING 10_Houten
2776: PPUSH
2777: CALL_OW 38
// end ; end ; Gary := PrepareUnit ( 09_Gary , true ) ;
2781: LD_ADDR_EXP 10
2785: PUSH
2786: LD_STRING 09_Gary
2788: PPUSH
2789: LD_INT 1
2791: PPUSH
2792: CALL 5438 0 2
2796: ST_TO_ADDR
// PlaceUnitArea ( Gary , CoreHeroes , false ) ;
2797: LD_EXP 10
2801: PPUSH
2802: LD_INT 10
2804: PPUSH
2805: LD_INT 0
2807: PPUSH
2808: CALL_OW 49
// ComTurnXY ( Gary , 42 , 35 ) ;
2812: LD_EXP 10
2816: PPUSH
2817: LD_INT 42
2819: PPUSH
2820: LD_INT 35
2822: PPUSH
2823: CALL_OW 118
// if IsPlaced ( Gary ) then
2827: LD_EXP 10
2831: PPUSH
2832: CALL_OW 305
2836: IFFALSE 2866
// begin coreHeroesTab := coreHeroesTab ^ Gary ;
2838: LD_ADDR_EXP 14
2842: PUSH
2843: LD_EXP 14
2847: PUSH
2848: LD_EXP 10
2852: ADD
2853: ST_TO_ADDR
// SaveCharacters ( Gary , 10_Gary ) ;
2854: LD_EXP 10
2858: PPUSH
2859: LD_STRING 10_Gary
2861: PPUSH
2862: CALL_OW 38
// end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) then
2866: LD_EXP 10
2870: PPUSH
2871: CALL_OW 305
2875: NOT
2876: PUSH
2877: LD_EXP 3
2881: PPUSH
2882: CALL_OW 305
2886: NOT
2887: AND
2888: IFFALSE 2975
// begin Brown := PrepareUnit ( 08_Brown , true ) ;
2890: LD_ADDR_EXP 3
2894: PUSH
2895: LD_STRING 08_Brown
2897: PPUSH
2898: LD_INT 1
2900: PPUSH
2901: CALL 5438 0 2
2905: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
2906: LD_EXP 3
2910: PPUSH
2911: LD_INT 10
2913: PPUSH
2914: LD_INT 0
2916: PPUSH
2917: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
2921: LD_EXP 3
2925: PPUSH
2926: LD_INT 42
2928: PPUSH
2929: LD_INT 35
2931: PPUSH
2932: CALL_OW 118
// if IsPlaced ( Brown ) then
2936: LD_EXP 3
2940: PPUSH
2941: CALL_OW 305
2945: IFFALSE 2975
// begin coreHeroesTab := coreHeroesTab ^ Brown ;
2947: LD_ADDR_EXP 14
2951: PUSH
2952: LD_EXP 14
2956: PUSH
2957: LD_EXP 3
2961: ADD
2962: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
2963: LD_EXP 3
2967: PPUSH
2968: LD_STRING 10_Brown
2970: PPUSH
2971: CALL_OW 38
// end ; end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
2975: LD_EXP 10
2979: PPUSH
2980: CALL_OW 305
2984: NOT
2985: PUSH
2986: LD_EXP 3
2990: PPUSH
2991: CALL_OW 305
2995: NOT
2996: AND
2997: PUSH
2998: LD_EXP 4
3002: PPUSH
3003: CALL_OW 305
3007: NOT
3008: AND
3009: IFFALSE 3096
// begin Donaldson := PrepareUnit ( 08_Donaldson , true ) ;
3011: LD_ADDR_EXP 4
3015: PUSH
3016: LD_STRING 08_Donaldson
3018: PPUSH
3019: LD_INT 1
3021: PPUSH
3022: CALL 5438 0 2
3026: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
3027: LD_EXP 4
3031: PPUSH
3032: LD_INT 10
3034: PPUSH
3035: LD_INT 0
3037: PPUSH
3038: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
3042: LD_EXP 4
3046: PPUSH
3047: LD_INT 42
3049: PPUSH
3050: LD_INT 35
3052: PPUSH
3053: CALL_OW 118
// if IsPlaced ( Donaldson ) then
3057: LD_EXP 4
3061: PPUSH
3062: CALL_OW 305
3066: IFFALSE 3096
// begin coreHeroesTab := coreHeroesTab ^ Donaldson ;
3068: LD_ADDR_EXP 14
3072: PUSH
3073: LD_EXP 14
3077: PUSH
3078: LD_EXP 4
3082: ADD
3083: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
3084: LD_EXP 4
3088: PPUSH
3089: LD_STRING 10_Donaldson
3091: PPUSH
3092: CALL_OW 38
// end ; end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
3096: LD_EXP 10
3100: PPUSH
3101: CALL_OW 305
3105: NOT
3106: PUSH
3107: LD_EXP 3
3111: PPUSH
3112: CALL_OW 305
3116: NOT
3117: AND
3118: PUSH
3119: LD_EXP 4
3123: PPUSH
3124: CALL_OW 305
3128: NOT
3129: AND
3130: PUSH
3131: LD_EXP 8
3135: PPUSH
3136: CALL_OW 305
3140: NOT
3141: AND
3142: IFFALSE 3229
// begin Frank := PrepareUnit ( 08_Frank , true ) ;
3144: LD_ADDR_EXP 8
3148: PUSH
3149: LD_STRING 08_Frank
3151: PPUSH
3152: LD_INT 1
3154: PPUSH
3155: CALL 5438 0 2
3159: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
3160: LD_EXP 8
3164: PPUSH
3165: LD_INT 10
3167: PPUSH
3168: LD_INT 0
3170: PPUSH
3171: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
3175: LD_EXP 8
3179: PPUSH
3180: LD_INT 42
3182: PPUSH
3183: LD_INT 35
3185: PPUSH
3186: CALL_OW 118
// if IsPlaced ( Frank ) then
3190: LD_EXP 8
3194: PPUSH
3195: CALL_OW 305
3199: IFFALSE 3229
// begin coreHeroesTab := coreHeroesTab ^ Frank ;
3201: LD_ADDR_EXP 14
3205: PUSH
3206: LD_EXP 14
3210: PUSH
3211: LD_EXP 8
3215: ADD
3216: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
3217: LD_EXP 8
3221: PPUSH
3222: LD_STRING 10_Frank
3224: PPUSH
3225: CALL_OW 38
// end ; end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
3229: LD_EXP 10
3233: PPUSH
3234: CALL_OW 305
3238: NOT
3239: PUSH
3240: LD_EXP 3
3244: PPUSH
3245: CALL_OW 305
3249: NOT
3250: AND
3251: PUSH
3252: LD_EXP 4
3256: PPUSH
3257: CALL_OW 305
3261: NOT
3262: AND
3263: PUSH
3264: LD_EXP 8
3268: PPUSH
3269: CALL_OW 305
3273: NOT
3274: AND
3275: PUSH
3276: LD_EXP 9
3280: PPUSH
3281: CALL_OW 305
3285: NOT
3286: AND
3287: IFFALSE 3374
// begin Houten := PrepareUnit ( 09_Houten , true ) ;
3289: LD_ADDR_EXP 9
3293: PUSH
3294: LD_STRING 09_Houten
3296: PPUSH
3297: LD_INT 1
3299: PPUSH
3300: CALL 5438 0 2
3304: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
3305: LD_EXP 9
3309: PPUSH
3310: LD_INT 10
3312: PPUSH
3313: LD_INT 0
3315: PPUSH
3316: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
3320: LD_EXP 9
3324: PPUSH
3325: LD_INT 42
3327: PPUSH
3328: LD_INT 35
3330: PPUSH
3331: CALL_OW 118
// if IsPlaced ( Houten ) then
3335: LD_EXP 9
3339: PPUSH
3340: CALL_OW 305
3344: IFFALSE 3374
// begin coreHeroesTab := coreHeroesTab ^ Houten ;
3346: LD_ADDR_EXP 14
3350: PUSH
3351: LD_EXP 14
3355: PUSH
3356: LD_EXP 9
3360: ADD
3361: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
3362: LD_EXP 9
3366: PPUSH
3367: LD_STRING 10_Houten
3369: PPUSH
3370: CALL_OW 38
// end ; end ; for i := 1 to 5 - coreHeroesTab do
3374: LD_ADDR_VAR 0 2
3378: PUSH
3379: DOUBLE
3380: LD_INT 1
3382: DEC
3383: ST_TO_ADDR
3384: LD_INT 5
3386: PUSH
3387: LD_EXP 14
3391: MINUS
3392: PUSH
3393: FOR_TO
3394: IFFALSE 3518
// begin hc_gallery =  ;
3396: LD_ADDR_OWVAR 33
3400: PUSH
3401: LD_STRING 
3403: ST_TO_ADDR
// hc_name =  ;
3404: LD_ADDR_OWVAR 26
3408: PUSH
3409: LD_STRING 
3411: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
3412: LD_INT 0
3414: PPUSH
3415: LD_INT 1
3417: PUSH
3418: LD_INT 2
3420: PUSH
3421: LD_INT 3
3423: PUSH
3424: LD_INT 4
3426: PUSH
3427: EMPTY
3428: LIST
3429: LIST
3430: LIST
3431: LIST
3432: PUSH
3433: LD_INT 1
3435: PPUSH
3436: LD_INT 4
3438: PPUSH
3439: CALL_OW 12
3443: ARRAY
3444: PPUSH
3445: LD_INT 4
3447: PPUSH
3448: LD_INT 6
3450: PPUSH
3451: CALL_OW 12
3455: PPUSH
3456: CALL_OW 380
// un := CreateHuman ;
3460: LD_ADDR_VAR 0 3
3464: PUSH
3465: CALL_OW 44
3469: ST_TO_ADDR
// coreHeroesTab := coreHeroesTab ^ un ;
3470: LD_ADDR_EXP 14
3474: PUSH
3475: LD_EXP 14
3479: PUSH
3480: LD_VAR 0 3
3484: ADD
3485: ST_TO_ADDR
// PlaceUnitArea ( un , CoreHeroes , false ) ;
3486: LD_VAR 0 3
3490: PPUSH
3491: LD_INT 10
3493: PPUSH
3494: LD_INT 0
3496: PPUSH
3497: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
3501: LD_VAR 0 3
3505: PPUSH
3506: LD_INT 42
3508: PPUSH
3509: LD_INT 35
3511: PPUSH
3512: CALL_OW 118
// end ;
3516: GO 3393
3518: POP
3519: POP
// siberite := LoadVariable ( 09_SibRes , 0 ) ;
3520: LD_ADDR_EXP 17
3524: PUSH
3525: LD_STRING 09_SibRes
3527: PPUSH
3528: LD_INT 0
3530: PPUSH
3531: CALL_OW 30
3535: ST_TO_ADDR
// if siberite > 500 then
3536: LD_EXP 17
3540: PUSH
3541: LD_INT 500
3543: GREATER
3544: IFFALSE 3554
// siberite := 500 ;
3546: LD_ADDR_EXP 17
3550: PUSH
3551: LD_INT 500
3553: ST_TO_ADDR
// others08 := CreateCharacterSet ( 08_other_survivors ) ;
3554: LD_ADDR_EXP 11
3558: PUSH
3559: LD_STRING 08_other_survivors
3561: PPUSH
3562: CALL_OW 31
3566: ST_TO_ADDR
// if siberite >= 200 then
3567: LD_EXP 17
3571: PUSH
3572: LD_INT 200
3574: GREATEREQUAL
3575: IFFALSE 4618
// begin if not IsPlaced ( Brown ) then
3577: LD_EXP 3
3581: PPUSH
3582: CALL_OW 305
3586: NOT
3587: IFFALSE 3674
// begin Brown := PrepareUnit ( 08_Brown , true ) ;
3589: LD_ADDR_EXP 3
3593: PUSH
3594: LD_STRING 08_Brown
3596: PPUSH
3597: LD_INT 1
3599: PPUSH
3600: CALL 5438 0 2
3604: ST_TO_ADDR
// PlaceUnitArea ( Brown , AddHeroes , false ) ;
3605: LD_EXP 3
3609: PPUSH
3610: LD_INT 11
3612: PPUSH
3613: LD_INT 0
3615: PPUSH
3616: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
3620: LD_EXP 3
3624: PPUSH
3625: LD_INT 42
3627: PPUSH
3628: LD_INT 35
3630: PPUSH
3631: CALL_OW 118
// if IsPlaced ( Brown ) then
3635: LD_EXP 3
3639: PPUSH
3640: CALL_OW 305
3644: IFFALSE 3674
// begin addHeroesTab := addHeroesTab ^ Brown ;
3646: LD_ADDR_EXP 15
3650: PUSH
3651: LD_EXP 15
3655: PUSH
3656: LD_EXP 3
3660: ADD
3661: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
3662: LD_EXP 3
3666: PPUSH
3667: LD_STRING 10_Brown
3669: PPUSH
3670: CALL_OW 38
// end ; end ; if not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
3674: LD_EXP 3
3678: PPUSH
3679: CALL_OW 305
3683: NOT
3684: PUSH
3685: LD_EXP 4
3689: PPUSH
3690: CALL_OW 305
3694: NOT
3695: AND
3696: IFFALSE 3783
// begin Donaldson := PrepareUnit ( 08_Donaldson , true ) ;
3698: LD_ADDR_EXP 4
3702: PUSH
3703: LD_STRING 08_Donaldson
3705: PPUSH
3706: LD_INT 1
3708: PPUSH
3709: CALL 5438 0 2
3713: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , addHeroes , false ) ;
3714: LD_EXP 4
3718: PPUSH
3719: LD_INT 11
3721: PPUSH
3722: LD_INT 0
3724: PPUSH
3725: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
3729: LD_EXP 4
3733: PPUSH
3734: LD_INT 42
3736: PPUSH
3737: LD_INT 35
3739: PPUSH
3740: CALL_OW 118
// if IsPlaced ( Donaldson ) then
3744: LD_EXP 4
3748: PPUSH
3749: CALL_OW 305
3753: IFFALSE 3783
// begin addHeroesTab := addHeroesTab ^ Donaldson ;
3755: LD_ADDR_EXP 15
3759: PUSH
3760: LD_EXP 15
3764: PUSH
3765: LD_EXP 4
3769: ADD
3770: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
3771: LD_EXP 4
3775: PPUSH
3776: LD_STRING 10_Donaldson
3778: PPUSH
3779: CALL_OW 38
// end ; end ; if not IsPlaced ( Brown ) and not IsPlaced ( Frank ) then
3783: LD_EXP 3
3787: PPUSH
3788: CALL_OW 305
3792: NOT
3793: PUSH
3794: LD_EXP 8
3798: PPUSH
3799: CALL_OW 305
3803: NOT
3804: AND
3805: IFFALSE 3892
// begin Frank := PrepareUnit ( 08_Frank , true ) ;
3807: LD_ADDR_EXP 8
3811: PUSH
3812: LD_STRING 08_Frank
3814: PPUSH
3815: LD_INT 1
3817: PPUSH
3818: CALL 5438 0 2
3822: ST_TO_ADDR
// PlaceUnitArea ( Frank , addHeroes , false ) ;
3823: LD_EXP 8
3827: PPUSH
3828: LD_INT 11
3830: PPUSH
3831: LD_INT 0
3833: PPUSH
3834: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
3838: LD_EXP 8
3842: PPUSH
3843: LD_INT 42
3845: PPUSH
3846: LD_INT 35
3848: PPUSH
3849: CALL_OW 118
// if IsPlaced ( Frank ) then
3853: LD_EXP 8
3857: PPUSH
3858: CALL_OW 305
3862: IFFALSE 3892
// begin addHeroesTab := addHeroesTab ^ Frank ;
3864: LD_ADDR_EXP 15
3868: PUSH
3869: LD_EXP 15
3873: PUSH
3874: LD_EXP 8
3878: ADD
3879: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
3880: LD_EXP 8
3884: PPUSH
3885: LD_STRING 10_Frank
3887: PPUSH
3888: CALL_OW 38
// end ; end ; if not IsPlaced ( Brown ) and not IsPlaced ( Houten ) then
3892: LD_EXP 3
3896: PPUSH
3897: CALL_OW 305
3901: NOT
3902: PUSH
3903: LD_EXP 9
3907: PPUSH
3908: CALL_OW 305
3912: NOT
3913: AND
3914: IFFALSE 4003
// begin Houten := PrepareUnit ( 09_Houten , true ) ;
3916: LD_ADDR_EXP 9
3920: PUSH
3921: LD_STRING 09_Houten
3923: PPUSH
3924: LD_INT 1
3926: PPUSH
3927: CALL 5438 0 2
3931: ST_TO_ADDR
// PlaceUnitArea ( Houten , addHeroes , false ) ;
3932: LD_EXP 9
3936: PPUSH
3937: LD_INT 11
3939: PPUSH
3940: LD_INT 0
3942: PPUSH
3943: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
3947: LD_EXP 9
3951: PPUSH
3952: LD_INT 42
3954: PPUSH
3955: LD_INT 35
3957: PPUSH
3958: CALL_OW 118
// if IsPlaced ( Houten ) then
3962: LD_EXP 9
3966: PPUSH
3967: CALL_OW 305
3971: IFFALSE 4001
// begin addHeroesTab := addHeroesTab ^ Houten ;
3973: LD_ADDR_EXP 15
3977: PUSH
3978: LD_EXP 15
3982: PUSH
3983: LD_EXP 9
3987: ADD
3988: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
3989: LD_EXP 9
3993: PPUSH
3994: LD_STRING 10_Houten
3996: PPUSH
3997: CALL_OW 38
// end ; end else
4001: GO 4079
// begin PlaceUnitArea ( others08 [ 1 ] , addHeroes , false ) ;
4003: LD_EXP 11
4007: PUSH
4008: LD_INT 1
4010: ARRAY
4011: PPUSH
4012: LD_INT 11
4014: PPUSH
4015: LD_INT 0
4017: PPUSH
4018: CALL_OW 49
// ComTurnXY ( others08 [ 1 ] , 42 , 35 ) ;
4022: LD_EXP 11
4026: PUSH
4027: LD_INT 1
4029: ARRAY
4030: PPUSH
4031: LD_INT 42
4033: PPUSH
4034: LD_INT 35
4036: PPUSH
4037: CALL_OW 118
// addHeroesTab := addHeroesTab ^ others08 [ 1 ] ;
4041: LD_ADDR_EXP 15
4045: PUSH
4046: LD_EXP 15
4050: PUSH
4051: LD_EXP 11
4055: PUSH
4056: LD_INT 1
4058: ARRAY
4059: ADD
4060: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
4061: LD_ADDR_EXP 11
4065: PUSH
4066: LD_EXP 11
4070: PPUSH
4071: LD_INT 1
4073: PPUSH
4074: CALL_OW 3
4078: ST_TO_ADDR
// end ; if not IsPlaced ( Donaldson ) then
4079: LD_EXP 4
4083: PPUSH
4084: CALL_OW 305
4088: NOT
4089: IFFALSE 4176
// begin Donaldson := PrepareUnit ( 08_Donaldson , true ) ;
4091: LD_ADDR_EXP 4
4095: PUSH
4096: LD_STRING 08_Donaldson
4098: PPUSH
4099: LD_INT 1
4101: PPUSH
4102: CALL 5438 0 2
4106: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , AddHeroes , false ) ;
4107: LD_EXP 4
4111: PPUSH
4112: LD_INT 11
4114: PPUSH
4115: LD_INT 0
4117: PPUSH
4118: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
4122: LD_EXP 4
4126: PPUSH
4127: LD_INT 42
4129: PPUSH
4130: LD_INT 35
4132: PPUSH
4133: CALL_OW 118
// if IsPlaced ( Donaldson ) then
4137: LD_EXP 4
4141: PPUSH
4142: CALL_OW 305
4146: IFFALSE 4176
// begin addHeroesTab := addHeroesTab ^ Donaldson ;
4148: LD_ADDR_EXP 15
4152: PUSH
4153: LD_EXP 15
4157: PUSH
4158: LD_EXP 4
4162: ADD
4163: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
4164: LD_EXP 4
4168: PPUSH
4169: LD_STRING 10_Donaldson
4171: PPUSH
4172: CALL_OW 38
// end ; end ; if not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
4176: LD_EXP 4
4180: PPUSH
4181: CALL_OW 305
4185: NOT
4186: PUSH
4187: LD_EXP 8
4191: PPUSH
4192: CALL_OW 305
4196: NOT
4197: AND
4198: IFFALSE 4285
// begin Frank := PrepareUnit ( 08_Frank , true ) ;
4200: LD_ADDR_EXP 8
4204: PUSH
4205: LD_STRING 08_Frank
4207: PPUSH
4208: LD_INT 1
4210: PPUSH
4211: CALL 5438 0 2
4215: ST_TO_ADDR
// PlaceUnitArea ( Frank , addHeroes , false ) ;
4216: LD_EXP 8
4220: PPUSH
4221: LD_INT 11
4223: PPUSH
4224: LD_INT 0
4226: PPUSH
4227: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
4231: LD_EXP 8
4235: PPUSH
4236: LD_INT 42
4238: PPUSH
4239: LD_INT 35
4241: PPUSH
4242: CALL_OW 118
// if IsPlaced ( Frank ) then
4246: LD_EXP 8
4250: PPUSH
4251: CALL_OW 305
4255: IFFALSE 4285
// begin addHeroesTab := addHeroesTab ^ Frank ;
4257: LD_ADDR_EXP 15
4261: PUSH
4262: LD_EXP 15
4266: PUSH
4267: LD_EXP 8
4271: ADD
4272: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
4273: LD_EXP 8
4277: PPUSH
4278: LD_STRING 10_Frank
4280: PPUSH
4281: CALL_OW 38
// end ; end ; if not IsPlaced ( Donaldson ) and not IsPlaced ( Houten ) then
4285: LD_EXP 4
4289: PPUSH
4290: CALL_OW 305
4294: NOT
4295: PUSH
4296: LD_EXP 9
4300: PPUSH
4301: CALL_OW 305
4305: NOT
4306: AND
4307: IFFALSE 4396
// begin Houten := PrepareUnit ( 09_Houten , true ) ;
4309: LD_ADDR_EXP 9
4313: PUSH
4314: LD_STRING 09_Houten
4316: PPUSH
4317: LD_INT 1
4319: PPUSH
4320: CALL 5438 0 2
4324: ST_TO_ADDR
// PlaceUnitArea ( Houten , addHeroes , false ) ;
4325: LD_EXP 9
4329: PPUSH
4330: LD_INT 11
4332: PPUSH
4333: LD_INT 0
4335: PPUSH
4336: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
4340: LD_EXP 9
4344: PPUSH
4345: LD_INT 42
4347: PPUSH
4348: LD_INT 35
4350: PPUSH
4351: CALL_OW 118
// if IsPlaced ( Houten ) then
4355: LD_EXP 9
4359: PPUSH
4360: CALL_OW 305
4364: IFFALSE 4394
// begin addHeroesTab = addHeroesTab ^ Houten ;
4366: LD_ADDR_EXP 15
4370: PUSH
4371: LD_EXP 15
4375: PUSH
4376: LD_EXP 9
4380: ADD
4381: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
4382: LD_EXP 9
4386: PPUSH
4387: LD_STRING 10_Houten
4389: PPUSH
4390: CALL_OW 38
// end ; end else
4394: GO 4472
// begin PlaceUnitArea ( others08 [ 1 ] , addHeroes , false ) ;
4396: LD_EXP 11
4400: PUSH
4401: LD_INT 1
4403: ARRAY
4404: PPUSH
4405: LD_INT 11
4407: PPUSH
4408: LD_INT 0
4410: PPUSH
4411: CALL_OW 49
// ComTurnXY ( others08 [ 1 ] , 42 , 35 ) ;
4415: LD_EXP 11
4419: PUSH
4420: LD_INT 1
4422: ARRAY
4423: PPUSH
4424: LD_INT 42
4426: PPUSH
4427: LD_INT 35
4429: PPUSH
4430: CALL_OW 118
// addHeroesTab := addHeroesTab ^ others08 [ 1 ] ;
4434: LD_ADDR_EXP 15
4438: PUSH
4439: LD_EXP 15
4443: PUSH
4444: LD_EXP 11
4448: PUSH
4449: LD_INT 1
4451: ARRAY
4452: ADD
4453: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
4454: LD_ADDR_EXP 11
4458: PUSH
4459: LD_EXP 11
4463: PPUSH
4464: LD_INT 1
4466: PPUSH
4467: CALL_OW 3
4471: ST_TO_ADDR
// end ; for i := 1 to 2 - addHeroesTab do
4472: LD_ADDR_VAR 0 2
4476: PUSH
4477: DOUBLE
4478: LD_INT 1
4480: DEC
4481: ST_TO_ADDR
4482: LD_INT 2
4484: PUSH
4485: LD_EXP 15
4489: MINUS
4490: PUSH
4491: FOR_TO
4492: IFFALSE 4616
// begin hc_gallery :=  ;
4494: LD_ADDR_OWVAR 33
4498: PUSH
4499: LD_STRING 
4501: ST_TO_ADDR
// hc_name :=  ;
4502: LD_ADDR_OWVAR 26
4506: PUSH
4507: LD_STRING 
4509: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
4510: LD_INT 0
4512: PPUSH
4513: LD_INT 1
4515: PUSH
4516: LD_INT 2
4518: PUSH
4519: LD_INT 3
4521: PUSH
4522: LD_INT 4
4524: PUSH
4525: EMPTY
4526: LIST
4527: LIST
4528: LIST
4529: LIST
4530: PUSH
4531: LD_INT 1
4533: PPUSH
4534: LD_INT 4
4536: PPUSH
4537: CALL_OW 12
4541: ARRAY
4542: PPUSH
4543: LD_INT 4
4545: PPUSH
4546: LD_INT 6
4548: PPUSH
4549: CALL_OW 12
4553: PPUSH
4554: CALL_OW 380
// un = CreateHuman ;
4558: LD_ADDR_VAR 0 3
4562: PUSH
4563: CALL_OW 44
4567: ST_TO_ADDR
// addHeroesTab = addHeroesTab ^ un ;
4568: LD_ADDR_EXP 15
4572: PUSH
4573: LD_EXP 15
4577: PUSH
4578: LD_VAR 0 3
4582: ADD
4583: ST_TO_ADDR
// PlaceUnitArea ( un , addHeroes , false ) ;
4584: LD_VAR 0 3
4588: PPUSH
4589: LD_INT 11
4591: PPUSH
4592: LD_INT 0
4594: PPUSH
4595: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
4599: LD_VAR 0 3
4603: PPUSH
4604: LD_INT 42
4606: PPUSH
4607: LD_INT 35
4609: PPUSH
4610: CALL_OW 118
// end ;
4614: GO 4491
4616: POP
4617: POP
// end ; if siberite > 200 then
4618: LD_EXP 17
4622: PUSH
4623: LD_INT 200
4625: GREATER
4626: IFFALSE 5178
// begin if others08 then
4628: LD_EXP 11
4632: IFFALSE 5022
// begin if others08 >= ( siberite - 200 ) / 100 then
4634: LD_EXP 11
4638: PUSH
4639: LD_EXP 17
4643: PUSH
4644: LD_INT 200
4646: MINUS
4647: PUSH
4648: LD_INT 100
4650: DIVREAL
4651: GREATEREQUAL
4652: IFFALSE 4764
// begin for i := 1 to ( siberite - 200 ) / 100 do
4654: LD_ADDR_VAR 0 2
4658: PUSH
4659: DOUBLE
4660: LD_INT 1
4662: DEC
4663: ST_TO_ADDR
4664: LD_EXP 17
4668: PUSH
4669: LD_INT 200
4671: MINUS
4672: PUSH
4673: LD_INT 100
4675: DIVREAL
4676: PUSH
4677: FOR_TO
4678: IFFALSE 4760
// begin PlaceUnitArea ( others08 [ 1 ] , addHeroes , false ) ;
4680: LD_EXP 11
4684: PUSH
4685: LD_INT 1
4687: ARRAY
4688: PPUSH
4689: LD_INT 11
4691: PPUSH
4692: LD_INT 0
4694: PPUSH
4695: CALL_OW 49
// ComTurnXY ( others08 [ 1 ] , 42 , 35 ) ;
4699: LD_EXP 11
4703: PUSH
4704: LD_INT 1
4706: ARRAY
4707: PPUSH
4708: LD_INT 42
4710: PPUSH
4711: LD_INT 35
4713: PPUSH
4714: CALL_OW 118
// addHeroesTab := addHeroesTab ^ others08 [ i ] ;
4718: LD_ADDR_EXP 15
4722: PUSH
4723: LD_EXP 15
4727: PUSH
4728: LD_EXP 11
4732: PUSH
4733: LD_VAR 0 2
4737: ARRAY
4738: ADD
4739: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
4740: LD_ADDR_EXP 11
4744: PUSH
4745: LD_EXP 11
4749: PPUSH
4750: LD_INT 1
4752: PPUSH
4753: CALL_OW 3
4757: ST_TO_ADDR
// end ;
4758: GO 4677
4760: POP
4761: POP
// end else
4762: GO 5020
// begin for i := 1 to others08 do
4764: LD_ADDR_VAR 0 2
4768: PUSH
4769: DOUBLE
4770: LD_INT 1
4772: DEC
4773: ST_TO_ADDR
4774: LD_EXP 11
4778: PUSH
4779: FOR_TO
4780: IFFALSE 4862
// begin PlaceUnitArea ( others08 [ 1 ] , addHeroes , false ) ;
4782: LD_EXP 11
4786: PUSH
4787: LD_INT 1
4789: ARRAY
4790: PPUSH
4791: LD_INT 11
4793: PPUSH
4794: LD_INT 0
4796: PPUSH
4797: CALL_OW 49
// ComTurnXY ( others08 [ 1 ] , 42 , 35 ) ;
4801: LD_EXP 11
4805: PUSH
4806: LD_INT 1
4808: ARRAY
4809: PPUSH
4810: LD_INT 42
4812: PPUSH
4813: LD_INT 35
4815: PPUSH
4816: CALL_OW 118
// addHeroesTab := addHeroesTab ^ others08 [ i ] ;
4820: LD_ADDR_EXP 15
4824: PUSH
4825: LD_EXP 15
4829: PUSH
4830: LD_EXP 11
4834: PUSH
4835: LD_VAR 0 2
4839: ARRAY
4840: ADD
4841: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
4842: LD_ADDR_EXP 11
4846: PUSH
4847: LD_EXP 11
4851: PPUSH
4852: LD_INT 1
4854: PPUSH
4855: CALL_OW 3
4859: ST_TO_ADDR
// end ;
4860: GO 4779
4862: POP
4863: POP
// for i := 1 to ( siberite - 200 ) / 100 - others08 do
4864: LD_ADDR_VAR 0 2
4868: PUSH
4869: DOUBLE
4870: LD_INT 1
4872: DEC
4873: ST_TO_ADDR
4874: LD_EXP 17
4878: PUSH
4879: LD_INT 200
4881: MINUS
4882: PUSH
4883: LD_INT 100
4885: DIVREAL
4886: PUSH
4887: LD_EXP 11
4891: MINUS
4892: PUSH
4893: FOR_TO
4894: IFFALSE 5018
// begin hc_gallery :=  ;
4896: LD_ADDR_OWVAR 33
4900: PUSH
4901: LD_STRING 
4903: ST_TO_ADDR
// hc_name :=  ;
4904: LD_ADDR_OWVAR 26
4908: PUSH
4909: LD_STRING 
4911: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
4912: LD_INT 0
4914: PPUSH
4915: LD_INT 1
4917: PUSH
4918: LD_INT 2
4920: PUSH
4921: LD_INT 3
4923: PUSH
4924: LD_INT 4
4926: PUSH
4927: EMPTY
4928: LIST
4929: LIST
4930: LIST
4931: LIST
4932: PUSH
4933: LD_INT 1
4935: PPUSH
4936: LD_INT 4
4938: PPUSH
4939: CALL_OW 12
4943: ARRAY
4944: PPUSH
4945: LD_INT 4
4947: PPUSH
4948: LD_INT 6
4950: PPUSH
4951: CALL_OW 12
4955: PPUSH
4956: CALL_OW 380
// un := CreateHuman ;
4960: LD_ADDR_VAR 0 3
4964: PUSH
4965: CALL_OW 44
4969: ST_TO_ADDR
// addHeroesTab := addHeroesTab ^ un ;
4970: LD_ADDR_EXP 15
4974: PUSH
4975: LD_EXP 15
4979: PUSH
4980: LD_VAR 0 3
4984: ADD
4985: ST_TO_ADDR
// PlaceUnitArea ( un , addHeroes , false ) ;
4986: LD_VAR 0 3
4990: PPUSH
4991: LD_INT 11
4993: PPUSH
4994: LD_INT 0
4996: PPUSH
4997: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
5001: LD_VAR 0 3
5005: PPUSH
5006: LD_INT 42
5008: PPUSH
5009: LD_INT 35
5011: PPUSH
5012: CALL_OW 118
// end ;
5016: GO 4893
5018: POP
5019: POP
// end ; end else
5020: GO 5178
// begin for i := 1 to ( siberite - 200 ) / 100 - others08 do
5022: LD_ADDR_VAR 0 2
5026: PUSH
5027: DOUBLE
5028: LD_INT 1
5030: DEC
5031: ST_TO_ADDR
5032: LD_EXP 17
5036: PUSH
5037: LD_INT 200
5039: MINUS
5040: PUSH
5041: LD_INT 100
5043: DIVREAL
5044: PUSH
5045: LD_EXP 11
5049: MINUS
5050: PUSH
5051: FOR_TO
5052: IFFALSE 5176
// begin hc_gallery :=  ;
5054: LD_ADDR_OWVAR 33
5058: PUSH
5059: LD_STRING 
5061: ST_TO_ADDR
// hc_name :=  ;
5062: LD_ADDR_OWVAR 26
5066: PUSH
5067: LD_STRING 
5069: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
5070: LD_INT 0
5072: PPUSH
5073: LD_INT 1
5075: PUSH
5076: LD_INT 2
5078: PUSH
5079: LD_INT 3
5081: PUSH
5082: LD_INT 4
5084: PUSH
5085: EMPTY
5086: LIST
5087: LIST
5088: LIST
5089: LIST
5090: PUSH
5091: LD_INT 1
5093: PPUSH
5094: LD_INT 4
5096: PPUSH
5097: CALL_OW 12
5101: ARRAY
5102: PPUSH
5103: LD_INT 4
5105: PPUSH
5106: LD_INT 6
5108: PPUSH
5109: CALL_OW 12
5113: PPUSH
5114: CALL_OW 380
// un := CreateHuman ;
5118: LD_ADDR_VAR 0 3
5122: PUSH
5123: CALL_OW 44
5127: ST_TO_ADDR
// addHeroesTab := addHeroesTab ^ un ;
5128: LD_ADDR_EXP 15
5132: PUSH
5133: LD_EXP 15
5137: PUSH
5138: LD_VAR 0 3
5142: ADD
5143: ST_TO_ADDR
// PlaceUnitArea ( un , addHeroes , false ) ;
5144: LD_VAR 0 3
5148: PPUSH
5149: LD_INT 11
5151: PPUSH
5152: LD_INT 0
5154: PPUSH
5155: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
5159: LD_VAR 0 3
5163: PPUSH
5164: LD_INT 42
5166: PPUSH
5167: LD_INT 35
5169: PPUSH
5170: CALL_OW 118
// end ;
5174: GO 5051
5176: POP
5177: POP
// end ; end ; PlaceHumanInUnit ( JMM , car ) ;
5178: LD_EXP 1
5182: PPUSH
5183: LD_INT 138
5185: PPUSH
5186: CALL_OW 52
// PlaceHumanInUnit ( Powell , Am_bar ) ;
5190: LD_EXP 2
5194: PPUSH
5195: LD_INT 58
5197: PPUSH
5198: CALL_OW 52
// SetClass ( JMM , 1 ) ;
5202: LD_EXP 1
5206: PPUSH
5207: LD_INT 1
5209: PPUSH
5210: CALL_OW 336
// end ;
5214: LD_VAR 0 1
5218: RET
// export function PrepareConvoy ; var i , veh , un ; begin
5219: LD_INT 0
5221: PPUSH
5222: PPUSH
5223: PPUSH
5224: PPUSH
// uc_side := 1 ;
5225: LD_ADDR_OWVAR 20
5229: PUSH
5230: LD_INT 1
5232: ST_TO_ADDR
// uc_nation := 1 ;
5233: LD_ADDR_OWVAR 21
5237: PUSH
5238: LD_INT 1
5240: ST_TO_ADDR
// for i := 1 to 2 do
5241: LD_ADDR_VAR 0 2
5245: PUSH
5246: DOUBLE
5247: LD_INT 1
5249: DEC
5250: ST_TO_ADDR
5251: LD_INT 2
5253: PUSH
5254: FOR_TO
5255: IFFALSE 5393
// begin vc_engine := 1 ;
5257: LD_ADDR_OWVAR 39
5261: PUSH
5262: LD_INT 1
5264: ST_TO_ADDR
// vc_control := 1 ;
5265: LD_ADDR_OWVAR 38
5269: PUSH
5270: LD_INT 1
5272: ST_TO_ADDR
// vc_weapon := 12 ;
5273: LD_ADDR_OWVAR 40
5277: PUSH
5278: LD_INT 12
5280: ST_TO_ADDR
// vc_chassis := 3 ;
5281: LD_ADDR_OWVAR 37
5285: PUSH
5286: LD_INT 3
5288: ST_TO_ADDR
// veh := CreateVehicle ;
5289: LD_ADDR_VAR 0 3
5293: PUSH
5294: CALL_OW 45
5298: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
5299: LD_VAR 0 3
5303: PPUSH
5304: LD_INT 1
5306: PPUSH
5307: CALL_OW 233
// PlaceUnitArea ( veh , Cargo , false ) ;
5311: LD_VAR 0 3
5315: PPUSH
5316: LD_INT 9
5318: PPUSH
5319: LD_INT 0
5321: PPUSH
5322: CALL_OW 49
// AddCargo ( veh , 1 , 100 ) ;
5326: LD_VAR 0 3
5330: PPUSH
5331: LD_INT 1
5333: PPUSH
5334: LD_INT 100
5336: PPUSH
5337: CALL_OW 291
// convoy = convoy ^ veh ;
5341: LD_ADDR_EXP 12
5345: PUSH
5346: LD_EXP 12
5350: PUSH
5351: LD_VAR 0 3
5355: ADD
5356: ST_TO_ADDR
// PrepareMechanic ( false , 10 ) ;
5357: LD_INT 0
5359: PPUSH
5360: LD_INT 10
5362: PPUSH
5363: CALL_OW 383
// un := CreateHuman ;
5367: LD_ADDR_VAR 0 4
5371: PUSH
5372: CALL_OW 44
5376: ST_TO_ADDR
// PlaceHumanInUnit ( un , veh ) ;
5377: LD_VAR 0 4
5381: PPUSH
5382: LD_VAR 0 3
5386: PPUSH
5387: CALL_OW 52
// end ;
5391: GO 5254
5393: POP
5394: POP
// AddComMoveXY ( convoy [ 1 ] , 45 , 43 ) ;
5395: LD_EXP 12
5399: PUSH
5400: LD_INT 1
5402: ARRAY
5403: PPUSH
5404: LD_INT 45
5406: PPUSH
5407: LD_INT 43
5409: PPUSH
5410: CALL_OW 171
// AddComMoveXY ( convoy [ 2 ] , 40 , 40 ) ;
5414: LD_EXP 12
5418: PUSH
5419: LD_INT 2
5421: ARRAY
5422: PPUSH
5423: LD_INT 40
5425: PPUSH
5426: LD_INT 40
5428: PPUSH
5429: CALL_OW 171
// end ; end_of_file
5433: LD_VAR 0 1
5437: RET
// export function PrepareUnit ( ident , exist_mode ) ; var unit ; begin
5438: LD_INT 0
5440: PPUSH
5441: PPUSH
// if exist_mode then
5442: LD_VAR 0 2
5446: IFFALSE 5465
// unit := CreateCharacter ( ident ) else
5448: LD_ADDR_VAR 0 4
5452: PUSH
5453: LD_VAR 0 1
5457: PPUSH
5458: CALL_OW 34
5462: ST_TO_ADDR
5463: GO 5480
// unit := NewCharacter ( ident ) ;
5465: LD_ADDR_VAR 0 4
5469: PUSH
5470: LD_VAR 0 1
5474: PPUSH
5475: CALL_OW 25
5479: ST_TO_ADDR
// result := unit ;
5480: LD_ADDR_VAR 0 3
5484: PUSH
5485: LD_VAR 0 4
5489: ST_TO_ADDR
// end ;
5490: LD_VAR 0 3
5494: RET
// export function Video ( mode ) ; begin
5495: LD_INT 0
5497: PPUSH
// ingame_video = mode ;
5498: LD_ADDR_OWVAR 52
5502: PUSH
5503: LD_VAR 0 1
5507: ST_TO_ADDR
// interface_hidden = mode ;
5508: LD_ADDR_OWVAR 54
5512: PUSH
5513: LD_VAR 0 1
5517: ST_TO_ADDR
// end ; end_of_file
5518: LD_VAR 0 2
5522: RET
// on VehicleConstructed ( veh , fac ) do begin AddComMoveXY ( veh , 82 , 77 ) ;
5523: LD_VAR 0 1
5527: PPUSH
5528: LD_INT 82
5530: PPUSH
5531: LD_INT 77
5533: PPUSH
5534: CALL_OW 171
// end ;
5538: PPOPN 2
5540: END
