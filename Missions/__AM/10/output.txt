// export JMM , Powell ; export Brown , Donaldson , Bobby , Cyrus , Lisa , Frank , Houten , Gary ; export others08 ; export convoy , prepConv ; export coreHeroesTab , addHeroesTab ; export selectedToMission ; export siberite ; starting begin Resetfog ;
   0: CALL_OW 335
// SetBName ( Am_dep , alfa ) ;
   4: LD_INT 5
   6: PPUSH
   7: LD_STRING alfa
   9: PPUSH
  10: CALL_OW 500
// convoy := [ ] ;
  14: LD_ADDR_EXP 12
  18: PUSH
  19: EMPTY
  20: ST_TO_ADDR
// coreHeroesTab := [ ] ;
  21: LD_ADDR_EXP 14
  25: PUSH
  26: EMPTY
  27: ST_TO_ADDR
// addHeroesTab := [ ] ;
  28: LD_ADDR_EXP 15
  32: PUSH
  33: EMPTY
  34: ST_TO_ADDR
// selectedToMission := [ ] ;
  35: LD_ADDR_EXP 16
  39: PUSH
  40: EMPTY
  41: ST_TO_ADDR
// PrepareHeroes ;
  42: CALL 961 0 0
// Action ;
  46: CALL 51 0 0
// end ; end_of_file
  50: END
// export function Action ; begin
  51: LD_INT 0
  53: PPUSH
// Video ( true ) ;
  54: LD_INT 1
  56: PPUSH
  57: CALL 5087 0 1
// AddComConstruct ( Am_tov1 , 2 , 1 , 1 , 4 ) ;
  61: LD_INT 60
  63: PPUSH
  64: LD_INT 2
  66: PPUSH
  67: LD_INT 1
  69: PPUSH
  70: LD_INT 1
  72: PPUSH
  73: LD_INT 4
  75: PPUSH
  76: CALL_OW 185
// AddComConstruct ( Am_tov2 , 4 , 1 , 1 , 6 ) ;
  80: LD_INT 6
  82: PPUSH
  83: LD_INT 4
  85: PPUSH
  86: LD_INT 1
  88: PPUSH
  89: LD_INT 1
  91: PPUSH
  92: LD_INT 6
  94: PPUSH
  95: CALL_OW 185
// AddComConstruct ( Am_tov1 , 2 , 1 , 1 , 3 ) ;
  99: LD_INT 60
 101: PPUSH
 102: LD_INT 2
 104: PPUSH
 105: LD_INT 1
 107: PPUSH
 108: LD_INT 1
 110: PPUSH
 111: LD_INT 3
 113: PPUSH
 114: CALL_OW 185
// AddComConstruct ( Am_tov2 , 4 , 1 , 1 , 4 ) ;
 118: LD_INT 6
 120: PPUSH
 121: LD_INT 4
 123: PPUSH
 124: LD_INT 1
 126: PPUSH
 127: LD_INT 1
 129: PPUSH
 130: LD_INT 4
 132: PPUSH
 133: CALL_OW 185
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap1 ) ;
 137: LD_INT 47
 139: PUSH
 140: LD_INT 4
 142: PUSH
 143: EMPTY
 144: LIST
 145: LIST
 146: PPUSH
 147: LD_INT 51
 149: PPUSH
 150: CALL_OW 184
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap2 ) ;
 154: LD_INT 47
 156: PUSH
 157: LD_INT 4
 159: PUSH
 160: EMPTY
 161: LIST
 162: LIST
 163: PPUSH
 164: LD_INT 52
 166: PPUSH
 167: CALL_OW 184
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap3 ) ;
 171: LD_INT 47
 173: PUSH
 174: LD_INT 4
 176: PUSH
 177: EMPTY
 178: LIST
 179: LIST
 180: PPUSH
 181: LD_INT 53
 183: PPUSH
 184: CALL_OW 184
// CenterNowOnUnits ( car ) ;
 188: LD_INT 138
 190: PPUSH
 191: CALL_OW 87
// ComMoveXY ( car , 69 , 36 ) ;
 195: LD_INT 138
 197: PPUSH
 198: LD_INT 69
 200: PPUSH
 201: LD_INT 36
 203: PPUSH
 204: CALL_OW 111
// AddComMoveXY ( car , 65 , 43 ) ;
 208: LD_INT 138
 210: PPUSH
 211: LD_INT 65
 213: PPUSH
 214: LD_INT 43
 216: PPUSH
 217: CALL_OW 171
// AddComMoveXY ( car , 63 , 48 ) ;
 221: LD_INT 138
 223: PPUSH
 224: LD_INT 63
 226: PPUSH
 227: LD_INT 48
 229: PPUSH
 230: CALL_OW 171
// AddComMoveXY ( car , 60 , 50 ) ;
 234: LD_INT 138
 236: PPUSH
 237: LD_INT 60
 239: PPUSH
 240: LD_INT 50
 242: PPUSH
 243: CALL_OW 171
// AddComMoveXY ( car , 54 , 47 ) ;
 247: LD_INT 138
 249: PPUSH
 250: LD_INT 54
 252: PPUSH
 253: LD_INT 47
 255: PPUSH
 256: CALL_OW 171
// AddComMoveXY ( car , 51 , 40 ) ;
 260: LD_INT 138
 262: PPUSH
 263: LD_INT 51
 265: PPUSH
 266: LD_INT 40
 268: PPUSH
 269: CALL_OW 171
// repeat wait ( 0 0$1 ) ;
 273: LD_INT 35
 275: PPUSH
 276: CALL_OW 67
// CenterNowOnUnits ( car ) ;
 280: LD_INT 138
 282: PPUSH
 283: CALL_OW 87
// until IsInArea ( car , stop ) ;
 287: LD_INT 138
 289: PPUSH
 290: LD_INT 7
 292: PPUSH
 293: CALL_OW 308
 297: IFFALSE 273
// ComExitVehicle ( JMM ) ;
 299: LD_EXP 1
 303: PPUSH
 304: CALL_OW 121
// wait ( 0 0$01 ) ;
 308: LD_INT 35
 310: PPUSH
 311: CALL_OW 67
// ComMoveXY ( JMM , 42 , 37 ) ;
 315: LD_EXP 1
 319: PPUSH
 320: LD_INT 42
 322: PPUSH
 323: LD_INT 37
 325: PPUSH
 326: CALL_OW 111
// wait ( 0 0$5 ) ;
 330: LD_INT 175
 332: PPUSH
 333: CALL_OW 67
// ComExitBuilding ( Powell ) ;
 337: LD_EXP 2
 341: PPUSH
 342: CALL_OW 122
// wait ( 0 0$01 ) ;
 346: LD_INT 35
 348: PPUSH
 349: CALL_OW 67
// ComTurnUnit ( Powell , JMM ) ;
 353: LD_EXP 2
 357: PPUSH
 358: LD_EXP 1
 362: PPUSH
 363: CALL_OW 119
// ComTurnUnit ( JMM , Powell ) ;
 367: LD_EXP 1
 371: PPUSH
 372: LD_EXP 2
 376: PPUSH
 377: CALL_OW 119
// Say ( JMM , D1-JMM-1 ) ;
 381: LD_EXP 1
 385: PPUSH
 386: LD_STRING D1-JMM-1
 388: PPUSH
 389: CALL_OW 88
// Say ( Powell , D1-Pow-1 ) ;
 393: LD_EXP 2
 397: PPUSH
 398: LD_STRING D1-Pow-1
 400: PPUSH
 401: CALL_OW 88
// Say ( JMM , D1-JMM-2 ) ;
 405: LD_EXP 1
 409: PPUSH
 410: LD_STRING D1-JMM-2
 412: PPUSH
 413: CALL_OW 88
// Say ( Powell , D1-Pow-2 ) ;
 417: LD_EXP 2
 421: PPUSH
 422: LD_STRING D1-Pow-2
 424: PPUSH
 425: CALL_OW 88
// Say ( JMM , D1-JMM-3 ) ;
 429: LD_EXP 1
 433: PPUSH
 434: LD_STRING D1-JMM-3
 436: PPUSH
 437: CALL_OW 88
// Say ( Powell , D1-Pow-3 ) ;
 441: LD_EXP 2
 445: PPUSH
 446: LD_STRING D1-Pow-3
 448: PPUSH
 449: CALL_OW 88
// Say ( JMM , D1-JMM-4 ) ;
 453: LD_EXP 1
 457: PPUSH
 458: LD_STRING D1-JMM-4
 460: PPUSH
 461: CALL_OW 88
// PrepareConvoy ;
 465: CALL 4796 0 0
// Say ( Powell , D1-Pow-4 ) ;
 469: LD_EXP 2
 473: PPUSH
 474: LD_STRING D1-Pow-4
 476: PPUSH
 477: CALL_OW 88
// if PrepareUnit ( 08_Joan , true ) then
 481: LD_STRING 08_Joan
 483: PPUSH
 484: LD_INT 1
 486: PPUSH
 487: CALL 5015 0 2
 491: IFFALSE 505
// Say ( Powell , D1-Pow-4a ) ;
 493: LD_EXP 2
 497: PPUSH
 498: LD_STRING D1-Pow-4a
 500: PPUSH
 501: CALL_OW 88
// Say ( Powell , D1-Pow-4b ) ;
 505: LD_EXP 2
 509: PPUSH
 510: LD_STRING D1-Pow-4b
 512: PPUSH
 513: CALL_OW 88
// AddComGive ( convoy , Am_dep ) ;
 517: LD_EXP 12
 521: PPUSH
 522: LD_INT 5
 524: PPUSH
 525: CALL_OW 221
// AddComMoveXY ( convoy , 81 , 77 ) ;
 529: LD_EXP 12
 533: PPUSH
 534: LD_INT 81
 536: PPUSH
 537: LD_INT 77
 539: PPUSH
 540: CALL_OW 171
// Say ( JMM , D1-JMM-5 ) ;
 544: LD_EXP 1
 548: PPUSH
 549: LD_STRING D1-JMM-5
 551: PPUSH
 552: CALL_OW 88
// Say ( Powell , D1-Pow-5 ) ;
 556: LD_EXP 2
 560: PPUSH
 561: LD_STRING D1-Pow-5
 563: PPUSH
 564: CALL_OW 88
// Say ( JMM , D1-JMM-6 ) ;
 568: LD_EXP 1
 572: PPUSH
 573: LD_STRING D1-JMM-6
 575: PPUSH
 576: CALL_OW 88
// Say ( Powell , D1-Pow-6 ) ;
 580: LD_EXP 2
 584: PPUSH
 585: LD_STRING D1-Pow-6
 587: PPUSH
 588: CALL_OW 88
// Say ( JMM , D1-JMM-7 ) ;
 592: LD_EXP 1
 596: PPUSH
 597: LD_STRING D1-JMM-7
 599: PPUSH
 600: CALL_OW 88
// Say ( Powell , D1-Pow-7 ) ;
 604: LD_EXP 2
 608: PPUSH
 609: LD_STRING D1-Pow-7
 611: PPUSH
 612: CALL_OW 88
// Say ( JMM , D1-JMM-8 ) ;
 616: LD_EXP 1
 620: PPUSH
 621: LD_STRING D1-JMM-8
 623: PPUSH
 624: CALL_OW 88
// ComMoveXY ( JMM , 47 , 48 ) ;
 628: LD_EXP 1
 632: PPUSH
 633: LD_INT 47
 635: PPUSH
 636: LD_INT 48
 638: PPUSH
 639: CALL_OW 111
// ComEnterUnit ( Powell , Am_bar ) ;
 643: LD_EXP 2
 647: PPUSH
 648: LD_INT 58
 650: PPUSH
 651: CALL_OW 120
// wait ( 0 0$3 ) ;
 655: LD_INT 105
 657: PPUSH
 658: CALL_OW 67
// EndMission ;
 662: CALL 671 0 0
// end ;
 666: LD_VAR 0 1
 670: RET
// export function EndMission ; var others ; begin
 671: LD_INT 0
 673: PPUSH
 674: PPUSH
// others := FilterUnitsInArea ( CoreHeroes , [ [ f_side , 1 ] , [ f_type , unit_human ] ] ) ;
 675: LD_ADDR_VAR 0 2
 679: PUSH
 680: LD_INT 10
 682: PPUSH
 683: LD_INT 22
 685: PUSH
 686: LD_INT 1
 688: PUSH
 689: EMPTY
 690: LIST
 691: LIST
 692: PUSH
 693: LD_INT 21
 695: PUSH
 696: LD_INT 1
 698: PUSH
 699: EMPTY
 700: LIST
 701: LIST
 702: PUSH
 703: EMPTY
 704: LIST
 705: LIST
 706: PPUSH
 707: CALL_OW 70
 711: ST_TO_ADDR
// others := others ^ FilterUnitsInArea ( AddHeroes , [ [ f_side , 1 ] , [ f_type , unit_human ] ] ) ;
 712: LD_ADDR_VAR 0 2
 716: PUSH
 717: LD_VAR 0 2
 721: PUSH
 722: LD_INT 11
 724: PPUSH
 725: LD_INT 22
 727: PUSH
 728: LD_INT 1
 730: PUSH
 731: EMPTY
 732: LIST
 733: LIST
 734: PUSH
 735: LD_INT 21
 737: PUSH
 738: LD_INT 1
 740: PUSH
 741: EMPTY
 742: LIST
 743: LIST
 744: PUSH
 745: EMPTY
 746: LIST
 747: LIST
 748: PPUSH
 749: CALL_OW 70
 753: ADD
 754: ST_TO_ADDR
// others := others diff [ JMM , Powell , Brown , Donaldson , Bobby , Cyrus , Lisa , Frank , Houten , Gary ] ;
 755: LD_ADDR_VAR 0 2
 759: PUSH
 760: LD_VAR 0 2
 764: PUSH
 765: LD_EXP 1
 769: PUSH
 770: LD_EXP 2
 774: PUSH
 775: LD_EXP 3
 779: PUSH
 780: LD_EXP 4
 784: PUSH
 785: LD_EXP 5
 789: PUSH
 790: LD_EXP 6
 794: PUSH
 795: LD_EXP 7
 799: PUSH
 800: LD_EXP 8
 804: PUSH
 805: LD_EXP 9
 809: PUSH
 810: LD_EXP 10
 814: PUSH
 815: EMPTY
 816: LIST
 817: LIST
 818: LIST
 819: LIST
 820: LIST
 821: LIST
 822: LIST
 823: LIST
 824: LIST
 825: LIST
 826: DIFF
 827: ST_TO_ADDR
// SaveCharacters ( JMM , 10_JMM ) ;
 828: LD_EXP 1
 832: PPUSH
 833: LD_STRING 10_JMM
 835: PPUSH
 836: CALL_OW 38
// SaveCharacters ( others , OthersIn10 ) ;
 840: LD_VAR 0 2
 844: PPUSH
 845: LD_STRING OthersIn10
 847: PPUSH
 848: CALL_OW 38
// SaveCharacters ( others08 , 10_lock ) ;
 852: LD_EXP 11
 856: PPUSH
 857: LD_STRING 10_lock
 859: PPUSH
 860: CALL_OW 38
// ToLua ( enableBioCharacter(BIO_POW) ) ;
 864: LD_STRING enableBioCharacter(BIO_POW)
 866: PPUSH
 867: CALL_OW 559
// ToLua ( enableBioCharacter(BIO_CATH) ) ;
 871: LD_STRING enableBioCharacter(BIO_CATH)
 873: PPUSH
 874: CALL_OW 559
// ChangeMap ( 10 , %_cont ) ;
 878: LD_INT 10
 880: PPUSH
 881: LD_STRING %_cont
 883: PPUSH
 884: CALL_OW 340
// end ;
 888: LD_VAR 0 1
 892: RET
// every 0 0$1 trigger FilterUnitsInArea ( removeCar , [ f_side , 1 ] ) do var i ;
 893: LD_INT 12
 895: PPUSH
 896: LD_INT 22
 898: PUSH
 899: LD_INT 1
 901: PUSH
 902: EMPTY
 903: LIST
 904: LIST
 905: PPUSH
 906: CALL_OW 70
 910: IFFALSE 958
 912: GO 914
 914: DISABLE
 915: LD_INT 0
 917: PPUSH
// begin enable ;
 918: ENABLE
// for i in FilterUnitsInArea ( removeCar , [ f_side , 1 ] ) do
 919: LD_ADDR_VAR 0 1
 923: PUSH
 924: LD_INT 12
 926: PPUSH
 927: LD_INT 22
 929: PUSH
 930: LD_INT 1
 932: PUSH
 933: EMPTY
 934: LIST
 935: LIST
 936: PPUSH
 937: CALL_OW 70
 941: PUSH
 942: FOR_IN
 943: IFFALSE 956
// RemoveUnit ( i ) ;
 945: LD_VAR 0 1
 949: PPUSH
 950: CALL_OW 64
 954: GO 942
 956: POP
 957: POP
// end ; end_of_file
 958: PPOPN 1
 960: END
// export function PrepareHeroes ; var i , un ; begin
 961: LD_INT 0
 963: PPUSH
 964: PPUSH
 965: PPUSH
// uc_side := 1 ;
 966: LD_ADDR_OWVAR 20
 970: PUSH
 971: LD_INT 1
 973: ST_TO_ADDR
// uc_nation := 1 ;
 974: LD_ADDR_OWVAR 21
 978: PUSH
 979: LD_INT 1
 981: ST_TO_ADDR
// JMM := PrepareUnit ( 09_JMM , true ) ;
 982: LD_ADDR_EXP 1
 986: PUSH
 987: LD_STRING 09_JMM
 989: PPUSH
 990: LD_INT 1
 992: PPUSH
 993: CALL 5015 0 2
 997: ST_TO_ADDR
// Powell := PrepareUnit ( Powell , false ) ;
 998: LD_ADDR_EXP 2
1002: PUSH
1003: LD_STRING Powell
1005: PPUSH
1006: LD_INT 0
1008: PPUSH
1009: CALL 5015 0 2
1013: ST_TO_ADDR
// Bobby := PrepareUnit ( 09_Bobby , true ) ;
1014: LD_ADDR_EXP 5
1018: PUSH
1019: LD_STRING 09_Bobby
1021: PPUSH
1022: LD_INT 1
1024: PPUSH
1025: CALL 5015 0 2
1029: ST_TO_ADDR
// if Bobby then
1030: LD_EXP 5
1034: IFFALSE 1105
// begin SaveCharacters ( Bobby , 10_Bobby ) ;
1036: LD_EXP 5
1040: PPUSH
1041: LD_STRING 10_Bobby
1043: PPUSH
1044: CALL_OW 38
// PlaceUnitArea ( Bobby , CoreHeroes , false ) ;
1048: LD_EXP 5
1052: PPUSH
1053: LD_INT 10
1055: PPUSH
1056: LD_INT 0
1058: PPUSH
1059: CALL_OW 49
// ComTurnXY ( Bobby , 42 , 35 ) ;
1063: LD_EXP 5
1067: PPUSH
1068: LD_INT 42
1070: PPUSH
1071: LD_INT 35
1073: PPUSH
1074: CALL_OW 118
// if IsPlaced ( Bobby ) then
1078: LD_EXP 5
1082: PPUSH
1083: CALL_OW 305
1087: IFFALSE 1105
// coreHeroesTab := coreHeroesTab ^ Bobby ;
1089: LD_ADDR_EXP 14
1093: PUSH
1094: LD_EXP 14
1098: PUSH
1099: LD_EXP 5
1103: ADD
1104: ST_TO_ADDR
// end ; Brown := PrepareUnit ( 08_Brown , true ) ;
1105: LD_ADDR_EXP 3
1109: PUSH
1110: LD_STRING 08_Brown
1112: PPUSH
1113: LD_INT 1
1115: PPUSH
1116: CALL 5015 0 2
1120: ST_TO_ADDR
// if Brown then
1121: LD_EXP 3
1125: IFFALSE 1208
// begin SaveCharacters ( Brown , 10_Brown ) ;
1127: LD_EXP 3
1131: PPUSH
1132: LD_STRING 10_Brown
1134: PPUSH
1135: CALL_OW 38
// if not IsPlaced ( Bobby ) and IsPlaced ( Brown ) then
1139: LD_EXP 5
1143: PPUSH
1144: CALL_OW 305
1148: NOT
1149: PUSH
1150: LD_EXP 3
1154: PPUSH
1155: CALL_OW 305
1159: AND
1160: IFFALSE 1208
// begin PlaceUnitArea ( Brown , CoreHeroes , false ) ;
1162: LD_EXP 3
1166: PPUSH
1167: LD_INT 10
1169: PPUSH
1170: LD_INT 0
1172: PPUSH
1173: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
1177: LD_EXP 3
1181: PPUSH
1182: LD_INT 42
1184: PPUSH
1185: LD_INT 35
1187: PPUSH
1188: CALL_OW 118
// coreHeroesTab := coreHeroesTab ^ Brown ;
1192: LD_ADDR_EXP 14
1196: PUSH
1197: LD_EXP 14
1201: PUSH
1202: LD_EXP 3
1206: ADD
1207: ST_TO_ADDR
// end ; end ; Donaldson := PrepareUnit ( 08_Donaldson , true ) ;
1208: LD_ADDR_EXP 4
1212: PUSH
1213: LD_STRING 08_Donaldson
1215: PPUSH
1216: LD_INT 1
1218: PPUSH
1219: CALL 5015 0 2
1223: ST_TO_ADDR
// if Donaldson then
1224: LD_EXP 4
1228: IFFALSE 1323
// begin SaveCharacters ( Donaldson , 10_Donaldson ) ;
1230: LD_EXP 4
1234: PPUSH
1235: LD_STRING 10_Donaldson
1237: PPUSH
1238: CALL_OW 38
// if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) then
1242: LD_EXP 5
1246: PPUSH
1247: CALL_OW 305
1251: NOT
1252: PUSH
1253: LD_EXP 3
1257: PPUSH
1258: CALL_OW 305
1262: NOT
1263: AND
1264: IFFALSE 1323
// begin PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
1266: LD_EXP 4
1270: PPUSH
1271: LD_INT 10
1273: PPUSH
1274: LD_INT 0
1276: PPUSH
1277: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
1281: LD_EXP 4
1285: PPUSH
1286: LD_INT 42
1288: PPUSH
1289: LD_INT 35
1291: PPUSH
1292: CALL_OW 118
// if IsPlaced ( Donaldson ) then
1296: LD_EXP 4
1300: PPUSH
1301: CALL_OW 305
1305: IFFALSE 1323
// coreHeroesTab := coreHeroesTab ^ Donaldson ;
1307: LD_ADDR_EXP 14
1311: PUSH
1312: LD_EXP 14
1316: PUSH
1317: LD_EXP 4
1321: ADD
1322: ST_TO_ADDR
// end ; end ; Frank := PrepareUnit ( 08_Frank , true ) ;
1323: LD_ADDR_EXP 8
1327: PUSH
1328: LD_STRING 08_Frank
1330: PPUSH
1331: LD_INT 1
1333: PPUSH
1334: CALL 5015 0 2
1338: ST_TO_ADDR
// if Frank then
1339: LD_EXP 8
1343: IFFALSE 1450
// begin SaveCharacters ( Frank , 10_Frank ) ;
1345: LD_EXP 8
1349: PPUSH
1350: LD_STRING 10_Frank
1352: PPUSH
1353: CALL_OW 38
// if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
1357: LD_EXP 5
1361: PPUSH
1362: CALL_OW 305
1366: NOT
1367: PUSH
1368: LD_EXP 3
1372: PPUSH
1373: CALL_OW 305
1377: NOT
1378: AND
1379: PUSH
1380: LD_EXP 4
1384: PPUSH
1385: CALL_OW 305
1389: NOT
1390: AND
1391: IFFALSE 1450
// begin PlaceUnitArea ( Frank , CoreHeroes , false ) ;
1393: LD_EXP 8
1397: PPUSH
1398: LD_INT 10
1400: PPUSH
1401: LD_INT 0
1403: PPUSH
1404: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
1408: LD_EXP 8
1412: PPUSH
1413: LD_INT 42
1415: PPUSH
1416: LD_INT 35
1418: PPUSH
1419: CALL_OW 118
// if IsPlaced ( Frank ) then
1423: LD_EXP 8
1427: PPUSH
1428: CALL_OW 305
1432: IFFALSE 1450
// coreHeroesTab := coreHeroesTab ^ Frank ;
1434: LD_ADDR_EXP 14
1438: PUSH
1439: LD_EXP 14
1443: PUSH
1444: LD_EXP 8
1448: ADD
1449: ST_TO_ADDR
// end ; end ; Houten := PrepareUnit ( 09_Houten , true ) ;
1450: LD_ADDR_EXP 9
1454: PUSH
1455: LD_STRING 09_Houten
1457: PPUSH
1458: LD_INT 1
1460: PPUSH
1461: CALL 5015 0 2
1465: ST_TO_ADDR
// if Houten then
1466: LD_EXP 9
1470: IFFALSE 1589
// begin SaveCharacters ( Houten , 10_Houten ) ;
1472: LD_EXP 9
1476: PPUSH
1477: LD_STRING 10_Houten
1479: PPUSH
1480: CALL_OW 38
// if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
1484: LD_EXP 5
1488: PPUSH
1489: CALL_OW 305
1493: NOT
1494: PUSH
1495: LD_EXP 3
1499: PPUSH
1500: CALL_OW 305
1504: NOT
1505: AND
1506: PUSH
1507: LD_EXP 4
1511: PPUSH
1512: CALL_OW 305
1516: NOT
1517: AND
1518: PUSH
1519: LD_EXP 8
1523: PPUSH
1524: CALL_OW 305
1528: NOT
1529: AND
1530: IFFALSE 1589
// begin PlaceUnitArea ( Houten , CoreHeroes , false ) ;
1532: LD_EXP 9
1536: PPUSH
1537: LD_INT 10
1539: PPUSH
1540: LD_INT 0
1542: PPUSH
1543: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
1547: LD_EXP 9
1551: PPUSH
1552: LD_INT 42
1554: PPUSH
1555: LD_INT 35
1557: PPUSH
1558: CALL_OW 118
// if IsPlaced ( Houten ) then
1562: LD_EXP 9
1566: PPUSH
1567: CALL_OW 305
1571: IFFALSE 1589
// coreHeroesTab := coreHeroesTab ^ Houten ;
1573: LD_ADDR_EXP 14
1577: PUSH
1578: LD_EXP 14
1582: PUSH
1583: LD_EXP 9
1587: ADD
1588: ST_TO_ADDR
// end ; end ; Cyrus := PrepareUnit ( 09_Cyrus , true ) ;
1589: LD_ADDR_EXP 6
1593: PUSH
1594: LD_STRING 09_Cyrus
1596: PPUSH
1597: LD_INT 1
1599: PPUSH
1600: CALL 5015 0 2
1604: ST_TO_ADDR
// if Cyrus then
1605: LD_EXP 6
1609: IFFALSE 1669
// begin PlaceUnitArea ( Cyrus , CoreHeroes , false ) ;
1611: LD_EXP 6
1615: PPUSH
1616: LD_INT 10
1618: PPUSH
1619: LD_INT 0
1621: PPUSH
1622: CALL_OW 49
// ComTurnXY ( Cyrus , 42 , 35 ) ;
1626: LD_EXP 6
1630: PPUSH
1631: LD_INT 42
1633: PPUSH
1634: LD_INT 35
1636: PPUSH
1637: CALL_OW 118
// coreHeroesTab := coreHeroesTab ^ Cyrus ;
1641: LD_ADDR_EXP 14
1645: PUSH
1646: LD_EXP 14
1650: PUSH
1651: LD_EXP 6
1655: ADD
1656: ST_TO_ADDR
// SaveCharacters ( Cyrus , 10_Cyrus ) ;
1657: LD_EXP 6
1661: PPUSH
1662: LD_STRING 10_Cyrus
1664: PPUSH
1665: CALL_OW 38
// end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and Brown then
1669: LD_EXP 6
1673: PPUSH
1674: CALL_OW 305
1678: NOT
1679: PUSH
1680: LD_EXP 3
1684: PPUSH
1685: CALL_OW 305
1689: NOT
1690: AND
1691: PUSH
1692: LD_EXP 3
1696: AND
1697: IFFALSE 1756
// begin PlaceUnitArea ( Brown , CoreHeroes , false ) ;
1699: LD_EXP 3
1703: PPUSH
1704: LD_INT 10
1706: PPUSH
1707: LD_INT 0
1709: PPUSH
1710: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
1714: LD_EXP 3
1718: PPUSH
1719: LD_INT 42
1721: PPUSH
1722: LD_INT 35
1724: PPUSH
1725: CALL_OW 118
// if IsPlaced ( Brown ) then
1729: LD_EXP 3
1733: PPUSH
1734: CALL_OW 305
1738: IFFALSE 1756
// coreHeroesTab := coreHeroesTab ^ Brown ;
1740: LD_ADDR_EXP 14
1744: PUSH
1745: LD_EXP 14
1749: PUSH
1750: LD_EXP 3
1754: ADD
1755: ST_TO_ADDR
// end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and Donaldson then
1756: LD_EXP 6
1760: PPUSH
1761: CALL_OW 305
1765: NOT
1766: PUSH
1767: LD_EXP 3
1771: PPUSH
1772: CALL_OW 305
1776: NOT
1777: AND
1778: PUSH
1779: LD_EXP 4
1783: PPUSH
1784: CALL_OW 305
1788: NOT
1789: AND
1790: PUSH
1791: LD_EXP 4
1795: AND
1796: IFFALSE 1855
// begin PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
1798: LD_EXP 4
1802: PPUSH
1803: LD_INT 10
1805: PPUSH
1806: LD_INT 0
1808: PPUSH
1809: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
1813: LD_EXP 4
1817: PPUSH
1818: LD_INT 42
1820: PPUSH
1821: LD_INT 35
1823: PPUSH
1824: CALL_OW 118
// if IsPlaced ( Donaldson ) then
1828: LD_EXP 4
1832: PPUSH
1833: CALL_OW 305
1837: IFFALSE 1855
// begin coreHeroesTab := coreHeroesTab ^ Donaldson ;
1839: LD_ADDR_EXP 14
1843: PUSH
1844: LD_EXP 14
1848: PUSH
1849: LD_EXP 4
1853: ADD
1854: ST_TO_ADDR
// end ; end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and Frank then
1855: LD_EXP 6
1859: PPUSH
1860: CALL_OW 305
1864: NOT
1865: PUSH
1866: LD_EXP 3
1870: PPUSH
1871: CALL_OW 305
1875: NOT
1876: AND
1877: PUSH
1878: LD_EXP 4
1882: PPUSH
1883: CALL_OW 305
1887: NOT
1888: AND
1889: PUSH
1890: LD_EXP 8
1894: PPUSH
1895: CALL_OW 305
1899: NOT
1900: AND
1901: PUSH
1902: LD_EXP 8
1906: AND
1907: IFFALSE 1966
// begin PlaceUnitArea ( Frank , CoreHeroes , false ) ;
1909: LD_EXP 8
1913: PPUSH
1914: LD_INT 10
1916: PPUSH
1917: LD_INT 0
1919: PPUSH
1920: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
1924: LD_EXP 8
1928: PPUSH
1929: LD_INT 42
1931: PPUSH
1932: LD_INT 35
1934: PPUSH
1935: CALL_OW 118
// if IsPlaced ( Frank ) then
1939: LD_EXP 8
1943: PPUSH
1944: CALL_OW 305
1948: IFFALSE 1966
// coreHeroesTab := coreHeroesTab ^ Frank ;
1950: LD_ADDR_EXP 14
1954: PUSH
1955: LD_EXP 14
1959: PUSH
1960: LD_EXP 8
1964: ADD
1965: ST_TO_ADDR
// end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) and Houten then
1966: LD_EXP 6
1970: PPUSH
1971: CALL_OW 305
1975: NOT
1976: PUSH
1977: LD_EXP 3
1981: PPUSH
1982: CALL_OW 305
1986: NOT
1987: AND
1988: PUSH
1989: LD_EXP 4
1993: PPUSH
1994: CALL_OW 305
1998: NOT
1999: AND
2000: PUSH
2001: LD_EXP 8
2005: PPUSH
2006: CALL_OW 305
2010: NOT
2011: AND
2012: PUSH
2013: LD_EXP 9
2017: PPUSH
2018: CALL_OW 305
2022: NOT
2023: AND
2024: PUSH
2025: LD_EXP 9
2029: AND
2030: IFFALSE 2089
// begin PlaceUnitArea ( Houten , CoreHeroes , false ) ;
2032: LD_EXP 9
2036: PPUSH
2037: LD_INT 10
2039: PPUSH
2040: LD_INT 0
2042: PPUSH
2043: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
2047: LD_EXP 9
2051: PPUSH
2052: LD_INT 42
2054: PPUSH
2055: LD_INT 35
2057: PPUSH
2058: CALL_OW 118
// if IsPlaced ( Houten ) then
2062: LD_EXP 9
2066: PPUSH
2067: CALL_OW 305
2071: IFFALSE 2089
// coreHeroesTab := coreHeroesTab ^ Houten ;
2073: LD_ADDR_EXP 14
2077: PUSH
2078: LD_EXP 14
2082: PUSH
2083: LD_EXP 9
2087: ADD
2088: ST_TO_ADDR
// end ; Lisa := PrepareUnit ( 08_Lisa , true ) ;
2089: LD_ADDR_EXP 7
2093: PUSH
2094: LD_STRING 08_Lisa
2096: PPUSH
2097: LD_INT 1
2099: PPUSH
2100: CALL 5015 0 2
2104: ST_TO_ADDR
// if Lisa then
2105: LD_EXP 7
2109: IFFALSE 2180
// begin SaveCharacters ( Lisa , 10_Lisa ) ;
2111: LD_EXP 7
2115: PPUSH
2116: LD_STRING 10_Lisa
2118: PPUSH
2119: CALL_OW 38
// PlaceUnitArea ( Lisa , CoreHeroes , false ) ;
2123: LD_EXP 7
2127: PPUSH
2128: LD_INT 10
2130: PPUSH
2131: LD_INT 0
2133: PPUSH
2134: CALL_OW 49
// ComTurnXY ( Lisa , 42 , 35 ) ;
2138: LD_EXP 7
2142: PPUSH
2143: LD_INT 42
2145: PPUSH
2146: LD_INT 35
2148: PPUSH
2149: CALL_OW 118
// if IsPlaced ( Lisa ) then
2153: LD_EXP 7
2157: PPUSH
2158: CALL_OW 305
2162: IFFALSE 2180
// coreHeroesTab := coreHeroesTab ^ Lisa ;
2164: LD_ADDR_EXP 14
2168: PUSH
2169: LD_EXP 14
2173: PUSH
2174: LD_EXP 7
2178: ADD
2179: ST_TO_ADDR
// end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and Brown then
2180: LD_EXP 7
2184: PPUSH
2185: CALL_OW 305
2189: NOT
2190: PUSH
2191: LD_EXP 3
2195: PPUSH
2196: CALL_OW 305
2200: NOT
2201: AND
2202: PUSH
2203: LD_EXP 3
2207: AND
2208: IFFALSE 2267
// begin PlaceUnitArea ( Brown , CoreHeroes , false ) ;
2210: LD_EXP 3
2214: PPUSH
2215: LD_INT 10
2217: PPUSH
2218: LD_INT 0
2220: PPUSH
2221: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
2225: LD_EXP 3
2229: PPUSH
2230: LD_INT 42
2232: PPUSH
2233: LD_INT 35
2235: PPUSH
2236: CALL_OW 118
// if IsPlaced ( Brown ) then
2240: LD_EXP 3
2244: PPUSH
2245: CALL_OW 305
2249: IFFALSE 2267
// coreHeroesTab := coreHeroesTab ^ Brown ;
2251: LD_ADDR_EXP 14
2255: PUSH
2256: LD_EXP 14
2260: PUSH
2261: LD_EXP 3
2265: ADD
2266: ST_TO_ADDR
// end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and Donaldson then
2267: LD_EXP 7
2271: PPUSH
2272: CALL_OW 305
2276: NOT
2277: PUSH
2278: LD_EXP 3
2282: PPUSH
2283: CALL_OW 305
2287: NOT
2288: AND
2289: PUSH
2290: LD_EXP 4
2294: PPUSH
2295: CALL_OW 305
2299: NOT
2300: AND
2301: PUSH
2302: LD_EXP 4
2306: AND
2307: IFFALSE 2366
// begin PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
2309: LD_EXP 4
2313: PPUSH
2314: LD_INT 10
2316: PPUSH
2317: LD_INT 0
2319: PPUSH
2320: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
2324: LD_EXP 4
2328: PPUSH
2329: LD_INT 42
2331: PPUSH
2332: LD_INT 35
2334: PPUSH
2335: CALL_OW 118
// if IsPlaced ( Donaldson ) then
2339: LD_EXP 4
2343: PPUSH
2344: CALL_OW 305
2348: IFFALSE 2366
// coreHeroesTab := coreHeroesTab ^ Donaldson ;
2350: LD_ADDR_EXP 14
2354: PUSH
2355: LD_EXP 14
2359: PUSH
2360: LD_EXP 4
2364: ADD
2365: ST_TO_ADDR
// end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and Frank then
2366: LD_EXP 7
2370: PPUSH
2371: CALL_OW 305
2375: NOT
2376: PUSH
2377: LD_EXP 3
2381: PPUSH
2382: CALL_OW 305
2386: NOT
2387: AND
2388: PUSH
2389: LD_EXP 4
2393: PPUSH
2394: CALL_OW 305
2398: NOT
2399: AND
2400: PUSH
2401: LD_EXP 8
2405: PPUSH
2406: CALL_OW 305
2410: NOT
2411: AND
2412: PUSH
2413: LD_EXP 8
2417: AND
2418: IFFALSE 2477
// begin PlaceUnitArea ( Frank , CoreHeroes , false ) ;
2420: LD_EXP 8
2424: PPUSH
2425: LD_INT 10
2427: PPUSH
2428: LD_INT 0
2430: PPUSH
2431: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
2435: LD_EXP 8
2439: PPUSH
2440: LD_INT 42
2442: PPUSH
2443: LD_INT 35
2445: PPUSH
2446: CALL_OW 118
// if IsPlaced ( Frank ) then
2450: LD_EXP 8
2454: PPUSH
2455: CALL_OW 305
2459: IFFALSE 2477
// coreHeroesTab := coreHeroesTab ^ Frank ;
2461: LD_ADDR_EXP 14
2465: PUSH
2466: LD_EXP 14
2470: PUSH
2471: LD_EXP 8
2475: ADD
2476: ST_TO_ADDR
// end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) and Houten then
2477: LD_EXP 7
2481: PPUSH
2482: CALL_OW 305
2486: NOT
2487: PUSH
2488: LD_EXP 3
2492: PPUSH
2493: CALL_OW 305
2497: NOT
2498: AND
2499: PUSH
2500: LD_EXP 4
2504: PPUSH
2505: CALL_OW 305
2509: NOT
2510: AND
2511: PUSH
2512: LD_EXP 8
2516: PPUSH
2517: CALL_OW 305
2521: NOT
2522: AND
2523: PUSH
2524: LD_EXP 9
2528: PPUSH
2529: CALL_OW 305
2533: NOT
2534: AND
2535: PUSH
2536: LD_EXP 9
2540: AND
2541: IFFALSE 2600
// begin PlaceUnitArea ( Houten , CoreHeroes , false ) ;
2543: LD_EXP 9
2547: PPUSH
2548: LD_INT 10
2550: PPUSH
2551: LD_INT 0
2553: PPUSH
2554: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
2558: LD_EXP 9
2562: PPUSH
2563: LD_INT 42
2565: PPUSH
2566: LD_INT 35
2568: PPUSH
2569: CALL_OW 118
// if IsPlaced ( Houten ) then
2573: LD_EXP 9
2577: PPUSH
2578: CALL_OW 305
2582: IFFALSE 2600
// coreHeroesTab := coreHeroesTab ^ Houten ;
2584: LD_ADDR_EXP 14
2588: PUSH
2589: LD_EXP 14
2593: PUSH
2594: LD_EXP 9
2598: ADD
2599: ST_TO_ADDR
// end ; Gary := PrepareUnit ( 09_Gary , true ) ;
2600: LD_ADDR_EXP 10
2604: PUSH
2605: LD_STRING 09_Gary
2607: PPUSH
2608: LD_INT 1
2610: PPUSH
2611: CALL 5015 0 2
2615: ST_TO_ADDR
// if Gary then
2616: LD_EXP 10
2620: IFFALSE 2691
// begin SaveCharacters ( Gary , 10_Gary ) ;
2622: LD_EXP 10
2626: PPUSH
2627: LD_STRING 10_Gary
2629: PPUSH
2630: CALL_OW 38
// PlaceUnitArea ( Gary , CoreHeroes , false ) ;
2634: LD_EXP 10
2638: PPUSH
2639: LD_INT 10
2641: PPUSH
2642: LD_INT 0
2644: PPUSH
2645: CALL_OW 49
// ComTurnXY ( Gary , 42 , 35 ) ;
2649: LD_EXP 10
2653: PPUSH
2654: LD_INT 42
2656: PPUSH
2657: LD_INT 35
2659: PPUSH
2660: CALL_OW 118
// if IsPlaced ( Gary ) then
2664: LD_EXP 10
2668: PPUSH
2669: CALL_OW 305
2673: IFFALSE 2691
// coreHeroesTab := coreHeroesTab ^ Gary ;
2675: LD_ADDR_EXP 14
2679: PUSH
2680: LD_EXP 14
2684: PUSH
2685: LD_EXP 10
2689: ADD
2690: ST_TO_ADDR
// end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) and Brown then
2691: LD_EXP 10
2695: PPUSH
2696: CALL_OW 305
2700: NOT
2701: PUSH
2702: LD_EXP 3
2706: PPUSH
2707: CALL_OW 305
2711: NOT
2712: AND
2713: PUSH
2714: LD_EXP 3
2718: AND
2719: IFFALSE 2778
// begin PlaceUnitArea ( Brown , CoreHeroes , false ) ;
2721: LD_EXP 3
2725: PPUSH
2726: LD_INT 10
2728: PPUSH
2729: LD_INT 0
2731: PPUSH
2732: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
2736: LD_EXP 3
2740: PPUSH
2741: LD_INT 42
2743: PPUSH
2744: LD_INT 35
2746: PPUSH
2747: CALL_OW 118
// if IsPlaced ( Brown ) then
2751: LD_EXP 3
2755: PPUSH
2756: CALL_OW 305
2760: IFFALSE 2778
// coreHeroesTab := coreHeroesTab ^ Brown ;
2762: LD_ADDR_EXP 14
2766: PUSH
2767: LD_EXP 14
2771: PUSH
2772: LD_EXP 3
2776: ADD
2777: ST_TO_ADDR
// end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and Donaldson then
2778: LD_EXP 10
2782: PPUSH
2783: CALL_OW 305
2787: NOT
2788: PUSH
2789: LD_EXP 3
2793: PPUSH
2794: CALL_OW 305
2798: NOT
2799: AND
2800: PUSH
2801: LD_EXP 4
2805: PPUSH
2806: CALL_OW 305
2810: NOT
2811: AND
2812: PUSH
2813: LD_EXP 4
2817: AND
2818: IFFALSE 2877
// begin PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
2820: LD_EXP 4
2824: PPUSH
2825: LD_INT 10
2827: PPUSH
2828: LD_INT 0
2830: PPUSH
2831: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
2835: LD_EXP 4
2839: PPUSH
2840: LD_INT 42
2842: PPUSH
2843: LD_INT 35
2845: PPUSH
2846: CALL_OW 118
// if IsPlaced ( Donaldson ) then
2850: LD_EXP 4
2854: PPUSH
2855: CALL_OW 305
2859: IFFALSE 2877
// coreHeroesTab := coreHeroesTab ^ Donaldson ;
2861: LD_ADDR_EXP 14
2865: PUSH
2866: LD_EXP 14
2870: PUSH
2871: LD_EXP 4
2875: ADD
2876: ST_TO_ADDR
// end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and Frank then
2877: LD_EXP 10
2881: PPUSH
2882: CALL_OW 305
2886: NOT
2887: PUSH
2888: LD_EXP 3
2892: PPUSH
2893: CALL_OW 305
2897: NOT
2898: AND
2899: PUSH
2900: LD_EXP 4
2904: PPUSH
2905: CALL_OW 305
2909: NOT
2910: AND
2911: PUSH
2912: LD_EXP 8
2916: PPUSH
2917: CALL_OW 305
2921: NOT
2922: AND
2923: PUSH
2924: LD_EXP 8
2928: AND
2929: IFFALSE 2988
// begin PlaceUnitArea ( Frank , CoreHeroes , false ) ;
2931: LD_EXP 8
2935: PPUSH
2936: LD_INT 10
2938: PPUSH
2939: LD_INT 0
2941: PPUSH
2942: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
2946: LD_EXP 8
2950: PPUSH
2951: LD_INT 42
2953: PPUSH
2954: LD_INT 35
2956: PPUSH
2957: CALL_OW 118
// if IsPlaced ( Frank ) then
2961: LD_EXP 8
2965: PPUSH
2966: CALL_OW 305
2970: IFFALSE 2988
// coreHeroesTab := coreHeroesTab ^ Frank ;
2972: LD_ADDR_EXP 14
2976: PUSH
2977: LD_EXP 14
2981: PUSH
2982: LD_EXP 8
2986: ADD
2987: ST_TO_ADDR
// end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) and Houten then
2988: LD_EXP 10
2992: PPUSH
2993: CALL_OW 305
2997: NOT
2998: PUSH
2999: LD_EXP 3
3003: PPUSH
3004: CALL_OW 305
3008: NOT
3009: AND
3010: PUSH
3011: LD_EXP 4
3015: PPUSH
3016: CALL_OW 305
3020: NOT
3021: AND
3022: PUSH
3023: LD_EXP 8
3027: PPUSH
3028: CALL_OW 305
3032: NOT
3033: AND
3034: PUSH
3035: LD_EXP 9
3039: PPUSH
3040: CALL_OW 305
3044: NOT
3045: AND
3046: PUSH
3047: LD_EXP 9
3051: AND
3052: IFFALSE 3111
// begin PlaceUnitArea ( Houten , CoreHeroes , false ) ;
3054: LD_EXP 9
3058: PPUSH
3059: LD_INT 10
3061: PPUSH
3062: LD_INT 0
3064: PPUSH
3065: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
3069: LD_EXP 9
3073: PPUSH
3074: LD_INT 42
3076: PPUSH
3077: LD_INT 35
3079: PPUSH
3080: CALL_OW 118
// if IsPlaced ( Houten ) then
3084: LD_EXP 9
3088: PPUSH
3089: CALL_OW 305
3093: IFFALSE 3111
// coreHeroesTab := coreHeroesTab ^ Houten ;
3095: LD_ADDR_EXP 14
3099: PUSH
3100: LD_EXP 14
3104: PUSH
3105: LD_EXP 9
3109: ADD
3110: ST_TO_ADDR
// end ; for i := 1 to 5 - coreHeroesTab do
3111: LD_ADDR_VAR 0 2
3115: PUSH
3116: DOUBLE
3117: LD_INT 1
3119: DEC
3120: ST_TO_ADDR
3121: LD_INT 5
3123: PUSH
3124: LD_EXP 14
3128: MINUS
3129: PUSH
3130: FOR_TO
3131: IFFALSE 3255
// begin hc_gallery =  ;
3133: LD_ADDR_OWVAR 33
3137: PUSH
3138: LD_STRING 
3140: ST_TO_ADDR
// hc_name =  ;
3141: LD_ADDR_OWVAR 26
3145: PUSH
3146: LD_STRING 
3148: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
3149: LD_INT 0
3151: PPUSH
3152: LD_INT 1
3154: PUSH
3155: LD_INT 2
3157: PUSH
3158: LD_INT 3
3160: PUSH
3161: LD_INT 4
3163: PUSH
3164: EMPTY
3165: LIST
3166: LIST
3167: LIST
3168: LIST
3169: PUSH
3170: LD_INT 1
3172: PPUSH
3173: LD_INT 4
3175: PPUSH
3176: CALL_OW 12
3180: ARRAY
3181: PPUSH
3182: LD_INT 4
3184: PPUSH
3185: LD_INT 6
3187: PPUSH
3188: CALL_OW 12
3192: PPUSH
3193: CALL_OW 380
// un := CreateHuman ;
3197: LD_ADDR_VAR 0 3
3201: PUSH
3202: CALL_OW 44
3206: ST_TO_ADDR
// coreHeroesTab := coreHeroesTab ^ un ;
3207: LD_ADDR_EXP 14
3211: PUSH
3212: LD_EXP 14
3216: PUSH
3217: LD_VAR 0 3
3221: ADD
3222: ST_TO_ADDR
// PlaceUnitArea ( un , CoreHeroes , false ) ;
3223: LD_VAR 0 3
3227: PPUSH
3228: LD_INT 10
3230: PPUSH
3231: LD_INT 0
3233: PPUSH
3234: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
3238: LD_VAR 0 3
3242: PPUSH
3243: LD_INT 42
3245: PPUSH
3246: LD_INT 35
3248: PPUSH
3249: CALL_OW 118
// end ;
3253: GO 3130
3255: POP
3256: POP
// siberite := LoadVariable ( 09_SibRes , 0 ) ;
3257: LD_ADDR_EXP 17
3261: PUSH
3262: LD_STRING 09_SibRes
3264: PPUSH
3265: LD_INT 0
3267: PPUSH
3268: CALL_OW 30
3272: ST_TO_ADDR
// if siberite > 500 then
3273: LD_EXP 17
3277: PUSH
3278: LD_INT 500
3280: GREATER
3281: IFFALSE 3291
// siberite := 500 ;
3283: LD_ADDR_EXP 17
3287: PUSH
3288: LD_INT 500
3290: ST_TO_ADDR
// others08 := CreateCharacterSet ( 08_other_survivors ) ;
3291: LD_ADDR_EXP 11
3295: PUSH
3296: LD_STRING 08_other_survivors
3298: PPUSH
3299: CALL_OW 31
3303: ST_TO_ADDR
// if siberite >= 200 then
3304: LD_EXP 17
3308: PUSH
3309: LD_INT 200
3311: GREATEREQUAL
3312: IFFALSE 4195
// begin if not IsPlaced ( Brown ) and Brown then
3314: LD_EXP 3
3318: PPUSH
3319: CALL_OW 305
3323: NOT
3324: PUSH
3325: LD_EXP 3
3329: AND
3330: IFFALSE 3389
// begin PlaceUnitArea ( Brown , AddHeroes , false ) ;
3332: LD_EXP 3
3336: PPUSH
3337: LD_INT 11
3339: PPUSH
3340: LD_INT 0
3342: PPUSH
3343: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
3347: LD_EXP 3
3351: PPUSH
3352: LD_INT 42
3354: PPUSH
3355: LD_INT 35
3357: PPUSH
3358: CALL_OW 118
// if IsPlaced ( Brown ) then
3362: LD_EXP 3
3366: PPUSH
3367: CALL_OW 305
3371: IFFALSE 3389
// addHeroesTab := addHeroesTab ^ Brown ;
3373: LD_ADDR_EXP 15
3377: PUSH
3378: LD_EXP 15
3382: PUSH
3383: LD_EXP 3
3387: ADD
3388: ST_TO_ADDR
// end ; if not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and Donaldson then
3389: LD_EXP 3
3393: PPUSH
3394: CALL_OW 305
3398: NOT
3399: PUSH
3400: LD_EXP 4
3404: PPUSH
3405: CALL_OW 305
3409: NOT
3410: AND
3411: PUSH
3412: LD_EXP 4
3416: AND
3417: IFFALSE 3476
// begin PlaceUnitArea ( Donaldson , addHeroes , false ) ;
3419: LD_EXP 4
3423: PPUSH
3424: LD_INT 11
3426: PPUSH
3427: LD_INT 0
3429: PPUSH
3430: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
3434: LD_EXP 4
3438: PPUSH
3439: LD_INT 42
3441: PPUSH
3442: LD_INT 35
3444: PPUSH
3445: CALL_OW 118
// if IsPlaced ( Donaldson ) then
3449: LD_EXP 4
3453: PPUSH
3454: CALL_OW 305
3458: IFFALSE 3476
// addHeroesTab := addHeroesTab ^ Donaldson ;
3460: LD_ADDR_EXP 15
3464: PUSH
3465: LD_EXP 15
3469: PUSH
3470: LD_EXP 4
3474: ADD
3475: ST_TO_ADDR
// end ; if not IsPlaced ( Brown ) and not IsPlaced ( Frank ) and Frank then
3476: LD_EXP 3
3480: PPUSH
3481: CALL_OW 305
3485: NOT
3486: PUSH
3487: LD_EXP 8
3491: PPUSH
3492: CALL_OW 305
3496: NOT
3497: AND
3498: PUSH
3499: LD_EXP 8
3503: AND
3504: IFFALSE 3563
// begin PlaceUnitArea ( Frank , addHeroes , false ) ;
3506: LD_EXP 8
3510: PPUSH
3511: LD_INT 11
3513: PPUSH
3514: LD_INT 0
3516: PPUSH
3517: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
3521: LD_EXP 8
3525: PPUSH
3526: LD_INT 42
3528: PPUSH
3529: LD_INT 35
3531: PPUSH
3532: CALL_OW 118
// if IsPlaced ( Frank ) then
3536: LD_EXP 8
3540: PPUSH
3541: CALL_OW 305
3545: IFFALSE 3563
// addHeroesTab := addHeroesTab ^ Frank ;
3547: LD_ADDR_EXP 15
3551: PUSH
3552: LD_EXP 15
3556: PUSH
3557: LD_EXP 8
3561: ADD
3562: ST_TO_ADDR
// end ; if not IsPlaced ( Brown ) and not IsPlaced ( Houten ) then
3563: LD_EXP 3
3567: PPUSH
3568: CALL_OW 305
3572: NOT
3573: PUSH
3574: LD_EXP 9
3578: PPUSH
3579: CALL_OW 305
3583: NOT
3584: AND
3585: IFFALSE 3646
// begin PlaceUnitArea ( Houten , addHeroes , false ) ;
3587: LD_EXP 9
3591: PPUSH
3592: LD_INT 11
3594: PPUSH
3595: LD_INT 0
3597: PPUSH
3598: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
3602: LD_EXP 9
3606: PPUSH
3607: LD_INT 42
3609: PPUSH
3610: LD_INT 35
3612: PPUSH
3613: CALL_OW 118
// if IsPlaced ( Houten ) then
3617: LD_EXP 9
3621: PPUSH
3622: CALL_OW 305
3626: IFFALSE 3644
// addHeroesTab := addHeroesTab ^ Houten ;
3628: LD_ADDR_EXP 15
3632: PUSH
3633: LD_EXP 15
3637: PUSH
3638: LD_EXP 9
3642: ADD
3643: ST_TO_ADDR
// end else
3644: GO 3722
// begin PlaceUnitArea ( others08 [ 1 ] , addHeroes , false ) ;
3646: LD_EXP 11
3650: PUSH
3651: LD_INT 1
3653: ARRAY
3654: PPUSH
3655: LD_INT 11
3657: PPUSH
3658: LD_INT 0
3660: PPUSH
3661: CALL_OW 49
// ComTurnXY ( others08 [ 1 ] , 42 , 35 ) ;
3665: LD_EXP 11
3669: PUSH
3670: LD_INT 1
3672: ARRAY
3673: PPUSH
3674: LD_INT 42
3676: PPUSH
3677: LD_INT 35
3679: PPUSH
3680: CALL_OW 118
// addHeroesTab := addHeroesTab ^ others08 [ 1 ] ;
3684: LD_ADDR_EXP 15
3688: PUSH
3689: LD_EXP 15
3693: PUSH
3694: LD_EXP 11
3698: PUSH
3699: LD_INT 1
3701: ARRAY
3702: ADD
3703: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
3704: LD_ADDR_EXP 11
3708: PUSH
3709: LD_EXP 11
3713: PPUSH
3714: LD_INT 1
3716: PPUSH
3717: CALL_OW 3
3721: ST_TO_ADDR
// end ; if not IsPlaced ( Donaldson ) and Donaldson then
3722: LD_EXP 4
3726: PPUSH
3727: CALL_OW 305
3731: NOT
3732: PUSH
3733: LD_EXP 4
3737: AND
3738: IFFALSE 3797
// begin PlaceUnitArea ( Donaldson , AddHeroes , false ) ;
3740: LD_EXP 4
3744: PPUSH
3745: LD_INT 11
3747: PPUSH
3748: LD_INT 0
3750: PPUSH
3751: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
3755: LD_EXP 4
3759: PPUSH
3760: LD_INT 42
3762: PPUSH
3763: LD_INT 35
3765: PPUSH
3766: CALL_OW 118
// if IsPlaced ( Donaldson ) then
3770: LD_EXP 4
3774: PPUSH
3775: CALL_OW 305
3779: IFFALSE 3797
// addHeroesTab := addHeroesTab ^ Donaldson ;
3781: LD_ADDR_EXP 15
3785: PUSH
3786: LD_EXP 15
3790: PUSH
3791: LD_EXP 4
3795: ADD
3796: ST_TO_ADDR
// end ; if not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and Frank then
3797: LD_EXP 4
3801: PPUSH
3802: CALL_OW 305
3806: NOT
3807: PUSH
3808: LD_EXP 8
3812: PPUSH
3813: CALL_OW 305
3817: NOT
3818: AND
3819: PUSH
3820: LD_EXP 8
3824: AND
3825: IFFALSE 3884
// begin PlaceUnitArea ( Frank , addHeroes , false ) ;
3827: LD_EXP 8
3831: PPUSH
3832: LD_INT 11
3834: PPUSH
3835: LD_INT 0
3837: PPUSH
3838: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
3842: LD_EXP 8
3846: PPUSH
3847: LD_INT 42
3849: PPUSH
3850: LD_INT 35
3852: PPUSH
3853: CALL_OW 118
// if IsPlaced ( Frank ) then
3857: LD_EXP 8
3861: PPUSH
3862: CALL_OW 305
3866: IFFALSE 3884
// addHeroesTab := addHeroesTab ^ Frank ;
3868: LD_ADDR_EXP 15
3872: PUSH
3873: LD_EXP 15
3877: PUSH
3878: LD_EXP 8
3882: ADD
3883: ST_TO_ADDR
// end ; if not IsPlaced ( Donaldson ) and not IsPlaced ( Houten ) and Houten then
3884: LD_EXP 4
3888: PPUSH
3889: CALL_OW 305
3893: NOT
3894: PUSH
3895: LD_EXP 9
3899: PPUSH
3900: CALL_OW 305
3904: NOT
3905: AND
3906: PUSH
3907: LD_EXP 9
3911: AND
3912: IFFALSE 3973
// begin PlaceUnitArea ( Houten , addHeroes , false ) ;
3914: LD_EXP 9
3918: PPUSH
3919: LD_INT 11
3921: PPUSH
3922: LD_INT 0
3924: PPUSH
3925: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
3929: LD_EXP 9
3933: PPUSH
3934: LD_INT 42
3936: PPUSH
3937: LD_INT 35
3939: PPUSH
3940: CALL_OW 118
// if IsPlaced ( Houten ) then
3944: LD_EXP 9
3948: PPUSH
3949: CALL_OW 305
3953: IFFALSE 3971
// addHeroesTab = addHeroesTab ^ Houten ;
3955: LD_ADDR_EXP 15
3959: PUSH
3960: LD_EXP 15
3964: PUSH
3965: LD_EXP 9
3969: ADD
3970: ST_TO_ADDR
// end else
3971: GO 4049
// begin PlaceUnitArea ( others08 [ 1 ] , addHeroes , false ) ;
3973: LD_EXP 11
3977: PUSH
3978: LD_INT 1
3980: ARRAY
3981: PPUSH
3982: LD_INT 11
3984: PPUSH
3985: LD_INT 0
3987: PPUSH
3988: CALL_OW 49
// ComTurnXY ( others08 [ 1 ] , 42 , 35 ) ;
3992: LD_EXP 11
3996: PUSH
3997: LD_INT 1
3999: ARRAY
4000: PPUSH
4001: LD_INT 42
4003: PPUSH
4004: LD_INT 35
4006: PPUSH
4007: CALL_OW 118
// addHeroesTab := addHeroesTab ^ others08 [ 1 ] ;
4011: LD_ADDR_EXP 15
4015: PUSH
4016: LD_EXP 15
4020: PUSH
4021: LD_EXP 11
4025: PUSH
4026: LD_INT 1
4028: ARRAY
4029: ADD
4030: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
4031: LD_ADDR_EXP 11
4035: PUSH
4036: LD_EXP 11
4040: PPUSH
4041: LD_INT 1
4043: PPUSH
4044: CALL_OW 3
4048: ST_TO_ADDR
// end ; for i := 1 to 2 - addHeroesTab do
4049: LD_ADDR_VAR 0 2
4053: PUSH
4054: DOUBLE
4055: LD_INT 1
4057: DEC
4058: ST_TO_ADDR
4059: LD_INT 2
4061: PUSH
4062: LD_EXP 15
4066: MINUS
4067: PUSH
4068: FOR_TO
4069: IFFALSE 4193
// begin hc_gallery :=  ;
4071: LD_ADDR_OWVAR 33
4075: PUSH
4076: LD_STRING 
4078: ST_TO_ADDR
// hc_name :=  ;
4079: LD_ADDR_OWVAR 26
4083: PUSH
4084: LD_STRING 
4086: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
4087: LD_INT 0
4089: PPUSH
4090: LD_INT 1
4092: PUSH
4093: LD_INT 2
4095: PUSH
4096: LD_INT 3
4098: PUSH
4099: LD_INT 4
4101: PUSH
4102: EMPTY
4103: LIST
4104: LIST
4105: LIST
4106: LIST
4107: PUSH
4108: LD_INT 1
4110: PPUSH
4111: LD_INT 4
4113: PPUSH
4114: CALL_OW 12
4118: ARRAY
4119: PPUSH
4120: LD_INT 4
4122: PPUSH
4123: LD_INT 6
4125: PPUSH
4126: CALL_OW 12
4130: PPUSH
4131: CALL_OW 380
// un = CreateHuman ;
4135: LD_ADDR_VAR 0 3
4139: PUSH
4140: CALL_OW 44
4144: ST_TO_ADDR
// addHeroesTab = addHeroesTab ^ un ;
4145: LD_ADDR_EXP 15
4149: PUSH
4150: LD_EXP 15
4154: PUSH
4155: LD_VAR 0 3
4159: ADD
4160: ST_TO_ADDR
// PlaceUnitArea ( un , addHeroes , false ) ;
4161: LD_VAR 0 3
4165: PPUSH
4166: LD_INT 11
4168: PPUSH
4169: LD_INT 0
4171: PPUSH
4172: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
4176: LD_VAR 0 3
4180: PPUSH
4181: LD_INT 42
4183: PPUSH
4184: LD_INT 35
4186: PPUSH
4187: CALL_OW 118
// end ;
4191: GO 4068
4193: POP
4194: POP
// end ; if siberite > 200 then
4195: LD_EXP 17
4199: PUSH
4200: LD_INT 200
4202: GREATER
4203: IFFALSE 4755
// begin if others08 then
4205: LD_EXP 11
4209: IFFALSE 4599
// begin if others08 >= ( siberite - 200 ) / 100 then
4211: LD_EXP 11
4215: PUSH
4216: LD_EXP 17
4220: PUSH
4221: LD_INT 200
4223: MINUS
4224: PUSH
4225: LD_INT 100
4227: DIVREAL
4228: GREATEREQUAL
4229: IFFALSE 4341
// begin for i := 1 to ( siberite - 200 ) / 100 do
4231: LD_ADDR_VAR 0 2
4235: PUSH
4236: DOUBLE
4237: LD_INT 1
4239: DEC
4240: ST_TO_ADDR
4241: LD_EXP 17
4245: PUSH
4246: LD_INT 200
4248: MINUS
4249: PUSH
4250: LD_INT 100
4252: DIVREAL
4253: PUSH
4254: FOR_TO
4255: IFFALSE 4337
// begin PlaceUnitArea ( others08 [ 1 ] , addHeroes , false ) ;
4257: LD_EXP 11
4261: PUSH
4262: LD_INT 1
4264: ARRAY
4265: PPUSH
4266: LD_INT 11
4268: PPUSH
4269: LD_INT 0
4271: PPUSH
4272: CALL_OW 49
// ComTurnXY ( others08 [ 1 ] , 42 , 35 ) ;
4276: LD_EXP 11
4280: PUSH
4281: LD_INT 1
4283: ARRAY
4284: PPUSH
4285: LD_INT 42
4287: PPUSH
4288: LD_INT 35
4290: PPUSH
4291: CALL_OW 118
// addHeroesTab := addHeroesTab ^ others08 [ i ] ;
4295: LD_ADDR_EXP 15
4299: PUSH
4300: LD_EXP 15
4304: PUSH
4305: LD_EXP 11
4309: PUSH
4310: LD_VAR 0 2
4314: ARRAY
4315: ADD
4316: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
4317: LD_ADDR_EXP 11
4321: PUSH
4322: LD_EXP 11
4326: PPUSH
4327: LD_INT 1
4329: PPUSH
4330: CALL_OW 3
4334: ST_TO_ADDR
// end ;
4335: GO 4254
4337: POP
4338: POP
// end else
4339: GO 4597
// begin for i := 1 to others08 do
4341: LD_ADDR_VAR 0 2
4345: PUSH
4346: DOUBLE
4347: LD_INT 1
4349: DEC
4350: ST_TO_ADDR
4351: LD_EXP 11
4355: PUSH
4356: FOR_TO
4357: IFFALSE 4439
// begin PlaceUnitArea ( others08 [ 1 ] , addHeroes , false ) ;
4359: LD_EXP 11
4363: PUSH
4364: LD_INT 1
4366: ARRAY
4367: PPUSH
4368: LD_INT 11
4370: PPUSH
4371: LD_INT 0
4373: PPUSH
4374: CALL_OW 49
// ComTurnXY ( others08 [ 1 ] , 42 , 35 ) ;
4378: LD_EXP 11
4382: PUSH
4383: LD_INT 1
4385: ARRAY
4386: PPUSH
4387: LD_INT 42
4389: PPUSH
4390: LD_INT 35
4392: PPUSH
4393: CALL_OW 118
// addHeroesTab := addHeroesTab ^ others08 [ i ] ;
4397: LD_ADDR_EXP 15
4401: PUSH
4402: LD_EXP 15
4406: PUSH
4407: LD_EXP 11
4411: PUSH
4412: LD_VAR 0 2
4416: ARRAY
4417: ADD
4418: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
4419: LD_ADDR_EXP 11
4423: PUSH
4424: LD_EXP 11
4428: PPUSH
4429: LD_INT 1
4431: PPUSH
4432: CALL_OW 3
4436: ST_TO_ADDR
// end ;
4437: GO 4356
4439: POP
4440: POP
// for i := 1 to ( siberite - 200 ) / 100 - others08 do
4441: LD_ADDR_VAR 0 2
4445: PUSH
4446: DOUBLE
4447: LD_INT 1
4449: DEC
4450: ST_TO_ADDR
4451: LD_EXP 17
4455: PUSH
4456: LD_INT 200
4458: MINUS
4459: PUSH
4460: LD_INT 100
4462: DIVREAL
4463: PUSH
4464: LD_EXP 11
4468: MINUS
4469: PUSH
4470: FOR_TO
4471: IFFALSE 4595
// begin hc_gallery :=  ;
4473: LD_ADDR_OWVAR 33
4477: PUSH
4478: LD_STRING 
4480: ST_TO_ADDR
// hc_name :=  ;
4481: LD_ADDR_OWVAR 26
4485: PUSH
4486: LD_STRING 
4488: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
4489: LD_INT 0
4491: PPUSH
4492: LD_INT 1
4494: PUSH
4495: LD_INT 2
4497: PUSH
4498: LD_INT 3
4500: PUSH
4501: LD_INT 4
4503: PUSH
4504: EMPTY
4505: LIST
4506: LIST
4507: LIST
4508: LIST
4509: PUSH
4510: LD_INT 1
4512: PPUSH
4513: LD_INT 4
4515: PPUSH
4516: CALL_OW 12
4520: ARRAY
4521: PPUSH
4522: LD_INT 4
4524: PPUSH
4525: LD_INT 6
4527: PPUSH
4528: CALL_OW 12
4532: PPUSH
4533: CALL_OW 380
// un := CreateHuman ;
4537: LD_ADDR_VAR 0 3
4541: PUSH
4542: CALL_OW 44
4546: ST_TO_ADDR
// addHeroesTab := addHeroesTab ^ un ;
4547: LD_ADDR_EXP 15
4551: PUSH
4552: LD_EXP 15
4556: PUSH
4557: LD_VAR 0 3
4561: ADD
4562: ST_TO_ADDR
// PlaceUnitArea ( un , addHeroes , false ) ;
4563: LD_VAR 0 3
4567: PPUSH
4568: LD_INT 11
4570: PPUSH
4571: LD_INT 0
4573: PPUSH
4574: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
4578: LD_VAR 0 3
4582: PPUSH
4583: LD_INT 42
4585: PPUSH
4586: LD_INT 35
4588: PPUSH
4589: CALL_OW 118
// end ;
4593: GO 4470
4595: POP
4596: POP
// end ; end else
4597: GO 4755
// begin for i := 1 to ( siberite - 200 ) / 100 - others08 do
4599: LD_ADDR_VAR 0 2
4603: PUSH
4604: DOUBLE
4605: LD_INT 1
4607: DEC
4608: ST_TO_ADDR
4609: LD_EXP 17
4613: PUSH
4614: LD_INT 200
4616: MINUS
4617: PUSH
4618: LD_INT 100
4620: DIVREAL
4621: PUSH
4622: LD_EXP 11
4626: MINUS
4627: PUSH
4628: FOR_TO
4629: IFFALSE 4753
// begin hc_gallery :=  ;
4631: LD_ADDR_OWVAR 33
4635: PUSH
4636: LD_STRING 
4638: ST_TO_ADDR
// hc_name :=  ;
4639: LD_ADDR_OWVAR 26
4643: PUSH
4644: LD_STRING 
4646: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
4647: LD_INT 0
4649: PPUSH
4650: LD_INT 1
4652: PUSH
4653: LD_INT 2
4655: PUSH
4656: LD_INT 3
4658: PUSH
4659: LD_INT 4
4661: PUSH
4662: EMPTY
4663: LIST
4664: LIST
4665: LIST
4666: LIST
4667: PUSH
4668: LD_INT 1
4670: PPUSH
4671: LD_INT 4
4673: PPUSH
4674: CALL_OW 12
4678: ARRAY
4679: PPUSH
4680: LD_INT 4
4682: PPUSH
4683: LD_INT 6
4685: PPUSH
4686: CALL_OW 12
4690: PPUSH
4691: CALL_OW 380
// un := CreateHuman ;
4695: LD_ADDR_VAR 0 3
4699: PUSH
4700: CALL_OW 44
4704: ST_TO_ADDR
// addHeroesTab := addHeroesTab ^ un ;
4705: LD_ADDR_EXP 15
4709: PUSH
4710: LD_EXP 15
4714: PUSH
4715: LD_VAR 0 3
4719: ADD
4720: ST_TO_ADDR
// PlaceUnitArea ( un , addHeroes , false ) ;
4721: LD_VAR 0 3
4725: PPUSH
4726: LD_INT 11
4728: PPUSH
4729: LD_INT 0
4731: PPUSH
4732: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
4736: LD_VAR 0 3
4740: PPUSH
4741: LD_INT 42
4743: PPUSH
4744: LD_INT 35
4746: PPUSH
4747: CALL_OW 118
// end ;
4751: GO 4628
4753: POP
4754: POP
// end ; end ; PlaceHumanInUnit ( JMM , car ) ;
4755: LD_EXP 1
4759: PPUSH
4760: LD_INT 138
4762: PPUSH
4763: CALL_OW 52
// PlaceHumanInUnit ( Powell , Am_bar ) ;
4767: LD_EXP 2
4771: PPUSH
4772: LD_INT 58
4774: PPUSH
4775: CALL_OW 52
// SetClass ( JMM , 1 ) ;
4779: LD_EXP 1
4783: PPUSH
4784: LD_INT 1
4786: PPUSH
4787: CALL_OW 336
// end ;
4791: LD_VAR 0 1
4795: RET
// export function PrepareConvoy ; var i , veh , un ; begin
4796: LD_INT 0
4798: PPUSH
4799: PPUSH
4800: PPUSH
4801: PPUSH
// uc_side := 1 ;
4802: LD_ADDR_OWVAR 20
4806: PUSH
4807: LD_INT 1
4809: ST_TO_ADDR
// uc_nation := 1 ;
4810: LD_ADDR_OWVAR 21
4814: PUSH
4815: LD_INT 1
4817: ST_TO_ADDR
// for i := 1 to 2 do
4818: LD_ADDR_VAR 0 2
4822: PUSH
4823: DOUBLE
4824: LD_INT 1
4826: DEC
4827: ST_TO_ADDR
4828: LD_INT 2
4830: PUSH
4831: FOR_TO
4832: IFFALSE 4970
// begin vc_engine := 1 ;
4834: LD_ADDR_OWVAR 39
4838: PUSH
4839: LD_INT 1
4841: ST_TO_ADDR
// vc_control := 1 ;
4842: LD_ADDR_OWVAR 38
4846: PUSH
4847: LD_INT 1
4849: ST_TO_ADDR
// vc_weapon := 12 ;
4850: LD_ADDR_OWVAR 40
4854: PUSH
4855: LD_INT 12
4857: ST_TO_ADDR
// vc_chassis := 3 ;
4858: LD_ADDR_OWVAR 37
4862: PUSH
4863: LD_INT 3
4865: ST_TO_ADDR
// veh := CreateVehicle ;
4866: LD_ADDR_VAR 0 3
4870: PUSH
4871: CALL_OW 45
4875: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
4876: LD_VAR 0 3
4880: PPUSH
4881: LD_INT 1
4883: PPUSH
4884: CALL_OW 233
// PlaceUnitArea ( veh , Cargo , false ) ;
4888: LD_VAR 0 3
4892: PPUSH
4893: LD_INT 9
4895: PPUSH
4896: LD_INT 0
4898: PPUSH
4899: CALL_OW 49
// AddCargo ( veh , 1 , 100 ) ;
4903: LD_VAR 0 3
4907: PPUSH
4908: LD_INT 1
4910: PPUSH
4911: LD_INT 100
4913: PPUSH
4914: CALL_OW 291
// convoy = convoy ^ veh ;
4918: LD_ADDR_EXP 12
4922: PUSH
4923: LD_EXP 12
4927: PUSH
4928: LD_VAR 0 3
4932: ADD
4933: ST_TO_ADDR
// PrepareMechanic ( false , 10 ) ;
4934: LD_INT 0
4936: PPUSH
4937: LD_INT 10
4939: PPUSH
4940: CALL_OW 383
// un := CreateHuman ;
4944: LD_ADDR_VAR 0 4
4948: PUSH
4949: CALL_OW 44
4953: ST_TO_ADDR
// PlaceHumanInUnit ( un , veh ) ;
4954: LD_VAR 0 4
4958: PPUSH
4959: LD_VAR 0 3
4963: PPUSH
4964: CALL_OW 52
// end ;
4968: GO 4831
4970: POP
4971: POP
// AddComMoveXY ( convoy [ 1 ] , 45 , 43 ) ;
4972: LD_EXP 12
4976: PUSH
4977: LD_INT 1
4979: ARRAY
4980: PPUSH
4981: LD_INT 45
4983: PPUSH
4984: LD_INT 43
4986: PPUSH
4987: CALL_OW 171
// AddComMoveXY ( convoy [ 2 ] , 40 , 40 ) ;
4991: LD_EXP 12
4995: PUSH
4996: LD_INT 2
4998: ARRAY
4999: PPUSH
5000: LD_INT 40
5002: PPUSH
5003: LD_INT 40
5005: PPUSH
5006: CALL_OW 171
// end ; end_of_file
5010: LD_VAR 0 1
5014: RET
// export function PrepareUnit ( ident , exist_mode ) ; var unit ; begin
5015: LD_INT 0
5017: PPUSH
5018: PPUSH
// if exist_mode then
5019: LD_VAR 0 2
5023: IFFALSE 5057
// begin unit := CreateCharacter ( ident ) ;
5025: LD_ADDR_VAR 0 4
5029: PUSH
5030: LD_VAR 0 1
5034: PPUSH
5035: CALL_OW 34
5039: ST_TO_ADDR
// if unit then
5040: LD_VAR 0 4
5044: IFFALSE 5055
// DeleteCharacters ( ident ) ;
5046: LD_VAR 0 1
5050: PPUSH
5051: CALL_OW 40
// end else
5055: GO 5072
// unit := NewCharacter ( ident ) ;
5057: LD_ADDR_VAR 0 4
5061: PUSH
5062: LD_VAR 0 1
5066: PPUSH
5067: CALL_OW 25
5071: ST_TO_ADDR
// result := unit ;
5072: LD_ADDR_VAR 0 3
5076: PUSH
5077: LD_VAR 0 4
5081: ST_TO_ADDR
// end ;
5082: LD_VAR 0 3
5086: RET
// export function Video ( mode ) ; begin
5087: LD_INT 0
5089: PPUSH
// ingame_video = mode ;
5090: LD_ADDR_OWVAR 52
5094: PUSH
5095: LD_VAR 0 1
5099: ST_TO_ADDR
// interface_hidden = mode ;
5100: LD_ADDR_OWVAR 54
5104: PUSH
5105: LD_VAR 0 1
5109: ST_TO_ADDR
// end ; end_of_file
5110: LD_VAR 0 2
5114: RET
// on VehicleConstructed ( veh , fac ) do begin AddComMoveXY ( veh , 82 , 77 ) ;
5115: LD_VAR 0 1
5119: PPUSH
5120: LD_INT 82
5122: PPUSH
5123: LD_INT 77
5125: PPUSH
5126: CALL_OW 171
// end ;
5130: PPOPN 2
5132: END
// on DialogueSkipped ( d ) do begin EndMission ;
5133: CALL 671 0 0
// end ;
5137: PPOPN 1
5139: END
