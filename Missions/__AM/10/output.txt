// export JMM , Powell ; export Brown , Donaldson , Bobby , Cyrus , Lisa , Frank , Houten , Gary ; export others08 ; export convoy , prepConv ; export coreHeroesTab , addHeroesTab ; export selectedToMission ; export siberite ; starting begin Resetfog ;
   0: CALL_OW 335
// SetBName ( Am_dep , alpha ) ;
   4: LD_INT 5
   6: PPUSH
   7: LD_STRING alpha
   9: PPUSH
  10: CALL_OW 500
// convoy = [ ] ;
  14: LD_ADDR_EXP 12
  18: PUSH
  19: EMPTY
  20: ST_TO_ADDR
// coreHeroesTab = [ ] ;
  21: LD_ADDR_EXP 14
  25: PUSH
  26: EMPTY
  27: ST_TO_ADDR
// addHeroesTab = [ ] ;
  28: LD_ADDR_EXP 15
  32: PUSH
  33: EMPTY
  34: ST_TO_ADDR
// selectedToMission = [ ] ;
  35: LD_ADDR_EXP 16
  39: PUSH
  40: EMPTY
  41: ST_TO_ADDR
// PrepareHeroes ;
  42: CALL 926 0 0
// end ; end_of_file
  46: END
// every 1 do var others ;
  47: GO 49
  49: DISABLE
  50: LD_INT 0
  52: PPUSH
// begin Video ( true ) ;
  53: LD_INT 1
  55: PPUSH
  56: CALL 5721 0 1
// AddComConstruct ( Am_tov1 , 2 , 1 , 1 , 4 ) ;
  60: LD_INT 60
  62: PPUSH
  63: LD_INT 2
  65: PPUSH
  66: LD_INT 1
  68: PPUSH
  69: LD_INT 1
  71: PPUSH
  72: LD_INT 4
  74: PPUSH
  75: CALL_OW 185
// AddComConstruct ( Am_tov2 , 4 , 1 , 1 , 6 ) ;
  79: LD_INT 6
  81: PPUSH
  82: LD_INT 4
  84: PPUSH
  85: LD_INT 1
  87: PPUSH
  88: LD_INT 1
  90: PPUSH
  91: LD_INT 6
  93: PPUSH
  94: CALL_OW 185
// AddComConstruct ( Am_tov1 , 2 , 1 , 1 , 3 ) ;
  98: LD_INT 60
 100: PPUSH
 101: LD_INT 2
 103: PPUSH
 104: LD_INT 1
 106: PPUSH
 107: LD_INT 1
 109: PPUSH
 110: LD_INT 3
 112: PPUSH
 113: CALL_OW 185
// AddComConstruct ( Am_tov2 , 4 , 1 , 1 , 4 ) ;
 117: LD_INT 6
 119: PPUSH
 120: LD_INT 4
 122: PPUSH
 123: LD_INT 1
 125: PPUSH
 126: LD_INT 1
 128: PPUSH
 129: LD_INT 4
 131: PPUSH
 132: CALL_OW 185
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap1 ) ;
 136: LD_INT 47
 138: PUSH
 139: LD_INT 4
 141: PUSH
 142: EMPTY
 143: LIST
 144: LIST
 145: PPUSH
 146: LD_INT 51
 148: PPUSH
 149: CALL_OW 184
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap2 ) ;
 153: LD_INT 47
 155: PUSH
 156: LD_INT 4
 158: PUSH
 159: EMPTY
 160: LIST
 161: LIST
 162: PPUSH
 163: LD_INT 52
 165: PPUSH
 166: CALL_OW 184
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap3 ) ;
 170: LD_INT 47
 172: PUSH
 173: LD_INT 4
 175: PUSH
 176: EMPTY
 177: LIST
 178: LIST
 179: PPUSH
 180: LD_INT 53
 182: PPUSH
 183: CALL_OW 184
// CenterNowOnUnits ( car ) ;
 187: LD_INT 138
 189: PPUSH
 190: CALL_OW 87
// ComMoveXY ( car , 69 , 36 ) ;
 194: LD_INT 138
 196: PPUSH
 197: LD_INT 69
 199: PPUSH
 200: LD_INT 36
 202: PPUSH
 203: CALL_OW 111
// AddComMoveXY ( car , 65 , 43 ) ;
 207: LD_INT 138
 209: PPUSH
 210: LD_INT 65
 212: PPUSH
 213: LD_INT 43
 215: PPUSH
 216: CALL_OW 171
// AddComMoveXY ( car , 63 , 48 ) ;
 220: LD_INT 138
 222: PPUSH
 223: LD_INT 63
 225: PPUSH
 226: LD_INT 48
 228: PPUSH
 229: CALL_OW 171
// AddComMoveXY ( car , 60 , 50 ) ;
 233: LD_INT 138
 235: PPUSH
 236: LD_INT 60
 238: PPUSH
 239: LD_INT 50
 241: PPUSH
 242: CALL_OW 171
// AddComMoveXY ( car , 54 , 47 ) ;
 246: LD_INT 138
 248: PPUSH
 249: LD_INT 54
 251: PPUSH
 252: LD_INT 47
 254: PPUSH
 255: CALL_OW 171
// AddComMoveXY ( car , 51 , 40 ) ;
 259: LD_INT 138
 261: PPUSH
 262: LD_INT 51
 264: PPUSH
 265: LD_INT 40
 267: PPUSH
 268: CALL_OW 171
// repeat wait ( 0 0$1 ) ;
 272: LD_INT 35
 274: PPUSH
 275: CALL_OW 67
// CenterNowOnUnits ( car ) ;
 279: LD_INT 138
 281: PPUSH
 282: CALL_OW 87
// until IsInArea ( car , stop ) ;
 286: LD_INT 138
 288: PPUSH
 289: LD_INT 7
 291: PPUSH
 292: CALL_OW 308
 296: IFFALSE 272
// ComExitVehicle ( JMM ) ;
 298: LD_EXP 1
 302: PPUSH
 303: CALL_OW 121
// wait ( 0 0$01 ) ;
 307: LD_INT 35
 309: PPUSH
 310: CALL_OW 67
// ComMoveXY ( JMM , 42 , 37 ) ;
 314: LD_EXP 1
 318: PPUSH
 319: LD_INT 42
 321: PPUSH
 322: LD_INT 37
 324: PPUSH
 325: CALL_OW 111
// wait ( 0 0$5 ) ;
 329: LD_INT 175
 331: PPUSH
 332: CALL_OW 67
// ComExitBuilding ( Powell ) ;
 336: LD_EXP 2
 340: PPUSH
 341: CALL_OW 122
// wait ( 0 0$01 ) ;
 345: LD_INT 35
 347: PPUSH
 348: CALL_OW 67
// ComTurnUnit ( Powell , JMM ) ;
 352: LD_EXP 2
 356: PPUSH
 357: LD_EXP 1
 361: PPUSH
 362: CALL_OW 119
// ComTurnUnit ( JMM , Powell ) ;
 366: LD_EXP 1
 370: PPUSH
 371: LD_EXP 2
 375: PPUSH
 376: CALL_OW 119
// Say ( JMM , D1-JMM-1 ) ;
 380: LD_EXP 1
 384: PPUSH
 385: LD_STRING D1-JMM-1
 387: PPUSH
 388: CALL_OW 88
// Say ( Powell , D1-Pow-1 ) ;
 392: LD_EXP 2
 396: PPUSH
 397: LD_STRING D1-Pow-1
 399: PPUSH
 400: CALL_OW 88
// Say ( JMM , D1-JMM-2 ) ;
 404: LD_EXP 1
 408: PPUSH
 409: LD_STRING D1-JMM-2
 411: PPUSH
 412: CALL_OW 88
// Say ( Powell , D1-Pow-2 ) ;
 416: LD_EXP 2
 420: PPUSH
 421: LD_STRING D1-Pow-2
 423: PPUSH
 424: CALL_OW 88
// Say ( JMM , D1-JMM-3 ) ;
 428: LD_EXP 1
 432: PPUSH
 433: LD_STRING D1-JMM-3
 435: PPUSH
 436: CALL_OW 88
// Say ( Powell , D1-Pow-3 ) ;
 440: LD_EXP 2
 444: PPUSH
 445: LD_STRING D1-Pow-3
 447: PPUSH
 448: CALL_OW 88
// Say ( JMM , D1-JMM-4 ) ;
 452: LD_EXP 1
 456: PPUSH
 457: LD_STRING D1-JMM-4
 459: PPUSH
 460: CALL_OW 88
// PrepareConvoy ;
 464: CALL 5200 0 0
// Say ( Powell , D1-Pow-4 ) ;
 468: LD_EXP 2
 472: PPUSH
 473: LD_STRING D1-Pow-4
 475: PPUSH
 476: CALL_OW 88
// Say ( Powell , D1-Pow-4a ) ;
 480: LD_EXP 2
 484: PPUSH
 485: LD_STRING D1-Pow-4a
 487: PPUSH
 488: CALL_OW 88
// Say ( Powell , D1-Pow-4b ) ;
 492: LD_EXP 2
 496: PPUSH
 497: LD_STRING D1-Pow-4b
 499: PPUSH
 500: CALL_OW 88
// AddComMoveXY ( convoy , 81 , 77 ) ;
 504: LD_EXP 12
 508: PPUSH
 509: LD_INT 81
 511: PPUSH
 512: LD_INT 77
 514: PPUSH
 515: CALL_OW 171
// Say ( JMM , D1-JMM-5 ) ;
 519: LD_EXP 1
 523: PPUSH
 524: LD_STRING D1-JMM-5
 526: PPUSH
 527: CALL_OW 88
// Say ( Powell , D1-Pow-5 ) ;
 531: LD_EXP 2
 535: PPUSH
 536: LD_STRING D1-Pow-5
 538: PPUSH
 539: CALL_OW 88
// Say ( JMM , D1-JMM-6 ) ;
 543: LD_EXP 1
 547: PPUSH
 548: LD_STRING D1-JMM-6
 550: PPUSH
 551: CALL_OW 88
// Say ( Powell , D1-Pow-6 ) ;
 555: LD_EXP 2
 559: PPUSH
 560: LD_STRING D1-Pow-6
 562: PPUSH
 563: CALL_OW 88
// Say ( JMM , D1-JMM-7 ) ;
 567: LD_EXP 1
 571: PPUSH
 572: LD_STRING D1-JMM-7
 574: PPUSH
 575: CALL_OW 88
// Say ( Powell , D1-Pow-7 ) ;
 579: LD_EXP 2
 583: PPUSH
 584: LD_STRING D1-Pow-7
 586: PPUSH
 587: CALL_OW 88
// Say ( JMM , D1-JMM-8 ) ;
 591: LD_EXP 1
 595: PPUSH
 596: LD_STRING D1-JMM-8
 598: PPUSH
 599: CALL_OW 88
// ComMoveXY ( JMM , 47 , 48 ) ;
 603: LD_EXP 1
 607: PPUSH
 608: LD_INT 47
 610: PPUSH
 611: LD_INT 48
 613: PPUSH
 614: CALL_OW 111
// ComEnterUnit ( Powell , Am_bar ) ;
 618: LD_EXP 2
 622: PPUSH
 623: LD_INT 58
 625: PPUSH
 626: CALL_OW 120
// wait ( 0 0$3 ) ;
 630: LD_INT 105
 632: PPUSH
 633: CALL_OW 67
// others = FilterUnitsInArea ( CoreHeroes , [ [ f_side , 1 ] , [ f_type , unit_human ] ] ) ;
 637: LD_ADDR_VAR 0 1
 641: PUSH
 642: LD_INT 10
 644: PPUSH
 645: LD_INT 22
 647: PUSH
 648: LD_INT 1
 650: PUSH
 651: EMPTY
 652: LIST
 653: LIST
 654: PUSH
 655: LD_INT 21
 657: PUSH
 658: LD_INT 1
 660: PUSH
 661: EMPTY
 662: LIST
 663: LIST
 664: PUSH
 665: EMPTY
 666: LIST
 667: LIST
 668: PPUSH
 669: CALL_OW 70
 673: ST_TO_ADDR
// others = others ^ FilterUnitsInArea ( AddHeroes , [ [ f_side , 1 ] , [ f_type , unit_human ] ] ) ;
 674: LD_ADDR_VAR 0 1
 678: PUSH
 679: LD_VAR 0 1
 683: PUSH
 684: LD_INT 11
 686: PPUSH
 687: LD_INT 22
 689: PUSH
 690: LD_INT 1
 692: PUSH
 693: EMPTY
 694: LIST
 695: LIST
 696: PUSH
 697: LD_INT 21
 699: PUSH
 700: LD_INT 1
 702: PUSH
 703: EMPTY
 704: LIST
 705: LIST
 706: PUSH
 707: EMPTY
 708: LIST
 709: LIST
 710: PPUSH
 711: CALL_OW 70
 715: ADD
 716: ST_TO_ADDR
// others = others diff [ JMM , Powell , Brown , Donaldson , Bobby , Cyrus , Lisa , Frank , Houten , Gary ] ;
 717: LD_ADDR_VAR 0 1
 721: PUSH
 722: LD_VAR 0 1
 726: PUSH
 727: LD_EXP 1
 731: PUSH
 732: LD_EXP 2
 736: PUSH
 737: LD_EXP 3
 741: PUSH
 742: LD_EXP 4
 746: PUSH
 747: LD_EXP 5
 751: PUSH
 752: LD_EXP 6
 756: PUSH
 757: LD_EXP 7
 761: PUSH
 762: LD_EXP 8
 766: PUSH
 767: LD_EXP 9
 771: PUSH
 772: LD_EXP 10
 776: PUSH
 777: EMPTY
 778: LIST
 779: LIST
 780: LIST
 781: LIST
 782: LIST
 783: LIST
 784: LIST
 785: LIST
 786: LIST
 787: LIST
 788: DIFF
 789: ST_TO_ADDR
// SaveCharacters ( JMM , 10_JMM ) ;
 790: LD_EXP 1
 794: PPUSH
 795: LD_STRING 10_JMM
 797: PPUSH
 798: CALL_OW 38
// SaveCharacters ( others , OthersIn10 ) ;
 802: LD_VAR 0 1
 806: PPUSH
 807: LD_STRING OthersIn10
 809: PPUSH
 810: CALL_OW 38
// SaveCharacters ( others08 , 10_lock ) ;
 814: LD_EXP 11
 818: PPUSH
 819: LD_STRING 10_lock
 821: PPUSH
 822: CALL_OW 38
// DeleteCharacters ( 08_others ) ;
 826: LD_STRING 08_others
 828: PPUSH
 829: CALL_OW 40
// SaveCharacters ( others , 08_others ) ;
 833: LD_VAR 0 1
 837: PPUSH
 838: LD_STRING 08_others
 840: PPUSH
 841: CALL_OW 38
// ChangeMap ( 10 , %_cont ) ;
 845: LD_INT 10
 847: PPUSH
 848: LD_STRING %_cont
 850: PPUSH
 851: CALL_OW 340
// end ;
 855: PPOPN 1
 857: END
// every 0 0$1 trigger FilterUnitsInArea ( removeCar , [ f_side , 1 ] ) do var i ;
 858: LD_INT 12
 860: PPUSH
 861: LD_INT 22
 863: PUSH
 864: LD_INT 1
 866: PUSH
 867: EMPTY
 868: LIST
 869: LIST
 870: PPUSH
 871: CALL_OW 70
 875: IFFALSE 923
 877: GO 879
 879: DISABLE
 880: LD_INT 0
 882: PPUSH
// begin enable ;
 883: ENABLE
// for i in FilterUnitsInArea ( removeCar , [ f_side , 1 ] ) do
 884: LD_ADDR_VAR 0 1
 888: PUSH
 889: LD_INT 12
 891: PPUSH
 892: LD_INT 22
 894: PUSH
 895: LD_INT 1
 897: PUSH
 898: EMPTY
 899: LIST
 900: LIST
 901: PPUSH
 902: CALL_OW 70
 906: PUSH
 907: FOR_IN
 908: IFFALSE 921
// RemoveUnit ( i ) ;
 910: LD_VAR 0 1
 914: PPUSH
 915: CALL_OW 64
 919: GO 907
 921: POP
 922: POP
// end ; end_of_file
 923: PPOPN 1
 925: END
// export function PrepareHeroes ; var i , un ; begin
 926: LD_INT 0
 928: PPUSH
 929: PPUSH
 930: PPUSH
// uc_side = 1 ;
 931: LD_ADDR_OWVAR 20
 935: PUSH
 936: LD_INT 1
 938: ST_TO_ADDR
// uc_nation = 1 ;
 939: LD_ADDR_OWVAR 21
 943: PUSH
 944: LD_INT 1
 946: ST_TO_ADDR
// JMM = PrepareUnit ( 09_JMM , true ) ;
 947: LD_ADDR_EXP 1
 951: PUSH
 952: LD_STRING 09_JMM
 954: PPUSH
 955: LD_INT 1
 957: PPUSH
 958: CALL 5664 0 2
 962: ST_TO_ADDR
// Powell = PrepareUnit ( Powell , false ) ;
 963: LD_ADDR_EXP 2
 967: PUSH
 968: LD_STRING Powell
 970: PPUSH
 971: LD_INT 0
 973: PPUSH
 974: CALL 5664 0 2
 978: ST_TO_ADDR
// Bobby = PrepareUnit ( 09_Bobby , true ) ;
 979: LD_ADDR_EXP 5
 983: PUSH
 984: LD_STRING 09_Bobby
 986: PPUSH
 987: LD_INT 1
 989: PPUSH
 990: CALL 5664 0 2
 994: ST_TO_ADDR
// PlaceUnitArea ( Bobby , CoreHeroes , false ) ;
 995: LD_EXP 5
 999: PPUSH
1000: LD_INT 10
1002: PPUSH
1003: LD_INT 0
1005: PPUSH
1006: CALL_OW 49
// ComTurnXY ( Bobby , 42 , 35 ) ;
1010: LD_EXP 5
1014: PPUSH
1015: LD_INT 42
1017: PPUSH
1018: LD_INT 35
1020: PPUSH
1021: CALL_OW 118
// if IsPlaced ( Bobby ) then
1025: LD_EXP 5
1029: PPUSH
1030: CALL_OW 305
1034: IFFALSE 1064
// begin coreHeroesTab = coreHeroesTab ^ Bobby ;
1036: LD_ADDR_EXP 14
1040: PUSH
1041: LD_EXP 14
1045: PUSH
1046: LD_EXP 5
1050: ADD
1051: ST_TO_ADDR
// SaveCharacters ( Bobby , 10_Bobby ) ;
1052: LD_EXP 5
1056: PPUSH
1057: LD_STRING 10_Bobby
1059: PPUSH
1060: CALL_OW 38
// end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) then
1064: LD_EXP 5
1068: PPUSH
1069: CALL_OW 305
1073: NOT
1074: PUSH
1075: LD_EXP 3
1079: PPUSH
1080: CALL_OW 305
1084: NOT
1085: AND
1086: IFFALSE 1173
// begin Brown = PrepareUnit ( 08_Brown , true ) ;
1088: LD_ADDR_EXP 3
1092: PUSH
1093: LD_STRING 08_Brown
1095: PPUSH
1096: LD_INT 1
1098: PPUSH
1099: CALL 5664 0 2
1103: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
1104: LD_EXP 3
1108: PPUSH
1109: LD_INT 10
1111: PPUSH
1112: LD_INT 0
1114: PPUSH
1115: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
1119: LD_EXP 3
1123: PPUSH
1124: LD_INT 42
1126: PPUSH
1127: LD_INT 35
1129: PPUSH
1130: CALL_OW 118
// if IsPlaced ( Brown ) then
1134: LD_EXP 3
1138: PPUSH
1139: CALL_OW 305
1143: IFFALSE 1173
// begin coreHeroesTab = coreHeroesTab ^ Brown ;
1145: LD_ADDR_EXP 14
1149: PUSH
1150: LD_EXP 14
1154: PUSH
1155: LD_EXP 3
1159: ADD
1160: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
1161: LD_EXP 3
1165: PPUSH
1166: LD_STRING 10_Brown
1168: PPUSH
1169: CALL_OW 38
// end ; end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
1173: LD_EXP 5
1177: PPUSH
1178: CALL_OW 305
1182: NOT
1183: PUSH
1184: LD_EXP 3
1188: PPUSH
1189: CALL_OW 305
1193: NOT
1194: AND
1195: PUSH
1196: LD_EXP 4
1200: PPUSH
1201: CALL_OW 305
1205: NOT
1206: AND
1207: IFFALSE 1294
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
1209: LD_ADDR_EXP 4
1213: PUSH
1214: LD_STRING 08_Donaldson
1216: PPUSH
1217: LD_INT 1
1219: PPUSH
1220: CALL 5664 0 2
1224: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
1225: LD_EXP 4
1229: PPUSH
1230: LD_INT 10
1232: PPUSH
1233: LD_INT 0
1235: PPUSH
1236: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
1240: LD_EXP 4
1244: PPUSH
1245: LD_INT 42
1247: PPUSH
1248: LD_INT 35
1250: PPUSH
1251: CALL_OW 118
// if IsPlaced ( Donaldson ) then
1255: LD_EXP 4
1259: PPUSH
1260: CALL_OW 305
1264: IFFALSE 1294
// begin coreHeroesTab = coreHeroesTab ^ Donaldson ;
1266: LD_ADDR_EXP 14
1270: PUSH
1271: LD_EXP 14
1275: PUSH
1276: LD_EXP 4
1280: ADD
1281: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
1282: LD_EXP 4
1286: PPUSH
1287: LD_STRING 10_Donaldson
1289: PPUSH
1290: CALL_OW 38
// end ; end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
1294: LD_EXP 5
1298: PPUSH
1299: CALL_OW 305
1303: NOT
1304: PUSH
1305: LD_EXP 3
1309: PPUSH
1310: CALL_OW 305
1314: NOT
1315: AND
1316: PUSH
1317: LD_EXP 4
1321: PPUSH
1322: CALL_OW 305
1326: NOT
1327: AND
1328: PUSH
1329: LD_EXP 8
1333: PPUSH
1334: CALL_OW 305
1338: NOT
1339: AND
1340: IFFALSE 1427
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
1342: LD_ADDR_EXP 8
1346: PUSH
1347: LD_STRING 08_Frank
1349: PPUSH
1350: LD_INT 1
1352: PPUSH
1353: CALL 5664 0 2
1357: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
1358: LD_EXP 8
1362: PPUSH
1363: LD_INT 10
1365: PPUSH
1366: LD_INT 0
1368: PPUSH
1369: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
1373: LD_EXP 8
1377: PPUSH
1378: LD_INT 42
1380: PPUSH
1381: LD_INT 35
1383: PPUSH
1384: CALL_OW 118
// if IsPlaced ( Frank ) then
1388: LD_EXP 8
1392: PPUSH
1393: CALL_OW 305
1397: IFFALSE 1427
// begin coreHeroesTab = coreHeroesTab ^ Frank ;
1399: LD_ADDR_EXP 14
1403: PUSH
1404: LD_EXP 14
1408: PUSH
1409: LD_EXP 8
1413: ADD
1414: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
1415: LD_EXP 8
1419: PPUSH
1420: LD_STRING 10_Frank
1422: PPUSH
1423: CALL_OW 38
// end ; end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
1427: LD_EXP 5
1431: PPUSH
1432: CALL_OW 305
1436: NOT
1437: PUSH
1438: LD_EXP 3
1442: PPUSH
1443: CALL_OW 305
1447: NOT
1448: AND
1449: PUSH
1450: LD_EXP 4
1454: PPUSH
1455: CALL_OW 305
1459: NOT
1460: AND
1461: PUSH
1462: LD_EXP 8
1466: PPUSH
1467: CALL_OW 305
1471: NOT
1472: AND
1473: PUSH
1474: LD_EXP 9
1478: PPUSH
1479: CALL_OW 305
1483: NOT
1484: AND
1485: IFFALSE 1572
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
1487: LD_ADDR_EXP 9
1491: PUSH
1492: LD_STRING 09_Houten
1494: PPUSH
1495: LD_INT 1
1497: PPUSH
1498: CALL 5664 0 2
1502: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
1503: LD_EXP 9
1507: PPUSH
1508: LD_INT 10
1510: PPUSH
1511: LD_INT 0
1513: PPUSH
1514: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
1518: LD_EXP 9
1522: PPUSH
1523: LD_INT 42
1525: PPUSH
1526: LD_INT 35
1528: PPUSH
1529: CALL_OW 118
// if IsPlaced ( Houten ) then
1533: LD_EXP 9
1537: PPUSH
1538: CALL_OW 305
1542: IFFALSE 1572
// begin coreHeroesTab = coreHeroesTab ^ Houten ;
1544: LD_ADDR_EXP 14
1548: PUSH
1549: LD_EXP 14
1553: PUSH
1554: LD_EXP 9
1558: ADD
1559: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
1560: LD_EXP 9
1564: PPUSH
1565: LD_STRING 10_Houten
1567: PPUSH
1568: CALL_OW 38
// end ; end ; Cyrus = PrepareUnit ( 09_Cyrus , true ) ;
1572: LD_ADDR_EXP 6
1576: PUSH
1577: LD_STRING 09_Cyrus
1579: PPUSH
1580: LD_INT 1
1582: PPUSH
1583: CALL 5664 0 2
1587: ST_TO_ADDR
// PlaceUnitArea ( Cyrus , CoreHeroes , false ) ;
1588: LD_EXP 6
1592: PPUSH
1593: LD_INT 10
1595: PPUSH
1596: LD_INT 0
1598: PPUSH
1599: CALL_OW 49
// ComTurnXY ( Cyrus , 42 , 35 ) ;
1603: LD_EXP 6
1607: PPUSH
1608: LD_INT 42
1610: PPUSH
1611: LD_INT 35
1613: PPUSH
1614: CALL_OW 118
// if IsPlaced ( Cyrus ) then
1618: LD_EXP 6
1622: PPUSH
1623: CALL_OW 305
1627: IFFALSE 1657
// begin coreHeroesTab = coreHeroesTab ^ Cyrus ;
1629: LD_ADDR_EXP 14
1633: PUSH
1634: LD_EXP 14
1638: PUSH
1639: LD_EXP 6
1643: ADD
1644: ST_TO_ADDR
// SaveCharacters ( Cyrus , 10_Cyrus ) ;
1645: LD_EXP 6
1649: PPUSH
1650: LD_STRING 10_Cyrus
1652: PPUSH
1653: CALL_OW 38
// end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) then
1657: LD_EXP 6
1661: PPUSH
1662: CALL_OW 305
1666: NOT
1667: PUSH
1668: LD_EXP 3
1672: PPUSH
1673: CALL_OW 305
1677: NOT
1678: AND
1679: IFFALSE 1766
// begin Brown = PrepareUnit ( 08_Brown , true ) ;
1681: LD_ADDR_EXP 3
1685: PUSH
1686: LD_STRING 08_Brown
1688: PPUSH
1689: LD_INT 1
1691: PPUSH
1692: CALL 5664 0 2
1696: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
1697: LD_EXP 3
1701: PPUSH
1702: LD_INT 10
1704: PPUSH
1705: LD_INT 0
1707: PPUSH
1708: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
1712: LD_EXP 3
1716: PPUSH
1717: LD_INT 42
1719: PPUSH
1720: LD_INT 35
1722: PPUSH
1723: CALL_OW 118
// if IsPlaced ( Brown ) then
1727: LD_EXP 3
1731: PPUSH
1732: CALL_OW 305
1736: IFFALSE 1766
// begin coreHeroesTab = coreHeroesTab ^ Brown ;
1738: LD_ADDR_EXP 14
1742: PUSH
1743: LD_EXP 14
1747: PUSH
1748: LD_EXP 3
1752: ADD
1753: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
1754: LD_EXP 3
1758: PPUSH
1759: LD_STRING 10_Brown
1761: PPUSH
1762: CALL_OW 38
// end ; end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
1766: LD_EXP 6
1770: PPUSH
1771: CALL_OW 305
1775: NOT
1776: PUSH
1777: LD_EXP 3
1781: PPUSH
1782: CALL_OW 305
1786: NOT
1787: AND
1788: PUSH
1789: LD_EXP 4
1793: PPUSH
1794: CALL_OW 305
1798: NOT
1799: AND
1800: IFFALSE 1887
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
1802: LD_ADDR_EXP 4
1806: PUSH
1807: LD_STRING 08_Donaldson
1809: PPUSH
1810: LD_INT 1
1812: PPUSH
1813: CALL 5664 0 2
1817: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
1818: LD_EXP 4
1822: PPUSH
1823: LD_INT 10
1825: PPUSH
1826: LD_INT 0
1828: PPUSH
1829: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
1833: LD_EXP 4
1837: PPUSH
1838: LD_INT 42
1840: PPUSH
1841: LD_INT 35
1843: PPUSH
1844: CALL_OW 118
// if IsPlaced ( Donaldson ) then
1848: LD_EXP 4
1852: PPUSH
1853: CALL_OW 305
1857: IFFALSE 1887
// begin coreHeroesTab = coreHeroesTab ^ Donaldson ;
1859: LD_ADDR_EXP 14
1863: PUSH
1864: LD_EXP 14
1868: PUSH
1869: LD_EXP 4
1873: ADD
1874: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
1875: LD_EXP 4
1879: PPUSH
1880: LD_STRING 10_Donaldson
1882: PPUSH
1883: CALL_OW 38
// end ; end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
1887: LD_EXP 6
1891: PPUSH
1892: CALL_OW 305
1896: NOT
1897: PUSH
1898: LD_EXP 3
1902: PPUSH
1903: CALL_OW 305
1907: NOT
1908: AND
1909: PUSH
1910: LD_EXP 4
1914: PPUSH
1915: CALL_OW 305
1919: NOT
1920: AND
1921: PUSH
1922: LD_EXP 8
1926: PPUSH
1927: CALL_OW 305
1931: NOT
1932: AND
1933: IFFALSE 2020
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
1935: LD_ADDR_EXP 8
1939: PUSH
1940: LD_STRING 08_Frank
1942: PPUSH
1943: LD_INT 1
1945: PPUSH
1946: CALL 5664 0 2
1950: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
1951: LD_EXP 8
1955: PPUSH
1956: LD_INT 10
1958: PPUSH
1959: LD_INT 0
1961: PPUSH
1962: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
1966: LD_EXP 8
1970: PPUSH
1971: LD_INT 42
1973: PPUSH
1974: LD_INT 35
1976: PPUSH
1977: CALL_OW 118
// if IsPlaced ( Frank ) then
1981: LD_EXP 8
1985: PPUSH
1986: CALL_OW 305
1990: IFFALSE 2020
// begin coreHeroesTab = coreHeroesTab ^ Frank ;
1992: LD_ADDR_EXP 14
1996: PUSH
1997: LD_EXP 14
2001: PUSH
2002: LD_EXP 8
2006: ADD
2007: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
2008: LD_EXP 8
2012: PPUSH
2013: LD_STRING 10_Frank
2015: PPUSH
2016: CALL_OW 38
// end ; end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
2020: LD_EXP 6
2024: PPUSH
2025: CALL_OW 305
2029: NOT
2030: PUSH
2031: LD_EXP 3
2035: PPUSH
2036: CALL_OW 305
2040: NOT
2041: AND
2042: PUSH
2043: LD_EXP 4
2047: PPUSH
2048: CALL_OW 305
2052: NOT
2053: AND
2054: PUSH
2055: LD_EXP 8
2059: PPUSH
2060: CALL_OW 305
2064: NOT
2065: AND
2066: PUSH
2067: LD_EXP 9
2071: PPUSH
2072: CALL_OW 305
2076: NOT
2077: AND
2078: IFFALSE 2165
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
2080: LD_ADDR_EXP 9
2084: PUSH
2085: LD_STRING 09_Houten
2087: PPUSH
2088: LD_INT 1
2090: PPUSH
2091: CALL 5664 0 2
2095: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
2096: LD_EXP 9
2100: PPUSH
2101: LD_INT 10
2103: PPUSH
2104: LD_INT 0
2106: PPUSH
2107: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
2111: LD_EXP 9
2115: PPUSH
2116: LD_INT 42
2118: PPUSH
2119: LD_INT 35
2121: PPUSH
2122: CALL_OW 118
// if IsPlaced ( Houten ) then
2126: LD_EXP 9
2130: PPUSH
2131: CALL_OW 305
2135: IFFALSE 2165
// begin coreHeroesTab = coreHeroesTab ^ Houten ;
2137: LD_ADDR_EXP 14
2141: PUSH
2142: LD_EXP 14
2146: PUSH
2147: LD_EXP 9
2151: ADD
2152: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
2153: LD_EXP 9
2157: PPUSH
2158: LD_STRING 10_Houten
2160: PPUSH
2161: CALL_OW 38
// end ; end ; Lisa = PrepareUnit ( 08_Lisa , true ) ;
2165: LD_ADDR_EXP 7
2169: PUSH
2170: LD_STRING 08_Lisa
2172: PPUSH
2173: LD_INT 1
2175: PPUSH
2176: CALL 5664 0 2
2180: ST_TO_ADDR
// PlaceUnitArea ( Lisa , CoreHeroes , false ) ;
2181: LD_EXP 7
2185: PPUSH
2186: LD_INT 10
2188: PPUSH
2189: LD_INT 0
2191: PPUSH
2192: CALL_OW 49
// ComTurnXY ( Lisa , 42 , 35 ) ;
2196: LD_EXP 7
2200: PPUSH
2201: LD_INT 42
2203: PPUSH
2204: LD_INT 35
2206: PPUSH
2207: CALL_OW 118
// if IsPlaced ( Lisa ) then
2211: LD_EXP 7
2215: PPUSH
2216: CALL_OW 305
2220: IFFALSE 2250
// begin coreHeroesTab = coreHeroesTab ^ Lisa ;
2222: LD_ADDR_EXP 14
2226: PUSH
2227: LD_EXP 14
2231: PUSH
2232: LD_EXP 7
2236: ADD
2237: ST_TO_ADDR
// SaveCharacters ( Lisa , 10_Lisa ) ;
2238: LD_EXP 7
2242: PPUSH
2243: LD_STRING 10_Lisa
2245: PPUSH
2246: CALL_OW 38
// end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) then
2250: LD_EXP 7
2254: PPUSH
2255: CALL_OW 305
2259: NOT
2260: PUSH
2261: LD_EXP 3
2265: PPUSH
2266: CALL_OW 305
2270: NOT
2271: AND
2272: IFFALSE 2359
// begin Brown = PrepareUnit ( 08_Brown , true ) ;
2274: LD_ADDR_EXP 3
2278: PUSH
2279: LD_STRING 08_Brown
2281: PPUSH
2282: LD_INT 1
2284: PPUSH
2285: CALL 5664 0 2
2289: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
2290: LD_EXP 3
2294: PPUSH
2295: LD_INT 10
2297: PPUSH
2298: LD_INT 0
2300: PPUSH
2301: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
2305: LD_EXP 3
2309: PPUSH
2310: LD_INT 42
2312: PPUSH
2313: LD_INT 35
2315: PPUSH
2316: CALL_OW 118
// if IsPlaced ( Brown ) then
2320: LD_EXP 3
2324: PPUSH
2325: CALL_OW 305
2329: IFFALSE 2359
// begin coreHeroesTab = coreHeroesTab ^ Brown ;
2331: LD_ADDR_EXP 14
2335: PUSH
2336: LD_EXP 14
2340: PUSH
2341: LD_EXP 3
2345: ADD
2346: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
2347: LD_EXP 3
2351: PPUSH
2352: LD_STRING 10_Brown
2354: PPUSH
2355: CALL_OW 38
// end ; end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
2359: LD_EXP 7
2363: PPUSH
2364: CALL_OW 305
2368: NOT
2369: PUSH
2370: LD_EXP 3
2374: PPUSH
2375: CALL_OW 305
2379: NOT
2380: AND
2381: PUSH
2382: LD_EXP 4
2386: PPUSH
2387: CALL_OW 305
2391: NOT
2392: AND
2393: IFFALSE 2480
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
2395: LD_ADDR_EXP 4
2399: PUSH
2400: LD_STRING 08_Donaldson
2402: PPUSH
2403: LD_INT 1
2405: PPUSH
2406: CALL 5664 0 2
2410: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
2411: LD_EXP 4
2415: PPUSH
2416: LD_INT 10
2418: PPUSH
2419: LD_INT 0
2421: PPUSH
2422: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
2426: LD_EXP 4
2430: PPUSH
2431: LD_INT 42
2433: PPUSH
2434: LD_INT 35
2436: PPUSH
2437: CALL_OW 118
// if IsPlaced ( Donaldson ) then
2441: LD_EXP 4
2445: PPUSH
2446: CALL_OW 305
2450: IFFALSE 2480
// begin coreHeroesTab = coreHeroesTab ^ Donaldson ;
2452: LD_ADDR_EXP 14
2456: PUSH
2457: LD_EXP 14
2461: PUSH
2462: LD_EXP 4
2466: ADD
2467: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
2468: LD_EXP 4
2472: PPUSH
2473: LD_STRING 10_Donaldson
2475: PPUSH
2476: CALL_OW 38
// end ; end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
2480: LD_EXP 7
2484: PPUSH
2485: CALL_OW 305
2489: NOT
2490: PUSH
2491: LD_EXP 3
2495: PPUSH
2496: CALL_OW 305
2500: NOT
2501: AND
2502: PUSH
2503: LD_EXP 4
2507: PPUSH
2508: CALL_OW 305
2512: NOT
2513: AND
2514: PUSH
2515: LD_EXP 8
2519: PPUSH
2520: CALL_OW 305
2524: NOT
2525: AND
2526: IFFALSE 2613
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
2528: LD_ADDR_EXP 8
2532: PUSH
2533: LD_STRING 08_Frank
2535: PPUSH
2536: LD_INT 1
2538: PPUSH
2539: CALL 5664 0 2
2543: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
2544: LD_EXP 8
2548: PPUSH
2549: LD_INT 10
2551: PPUSH
2552: LD_INT 0
2554: PPUSH
2555: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
2559: LD_EXP 8
2563: PPUSH
2564: LD_INT 42
2566: PPUSH
2567: LD_INT 35
2569: PPUSH
2570: CALL_OW 118
// if IsPlaced ( Frank ) then
2574: LD_EXP 8
2578: PPUSH
2579: CALL_OW 305
2583: IFFALSE 2613
// begin coreHeroesTab = coreHeroesTab ^ Frank ;
2585: LD_ADDR_EXP 14
2589: PUSH
2590: LD_EXP 14
2594: PUSH
2595: LD_EXP 8
2599: ADD
2600: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
2601: LD_EXP 8
2605: PPUSH
2606: LD_STRING 10_Frank
2608: PPUSH
2609: CALL_OW 38
// end ; end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
2613: LD_EXP 7
2617: PPUSH
2618: CALL_OW 305
2622: NOT
2623: PUSH
2624: LD_EXP 3
2628: PPUSH
2629: CALL_OW 305
2633: NOT
2634: AND
2635: PUSH
2636: LD_EXP 4
2640: PPUSH
2641: CALL_OW 305
2645: NOT
2646: AND
2647: PUSH
2648: LD_EXP 8
2652: PPUSH
2653: CALL_OW 305
2657: NOT
2658: AND
2659: PUSH
2660: LD_EXP 9
2664: PPUSH
2665: CALL_OW 305
2669: NOT
2670: AND
2671: IFFALSE 2758
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
2673: LD_ADDR_EXP 9
2677: PUSH
2678: LD_STRING 09_Houten
2680: PPUSH
2681: LD_INT 1
2683: PPUSH
2684: CALL 5664 0 2
2688: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
2689: LD_EXP 9
2693: PPUSH
2694: LD_INT 10
2696: PPUSH
2697: LD_INT 0
2699: PPUSH
2700: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
2704: LD_EXP 9
2708: PPUSH
2709: LD_INT 42
2711: PPUSH
2712: LD_INT 35
2714: PPUSH
2715: CALL_OW 118
// if IsPlaced ( Houten ) then
2719: LD_EXP 9
2723: PPUSH
2724: CALL_OW 305
2728: IFFALSE 2758
// begin coreHeroesTab = coreHeroesTab ^ Houten ;
2730: LD_ADDR_EXP 14
2734: PUSH
2735: LD_EXP 14
2739: PUSH
2740: LD_EXP 9
2744: ADD
2745: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
2746: LD_EXP 9
2750: PPUSH
2751: LD_STRING 10_Houten
2753: PPUSH
2754: CALL_OW 38
// end ; end ; Gary = PrepareUnit ( 09_Gary , true ) ;
2758: LD_ADDR_EXP 10
2762: PUSH
2763: LD_STRING 09_Gary
2765: PPUSH
2766: LD_INT 1
2768: PPUSH
2769: CALL 5664 0 2
2773: ST_TO_ADDR
// PlaceUnitArea ( Gary , CoreHeroes , false ) ;
2774: LD_EXP 10
2778: PPUSH
2779: LD_INT 10
2781: PPUSH
2782: LD_INT 0
2784: PPUSH
2785: CALL_OW 49
// ComTurnXY ( Gary , 42 , 35 ) ;
2789: LD_EXP 10
2793: PPUSH
2794: LD_INT 42
2796: PPUSH
2797: LD_INT 35
2799: PPUSH
2800: CALL_OW 118
// if IsPlaced ( Gary ) then
2804: LD_EXP 10
2808: PPUSH
2809: CALL_OW 305
2813: IFFALSE 2843
// begin coreHeroesTab = coreHeroesTab ^ Gary ;
2815: LD_ADDR_EXP 14
2819: PUSH
2820: LD_EXP 14
2824: PUSH
2825: LD_EXP 10
2829: ADD
2830: ST_TO_ADDR
// SaveCharacters ( Gary , 10_Gary ) ;
2831: LD_EXP 10
2835: PPUSH
2836: LD_STRING 10_Gary
2838: PPUSH
2839: CALL_OW 38
// end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) then
2843: LD_EXP 10
2847: PPUSH
2848: CALL_OW 305
2852: NOT
2853: PUSH
2854: LD_EXP 3
2858: PPUSH
2859: CALL_OW 305
2863: NOT
2864: AND
2865: IFFALSE 2952
// begin Brown = PrepareUnit ( 08_Brown , true ) ;
2867: LD_ADDR_EXP 3
2871: PUSH
2872: LD_STRING 08_Brown
2874: PPUSH
2875: LD_INT 1
2877: PPUSH
2878: CALL 5664 0 2
2882: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
2883: LD_EXP 3
2887: PPUSH
2888: LD_INT 10
2890: PPUSH
2891: LD_INT 0
2893: PPUSH
2894: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
2898: LD_EXP 3
2902: PPUSH
2903: LD_INT 42
2905: PPUSH
2906: LD_INT 35
2908: PPUSH
2909: CALL_OW 118
// if IsPlaced ( Brown ) then
2913: LD_EXP 3
2917: PPUSH
2918: CALL_OW 305
2922: IFFALSE 2952
// begin coreHeroesTab = coreHeroesTab ^ Brown ;
2924: LD_ADDR_EXP 14
2928: PUSH
2929: LD_EXP 14
2933: PUSH
2934: LD_EXP 3
2938: ADD
2939: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
2940: LD_EXP 3
2944: PPUSH
2945: LD_STRING 10_Brown
2947: PPUSH
2948: CALL_OW 38
// end ; end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
2952: LD_EXP 10
2956: PPUSH
2957: CALL_OW 305
2961: NOT
2962: PUSH
2963: LD_EXP 3
2967: PPUSH
2968: CALL_OW 305
2972: NOT
2973: AND
2974: PUSH
2975: LD_EXP 4
2979: PPUSH
2980: CALL_OW 305
2984: NOT
2985: AND
2986: IFFALSE 3073
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
2988: LD_ADDR_EXP 4
2992: PUSH
2993: LD_STRING 08_Donaldson
2995: PPUSH
2996: LD_INT 1
2998: PPUSH
2999: CALL 5664 0 2
3003: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
3004: LD_EXP 4
3008: PPUSH
3009: LD_INT 10
3011: PPUSH
3012: LD_INT 0
3014: PPUSH
3015: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
3019: LD_EXP 4
3023: PPUSH
3024: LD_INT 42
3026: PPUSH
3027: LD_INT 35
3029: PPUSH
3030: CALL_OW 118
// if IsPlaced ( Donaldson ) then
3034: LD_EXP 4
3038: PPUSH
3039: CALL_OW 305
3043: IFFALSE 3073
// begin coreHeroesTab = coreHeroesTab ^ Donaldson ;
3045: LD_ADDR_EXP 14
3049: PUSH
3050: LD_EXP 14
3054: PUSH
3055: LD_EXP 4
3059: ADD
3060: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
3061: LD_EXP 4
3065: PPUSH
3066: LD_STRING 10_Donaldson
3068: PPUSH
3069: CALL_OW 38
// end ; end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
3073: LD_EXP 10
3077: PPUSH
3078: CALL_OW 305
3082: NOT
3083: PUSH
3084: LD_EXP 3
3088: PPUSH
3089: CALL_OW 305
3093: NOT
3094: AND
3095: PUSH
3096: LD_EXP 4
3100: PPUSH
3101: CALL_OW 305
3105: NOT
3106: AND
3107: PUSH
3108: LD_EXP 8
3112: PPUSH
3113: CALL_OW 305
3117: NOT
3118: AND
3119: IFFALSE 3206
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
3121: LD_ADDR_EXP 8
3125: PUSH
3126: LD_STRING 08_Frank
3128: PPUSH
3129: LD_INT 1
3131: PPUSH
3132: CALL 5664 0 2
3136: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
3137: LD_EXP 8
3141: PPUSH
3142: LD_INT 10
3144: PPUSH
3145: LD_INT 0
3147: PPUSH
3148: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
3152: LD_EXP 8
3156: PPUSH
3157: LD_INT 42
3159: PPUSH
3160: LD_INT 35
3162: PPUSH
3163: CALL_OW 118
// if IsPlaced ( Frank ) then
3167: LD_EXP 8
3171: PPUSH
3172: CALL_OW 305
3176: IFFALSE 3206
// begin coreHeroesTab = coreHeroesTab ^ Frank ;
3178: LD_ADDR_EXP 14
3182: PUSH
3183: LD_EXP 14
3187: PUSH
3188: LD_EXP 8
3192: ADD
3193: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
3194: LD_EXP 8
3198: PPUSH
3199: LD_STRING 10_Frank
3201: PPUSH
3202: CALL_OW 38
// end ; end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
3206: LD_EXP 10
3210: PPUSH
3211: CALL_OW 305
3215: NOT
3216: PUSH
3217: LD_EXP 3
3221: PPUSH
3222: CALL_OW 305
3226: NOT
3227: AND
3228: PUSH
3229: LD_EXP 4
3233: PPUSH
3234: CALL_OW 305
3238: NOT
3239: AND
3240: PUSH
3241: LD_EXP 8
3245: PPUSH
3246: CALL_OW 305
3250: NOT
3251: AND
3252: PUSH
3253: LD_EXP 9
3257: PPUSH
3258: CALL_OW 305
3262: NOT
3263: AND
3264: IFFALSE 3351
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
3266: LD_ADDR_EXP 9
3270: PUSH
3271: LD_STRING 09_Houten
3273: PPUSH
3274: LD_INT 1
3276: PPUSH
3277: CALL 5664 0 2
3281: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
3282: LD_EXP 9
3286: PPUSH
3287: LD_INT 10
3289: PPUSH
3290: LD_INT 0
3292: PPUSH
3293: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
3297: LD_EXP 9
3301: PPUSH
3302: LD_INT 42
3304: PPUSH
3305: LD_INT 35
3307: PPUSH
3308: CALL_OW 118
// if IsPlaced ( Houten ) then
3312: LD_EXP 9
3316: PPUSH
3317: CALL_OW 305
3321: IFFALSE 3351
// begin coreHeroesTab = coreHeroesTab ^ Houten ;
3323: LD_ADDR_EXP 14
3327: PUSH
3328: LD_EXP 14
3332: PUSH
3333: LD_EXP 9
3337: ADD
3338: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
3339: LD_EXP 9
3343: PPUSH
3344: LD_STRING 10_Houten
3346: PPUSH
3347: CALL_OW 38
// end ; end ; for i = 1 to 5 - coreHeroesTab do
3351: LD_ADDR_VAR 0 2
3355: PUSH
3356: DOUBLE
3357: LD_INT 1
3359: DEC
3360: ST_TO_ADDR
3361: LD_INT 5
3363: PUSH
3364: LD_EXP 14
3368: MINUS
3369: PUSH
3370: FOR_TO
3371: IFFALSE 3495
// begin hc_gallery =  ;
3373: LD_ADDR_OWVAR 33
3377: PUSH
3378: LD_STRING 
3380: ST_TO_ADDR
// hc_name =  ;
3381: LD_ADDR_OWVAR 26
3385: PUSH
3386: LD_STRING 
3388: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
3389: LD_INT 0
3391: PPUSH
3392: LD_INT 1
3394: PUSH
3395: LD_INT 2
3397: PUSH
3398: LD_INT 3
3400: PUSH
3401: LD_INT 4
3403: PUSH
3404: EMPTY
3405: LIST
3406: LIST
3407: LIST
3408: LIST
3409: PUSH
3410: LD_INT 1
3412: PPUSH
3413: LD_INT 4
3415: PPUSH
3416: CALL_OW 12
3420: ARRAY
3421: PPUSH
3422: LD_INT 4
3424: PPUSH
3425: LD_INT 6
3427: PPUSH
3428: CALL_OW 12
3432: PPUSH
3433: CALL_OW 380
// un = CreateHuman ;
3437: LD_ADDR_VAR 0 3
3441: PUSH
3442: CALL_OW 44
3446: ST_TO_ADDR
// coreHeroesTab = coreHeroesTab ^ un ;
3447: LD_ADDR_EXP 14
3451: PUSH
3452: LD_EXP 14
3456: PUSH
3457: LD_VAR 0 3
3461: ADD
3462: ST_TO_ADDR
// PlaceUnitArea ( un , CoreHeroes , false ) ;
3463: LD_VAR 0 3
3467: PPUSH
3468: LD_INT 10
3470: PPUSH
3471: LD_INT 0
3473: PPUSH
3474: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
3478: LD_VAR 0 3
3482: PPUSH
3483: LD_INT 42
3485: PPUSH
3486: LD_INT 35
3488: PPUSH
3489: CALL_OW 118
// end ;
3493: GO 3370
3495: POP
3496: POP
// siberite = LoadVariable ( 09_SibRes , 0 ) ;
3497: LD_ADDR_EXP 17
3501: PUSH
3502: LD_STRING 09_SibRes
3504: PPUSH
3505: LD_INT 0
3507: PPUSH
3508: CALL_OW 30
3512: ST_TO_ADDR
// if siberite > 500 then
3513: LD_EXP 17
3517: PUSH
3518: LD_INT 500
3520: GREATER
3521: IFFALSE 3531
// siberite := 500 ;
3523: LD_ADDR_EXP 17
3527: PUSH
3528: LD_INT 500
3530: ST_TO_ADDR
// others08 = CreateCharacterSet ( 08_other_survivors ) ;
3531: LD_ADDR_EXP 11
3535: PUSH
3536: LD_STRING 08_other_survivors
3538: PPUSH
3539: CALL_OW 31
3543: ST_TO_ADDR
// if siberite >= 200 then
3544: LD_EXP 17
3548: PUSH
3549: LD_INT 200
3551: GREATEREQUAL
3552: IFFALSE 4595
// begin if not IsPlaced ( Brown ) then
3554: LD_EXP 3
3558: PPUSH
3559: CALL_OW 305
3563: NOT
3564: IFFALSE 3651
// begin Brown = PrepareUnit ( 08_Brown , true ) ;
3566: LD_ADDR_EXP 3
3570: PUSH
3571: LD_STRING 08_Brown
3573: PPUSH
3574: LD_INT 1
3576: PPUSH
3577: CALL 5664 0 2
3581: ST_TO_ADDR
// PlaceUnitArea ( Brown , AddHeroes , false ) ;
3582: LD_EXP 3
3586: PPUSH
3587: LD_INT 11
3589: PPUSH
3590: LD_INT 0
3592: PPUSH
3593: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
3597: LD_EXP 3
3601: PPUSH
3602: LD_INT 42
3604: PPUSH
3605: LD_INT 35
3607: PPUSH
3608: CALL_OW 118
// if IsPlaced ( Brown ) then
3612: LD_EXP 3
3616: PPUSH
3617: CALL_OW 305
3621: IFFALSE 3651
// begin addHeroesTab = addHeroesTab ^ Brown ;
3623: LD_ADDR_EXP 15
3627: PUSH
3628: LD_EXP 15
3632: PUSH
3633: LD_EXP 3
3637: ADD
3638: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
3639: LD_EXP 3
3643: PPUSH
3644: LD_STRING 10_Brown
3646: PPUSH
3647: CALL_OW 38
// end ; end ; if not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
3651: LD_EXP 3
3655: PPUSH
3656: CALL_OW 305
3660: NOT
3661: PUSH
3662: LD_EXP 4
3666: PPUSH
3667: CALL_OW 305
3671: NOT
3672: AND
3673: IFFALSE 3760
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
3675: LD_ADDR_EXP 4
3679: PUSH
3680: LD_STRING 08_Donaldson
3682: PPUSH
3683: LD_INT 1
3685: PPUSH
3686: CALL 5664 0 2
3690: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , addHeroes , false ) ;
3691: LD_EXP 4
3695: PPUSH
3696: LD_INT 11
3698: PPUSH
3699: LD_INT 0
3701: PPUSH
3702: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
3706: LD_EXP 4
3710: PPUSH
3711: LD_INT 42
3713: PPUSH
3714: LD_INT 35
3716: PPUSH
3717: CALL_OW 118
// if IsPlaced ( Donaldson ) then
3721: LD_EXP 4
3725: PPUSH
3726: CALL_OW 305
3730: IFFALSE 3760
// begin addHeroesTab = addHeroesTab ^ Donaldson ;
3732: LD_ADDR_EXP 15
3736: PUSH
3737: LD_EXP 15
3741: PUSH
3742: LD_EXP 4
3746: ADD
3747: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
3748: LD_EXP 4
3752: PPUSH
3753: LD_STRING 10_Donaldson
3755: PPUSH
3756: CALL_OW 38
// end ; end ; if not IsPlaced ( Brown ) and not IsPlaced ( Frank ) then
3760: LD_EXP 3
3764: PPUSH
3765: CALL_OW 305
3769: NOT
3770: PUSH
3771: LD_EXP 8
3775: PPUSH
3776: CALL_OW 305
3780: NOT
3781: AND
3782: IFFALSE 3869
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
3784: LD_ADDR_EXP 8
3788: PUSH
3789: LD_STRING 08_Frank
3791: PPUSH
3792: LD_INT 1
3794: PPUSH
3795: CALL 5664 0 2
3799: ST_TO_ADDR
// PlaceUnitArea ( Frank , addHeroes , false ) ;
3800: LD_EXP 8
3804: PPUSH
3805: LD_INT 11
3807: PPUSH
3808: LD_INT 0
3810: PPUSH
3811: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
3815: LD_EXP 8
3819: PPUSH
3820: LD_INT 42
3822: PPUSH
3823: LD_INT 35
3825: PPUSH
3826: CALL_OW 118
// if IsPlaced ( Frank ) then
3830: LD_EXP 8
3834: PPUSH
3835: CALL_OW 305
3839: IFFALSE 3869
// begin addHeroesTab = addHeroesTab ^ Frank ;
3841: LD_ADDR_EXP 15
3845: PUSH
3846: LD_EXP 15
3850: PUSH
3851: LD_EXP 8
3855: ADD
3856: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
3857: LD_EXP 8
3861: PPUSH
3862: LD_STRING 10_Frank
3864: PPUSH
3865: CALL_OW 38
// end ; end ; if not IsPlaced ( Brown ) and not IsPlaced ( Houten ) then
3869: LD_EXP 3
3873: PPUSH
3874: CALL_OW 305
3878: NOT
3879: PUSH
3880: LD_EXP 9
3884: PPUSH
3885: CALL_OW 305
3889: NOT
3890: AND
3891: IFFALSE 3980
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
3893: LD_ADDR_EXP 9
3897: PUSH
3898: LD_STRING 09_Houten
3900: PPUSH
3901: LD_INT 1
3903: PPUSH
3904: CALL 5664 0 2
3908: ST_TO_ADDR
// PlaceUnitArea ( Houten , addHeroes , false ) ;
3909: LD_EXP 9
3913: PPUSH
3914: LD_INT 11
3916: PPUSH
3917: LD_INT 0
3919: PPUSH
3920: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
3924: LD_EXP 9
3928: PPUSH
3929: LD_INT 42
3931: PPUSH
3932: LD_INT 35
3934: PPUSH
3935: CALL_OW 118
// if IsPlaced ( Houten ) then
3939: LD_EXP 9
3943: PPUSH
3944: CALL_OW 305
3948: IFFALSE 3978
// begin addHeroesTab = addHeroesTab ^ Houten ;
3950: LD_ADDR_EXP 15
3954: PUSH
3955: LD_EXP 15
3959: PUSH
3960: LD_EXP 9
3964: ADD
3965: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
3966: LD_EXP 9
3970: PPUSH
3971: LD_STRING 10_Houten
3973: PPUSH
3974: CALL_OW 38
// end ; end else
3978: GO 4056
// begin PlaceUnitArea ( others08 [ 1 ] , addHeroes , false ) ;
3980: LD_EXP 11
3984: PUSH
3985: LD_INT 1
3987: ARRAY
3988: PPUSH
3989: LD_INT 11
3991: PPUSH
3992: LD_INT 0
3994: PPUSH
3995: CALL_OW 49
// ComTurnXY ( others08 [ 1 ] , 42 , 35 ) ;
3999: LD_EXP 11
4003: PUSH
4004: LD_INT 1
4006: ARRAY
4007: PPUSH
4008: LD_INT 42
4010: PPUSH
4011: LD_INT 35
4013: PPUSH
4014: CALL_OW 118
// addHeroesTab = addHeroesTab ^ others08 [ 1 ] ;
4018: LD_ADDR_EXP 15
4022: PUSH
4023: LD_EXP 15
4027: PUSH
4028: LD_EXP 11
4032: PUSH
4033: LD_INT 1
4035: ARRAY
4036: ADD
4037: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
4038: LD_ADDR_EXP 11
4042: PUSH
4043: LD_EXP 11
4047: PPUSH
4048: LD_INT 1
4050: PPUSH
4051: CALL_OW 3
4055: ST_TO_ADDR
// end ; if not IsPlaced ( Donaldson ) then
4056: LD_EXP 4
4060: PPUSH
4061: CALL_OW 305
4065: NOT
4066: IFFALSE 4153
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
4068: LD_ADDR_EXP 4
4072: PUSH
4073: LD_STRING 08_Donaldson
4075: PPUSH
4076: LD_INT 1
4078: PPUSH
4079: CALL 5664 0 2
4083: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , AddHeroes , false ) ;
4084: LD_EXP 4
4088: PPUSH
4089: LD_INT 11
4091: PPUSH
4092: LD_INT 0
4094: PPUSH
4095: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
4099: LD_EXP 4
4103: PPUSH
4104: LD_INT 42
4106: PPUSH
4107: LD_INT 35
4109: PPUSH
4110: CALL_OW 118
// if IsPlaced ( Donaldson ) then
4114: LD_EXP 4
4118: PPUSH
4119: CALL_OW 305
4123: IFFALSE 4153
// begin addHeroesTab = addHeroesTab ^ Donaldson ;
4125: LD_ADDR_EXP 15
4129: PUSH
4130: LD_EXP 15
4134: PUSH
4135: LD_EXP 4
4139: ADD
4140: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
4141: LD_EXP 4
4145: PPUSH
4146: LD_STRING 10_Donaldson
4148: PPUSH
4149: CALL_OW 38
// end ; end ; if not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
4153: LD_EXP 4
4157: PPUSH
4158: CALL_OW 305
4162: NOT
4163: PUSH
4164: LD_EXP 8
4168: PPUSH
4169: CALL_OW 305
4173: NOT
4174: AND
4175: IFFALSE 4262
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
4177: LD_ADDR_EXP 8
4181: PUSH
4182: LD_STRING 08_Frank
4184: PPUSH
4185: LD_INT 1
4187: PPUSH
4188: CALL 5664 0 2
4192: ST_TO_ADDR
// PlaceUnitArea ( Frank , addHeroes , false ) ;
4193: LD_EXP 8
4197: PPUSH
4198: LD_INT 11
4200: PPUSH
4201: LD_INT 0
4203: PPUSH
4204: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
4208: LD_EXP 8
4212: PPUSH
4213: LD_INT 42
4215: PPUSH
4216: LD_INT 35
4218: PPUSH
4219: CALL_OW 118
// if IsPlaced ( Frank ) then
4223: LD_EXP 8
4227: PPUSH
4228: CALL_OW 305
4232: IFFALSE 4262
// begin addHeroesTab = addHeroesTab ^ Frank ;
4234: LD_ADDR_EXP 15
4238: PUSH
4239: LD_EXP 15
4243: PUSH
4244: LD_EXP 8
4248: ADD
4249: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
4250: LD_EXP 8
4254: PPUSH
4255: LD_STRING 10_Frank
4257: PPUSH
4258: CALL_OW 38
// end ; end ; if not IsPlaced ( Donaldson ) and not IsPlaced ( Houten ) then
4262: LD_EXP 4
4266: PPUSH
4267: CALL_OW 305
4271: NOT
4272: PUSH
4273: LD_EXP 9
4277: PPUSH
4278: CALL_OW 305
4282: NOT
4283: AND
4284: IFFALSE 4373
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
4286: LD_ADDR_EXP 9
4290: PUSH
4291: LD_STRING 09_Houten
4293: PPUSH
4294: LD_INT 1
4296: PPUSH
4297: CALL 5664 0 2
4301: ST_TO_ADDR
// PlaceUnitArea ( Houten , addHeroes , false ) ;
4302: LD_EXP 9
4306: PPUSH
4307: LD_INT 11
4309: PPUSH
4310: LD_INT 0
4312: PPUSH
4313: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
4317: LD_EXP 9
4321: PPUSH
4322: LD_INT 42
4324: PPUSH
4325: LD_INT 35
4327: PPUSH
4328: CALL_OW 118
// if IsPlaced ( Houten ) then
4332: LD_EXP 9
4336: PPUSH
4337: CALL_OW 305
4341: IFFALSE 4371
// begin addHeroesTab = addHeroesTab ^ Houten ;
4343: LD_ADDR_EXP 15
4347: PUSH
4348: LD_EXP 15
4352: PUSH
4353: LD_EXP 9
4357: ADD
4358: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
4359: LD_EXP 9
4363: PPUSH
4364: LD_STRING 10_Houten
4366: PPUSH
4367: CALL_OW 38
// end ; end else
4371: GO 4449
// begin PlaceUnitArea ( others08 [ 2 ] , addHeroes , false ) ;
4373: LD_EXP 11
4377: PUSH
4378: LD_INT 2
4380: ARRAY
4381: PPUSH
4382: LD_INT 11
4384: PPUSH
4385: LD_INT 0
4387: PPUSH
4388: CALL_OW 49
// ComTurnXY ( others08 [ 2 ] , 42 , 35 ) ;
4392: LD_EXP 11
4396: PUSH
4397: LD_INT 2
4399: ARRAY
4400: PPUSH
4401: LD_INT 42
4403: PPUSH
4404: LD_INT 35
4406: PPUSH
4407: CALL_OW 118
// addHeroesTab = addHeroesTab ^ others08 [ 1 ] ;
4411: LD_ADDR_EXP 15
4415: PUSH
4416: LD_EXP 15
4420: PUSH
4421: LD_EXP 11
4425: PUSH
4426: LD_INT 1
4428: ARRAY
4429: ADD
4430: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
4431: LD_ADDR_EXP 11
4435: PUSH
4436: LD_EXP 11
4440: PPUSH
4441: LD_INT 1
4443: PPUSH
4444: CALL_OW 3
4448: ST_TO_ADDR
// end ; for i = 1 to 2 - addHeroesTab do
4449: LD_ADDR_VAR 0 2
4453: PUSH
4454: DOUBLE
4455: LD_INT 1
4457: DEC
4458: ST_TO_ADDR
4459: LD_INT 2
4461: PUSH
4462: LD_EXP 15
4466: MINUS
4467: PUSH
4468: FOR_TO
4469: IFFALSE 4593
// begin hc_gallery =  ;
4471: LD_ADDR_OWVAR 33
4475: PUSH
4476: LD_STRING 
4478: ST_TO_ADDR
// hc_name =  ;
4479: LD_ADDR_OWVAR 26
4483: PUSH
4484: LD_STRING 
4486: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
4487: LD_INT 0
4489: PPUSH
4490: LD_INT 1
4492: PUSH
4493: LD_INT 2
4495: PUSH
4496: LD_INT 3
4498: PUSH
4499: LD_INT 4
4501: PUSH
4502: EMPTY
4503: LIST
4504: LIST
4505: LIST
4506: LIST
4507: PUSH
4508: LD_INT 1
4510: PPUSH
4511: LD_INT 4
4513: PPUSH
4514: CALL_OW 12
4518: ARRAY
4519: PPUSH
4520: LD_INT 4
4522: PPUSH
4523: LD_INT 6
4525: PPUSH
4526: CALL_OW 12
4530: PPUSH
4531: CALL_OW 380
// un = CreateHuman ;
4535: LD_ADDR_VAR 0 3
4539: PUSH
4540: CALL_OW 44
4544: ST_TO_ADDR
// addHeroesTab = addHeroesTab ^ un ;
4545: LD_ADDR_EXP 15
4549: PUSH
4550: LD_EXP 15
4554: PUSH
4555: LD_VAR 0 3
4559: ADD
4560: ST_TO_ADDR
// PlaceUnitArea ( un , addHeroes , false ) ;
4561: LD_VAR 0 3
4565: PPUSH
4566: LD_INT 11
4568: PPUSH
4569: LD_INT 0
4571: PPUSH
4572: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
4576: LD_VAR 0 3
4580: PPUSH
4581: LD_INT 42
4583: PPUSH
4584: LD_INT 35
4586: PPUSH
4587: CALL_OW 118
// end ;
4591: GO 4468
4593: POP
4594: POP
// end ; if siberite > 200 then
4595: LD_EXP 17
4599: PUSH
4600: LD_INT 200
4602: GREATER
4603: IFFALSE 5159
// begin if others08 > 0 then
4605: LD_EXP 11
4609: PUSH
4610: LD_INT 0
4612: GREATER
4613: IFFALSE 5003
// begin if others08 >= ( siberite - 200 ) / 100 then
4615: LD_EXP 11
4619: PUSH
4620: LD_EXP 17
4624: PUSH
4625: LD_INT 200
4627: MINUS
4628: PUSH
4629: LD_INT 100
4631: DIVREAL
4632: GREATEREQUAL
4633: IFFALSE 4745
// begin for i := 1 to ( siberite - 200 ) / 100 do
4635: LD_ADDR_VAR 0 2
4639: PUSH
4640: DOUBLE
4641: LD_INT 1
4643: DEC
4644: ST_TO_ADDR
4645: LD_EXP 17
4649: PUSH
4650: LD_INT 200
4652: MINUS
4653: PUSH
4654: LD_INT 100
4656: DIVREAL
4657: PUSH
4658: FOR_TO
4659: IFFALSE 4741
// begin PlaceUnitArea ( others08 [ 1 ] , addHeroes , false ) ;
4661: LD_EXP 11
4665: PUSH
4666: LD_INT 1
4668: ARRAY
4669: PPUSH
4670: LD_INT 11
4672: PPUSH
4673: LD_INT 0
4675: PPUSH
4676: CALL_OW 49
// ComTurnXY ( others08 [ 1 ] , 42 , 35 ) ;
4680: LD_EXP 11
4684: PUSH
4685: LD_INT 1
4687: ARRAY
4688: PPUSH
4689: LD_INT 42
4691: PPUSH
4692: LD_INT 35
4694: PPUSH
4695: CALL_OW 118
// addHeroesTab = addHeroesTab ^ others08 [ i ] ;
4699: LD_ADDR_EXP 15
4703: PUSH
4704: LD_EXP 15
4708: PUSH
4709: LD_EXP 11
4713: PUSH
4714: LD_VAR 0 2
4718: ARRAY
4719: ADD
4720: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
4721: LD_ADDR_EXP 11
4725: PUSH
4726: LD_EXP 11
4730: PPUSH
4731: LD_INT 1
4733: PPUSH
4734: CALL_OW 3
4738: ST_TO_ADDR
// end ;
4739: GO 4658
4741: POP
4742: POP
// end else
4743: GO 5001
// begin for i := 1 to others08 do
4745: LD_ADDR_VAR 0 2
4749: PUSH
4750: DOUBLE
4751: LD_INT 1
4753: DEC
4754: ST_TO_ADDR
4755: LD_EXP 11
4759: PUSH
4760: FOR_TO
4761: IFFALSE 4843
// begin PlaceUnitArea ( others08 [ 1 ] , addHeroes , false ) ;
4763: LD_EXP 11
4767: PUSH
4768: LD_INT 1
4770: ARRAY
4771: PPUSH
4772: LD_INT 11
4774: PPUSH
4775: LD_INT 0
4777: PPUSH
4778: CALL_OW 49
// ComTurnXY ( others08 [ 1 ] , 42 , 35 ) ;
4782: LD_EXP 11
4786: PUSH
4787: LD_INT 1
4789: ARRAY
4790: PPUSH
4791: LD_INT 42
4793: PPUSH
4794: LD_INT 35
4796: PPUSH
4797: CALL_OW 118
// addHeroesTab = addHeroesTab ^ others08 [ i ] ;
4801: LD_ADDR_EXP 15
4805: PUSH
4806: LD_EXP 15
4810: PUSH
4811: LD_EXP 11
4815: PUSH
4816: LD_VAR 0 2
4820: ARRAY
4821: ADD
4822: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
4823: LD_ADDR_EXP 11
4827: PUSH
4828: LD_EXP 11
4832: PPUSH
4833: LD_INT 1
4835: PPUSH
4836: CALL_OW 3
4840: ST_TO_ADDR
// end ;
4841: GO 4760
4843: POP
4844: POP
// for i = 1 to ( siberite - 200 ) / 100 - others08 do
4845: LD_ADDR_VAR 0 2
4849: PUSH
4850: DOUBLE
4851: LD_INT 1
4853: DEC
4854: ST_TO_ADDR
4855: LD_EXP 17
4859: PUSH
4860: LD_INT 200
4862: MINUS
4863: PUSH
4864: LD_INT 100
4866: DIVREAL
4867: PUSH
4868: LD_EXP 11
4872: MINUS
4873: PUSH
4874: FOR_TO
4875: IFFALSE 4999
// begin hc_gallery =  ;
4877: LD_ADDR_OWVAR 33
4881: PUSH
4882: LD_STRING 
4884: ST_TO_ADDR
// hc_name =  ;
4885: LD_ADDR_OWVAR 26
4889: PUSH
4890: LD_STRING 
4892: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
4893: LD_INT 0
4895: PPUSH
4896: LD_INT 1
4898: PUSH
4899: LD_INT 2
4901: PUSH
4902: LD_INT 3
4904: PUSH
4905: LD_INT 4
4907: PUSH
4908: EMPTY
4909: LIST
4910: LIST
4911: LIST
4912: LIST
4913: PUSH
4914: LD_INT 1
4916: PPUSH
4917: LD_INT 4
4919: PPUSH
4920: CALL_OW 12
4924: ARRAY
4925: PPUSH
4926: LD_INT 4
4928: PPUSH
4929: LD_INT 6
4931: PPUSH
4932: CALL_OW 12
4936: PPUSH
4937: CALL_OW 380
// un = CreateHuman ;
4941: LD_ADDR_VAR 0 3
4945: PUSH
4946: CALL_OW 44
4950: ST_TO_ADDR
// addHeroesTab = addHeroesTab ^ un ;
4951: LD_ADDR_EXP 15
4955: PUSH
4956: LD_EXP 15
4960: PUSH
4961: LD_VAR 0 3
4965: ADD
4966: ST_TO_ADDR
// PlaceUnitArea ( un , addHeroes , false ) ;
4967: LD_VAR 0 3
4971: PPUSH
4972: LD_INT 11
4974: PPUSH
4975: LD_INT 0
4977: PPUSH
4978: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
4982: LD_VAR 0 3
4986: PPUSH
4987: LD_INT 42
4989: PPUSH
4990: LD_INT 35
4992: PPUSH
4993: CALL_OW 118
// end ;
4997: GO 4874
4999: POP
5000: POP
// end ; end else
5001: GO 5159
// begin for i = 1 to ( siberite - 200 ) / 100 - others08 do
5003: LD_ADDR_VAR 0 2
5007: PUSH
5008: DOUBLE
5009: LD_INT 1
5011: DEC
5012: ST_TO_ADDR
5013: LD_EXP 17
5017: PUSH
5018: LD_INT 200
5020: MINUS
5021: PUSH
5022: LD_INT 100
5024: DIVREAL
5025: PUSH
5026: LD_EXP 11
5030: MINUS
5031: PUSH
5032: FOR_TO
5033: IFFALSE 5157
// begin hc_gallery =  ;
5035: LD_ADDR_OWVAR 33
5039: PUSH
5040: LD_STRING 
5042: ST_TO_ADDR
// hc_name =  ;
5043: LD_ADDR_OWVAR 26
5047: PUSH
5048: LD_STRING 
5050: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
5051: LD_INT 0
5053: PPUSH
5054: LD_INT 1
5056: PUSH
5057: LD_INT 2
5059: PUSH
5060: LD_INT 3
5062: PUSH
5063: LD_INT 4
5065: PUSH
5066: EMPTY
5067: LIST
5068: LIST
5069: LIST
5070: LIST
5071: PUSH
5072: LD_INT 1
5074: PPUSH
5075: LD_INT 4
5077: PPUSH
5078: CALL_OW 12
5082: ARRAY
5083: PPUSH
5084: LD_INT 4
5086: PPUSH
5087: LD_INT 6
5089: PPUSH
5090: CALL_OW 12
5094: PPUSH
5095: CALL_OW 380
// un = CreateHuman ;
5099: LD_ADDR_VAR 0 3
5103: PUSH
5104: CALL_OW 44
5108: ST_TO_ADDR
// addHeroesTab = addHeroesTab ^ un ;
5109: LD_ADDR_EXP 15
5113: PUSH
5114: LD_EXP 15
5118: PUSH
5119: LD_VAR 0 3
5123: ADD
5124: ST_TO_ADDR
// PlaceUnitArea ( un , addHeroes , false ) ;
5125: LD_VAR 0 3
5129: PPUSH
5130: LD_INT 11
5132: PPUSH
5133: LD_INT 0
5135: PPUSH
5136: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
5140: LD_VAR 0 3
5144: PPUSH
5145: LD_INT 42
5147: PPUSH
5148: LD_INT 35
5150: PPUSH
5151: CALL_OW 118
// end ;
5155: GO 5032
5157: POP
5158: POP
// end ; end ; PlaceHumanInUnit ( JMM , car ) ;
5159: LD_EXP 1
5163: PPUSH
5164: LD_INT 138
5166: PPUSH
5167: CALL_OW 52
// PlaceHumanInUnit ( Powell , Am_bar ) ;
5171: LD_EXP 2
5175: PPUSH
5176: LD_INT 58
5178: PPUSH
5179: CALL_OW 52
// SetClass ( JMM , 1 ) ;
5183: LD_EXP 1
5187: PPUSH
5188: LD_INT 1
5190: PPUSH
5191: CALL_OW 336
// end ;
5195: LD_VAR 0 1
5199: RET
// export function PrepareConvoy ; var i , veh , un ; begin
5200: LD_INT 0
5202: PPUSH
5203: PPUSH
5204: PPUSH
5205: PPUSH
// uc_side = 1 ;
5206: LD_ADDR_OWVAR 20
5210: PUSH
5211: LD_INT 1
5213: ST_TO_ADDR
// uc_nation = 1 ;
5214: LD_ADDR_OWVAR 21
5218: PUSH
5219: LD_INT 1
5221: ST_TO_ADDR
// for i := 1 to 3 do
5222: LD_ADDR_VAR 0 2
5226: PUSH
5227: DOUBLE
5228: LD_INT 1
5230: DEC
5231: ST_TO_ADDR
5232: LD_INT 3
5234: PUSH
5235: FOR_TO
5236: IFFALSE 5382
// begin vc_engine = 1 ;
5238: LD_ADDR_OWVAR 39
5242: PUSH
5243: LD_INT 1
5245: ST_TO_ADDR
// vc_control = 1 ;
5246: LD_ADDR_OWVAR 38
5250: PUSH
5251: LD_INT 1
5253: ST_TO_ADDR
// vc_weapon = [ 3 , 4 , 5 ] [ Rand ( 1 , 3 ) ] ;
5254: LD_ADDR_OWVAR 40
5258: PUSH
5259: LD_INT 3
5261: PUSH
5262: LD_INT 4
5264: PUSH
5265: LD_INT 5
5267: PUSH
5268: EMPTY
5269: LIST
5270: LIST
5271: LIST
5272: PUSH
5273: LD_INT 1
5275: PPUSH
5276: LD_INT 3
5278: PPUSH
5279: CALL_OW 12
5283: ARRAY
5284: ST_TO_ADDR
// vc_chassis = 3 ;
5285: LD_ADDR_OWVAR 37
5289: PUSH
5290: LD_INT 3
5292: ST_TO_ADDR
// veh = CreateVehicle ;
5293: LD_ADDR_VAR 0 3
5297: PUSH
5298: CALL_OW 45
5302: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
5303: LD_VAR 0 3
5307: PPUSH
5308: LD_INT 1
5310: PPUSH
5311: CALL_OW 233
// PlaceUnitArea ( veh , WeaponTanks , false ) ;
5315: LD_VAR 0 3
5319: PPUSH
5320: LD_INT 8
5322: PPUSH
5323: LD_INT 0
5325: PPUSH
5326: CALL_OW 49
// convoy = convoy ^ veh ;
5330: LD_ADDR_EXP 12
5334: PUSH
5335: LD_EXP 12
5339: PUSH
5340: LD_VAR 0 3
5344: ADD
5345: ST_TO_ADDR
// PrepareMechanic ( false , 10 ) ;
5346: LD_INT 0
5348: PPUSH
5349: LD_INT 10
5351: PPUSH
5352: CALL_OW 383
// un = CreateHuman ;
5356: LD_ADDR_VAR 0 4
5360: PUSH
5361: CALL_OW 44
5365: ST_TO_ADDR
// PlaceHumanInUnit ( un , veh ) ;
5366: LD_VAR 0 4
5370: PPUSH
5371: LD_VAR 0 3
5375: PPUSH
5376: CALL_OW 52
// end ;
5380: GO 5235
5382: POP
5383: POP
// for i := 1 to 3 do
5384: LD_ADDR_VAR 0 2
5388: PUSH
5389: DOUBLE
5390: LD_INT 1
5392: DEC
5393: ST_TO_ADDR
5394: LD_INT 3
5396: PUSH
5397: FOR_TO
5398: IFFALSE 5536
// begin vc_engine = 1 ;
5400: LD_ADDR_OWVAR 39
5404: PUSH
5405: LD_INT 1
5407: ST_TO_ADDR
// vc_control = 1 ;
5408: LD_ADDR_OWVAR 38
5412: PUSH
5413: LD_INT 1
5415: ST_TO_ADDR
// vc_weapon = 12 ;
5416: LD_ADDR_OWVAR 40
5420: PUSH
5421: LD_INT 12
5423: ST_TO_ADDR
// vc_chassis = 3 ;
5424: LD_ADDR_OWVAR 37
5428: PUSH
5429: LD_INT 3
5431: ST_TO_ADDR
// veh = CreateVehicle ;
5432: LD_ADDR_VAR 0 3
5436: PUSH
5437: CALL_OW 45
5441: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
5442: LD_VAR 0 3
5446: PPUSH
5447: LD_INT 1
5449: PPUSH
5450: CALL_OW 233
// PlaceUnitArea ( veh , Cargo , false ) ;
5454: LD_VAR 0 3
5458: PPUSH
5459: LD_INT 9
5461: PPUSH
5462: LD_INT 0
5464: PPUSH
5465: CALL_OW 49
// AddCargo ( veh , 1 , 100 ) ;
5469: LD_VAR 0 3
5473: PPUSH
5474: LD_INT 1
5476: PPUSH
5477: LD_INT 100
5479: PPUSH
5480: CALL_OW 291
// convoy = convoy ^ veh ;
5484: LD_ADDR_EXP 12
5488: PUSH
5489: LD_EXP 12
5493: PUSH
5494: LD_VAR 0 3
5498: ADD
5499: ST_TO_ADDR
// PrepareMechanic ( false , 10 ) ;
5500: LD_INT 0
5502: PPUSH
5503: LD_INT 10
5505: PPUSH
5506: CALL_OW 383
// un = CreateHuman ;
5510: LD_ADDR_VAR 0 4
5514: PUSH
5515: CALL_OW 44
5519: ST_TO_ADDR
// PlaceHumanInUnit ( un , veh ) ;
5520: LD_VAR 0 4
5524: PPUSH
5525: LD_VAR 0 3
5529: PPUSH
5530: CALL_OW 52
// end ;
5534: GO 5397
5536: POP
5537: POP
// AddComMoveXY ( convoy [ 1 ] , 67 , 56 ) ;
5538: LD_EXP 12
5542: PUSH
5543: LD_INT 1
5545: ARRAY
5546: PPUSH
5547: LD_INT 67
5549: PPUSH
5550: LD_INT 56
5552: PPUSH
5553: CALL_OW 171
// AddComMoveXY ( convoy [ 2 ] , 63 , 52 ) ;
5557: LD_EXP 12
5561: PUSH
5562: LD_INT 2
5564: ARRAY
5565: PPUSH
5566: LD_INT 63
5568: PPUSH
5569: LD_INT 52
5571: PPUSH
5572: CALL_OW 171
// AddComMoveXY ( convoy [ 3 ] , 59 , 50 ) ;
5576: LD_EXP 12
5580: PUSH
5581: LD_INT 3
5583: ARRAY
5584: PPUSH
5585: LD_INT 59
5587: PPUSH
5588: LD_INT 50
5590: PPUSH
5591: CALL_OW 171
// wait ( 0 0$2 ) ;
5595: LD_INT 70
5597: PPUSH
5598: CALL_OW 67
// ComMoveXY ( convoy [ 4 ] , 47 , 49 ) ;
5602: LD_EXP 12
5606: PUSH
5607: LD_INT 4
5609: ARRAY
5610: PPUSH
5611: LD_INT 47
5613: PPUSH
5614: LD_INT 49
5616: PPUSH
5617: CALL_OW 111
// ComMoveXY ( convoy [ 5 ] , 47 , 49 ) ;
5621: LD_EXP 12
5625: PUSH
5626: LD_INT 5
5628: ARRAY
5629: PPUSH
5630: LD_INT 47
5632: PPUSH
5633: LD_INT 49
5635: PPUSH
5636: CALL_OW 111
// ComMoveXY ( convoy [ 6 ] , 47 , 49 ) ;
5640: LD_EXP 12
5644: PUSH
5645: LD_INT 6
5647: ARRAY
5648: PPUSH
5649: LD_INT 47
5651: PPUSH
5652: LD_INT 49
5654: PPUSH
5655: CALL_OW 111
// end ; end_of_file
5659: LD_VAR 0 1
5663: RET
// export function PrepareUnit ( ident , exist_mode ) ; var unit ; begin
5664: LD_INT 0
5666: PPUSH
5667: PPUSH
// if exist_mode then
5668: LD_VAR 0 2
5672: IFFALSE 5691
// unit := CreateCharacter ( ident ) else
5674: LD_ADDR_VAR 0 4
5678: PUSH
5679: LD_VAR 0 1
5683: PPUSH
5684: CALL_OW 34
5688: ST_TO_ADDR
5689: GO 5706
// unit := NewCharacter ( ident ) ;
5691: LD_ADDR_VAR 0 4
5695: PUSH
5696: LD_VAR 0 1
5700: PPUSH
5701: CALL_OW 25
5705: ST_TO_ADDR
// result := unit ;
5706: LD_ADDR_VAR 0 3
5710: PUSH
5711: LD_VAR 0 4
5715: ST_TO_ADDR
// end ;
5716: LD_VAR 0 3
5720: RET
// export function Video ( mode ) ; begin
5721: LD_INT 0
5723: PPUSH
// ingame_video = mode ;
5724: LD_ADDR_OWVAR 52
5728: PUSH
5729: LD_VAR 0 1
5733: ST_TO_ADDR
// interface_hidden = mode ;
5734: LD_ADDR_OWVAR 54
5738: PUSH
5739: LD_VAR 0 1
5743: ST_TO_ADDR
// end ; end_of_file
5744: LD_VAR 0 2
5748: RET
// on VehicleConstructed ( veh , fac ) do begin AddComMoveXY ( veh , 82 , 77 ) ;
5749: LD_VAR 0 1
5753: PPUSH
5754: LD_INT 82
5756: PPUSH
5757: LD_INT 77
5759: PPUSH
5760: CALL_OW 171
// end ;
5764: PPOPN 2
5766: END
