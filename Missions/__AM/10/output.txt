// export JMM , Powell ; export Brown , Donaldson , Bobby , Cyrus , Lisa , Frank , Houten , Gary ; export others08 ; export convoy , prepConv ; export coreHeroesTab , addHeroesTab ; export selectedToMission ; export siberite ; starting begin Resetfog ;
   0: CALL_OW 335
// SetBName ( Am_dep , alfa ) ;
   4: LD_INT 5
   6: PPUSH
   7: LD_STRING alfa
   9: PPUSH
  10: CALL_OW 500
// convoy := [ ] ;
  14: LD_ADDR_EXP 12
  18: PUSH
  19: EMPTY
  20: ST_TO_ADDR
// coreHeroesTab := [ ] ;
  21: LD_ADDR_EXP 14
  25: PUSH
  26: EMPTY
  27: ST_TO_ADDR
// addHeroesTab := [ ] ;
  28: LD_ADDR_EXP 15
  32: PUSH
  33: EMPTY
  34: ST_TO_ADDR
// selectedToMission := [ ] ;
  35: LD_ADDR_EXP 16
  39: PUSH
  40: EMPTY
  41: ST_TO_ADDR
// PrepareHeroes ;
  42: CALL 958 0 0
// Action ;
  46: CALL 51 0 0
// end ; end_of_file
  50: END
// export function Action ; begin
  51: LD_INT 0
  53: PPUSH
// Video ( true ) ;
  54: LD_INT 1
  56: PPUSH
  57: CALL 5084 0 1
// AddComConstruct ( Am_tov1 , 2 , 1 , 1 , 4 ) ;
  61: LD_INT 60
  63: PPUSH
  64: LD_INT 2
  66: PPUSH
  67: LD_INT 1
  69: PPUSH
  70: LD_INT 1
  72: PPUSH
  73: LD_INT 4
  75: PPUSH
  76: CALL_OW 185
// AddComConstruct ( Am_tov2 , 4 , 1 , 1 , 6 ) ;
  80: LD_INT 6
  82: PPUSH
  83: LD_INT 4
  85: PPUSH
  86: LD_INT 1
  88: PPUSH
  89: LD_INT 1
  91: PPUSH
  92: LD_INT 6
  94: PPUSH
  95: CALL_OW 185
// AddComConstruct ( Am_tov1 , 2 , 1 , 1 , 3 ) ;
  99: LD_INT 60
 101: PPUSH
 102: LD_INT 2
 104: PPUSH
 105: LD_INT 1
 107: PPUSH
 108: LD_INT 1
 110: PPUSH
 111: LD_INT 3
 113: PPUSH
 114: CALL_OW 185
// AddComConstruct ( Am_tov2 , 4 , 1 , 1 , 4 ) ;
 118: LD_INT 6
 120: PPUSH
 121: LD_INT 4
 123: PPUSH
 124: LD_INT 1
 126: PPUSH
 127: LD_INT 1
 129: PPUSH
 130: LD_INT 4
 132: PPUSH
 133: CALL_OW 185
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap1 ) ;
 137: LD_INT 47
 139: PUSH
 140: LD_INT 4
 142: PUSH
 143: EMPTY
 144: LIST
 145: LIST
 146: PPUSH
 147: LD_INT 51
 149: PPUSH
 150: CALL_OW 184
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap2 ) ;
 154: LD_INT 47
 156: PUSH
 157: LD_INT 4
 159: PUSH
 160: EMPTY
 161: LIST
 162: LIST
 163: PPUSH
 164: LD_INT 52
 166: PPUSH
 167: CALL_OW 184
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap3 ) ;
 171: LD_INT 47
 173: PUSH
 174: LD_INT 4
 176: PUSH
 177: EMPTY
 178: LIST
 179: LIST
 180: PPUSH
 181: LD_INT 53
 183: PPUSH
 184: CALL_OW 184
// CenterNowOnUnits ( car ) ;
 188: LD_INT 138
 190: PPUSH
 191: CALL_OW 87
// ComMoveXY ( car , 69 , 36 ) ;
 195: LD_INT 138
 197: PPUSH
 198: LD_INT 69
 200: PPUSH
 201: LD_INT 36
 203: PPUSH
 204: CALL_OW 111
// AddComMoveXY ( car , 65 , 43 ) ;
 208: LD_INT 138
 210: PPUSH
 211: LD_INT 65
 213: PPUSH
 214: LD_INT 43
 216: PPUSH
 217: CALL_OW 171
// AddComMoveXY ( car , 63 , 48 ) ;
 221: LD_INT 138
 223: PPUSH
 224: LD_INT 63
 226: PPUSH
 227: LD_INT 48
 229: PPUSH
 230: CALL_OW 171
// AddComMoveXY ( car , 60 , 50 ) ;
 234: LD_INT 138
 236: PPUSH
 237: LD_INT 60
 239: PPUSH
 240: LD_INT 50
 242: PPUSH
 243: CALL_OW 171
// AddComMoveXY ( car , 54 , 47 ) ;
 247: LD_INT 138
 249: PPUSH
 250: LD_INT 54
 252: PPUSH
 253: LD_INT 47
 255: PPUSH
 256: CALL_OW 171
// AddComMoveXY ( car , 51 , 40 ) ;
 260: LD_INT 138
 262: PPUSH
 263: LD_INT 51
 265: PPUSH
 266: LD_INT 40
 268: PPUSH
 269: CALL_OW 171
// repeat wait ( 0 0$1 ) ;
 273: LD_INT 35
 275: PPUSH
 276: CALL_OW 67
// CenterNowOnUnits ( car ) ;
 280: LD_INT 138
 282: PPUSH
 283: CALL_OW 87
// until IsInArea ( car , stop ) ;
 287: LD_INT 138
 289: PPUSH
 290: LD_INT 7
 292: PPUSH
 293: CALL_OW 308
 297: IFFALSE 273
// ComExitVehicle ( JMM ) ;
 299: LD_EXP 1
 303: PPUSH
 304: CALL_OW 121
// wait ( 0 0$01 ) ;
 308: LD_INT 35
 310: PPUSH
 311: CALL_OW 67
// ComMoveXY ( JMM , 42 , 37 ) ;
 315: LD_EXP 1
 319: PPUSH
 320: LD_INT 42
 322: PPUSH
 323: LD_INT 37
 325: PPUSH
 326: CALL_OW 111
// wait ( 0 0$5 ) ;
 330: LD_INT 175
 332: PPUSH
 333: CALL_OW 67
// ComExitBuilding ( Powell ) ;
 337: LD_EXP 2
 341: PPUSH
 342: CALL_OW 122
// wait ( 0 0$01 ) ;
 346: LD_INT 35
 348: PPUSH
 349: CALL_OW 67
// ComTurnUnit ( Powell , JMM ) ;
 353: LD_EXP 2
 357: PPUSH
 358: LD_EXP 1
 362: PPUSH
 363: CALL_OW 119
// ComTurnUnit ( JMM , Powell ) ;
 367: LD_EXP 1
 371: PPUSH
 372: LD_EXP 2
 376: PPUSH
 377: CALL_OW 119
// Say ( JMM , D1-JMM-1 ) ;
 381: LD_EXP 1
 385: PPUSH
 386: LD_STRING D1-JMM-1
 388: PPUSH
 389: CALL_OW 88
// Say ( Powell , D1-Pow-1 ) ;
 393: LD_EXP 2
 397: PPUSH
 398: LD_STRING D1-Pow-1
 400: PPUSH
 401: CALL_OW 88
// Say ( JMM , D1-JMM-2 ) ;
 405: LD_EXP 1
 409: PPUSH
 410: LD_STRING D1-JMM-2
 412: PPUSH
 413: CALL_OW 88
// Say ( Powell , D1-Pow-2 ) ;
 417: LD_EXP 2
 421: PPUSH
 422: LD_STRING D1-Pow-2
 424: PPUSH
 425: CALL_OW 88
// Say ( JMM , D1-JMM-3 ) ;
 429: LD_EXP 1
 433: PPUSH
 434: LD_STRING D1-JMM-3
 436: PPUSH
 437: CALL_OW 88
// Say ( Powell , D1-Pow-3 ) ;
 441: LD_EXP 2
 445: PPUSH
 446: LD_STRING D1-Pow-3
 448: PPUSH
 449: CALL_OW 88
// Say ( JMM , D1-JMM-4 ) ;
 453: LD_EXP 1
 457: PPUSH
 458: LD_STRING D1-JMM-4
 460: PPUSH
 461: CALL_OW 88
// PrepareConvoy ;
 465: CALL 4793 0 0
// Say ( Powell , D1-Pow-4 ) ;
 469: LD_EXP 2
 473: PPUSH
 474: LD_STRING D1-Pow-4
 476: PPUSH
 477: CALL_OW 88
// if TestCharacters ( 08_Joan ) then
 481: LD_STRING 08_Joan
 483: PPUSH
 484: CALL_OW 28
 488: IFFALSE 502
// Say ( Powell , D1-Pow-4a ) ;
 490: LD_EXP 2
 494: PPUSH
 495: LD_STRING D1-Pow-4a
 497: PPUSH
 498: CALL_OW 88
// Say ( Powell , D1-Pow-4b ) ;
 502: LD_EXP 2
 506: PPUSH
 507: LD_STRING D1-Pow-4b
 509: PPUSH
 510: CALL_OW 88
// AddComGive ( convoy , Am_dep ) ;
 514: LD_EXP 12
 518: PPUSH
 519: LD_INT 5
 521: PPUSH
 522: CALL_OW 221
// AddComMoveXY ( convoy , 81 , 77 ) ;
 526: LD_EXP 12
 530: PPUSH
 531: LD_INT 81
 533: PPUSH
 534: LD_INT 77
 536: PPUSH
 537: CALL_OW 171
// Say ( JMM , D1-JMM-5 ) ;
 541: LD_EXP 1
 545: PPUSH
 546: LD_STRING D1-JMM-5
 548: PPUSH
 549: CALL_OW 88
// Say ( Powell , D1-Pow-5 ) ;
 553: LD_EXP 2
 557: PPUSH
 558: LD_STRING D1-Pow-5
 560: PPUSH
 561: CALL_OW 88
// Say ( JMM , D1-JMM-6 ) ;
 565: LD_EXP 1
 569: PPUSH
 570: LD_STRING D1-JMM-6
 572: PPUSH
 573: CALL_OW 88
// Say ( Powell , D1-Pow-6 ) ;
 577: LD_EXP 2
 581: PPUSH
 582: LD_STRING D1-Pow-6
 584: PPUSH
 585: CALL_OW 88
// Say ( JMM , D1-JMM-7 ) ;
 589: LD_EXP 1
 593: PPUSH
 594: LD_STRING D1-JMM-7
 596: PPUSH
 597: CALL_OW 88
// Say ( Powell , D1-Pow-7 ) ;
 601: LD_EXP 2
 605: PPUSH
 606: LD_STRING D1-Pow-7
 608: PPUSH
 609: CALL_OW 88
// Say ( JMM , D1-JMM-8 ) ;
 613: LD_EXP 1
 617: PPUSH
 618: LD_STRING D1-JMM-8
 620: PPUSH
 621: CALL_OW 88
// ComMoveXY ( JMM , 47 , 48 ) ;
 625: LD_EXP 1
 629: PPUSH
 630: LD_INT 47
 632: PPUSH
 633: LD_INT 48
 635: PPUSH
 636: CALL_OW 111
// ComEnterUnit ( Powell , Am_bar ) ;
 640: LD_EXP 2
 644: PPUSH
 645: LD_INT 58
 647: PPUSH
 648: CALL_OW 120
// wait ( 0 0$3 ) ;
 652: LD_INT 105
 654: PPUSH
 655: CALL_OW 67
// EndMission ;
 659: CALL 668 0 0
// end ;
 663: LD_VAR 0 1
 667: RET
// export function EndMission ; var others ; begin
 668: LD_INT 0
 670: PPUSH
 671: PPUSH
// others := FilterUnitsInArea ( CoreHeroes , [ [ f_side , 1 ] , [ f_type , unit_human ] ] ) ;
 672: LD_ADDR_VAR 0 2
 676: PUSH
 677: LD_INT 10
 679: PPUSH
 680: LD_INT 22
 682: PUSH
 683: LD_INT 1
 685: PUSH
 686: EMPTY
 687: LIST
 688: LIST
 689: PUSH
 690: LD_INT 21
 692: PUSH
 693: LD_INT 1
 695: PUSH
 696: EMPTY
 697: LIST
 698: LIST
 699: PUSH
 700: EMPTY
 701: LIST
 702: LIST
 703: PPUSH
 704: CALL_OW 70
 708: ST_TO_ADDR
// others := others ^ FilterUnitsInArea ( AddHeroes , [ [ f_side , 1 ] , [ f_type , unit_human ] ] ) ;
 709: LD_ADDR_VAR 0 2
 713: PUSH
 714: LD_VAR 0 2
 718: PUSH
 719: LD_INT 11
 721: PPUSH
 722: LD_INT 22
 724: PUSH
 725: LD_INT 1
 727: PUSH
 728: EMPTY
 729: LIST
 730: LIST
 731: PUSH
 732: LD_INT 21
 734: PUSH
 735: LD_INT 1
 737: PUSH
 738: EMPTY
 739: LIST
 740: LIST
 741: PUSH
 742: EMPTY
 743: LIST
 744: LIST
 745: PPUSH
 746: CALL_OW 70
 750: ADD
 751: ST_TO_ADDR
// others := others diff [ JMM , Powell , Brown , Donaldson , Bobby , Cyrus , Lisa , Frank , Houten , Gary ] ;
 752: LD_ADDR_VAR 0 2
 756: PUSH
 757: LD_VAR 0 2
 761: PUSH
 762: LD_EXP 1
 766: PUSH
 767: LD_EXP 2
 771: PUSH
 772: LD_EXP 3
 776: PUSH
 777: LD_EXP 4
 781: PUSH
 782: LD_EXP 5
 786: PUSH
 787: LD_EXP 6
 791: PUSH
 792: LD_EXP 7
 796: PUSH
 797: LD_EXP 8
 801: PUSH
 802: LD_EXP 9
 806: PUSH
 807: LD_EXP 10
 811: PUSH
 812: EMPTY
 813: LIST
 814: LIST
 815: LIST
 816: LIST
 817: LIST
 818: LIST
 819: LIST
 820: LIST
 821: LIST
 822: LIST
 823: DIFF
 824: ST_TO_ADDR
// SaveCharacters ( JMM , 10_JMM ) ;
 825: LD_EXP 1
 829: PPUSH
 830: LD_STRING 10_JMM
 832: PPUSH
 833: CALL_OW 38
// SaveCharacters ( others , OthersIn10 ) ;
 837: LD_VAR 0 2
 841: PPUSH
 842: LD_STRING OthersIn10
 844: PPUSH
 845: CALL_OW 38
// SaveCharacters ( others08 , 10_lock ) ;
 849: LD_EXP 11
 853: PPUSH
 854: LD_STRING 10_lock
 856: PPUSH
 857: CALL_OW 38
// ToLua ( enableBioCharacter(BIO_POW) ) ;
 861: LD_STRING enableBioCharacter(BIO_POW)
 863: PPUSH
 864: CALL_OW 559
// ToLua ( enableBioCharacter(BIO_CATH) ) ;
 868: LD_STRING enableBioCharacter(BIO_CATH)
 870: PPUSH
 871: CALL_OW 559
// ChangeMap ( 10 , %_cont ) ;
 875: LD_INT 10
 877: PPUSH
 878: LD_STRING %_cont
 880: PPUSH
 881: CALL_OW 340
// end ;
 885: LD_VAR 0 1
 889: RET
// every 0 0$1 trigger FilterUnitsInArea ( removeCar , [ f_side , 1 ] ) do var i ;
 890: LD_INT 12
 892: PPUSH
 893: LD_INT 22
 895: PUSH
 896: LD_INT 1
 898: PUSH
 899: EMPTY
 900: LIST
 901: LIST
 902: PPUSH
 903: CALL_OW 70
 907: IFFALSE 955
 909: GO 911
 911: DISABLE
 912: LD_INT 0
 914: PPUSH
// begin enable ;
 915: ENABLE
// for i in FilterUnitsInArea ( removeCar , [ f_side , 1 ] ) do
 916: LD_ADDR_VAR 0 1
 920: PUSH
 921: LD_INT 12
 923: PPUSH
 924: LD_INT 22
 926: PUSH
 927: LD_INT 1
 929: PUSH
 930: EMPTY
 931: LIST
 932: LIST
 933: PPUSH
 934: CALL_OW 70
 938: PUSH
 939: FOR_IN
 940: IFFALSE 953
// RemoveUnit ( i ) ;
 942: LD_VAR 0 1
 946: PPUSH
 947: CALL_OW 64
 951: GO 939
 953: POP
 954: POP
// end ; end_of_file
 955: PPOPN 1
 957: END
// export function PrepareHeroes ; var i , un ; begin
 958: LD_INT 0
 960: PPUSH
 961: PPUSH
 962: PPUSH
// uc_side := 1 ;
 963: LD_ADDR_OWVAR 20
 967: PUSH
 968: LD_INT 1
 970: ST_TO_ADDR
// uc_nation := 1 ;
 971: LD_ADDR_OWVAR 21
 975: PUSH
 976: LD_INT 1
 978: ST_TO_ADDR
// JMM := PrepareUnit ( 09_JMM , true ) ;
 979: LD_ADDR_EXP 1
 983: PUSH
 984: LD_STRING 09_JMM
 986: PPUSH
 987: LD_INT 1
 989: PPUSH
 990: CALL 5012 0 2
 994: ST_TO_ADDR
// Powell := PrepareUnit ( Powell , false ) ;
 995: LD_ADDR_EXP 2
 999: PUSH
1000: LD_STRING Powell
1002: PPUSH
1003: LD_INT 0
1005: PPUSH
1006: CALL 5012 0 2
1010: ST_TO_ADDR
// Bobby := PrepareUnit ( 09_Bobby , true ) ;
1011: LD_ADDR_EXP 5
1015: PUSH
1016: LD_STRING 09_Bobby
1018: PPUSH
1019: LD_INT 1
1021: PPUSH
1022: CALL 5012 0 2
1026: ST_TO_ADDR
// if Bobby then
1027: LD_EXP 5
1031: IFFALSE 1102
// begin SaveCharacters ( Bobby , 10_Bobby ) ;
1033: LD_EXP 5
1037: PPUSH
1038: LD_STRING 10_Bobby
1040: PPUSH
1041: CALL_OW 38
// PlaceUnitArea ( Bobby , CoreHeroes , false ) ;
1045: LD_EXP 5
1049: PPUSH
1050: LD_INT 10
1052: PPUSH
1053: LD_INT 0
1055: PPUSH
1056: CALL_OW 49
// ComTurnXY ( Bobby , 42 , 35 ) ;
1060: LD_EXP 5
1064: PPUSH
1065: LD_INT 42
1067: PPUSH
1068: LD_INT 35
1070: PPUSH
1071: CALL_OW 118
// if IsPlaced ( Bobby ) then
1075: LD_EXP 5
1079: PPUSH
1080: CALL_OW 305
1084: IFFALSE 1102
// coreHeroesTab := coreHeroesTab ^ Bobby ;
1086: LD_ADDR_EXP 14
1090: PUSH
1091: LD_EXP 14
1095: PUSH
1096: LD_EXP 5
1100: ADD
1101: ST_TO_ADDR
// end ; Brown := PrepareUnit ( 08_Brown , true ) ;
1102: LD_ADDR_EXP 3
1106: PUSH
1107: LD_STRING 08_Brown
1109: PPUSH
1110: LD_INT 1
1112: PPUSH
1113: CALL 5012 0 2
1117: ST_TO_ADDR
// if Brown then
1118: LD_EXP 3
1122: IFFALSE 1205
// begin SaveCharacters ( Brown , 10_Brown ) ;
1124: LD_EXP 3
1128: PPUSH
1129: LD_STRING 10_Brown
1131: PPUSH
1132: CALL_OW 38
// if not IsPlaced ( Bobby ) and IsPlaced ( Brown ) then
1136: LD_EXP 5
1140: PPUSH
1141: CALL_OW 305
1145: NOT
1146: PUSH
1147: LD_EXP 3
1151: PPUSH
1152: CALL_OW 305
1156: AND
1157: IFFALSE 1205
// begin PlaceUnitArea ( Brown , CoreHeroes , false ) ;
1159: LD_EXP 3
1163: PPUSH
1164: LD_INT 10
1166: PPUSH
1167: LD_INT 0
1169: PPUSH
1170: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
1174: LD_EXP 3
1178: PPUSH
1179: LD_INT 42
1181: PPUSH
1182: LD_INT 35
1184: PPUSH
1185: CALL_OW 118
// coreHeroesTab := coreHeroesTab ^ Brown ;
1189: LD_ADDR_EXP 14
1193: PUSH
1194: LD_EXP 14
1198: PUSH
1199: LD_EXP 3
1203: ADD
1204: ST_TO_ADDR
// end ; end ; Donaldson := PrepareUnit ( 08_Donaldson , true ) ;
1205: LD_ADDR_EXP 4
1209: PUSH
1210: LD_STRING 08_Donaldson
1212: PPUSH
1213: LD_INT 1
1215: PPUSH
1216: CALL 5012 0 2
1220: ST_TO_ADDR
// if Donaldson then
1221: LD_EXP 4
1225: IFFALSE 1320
// begin SaveCharacters ( Donaldson , 10_Donaldson ) ;
1227: LD_EXP 4
1231: PPUSH
1232: LD_STRING 10_Donaldson
1234: PPUSH
1235: CALL_OW 38
// if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) then
1239: LD_EXP 5
1243: PPUSH
1244: CALL_OW 305
1248: NOT
1249: PUSH
1250: LD_EXP 3
1254: PPUSH
1255: CALL_OW 305
1259: NOT
1260: AND
1261: IFFALSE 1320
// begin PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
1263: LD_EXP 4
1267: PPUSH
1268: LD_INT 10
1270: PPUSH
1271: LD_INT 0
1273: PPUSH
1274: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
1278: LD_EXP 4
1282: PPUSH
1283: LD_INT 42
1285: PPUSH
1286: LD_INT 35
1288: PPUSH
1289: CALL_OW 118
// if IsPlaced ( Donaldson ) then
1293: LD_EXP 4
1297: PPUSH
1298: CALL_OW 305
1302: IFFALSE 1320
// coreHeroesTab := coreHeroesTab ^ Donaldson ;
1304: LD_ADDR_EXP 14
1308: PUSH
1309: LD_EXP 14
1313: PUSH
1314: LD_EXP 4
1318: ADD
1319: ST_TO_ADDR
// end ; end ; Frank := PrepareUnit ( 08_Frank , true ) ;
1320: LD_ADDR_EXP 8
1324: PUSH
1325: LD_STRING 08_Frank
1327: PPUSH
1328: LD_INT 1
1330: PPUSH
1331: CALL 5012 0 2
1335: ST_TO_ADDR
// if Frank then
1336: LD_EXP 8
1340: IFFALSE 1447
// begin SaveCharacters ( Frank , 10_Frank ) ;
1342: LD_EXP 8
1346: PPUSH
1347: LD_STRING 10_Frank
1349: PPUSH
1350: CALL_OW 38
// if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
1354: LD_EXP 5
1358: PPUSH
1359: CALL_OW 305
1363: NOT
1364: PUSH
1365: LD_EXP 3
1369: PPUSH
1370: CALL_OW 305
1374: NOT
1375: AND
1376: PUSH
1377: LD_EXP 4
1381: PPUSH
1382: CALL_OW 305
1386: NOT
1387: AND
1388: IFFALSE 1447
// begin PlaceUnitArea ( Frank , CoreHeroes , false ) ;
1390: LD_EXP 8
1394: PPUSH
1395: LD_INT 10
1397: PPUSH
1398: LD_INT 0
1400: PPUSH
1401: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
1405: LD_EXP 8
1409: PPUSH
1410: LD_INT 42
1412: PPUSH
1413: LD_INT 35
1415: PPUSH
1416: CALL_OW 118
// if IsPlaced ( Frank ) then
1420: LD_EXP 8
1424: PPUSH
1425: CALL_OW 305
1429: IFFALSE 1447
// coreHeroesTab := coreHeroesTab ^ Frank ;
1431: LD_ADDR_EXP 14
1435: PUSH
1436: LD_EXP 14
1440: PUSH
1441: LD_EXP 8
1445: ADD
1446: ST_TO_ADDR
// end ; end ; Houten := PrepareUnit ( 09_Houten , true ) ;
1447: LD_ADDR_EXP 9
1451: PUSH
1452: LD_STRING 09_Houten
1454: PPUSH
1455: LD_INT 1
1457: PPUSH
1458: CALL 5012 0 2
1462: ST_TO_ADDR
// if Houten then
1463: LD_EXP 9
1467: IFFALSE 1586
// begin SaveCharacters ( Houten , 10_Houten ) ;
1469: LD_EXP 9
1473: PPUSH
1474: LD_STRING 10_Houten
1476: PPUSH
1477: CALL_OW 38
// if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
1481: LD_EXP 5
1485: PPUSH
1486: CALL_OW 305
1490: NOT
1491: PUSH
1492: LD_EXP 3
1496: PPUSH
1497: CALL_OW 305
1501: NOT
1502: AND
1503: PUSH
1504: LD_EXP 4
1508: PPUSH
1509: CALL_OW 305
1513: NOT
1514: AND
1515: PUSH
1516: LD_EXP 8
1520: PPUSH
1521: CALL_OW 305
1525: NOT
1526: AND
1527: IFFALSE 1586
// begin PlaceUnitArea ( Houten , CoreHeroes , false ) ;
1529: LD_EXP 9
1533: PPUSH
1534: LD_INT 10
1536: PPUSH
1537: LD_INT 0
1539: PPUSH
1540: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
1544: LD_EXP 9
1548: PPUSH
1549: LD_INT 42
1551: PPUSH
1552: LD_INT 35
1554: PPUSH
1555: CALL_OW 118
// if IsPlaced ( Houten ) then
1559: LD_EXP 9
1563: PPUSH
1564: CALL_OW 305
1568: IFFALSE 1586
// coreHeroesTab := coreHeroesTab ^ Houten ;
1570: LD_ADDR_EXP 14
1574: PUSH
1575: LD_EXP 14
1579: PUSH
1580: LD_EXP 9
1584: ADD
1585: ST_TO_ADDR
// end ; end ; Cyrus := PrepareUnit ( 09_Cyrus , true ) ;
1586: LD_ADDR_EXP 6
1590: PUSH
1591: LD_STRING 09_Cyrus
1593: PPUSH
1594: LD_INT 1
1596: PPUSH
1597: CALL 5012 0 2
1601: ST_TO_ADDR
// if Cyrus then
1602: LD_EXP 6
1606: IFFALSE 1666
// begin PlaceUnitArea ( Cyrus , CoreHeroes , false ) ;
1608: LD_EXP 6
1612: PPUSH
1613: LD_INT 10
1615: PPUSH
1616: LD_INT 0
1618: PPUSH
1619: CALL_OW 49
// ComTurnXY ( Cyrus , 42 , 35 ) ;
1623: LD_EXP 6
1627: PPUSH
1628: LD_INT 42
1630: PPUSH
1631: LD_INT 35
1633: PPUSH
1634: CALL_OW 118
// coreHeroesTab := coreHeroesTab ^ Cyrus ;
1638: LD_ADDR_EXP 14
1642: PUSH
1643: LD_EXP 14
1647: PUSH
1648: LD_EXP 6
1652: ADD
1653: ST_TO_ADDR
// SaveCharacters ( Cyrus , 10_Cyrus ) ;
1654: LD_EXP 6
1658: PPUSH
1659: LD_STRING 10_Cyrus
1661: PPUSH
1662: CALL_OW 38
// end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and Brown then
1666: LD_EXP 6
1670: PPUSH
1671: CALL_OW 305
1675: NOT
1676: PUSH
1677: LD_EXP 3
1681: PPUSH
1682: CALL_OW 305
1686: NOT
1687: AND
1688: PUSH
1689: LD_EXP 3
1693: AND
1694: IFFALSE 1753
// begin PlaceUnitArea ( Brown , CoreHeroes , false ) ;
1696: LD_EXP 3
1700: PPUSH
1701: LD_INT 10
1703: PPUSH
1704: LD_INT 0
1706: PPUSH
1707: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
1711: LD_EXP 3
1715: PPUSH
1716: LD_INT 42
1718: PPUSH
1719: LD_INT 35
1721: PPUSH
1722: CALL_OW 118
// if IsPlaced ( Brown ) then
1726: LD_EXP 3
1730: PPUSH
1731: CALL_OW 305
1735: IFFALSE 1753
// coreHeroesTab := coreHeroesTab ^ Brown ;
1737: LD_ADDR_EXP 14
1741: PUSH
1742: LD_EXP 14
1746: PUSH
1747: LD_EXP 3
1751: ADD
1752: ST_TO_ADDR
// end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and Donaldson then
1753: LD_EXP 6
1757: PPUSH
1758: CALL_OW 305
1762: NOT
1763: PUSH
1764: LD_EXP 3
1768: PPUSH
1769: CALL_OW 305
1773: NOT
1774: AND
1775: PUSH
1776: LD_EXP 4
1780: PPUSH
1781: CALL_OW 305
1785: NOT
1786: AND
1787: PUSH
1788: LD_EXP 4
1792: AND
1793: IFFALSE 1852
// begin PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
1795: LD_EXP 4
1799: PPUSH
1800: LD_INT 10
1802: PPUSH
1803: LD_INT 0
1805: PPUSH
1806: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
1810: LD_EXP 4
1814: PPUSH
1815: LD_INT 42
1817: PPUSH
1818: LD_INT 35
1820: PPUSH
1821: CALL_OW 118
// if IsPlaced ( Donaldson ) then
1825: LD_EXP 4
1829: PPUSH
1830: CALL_OW 305
1834: IFFALSE 1852
// begin coreHeroesTab := coreHeroesTab ^ Donaldson ;
1836: LD_ADDR_EXP 14
1840: PUSH
1841: LD_EXP 14
1845: PUSH
1846: LD_EXP 4
1850: ADD
1851: ST_TO_ADDR
// end ; end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and Frank then
1852: LD_EXP 6
1856: PPUSH
1857: CALL_OW 305
1861: NOT
1862: PUSH
1863: LD_EXP 3
1867: PPUSH
1868: CALL_OW 305
1872: NOT
1873: AND
1874: PUSH
1875: LD_EXP 4
1879: PPUSH
1880: CALL_OW 305
1884: NOT
1885: AND
1886: PUSH
1887: LD_EXP 8
1891: PPUSH
1892: CALL_OW 305
1896: NOT
1897: AND
1898: PUSH
1899: LD_EXP 8
1903: AND
1904: IFFALSE 1963
// begin PlaceUnitArea ( Frank , CoreHeroes , false ) ;
1906: LD_EXP 8
1910: PPUSH
1911: LD_INT 10
1913: PPUSH
1914: LD_INT 0
1916: PPUSH
1917: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
1921: LD_EXP 8
1925: PPUSH
1926: LD_INT 42
1928: PPUSH
1929: LD_INT 35
1931: PPUSH
1932: CALL_OW 118
// if IsPlaced ( Frank ) then
1936: LD_EXP 8
1940: PPUSH
1941: CALL_OW 305
1945: IFFALSE 1963
// coreHeroesTab := coreHeroesTab ^ Frank ;
1947: LD_ADDR_EXP 14
1951: PUSH
1952: LD_EXP 14
1956: PUSH
1957: LD_EXP 8
1961: ADD
1962: ST_TO_ADDR
// end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) and Houten then
1963: LD_EXP 6
1967: PPUSH
1968: CALL_OW 305
1972: NOT
1973: PUSH
1974: LD_EXP 3
1978: PPUSH
1979: CALL_OW 305
1983: NOT
1984: AND
1985: PUSH
1986: LD_EXP 4
1990: PPUSH
1991: CALL_OW 305
1995: NOT
1996: AND
1997: PUSH
1998: LD_EXP 8
2002: PPUSH
2003: CALL_OW 305
2007: NOT
2008: AND
2009: PUSH
2010: LD_EXP 9
2014: PPUSH
2015: CALL_OW 305
2019: NOT
2020: AND
2021: PUSH
2022: LD_EXP 9
2026: AND
2027: IFFALSE 2086
// begin PlaceUnitArea ( Houten , CoreHeroes , false ) ;
2029: LD_EXP 9
2033: PPUSH
2034: LD_INT 10
2036: PPUSH
2037: LD_INT 0
2039: PPUSH
2040: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
2044: LD_EXP 9
2048: PPUSH
2049: LD_INT 42
2051: PPUSH
2052: LD_INT 35
2054: PPUSH
2055: CALL_OW 118
// if IsPlaced ( Houten ) then
2059: LD_EXP 9
2063: PPUSH
2064: CALL_OW 305
2068: IFFALSE 2086
// coreHeroesTab := coreHeroesTab ^ Houten ;
2070: LD_ADDR_EXP 14
2074: PUSH
2075: LD_EXP 14
2079: PUSH
2080: LD_EXP 9
2084: ADD
2085: ST_TO_ADDR
// end ; Lisa := PrepareUnit ( 08_Lisa , true ) ;
2086: LD_ADDR_EXP 7
2090: PUSH
2091: LD_STRING 08_Lisa
2093: PPUSH
2094: LD_INT 1
2096: PPUSH
2097: CALL 5012 0 2
2101: ST_TO_ADDR
// if Lisa then
2102: LD_EXP 7
2106: IFFALSE 2177
// begin SaveCharacters ( Lisa , 10_Lisa ) ;
2108: LD_EXP 7
2112: PPUSH
2113: LD_STRING 10_Lisa
2115: PPUSH
2116: CALL_OW 38
// PlaceUnitArea ( Lisa , CoreHeroes , false ) ;
2120: LD_EXP 7
2124: PPUSH
2125: LD_INT 10
2127: PPUSH
2128: LD_INT 0
2130: PPUSH
2131: CALL_OW 49
// ComTurnXY ( Lisa , 42 , 35 ) ;
2135: LD_EXP 7
2139: PPUSH
2140: LD_INT 42
2142: PPUSH
2143: LD_INT 35
2145: PPUSH
2146: CALL_OW 118
// if IsPlaced ( Lisa ) then
2150: LD_EXP 7
2154: PPUSH
2155: CALL_OW 305
2159: IFFALSE 2177
// coreHeroesTab := coreHeroesTab ^ Lisa ;
2161: LD_ADDR_EXP 14
2165: PUSH
2166: LD_EXP 14
2170: PUSH
2171: LD_EXP 7
2175: ADD
2176: ST_TO_ADDR
// end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and Brown then
2177: LD_EXP 7
2181: PPUSH
2182: CALL_OW 305
2186: NOT
2187: PUSH
2188: LD_EXP 3
2192: PPUSH
2193: CALL_OW 305
2197: NOT
2198: AND
2199: PUSH
2200: LD_EXP 3
2204: AND
2205: IFFALSE 2264
// begin PlaceUnitArea ( Brown , CoreHeroes , false ) ;
2207: LD_EXP 3
2211: PPUSH
2212: LD_INT 10
2214: PPUSH
2215: LD_INT 0
2217: PPUSH
2218: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
2222: LD_EXP 3
2226: PPUSH
2227: LD_INT 42
2229: PPUSH
2230: LD_INT 35
2232: PPUSH
2233: CALL_OW 118
// if IsPlaced ( Brown ) then
2237: LD_EXP 3
2241: PPUSH
2242: CALL_OW 305
2246: IFFALSE 2264
// coreHeroesTab := coreHeroesTab ^ Brown ;
2248: LD_ADDR_EXP 14
2252: PUSH
2253: LD_EXP 14
2257: PUSH
2258: LD_EXP 3
2262: ADD
2263: ST_TO_ADDR
// end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and Donaldson then
2264: LD_EXP 7
2268: PPUSH
2269: CALL_OW 305
2273: NOT
2274: PUSH
2275: LD_EXP 3
2279: PPUSH
2280: CALL_OW 305
2284: NOT
2285: AND
2286: PUSH
2287: LD_EXP 4
2291: PPUSH
2292: CALL_OW 305
2296: NOT
2297: AND
2298: PUSH
2299: LD_EXP 4
2303: AND
2304: IFFALSE 2363
// begin PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
2306: LD_EXP 4
2310: PPUSH
2311: LD_INT 10
2313: PPUSH
2314: LD_INT 0
2316: PPUSH
2317: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
2321: LD_EXP 4
2325: PPUSH
2326: LD_INT 42
2328: PPUSH
2329: LD_INT 35
2331: PPUSH
2332: CALL_OW 118
// if IsPlaced ( Donaldson ) then
2336: LD_EXP 4
2340: PPUSH
2341: CALL_OW 305
2345: IFFALSE 2363
// coreHeroesTab := coreHeroesTab ^ Donaldson ;
2347: LD_ADDR_EXP 14
2351: PUSH
2352: LD_EXP 14
2356: PUSH
2357: LD_EXP 4
2361: ADD
2362: ST_TO_ADDR
// end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and Frank then
2363: LD_EXP 7
2367: PPUSH
2368: CALL_OW 305
2372: NOT
2373: PUSH
2374: LD_EXP 3
2378: PPUSH
2379: CALL_OW 305
2383: NOT
2384: AND
2385: PUSH
2386: LD_EXP 4
2390: PPUSH
2391: CALL_OW 305
2395: NOT
2396: AND
2397: PUSH
2398: LD_EXP 8
2402: PPUSH
2403: CALL_OW 305
2407: NOT
2408: AND
2409: PUSH
2410: LD_EXP 8
2414: AND
2415: IFFALSE 2474
// begin PlaceUnitArea ( Frank , CoreHeroes , false ) ;
2417: LD_EXP 8
2421: PPUSH
2422: LD_INT 10
2424: PPUSH
2425: LD_INT 0
2427: PPUSH
2428: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
2432: LD_EXP 8
2436: PPUSH
2437: LD_INT 42
2439: PPUSH
2440: LD_INT 35
2442: PPUSH
2443: CALL_OW 118
// if IsPlaced ( Frank ) then
2447: LD_EXP 8
2451: PPUSH
2452: CALL_OW 305
2456: IFFALSE 2474
// coreHeroesTab := coreHeroesTab ^ Frank ;
2458: LD_ADDR_EXP 14
2462: PUSH
2463: LD_EXP 14
2467: PUSH
2468: LD_EXP 8
2472: ADD
2473: ST_TO_ADDR
// end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) and Houten then
2474: LD_EXP 7
2478: PPUSH
2479: CALL_OW 305
2483: NOT
2484: PUSH
2485: LD_EXP 3
2489: PPUSH
2490: CALL_OW 305
2494: NOT
2495: AND
2496: PUSH
2497: LD_EXP 4
2501: PPUSH
2502: CALL_OW 305
2506: NOT
2507: AND
2508: PUSH
2509: LD_EXP 8
2513: PPUSH
2514: CALL_OW 305
2518: NOT
2519: AND
2520: PUSH
2521: LD_EXP 9
2525: PPUSH
2526: CALL_OW 305
2530: NOT
2531: AND
2532: PUSH
2533: LD_EXP 9
2537: AND
2538: IFFALSE 2597
// begin PlaceUnitArea ( Houten , CoreHeroes , false ) ;
2540: LD_EXP 9
2544: PPUSH
2545: LD_INT 10
2547: PPUSH
2548: LD_INT 0
2550: PPUSH
2551: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
2555: LD_EXP 9
2559: PPUSH
2560: LD_INT 42
2562: PPUSH
2563: LD_INT 35
2565: PPUSH
2566: CALL_OW 118
// if IsPlaced ( Houten ) then
2570: LD_EXP 9
2574: PPUSH
2575: CALL_OW 305
2579: IFFALSE 2597
// coreHeroesTab := coreHeroesTab ^ Houten ;
2581: LD_ADDR_EXP 14
2585: PUSH
2586: LD_EXP 14
2590: PUSH
2591: LD_EXP 9
2595: ADD
2596: ST_TO_ADDR
// end ; Gary := PrepareUnit ( 09_Gary , true ) ;
2597: LD_ADDR_EXP 10
2601: PUSH
2602: LD_STRING 09_Gary
2604: PPUSH
2605: LD_INT 1
2607: PPUSH
2608: CALL 5012 0 2
2612: ST_TO_ADDR
// if Gary then
2613: LD_EXP 10
2617: IFFALSE 2688
// begin SaveCharacters ( Gary , 10_Gary ) ;
2619: LD_EXP 10
2623: PPUSH
2624: LD_STRING 10_Gary
2626: PPUSH
2627: CALL_OW 38
// PlaceUnitArea ( Gary , CoreHeroes , false ) ;
2631: LD_EXP 10
2635: PPUSH
2636: LD_INT 10
2638: PPUSH
2639: LD_INT 0
2641: PPUSH
2642: CALL_OW 49
// ComTurnXY ( Gary , 42 , 35 ) ;
2646: LD_EXP 10
2650: PPUSH
2651: LD_INT 42
2653: PPUSH
2654: LD_INT 35
2656: PPUSH
2657: CALL_OW 118
// if IsPlaced ( Gary ) then
2661: LD_EXP 10
2665: PPUSH
2666: CALL_OW 305
2670: IFFALSE 2688
// coreHeroesTab := coreHeroesTab ^ Gary ;
2672: LD_ADDR_EXP 14
2676: PUSH
2677: LD_EXP 14
2681: PUSH
2682: LD_EXP 10
2686: ADD
2687: ST_TO_ADDR
// end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) and Brown then
2688: LD_EXP 10
2692: PPUSH
2693: CALL_OW 305
2697: NOT
2698: PUSH
2699: LD_EXP 3
2703: PPUSH
2704: CALL_OW 305
2708: NOT
2709: AND
2710: PUSH
2711: LD_EXP 3
2715: AND
2716: IFFALSE 2775
// begin PlaceUnitArea ( Brown , CoreHeroes , false ) ;
2718: LD_EXP 3
2722: PPUSH
2723: LD_INT 10
2725: PPUSH
2726: LD_INT 0
2728: PPUSH
2729: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
2733: LD_EXP 3
2737: PPUSH
2738: LD_INT 42
2740: PPUSH
2741: LD_INT 35
2743: PPUSH
2744: CALL_OW 118
// if IsPlaced ( Brown ) then
2748: LD_EXP 3
2752: PPUSH
2753: CALL_OW 305
2757: IFFALSE 2775
// coreHeroesTab := coreHeroesTab ^ Brown ;
2759: LD_ADDR_EXP 14
2763: PUSH
2764: LD_EXP 14
2768: PUSH
2769: LD_EXP 3
2773: ADD
2774: ST_TO_ADDR
// end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and Donaldson then
2775: LD_EXP 10
2779: PPUSH
2780: CALL_OW 305
2784: NOT
2785: PUSH
2786: LD_EXP 3
2790: PPUSH
2791: CALL_OW 305
2795: NOT
2796: AND
2797: PUSH
2798: LD_EXP 4
2802: PPUSH
2803: CALL_OW 305
2807: NOT
2808: AND
2809: PUSH
2810: LD_EXP 4
2814: AND
2815: IFFALSE 2874
// begin PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
2817: LD_EXP 4
2821: PPUSH
2822: LD_INT 10
2824: PPUSH
2825: LD_INT 0
2827: PPUSH
2828: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
2832: LD_EXP 4
2836: PPUSH
2837: LD_INT 42
2839: PPUSH
2840: LD_INT 35
2842: PPUSH
2843: CALL_OW 118
// if IsPlaced ( Donaldson ) then
2847: LD_EXP 4
2851: PPUSH
2852: CALL_OW 305
2856: IFFALSE 2874
// coreHeroesTab := coreHeroesTab ^ Donaldson ;
2858: LD_ADDR_EXP 14
2862: PUSH
2863: LD_EXP 14
2867: PUSH
2868: LD_EXP 4
2872: ADD
2873: ST_TO_ADDR
// end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and Frank then
2874: LD_EXP 10
2878: PPUSH
2879: CALL_OW 305
2883: NOT
2884: PUSH
2885: LD_EXP 3
2889: PPUSH
2890: CALL_OW 305
2894: NOT
2895: AND
2896: PUSH
2897: LD_EXP 4
2901: PPUSH
2902: CALL_OW 305
2906: NOT
2907: AND
2908: PUSH
2909: LD_EXP 8
2913: PPUSH
2914: CALL_OW 305
2918: NOT
2919: AND
2920: PUSH
2921: LD_EXP 8
2925: AND
2926: IFFALSE 2985
// begin PlaceUnitArea ( Frank , CoreHeroes , false ) ;
2928: LD_EXP 8
2932: PPUSH
2933: LD_INT 10
2935: PPUSH
2936: LD_INT 0
2938: PPUSH
2939: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
2943: LD_EXP 8
2947: PPUSH
2948: LD_INT 42
2950: PPUSH
2951: LD_INT 35
2953: PPUSH
2954: CALL_OW 118
// if IsPlaced ( Frank ) then
2958: LD_EXP 8
2962: PPUSH
2963: CALL_OW 305
2967: IFFALSE 2985
// coreHeroesTab := coreHeroesTab ^ Frank ;
2969: LD_ADDR_EXP 14
2973: PUSH
2974: LD_EXP 14
2978: PUSH
2979: LD_EXP 8
2983: ADD
2984: ST_TO_ADDR
// end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) and Houten then
2985: LD_EXP 10
2989: PPUSH
2990: CALL_OW 305
2994: NOT
2995: PUSH
2996: LD_EXP 3
3000: PPUSH
3001: CALL_OW 305
3005: NOT
3006: AND
3007: PUSH
3008: LD_EXP 4
3012: PPUSH
3013: CALL_OW 305
3017: NOT
3018: AND
3019: PUSH
3020: LD_EXP 8
3024: PPUSH
3025: CALL_OW 305
3029: NOT
3030: AND
3031: PUSH
3032: LD_EXP 9
3036: PPUSH
3037: CALL_OW 305
3041: NOT
3042: AND
3043: PUSH
3044: LD_EXP 9
3048: AND
3049: IFFALSE 3108
// begin PlaceUnitArea ( Houten , CoreHeroes , false ) ;
3051: LD_EXP 9
3055: PPUSH
3056: LD_INT 10
3058: PPUSH
3059: LD_INT 0
3061: PPUSH
3062: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
3066: LD_EXP 9
3070: PPUSH
3071: LD_INT 42
3073: PPUSH
3074: LD_INT 35
3076: PPUSH
3077: CALL_OW 118
// if IsPlaced ( Houten ) then
3081: LD_EXP 9
3085: PPUSH
3086: CALL_OW 305
3090: IFFALSE 3108
// coreHeroesTab := coreHeroesTab ^ Houten ;
3092: LD_ADDR_EXP 14
3096: PUSH
3097: LD_EXP 14
3101: PUSH
3102: LD_EXP 9
3106: ADD
3107: ST_TO_ADDR
// end ; for i := 1 to 5 - coreHeroesTab do
3108: LD_ADDR_VAR 0 2
3112: PUSH
3113: DOUBLE
3114: LD_INT 1
3116: DEC
3117: ST_TO_ADDR
3118: LD_INT 5
3120: PUSH
3121: LD_EXP 14
3125: MINUS
3126: PUSH
3127: FOR_TO
3128: IFFALSE 3252
// begin hc_gallery =  ;
3130: LD_ADDR_OWVAR 33
3134: PUSH
3135: LD_STRING 
3137: ST_TO_ADDR
// hc_name =  ;
3138: LD_ADDR_OWVAR 26
3142: PUSH
3143: LD_STRING 
3145: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
3146: LD_INT 0
3148: PPUSH
3149: LD_INT 1
3151: PUSH
3152: LD_INT 2
3154: PUSH
3155: LD_INT 3
3157: PUSH
3158: LD_INT 4
3160: PUSH
3161: EMPTY
3162: LIST
3163: LIST
3164: LIST
3165: LIST
3166: PUSH
3167: LD_INT 1
3169: PPUSH
3170: LD_INT 4
3172: PPUSH
3173: CALL_OW 12
3177: ARRAY
3178: PPUSH
3179: LD_INT 4
3181: PPUSH
3182: LD_INT 6
3184: PPUSH
3185: CALL_OW 12
3189: PPUSH
3190: CALL_OW 380
// un := CreateHuman ;
3194: LD_ADDR_VAR 0 3
3198: PUSH
3199: CALL_OW 44
3203: ST_TO_ADDR
// coreHeroesTab := coreHeroesTab ^ un ;
3204: LD_ADDR_EXP 14
3208: PUSH
3209: LD_EXP 14
3213: PUSH
3214: LD_VAR 0 3
3218: ADD
3219: ST_TO_ADDR
// PlaceUnitArea ( un , CoreHeroes , false ) ;
3220: LD_VAR 0 3
3224: PPUSH
3225: LD_INT 10
3227: PPUSH
3228: LD_INT 0
3230: PPUSH
3231: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
3235: LD_VAR 0 3
3239: PPUSH
3240: LD_INT 42
3242: PPUSH
3243: LD_INT 35
3245: PPUSH
3246: CALL_OW 118
// end ;
3250: GO 3127
3252: POP
3253: POP
// siberite := LoadVariable ( 09_SibRes , 0 ) ;
3254: LD_ADDR_EXP 17
3258: PUSH
3259: LD_STRING 09_SibRes
3261: PPUSH
3262: LD_INT 0
3264: PPUSH
3265: CALL_OW 30
3269: ST_TO_ADDR
// if siberite > 500 then
3270: LD_EXP 17
3274: PUSH
3275: LD_INT 500
3277: GREATER
3278: IFFALSE 3288
// siberite := 500 ;
3280: LD_ADDR_EXP 17
3284: PUSH
3285: LD_INT 500
3287: ST_TO_ADDR
// others08 := CreateCharacterSet ( 08_other_survivors ) ;
3288: LD_ADDR_EXP 11
3292: PUSH
3293: LD_STRING 08_other_survivors
3295: PPUSH
3296: CALL_OW 31
3300: ST_TO_ADDR
// if siberite >= 200 then
3301: LD_EXP 17
3305: PUSH
3306: LD_INT 200
3308: GREATEREQUAL
3309: IFFALSE 4192
// begin if not IsPlaced ( Brown ) and Brown then
3311: LD_EXP 3
3315: PPUSH
3316: CALL_OW 305
3320: NOT
3321: PUSH
3322: LD_EXP 3
3326: AND
3327: IFFALSE 3386
// begin PlaceUnitArea ( Brown , AddHeroes , false ) ;
3329: LD_EXP 3
3333: PPUSH
3334: LD_INT 11
3336: PPUSH
3337: LD_INT 0
3339: PPUSH
3340: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
3344: LD_EXP 3
3348: PPUSH
3349: LD_INT 42
3351: PPUSH
3352: LD_INT 35
3354: PPUSH
3355: CALL_OW 118
// if IsPlaced ( Brown ) then
3359: LD_EXP 3
3363: PPUSH
3364: CALL_OW 305
3368: IFFALSE 3386
// addHeroesTab := addHeroesTab ^ Brown ;
3370: LD_ADDR_EXP 15
3374: PUSH
3375: LD_EXP 15
3379: PUSH
3380: LD_EXP 3
3384: ADD
3385: ST_TO_ADDR
// end ; if not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and Donaldson then
3386: LD_EXP 3
3390: PPUSH
3391: CALL_OW 305
3395: NOT
3396: PUSH
3397: LD_EXP 4
3401: PPUSH
3402: CALL_OW 305
3406: NOT
3407: AND
3408: PUSH
3409: LD_EXP 4
3413: AND
3414: IFFALSE 3473
// begin PlaceUnitArea ( Donaldson , addHeroes , false ) ;
3416: LD_EXP 4
3420: PPUSH
3421: LD_INT 11
3423: PPUSH
3424: LD_INT 0
3426: PPUSH
3427: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
3431: LD_EXP 4
3435: PPUSH
3436: LD_INT 42
3438: PPUSH
3439: LD_INT 35
3441: PPUSH
3442: CALL_OW 118
// if IsPlaced ( Donaldson ) then
3446: LD_EXP 4
3450: PPUSH
3451: CALL_OW 305
3455: IFFALSE 3473
// addHeroesTab := addHeroesTab ^ Donaldson ;
3457: LD_ADDR_EXP 15
3461: PUSH
3462: LD_EXP 15
3466: PUSH
3467: LD_EXP 4
3471: ADD
3472: ST_TO_ADDR
// end ; if not IsPlaced ( Brown ) and not IsPlaced ( Frank ) and Frank then
3473: LD_EXP 3
3477: PPUSH
3478: CALL_OW 305
3482: NOT
3483: PUSH
3484: LD_EXP 8
3488: PPUSH
3489: CALL_OW 305
3493: NOT
3494: AND
3495: PUSH
3496: LD_EXP 8
3500: AND
3501: IFFALSE 3560
// begin PlaceUnitArea ( Frank , addHeroes , false ) ;
3503: LD_EXP 8
3507: PPUSH
3508: LD_INT 11
3510: PPUSH
3511: LD_INT 0
3513: PPUSH
3514: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
3518: LD_EXP 8
3522: PPUSH
3523: LD_INT 42
3525: PPUSH
3526: LD_INT 35
3528: PPUSH
3529: CALL_OW 118
// if IsPlaced ( Frank ) then
3533: LD_EXP 8
3537: PPUSH
3538: CALL_OW 305
3542: IFFALSE 3560
// addHeroesTab := addHeroesTab ^ Frank ;
3544: LD_ADDR_EXP 15
3548: PUSH
3549: LD_EXP 15
3553: PUSH
3554: LD_EXP 8
3558: ADD
3559: ST_TO_ADDR
// end ; if not IsPlaced ( Brown ) and not IsPlaced ( Houten ) then
3560: LD_EXP 3
3564: PPUSH
3565: CALL_OW 305
3569: NOT
3570: PUSH
3571: LD_EXP 9
3575: PPUSH
3576: CALL_OW 305
3580: NOT
3581: AND
3582: IFFALSE 3643
// begin PlaceUnitArea ( Houten , addHeroes , false ) ;
3584: LD_EXP 9
3588: PPUSH
3589: LD_INT 11
3591: PPUSH
3592: LD_INT 0
3594: PPUSH
3595: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
3599: LD_EXP 9
3603: PPUSH
3604: LD_INT 42
3606: PPUSH
3607: LD_INT 35
3609: PPUSH
3610: CALL_OW 118
// if IsPlaced ( Houten ) then
3614: LD_EXP 9
3618: PPUSH
3619: CALL_OW 305
3623: IFFALSE 3641
// addHeroesTab := addHeroesTab ^ Houten ;
3625: LD_ADDR_EXP 15
3629: PUSH
3630: LD_EXP 15
3634: PUSH
3635: LD_EXP 9
3639: ADD
3640: ST_TO_ADDR
// end else
3641: GO 3719
// begin PlaceUnitArea ( others08 [ 1 ] , addHeroes , false ) ;
3643: LD_EXP 11
3647: PUSH
3648: LD_INT 1
3650: ARRAY
3651: PPUSH
3652: LD_INT 11
3654: PPUSH
3655: LD_INT 0
3657: PPUSH
3658: CALL_OW 49
// ComTurnXY ( others08 [ 1 ] , 42 , 35 ) ;
3662: LD_EXP 11
3666: PUSH
3667: LD_INT 1
3669: ARRAY
3670: PPUSH
3671: LD_INT 42
3673: PPUSH
3674: LD_INT 35
3676: PPUSH
3677: CALL_OW 118
// addHeroesTab := addHeroesTab ^ others08 [ 1 ] ;
3681: LD_ADDR_EXP 15
3685: PUSH
3686: LD_EXP 15
3690: PUSH
3691: LD_EXP 11
3695: PUSH
3696: LD_INT 1
3698: ARRAY
3699: ADD
3700: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
3701: LD_ADDR_EXP 11
3705: PUSH
3706: LD_EXP 11
3710: PPUSH
3711: LD_INT 1
3713: PPUSH
3714: CALL_OW 3
3718: ST_TO_ADDR
// end ; if not IsPlaced ( Donaldson ) and Donaldson then
3719: LD_EXP 4
3723: PPUSH
3724: CALL_OW 305
3728: NOT
3729: PUSH
3730: LD_EXP 4
3734: AND
3735: IFFALSE 3794
// begin PlaceUnitArea ( Donaldson , AddHeroes , false ) ;
3737: LD_EXP 4
3741: PPUSH
3742: LD_INT 11
3744: PPUSH
3745: LD_INT 0
3747: PPUSH
3748: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
3752: LD_EXP 4
3756: PPUSH
3757: LD_INT 42
3759: PPUSH
3760: LD_INT 35
3762: PPUSH
3763: CALL_OW 118
// if IsPlaced ( Donaldson ) then
3767: LD_EXP 4
3771: PPUSH
3772: CALL_OW 305
3776: IFFALSE 3794
// addHeroesTab := addHeroesTab ^ Donaldson ;
3778: LD_ADDR_EXP 15
3782: PUSH
3783: LD_EXP 15
3787: PUSH
3788: LD_EXP 4
3792: ADD
3793: ST_TO_ADDR
// end ; if not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and Frank then
3794: LD_EXP 4
3798: PPUSH
3799: CALL_OW 305
3803: NOT
3804: PUSH
3805: LD_EXP 8
3809: PPUSH
3810: CALL_OW 305
3814: NOT
3815: AND
3816: PUSH
3817: LD_EXP 8
3821: AND
3822: IFFALSE 3881
// begin PlaceUnitArea ( Frank , addHeroes , false ) ;
3824: LD_EXP 8
3828: PPUSH
3829: LD_INT 11
3831: PPUSH
3832: LD_INT 0
3834: PPUSH
3835: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
3839: LD_EXP 8
3843: PPUSH
3844: LD_INT 42
3846: PPUSH
3847: LD_INT 35
3849: PPUSH
3850: CALL_OW 118
// if IsPlaced ( Frank ) then
3854: LD_EXP 8
3858: PPUSH
3859: CALL_OW 305
3863: IFFALSE 3881
// addHeroesTab := addHeroesTab ^ Frank ;
3865: LD_ADDR_EXP 15
3869: PUSH
3870: LD_EXP 15
3874: PUSH
3875: LD_EXP 8
3879: ADD
3880: ST_TO_ADDR
// end ; if not IsPlaced ( Donaldson ) and not IsPlaced ( Houten ) and Houten then
3881: LD_EXP 4
3885: PPUSH
3886: CALL_OW 305
3890: NOT
3891: PUSH
3892: LD_EXP 9
3896: PPUSH
3897: CALL_OW 305
3901: NOT
3902: AND
3903: PUSH
3904: LD_EXP 9
3908: AND
3909: IFFALSE 3970
// begin PlaceUnitArea ( Houten , addHeroes , false ) ;
3911: LD_EXP 9
3915: PPUSH
3916: LD_INT 11
3918: PPUSH
3919: LD_INT 0
3921: PPUSH
3922: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
3926: LD_EXP 9
3930: PPUSH
3931: LD_INT 42
3933: PPUSH
3934: LD_INT 35
3936: PPUSH
3937: CALL_OW 118
// if IsPlaced ( Houten ) then
3941: LD_EXP 9
3945: PPUSH
3946: CALL_OW 305
3950: IFFALSE 3968
// addHeroesTab = addHeroesTab ^ Houten ;
3952: LD_ADDR_EXP 15
3956: PUSH
3957: LD_EXP 15
3961: PUSH
3962: LD_EXP 9
3966: ADD
3967: ST_TO_ADDR
// end else
3968: GO 4046
// begin PlaceUnitArea ( others08 [ 1 ] , addHeroes , false ) ;
3970: LD_EXP 11
3974: PUSH
3975: LD_INT 1
3977: ARRAY
3978: PPUSH
3979: LD_INT 11
3981: PPUSH
3982: LD_INT 0
3984: PPUSH
3985: CALL_OW 49
// ComTurnXY ( others08 [ 1 ] , 42 , 35 ) ;
3989: LD_EXP 11
3993: PUSH
3994: LD_INT 1
3996: ARRAY
3997: PPUSH
3998: LD_INT 42
4000: PPUSH
4001: LD_INT 35
4003: PPUSH
4004: CALL_OW 118
// addHeroesTab := addHeroesTab ^ others08 [ 1 ] ;
4008: LD_ADDR_EXP 15
4012: PUSH
4013: LD_EXP 15
4017: PUSH
4018: LD_EXP 11
4022: PUSH
4023: LD_INT 1
4025: ARRAY
4026: ADD
4027: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
4028: LD_ADDR_EXP 11
4032: PUSH
4033: LD_EXP 11
4037: PPUSH
4038: LD_INT 1
4040: PPUSH
4041: CALL_OW 3
4045: ST_TO_ADDR
// end ; for i := 1 to 2 - addHeroesTab do
4046: LD_ADDR_VAR 0 2
4050: PUSH
4051: DOUBLE
4052: LD_INT 1
4054: DEC
4055: ST_TO_ADDR
4056: LD_INT 2
4058: PUSH
4059: LD_EXP 15
4063: MINUS
4064: PUSH
4065: FOR_TO
4066: IFFALSE 4190
// begin hc_gallery :=  ;
4068: LD_ADDR_OWVAR 33
4072: PUSH
4073: LD_STRING 
4075: ST_TO_ADDR
// hc_name :=  ;
4076: LD_ADDR_OWVAR 26
4080: PUSH
4081: LD_STRING 
4083: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
4084: LD_INT 0
4086: PPUSH
4087: LD_INT 1
4089: PUSH
4090: LD_INT 2
4092: PUSH
4093: LD_INT 3
4095: PUSH
4096: LD_INT 4
4098: PUSH
4099: EMPTY
4100: LIST
4101: LIST
4102: LIST
4103: LIST
4104: PUSH
4105: LD_INT 1
4107: PPUSH
4108: LD_INT 4
4110: PPUSH
4111: CALL_OW 12
4115: ARRAY
4116: PPUSH
4117: LD_INT 4
4119: PPUSH
4120: LD_INT 6
4122: PPUSH
4123: CALL_OW 12
4127: PPUSH
4128: CALL_OW 380
// un = CreateHuman ;
4132: LD_ADDR_VAR 0 3
4136: PUSH
4137: CALL_OW 44
4141: ST_TO_ADDR
// addHeroesTab = addHeroesTab ^ un ;
4142: LD_ADDR_EXP 15
4146: PUSH
4147: LD_EXP 15
4151: PUSH
4152: LD_VAR 0 3
4156: ADD
4157: ST_TO_ADDR
// PlaceUnitArea ( un , addHeroes , false ) ;
4158: LD_VAR 0 3
4162: PPUSH
4163: LD_INT 11
4165: PPUSH
4166: LD_INT 0
4168: PPUSH
4169: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
4173: LD_VAR 0 3
4177: PPUSH
4178: LD_INT 42
4180: PPUSH
4181: LD_INT 35
4183: PPUSH
4184: CALL_OW 118
// end ;
4188: GO 4065
4190: POP
4191: POP
// end ; if siberite > 200 then
4192: LD_EXP 17
4196: PUSH
4197: LD_INT 200
4199: GREATER
4200: IFFALSE 4752
// begin if others08 then
4202: LD_EXP 11
4206: IFFALSE 4596
// begin if others08 >= ( siberite - 200 ) / 100 then
4208: LD_EXP 11
4212: PUSH
4213: LD_EXP 17
4217: PUSH
4218: LD_INT 200
4220: MINUS
4221: PUSH
4222: LD_INT 100
4224: DIVREAL
4225: GREATEREQUAL
4226: IFFALSE 4338
// begin for i := 1 to ( siberite - 200 ) / 100 do
4228: LD_ADDR_VAR 0 2
4232: PUSH
4233: DOUBLE
4234: LD_INT 1
4236: DEC
4237: ST_TO_ADDR
4238: LD_EXP 17
4242: PUSH
4243: LD_INT 200
4245: MINUS
4246: PUSH
4247: LD_INT 100
4249: DIVREAL
4250: PUSH
4251: FOR_TO
4252: IFFALSE 4334
// begin PlaceUnitArea ( others08 [ 1 ] , addHeroes , false ) ;
4254: LD_EXP 11
4258: PUSH
4259: LD_INT 1
4261: ARRAY
4262: PPUSH
4263: LD_INT 11
4265: PPUSH
4266: LD_INT 0
4268: PPUSH
4269: CALL_OW 49
// ComTurnXY ( others08 [ 1 ] , 42 , 35 ) ;
4273: LD_EXP 11
4277: PUSH
4278: LD_INT 1
4280: ARRAY
4281: PPUSH
4282: LD_INT 42
4284: PPUSH
4285: LD_INT 35
4287: PPUSH
4288: CALL_OW 118
// addHeroesTab := addHeroesTab ^ others08 [ i ] ;
4292: LD_ADDR_EXP 15
4296: PUSH
4297: LD_EXP 15
4301: PUSH
4302: LD_EXP 11
4306: PUSH
4307: LD_VAR 0 2
4311: ARRAY
4312: ADD
4313: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
4314: LD_ADDR_EXP 11
4318: PUSH
4319: LD_EXP 11
4323: PPUSH
4324: LD_INT 1
4326: PPUSH
4327: CALL_OW 3
4331: ST_TO_ADDR
// end ;
4332: GO 4251
4334: POP
4335: POP
// end else
4336: GO 4594
// begin for i := 1 to others08 do
4338: LD_ADDR_VAR 0 2
4342: PUSH
4343: DOUBLE
4344: LD_INT 1
4346: DEC
4347: ST_TO_ADDR
4348: LD_EXP 11
4352: PUSH
4353: FOR_TO
4354: IFFALSE 4436
// begin PlaceUnitArea ( others08 [ 1 ] , addHeroes , false ) ;
4356: LD_EXP 11
4360: PUSH
4361: LD_INT 1
4363: ARRAY
4364: PPUSH
4365: LD_INT 11
4367: PPUSH
4368: LD_INT 0
4370: PPUSH
4371: CALL_OW 49
// ComTurnXY ( others08 [ 1 ] , 42 , 35 ) ;
4375: LD_EXP 11
4379: PUSH
4380: LD_INT 1
4382: ARRAY
4383: PPUSH
4384: LD_INT 42
4386: PPUSH
4387: LD_INT 35
4389: PPUSH
4390: CALL_OW 118
// addHeroesTab := addHeroesTab ^ others08 [ i ] ;
4394: LD_ADDR_EXP 15
4398: PUSH
4399: LD_EXP 15
4403: PUSH
4404: LD_EXP 11
4408: PUSH
4409: LD_VAR 0 2
4413: ARRAY
4414: ADD
4415: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
4416: LD_ADDR_EXP 11
4420: PUSH
4421: LD_EXP 11
4425: PPUSH
4426: LD_INT 1
4428: PPUSH
4429: CALL_OW 3
4433: ST_TO_ADDR
// end ;
4434: GO 4353
4436: POP
4437: POP
// for i := 1 to ( siberite - 200 ) / 100 - others08 do
4438: LD_ADDR_VAR 0 2
4442: PUSH
4443: DOUBLE
4444: LD_INT 1
4446: DEC
4447: ST_TO_ADDR
4448: LD_EXP 17
4452: PUSH
4453: LD_INT 200
4455: MINUS
4456: PUSH
4457: LD_INT 100
4459: DIVREAL
4460: PUSH
4461: LD_EXP 11
4465: MINUS
4466: PUSH
4467: FOR_TO
4468: IFFALSE 4592
// begin hc_gallery :=  ;
4470: LD_ADDR_OWVAR 33
4474: PUSH
4475: LD_STRING 
4477: ST_TO_ADDR
// hc_name :=  ;
4478: LD_ADDR_OWVAR 26
4482: PUSH
4483: LD_STRING 
4485: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
4486: LD_INT 0
4488: PPUSH
4489: LD_INT 1
4491: PUSH
4492: LD_INT 2
4494: PUSH
4495: LD_INT 3
4497: PUSH
4498: LD_INT 4
4500: PUSH
4501: EMPTY
4502: LIST
4503: LIST
4504: LIST
4505: LIST
4506: PUSH
4507: LD_INT 1
4509: PPUSH
4510: LD_INT 4
4512: PPUSH
4513: CALL_OW 12
4517: ARRAY
4518: PPUSH
4519: LD_INT 4
4521: PPUSH
4522: LD_INT 6
4524: PPUSH
4525: CALL_OW 12
4529: PPUSH
4530: CALL_OW 380
// un := CreateHuman ;
4534: LD_ADDR_VAR 0 3
4538: PUSH
4539: CALL_OW 44
4543: ST_TO_ADDR
// addHeroesTab := addHeroesTab ^ un ;
4544: LD_ADDR_EXP 15
4548: PUSH
4549: LD_EXP 15
4553: PUSH
4554: LD_VAR 0 3
4558: ADD
4559: ST_TO_ADDR
// PlaceUnitArea ( un , addHeroes , false ) ;
4560: LD_VAR 0 3
4564: PPUSH
4565: LD_INT 11
4567: PPUSH
4568: LD_INT 0
4570: PPUSH
4571: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
4575: LD_VAR 0 3
4579: PPUSH
4580: LD_INT 42
4582: PPUSH
4583: LD_INT 35
4585: PPUSH
4586: CALL_OW 118
// end ;
4590: GO 4467
4592: POP
4593: POP
// end ; end else
4594: GO 4752
// begin for i := 1 to ( siberite - 200 ) / 100 - others08 do
4596: LD_ADDR_VAR 0 2
4600: PUSH
4601: DOUBLE
4602: LD_INT 1
4604: DEC
4605: ST_TO_ADDR
4606: LD_EXP 17
4610: PUSH
4611: LD_INT 200
4613: MINUS
4614: PUSH
4615: LD_INT 100
4617: DIVREAL
4618: PUSH
4619: LD_EXP 11
4623: MINUS
4624: PUSH
4625: FOR_TO
4626: IFFALSE 4750
// begin hc_gallery :=  ;
4628: LD_ADDR_OWVAR 33
4632: PUSH
4633: LD_STRING 
4635: ST_TO_ADDR
// hc_name :=  ;
4636: LD_ADDR_OWVAR 26
4640: PUSH
4641: LD_STRING 
4643: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
4644: LD_INT 0
4646: PPUSH
4647: LD_INT 1
4649: PUSH
4650: LD_INT 2
4652: PUSH
4653: LD_INT 3
4655: PUSH
4656: LD_INT 4
4658: PUSH
4659: EMPTY
4660: LIST
4661: LIST
4662: LIST
4663: LIST
4664: PUSH
4665: LD_INT 1
4667: PPUSH
4668: LD_INT 4
4670: PPUSH
4671: CALL_OW 12
4675: ARRAY
4676: PPUSH
4677: LD_INT 4
4679: PPUSH
4680: LD_INT 6
4682: PPUSH
4683: CALL_OW 12
4687: PPUSH
4688: CALL_OW 380
// un := CreateHuman ;
4692: LD_ADDR_VAR 0 3
4696: PUSH
4697: CALL_OW 44
4701: ST_TO_ADDR
// addHeroesTab := addHeroesTab ^ un ;
4702: LD_ADDR_EXP 15
4706: PUSH
4707: LD_EXP 15
4711: PUSH
4712: LD_VAR 0 3
4716: ADD
4717: ST_TO_ADDR
// PlaceUnitArea ( un , addHeroes , false ) ;
4718: LD_VAR 0 3
4722: PPUSH
4723: LD_INT 11
4725: PPUSH
4726: LD_INT 0
4728: PPUSH
4729: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
4733: LD_VAR 0 3
4737: PPUSH
4738: LD_INT 42
4740: PPUSH
4741: LD_INT 35
4743: PPUSH
4744: CALL_OW 118
// end ;
4748: GO 4625
4750: POP
4751: POP
// end ; end ; PlaceHumanInUnit ( JMM , car ) ;
4752: LD_EXP 1
4756: PPUSH
4757: LD_INT 138
4759: PPUSH
4760: CALL_OW 52
// PlaceHumanInUnit ( Powell , Am_bar ) ;
4764: LD_EXP 2
4768: PPUSH
4769: LD_INT 58
4771: PPUSH
4772: CALL_OW 52
// SetClass ( JMM , 1 ) ;
4776: LD_EXP 1
4780: PPUSH
4781: LD_INT 1
4783: PPUSH
4784: CALL_OW 336
// end ;
4788: LD_VAR 0 1
4792: RET
// export function PrepareConvoy ; var i , veh , un ; begin
4793: LD_INT 0
4795: PPUSH
4796: PPUSH
4797: PPUSH
4798: PPUSH
// uc_side := 1 ;
4799: LD_ADDR_OWVAR 20
4803: PUSH
4804: LD_INT 1
4806: ST_TO_ADDR
// uc_nation := 1 ;
4807: LD_ADDR_OWVAR 21
4811: PUSH
4812: LD_INT 1
4814: ST_TO_ADDR
// for i := 1 to 2 do
4815: LD_ADDR_VAR 0 2
4819: PUSH
4820: DOUBLE
4821: LD_INT 1
4823: DEC
4824: ST_TO_ADDR
4825: LD_INT 2
4827: PUSH
4828: FOR_TO
4829: IFFALSE 4967
// begin vc_engine := 1 ;
4831: LD_ADDR_OWVAR 39
4835: PUSH
4836: LD_INT 1
4838: ST_TO_ADDR
// vc_control := 1 ;
4839: LD_ADDR_OWVAR 38
4843: PUSH
4844: LD_INT 1
4846: ST_TO_ADDR
// vc_weapon := 12 ;
4847: LD_ADDR_OWVAR 40
4851: PUSH
4852: LD_INT 12
4854: ST_TO_ADDR
// vc_chassis := 3 ;
4855: LD_ADDR_OWVAR 37
4859: PUSH
4860: LD_INT 3
4862: ST_TO_ADDR
// veh := CreateVehicle ;
4863: LD_ADDR_VAR 0 3
4867: PUSH
4868: CALL_OW 45
4872: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
4873: LD_VAR 0 3
4877: PPUSH
4878: LD_INT 1
4880: PPUSH
4881: CALL_OW 233
// PlaceUnitArea ( veh , Cargo , false ) ;
4885: LD_VAR 0 3
4889: PPUSH
4890: LD_INT 9
4892: PPUSH
4893: LD_INT 0
4895: PPUSH
4896: CALL_OW 49
// AddCargo ( veh , 1 , 100 ) ;
4900: LD_VAR 0 3
4904: PPUSH
4905: LD_INT 1
4907: PPUSH
4908: LD_INT 100
4910: PPUSH
4911: CALL_OW 291
// convoy = convoy ^ veh ;
4915: LD_ADDR_EXP 12
4919: PUSH
4920: LD_EXP 12
4924: PUSH
4925: LD_VAR 0 3
4929: ADD
4930: ST_TO_ADDR
// PrepareMechanic ( false , 10 ) ;
4931: LD_INT 0
4933: PPUSH
4934: LD_INT 10
4936: PPUSH
4937: CALL_OW 383
// un := CreateHuman ;
4941: LD_ADDR_VAR 0 4
4945: PUSH
4946: CALL_OW 44
4950: ST_TO_ADDR
// PlaceHumanInUnit ( un , veh ) ;
4951: LD_VAR 0 4
4955: PPUSH
4956: LD_VAR 0 3
4960: PPUSH
4961: CALL_OW 52
// end ;
4965: GO 4828
4967: POP
4968: POP
// AddComMoveXY ( convoy [ 1 ] , 45 , 43 ) ;
4969: LD_EXP 12
4973: PUSH
4974: LD_INT 1
4976: ARRAY
4977: PPUSH
4978: LD_INT 45
4980: PPUSH
4981: LD_INT 43
4983: PPUSH
4984: CALL_OW 171
// AddComMoveXY ( convoy [ 2 ] , 40 , 40 ) ;
4988: LD_EXP 12
4992: PUSH
4993: LD_INT 2
4995: ARRAY
4996: PPUSH
4997: LD_INT 40
4999: PPUSH
5000: LD_INT 40
5002: PPUSH
5003: CALL_OW 171
// end ; end_of_file
5007: LD_VAR 0 1
5011: RET
// export function PrepareUnit ( ident , exist_mode ) ; var unit ; begin
5012: LD_INT 0
5014: PPUSH
5015: PPUSH
// if exist_mode then
5016: LD_VAR 0 2
5020: IFFALSE 5054
// begin unit := CreateCharacter ( ident ) ;
5022: LD_ADDR_VAR 0 4
5026: PUSH
5027: LD_VAR 0 1
5031: PPUSH
5032: CALL_OW 34
5036: ST_TO_ADDR
// if unit then
5037: LD_VAR 0 4
5041: IFFALSE 5052
// DeleteCharacters ( ident ) ;
5043: LD_VAR 0 1
5047: PPUSH
5048: CALL_OW 40
// end else
5052: GO 5069
// unit := NewCharacter ( ident ) ;
5054: LD_ADDR_VAR 0 4
5058: PUSH
5059: LD_VAR 0 1
5063: PPUSH
5064: CALL_OW 25
5068: ST_TO_ADDR
// result := unit ;
5069: LD_ADDR_VAR 0 3
5073: PUSH
5074: LD_VAR 0 4
5078: ST_TO_ADDR
// end ;
5079: LD_VAR 0 3
5083: RET
// export function Video ( mode ) ; begin
5084: LD_INT 0
5086: PPUSH
// ingame_video = mode ;
5087: LD_ADDR_OWVAR 52
5091: PUSH
5092: LD_VAR 0 1
5096: ST_TO_ADDR
// interface_hidden = mode ;
5097: LD_ADDR_OWVAR 54
5101: PUSH
5102: LD_VAR 0 1
5106: ST_TO_ADDR
// end ; end_of_file
5107: LD_VAR 0 2
5111: RET
// on VehicleConstructed ( veh , fac ) do begin AddComMoveXY ( veh , 82 , 77 ) ;
5112: LD_VAR 0 1
5116: PPUSH
5117: LD_INT 82
5119: PPUSH
5120: LD_INT 77
5122: PPUSH
5123: CALL_OW 171
// end ;
5127: PPOPN 2
5129: END
// on DialogueSkipped ( d ) do begin EndMission ;
5130: CALL 668 0 0
// end ;
5134: PPOPN 1
5136: END
