// export JMM , Powell ; export Brown , Donaldson , Bobby , Cyrus , Lisa , Frank , Houten , Gary ; export others08 ; export convoy , prepConv ; export coreHeroesTab , addHeroesTab ; export selectedToMission ; export siberite ; starting begin Resetfog ;
   0: CALL_OW 335
// SetBName ( Am_dep , alpha ) ;
   4: LD_INT 5
   6: PPUSH
   7: LD_STRING alpha
   9: PPUSH
  10: CALL_OW 500
// convoy = [ ] ;
  14: LD_ADDR_EXP 12
  18: PUSH
  19: EMPTY
  20: ST_TO_ADDR
// coreHeroesTab = [ ] ;
  21: LD_ADDR_EXP 14
  25: PUSH
  26: EMPTY
  27: ST_TO_ADDR
// addHeroesTab = [ ] ;
  28: LD_ADDR_EXP 15
  32: PUSH
  33: EMPTY
  34: ST_TO_ADDR
// selectedToMission = [ ] ;
  35: LD_ADDR_EXP 16
  39: PUSH
  40: EMPTY
  41: ST_TO_ADDR
// PrepareHeroes ;
  42: CALL 926 0 0
// end ; end_of_file
  46: END
// every 1 do var others ;
  47: GO 49
  49: DISABLE
  50: LD_INT 0
  52: PPUSH
// begin Video ( true ) ;
  53: LD_INT 1
  55: PPUSH
  56: CALL 5703 0 1
// AddComConstruct ( Am_tov1 , 2 , 1 , 1 , 4 ) ;
  60: LD_INT 60
  62: PPUSH
  63: LD_INT 2
  65: PPUSH
  66: LD_INT 1
  68: PPUSH
  69: LD_INT 1
  71: PPUSH
  72: LD_INT 4
  74: PPUSH
  75: CALL_OW 185
// AddComConstruct ( Am_tov2 , 4 , 1 , 1 , 6 ) ;
  79: LD_INT 6
  81: PPUSH
  82: LD_INT 4
  84: PPUSH
  85: LD_INT 1
  87: PPUSH
  88: LD_INT 1
  90: PPUSH
  91: LD_INT 6
  93: PPUSH
  94: CALL_OW 185
// AddComConstruct ( Am_tov1 , 2 , 1 , 1 , 3 ) ;
  98: LD_INT 60
 100: PPUSH
 101: LD_INT 2
 103: PPUSH
 104: LD_INT 1
 106: PPUSH
 107: LD_INT 1
 109: PPUSH
 110: LD_INT 3
 112: PPUSH
 113: CALL_OW 185
// AddComConstruct ( Am_tov2 , 4 , 1 , 1 , 4 ) ;
 117: LD_INT 6
 119: PPUSH
 120: LD_INT 4
 122: PPUSH
 123: LD_INT 1
 125: PPUSH
 126: LD_INT 1
 128: PPUSH
 129: LD_INT 4
 131: PPUSH
 132: CALL_OW 185
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap1 ) ;
 136: LD_INT 47
 138: PUSH
 139: LD_INT 4
 141: PUSH
 142: EMPTY
 143: LIST
 144: LIST
 145: PPUSH
 146: LD_INT 51
 148: PPUSH
 149: CALL_OW 184
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap2 ) ;
 153: LD_INT 47
 155: PUSH
 156: LD_INT 4
 158: PUSH
 159: EMPTY
 160: LIST
 161: LIST
 162: PPUSH
 163: LD_INT 52
 165: PPUSH
 166: CALL_OW 184
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap3 ) ;
 170: LD_INT 47
 172: PUSH
 173: LD_INT 4
 175: PUSH
 176: EMPTY
 177: LIST
 178: LIST
 179: PPUSH
 180: LD_INT 53
 182: PPUSH
 183: CALL_OW 184
// CenterNowOnUnits ( car ) ;
 187: LD_INT 138
 189: PPUSH
 190: CALL_OW 87
// ComMoveXY ( car , 69 , 36 ) ;
 194: LD_INT 138
 196: PPUSH
 197: LD_INT 69
 199: PPUSH
 200: LD_INT 36
 202: PPUSH
 203: CALL_OW 111
// AddComMoveXY ( car , 65 , 43 ) ;
 207: LD_INT 138
 209: PPUSH
 210: LD_INT 65
 212: PPUSH
 213: LD_INT 43
 215: PPUSH
 216: CALL_OW 171
// AddComMoveXY ( car , 63 , 48 ) ;
 220: LD_INT 138
 222: PPUSH
 223: LD_INT 63
 225: PPUSH
 226: LD_INT 48
 228: PPUSH
 229: CALL_OW 171
// AddComMoveXY ( car , 60 , 50 ) ;
 233: LD_INT 138
 235: PPUSH
 236: LD_INT 60
 238: PPUSH
 239: LD_INT 50
 241: PPUSH
 242: CALL_OW 171
// AddComMoveXY ( car , 54 , 47 ) ;
 246: LD_INT 138
 248: PPUSH
 249: LD_INT 54
 251: PPUSH
 252: LD_INT 47
 254: PPUSH
 255: CALL_OW 171
// AddComMoveXY ( car , 51 , 40 ) ;
 259: LD_INT 138
 261: PPUSH
 262: LD_INT 51
 264: PPUSH
 265: LD_INT 40
 267: PPUSH
 268: CALL_OW 171
// repeat wait ( 0 0$1 ) ;
 272: LD_INT 35
 274: PPUSH
 275: CALL_OW 67
// CenterNowOnUnits ( car ) ;
 279: LD_INT 138
 281: PPUSH
 282: CALL_OW 87
// until IsInArea ( car , stop ) ;
 286: LD_INT 138
 288: PPUSH
 289: LD_INT 7
 291: PPUSH
 292: CALL_OW 308
 296: IFFALSE 272
// ComExitVehicle ( JMM ) ;
 298: LD_EXP 1
 302: PPUSH
 303: CALL_OW 121
// wait ( 0 0$01 ) ;
 307: LD_INT 35
 309: PPUSH
 310: CALL_OW 67
// ComMoveXY ( JMM , 42 , 37 ) ;
 314: LD_EXP 1
 318: PPUSH
 319: LD_INT 42
 321: PPUSH
 322: LD_INT 37
 324: PPUSH
 325: CALL_OW 111
// wait ( 0 0$5 ) ;
 329: LD_INT 175
 331: PPUSH
 332: CALL_OW 67
// ComExitBuilding ( Powell ) ;
 336: LD_EXP 2
 340: PPUSH
 341: CALL_OW 122
// wait ( 0 0$01 ) ;
 345: LD_INT 35
 347: PPUSH
 348: CALL_OW 67
// ComTurnUnit ( Powell , JMM ) ;
 352: LD_EXP 2
 356: PPUSH
 357: LD_EXP 1
 361: PPUSH
 362: CALL_OW 119
// ComTurnUnit ( JMM , Powell ) ;
 366: LD_EXP 1
 370: PPUSH
 371: LD_EXP 2
 375: PPUSH
 376: CALL_OW 119
// Say ( JMM , D1-JMM-1 ) ;
 380: LD_EXP 1
 384: PPUSH
 385: LD_STRING D1-JMM-1
 387: PPUSH
 388: CALL_OW 88
// Say ( Powell , D1-Pow-1 ) ;
 392: LD_EXP 2
 396: PPUSH
 397: LD_STRING D1-Pow-1
 399: PPUSH
 400: CALL_OW 88
// Say ( JMM , D1-JMM-2 ) ;
 404: LD_EXP 1
 408: PPUSH
 409: LD_STRING D1-JMM-2
 411: PPUSH
 412: CALL_OW 88
// Say ( Powell , D1-Pow-2 ) ;
 416: LD_EXP 2
 420: PPUSH
 421: LD_STRING D1-Pow-2
 423: PPUSH
 424: CALL_OW 88
// Say ( JMM , D1-JMM-3 ) ;
 428: LD_EXP 1
 432: PPUSH
 433: LD_STRING D1-JMM-3
 435: PPUSH
 436: CALL_OW 88
// Say ( Powell , D1-Pow-3 ) ;
 440: LD_EXP 2
 444: PPUSH
 445: LD_STRING D1-Pow-3
 447: PPUSH
 448: CALL_OW 88
// Say ( JMM , D1-JMM-4 ) ;
 452: LD_EXP 1
 456: PPUSH
 457: LD_STRING D1-JMM-4
 459: PPUSH
 460: CALL_OW 88
// PrepareConvoy ;
 464: CALL 5182 0 0
// Say ( Powell , D1-Pow-4 ) ;
 468: LD_EXP 2
 472: PPUSH
 473: LD_STRING D1-Pow-4
 475: PPUSH
 476: CALL_OW 88
// Say ( Powell , D1-Pow-4a ) ;
 480: LD_EXP 2
 484: PPUSH
 485: LD_STRING D1-Pow-4a
 487: PPUSH
 488: CALL_OW 88
// Say ( Powell , D1-Pow-4b ) ;
 492: LD_EXP 2
 496: PPUSH
 497: LD_STRING D1-Pow-4b
 499: PPUSH
 500: CALL_OW 88
// AddComMoveXY ( convoy , 81 , 77 ) ;
 504: LD_EXP 12
 508: PPUSH
 509: LD_INT 81
 511: PPUSH
 512: LD_INT 77
 514: PPUSH
 515: CALL_OW 171
// Say ( JMM , D1-JMM-5 ) ;
 519: LD_EXP 1
 523: PPUSH
 524: LD_STRING D1-JMM-5
 526: PPUSH
 527: CALL_OW 88
// Say ( Powell , D1-Pow-5 ) ;
 531: LD_EXP 2
 535: PPUSH
 536: LD_STRING D1-Pow-5
 538: PPUSH
 539: CALL_OW 88
// Say ( JMM , D1-JMM-6 ) ;
 543: LD_EXP 1
 547: PPUSH
 548: LD_STRING D1-JMM-6
 550: PPUSH
 551: CALL_OW 88
// Say ( Powell , D1-Pow-6 ) ;
 555: LD_EXP 2
 559: PPUSH
 560: LD_STRING D1-Pow-6
 562: PPUSH
 563: CALL_OW 88
// Say ( JMM , D1-JMM-7 ) ;
 567: LD_EXP 1
 571: PPUSH
 572: LD_STRING D1-JMM-7
 574: PPUSH
 575: CALL_OW 88
// Say ( Powell , D1-Pow-7 ) ;
 579: LD_EXP 2
 583: PPUSH
 584: LD_STRING D1-Pow-7
 586: PPUSH
 587: CALL_OW 88
// Say ( JMM , D1-JMM-8 ) ;
 591: LD_EXP 1
 595: PPUSH
 596: LD_STRING D1-JMM-8
 598: PPUSH
 599: CALL_OW 88
// ComMoveXY ( JMM , 47 , 48 ) ;
 603: LD_EXP 1
 607: PPUSH
 608: LD_INT 47
 610: PPUSH
 611: LD_INT 48
 613: PPUSH
 614: CALL_OW 111
// ComEnterUnit ( Powell , Am_bar ) ;
 618: LD_EXP 2
 622: PPUSH
 623: LD_INT 58
 625: PPUSH
 626: CALL_OW 120
// wait ( 0 0$3 ) ;
 630: LD_INT 105
 632: PPUSH
 633: CALL_OW 67
// others = FilterUnitsInArea ( CoreHeroes , [ [ f_side , 1 ] , [ f_type , unit_human ] ] ) ;
 637: LD_ADDR_VAR 0 1
 641: PUSH
 642: LD_INT 10
 644: PPUSH
 645: LD_INT 22
 647: PUSH
 648: LD_INT 1
 650: PUSH
 651: EMPTY
 652: LIST
 653: LIST
 654: PUSH
 655: LD_INT 21
 657: PUSH
 658: LD_INT 1
 660: PUSH
 661: EMPTY
 662: LIST
 663: LIST
 664: PUSH
 665: EMPTY
 666: LIST
 667: LIST
 668: PPUSH
 669: CALL_OW 70
 673: ST_TO_ADDR
// others = others ^ FilterUnitsInArea ( AddHeroes , [ [ f_side , 1 ] , [ f_type , unit_human ] ] ) ;
 674: LD_ADDR_VAR 0 1
 678: PUSH
 679: LD_VAR 0 1
 683: PUSH
 684: LD_INT 11
 686: PPUSH
 687: LD_INT 22
 689: PUSH
 690: LD_INT 1
 692: PUSH
 693: EMPTY
 694: LIST
 695: LIST
 696: PUSH
 697: LD_INT 21
 699: PUSH
 700: LD_INT 1
 702: PUSH
 703: EMPTY
 704: LIST
 705: LIST
 706: PUSH
 707: EMPTY
 708: LIST
 709: LIST
 710: PPUSH
 711: CALL_OW 70
 715: ADD
 716: ST_TO_ADDR
// others = others diff [ JMM , Powell , Brown , Donaldson , Bobby , Cyrus , Lisa , Frank , Houten , Gary ] ;
 717: LD_ADDR_VAR 0 1
 721: PUSH
 722: LD_VAR 0 1
 726: PUSH
 727: LD_EXP 1
 731: PUSH
 732: LD_EXP 2
 736: PUSH
 737: LD_EXP 3
 741: PUSH
 742: LD_EXP 4
 746: PUSH
 747: LD_EXP 5
 751: PUSH
 752: LD_EXP 6
 756: PUSH
 757: LD_EXP 7
 761: PUSH
 762: LD_EXP 8
 766: PUSH
 767: LD_EXP 9
 771: PUSH
 772: LD_EXP 10
 776: PUSH
 777: EMPTY
 778: LIST
 779: LIST
 780: LIST
 781: LIST
 782: LIST
 783: LIST
 784: LIST
 785: LIST
 786: LIST
 787: LIST
 788: DIFF
 789: ST_TO_ADDR
// SaveCharacters ( JMM , 10_JMM ) ;
 790: LD_EXP 1
 794: PPUSH
 795: LD_STRING 10_JMM
 797: PPUSH
 798: CALL_OW 38
// SaveCharacters ( others , OthersIn10 ) ;
 802: LD_VAR 0 1
 806: PPUSH
 807: LD_STRING OthersIn10
 809: PPUSH
 810: CALL_OW 38
// SaveCharacters ( others08 , 10_lock ) ;
 814: LD_EXP 11
 818: PPUSH
 819: LD_STRING 10_lock
 821: PPUSH
 822: CALL_OW 38
// DeleteCharacters ( 08_others ) ;
 826: LD_STRING 08_others
 828: PPUSH
 829: CALL_OW 40
// SaveCharacters ( others , 08_others ) ;
 833: LD_VAR 0 1
 837: PPUSH
 838: LD_STRING 08_others
 840: PPUSH
 841: CALL_OW 38
// ChangeMap ( 10 , %_cont ) ;
 845: LD_INT 10
 847: PPUSH
 848: LD_STRING %_cont
 850: PPUSH
 851: CALL_OW 340
// end ;
 855: PPOPN 1
 857: END
// every 0 0$1 trigger FilterUnitsInArea ( removeCar , [ f_side , 1 ] ) do var i ;
 858: LD_INT 12
 860: PPUSH
 861: LD_INT 22
 863: PUSH
 864: LD_INT 1
 866: PUSH
 867: EMPTY
 868: LIST
 869: LIST
 870: PPUSH
 871: CALL_OW 70
 875: IFFALSE 923
 877: GO 879
 879: DISABLE
 880: LD_INT 0
 882: PPUSH
// begin enable ;
 883: ENABLE
// for i in FilterUnitsInArea ( removeCar , [ f_side , 1 ] ) do
 884: LD_ADDR_VAR 0 1
 888: PUSH
 889: LD_INT 12
 891: PPUSH
 892: LD_INT 22
 894: PUSH
 895: LD_INT 1
 897: PUSH
 898: EMPTY
 899: LIST
 900: LIST
 901: PPUSH
 902: CALL_OW 70
 906: PUSH
 907: FOR_IN
 908: IFFALSE 921
// RemoveUnit ( i ) ;
 910: LD_VAR 0 1
 914: PPUSH
 915: CALL_OW 64
 919: GO 907
 921: POP
 922: POP
// end ; end_of_file
 923: PPOPN 1
 925: END
// export function PrepareHeroes ; var i , un ; begin
 926: LD_INT 0
 928: PPUSH
 929: PPUSH
 930: PPUSH
// uc_side = 1 ;
 931: LD_ADDR_OWVAR 20
 935: PUSH
 936: LD_INT 1
 938: ST_TO_ADDR
// uc_nation = 1 ;
 939: LD_ADDR_OWVAR 21
 943: PUSH
 944: LD_INT 1
 946: ST_TO_ADDR
// JMM = PrepareUnit ( 09_JMM , true ) ;
 947: LD_ADDR_EXP 1
 951: PUSH
 952: LD_STRING 09_JMM
 954: PPUSH
 955: LD_INT 1
 957: PPUSH
 958: CALL 5646 0 2
 962: ST_TO_ADDR
// Powell = PrepareUnit ( Powell , false ) ;
 963: LD_ADDR_EXP 2
 967: PUSH
 968: LD_STRING Powell
 970: PPUSH
 971: LD_INT 0
 973: PPUSH
 974: CALL 5646 0 2
 978: ST_TO_ADDR
// Bobby = PrepareUnit ( 09_Bobby , true ) ;
 979: LD_ADDR_EXP 5
 983: PUSH
 984: LD_STRING 09_Bobby
 986: PPUSH
 987: LD_INT 1
 989: PPUSH
 990: CALL 5646 0 2
 994: ST_TO_ADDR
// PlaceUnitArea ( Bobby , CoreHeroes , false ) ;
 995: LD_EXP 5
 999: PPUSH
1000: LD_INT 10
1002: PPUSH
1003: LD_INT 0
1005: PPUSH
1006: CALL_OW 49
// ComTurnXY ( Bobby , 42 , 35 ) ;
1010: LD_EXP 5
1014: PPUSH
1015: LD_INT 42
1017: PPUSH
1018: LD_INT 35
1020: PPUSH
1021: CALL_OW 118
// if IsPlaced ( Bobby ) then
1025: LD_EXP 5
1029: PPUSH
1030: CALL_OW 305
1034: IFFALSE 1064
// begin coreHeroesTab = coreHeroesTab ^ Bobby ;
1036: LD_ADDR_EXP 14
1040: PUSH
1041: LD_EXP 14
1045: PUSH
1046: LD_EXP 5
1050: ADD
1051: ST_TO_ADDR
// SaveCharacters ( Bobby , 10_Bobby ) ;
1052: LD_EXP 5
1056: PPUSH
1057: LD_STRING 10_Bobby
1059: PPUSH
1060: CALL_OW 38
// end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) then
1064: LD_EXP 5
1068: PPUSH
1069: CALL_OW 305
1073: NOT
1074: PUSH
1075: LD_EXP 3
1079: PPUSH
1080: CALL_OW 305
1084: NOT
1085: AND
1086: IFFALSE 1173
// begin Brown = PrepareUnit ( 08_Brown , true ) ;
1088: LD_ADDR_EXP 3
1092: PUSH
1093: LD_STRING 08_Brown
1095: PPUSH
1096: LD_INT 1
1098: PPUSH
1099: CALL 5646 0 2
1103: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
1104: LD_EXP 3
1108: PPUSH
1109: LD_INT 10
1111: PPUSH
1112: LD_INT 0
1114: PPUSH
1115: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
1119: LD_EXP 3
1123: PPUSH
1124: LD_INT 42
1126: PPUSH
1127: LD_INT 35
1129: PPUSH
1130: CALL_OW 118
// if IsPlaced ( Brown ) then
1134: LD_EXP 3
1138: PPUSH
1139: CALL_OW 305
1143: IFFALSE 1173
// begin coreHeroesTab = coreHeroesTab ^ Brown ;
1145: LD_ADDR_EXP 14
1149: PUSH
1150: LD_EXP 14
1154: PUSH
1155: LD_EXP 3
1159: ADD
1160: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
1161: LD_EXP 3
1165: PPUSH
1166: LD_STRING 10_Brown
1168: PPUSH
1169: CALL_OW 38
// end ; end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
1173: LD_EXP 5
1177: PPUSH
1178: CALL_OW 305
1182: NOT
1183: PUSH
1184: LD_EXP 3
1188: PPUSH
1189: CALL_OW 305
1193: NOT
1194: AND
1195: PUSH
1196: LD_EXP 4
1200: PPUSH
1201: CALL_OW 305
1205: NOT
1206: AND
1207: IFFALSE 1294
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
1209: LD_ADDR_EXP 4
1213: PUSH
1214: LD_STRING 08_Donaldson
1216: PPUSH
1217: LD_INT 1
1219: PPUSH
1220: CALL 5646 0 2
1224: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
1225: LD_EXP 4
1229: PPUSH
1230: LD_INT 10
1232: PPUSH
1233: LD_INT 0
1235: PPUSH
1236: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
1240: LD_EXP 4
1244: PPUSH
1245: LD_INT 42
1247: PPUSH
1248: LD_INT 35
1250: PPUSH
1251: CALL_OW 118
// if IsPlaced ( Donaldson ) then
1255: LD_EXP 4
1259: PPUSH
1260: CALL_OW 305
1264: IFFALSE 1294
// begin coreHeroesTab = coreHeroesTab ^ Donaldson ;
1266: LD_ADDR_EXP 14
1270: PUSH
1271: LD_EXP 14
1275: PUSH
1276: LD_EXP 4
1280: ADD
1281: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
1282: LD_EXP 4
1286: PPUSH
1287: LD_STRING 10_Donaldson
1289: PPUSH
1290: CALL_OW 38
// end ; end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
1294: LD_EXP 5
1298: PPUSH
1299: CALL_OW 305
1303: NOT
1304: PUSH
1305: LD_EXP 3
1309: PPUSH
1310: CALL_OW 305
1314: NOT
1315: AND
1316: PUSH
1317: LD_EXP 4
1321: PPUSH
1322: CALL_OW 305
1326: NOT
1327: AND
1328: PUSH
1329: LD_EXP 8
1333: PPUSH
1334: CALL_OW 305
1338: NOT
1339: AND
1340: IFFALSE 1427
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
1342: LD_ADDR_EXP 8
1346: PUSH
1347: LD_STRING 08_Frank
1349: PPUSH
1350: LD_INT 1
1352: PPUSH
1353: CALL 5646 0 2
1357: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
1358: LD_EXP 8
1362: PPUSH
1363: LD_INT 10
1365: PPUSH
1366: LD_INT 0
1368: PPUSH
1369: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
1373: LD_EXP 8
1377: PPUSH
1378: LD_INT 42
1380: PPUSH
1381: LD_INT 35
1383: PPUSH
1384: CALL_OW 118
// if IsPlaced ( Frank ) then
1388: LD_EXP 8
1392: PPUSH
1393: CALL_OW 305
1397: IFFALSE 1427
// begin coreHeroesTab = coreHeroesTab ^ Frank ;
1399: LD_ADDR_EXP 14
1403: PUSH
1404: LD_EXP 14
1408: PUSH
1409: LD_EXP 8
1413: ADD
1414: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
1415: LD_EXP 8
1419: PPUSH
1420: LD_STRING 10_Frank
1422: PPUSH
1423: CALL_OW 38
// end ; end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
1427: LD_EXP 5
1431: PPUSH
1432: CALL_OW 305
1436: NOT
1437: PUSH
1438: LD_EXP 3
1442: PPUSH
1443: CALL_OW 305
1447: NOT
1448: AND
1449: PUSH
1450: LD_EXP 4
1454: PPUSH
1455: CALL_OW 305
1459: NOT
1460: AND
1461: PUSH
1462: LD_EXP 8
1466: PPUSH
1467: CALL_OW 305
1471: NOT
1472: AND
1473: PUSH
1474: LD_EXP 9
1478: PPUSH
1479: CALL_OW 305
1483: NOT
1484: AND
1485: IFFALSE 1572
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
1487: LD_ADDR_EXP 9
1491: PUSH
1492: LD_STRING 09_Houten
1494: PPUSH
1495: LD_INT 1
1497: PPUSH
1498: CALL 5646 0 2
1502: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
1503: LD_EXP 9
1507: PPUSH
1508: LD_INT 10
1510: PPUSH
1511: LD_INT 0
1513: PPUSH
1514: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
1518: LD_EXP 9
1522: PPUSH
1523: LD_INT 42
1525: PPUSH
1526: LD_INT 35
1528: PPUSH
1529: CALL_OW 118
// if IsPlaced ( Houten ) then
1533: LD_EXP 9
1537: PPUSH
1538: CALL_OW 305
1542: IFFALSE 1572
// begin coreHeroesTab = coreHeroesTab ^ Houten ;
1544: LD_ADDR_EXP 14
1548: PUSH
1549: LD_EXP 14
1553: PUSH
1554: LD_EXP 9
1558: ADD
1559: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
1560: LD_EXP 9
1564: PPUSH
1565: LD_STRING 10_Houten
1567: PPUSH
1568: CALL_OW 38
// ; end ; end ; Cyrus = PrepareUnit ( 09_Cyrus , true ) ;
1572: LD_ADDR_EXP 6
1576: PUSH
1577: LD_STRING 09_Cyrus
1579: PPUSH
1580: LD_INT 1
1582: PPUSH
1583: CALL 5646 0 2
1587: ST_TO_ADDR
// PlaceUnitArea ( Cyrus , CoreHeroes , false ) ;
1588: LD_EXP 6
1592: PPUSH
1593: LD_INT 10
1595: PPUSH
1596: LD_INT 0
1598: PPUSH
1599: CALL_OW 49
// ComTurnXY ( Cyrus , 42 , 35 ) ;
1603: LD_EXP 6
1607: PPUSH
1608: LD_INT 42
1610: PPUSH
1611: LD_INT 35
1613: PPUSH
1614: CALL_OW 118
// if IsPlaced ( Cyrus ) then
1618: LD_EXP 6
1622: PPUSH
1623: CALL_OW 305
1627: IFFALSE 1657
// begin coreHeroesTab = coreHeroesTab ^ Cyrus ;
1629: LD_ADDR_EXP 14
1633: PUSH
1634: LD_EXP 14
1638: PUSH
1639: LD_EXP 6
1643: ADD
1644: ST_TO_ADDR
// SaveCharacters ( Cyrus , 10_Cyrus ) ;
1645: LD_EXP 6
1649: PPUSH
1650: LD_STRING 10_Cyrus
1652: PPUSH
1653: CALL_OW 38
// end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) then
1657: LD_EXP 6
1661: PPUSH
1662: CALL_OW 305
1666: NOT
1667: PUSH
1668: LD_EXP 3
1672: PPUSH
1673: CALL_OW 305
1677: NOT
1678: AND
1679: IFFALSE 1766
// begin Brown = PrepareUnit ( 08_Brown , true ) ;
1681: LD_ADDR_EXP 3
1685: PUSH
1686: LD_STRING 08_Brown
1688: PPUSH
1689: LD_INT 1
1691: PPUSH
1692: CALL 5646 0 2
1696: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
1697: LD_EXP 3
1701: PPUSH
1702: LD_INT 10
1704: PPUSH
1705: LD_INT 0
1707: PPUSH
1708: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
1712: LD_EXP 3
1716: PPUSH
1717: LD_INT 42
1719: PPUSH
1720: LD_INT 35
1722: PPUSH
1723: CALL_OW 118
// if IsPlaced ( Brown ) then
1727: LD_EXP 3
1731: PPUSH
1732: CALL_OW 305
1736: IFFALSE 1766
// begin coreHeroesTab = coreHeroesTab ^ Brown ;
1738: LD_ADDR_EXP 14
1742: PUSH
1743: LD_EXP 14
1747: PUSH
1748: LD_EXP 3
1752: ADD
1753: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
1754: LD_EXP 3
1758: PPUSH
1759: LD_STRING 10_Brown
1761: PPUSH
1762: CALL_OW 38
// end ; end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
1766: LD_EXP 6
1770: PPUSH
1771: CALL_OW 305
1775: NOT
1776: PUSH
1777: LD_EXP 3
1781: PPUSH
1782: CALL_OW 305
1786: NOT
1787: AND
1788: PUSH
1789: LD_EXP 4
1793: PPUSH
1794: CALL_OW 305
1798: NOT
1799: AND
1800: IFFALSE 1887
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
1802: LD_ADDR_EXP 4
1806: PUSH
1807: LD_STRING 08_Donaldson
1809: PPUSH
1810: LD_INT 1
1812: PPUSH
1813: CALL 5646 0 2
1817: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
1818: LD_EXP 4
1822: PPUSH
1823: LD_INT 10
1825: PPUSH
1826: LD_INT 0
1828: PPUSH
1829: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
1833: LD_EXP 4
1837: PPUSH
1838: LD_INT 42
1840: PPUSH
1841: LD_INT 35
1843: PPUSH
1844: CALL_OW 118
// if IsPlaced ( Donaldson ) then
1848: LD_EXP 4
1852: PPUSH
1853: CALL_OW 305
1857: IFFALSE 1887
// begin coreHeroesTab = coreHeroesTab ^ Donaldson ;
1859: LD_ADDR_EXP 14
1863: PUSH
1864: LD_EXP 14
1868: PUSH
1869: LD_EXP 4
1873: ADD
1874: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
1875: LD_EXP 4
1879: PPUSH
1880: LD_STRING 10_Donaldson
1882: PPUSH
1883: CALL_OW 38
// end ; end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
1887: LD_EXP 6
1891: PPUSH
1892: CALL_OW 305
1896: NOT
1897: PUSH
1898: LD_EXP 3
1902: PPUSH
1903: CALL_OW 305
1907: NOT
1908: AND
1909: PUSH
1910: LD_EXP 4
1914: PPUSH
1915: CALL_OW 305
1919: NOT
1920: AND
1921: PUSH
1922: LD_EXP 8
1926: PPUSH
1927: CALL_OW 305
1931: NOT
1932: AND
1933: IFFALSE 2020
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
1935: LD_ADDR_EXP 8
1939: PUSH
1940: LD_STRING 08_Frank
1942: PPUSH
1943: LD_INT 1
1945: PPUSH
1946: CALL 5646 0 2
1950: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
1951: LD_EXP 8
1955: PPUSH
1956: LD_INT 10
1958: PPUSH
1959: LD_INT 0
1961: PPUSH
1962: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
1966: LD_EXP 8
1970: PPUSH
1971: LD_INT 42
1973: PPUSH
1974: LD_INT 35
1976: PPUSH
1977: CALL_OW 118
// if IsPlaced ( Frank ) then
1981: LD_EXP 8
1985: PPUSH
1986: CALL_OW 305
1990: IFFALSE 2020
// begin coreHeroesTab = coreHeroesTab ^ Frank ;
1992: LD_ADDR_EXP 14
1996: PUSH
1997: LD_EXP 14
2001: PUSH
2002: LD_EXP 8
2006: ADD
2007: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
2008: LD_EXP 8
2012: PPUSH
2013: LD_STRING 10_Frank
2015: PPUSH
2016: CALL_OW 38
// end ; end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
2020: LD_EXP 6
2024: PPUSH
2025: CALL_OW 305
2029: NOT
2030: PUSH
2031: LD_EXP 3
2035: PPUSH
2036: CALL_OW 305
2040: NOT
2041: AND
2042: PUSH
2043: LD_EXP 4
2047: PPUSH
2048: CALL_OW 305
2052: NOT
2053: AND
2054: PUSH
2055: LD_EXP 8
2059: PPUSH
2060: CALL_OW 305
2064: NOT
2065: AND
2066: PUSH
2067: LD_EXP 9
2071: PPUSH
2072: CALL_OW 305
2076: NOT
2077: AND
2078: IFFALSE 2165
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
2080: LD_ADDR_EXP 9
2084: PUSH
2085: LD_STRING 09_Houten
2087: PPUSH
2088: LD_INT 1
2090: PPUSH
2091: CALL 5646 0 2
2095: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
2096: LD_EXP 9
2100: PPUSH
2101: LD_INT 10
2103: PPUSH
2104: LD_INT 0
2106: PPUSH
2107: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
2111: LD_EXP 9
2115: PPUSH
2116: LD_INT 42
2118: PPUSH
2119: LD_INT 35
2121: PPUSH
2122: CALL_OW 118
// if IsPlaced ( Houten ) then
2126: LD_EXP 9
2130: PPUSH
2131: CALL_OW 305
2135: IFFALSE 2165
// begin coreHeroesTab = coreHeroesTab ^ Houten ;
2137: LD_ADDR_EXP 14
2141: PUSH
2142: LD_EXP 14
2146: PUSH
2147: LD_EXP 9
2151: ADD
2152: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
2153: LD_EXP 9
2157: PPUSH
2158: LD_STRING 10_Houten
2160: PPUSH
2161: CALL_OW 38
// end ; end ; Lisa = PrepareUnit ( 08_Lisa , true ) ;
2165: LD_ADDR_EXP 7
2169: PUSH
2170: LD_STRING 08_Lisa
2172: PPUSH
2173: LD_INT 1
2175: PPUSH
2176: CALL 5646 0 2
2180: ST_TO_ADDR
// PlaceUnitArea ( Lisa , CoreHeroes , false ) ;
2181: LD_EXP 7
2185: PPUSH
2186: LD_INT 10
2188: PPUSH
2189: LD_INT 0
2191: PPUSH
2192: CALL_OW 49
// ComTurnXY ( Lisa , 42 , 35 ) ;
2196: LD_EXP 7
2200: PPUSH
2201: LD_INT 42
2203: PPUSH
2204: LD_INT 35
2206: PPUSH
2207: CALL_OW 118
// if IsPlaced ( Lisa ) then
2211: LD_EXP 7
2215: PPUSH
2216: CALL_OW 305
2220: IFFALSE 2250
// begin coreHeroesTab = coreHeroesTab ^ Lisa ;
2222: LD_ADDR_EXP 14
2226: PUSH
2227: LD_EXP 14
2231: PUSH
2232: LD_EXP 7
2236: ADD
2237: ST_TO_ADDR
// SaveCharacters ( Lisa , 10_Lisa ) ;
2238: LD_EXP 7
2242: PPUSH
2243: LD_STRING 10_Lisa
2245: PPUSH
2246: CALL_OW 38
// end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) then
2250: LD_EXP 7
2254: PPUSH
2255: CALL_OW 305
2259: NOT
2260: PUSH
2261: LD_EXP 3
2265: PPUSH
2266: CALL_OW 305
2270: NOT
2271: AND
2272: IFFALSE 2359
// begin Brown = PrepareUnit ( 08_Brown , true ) ;
2274: LD_ADDR_EXP 3
2278: PUSH
2279: LD_STRING 08_Brown
2281: PPUSH
2282: LD_INT 1
2284: PPUSH
2285: CALL 5646 0 2
2289: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
2290: LD_EXP 3
2294: PPUSH
2295: LD_INT 10
2297: PPUSH
2298: LD_INT 0
2300: PPUSH
2301: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
2305: LD_EXP 3
2309: PPUSH
2310: LD_INT 42
2312: PPUSH
2313: LD_INT 35
2315: PPUSH
2316: CALL_OW 118
// if IsPlaced ( Brown ) then
2320: LD_EXP 3
2324: PPUSH
2325: CALL_OW 305
2329: IFFALSE 2359
// begin coreHeroesTab = coreHeroesTab ^ Brown ;
2331: LD_ADDR_EXP 14
2335: PUSH
2336: LD_EXP 14
2340: PUSH
2341: LD_EXP 3
2345: ADD
2346: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
2347: LD_EXP 3
2351: PPUSH
2352: LD_STRING 10_Brown
2354: PPUSH
2355: CALL_OW 38
// end ; end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
2359: LD_EXP 7
2363: PPUSH
2364: CALL_OW 305
2368: NOT
2369: PUSH
2370: LD_EXP 3
2374: PPUSH
2375: CALL_OW 305
2379: NOT
2380: AND
2381: PUSH
2382: LD_EXP 4
2386: PPUSH
2387: CALL_OW 305
2391: NOT
2392: AND
2393: IFFALSE 2480
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
2395: LD_ADDR_EXP 4
2399: PUSH
2400: LD_STRING 08_Donaldson
2402: PPUSH
2403: LD_INT 1
2405: PPUSH
2406: CALL 5646 0 2
2410: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
2411: LD_EXP 4
2415: PPUSH
2416: LD_INT 10
2418: PPUSH
2419: LD_INT 0
2421: PPUSH
2422: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
2426: LD_EXP 4
2430: PPUSH
2431: LD_INT 42
2433: PPUSH
2434: LD_INT 35
2436: PPUSH
2437: CALL_OW 118
// if IsPlaced ( Donaldson ) then
2441: LD_EXP 4
2445: PPUSH
2446: CALL_OW 305
2450: IFFALSE 2480
// begin coreHeroesTab = coreHeroesTab ^ Donaldson ;
2452: LD_ADDR_EXP 14
2456: PUSH
2457: LD_EXP 14
2461: PUSH
2462: LD_EXP 4
2466: ADD
2467: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
2468: LD_EXP 4
2472: PPUSH
2473: LD_STRING 10_Donaldson
2475: PPUSH
2476: CALL_OW 38
// end ; end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
2480: LD_EXP 7
2484: PPUSH
2485: CALL_OW 305
2489: NOT
2490: PUSH
2491: LD_EXP 3
2495: PPUSH
2496: CALL_OW 305
2500: NOT
2501: AND
2502: PUSH
2503: LD_EXP 4
2507: PPUSH
2508: CALL_OW 305
2512: NOT
2513: AND
2514: PUSH
2515: LD_EXP 8
2519: PPUSH
2520: CALL_OW 305
2524: NOT
2525: AND
2526: IFFALSE 2613
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
2528: LD_ADDR_EXP 8
2532: PUSH
2533: LD_STRING 08_Frank
2535: PPUSH
2536: LD_INT 1
2538: PPUSH
2539: CALL 5646 0 2
2543: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
2544: LD_EXP 8
2548: PPUSH
2549: LD_INT 10
2551: PPUSH
2552: LD_INT 0
2554: PPUSH
2555: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
2559: LD_EXP 8
2563: PPUSH
2564: LD_INT 42
2566: PPUSH
2567: LD_INT 35
2569: PPUSH
2570: CALL_OW 118
// if IsPlaced ( Frank ) then
2574: LD_EXP 8
2578: PPUSH
2579: CALL_OW 305
2583: IFFALSE 2613
// begin coreHeroesTab = coreHeroesTab ^ Frank ;
2585: LD_ADDR_EXP 14
2589: PUSH
2590: LD_EXP 14
2594: PUSH
2595: LD_EXP 8
2599: ADD
2600: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
2601: LD_EXP 8
2605: PPUSH
2606: LD_STRING 10_Frank
2608: PPUSH
2609: CALL_OW 38
// end ; end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
2613: LD_EXP 7
2617: PPUSH
2618: CALL_OW 305
2622: NOT
2623: PUSH
2624: LD_EXP 3
2628: PPUSH
2629: CALL_OW 305
2633: NOT
2634: AND
2635: PUSH
2636: LD_EXP 4
2640: PPUSH
2641: CALL_OW 305
2645: NOT
2646: AND
2647: PUSH
2648: LD_EXP 8
2652: PPUSH
2653: CALL_OW 305
2657: NOT
2658: AND
2659: PUSH
2660: LD_EXP 9
2664: PPUSH
2665: CALL_OW 305
2669: NOT
2670: AND
2671: IFFALSE 2758
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
2673: LD_ADDR_EXP 9
2677: PUSH
2678: LD_STRING 09_Houten
2680: PPUSH
2681: LD_INT 1
2683: PPUSH
2684: CALL 5646 0 2
2688: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
2689: LD_EXP 9
2693: PPUSH
2694: LD_INT 10
2696: PPUSH
2697: LD_INT 0
2699: PPUSH
2700: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
2704: LD_EXP 9
2708: PPUSH
2709: LD_INT 42
2711: PPUSH
2712: LD_INT 35
2714: PPUSH
2715: CALL_OW 118
// if IsPlaced ( Houten ) then
2719: LD_EXP 9
2723: PPUSH
2724: CALL_OW 305
2728: IFFALSE 2758
// begin coreHeroesTab = coreHeroesTab ^ Houten ;
2730: LD_ADDR_EXP 14
2734: PUSH
2735: LD_EXP 14
2739: PUSH
2740: LD_EXP 9
2744: ADD
2745: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
2746: LD_EXP 9
2750: PPUSH
2751: LD_STRING 10_Houten
2753: PPUSH
2754: CALL_OW 38
// end ; end ; Gary = PrepareUnit ( 09_Gary , true ) ;
2758: LD_ADDR_EXP 10
2762: PUSH
2763: LD_STRING 09_Gary
2765: PPUSH
2766: LD_INT 1
2768: PPUSH
2769: CALL 5646 0 2
2773: ST_TO_ADDR
// PlaceUnitArea ( Gary , CoreHeroes , false ) ;
2774: LD_EXP 10
2778: PPUSH
2779: LD_INT 10
2781: PPUSH
2782: LD_INT 0
2784: PPUSH
2785: CALL_OW 49
// ComTurnXY ( Gary , 42 , 35 ) ;
2789: LD_EXP 10
2793: PPUSH
2794: LD_INT 42
2796: PPUSH
2797: LD_INT 35
2799: PPUSH
2800: CALL_OW 118
// if IsPlaced ( Gary ) then
2804: LD_EXP 10
2808: PPUSH
2809: CALL_OW 305
2813: IFFALSE 2843
// begin coreHeroesTab = coreHeroesTab ^ Gary ;
2815: LD_ADDR_EXP 14
2819: PUSH
2820: LD_EXP 14
2824: PUSH
2825: LD_EXP 10
2829: ADD
2830: ST_TO_ADDR
// SaveCharacters ( Gary , 10_Gary ) ;
2831: LD_EXP 10
2835: PPUSH
2836: LD_STRING 10_Gary
2838: PPUSH
2839: CALL_OW 38
// end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) then
2843: LD_EXP 10
2847: PPUSH
2848: CALL_OW 305
2852: NOT
2853: PUSH
2854: LD_EXP 3
2858: PPUSH
2859: CALL_OW 305
2863: NOT
2864: AND
2865: IFFALSE 2952
// begin Brown = PrepareUnit ( 08_Brown , true ) ;
2867: LD_ADDR_EXP 3
2871: PUSH
2872: LD_STRING 08_Brown
2874: PPUSH
2875: LD_INT 1
2877: PPUSH
2878: CALL 5646 0 2
2882: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
2883: LD_EXP 3
2887: PPUSH
2888: LD_INT 10
2890: PPUSH
2891: LD_INT 0
2893: PPUSH
2894: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
2898: LD_EXP 3
2902: PPUSH
2903: LD_INT 42
2905: PPUSH
2906: LD_INT 35
2908: PPUSH
2909: CALL_OW 118
// if IsPlaced ( Brown ) then
2913: LD_EXP 3
2917: PPUSH
2918: CALL_OW 305
2922: IFFALSE 2952
// begin coreHeroesTab = coreHeroesTab ^ Brown ;
2924: LD_ADDR_EXP 14
2928: PUSH
2929: LD_EXP 14
2933: PUSH
2934: LD_EXP 3
2938: ADD
2939: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
2940: LD_EXP 3
2944: PPUSH
2945: LD_STRING 10_Brown
2947: PPUSH
2948: CALL_OW 38
// end ; end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
2952: LD_EXP 10
2956: PPUSH
2957: CALL_OW 305
2961: NOT
2962: PUSH
2963: LD_EXP 3
2967: PPUSH
2968: CALL_OW 305
2972: NOT
2973: AND
2974: PUSH
2975: LD_EXP 4
2979: PPUSH
2980: CALL_OW 305
2984: NOT
2985: AND
2986: IFFALSE 3073
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
2988: LD_ADDR_EXP 4
2992: PUSH
2993: LD_STRING 08_Donaldson
2995: PPUSH
2996: LD_INT 1
2998: PPUSH
2999: CALL 5646 0 2
3003: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
3004: LD_EXP 4
3008: PPUSH
3009: LD_INT 10
3011: PPUSH
3012: LD_INT 0
3014: PPUSH
3015: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
3019: LD_EXP 4
3023: PPUSH
3024: LD_INT 42
3026: PPUSH
3027: LD_INT 35
3029: PPUSH
3030: CALL_OW 118
// if IsPlaced ( Donaldson ) then
3034: LD_EXP 4
3038: PPUSH
3039: CALL_OW 305
3043: IFFALSE 3073
// begin coreHeroesTab = coreHeroesTab ^ Donaldson ;
3045: LD_ADDR_EXP 14
3049: PUSH
3050: LD_EXP 14
3054: PUSH
3055: LD_EXP 4
3059: ADD
3060: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
3061: LD_EXP 4
3065: PPUSH
3066: LD_STRING 10_Donaldson
3068: PPUSH
3069: CALL_OW 38
// end ; end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
3073: LD_EXP 10
3077: PPUSH
3078: CALL_OW 305
3082: NOT
3083: PUSH
3084: LD_EXP 3
3088: PPUSH
3089: CALL_OW 305
3093: NOT
3094: AND
3095: PUSH
3096: LD_EXP 4
3100: PPUSH
3101: CALL_OW 305
3105: NOT
3106: AND
3107: PUSH
3108: LD_EXP 8
3112: PPUSH
3113: CALL_OW 305
3117: NOT
3118: AND
3119: IFFALSE 3206
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
3121: LD_ADDR_EXP 8
3125: PUSH
3126: LD_STRING 08_Frank
3128: PPUSH
3129: LD_INT 1
3131: PPUSH
3132: CALL 5646 0 2
3136: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
3137: LD_EXP 8
3141: PPUSH
3142: LD_INT 10
3144: PPUSH
3145: LD_INT 0
3147: PPUSH
3148: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
3152: LD_EXP 8
3156: PPUSH
3157: LD_INT 42
3159: PPUSH
3160: LD_INT 35
3162: PPUSH
3163: CALL_OW 118
// if IsPlaced ( Frank ) then
3167: LD_EXP 8
3171: PPUSH
3172: CALL_OW 305
3176: IFFALSE 3206
// begin coreHeroesTab = coreHeroesTab ^ Frank ;
3178: LD_ADDR_EXP 14
3182: PUSH
3183: LD_EXP 14
3187: PUSH
3188: LD_EXP 8
3192: ADD
3193: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
3194: LD_EXP 8
3198: PPUSH
3199: LD_STRING 10_Frank
3201: PPUSH
3202: CALL_OW 38
// end ; end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
3206: LD_EXP 10
3210: PPUSH
3211: CALL_OW 305
3215: NOT
3216: PUSH
3217: LD_EXP 3
3221: PPUSH
3222: CALL_OW 305
3226: NOT
3227: AND
3228: PUSH
3229: LD_EXP 4
3233: PPUSH
3234: CALL_OW 305
3238: NOT
3239: AND
3240: PUSH
3241: LD_EXP 8
3245: PPUSH
3246: CALL_OW 305
3250: NOT
3251: AND
3252: PUSH
3253: LD_EXP 9
3257: PPUSH
3258: CALL_OW 305
3262: NOT
3263: AND
3264: IFFALSE 3351
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
3266: LD_ADDR_EXP 9
3270: PUSH
3271: LD_STRING 09_Houten
3273: PPUSH
3274: LD_INT 1
3276: PPUSH
3277: CALL 5646 0 2
3281: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
3282: LD_EXP 9
3286: PPUSH
3287: LD_INT 10
3289: PPUSH
3290: LD_INT 0
3292: PPUSH
3293: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
3297: LD_EXP 9
3301: PPUSH
3302: LD_INT 42
3304: PPUSH
3305: LD_INT 35
3307: PPUSH
3308: CALL_OW 118
// if IsPlaced ( Houten ) then
3312: LD_EXP 9
3316: PPUSH
3317: CALL_OW 305
3321: IFFALSE 3351
// begin coreHeroesTab = coreHeroesTab ^ Houten ;
3323: LD_ADDR_EXP 14
3327: PUSH
3328: LD_EXP 14
3332: PUSH
3333: LD_EXP 9
3337: ADD
3338: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
3339: LD_EXP 9
3343: PPUSH
3344: LD_STRING 10_Houten
3346: PPUSH
3347: CALL_OW 38
// end ; end ; for i = 1 to 5 - coreHeroesTab do
3351: LD_ADDR_VAR 0 2
3355: PUSH
3356: DOUBLE
3357: LD_INT 1
3359: DEC
3360: ST_TO_ADDR
3361: LD_INT 5
3363: PUSH
3364: LD_EXP 14
3368: MINUS
3369: PUSH
3370: FOR_TO
3371: IFFALSE 3495
// begin hc_gallery =  ;
3373: LD_ADDR_OWVAR 33
3377: PUSH
3378: LD_STRING 
3380: ST_TO_ADDR
// hc_name =  ;
3381: LD_ADDR_OWVAR 26
3385: PUSH
3386: LD_STRING 
3388: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
3389: LD_INT 0
3391: PPUSH
3392: LD_INT 1
3394: PUSH
3395: LD_INT 2
3397: PUSH
3398: LD_INT 3
3400: PUSH
3401: LD_INT 4
3403: PUSH
3404: EMPTY
3405: LIST
3406: LIST
3407: LIST
3408: LIST
3409: PUSH
3410: LD_INT 1
3412: PPUSH
3413: LD_INT 4
3415: PPUSH
3416: CALL_OW 12
3420: ARRAY
3421: PPUSH
3422: LD_INT 4
3424: PPUSH
3425: LD_INT 6
3427: PPUSH
3428: CALL_OW 12
3432: PPUSH
3433: CALL_OW 380
// un = CreateHuman ;
3437: LD_ADDR_VAR 0 3
3441: PUSH
3442: CALL_OW 44
3446: ST_TO_ADDR
// coreHeroesTab = coreHeroesTab ^ un ;
3447: LD_ADDR_EXP 14
3451: PUSH
3452: LD_EXP 14
3456: PUSH
3457: LD_VAR 0 3
3461: ADD
3462: ST_TO_ADDR
// PlaceUnitArea ( un , CoreHeroes , false ) ;
3463: LD_VAR 0 3
3467: PPUSH
3468: LD_INT 10
3470: PPUSH
3471: LD_INT 0
3473: PPUSH
3474: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
3478: LD_VAR 0 3
3482: PPUSH
3483: LD_INT 42
3485: PPUSH
3486: LD_INT 35
3488: PPUSH
3489: CALL_OW 118
// end ;
3493: GO 3370
3495: POP
3496: POP
// siberite = LoadVariable ( 09_SibRes , 0 ) ;
3497: LD_ADDR_EXP 17
3501: PUSH
3502: LD_STRING 09_SibRes
3504: PPUSH
3505: LD_INT 0
3507: PPUSH
3508: CALL_OW 30
3512: ST_TO_ADDR
// others08 = CreateCharacterSet ( 08_other_survivors ) ;
3513: LD_ADDR_EXP 11
3517: PUSH
3518: LD_STRING 08_other_survivors
3520: PPUSH
3521: CALL_OW 31
3525: ST_TO_ADDR
// if siberite >= 200 then
3526: LD_EXP 17
3530: PUSH
3531: LD_INT 200
3533: GREATEREQUAL
3534: IFFALSE 4577
// begin if not IsPlaced ( Brown ) then
3536: LD_EXP 3
3540: PPUSH
3541: CALL_OW 305
3545: NOT
3546: IFFALSE 3633
// begin Brown = PrepareUnit ( 08_Brown , true ) ;
3548: LD_ADDR_EXP 3
3552: PUSH
3553: LD_STRING 08_Brown
3555: PPUSH
3556: LD_INT 1
3558: PPUSH
3559: CALL 5646 0 2
3563: ST_TO_ADDR
// PlaceUnitArea ( Brown , AddHeroes , false ) ;
3564: LD_EXP 3
3568: PPUSH
3569: LD_INT 11
3571: PPUSH
3572: LD_INT 0
3574: PPUSH
3575: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
3579: LD_EXP 3
3583: PPUSH
3584: LD_INT 42
3586: PPUSH
3587: LD_INT 35
3589: PPUSH
3590: CALL_OW 118
// if IsPlaced ( Brown ) then
3594: LD_EXP 3
3598: PPUSH
3599: CALL_OW 305
3603: IFFALSE 3633
// begin addHeroesTab = addHeroesTab ^ Brown ;
3605: LD_ADDR_EXP 15
3609: PUSH
3610: LD_EXP 15
3614: PUSH
3615: LD_EXP 3
3619: ADD
3620: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
3621: LD_EXP 3
3625: PPUSH
3626: LD_STRING 10_Brown
3628: PPUSH
3629: CALL_OW 38
// end ; end ; if not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
3633: LD_EXP 3
3637: PPUSH
3638: CALL_OW 305
3642: NOT
3643: PUSH
3644: LD_EXP 4
3648: PPUSH
3649: CALL_OW 305
3653: NOT
3654: AND
3655: IFFALSE 3742
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
3657: LD_ADDR_EXP 4
3661: PUSH
3662: LD_STRING 08_Donaldson
3664: PPUSH
3665: LD_INT 1
3667: PPUSH
3668: CALL 5646 0 2
3672: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , addHeroes , false ) ;
3673: LD_EXP 4
3677: PPUSH
3678: LD_INT 11
3680: PPUSH
3681: LD_INT 0
3683: PPUSH
3684: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
3688: LD_EXP 4
3692: PPUSH
3693: LD_INT 42
3695: PPUSH
3696: LD_INT 35
3698: PPUSH
3699: CALL_OW 118
// if IsPlaced ( Donaldson ) then
3703: LD_EXP 4
3707: PPUSH
3708: CALL_OW 305
3712: IFFALSE 3742
// begin addHeroesTab = addHeroesTab ^ Donaldson ;
3714: LD_ADDR_EXP 15
3718: PUSH
3719: LD_EXP 15
3723: PUSH
3724: LD_EXP 4
3728: ADD
3729: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
3730: LD_EXP 4
3734: PPUSH
3735: LD_STRING 10_Donaldson
3737: PPUSH
3738: CALL_OW 38
// end ; end ; if not IsPlaced ( Brown ) and not IsPlaced ( Frank ) then
3742: LD_EXP 3
3746: PPUSH
3747: CALL_OW 305
3751: NOT
3752: PUSH
3753: LD_EXP 8
3757: PPUSH
3758: CALL_OW 305
3762: NOT
3763: AND
3764: IFFALSE 3851
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
3766: LD_ADDR_EXP 8
3770: PUSH
3771: LD_STRING 08_Frank
3773: PPUSH
3774: LD_INT 1
3776: PPUSH
3777: CALL 5646 0 2
3781: ST_TO_ADDR
// PlaceUnitArea ( Frank , addHeroes , false ) ;
3782: LD_EXP 8
3786: PPUSH
3787: LD_INT 11
3789: PPUSH
3790: LD_INT 0
3792: PPUSH
3793: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
3797: LD_EXP 8
3801: PPUSH
3802: LD_INT 42
3804: PPUSH
3805: LD_INT 35
3807: PPUSH
3808: CALL_OW 118
// if IsPlaced ( Frank ) then
3812: LD_EXP 8
3816: PPUSH
3817: CALL_OW 305
3821: IFFALSE 3851
// begin addHeroesTab = addHeroesTab ^ Frank ;
3823: LD_ADDR_EXP 15
3827: PUSH
3828: LD_EXP 15
3832: PUSH
3833: LD_EXP 8
3837: ADD
3838: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
3839: LD_EXP 8
3843: PPUSH
3844: LD_STRING 10_Frank
3846: PPUSH
3847: CALL_OW 38
// end ; end ; if not IsPlaced ( Brown ) and not IsPlaced ( Houten ) then
3851: LD_EXP 3
3855: PPUSH
3856: CALL_OW 305
3860: NOT
3861: PUSH
3862: LD_EXP 9
3866: PPUSH
3867: CALL_OW 305
3871: NOT
3872: AND
3873: IFFALSE 3962
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
3875: LD_ADDR_EXP 9
3879: PUSH
3880: LD_STRING 09_Houten
3882: PPUSH
3883: LD_INT 1
3885: PPUSH
3886: CALL 5646 0 2
3890: ST_TO_ADDR
// PlaceUnitArea ( Houten , addHeroes , false ) ;
3891: LD_EXP 9
3895: PPUSH
3896: LD_INT 11
3898: PPUSH
3899: LD_INT 0
3901: PPUSH
3902: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
3906: LD_EXP 9
3910: PPUSH
3911: LD_INT 42
3913: PPUSH
3914: LD_INT 35
3916: PPUSH
3917: CALL_OW 118
// if IsPlaced ( Houten ) then
3921: LD_EXP 9
3925: PPUSH
3926: CALL_OW 305
3930: IFFALSE 3960
// begin addHeroesTab = addHeroesTab ^ Houten ;
3932: LD_ADDR_EXP 15
3936: PUSH
3937: LD_EXP 15
3941: PUSH
3942: LD_EXP 9
3946: ADD
3947: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
3948: LD_EXP 9
3952: PPUSH
3953: LD_STRING 10_Houten
3955: PPUSH
3956: CALL_OW 38
// end ; end else
3960: GO 4038
// begin PlaceUnitArea ( others08 [ 1 ] , addHeroes , false ) ;
3962: LD_EXP 11
3966: PUSH
3967: LD_INT 1
3969: ARRAY
3970: PPUSH
3971: LD_INT 11
3973: PPUSH
3974: LD_INT 0
3976: PPUSH
3977: CALL_OW 49
// ComTurnXY ( others08 [ 1 ] , 42 , 35 ) ;
3981: LD_EXP 11
3985: PUSH
3986: LD_INT 1
3988: ARRAY
3989: PPUSH
3990: LD_INT 42
3992: PPUSH
3993: LD_INT 35
3995: PPUSH
3996: CALL_OW 118
// addHeroesTab = addHeroesTab ^ others08 [ 1 ] ;
4000: LD_ADDR_EXP 15
4004: PUSH
4005: LD_EXP 15
4009: PUSH
4010: LD_EXP 11
4014: PUSH
4015: LD_INT 1
4017: ARRAY
4018: ADD
4019: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
4020: LD_ADDR_EXP 11
4024: PUSH
4025: LD_EXP 11
4029: PPUSH
4030: LD_INT 1
4032: PPUSH
4033: CALL_OW 3
4037: ST_TO_ADDR
// end ; if not IsPlaced ( Donaldson ) then
4038: LD_EXP 4
4042: PPUSH
4043: CALL_OW 305
4047: NOT
4048: IFFALSE 4135
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
4050: LD_ADDR_EXP 4
4054: PUSH
4055: LD_STRING 08_Donaldson
4057: PPUSH
4058: LD_INT 1
4060: PPUSH
4061: CALL 5646 0 2
4065: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , AddHeroes , false ) ;
4066: LD_EXP 4
4070: PPUSH
4071: LD_INT 11
4073: PPUSH
4074: LD_INT 0
4076: PPUSH
4077: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
4081: LD_EXP 4
4085: PPUSH
4086: LD_INT 42
4088: PPUSH
4089: LD_INT 35
4091: PPUSH
4092: CALL_OW 118
// if IsPlaced ( Donaldson ) then
4096: LD_EXP 4
4100: PPUSH
4101: CALL_OW 305
4105: IFFALSE 4135
// begin addHeroesTab = addHeroesTab ^ Donaldson ;
4107: LD_ADDR_EXP 15
4111: PUSH
4112: LD_EXP 15
4116: PUSH
4117: LD_EXP 4
4121: ADD
4122: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
4123: LD_EXP 4
4127: PPUSH
4128: LD_STRING 10_Donaldson
4130: PPUSH
4131: CALL_OW 38
// end ; end ; if not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
4135: LD_EXP 4
4139: PPUSH
4140: CALL_OW 305
4144: NOT
4145: PUSH
4146: LD_EXP 8
4150: PPUSH
4151: CALL_OW 305
4155: NOT
4156: AND
4157: IFFALSE 4244
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
4159: LD_ADDR_EXP 8
4163: PUSH
4164: LD_STRING 08_Frank
4166: PPUSH
4167: LD_INT 1
4169: PPUSH
4170: CALL 5646 0 2
4174: ST_TO_ADDR
// PlaceUnitArea ( Frank , addHeroes , false ) ;
4175: LD_EXP 8
4179: PPUSH
4180: LD_INT 11
4182: PPUSH
4183: LD_INT 0
4185: PPUSH
4186: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
4190: LD_EXP 8
4194: PPUSH
4195: LD_INT 42
4197: PPUSH
4198: LD_INT 35
4200: PPUSH
4201: CALL_OW 118
// if IsPlaced ( Frank ) then
4205: LD_EXP 8
4209: PPUSH
4210: CALL_OW 305
4214: IFFALSE 4244
// begin addHeroesTab = addHeroesTab ^ Frank ;
4216: LD_ADDR_EXP 15
4220: PUSH
4221: LD_EXP 15
4225: PUSH
4226: LD_EXP 8
4230: ADD
4231: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
4232: LD_EXP 8
4236: PPUSH
4237: LD_STRING 10_Frank
4239: PPUSH
4240: CALL_OW 38
// end ; end ; if not IsPlaced ( Donaldson ) and not IsPlaced ( Houten ) then
4244: LD_EXP 4
4248: PPUSH
4249: CALL_OW 305
4253: NOT
4254: PUSH
4255: LD_EXP 9
4259: PPUSH
4260: CALL_OW 305
4264: NOT
4265: AND
4266: IFFALSE 4355
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
4268: LD_ADDR_EXP 9
4272: PUSH
4273: LD_STRING 09_Houten
4275: PPUSH
4276: LD_INT 1
4278: PPUSH
4279: CALL 5646 0 2
4283: ST_TO_ADDR
// PlaceUnitArea ( Houten , addHeroes , false ) ;
4284: LD_EXP 9
4288: PPUSH
4289: LD_INT 11
4291: PPUSH
4292: LD_INT 0
4294: PPUSH
4295: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
4299: LD_EXP 9
4303: PPUSH
4304: LD_INT 42
4306: PPUSH
4307: LD_INT 35
4309: PPUSH
4310: CALL_OW 118
// if IsPlaced ( Houten ) then
4314: LD_EXP 9
4318: PPUSH
4319: CALL_OW 305
4323: IFFALSE 4353
// begin addHeroesTab = addHeroesTab ^ Houten ;
4325: LD_ADDR_EXP 15
4329: PUSH
4330: LD_EXP 15
4334: PUSH
4335: LD_EXP 9
4339: ADD
4340: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
4341: LD_EXP 9
4345: PPUSH
4346: LD_STRING 10_Houten
4348: PPUSH
4349: CALL_OW 38
// end ; end else
4353: GO 4431
// begin PlaceUnitArea ( others08 [ 2 ] , addHeroes , false ) ;
4355: LD_EXP 11
4359: PUSH
4360: LD_INT 2
4362: ARRAY
4363: PPUSH
4364: LD_INT 11
4366: PPUSH
4367: LD_INT 0
4369: PPUSH
4370: CALL_OW 49
// ComTurnXY ( others08 [ 2 ] , 42 , 35 ) ;
4374: LD_EXP 11
4378: PUSH
4379: LD_INT 2
4381: ARRAY
4382: PPUSH
4383: LD_INT 42
4385: PPUSH
4386: LD_INT 35
4388: PPUSH
4389: CALL_OW 118
// addHeroesTab = addHeroesTab ^ others08 [ 1 ] ;
4393: LD_ADDR_EXP 15
4397: PUSH
4398: LD_EXP 15
4402: PUSH
4403: LD_EXP 11
4407: PUSH
4408: LD_INT 1
4410: ARRAY
4411: ADD
4412: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
4413: LD_ADDR_EXP 11
4417: PUSH
4418: LD_EXP 11
4422: PPUSH
4423: LD_INT 1
4425: PPUSH
4426: CALL_OW 3
4430: ST_TO_ADDR
// end ; for i = 1 to 2 - addHeroesTab do
4431: LD_ADDR_VAR 0 2
4435: PUSH
4436: DOUBLE
4437: LD_INT 1
4439: DEC
4440: ST_TO_ADDR
4441: LD_INT 2
4443: PUSH
4444: LD_EXP 15
4448: MINUS
4449: PUSH
4450: FOR_TO
4451: IFFALSE 4575
// begin hc_gallery =  ;
4453: LD_ADDR_OWVAR 33
4457: PUSH
4458: LD_STRING 
4460: ST_TO_ADDR
// hc_name =  ;
4461: LD_ADDR_OWVAR 26
4465: PUSH
4466: LD_STRING 
4468: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
4469: LD_INT 0
4471: PPUSH
4472: LD_INT 1
4474: PUSH
4475: LD_INT 2
4477: PUSH
4478: LD_INT 3
4480: PUSH
4481: LD_INT 4
4483: PUSH
4484: EMPTY
4485: LIST
4486: LIST
4487: LIST
4488: LIST
4489: PUSH
4490: LD_INT 1
4492: PPUSH
4493: LD_INT 4
4495: PPUSH
4496: CALL_OW 12
4500: ARRAY
4501: PPUSH
4502: LD_INT 4
4504: PPUSH
4505: LD_INT 6
4507: PPUSH
4508: CALL_OW 12
4512: PPUSH
4513: CALL_OW 380
// un = CreateHuman ;
4517: LD_ADDR_VAR 0 3
4521: PUSH
4522: CALL_OW 44
4526: ST_TO_ADDR
// addHeroesTab = addHeroesTab ^ un ;
4527: LD_ADDR_EXP 15
4531: PUSH
4532: LD_EXP 15
4536: PUSH
4537: LD_VAR 0 3
4541: ADD
4542: ST_TO_ADDR
// PlaceUnitArea ( un , addHeroes , false ) ;
4543: LD_VAR 0 3
4547: PPUSH
4548: LD_INT 11
4550: PPUSH
4551: LD_INT 0
4553: PPUSH
4554: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
4558: LD_VAR 0 3
4562: PPUSH
4563: LD_INT 42
4565: PPUSH
4566: LD_INT 35
4568: PPUSH
4569: CALL_OW 118
// end ;
4573: GO 4450
4575: POP
4576: POP
// end ; if siberite > 200 then
4577: LD_EXP 17
4581: PUSH
4582: LD_INT 200
4584: GREATER
4585: IFFALSE 5141
// begin if others08 > 0 then
4587: LD_EXP 11
4591: PUSH
4592: LD_INT 0
4594: GREATER
4595: IFFALSE 4985
// begin if others08 >= ( siberite - 200 ) / 100 then
4597: LD_EXP 11
4601: PUSH
4602: LD_EXP 17
4606: PUSH
4607: LD_INT 200
4609: MINUS
4610: PUSH
4611: LD_INT 100
4613: DIVREAL
4614: GREATEREQUAL
4615: IFFALSE 4727
// begin for i := 1 to ( siberite - 200 ) / 100 do
4617: LD_ADDR_VAR 0 2
4621: PUSH
4622: DOUBLE
4623: LD_INT 1
4625: DEC
4626: ST_TO_ADDR
4627: LD_EXP 17
4631: PUSH
4632: LD_INT 200
4634: MINUS
4635: PUSH
4636: LD_INT 100
4638: DIVREAL
4639: PUSH
4640: FOR_TO
4641: IFFALSE 4723
// begin PlaceUnitArea ( others08 [ 1 ] , addHeroes , false ) ;
4643: LD_EXP 11
4647: PUSH
4648: LD_INT 1
4650: ARRAY
4651: PPUSH
4652: LD_INT 11
4654: PPUSH
4655: LD_INT 0
4657: PPUSH
4658: CALL_OW 49
// ComTurnXY ( others08 [ 1 ] , 42 , 35 ) ;
4662: LD_EXP 11
4666: PUSH
4667: LD_INT 1
4669: ARRAY
4670: PPUSH
4671: LD_INT 42
4673: PPUSH
4674: LD_INT 35
4676: PPUSH
4677: CALL_OW 118
// addHeroesTab = addHeroesTab ^ others08 [ i ] ;
4681: LD_ADDR_EXP 15
4685: PUSH
4686: LD_EXP 15
4690: PUSH
4691: LD_EXP 11
4695: PUSH
4696: LD_VAR 0 2
4700: ARRAY
4701: ADD
4702: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
4703: LD_ADDR_EXP 11
4707: PUSH
4708: LD_EXP 11
4712: PPUSH
4713: LD_INT 1
4715: PPUSH
4716: CALL_OW 3
4720: ST_TO_ADDR
// end ;
4721: GO 4640
4723: POP
4724: POP
// end else
4725: GO 4983
// begin for i := 1 to others08 do
4727: LD_ADDR_VAR 0 2
4731: PUSH
4732: DOUBLE
4733: LD_INT 1
4735: DEC
4736: ST_TO_ADDR
4737: LD_EXP 11
4741: PUSH
4742: FOR_TO
4743: IFFALSE 4825
// begin PlaceUnitArea ( others08 [ 1 ] , addHeroes , false ) ;
4745: LD_EXP 11
4749: PUSH
4750: LD_INT 1
4752: ARRAY
4753: PPUSH
4754: LD_INT 11
4756: PPUSH
4757: LD_INT 0
4759: PPUSH
4760: CALL_OW 49
// ComTurnXY ( others08 [ 1 ] , 42 , 35 ) ;
4764: LD_EXP 11
4768: PUSH
4769: LD_INT 1
4771: ARRAY
4772: PPUSH
4773: LD_INT 42
4775: PPUSH
4776: LD_INT 35
4778: PPUSH
4779: CALL_OW 118
// addHeroesTab = addHeroesTab ^ others08 [ i ] ;
4783: LD_ADDR_EXP 15
4787: PUSH
4788: LD_EXP 15
4792: PUSH
4793: LD_EXP 11
4797: PUSH
4798: LD_VAR 0 2
4802: ARRAY
4803: ADD
4804: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
4805: LD_ADDR_EXP 11
4809: PUSH
4810: LD_EXP 11
4814: PPUSH
4815: LD_INT 1
4817: PPUSH
4818: CALL_OW 3
4822: ST_TO_ADDR
// end ;
4823: GO 4742
4825: POP
4826: POP
// for i = 1 to ( siberite - 200 ) / 100 - others08 do
4827: LD_ADDR_VAR 0 2
4831: PUSH
4832: DOUBLE
4833: LD_INT 1
4835: DEC
4836: ST_TO_ADDR
4837: LD_EXP 17
4841: PUSH
4842: LD_INT 200
4844: MINUS
4845: PUSH
4846: LD_INT 100
4848: DIVREAL
4849: PUSH
4850: LD_EXP 11
4854: MINUS
4855: PUSH
4856: FOR_TO
4857: IFFALSE 4981
// begin hc_gallery =  ;
4859: LD_ADDR_OWVAR 33
4863: PUSH
4864: LD_STRING 
4866: ST_TO_ADDR
// hc_name =  ;
4867: LD_ADDR_OWVAR 26
4871: PUSH
4872: LD_STRING 
4874: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
4875: LD_INT 0
4877: PPUSH
4878: LD_INT 1
4880: PUSH
4881: LD_INT 2
4883: PUSH
4884: LD_INT 3
4886: PUSH
4887: LD_INT 4
4889: PUSH
4890: EMPTY
4891: LIST
4892: LIST
4893: LIST
4894: LIST
4895: PUSH
4896: LD_INT 1
4898: PPUSH
4899: LD_INT 4
4901: PPUSH
4902: CALL_OW 12
4906: ARRAY
4907: PPUSH
4908: LD_INT 4
4910: PPUSH
4911: LD_INT 6
4913: PPUSH
4914: CALL_OW 12
4918: PPUSH
4919: CALL_OW 380
// un = CreateHuman ;
4923: LD_ADDR_VAR 0 3
4927: PUSH
4928: CALL_OW 44
4932: ST_TO_ADDR
// addHeroesTab = addHeroesTab ^ un ;
4933: LD_ADDR_EXP 15
4937: PUSH
4938: LD_EXP 15
4942: PUSH
4943: LD_VAR 0 3
4947: ADD
4948: ST_TO_ADDR
// PlaceUnitArea ( un , addHeroes , false ) ;
4949: LD_VAR 0 3
4953: PPUSH
4954: LD_INT 11
4956: PPUSH
4957: LD_INT 0
4959: PPUSH
4960: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
4964: LD_VAR 0 3
4968: PPUSH
4969: LD_INT 42
4971: PPUSH
4972: LD_INT 35
4974: PPUSH
4975: CALL_OW 118
// end ;
4979: GO 4856
4981: POP
4982: POP
// end ; end else
4983: GO 5141
// begin for i = 1 to ( siberite - 200 ) / 100 - others08 do
4985: LD_ADDR_VAR 0 2
4989: PUSH
4990: DOUBLE
4991: LD_INT 1
4993: DEC
4994: ST_TO_ADDR
4995: LD_EXP 17
4999: PUSH
5000: LD_INT 200
5002: MINUS
5003: PUSH
5004: LD_INT 100
5006: DIVREAL
5007: PUSH
5008: LD_EXP 11
5012: MINUS
5013: PUSH
5014: FOR_TO
5015: IFFALSE 5139
// begin hc_gallery =  ;
5017: LD_ADDR_OWVAR 33
5021: PUSH
5022: LD_STRING 
5024: ST_TO_ADDR
// hc_name =  ;
5025: LD_ADDR_OWVAR 26
5029: PUSH
5030: LD_STRING 
5032: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
5033: LD_INT 0
5035: PPUSH
5036: LD_INT 1
5038: PUSH
5039: LD_INT 2
5041: PUSH
5042: LD_INT 3
5044: PUSH
5045: LD_INT 4
5047: PUSH
5048: EMPTY
5049: LIST
5050: LIST
5051: LIST
5052: LIST
5053: PUSH
5054: LD_INT 1
5056: PPUSH
5057: LD_INT 4
5059: PPUSH
5060: CALL_OW 12
5064: ARRAY
5065: PPUSH
5066: LD_INT 4
5068: PPUSH
5069: LD_INT 6
5071: PPUSH
5072: CALL_OW 12
5076: PPUSH
5077: CALL_OW 380
// un = CreateHuman ;
5081: LD_ADDR_VAR 0 3
5085: PUSH
5086: CALL_OW 44
5090: ST_TO_ADDR
// addHeroesTab = addHeroesTab ^ un ;
5091: LD_ADDR_EXP 15
5095: PUSH
5096: LD_EXP 15
5100: PUSH
5101: LD_VAR 0 3
5105: ADD
5106: ST_TO_ADDR
// PlaceUnitArea ( un , addHeroes , false ) ;
5107: LD_VAR 0 3
5111: PPUSH
5112: LD_INT 11
5114: PPUSH
5115: LD_INT 0
5117: PPUSH
5118: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
5122: LD_VAR 0 3
5126: PPUSH
5127: LD_INT 42
5129: PPUSH
5130: LD_INT 35
5132: PPUSH
5133: CALL_OW 118
// end ;
5137: GO 5014
5139: POP
5140: POP
// end ; end ; PlaceHumanInUnit ( JMM , car ) ;
5141: LD_EXP 1
5145: PPUSH
5146: LD_INT 138
5148: PPUSH
5149: CALL_OW 52
// PlaceHumanInUnit ( Powell , Am_bar ) ;
5153: LD_EXP 2
5157: PPUSH
5158: LD_INT 58
5160: PPUSH
5161: CALL_OW 52
// SetClass ( JMM , 1 ) ;
5165: LD_EXP 1
5169: PPUSH
5170: LD_INT 1
5172: PPUSH
5173: CALL_OW 336
// end ;
5177: LD_VAR 0 1
5181: RET
// export function PrepareConvoy ; var i , veh , un ; begin
5182: LD_INT 0
5184: PPUSH
5185: PPUSH
5186: PPUSH
5187: PPUSH
// uc_side = 1 ;
5188: LD_ADDR_OWVAR 20
5192: PUSH
5193: LD_INT 1
5195: ST_TO_ADDR
// uc_nation = 1 ;
5196: LD_ADDR_OWVAR 21
5200: PUSH
5201: LD_INT 1
5203: ST_TO_ADDR
// for i := 1 to 3 do
5204: LD_ADDR_VAR 0 2
5208: PUSH
5209: DOUBLE
5210: LD_INT 1
5212: DEC
5213: ST_TO_ADDR
5214: LD_INT 3
5216: PUSH
5217: FOR_TO
5218: IFFALSE 5364
// begin vc_engine = 1 ;
5220: LD_ADDR_OWVAR 39
5224: PUSH
5225: LD_INT 1
5227: ST_TO_ADDR
// vc_control = 1 ;
5228: LD_ADDR_OWVAR 38
5232: PUSH
5233: LD_INT 1
5235: ST_TO_ADDR
// vc_weapon = [ 3 , 4 , 5 ] [ Rand ( 1 , 3 ) ] ;
5236: LD_ADDR_OWVAR 40
5240: PUSH
5241: LD_INT 3
5243: PUSH
5244: LD_INT 4
5246: PUSH
5247: LD_INT 5
5249: PUSH
5250: EMPTY
5251: LIST
5252: LIST
5253: LIST
5254: PUSH
5255: LD_INT 1
5257: PPUSH
5258: LD_INT 3
5260: PPUSH
5261: CALL_OW 12
5265: ARRAY
5266: ST_TO_ADDR
// vc_chassis = 3 ;
5267: LD_ADDR_OWVAR 37
5271: PUSH
5272: LD_INT 3
5274: ST_TO_ADDR
// veh = CreateVehicle ;
5275: LD_ADDR_VAR 0 3
5279: PUSH
5280: CALL_OW 45
5284: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
5285: LD_VAR 0 3
5289: PPUSH
5290: LD_INT 1
5292: PPUSH
5293: CALL_OW 233
// PlaceUnitArea ( veh , WeaponTanks , false ) ;
5297: LD_VAR 0 3
5301: PPUSH
5302: LD_INT 8
5304: PPUSH
5305: LD_INT 0
5307: PPUSH
5308: CALL_OW 49
// convoy = convoy ^ veh ;
5312: LD_ADDR_EXP 12
5316: PUSH
5317: LD_EXP 12
5321: PUSH
5322: LD_VAR 0 3
5326: ADD
5327: ST_TO_ADDR
// PrepareMechanic ( false , 10 ) ;
5328: LD_INT 0
5330: PPUSH
5331: LD_INT 10
5333: PPUSH
5334: CALL_OW 383
// un = CreateHuman ;
5338: LD_ADDR_VAR 0 4
5342: PUSH
5343: CALL_OW 44
5347: ST_TO_ADDR
// PlaceHumanInUnit ( un , veh ) ;
5348: LD_VAR 0 4
5352: PPUSH
5353: LD_VAR 0 3
5357: PPUSH
5358: CALL_OW 52
// end ;
5362: GO 5217
5364: POP
5365: POP
// for i := 1 to 3 do
5366: LD_ADDR_VAR 0 2
5370: PUSH
5371: DOUBLE
5372: LD_INT 1
5374: DEC
5375: ST_TO_ADDR
5376: LD_INT 3
5378: PUSH
5379: FOR_TO
5380: IFFALSE 5518
// begin vc_engine = 1 ;
5382: LD_ADDR_OWVAR 39
5386: PUSH
5387: LD_INT 1
5389: ST_TO_ADDR
// vc_control = 1 ;
5390: LD_ADDR_OWVAR 38
5394: PUSH
5395: LD_INT 1
5397: ST_TO_ADDR
// vc_weapon = 12 ;
5398: LD_ADDR_OWVAR 40
5402: PUSH
5403: LD_INT 12
5405: ST_TO_ADDR
// vc_chassis = 3 ;
5406: LD_ADDR_OWVAR 37
5410: PUSH
5411: LD_INT 3
5413: ST_TO_ADDR
// veh = CreateVehicle ;
5414: LD_ADDR_VAR 0 3
5418: PUSH
5419: CALL_OW 45
5423: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
5424: LD_VAR 0 3
5428: PPUSH
5429: LD_INT 1
5431: PPUSH
5432: CALL_OW 233
// PlaceUnitArea ( veh , Cargo , false ) ;
5436: LD_VAR 0 3
5440: PPUSH
5441: LD_INT 9
5443: PPUSH
5444: LD_INT 0
5446: PPUSH
5447: CALL_OW 49
// AddCargo ( veh , 1 , 100 ) ;
5451: LD_VAR 0 3
5455: PPUSH
5456: LD_INT 1
5458: PPUSH
5459: LD_INT 100
5461: PPUSH
5462: CALL_OW 291
// convoy = convoy ^ veh ;
5466: LD_ADDR_EXP 12
5470: PUSH
5471: LD_EXP 12
5475: PUSH
5476: LD_VAR 0 3
5480: ADD
5481: ST_TO_ADDR
// PrepareMechanic ( false , 10 ) ;
5482: LD_INT 0
5484: PPUSH
5485: LD_INT 10
5487: PPUSH
5488: CALL_OW 383
// un = CreateHuman ;
5492: LD_ADDR_VAR 0 4
5496: PUSH
5497: CALL_OW 44
5501: ST_TO_ADDR
// PlaceHumanInUnit ( un , veh ) ;
5502: LD_VAR 0 4
5506: PPUSH
5507: LD_VAR 0 3
5511: PPUSH
5512: CALL_OW 52
// end ;
5516: GO 5379
5518: POP
5519: POP
// AddComMoveXY ( convoy [ 1 ] , 67 , 56 ) ;
5520: LD_EXP 12
5524: PUSH
5525: LD_INT 1
5527: ARRAY
5528: PPUSH
5529: LD_INT 67
5531: PPUSH
5532: LD_INT 56
5534: PPUSH
5535: CALL_OW 171
// AddComMoveXY ( convoy [ 2 ] , 63 , 52 ) ;
5539: LD_EXP 12
5543: PUSH
5544: LD_INT 2
5546: ARRAY
5547: PPUSH
5548: LD_INT 63
5550: PPUSH
5551: LD_INT 52
5553: PPUSH
5554: CALL_OW 171
// AddComMoveXY ( convoy [ 3 ] , 59 , 50 ) ;
5558: LD_EXP 12
5562: PUSH
5563: LD_INT 3
5565: ARRAY
5566: PPUSH
5567: LD_INT 59
5569: PPUSH
5570: LD_INT 50
5572: PPUSH
5573: CALL_OW 171
// wait ( 0 0$2 ) ;
5577: LD_INT 70
5579: PPUSH
5580: CALL_OW 67
// ComMoveXY ( convoy [ 4 ] , 47 , 49 ) ;
5584: LD_EXP 12
5588: PUSH
5589: LD_INT 4
5591: ARRAY
5592: PPUSH
5593: LD_INT 47
5595: PPUSH
5596: LD_INT 49
5598: PPUSH
5599: CALL_OW 111
// ComMoveXY ( convoy [ 5 ] , 47 , 49 ) ;
5603: LD_EXP 12
5607: PUSH
5608: LD_INT 5
5610: ARRAY
5611: PPUSH
5612: LD_INT 47
5614: PPUSH
5615: LD_INT 49
5617: PPUSH
5618: CALL_OW 111
// ComMoveXY ( convoy [ 6 ] , 47 , 49 ) ;
5622: LD_EXP 12
5626: PUSH
5627: LD_INT 6
5629: ARRAY
5630: PPUSH
5631: LD_INT 47
5633: PPUSH
5634: LD_INT 49
5636: PPUSH
5637: CALL_OW 111
// end ; end_of_file
5641: LD_VAR 0 1
5645: RET
// export function PrepareUnit ( ident , exist_mode ) ; var unit ; begin
5646: LD_INT 0
5648: PPUSH
5649: PPUSH
// if exist_mode then
5650: LD_VAR 0 2
5654: IFFALSE 5673
// unit := CreateCharacter ( ident ) else
5656: LD_ADDR_VAR 0 4
5660: PUSH
5661: LD_VAR 0 1
5665: PPUSH
5666: CALL_OW 34
5670: ST_TO_ADDR
5671: GO 5688
// unit := NewCharacter ( ident ) ;
5673: LD_ADDR_VAR 0 4
5677: PUSH
5678: LD_VAR 0 1
5682: PPUSH
5683: CALL_OW 25
5687: ST_TO_ADDR
// result := unit ;
5688: LD_ADDR_VAR 0 3
5692: PUSH
5693: LD_VAR 0 4
5697: ST_TO_ADDR
// end ;
5698: LD_VAR 0 3
5702: RET
// export function Video ( mode ) ; begin
5703: LD_INT 0
5705: PPUSH
// ingame_video = mode ;
5706: LD_ADDR_OWVAR 52
5710: PUSH
5711: LD_VAR 0 1
5715: ST_TO_ADDR
// interface_hidden = mode ;
5716: LD_ADDR_OWVAR 54
5720: PUSH
5721: LD_VAR 0 1
5725: ST_TO_ADDR
// end ; end_of_file
5726: LD_VAR 0 2
5730: RET
// on VehicleConstructed ( veh , fac ) do begin AddComMoveXY ( veh , 82 , 77 ) ;
5731: LD_VAR 0 1
5735: PPUSH
5736: LD_INT 82
5738: PPUSH
5739: LD_INT 77
5741: PPUSH
5742: CALL_OW 171
// end ;
5746: PPOPN 2
5748: END
