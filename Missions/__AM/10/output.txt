// export JMM , Powell ; export Brown , Donaldson , Bobby , Cyrus , Lisa , Frank , Houten , Gary ; export others08 ; export convoy , prepConv ; export coreHeroesTab , addHeroesTab ; export selectedToMission ; export siberite ; starting begin Resetfog ;
   0: CALL_OW 335
// SetBName ( Am_dep , alpha ) ;
   4: LD_INT 5
   6: PPUSH
   7: LD_STRING alpha
   9: PPUSH
  10: CALL_OW 500
// convoy = [ ] ;
  14: LD_ADDR_EXP 12
  18: PUSH
  19: EMPTY
  20: ST_TO_ADDR
// coreHeroesTab = [ ] ;
  21: LD_ADDR_EXP 14
  25: PUSH
  26: EMPTY
  27: ST_TO_ADDR
// addHeroesTab = [ ] ;
  28: LD_ADDR_EXP 15
  32: PUSH
  33: EMPTY
  34: ST_TO_ADDR
// selectedToMission = [ ] ;
  35: LD_ADDR_EXP 16
  39: PUSH
  40: EMPTY
  41: ST_TO_ADDR
// PrepareHeroes ;
  42: CALL 938 0 0
// end ; end_of_file
  46: END
// every 1 do var others ;
  47: GO 49
  49: DISABLE
  50: LD_INT 0
  52: PPUSH
// begin Video ( true ) ;
  53: LD_INT 1
  55: PPUSH
  56: CALL 5488 0 1
// AddComConstruct ( Am_tov1 , 2 , 1 , 1 , 4 ) ;
  60: LD_INT 60
  62: PPUSH
  63: LD_INT 2
  65: PPUSH
  66: LD_INT 1
  68: PPUSH
  69: LD_INT 1
  71: PPUSH
  72: LD_INT 4
  74: PPUSH
  75: CALL_OW 185
// AddComConstruct ( Am_tov2 , 4 , 1 , 1 , 6 ) ;
  79: LD_INT 6
  81: PPUSH
  82: LD_INT 4
  84: PPUSH
  85: LD_INT 1
  87: PPUSH
  88: LD_INT 1
  90: PPUSH
  91: LD_INT 6
  93: PPUSH
  94: CALL_OW 185
// AddComConstruct ( Am_tov1 , 2 , 1 , 1 , 3 ) ;
  98: LD_INT 60
 100: PPUSH
 101: LD_INT 2
 103: PPUSH
 104: LD_INT 1
 106: PPUSH
 107: LD_INT 1
 109: PPUSH
 110: LD_INT 3
 112: PPUSH
 113: CALL_OW 185
// AddComConstruct ( Am_tov2 , 4 , 1 , 1 , 4 ) ;
 117: LD_INT 6
 119: PPUSH
 120: LD_INT 4
 122: PPUSH
 123: LD_INT 1
 125: PPUSH
 126: LD_INT 1
 128: PPUSH
 129: LD_INT 4
 131: PPUSH
 132: CALL_OW 185
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap1 ) ;
 136: LD_INT 47
 138: PUSH
 139: LD_INT 4
 141: PUSH
 142: EMPTY
 143: LIST
 144: LIST
 145: PPUSH
 146: LD_INT 51
 148: PPUSH
 149: CALL_OW 184
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap2 ) ;
 153: LD_INT 47
 155: PUSH
 156: LD_INT 4
 158: PUSH
 159: EMPTY
 160: LIST
 161: LIST
 162: PPUSH
 163: LD_INT 52
 165: PPUSH
 166: CALL_OW 184
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap3 ) ;
 170: LD_INT 47
 172: PUSH
 173: LD_INT 4
 175: PUSH
 176: EMPTY
 177: LIST
 178: LIST
 179: PPUSH
 180: LD_INT 53
 182: PPUSH
 183: CALL_OW 184
// CenterNowOnUnits ( car ) ;
 187: LD_INT 138
 189: PPUSH
 190: CALL_OW 87
// ComMoveXY ( car , 69 , 36 ) ;
 194: LD_INT 138
 196: PPUSH
 197: LD_INT 69
 199: PPUSH
 200: LD_INT 36
 202: PPUSH
 203: CALL_OW 111
// AddComMoveXY ( car , 65 , 43 ) ;
 207: LD_INT 138
 209: PPUSH
 210: LD_INT 65
 212: PPUSH
 213: LD_INT 43
 215: PPUSH
 216: CALL_OW 171
// AddComMoveXY ( car , 63 , 48 ) ;
 220: LD_INT 138
 222: PPUSH
 223: LD_INT 63
 225: PPUSH
 226: LD_INT 48
 228: PPUSH
 229: CALL_OW 171
// AddComMoveXY ( car , 60 , 50 ) ;
 233: LD_INT 138
 235: PPUSH
 236: LD_INT 60
 238: PPUSH
 239: LD_INT 50
 241: PPUSH
 242: CALL_OW 171
// AddComMoveXY ( car , 54 , 47 ) ;
 246: LD_INT 138
 248: PPUSH
 249: LD_INT 54
 251: PPUSH
 252: LD_INT 47
 254: PPUSH
 255: CALL_OW 171
// AddComMoveXY ( car , 51 , 40 ) ;
 259: LD_INT 138
 261: PPUSH
 262: LD_INT 51
 264: PPUSH
 265: LD_INT 40
 267: PPUSH
 268: CALL_OW 171
// repeat wait ( 0 0$1 ) ;
 272: LD_INT 35
 274: PPUSH
 275: CALL_OW 67
// CenterNowOnUnits ( car ) ;
 279: LD_INT 138
 281: PPUSH
 282: CALL_OW 87
// until IsInArea ( car , stop ) ;
 286: LD_INT 138
 288: PPUSH
 289: LD_INT 7
 291: PPUSH
 292: CALL_OW 308
 296: IFFALSE 272
// ComExitVehicle ( JMM ) ;
 298: LD_EXP 1
 302: PPUSH
 303: CALL_OW 121
// wait ( 0 0$01 ) ;
 307: LD_INT 35
 309: PPUSH
 310: CALL_OW 67
// ComMoveXY ( JMM , 42 , 37 ) ;
 314: LD_EXP 1
 318: PPUSH
 319: LD_INT 42
 321: PPUSH
 322: LD_INT 37
 324: PPUSH
 325: CALL_OW 111
// wait ( 0 0$5 ) ;
 329: LD_INT 175
 331: PPUSH
 332: CALL_OW 67
// ComExitBuilding ( Powell ) ;
 336: LD_EXP 2
 340: PPUSH
 341: CALL_OW 122
// wait ( 0 0$01 ) ;
 345: LD_INT 35
 347: PPUSH
 348: CALL_OW 67
// ComTurnUnit ( Powell , JMM ) ;
 352: LD_EXP 2
 356: PPUSH
 357: LD_EXP 1
 361: PPUSH
 362: CALL_OW 119
// ComTurnUnit ( JMM , Powell ) ;
 366: LD_EXP 1
 370: PPUSH
 371: LD_EXP 2
 375: PPUSH
 376: CALL_OW 119
// Say ( JMM , D1-JMM-1 ) ;
 380: LD_EXP 1
 384: PPUSH
 385: LD_STRING D1-JMM-1
 387: PPUSH
 388: CALL_OW 88
// Say ( Powell , D1-Pow-1 ) ;
 392: LD_EXP 2
 396: PPUSH
 397: LD_STRING D1-Pow-1
 399: PPUSH
 400: CALL_OW 88
// Say ( JMM , D1-JMM-2 ) ;
 404: LD_EXP 1
 408: PPUSH
 409: LD_STRING D1-JMM-2
 411: PPUSH
 412: CALL_OW 88
// Say ( Powell , D1-Pow-2 ) ;
 416: LD_EXP 2
 420: PPUSH
 421: LD_STRING D1-Pow-2
 423: PPUSH
 424: CALL_OW 88
// Say ( JMM , D1-JMM-3 ) ;
 428: LD_EXP 1
 432: PPUSH
 433: LD_STRING D1-JMM-3
 435: PPUSH
 436: CALL_OW 88
// Say ( Powell , D1-Pow-3 ) ;
 440: LD_EXP 2
 444: PPUSH
 445: LD_STRING D1-Pow-3
 447: PPUSH
 448: CALL_OW 88
// Say ( JMM , D1-JMM-4 ) ;
 452: LD_EXP 1
 456: PPUSH
 457: LD_STRING D1-JMM-4
 459: PPUSH
 460: CALL_OW 88
// PrepareConvoy ;
 464: CALL 5212 0 0
// Say ( Powell , D1-Pow-4 ) ;
 468: LD_EXP 2
 472: PPUSH
 473: LD_STRING D1-Pow-4
 475: PPUSH
 476: CALL_OW 88
// Say ( Powell , D1-Pow-4a ) ;
 480: LD_EXP 2
 484: PPUSH
 485: LD_STRING D1-Pow-4a
 487: PPUSH
 488: CALL_OW 88
// Say ( Powell , D1-Pow-4b ) ;
 492: LD_EXP 2
 496: PPUSH
 497: LD_STRING D1-Pow-4b
 499: PPUSH
 500: CALL_OW 88
// AddComGive ( convoy , Am_dep ) ;
 504: LD_EXP 12
 508: PPUSH
 509: LD_INT 5
 511: PPUSH
 512: CALL_OW 221
// AddComMoveXY ( convoy , 81 , 77 ) ;
 516: LD_EXP 12
 520: PPUSH
 521: LD_INT 81
 523: PPUSH
 524: LD_INT 77
 526: PPUSH
 527: CALL_OW 171
// Say ( JMM , D1-JMM-5 ) ;
 531: LD_EXP 1
 535: PPUSH
 536: LD_STRING D1-JMM-5
 538: PPUSH
 539: CALL_OW 88
// Say ( Powell , D1-Pow-5 ) ;
 543: LD_EXP 2
 547: PPUSH
 548: LD_STRING D1-Pow-5
 550: PPUSH
 551: CALL_OW 88
// Say ( JMM , D1-JMM-6 ) ;
 555: LD_EXP 1
 559: PPUSH
 560: LD_STRING D1-JMM-6
 562: PPUSH
 563: CALL_OW 88
// Say ( Powell , D1-Pow-6 ) ;
 567: LD_EXP 2
 571: PPUSH
 572: LD_STRING D1-Pow-6
 574: PPUSH
 575: CALL_OW 88
// Say ( JMM , D1-JMM-7 ) ;
 579: LD_EXP 1
 583: PPUSH
 584: LD_STRING D1-JMM-7
 586: PPUSH
 587: CALL_OW 88
// Say ( Powell , D1-Pow-7 ) ;
 591: LD_EXP 2
 595: PPUSH
 596: LD_STRING D1-Pow-7
 598: PPUSH
 599: CALL_OW 88
// Say ( JMM , D1-JMM-8 ) ;
 603: LD_EXP 1
 607: PPUSH
 608: LD_STRING D1-JMM-8
 610: PPUSH
 611: CALL_OW 88
// ComMoveXY ( JMM , 47 , 48 ) ;
 615: LD_EXP 1
 619: PPUSH
 620: LD_INT 47
 622: PPUSH
 623: LD_INT 48
 625: PPUSH
 626: CALL_OW 111
// ComEnterUnit ( Powell , Am_bar ) ;
 630: LD_EXP 2
 634: PPUSH
 635: LD_INT 58
 637: PPUSH
 638: CALL_OW 120
// wait ( 0 0$3 ) ;
 642: LD_INT 105
 644: PPUSH
 645: CALL_OW 67
// others = FilterUnitsInArea ( CoreHeroes , [ [ f_side , 1 ] , [ f_type , unit_human ] ] ) ;
 649: LD_ADDR_VAR 0 1
 653: PUSH
 654: LD_INT 10
 656: PPUSH
 657: LD_INT 22
 659: PUSH
 660: LD_INT 1
 662: PUSH
 663: EMPTY
 664: LIST
 665: LIST
 666: PUSH
 667: LD_INT 21
 669: PUSH
 670: LD_INT 1
 672: PUSH
 673: EMPTY
 674: LIST
 675: LIST
 676: PUSH
 677: EMPTY
 678: LIST
 679: LIST
 680: PPUSH
 681: CALL_OW 70
 685: ST_TO_ADDR
// others = others ^ FilterUnitsInArea ( AddHeroes , [ [ f_side , 1 ] , [ f_type , unit_human ] ] ) ;
 686: LD_ADDR_VAR 0 1
 690: PUSH
 691: LD_VAR 0 1
 695: PUSH
 696: LD_INT 11
 698: PPUSH
 699: LD_INT 22
 701: PUSH
 702: LD_INT 1
 704: PUSH
 705: EMPTY
 706: LIST
 707: LIST
 708: PUSH
 709: LD_INT 21
 711: PUSH
 712: LD_INT 1
 714: PUSH
 715: EMPTY
 716: LIST
 717: LIST
 718: PUSH
 719: EMPTY
 720: LIST
 721: LIST
 722: PPUSH
 723: CALL_OW 70
 727: ADD
 728: ST_TO_ADDR
// others = others diff [ JMM , Powell , Brown , Donaldson , Bobby , Cyrus , Lisa , Frank , Houten , Gary ] ;
 729: LD_ADDR_VAR 0 1
 733: PUSH
 734: LD_VAR 0 1
 738: PUSH
 739: LD_EXP 1
 743: PUSH
 744: LD_EXP 2
 748: PUSH
 749: LD_EXP 3
 753: PUSH
 754: LD_EXP 4
 758: PUSH
 759: LD_EXP 5
 763: PUSH
 764: LD_EXP 6
 768: PUSH
 769: LD_EXP 7
 773: PUSH
 774: LD_EXP 8
 778: PUSH
 779: LD_EXP 9
 783: PUSH
 784: LD_EXP 10
 788: PUSH
 789: EMPTY
 790: LIST
 791: LIST
 792: LIST
 793: LIST
 794: LIST
 795: LIST
 796: LIST
 797: LIST
 798: LIST
 799: LIST
 800: DIFF
 801: ST_TO_ADDR
// SaveCharacters ( JMM , 10_JMM ) ;
 802: LD_EXP 1
 806: PPUSH
 807: LD_STRING 10_JMM
 809: PPUSH
 810: CALL_OW 38
// SaveCharacters ( others , OthersIn10 ) ;
 814: LD_VAR 0 1
 818: PPUSH
 819: LD_STRING OthersIn10
 821: PPUSH
 822: CALL_OW 38
// SaveCharacters ( others08 , 10_lock ) ;
 826: LD_EXP 11
 830: PPUSH
 831: LD_STRING 10_lock
 833: PPUSH
 834: CALL_OW 38
// DeleteCharacters ( 08_others ) ;
 838: LD_STRING 08_others
 840: PPUSH
 841: CALL_OW 40
// SaveCharacters ( others , 08_others ) ;
 845: LD_VAR 0 1
 849: PPUSH
 850: LD_STRING 08_others
 852: PPUSH
 853: CALL_OW 38
// ChangeMap ( 10 , %_cont ) ;
 857: LD_INT 10
 859: PPUSH
 860: LD_STRING %_cont
 862: PPUSH
 863: CALL_OW 340
// end ;
 867: PPOPN 1
 869: END
// every 0 0$1 trigger FilterUnitsInArea ( removeCar , [ f_side , 1 ] ) do var i ;
 870: LD_INT 12
 872: PPUSH
 873: LD_INT 22
 875: PUSH
 876: LD_INT 1
 878: PUSH
 879: EMPTY
 880: LIST
 881: LIST
 882: PPUSH
 883: CALL_OW 70
 887: IFFALSE 935
 889: GO 891
 891: DISABLE
 892: LD_INT 0
 894: PPUSH
// begin enable ;
 895: ENABLE
// for i in FilterUnitsInArea ( removeCar , [ f_side , 1 ] ) do
 896: LD_ADDR_VAR 0 1
 900: PUSH
 901: LD_INT 12
 903: PPUSH
 904: LD_INT 22
 906: PUSH
 907: LD_INT 1
 909: PUSH
 910: EMPTY
 911: LIST
 912: LIST
 913: PPUSH
 914: CALL_OW 70
 918: PUSH
 919: FOR_IN
 920: IFFALSE 933
// RemoveUnit ( i ) ;
 922: LD_VAR 0 1
 926: PPUSH
 927: CALL_OW 64
 931: GO 919
 933: POP
 934: POP
// end ; end_of_file
 935: PPOPN 1
 937: END
// export function PrepareHeroes ; var i , un ; begin
 938: LD_INT 0
 940: PPUSH
 941: PPUSH
 942: PPUSH
// uc_side = 1 ;
 943: LD_ADDR_OWVAR 20
 947: PUSH
 948: LD_INT 1
 950: ST_TO_ADDR
// uc_nation = 1 ;
 951: LD_ADDR_OWVAR 21
 955: PUSH
 956: LD_INT 1
 958: ST_TO_ADDR
// JMM = PrepareUnit ( 09_JMM , true ) ;
 959: LD_ADDR_EXP 1
 963: PUSH
 964: LD_STRING 09_JMM
 966: PPUSH
 967: LD_INT 1
 969: PPUSH
 970: CALL 5431 0 2
 974: ST_TO_ADDR
// Powell = PrepareUnit ( Powell , false ) ;
 975: LD_ADDR_EXP 2
 979: PUSH
 980: LD_STRING Powell
 982: PPUSH
 983: LD_INT 0
 985: PPUSH
 986: CALL 5431 0 2
 990: ST_TO_ADDR
// Bobby = PrepareUnit ( 09_Bobby , true ) ;
 991: LD_ADDR_EXP 5
 995: PUSH
 996: LD_STRING 09_Bobby
 998: PPUSH
 999: LD_INT 1
1001: PPUSH
1002: CALL 5431 0 2
1006: ST_TO_ADDR
// PlaceUnitArea ( Bobby , CoreHeroes , false ) ;
1007: LD_EXP 5
1011: PPUSH
1012: LD_INT 10
1014: PPUSH
1015: LD_INT 0
1017: PPUSH
1018: CALL_OW 49
// ComTurnXY ( Bobby , 42 , 35 ) ;
1022: LD_EXP 5
1026: PPUSH
1027: LD_INT 42
1029: PPUSH
1030: LD_INT 35
1032: PPUSH
1033: CALL_OW 118
// if IsPlaced ( Bobby ) then
1037: LD_EXP 5
1041: PPUSH
1042: CALL_OW 305
1046: IFFALSE 1076
// begin coreHeroesTab = coreHeroesTab ^ Bobby ;
1048: LD_ADDR_EXP 14
1052: PUSH
1053: LD_EXP 14
1057: PUSH
1058: LD_EXP 5
1062: ADD
1063: ST_TO_ADDR
// SaveCharacters ( Bobby , 10_Bobby ) ;
1064: LD_EXP 5
1068: PPUSH
1069: LD_STRING 10_Bobby
1071: PPUSH
1072: CALL_OW 38
// end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) then
1076: LD_EXP 5
1080: PPUSH
1081: CALL_OW 305
1085: NOT
1086: PUSH
1087: LD_EXP 3
1091: PPUSH
1092: CALL_OW 305
1096: NOT
1097: AND
1098: IFFALSE 1185
// begin Brown = PrepareUnit ( 08_Brown , true ) ;
1100: LD_ADDR_EXP 3
1104: PUSH
1105: LD_STRING 08_Brown
1107: PPUSH
1108: LD_INT 1
1110: PPUSH
1111: CALL 5431 0 2
1115: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
1116: LD_EXP 3
1120: PPUSH
1121: LD_INT 10
1123: PPUSH
1124: LD_INT 0
1126: PPUSH
1127: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
1131: LD_EXP 3
1135: PPUSH
1136: LD_INT 42
1138: PPUSH
1139: LD_INT 35
1141: PPUSH
1142: CALL_OW 118
// if IsPlaced ( Brown ) then
1146: LD_EXP 3
1150: PPUSH
1151: CALL_OW 305
1155: IFFALSE 1185
// begin coreHeroesTab = coreHeroesTab ^ Brown ;
1157: LD_ADDR_EXP 14
1161: PUSH
1162: LD_EXP 14
1166: PUSH
1167: LD_EXP 3
1171: ADD
1172: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
1173: LD_EXP 3
1177: PPUSH
1178: LD_STRING 10_Brown
1180: PPUSH
1181: CALL_OW 38
// end ; end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
1185: LD_EXP 5
1189: PPUSH
1190: CALL_OW 305
1194: NOT
1195: PUSH
1196: LD_EXP 3
1200: PPUSH
1201: CALL_OW 305
1205: NOT
1206: AND
1207: PUSH
1208: LD_EXP 4
1212: PPUSH
1213: CALL_OW 305
1217: NOT
1218: AND
1219: IFFALSE 1306
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
1221: LD_ADDR_EXP 4
1225: PUSH
1226: LD_STRING 08_Donaldson
1228: PPUSH
1229: LD_INT 1
1231: PPUSH
1232: CALL 5431 0 2
1236: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
1237: LD_EXP 4
1241: PPUSH
1242: LD_INT 10
1244: PPUSH
1245: LD_INT 0
1247: PPUSH
1248: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
1252: LD_EXP 4
1256: PPUSH
1257: LD_INT 42
1259: PPUSH
1260: LD_INT 35
1262: PPUSH
1263: CALL_OW 118
// if IsPlaced ( Donaldson ) then
1267: LD_EXP 4
1271: PPUSH
1272: CALL_OW 305
1276: IFFALSE 1306
// begin coreHeroesTab = coreHeroesTab ^ Donaldson ;
1278: LD_ADDR_EXP 14
1282: PUSH
1283: LD_EXP 14
1287: PUSH
1288: LD_EXP 4
1292: ADD
1293: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
1294: LD_EXP 4
1298: PPUSH
1299: LD_STRING 10_Donaldson
1301: PPUSH
1302: CALL_OW 38
// end ; end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
1306: LD_EXP 5
1310: PPUSH
1311: CALL_OW 305
1315: NOT
1316: PUSH
1317: LD_EXP 3
1321: PPUSH
1322: CALL_OW 305
1326: NOT
1327: AND
1328: PUSH
1329: LD_EXP 4
1333: PPUSH
1334: CALL_OW 305
1338: NOT
1339: AND
1340: PUSH
1341: LD_EXP 8
1345: PPUSH
1346: CALL_OW 305
1350: NOT
1351: AND
1352: IFFALSE 1439
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
1354: LD_ADDR_EXP 8
1358: PUSH
1359: LD_STRING 08_Frank
1361: PPUSH
1362: LD_INT 1
1364: PPUSH
1365: CALL 5431 0 2
1369: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
1370: LD_EXP 8
1374: PPUSH
1375: LD_INT 10
1377: PPUSH
1378: LD_INT 0
1380: PPUSH
1381: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
1385: LD_EXP 8
1389: PPUSH
1390: LD_INT 42
1392: PPUSH
1393: LD_INT 35
1395: PPUSH
1396: CALL_OW 118
// if IsPlaced ( Frank ) then
1400: LD_EXP 8
1404: PPUSH
1405: CALL_OW 305
1409: IFFALSE 1439
// begin coreHeroesTab = coreHeroesTab ^ Frank ;
1411: LD_ADDR_EXP 14
1415: PUSH
1416: LD_EXP 14
1420: PUSH
1421: LD_EXP 8
1425: ADD
1426: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
1427: LD_EXP 8
1431: PPUSH
1432: LD_STRING 10_Frank
1434: PPUSH
1435: CALL_OW 38
// end ; end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
1439: LD_EXP 5
1443: PPUSH
1444: CALL_OW 305
1448: NOT
1449: PUSH
1450: LD_EXP 3
1454: PPUSH
1455: CALL_OW 305
1459: NOT
1460: AND
1461: PUSH
1462: LD_EXP 4
1466: PPUSH
1467: CALL_OW 305
1471: NOT
1472: AND
1473: PUSH
1474: LD_EXP 8
1478: PPUSH
1479: CALL_OW 305
1483: NOT
1484: AND
1485: PUSH
1486: LD_EXP 9
1490: PPUSH
1491: CALL_OW 305
1495: NOT
1496: AND
1497: IFFALSE 1584
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
1499: LD_ADDR_EXP 9
1503: PUSH
1504: LD_STRING 09_Houten
1506: PPUSH
1507: LD_INT 1
1509: PPUSH
1510: CALL 5431 0 2
1514: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
1515: LD_EXP 9
1519: PPUSH
1520: LD_INT 10
1522: PPUSH
1523: LD_INT 0
1525: PPUSH
1526: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
1530: LD_EXP 9
1534: PPUSH
1535: LD_INT 42
1537: PPUSH
1538: LD_INT 35
1540: PPUSH
1541: CALL_OW 118
// if IsPlaced ( Houten ) then
1545: LD_EXP 9
1549: PPUSH
1550: CALL_OW 305
1554: IFFALSE 1584
// begin coreHeroesTab = coreHeroesTab ^ Houten ;
1556: LD_ADDR_EXP 14
1560: PUSH
1561: LD_EXP 14
1565: PUSH
1566: LD_EXP 9
1570: ADD
1571: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
1572: LD_EXP 9
1576: PPUSH
1577: LD_STRING 10_Houten
1579: PPUSH
1580: CALL_OW 38
// end ; end ; Cyrus = PrepareUnit ( 09_Cyrus , true ) ;
1584: LD_ADDR_EXP 6
1588: PUSH
1589: LD_STRING 09_Cyrus
1591: PPUSH
1592: LD_INT 1
1594: PPUSH
1595: CALL 5431 0 2
1599: ST_TO_ADDR
// PlaceUnitArea ( Cyrus , CoreHeroes , false ) ;
1600: LD_EXP 6
1604: PPUSH
1605: LD_INT 10
1607: PPUSH
1608: LD_INT 0
1610: PPUSH
1611: CALL_OW 49
// ComTurnXY ( Cyrus , 42 , 35 ) ;
1615: LD_EXP 6
1619: PPUSH
1620: LD_INT 42
1622: PPUSH
1623: LD_INT 35
1625: PPUSH
1626: CALL_OW 118
// if IsPlaced ( Cyrus ) then
1630: LD_EXP 6
1634: PPUSH
1635: CALL_OW 305
1639: IFFALSE 1669
// begin coreHeroesTab = coreHeroesTab ^ Cyrus ;
1641: LD_ADDR_EXP 14
1645: PUSH
1646: LD_EXP 14
1650: PUSH
1651: LD_EXP 6
1655: ADD
1656: ST_TO_ADDR
// SaveCharacters ( Cyrus , 10_Cyrus ) ;
1657: LD_EXP 6
1661: PPUSH
1662: LD_STRING 10_Cyrus
1664: PPUSH
1665: CALL_OW 38
// end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) then
1669: LD_EXP 6
1673: PPUSH
1674: CALL_OW 305
1678: NOT
1679: PUSH
1680: LD_EXP 3
1684: PPUSH
1685: CALL_OW 305
1689: NOT
1690: AND
1691: IFFALSE 1778
// begin Brown = PrepareUnit ( 08_Brown , true ) ;
1693: LD_ADDR_EXP 3
1697: PUSH
1698: LD_STRING 08_Brown
1700: PPUSH
1701: LD_INT 1
1703: PPUSH
1704: CALL 5431 0 2
1708: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
1709: LD_EXP 3
1713: PPUSH
1714: LD_INT 10
1716: PPUSH
1717: LD_INT 0
1719: PPUSH
1720: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
1724: LD_EXP 3
1728: PPUSH
1729: LD_INT 42
1731: PPUSH
1732: LD_INT 35
1734: PPUSH
1735: CALL_OW 118
// if IsPlaced ( Brown ) then
1739: LD_EXP 3
1743: PPUSH
1744: CALL_OW 305
1748: IFFALSE 1778
// begin coreHeroesTab = coreHeroesTab ^ Brown ;
1750: LD_ADDR_EXP 14
1754: PUSH
1755: LD_EXP 14
1759: PUSH
1760: LD_EXP 3
1764: ADD
1765: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
1766: LD_EXP 3
1770: PPUSH
1771: LD_STRING 10_Brown
1773: PPUSH
1774: CALL_OW 38
// end ; end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
1778: LD_EXP 6
1782: PPUSH
1783: CALL_OW 305
1787: NOT
1788: PUSH
1789: LD_EXP 3
1793: PPUSH
1794: CALL_OW 305
1798: NOT
1799: AND
1800: PUSH
1801: LD_EXP 4
1805: PPUSH
1806: CALL_OW 305
1810: NOT
1811: AND
1812: IFFALSE 1899
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
1814: LD_ADDR_EXP 4
1818: PUSH
1819: LD_STRING 08_Donaldson
1821: PPUSH
1822: LD_INT 1
1824: PPUSH
1825: CALL 5431 0 2
1829: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
1830: LD_EXP 4
1834: PPUSH
1835: LD_INT 10
1837: PPUSH
1838: LD_INT 0
1840: PPUSH
1841: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
1845: LD_EXP 4
1849: PPUSH
1850: LD_INT 42
1852: PPUSH
1853: LD_INT 35
1855: PPUSH
1856: CALL_OW 118
// if IsPlaced ( Donaldson ) then
1860: LD_EXP 4
1864: PPUSH
1865: CALL_OW 305
1869: IFFALSE 1899
// begin coreHeroesTab = coreHeroesTab ^ Donaldson ;
1871: LD_ADDR_EXP 14
1875: PUSH
1876: LD_EXP 14
1880: PUSH
1881: LD_EXP 4
1885: ADD
1886: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
1887: LD_EXP 4
1891: PPUSH
1892: LD_STRING 10_Donaldson
1894: PPUSH
1895: CALL_OW 38
// end ; end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
1899: LD_EXP 6
1903: PPUSH
1904: CALL_OW 305
1908: NOT
1909: PUSH
1910: LD_EXP 3
1914: PPUSH
1915: CALL_OW 305
1919: NOT
1920: AND
1921: PUSH
1922: LD_EXP 4
1926: PPUSH
1927: CALL_OW 305
1931: NOT
1932: AND
1933: PUSH
1934: LD_EXP 8
1938: PPUSH
1939: CALL_OW 305
1943: NOT
1944: AND
1945: IFFALSE 2032
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
1947: LD_ADDR_EXP 8
1951: PUSH
1952: LD_STRING 08_Frank
1954: PPUSH
1955: LD_INT 1
1957: PPUSH
1958: CALL 5431 0 2
1962: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
1963: LD_EXP 8
1967: PPUSH
1968: LD_INT 10
1970: PPUSH
1971: LD_INT 0
1973: PPUSH
1974: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
1978: LD_EXP 8
1982: PPUSH
1983: LD_INT 42
1985: PPUSH
1986: LD_INT 35
1988: PPUSH
1989: CALL_OW 118
// if IsPlaced ( Frank ) then
1993: LD_EXP 8
1997: PPUSH
1998: CALL_OW 305
2002: IFFALSE 2032
// begin coreHeroesTab = coreHeroesTab ^ Frank ;
2004: LD_ADDR_EXP 14
2008: PUSH
2009: LD_EXP 14
2013: PUSH
2014: LD_EXP 8
2018: ADD
2019: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
2020: LD_EXP 8
2024: PPUSH
2025: LD_STRING 10_Frank
2027: PPUSH
2028: CALL_OW 38
// end ; end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
2032: LD_EXP 6
2036: PPUSH
2037: CALL_OW 305
2041: NOT
2042: PUSH
2043: LD_EXP 3
2047: PPUSH
2048: CALL_OW 305
2052: NOT
2053: AND
2054: PUSH
2055: LD_EXP 4
2059: PPUSH
2060: CALL_OW 305
2064: NOT
2065: AND
2066: PUSH
2067: LD_EXP 8
2071: PPUSH
2072: CALL_OW 305
2076: NOT
2077: AND
2078: PUSH
2079: LD_EXP 9
2083: PPUSH
2084: CALL_OW 305
2088: NOT
2089: AND
2090: IFFALSE 2177
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
2092: LD_ADDR_EXP 9
2096: PUSH
2097: LD_STRING 09_Houten
2099: PPUSH
2100: LD_INT 1
2102: PPUSH
2103: CALL 5431 0 2
2107: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
2108: LD_EXP 9
2112: PPUSH
2113: LD_INT 10
2115: PPUSH
2116: LD_INT 0
2118: PPUSH
2119: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
2123: LD_EXP 9
2127: PPUSH
2128: LD_INT 42
2130: PPUSH
2131: LD_INT 35
2133: PPUSH
2134: CALL_OW 118
// if IsPlaced ( Houten ) then
2138: LD_EXP 9
2142: PPUSH
2143: CALL_OW 305
2147: IFFALSE 2177
// begin coreHeroesTab = coreHeroesTab ^ Houten ;
2149: LD_ADDR_EXP 14
2153: PUSH
2154: LD_EXP 14
2158: PUSH
2159: LD_EXP 9
2163: ADD
2164: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
2165: LD_EXP 9
2169: PPUSH
2170: LD_STRING 10_Houten
2172: PPUSH
2173: CALL_OW 38
// end ; end ; Lisa = PrepareUnit ( 08_Lisa , true ) ;
2177: LD_ADDR_EXP 7
2181: PUSH
2182: LD_STRING 08_Lisa
2184: PPUSH
2185: LD_INT 1
2187: PPUSH
2188: CALL 5431 0 2
2192: ST_TO_ADDR
// PlaceUnitArea ( Lisa , CoreHeroes , false ) ;
2193: LD_EXP 7
2197: PPUSH
2198: LD_INT 10
2200: PPUSH
2201: LD_INT 0
2203: PPUSH
2204: CALL_OW 49
// ComTurnXY ( Lisa , 42 , 35 ) ;
2208: LD_EXP 7
2212: PPUSH
2213: LD_INT 42
2215: PPUSH
2216: LD_INT 35
2218: PPUSH
2219: CALL_OW 118
// if IsPlaced ( Lisa ) then
2223: LD_EXP 7
2227: PPUSH
2228: CALL_OW 305
2232: IFFALSE 2262
// begin coreHeroesTab = coreHeroesTab ^ Lisa ;
2234: LD_ADDR_EXP 14
2238: PUSH
2239: LD_EXP 14
2243: PUSH
2244: LD_EXP 7
2248: ADD
2249: ST_TO_ADDR
// SaveCharacters ( Lisa , 10_Lisa ) ;
2250: LD_EXP 7
2254: PPUSH
2255: LD_STRING 10_Lisa
2257: PPUSH
2258: CALL_OW 38
// end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) then
2262: LD_EXP 7
2266: PPUSH
2267: CALL_OW 305
2271: NOT
2272: PUSH
2273: LD_EXP 3
2277: PPUSH
2278: CALL_OW 305
2282: NOT
2283: AND
2284: IFFALSE 2371
// begin Brown = PrepareUnit ( 08_Brown , true ) ;
2286: LD_ADDR_EXP 3
2290: PUSH
2291: LD_STRING 08_Brown
2293: PPUSH
2294: LD_INT 1
2296: PPUSH
2297: CALL 5431 0 2
2301: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
2302: LD_EXP 3
2306: PPUSH
2307: LD_INT 10
2309: PPUSH
2310: LD_INT 0
2312: PPUSH
2313: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
2317: LD_EXP 3
2321: PPUSH
2322: LD_INT 42
2324: PPUSH
2325: LD_INT 35
2327: PPUSH
2328: CALL_OW 118
// if IsPlaced ( Brown ) then
2332: LD_EXP 3
2336: PPUSH
2337: CALL_OW 305
2341: IFFALSE 2371
// begin coreHeroesTab = coreHeroesTab ^ Brown ;
2343: LD_ADDR_EXP 14
2347: PUSH
2348: LD_EXP 14
2352: PUSH
2353: LD_EXP 3
2357: ADD
2358: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
2359: LD_EXP 3
2363: PPUSH
2364: LD_STRING 10_Brown
2366: PPUSH
2367: CALL_OW 38
// end ; end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
2371: LD_EXP 7
2375: PPUSH
2376: CALL_OW 305
2380: NOT
2381: PUSH
2382: LD_EXP 3
2386: PPUSH
2387: CALL_OW 305
2391: NOT
2392: AND
2393: PUSH
2394: LD_EXP 4
2398: PPUSH
2399: CALL_OW 305
2403: NOT
2404: AND
2405: IFFALSE 2492
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
2407: LD_ADDR_EXP 4
2411: PUSH
2412: LD_STRING 08_Donaldson
2414: PPUSH
2415: LD_INT 1
2417: PPUSH
2418: CALL 5431 0 2
2422: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
2423: LD_EXP 4
2427: PPUSH
2428: LD_INT 10
2430: PPUSH
2431: LD_INT 0
2433: PPUSH
2434: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
2438: LD_EXP 4
2442: PPUSH
2443: LD_INT 42
2445: PPUSH
2446: LD_INT 35
2448: PPUSH
2449: CALL_OW 118
// if IsPlaced ( Donaldson ) then
2453: LD_EXP 4
2457: PPUSH
2458: CALL_OW 305
2462: IFFALSE 2492
// begin coreHeroesTab = coreHeroesTab ^ Donaldson ;
2464: LD_ADDR_EXP 14
2468: PUSH
2469: LD_EXP 14
2473: PUSH
2474: LD_EXP 4
2478: ADD
2479: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
2480: LD_EXP 4
2484: PPUSH
2485: LD_STRING 10_Donaldson
2487: PPUSH
2488: CALL_OW 38
// end ; end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
2492: LD_EXP 7
2496: PPUSH
2497: CALL_OW 305
2501: NOT
2502: PUSH
2503: LD_EXP 3
2507: PPUSH
2508: CALL_OW 305
2512: NOT
2513: AND
2514: PUSH
2515: LD_EXP 4
2519: PPUSH
2520: CALL_OW 305
2524: NOT
2525: AND
2526: PUSH
2527: LD_EXP 8
2531: PPUSH
2532: CALL_OW 305
2536: NOT
2537: AND
2538: IFFALSE 2625
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
2540: LD_ADDR_EXP 8
2544: PUSH
2545: LD_STRING 08_Frank
2547: PPUSH
2548: LD_INT 1
2550: PPUSH
2551: CALL 5431 0 2
2555: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
2556: LD_EXP 8
2560: PPUSH
2561: LD_INT 10
2563: PPUSH
2564: LD_INT 0
2566: PPUSH
2567: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
2571: LD_EXP 8
2575: PPUSH
2576: LD_INT 42
2578: PPUSH
2579: LD_INT 35
2581: PPUSH
2582: CALL_OW 118
// if IsPlaced ( Frank ) then
2586: LD_EXP 8
2590: PPUSH
2591: CALL_OW 305
2595: IFFALSE 2625
// begin coreHeroesTab = coreHeroesTab ^ Frank ;
2597: LD_ADDR_EXP 14
2601: PUSH
2602: LD_EXP 14
2606: PUSH
2607: LD_EXP 8
2611: ADD
2612: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
2613: LD_EXP 8
2617: PPUSH
2618: LD_STRING 10_Frank
2620: PPUSH
2621: CALL_OW 38
// end ; end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
2625: LD_EXP 7
2629: PPUSH
2630: CALL_OW 305
2634: NOT
2635: PUSH
2636: LD_EXP 3
2640: PPUSH
2641: CALL_OW 305
2645: NOT
2646: AND
2647: PUSH
2648: LD_EXP 4
2652: PPUSH
2653: CALL_OW 305
2657: NOT
2658: AND
2659: PUSH
2660: LD_EXP 8
2664: PPUSH
2665: CALL_OW 305
2669: NOT
2670: AND
2671: PUSH
2672: LD_EXP 9
2676: PPUSH
2677: CALL_OW 305
2681: NOT
2682: AND
2683: IFFALSE 2770
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
2685: LD_ADDR_EXP 9
2689: PUSH
2690: LD_STRING 09_Houten
2692: PPUSH
2693: LD_INT 1
2695: PPUSH
2696: CALL 5431 0 2
2700: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
2701: LD_EXP 9
2705: PPUSH
2706: LD_INT 10
2708: PPUSH
2709: LD_INT 0
2711: PPUSH
2712: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
2716: LD_EXP 9
2720: PPUSH
2721: LD_INT 42
2723: PPUSH
2724: LD_INT 35
2726: PPUSH
2727: CALL_OW 118
// if IsPlaced ( Houten ) then
2731: LD_EXP 9
2735: PPUSH
2736: CALL_OW 305
2740: IFFALSE 2770
// begin coreHeroesTab = coreHeroesTab ^ Houten ;
2742: LD_ADDR_EXP 14
2746: PUSH
2747: LD_EXP 14
2751: PUSH
2752: LD_EXP 9
2756: ADD
2757: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
2758: LD_EXP 9
2762: PPUSH
2763: LD_STRING 10_Houten
2765: PPUSH
2766: CALL_OW 38
// end ; end ; Gary = PrepareUnit ( 09_Gary , true ) ;
2770: LD_ADDR_EXP 10
2774: PUSH
2775: LD_STRING 09_Gary
2777: PPUSH
2778: LD_INT 1
2780: PPUSH
2781: CALL 5431 0 2
2785: ST_TO_ADDR
// PlaceUnitArea ( Gary , CoreHeroes , false ) ;
2786: LD_EXP 10
2790: PPUSH
2791: LD_INT 10
2793: PPUSH
2794: LD_INT 0
2796: PPUSH
2797: CALL_OW 49
// ComTurnXY ( Gary , 42 , 35 ) ;
2801: LD_EXP 10
2805: PPUSH
2806: LD_INT 42
2808: PPUSH
2809: LD_INT 35
2811: PPUSH
2812: CALL_OW 118
// if IsPlaced ( Gary ) then
2816: LD_EXP 10
2820: PPUSH
2821: CALL_OW 305
2825: IFFALSE 2855
// begin coreHeroesTab = coreHeroesTab ^ Gary ;
2827: LD_ADDR_EXP 14
2831: PUSH
2832: LD_EXP 14
2836: PUSH
2837: LD_EXP 10
2841: ADD
2842: ST_TO_ADDR
// SaveCharacters ( Gary , 10_Gary ) ;
2843: LD_EXP 10
2847: PPUSH
2848: LD_STRING 10_Gary
2850: PPUSH
2851: CALL_OW 38
// end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) then
2855: LD_EXP 10
2859: PPUSH
2860: CALL_OW 305
2864: NOT
2865: PUSH
2866: LD_EXP 3
2870: PPUSH
2871: CALL_OW 305
2875: NOT
2876: AND
2877: IFFALSE 2964
// begin Brown = PrepareUnit ( 08_Brown , true ) ;
2879: LD_ADDR_EXP 3
2883: PUSH
2884: LD_STRING 08_Brown
2886: PPUSH
2887: LD_INT 1
2889: PPUSH
2890: CALL 5431 0 2
2894: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
2895: LD_EXP 3
2899: PPUSH
2900: LD_INT 10
2902: PPUSH
2903: LD_INT 0
2905: PPUSH
2906: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
2910: LD_EXP 3
2914: PPUSH
2915: LD_INT 42
2917: PPUSH
2918: LD_INT 35
2920: PPUSH
2921: CALL_OW 118
// if IsPlaced ( Brown ) then
2925: LD_EXP 3
2929: PPUSH
2930: CALL_OW 305
2934: IFFALSE 2964
// begin coreHeroesTab = coreHeroesTab ^ Brown ;
2936: LD_ADDR_EXP 14
2940: PUSH
2941: LD_EXP 14
2945: PUSH
2946: LD_EXP 3
2950: ADD
2951: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
2952: LD_EXP 3
2956: PPUSH
2957: LD_STRING 10_Brown
2959: PPUSH
2960: CALL_OW 38
// end ; end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
2964: LD_EXP 10
2968: PPUSH
2969: CALL_OW 305
2973: NOT
2974: PUSH
2975: LD_EXP 3
2979: PPUSH
2980: CALL_OW 305
2984: NOT
2985: AND
2986: PUSH
2987: LD_EXP 4
2991: PPUSH
2992: CALL_OW 305
2996: NOT
2997: AND
2998: IFFALSE 3085
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
3000: LD_ADDR_EXP 4
3004: PUSH
3005: LD_STRING 08_Donaldson
3007: PPUSH
3008: LD_INT 1
3010: PPUSH
3011: CALL 5431 0 2
3015: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
3016: LD_EXP 4
3020: PPUSH
3021: LD_INT 10
3023: PPUSH
3024: LD_INT 0
3026: PPUSH
3027: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
3031: LD_EXP 4
3035: PPUSH
3036: LD_INT 42
3038: PPUSH
3039: LD_INT 35
3041: PPUSH
3042: CALL_OW 118
// if IsPlaced ( Donaldson ) then
3046: LD_EXP 4
3050: PPUSH
3051: CALL_OW 305
3055: IFFALSE 3085
// begin coreHeroesTab = coreHeroesTab ^ Donaldson ;
3057: LD_ADDR_EXP 14
3061: PUSH
3062: LD_EXP 14
3066: PUSH
3067: LD_EXP 4
3071: ADD
3072: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
3073: LD_EXP 4
3077: PPUSH
3078: LD_STRING 10_Donaldson
3080: PPUSH
3081: CALL_OW 38
// end ; end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
3085: LD_EXP 10
3089: PPUSH
3090: CALL_OW 305
3094: NOT
3095: PUSH
3096: LD_EXP 3
3100: PPUSH
3101: CALL_OW 305
3105: NOT
3106: AND
3107: PUSH
3108: LD_EXP 4
3112: PPUSH
3113: CALL_OW 305
3117: NOT
3118: AND
3119: PUSH
3120: LD_EXP 8
3124: PPUSH
3125: CALL_OW 305
3129: NOT
3130: AND
3131: IFFALSE 3218
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
3133: LD_ADDR_EXP 8
3137: PUSH
3138: LD_STRING 08_Frank
3140: PPUSH
3141: LD_INT 1
3143: PPUSH
3144: CALL 5431 0 2
3148: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
3149: LD_EXP 8
3153: PPUSH
3154: LD_INT 10
3156: PPUSH
3157: LD_INT 0
3159: PPUSH
3160: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
3164: LD_EXP 8
3168: PPUSH
3169: LD_INT 42
3171: PPUSH
3172: LD_INT 35
3174: PPUSH
3175: CALL_OW 118
// if IsPlaced ( Frank ) then
3179: LD_EXP 8
3183: PPUSH
3184: CALL_OW 305
3188: IFFALSE 3218
// begin coreHeroesTab = coreHeroesTab ^ Frank ;
3190: LD_ADDR_EXP 14
3194: PUSH
3195: LD_EXP 14
3199: PUSH
3200: LD_EXP 8
3204: ADD
3205: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
3206: LD_EXP 8
3210: PPUSH
3211: LD_STRING 10_Frank
3213: PPUSH
3214: CALL_OW 38
// end ; end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
3218: LD_EXP 10
3222: PPUSH
3223: CALL_OW 305
3227: NOT
3228: PUSH
3229: LD_EXP 3
3233: PPUSH
3234: CALL_OW 305
3238: NOT
3239: AND
3240: PUSH
3241: LD_EXP 4
3245: PPUSH
3246: CALL_OW 305
3250: NOT
3251: AND
3252: PUSH
3253: LD_EXP 8
3257: PPUSH
3258: CALL_OW 305
3262: NOT
3263: AND
3264: PUSH
3265: LD_EXP 9
3269: PPUSH
3270: CALL_OW 305
3274: NOT
3275: AND
3276: IFFALSE 3363
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
3278: LD_ADDR_EXP 9
3282: PUSH
3283: LD_STRING 09_Houten
3285: PPUSH
3286: LD_INT 1
3288: PPUSH
3289: CALL 5431 0 2
3293: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
3294: LD_EXP 9
3298: PPUSH
3299: LD_INT 10
3301: PPUSH
3302: LD_INT 0
3304: PPUSH
3305: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
3309: LD_EXP 9
3313: PPUSH
3314: LD_INT 42
3316: PPUSH
3317: LD_INT 35
3319: PPUSH
3320: CALL_OW 118
// if IsPlaced ( Houten ) then
3324: LD_EXP 9
3328: PPUSH
3329: CALL_OW 305
3333: IFFALSE 3363
// begin coreHeroesTab = coreHeroesTab ^ Houten ;
3335: LD_ADDR_EXP 14
3339: PUSH
3340: LD_EXP 14
3344: PUSH
3345: LD_EXP 9
3349: ADD
3350: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
3351: LD_EXP 9
3355: PPUSH
3356: LD_STRING 10_Houten
3358: PPUSH
3359: CALL_OW 38
// end ; end ; for i = 1 to 5 - coreHeroesTab do
3363: LD_ADDR_VAR 0 2
3367: PUSH
3368: DOUBLE
3369: LD_INT 1
3371: DEC
3372: ST_TO_ADDR
3373: LD_INT 5
3375: PUSH
3376: LD_EXP 14
3380: MINUS
3381: PUSH
3382: FOR_TO
3383: IFFALSE 3507
// begin hc_gallery =  ;
3385: LD_ADDR_OWVAR 33
3389: PUSH
3390: LD_STRING 
3392: ST_TO_ADDR
// hc_name =  ;
3393: LD_ADDR_OWVAR 26
3397: PUSH
3398: LD_STRING 
3400: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
3401: LD_INT 0
3403: PPUSH
3404: LD_INT 1
3406: PUSH
3407: LD_INT 2
3409: PUSH
3410: LD_INT 3
3412: PUSH
3413: LD_INT 4
3415: PUSH
3416: EMPTY
3417: LIST
3418: LIST
3419: LIST
3420: LIST
3421: PUSH
3422: LD_INT 1
3424: PPUSH
3425: LD_INT 4
3427: PPUSH
3428: CALL_OW 12
3432: ARRAY
3433: PPUSH
3434: LD_INT 4
3436: PPUSH
3437: LD_INT 6
3439: PPUSH
3440: CALL_OW 12
3444: PPUSH
3445: CALL_OW 380
// un = CreateHuman ;
3449: LD_ADDR_VAR 0 3
3453: PUSH
3454: CALL_OW 44
3458: ST_TO_ADDR
// coreHeroesTab = coreHeroesTab ^ un ;
3459: LD_ADDR_EXP 14
3463: PUSH
3464: LD_EXP 14
3468: PUSH
3469: LD_VAR 0 3
3473: ADD
3474: ST_TO_ADDR
// PlaceUnitArea ( un , CoreHeroes , false ) ;
3475: LD_VAR 0 3
3479: PPUSH
3480: LD_INT 10
3482: PPUSH
3483: LD_INT 0
3485: PPUSH
3486: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
3490: LD_VAR 0 3
3494: PPUSH
3495: LD_INT 42
3497: PPUSH
3498: LD_INT 35
3500: PPUSH
3501: CALL_OW 118
// end ;
3505: GO 3382
3507: POP
3508: POP
// siberite = LoadVariable ( 09_SibRes , 0 ) ;
3509: LD_ADDR_EXP 17
3513: PUSH
3514: LD_STRING 09_SibRes
3516: PPUSH
3517: LD_INT 0
3519: PPUSH
3520: CALL_OW 30
3524: ST_TO_ADDR
// if siberite > 500 then
3525: LD_EXP 17
3529: PUSH
3530: LD_INT 500
3532: GREATER
3533: IFFALSE 3543
// siberite := 500 ;
3535: LD_ADDR_EXP 17
3539: PUSH
3540: LD_INT 500
3542: ST_TO_ADDR
// others08 = CreateCharacterSet ( 08_other_survivors ) ;
3543: LD_ADDR_EXP 11
3547: PUSH
3548: LD_STRING 08_other_survivors
3550: PPUSH
3551: CALL_OW 31
3555: ST_TO_ADDR
// if siberite >= 200 then
3556: LD_EXP 17
3560: PUSH
3561: LD_INT 200
3563: GREATEREQUAL
3564: IFFALSE 4607
// begin if not IsPlaced ( Brown ) then
3566: LD_EXP 3
3570: PPUSH
3571: CALL_OW 305
3575: NOT
3576: IFFALSE 3663
// begin Brown = PrepareUnit ( 08_Brown , true ) ;
3578: LD_ADDR_EXP 3
3582: PUSH
3583: LD_STRING 08_Brown
3585: PPUSH
3586: LD_INT 1
3588: PPUSH
3589: CALL 5431 0 2
3593: ST_TO_ADDR
// PlaceUnitArea ( Brown , AddHeroes , false ) ;
3594: LD_EXP 3
3598: PPUSH
3599: LD_INT 11
3601: PPUSH
3602: LD_INT 0
3604: PPUSH
3605: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
3609: LD_EXP 3
3613: PPUSH
3614: LD_INT 42
3616: PPUSH
3617: LD_INT 35
3619: PPUSH
3620: CALL_OW 118
// if IsPlaced ( Brown ) then
3624: LD_EXP 3
3628: PPUSH
3629: CALL_OW 305
3633: IFFALSE 3663
// begin addHeroesTab = addHeroesTab ^ Brown ;
3635: LD_ADDR_EXP 15
3639: PUSH
3640: LD_EXP 15
3644: PUSH
3645: LD_EXP 3
3649: ADD
3650: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
3651: LD_EXP 3
3655: PPUSH
3656: LD_STRING 10_Brown
3658: PPUSH
3659: CALL_OW 38
// end ; end ; if not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
3663: LD_EXP 3
3667: PPUSH
3668: CALL_OW 305
3672: NOT
3673: PUSH
3674: LD_EXP 4
3678: PPUSH
3679: CALL_OW 305
3683: NOT
3684: AND
3685: IFFALSE 3772
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
3687: LD_ADDR_EXP 4
3691: PUSH
3692: LD_STRING 08_Donaldson
3694: PPUSH
3695: LD_INT 1
3697: PPUSH
3698: CALL 5431 0 2
3702: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , addHeroes , false ) ;
3703: LD_EXP 4
3707: PPUSH
3708: LD_INT 11
3710: PPUSH
3711: LD_INT 0
3713: PPUSH
3714: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
3718: LD_EXP 4
3722: PPUSH
3723: LD_INT 42
3725: PPUSH
3726: LD_INT 35
3728: PPUSH
3729: CALL_OW 118
// if IsPlaced ( Donaldson ) then
3733: LD_EXP 4
3737: PPUSH
3738: CALL_OW 305
3742: IFFALSE 3772
// begin addHeroesTab = addHeroesTab ^ Donaldson ;
3744: LD_ADDR_EXP 15
3748: PUSH
3749: LD_EXP 15
3753: PUSH
3754: LD_EXP 4
3758: ADD
3759: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
3760: LD_EXP 4
3764: PPUSH
3765: LD_STRING 10_Donaldson
3767: PPUSH
3768: CALL_OW 38
// end ; end ; if not IsPlaced ( Brown ) and not IsPlaced ( Frank ) then
3772: LD_EXP 3
3776: PPUSH
3777: CALL_OW 305
3781: NOT
3782: PUSH
3783: LD_EXP 8
3787: PPUSH
3788: CALL_OW 305
3792: NOT
3793: AND
3794: IFFALSE 3881
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
3796: LD_ADDR_EXP 8
3800: PUSH
3801: LD_STRING 08_Frank
3803: PPUSH
3804: LD_INT 1
3806: PPUSH
3807: CALL 5431 0 2
3811: ST_TO_ADDR
// PlaceUnitArea ( Frank , addHeroes , false ) ;
3812: LD_EXP 8
3816: PPUSH
3817: LD_INT 11
3819: PPUSH
3820: LD_INT 0
3822: PPUSH
3823: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
3827: LD_EXP 8
3831: PPUSH
3832: LD_INT 42
3834: PPUSH
3835: LD_INT 35
3837: PPUSH
3838: CALL_OW 118
// if IsPlaced ( Frank ) then
3842: LD_EXP 8
3846: PPUSH
3847: CALL_OW 305
3851: IFFALSE 3881
// begin addHeroesTab = addHeroesTab ^ Frank ;
3853: LD_ADDR_EXP 15
3857: PUSH
3858: LD_EXP 15
3862: PUSH
3863: LD_EXP 8
3867: ADD
3868: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
3869: LD_EXP 8
3873: PPUSH
3874: LD_STRING 10_Frank
3876: PPUSH
3877: CALL_OW 38
// end ; end ; if not IsPlaced ( Brown ) and not IsPlaced ( Houten ) then
3881: LD_EXP 3
3885: PPUSH
3886: CALL_OW 305
3890: NOT
3891: PUSH
3892: LD_EXP 9
3896: PPUSH
3897: CALL_OW 305
3901: NOT
3902: AND
3903: IFFALSE 3992
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
3905: LD_ADDR_EXP 9
3909: PUSH
3910: LD_STRING 09_Houten
3912: PPUSH
3913: LD_INT 1
3915: PPUSH
3916: CALL 5431 0 2
3920: ST_TO_ADDR
// PlaceUnitArea ( Houten , addHeroes , false ) ;
3921: LD_EXP 9
3925: PPUSH
3926: LD_INT 11
3928: PPUSH
3929: LD_INT 0
3931: PPUSH
3932: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
3936: LD_EXP 9
3940: PPUSH
3941: LD_INT 42
3943: PPUSH
3944: LD_INT 35
3946: PPUSH
3947: CALL_OW 118
// if IsPlaced ( Houten ) then
3951: LD_EXP 9
3955: PPUSH
3956: CALL_OW 305
3960: IFFALSE 3990
// begin addHeroesTab = addHeroesTab ^ Houten ;
3962: LD_ADDR_EXP 15
3966: PUSH
3967: LD_EXP 15
3971: PUSH
3972: LD_EXP 9
3976: ADD
3977: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
3978: LD_EXP 9
3982: PPUSH
3983: LD_STRING 10_Houten
3985: PPUSH
3986: CALL_OW 38
// end ; end else
3990: GO 4068
// begin PlaceUnitArea ( others08 [ 1 ] , addHeroes , false ) ;
3992: LD_EXP 11
3996: PUSH
3997: LD_INT 1
3999: ARRAY
4000: PPUSH
4001: LD_INT 11
4003: PPUSH
4004: LD_INT 0
4006: PPUSH
4007: CALL_OW 49
// ComTurnXY ( others08 [ 1 ] , 42 , 35 ) ;
4011: LD_EXP 11
4015: PUSH
4016: LD_INT 1
4018: ARRAY
4019: PPUSH
4020: LD_INT 42
4022: PPUSH
4023: LD_INT 35
4025: PPUSH
4026: CALL_OW 118
// addHeroesTab = addHeroesTab ^ others08 [ 1 ] ;
4030: LD_ADDR_EXP 15
4034: PUSH
4035: LD_EXP 15
4039: PUSH
4040: LD_EXP 11
4044: PUSH
4045: LD_INT 1
4047: ARRAY
4048: ADD
4049: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
4050: LD_ADDR_EXP 11
4054: PUSH
4055: LD_EXP 11
4059: PPUSH
4060: LD_INT 1
4062: PPUSH
4063: CALL_OW 3
4067: ST_TO_ADDR
// end ; if not IsPlaced ( Donaldson ) then
4068: LD_EXP 4
4072: PPUSH
4073: CALL_OW 305
4077: NOT
4078: IFFALSE 4165
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
4080: LD_ADDR_EXP 4
4084: PUSH
4085: LD_STRING 08_Donaldson
4087: PPUSH
4088: LD_INT 1
4090: PPUSH
4091: CALL 5431 0 2
4095: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , AddHeroes , false ) ;
4096: LD_EXP 4
4100: PPUSH
4101: LD_INT 11
4103: PPUSH
4104: LD_INT 0
4106: PPUSH
4107: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
4111: LD_EXP 4
4115: PPUSH
4116: LD_INT 42
4118: PPUSH
4119: LD_INT 35
4121: PPUSH
4122: CALL_OW 118
// if IsPlaced ( Donaldson ) then
4126: LD_EXP 4
4130: PPUSH
4131: CALL_OW 305
4135: IFFALSE 4165
// begin addHeroesTab = addHeroesTab ^ Donaldson ;
4137: LD_ADDR_EXP 15
4141: PUSH
4142: LD_EXP 15
4146: PUSH
4147: LD_EXP 4
4151: ADD
4152: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
4153: LD_EXP 4
4157: PPUSH
4158: LD_STRING 10_Donaldson
4160: PPUSH
4161: CALL_OW 38
// end ; end ; if not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
4165: LD_EXP 4
4169: PPUSH
4170: CALL_OW 305
4174: NOT
4175: PUSH
4176: LD_EXP 8
4180: PPUSH
4181: CALL_OW 305
4185: NOT
4186: AND
4187: IFFALSE 4274
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
4189: LD_ADDR_EXP 8
4193: PUSH
4194: LD_STRING 08_Frank
4196: PPUSH
4197: LD_INT 1
4199: PPUSH
4200: CALL 5431 0 2
4204: ST_TO_ADDR
// PlaceUnitArea ( Frank , addHeroes , false ) ;
4205: LD_EXP 8
4209: PPUSH
4210: LD_INT 11
4212: PPUSH
4213: LD_INT 0
4215: PPUSH
4216: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
4220: LD_EXP 8
4224: PPUSH
4225: LD_INT 42
4227: PPUSH
4228: LD_INT 35
4230: PPUSH
4231: CALL_OW 118
// if IsPlaced ( Frank ) then
4235: LD_EXP 8
4239: PPUSH
4240: CALL_OW 305
4244: IFFALSE 4274
// begin addHeroesTab = addHeroesTab ^ Frank ;
4246: LD_ADDR_EXP 15
4250: PUSH
4251: LD_EXP 15
4255: PUSH
4256: LD_EXP 8
4260: ADD
4261: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
4262: LD_EXP 8
4266: PPUSH
4267: LD_STRING 10_Frank
4269: PPUSH
4270: CALL_OW 38
// end ; end ; if not IsPlaced ( Donaldson ) and not IsPlaced ( Houten ) then
4274: LD_EXP 4
4278: PPUSH
4279: CALL_OW 305
4283: NOT
4284: PUSH
4285: LD_EXP 9
4289: PPUSH
4290: CALL_OW 305
4294: NOT
4295: AND
4296: IFFALSE 4385
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
4298: LD_ADDR_EXP 9
4302: PUSH
4303: LD_STRING 09_Houten
4305: PPUSH
4306: LD_INT 1
4308: PPUSH
4309: CALL 5431 0 2
4313: ST_TO_ADDR
// PlaceUnitArea ( Houten , addHeroes , false ) ;
4314: LD_EXP 9
4318: PPUSH
4319: LD_INT 11
4321: PPUSH
4322: LD_INT 0
4324: PPUSH
4325: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
4329: LD_EXP 9
4333: PPUSH
4334: LD_INT 42
4336: PPUSH
4337: LD_INT 35
4339: PPUSH
4340: CALL_OW 118
// if IsPlaced ( Houten ) then
4344: LD_EXP 9
4348: PPUSH
4349: CALL_OW 305
4353: IFFALSE 4383
// begin addHeroesTab = addHeroesTab ^ Houten ;
4355: LD_ADDR_EXP 15
4359: PUSH
4360: LD_EXP 15
4364: PUSH
4365: LD_EXP 9
4369: ADD
4370: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
4371: LD_EXP 9
4375: PPUSH
4376: LD_STRING 10_Houten
4378: PPUSH
4379: CALL_OW 38
// end ; end else
4383: GO 4461
// begin PlaceUnitArea ( others08 [ 1 ] , addHeroes , false ) ;
4385: LD_EXP 11
4389: PUSH
4390: LD_INT 1
4392: ARRAY
4393: PPUSH
4394: LD_INT 11
4396: PPUSH
4397: LD_INT 0
4399: PPUSH
4400: CALL_OW 49
// ComTurnXY ( others08 [ 1 ] , 42 , 35 ) ;
4404: LD_EXP 11
4408: PUSH
4409: LD_INT 1
4411: ARRAY
4412: PPUSH
4413: LD_INT 42
4415: PPUSH
4416: LD_INT 35
4418: PPUSH
4419: CALL_OW 118
// addHeroesTab = addHeroesTab ^ others08 [ 1 ] ;
4423: LD_ADDR_EXP 15
4427: PUSH
4428: LD_EXP 15
4432: PUSH
4433: LD_EXP 11
4437: PUSH
4438: LD_INT 1
4440: ARRAY
4441: ADD
4442: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
4443: LD_ADDR_EXP 11
4447: PUSH
4448: LD_EXP 11
4452: PPUSH
4453: LD_INT 1
4455: PPUSH
4456: CALL_OW 3
4460: ST_TO_ADDR
// end ; for i = 1 to 2 - addHeroesTab do
4461: LD_ADDR_VAR 0 2
4465: PUSH
4466: DOUBLE
4467: LD_INT 1
4469: DEC
4470: ST_TO_ADDR
4471: LD_INT 2
4473: PUSH
4474: LD_EXP 15
4478: MINUS
4479: PUSH
4480: FOR_TO
4481: IFFALSE 4605
// begin hc_gallery =  ;
4483: LD_ADDR_OWVAR 33
4487: PUSH
4488: LD_STRING 
4490: ST_TO_ADDR
// hc_name =  ;
4491: LD_ADDR_OWVAR 26
4495: PUSH
4496: LD_STRING 
4498: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
4499: LD_INT 0
4501: PPUSH
4502: LD_INT 1
4504: PUSH
4505: LD_INT 2
4507: PUSH
4508: LD_INT 3
4510: PUSH
4511: LD_INT 4
4513: PUSH
4514: EMPTY
4515: LIST
4516: LIST
4517: LIST
4518: LIST
4519: PUSH
4520: LD_INT 1
4522: PPUSH
4523: LD_INT 4
4525: PPUSH
4526: CALL_OW 12
4530: ARRAY
4531: PPUSH
4532: LD_INT 4
4534: PPUSH
4535: LD_INT 6
4537: PPUSH
4538: CALL_OW 12
4542: PPUSH
4543: CALL_OW 380
// un = CreateHuman ;
4547: LD_ADDR_VAR 0 3
4551: PUSH
4552: CALL_OW 44
4556: ST_TO_ADDR
// addHeroesTab = addHeroesTab ^ un ;
4557: LD_ADDR_EXP 15
4561: PUSH
4562: LD_EXP 15
4566: PUSH
4567: LD_VAR 0 3
4571: ADD
4572: ST_TO_ADDR
// PlaceUnitArea ( un , addHeroes , false ) ;
4573: LD_VAR 0 3
4577: PPUSH
4578: LD_INT 11
4580: PPUSH
4581: LD_INT 0
4583: PPUSH
4584: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
4588: LD_VAR 0 3
4592: PPUSH
4593: LD_INT 42
4595: PPUSH
4596: LD_INT 35
4598: PPUSH
4599: CALL_OW 118
// end ;
4603: GO 4480
4605: POP
4606: POP
// end ; if siberite > 200 then
4607: LD_EXP 17
4611: PUSH
4612: LD_INT 200
4614: GREATER
4615: IFFALSE 5171
// begin if others08 > 0 then
4617: LD_EXP 11
4621: PUSH
4622: LD_INT 0
4624: GREATER
4625: IFFALSE 5015
// begin if others08 >= ( siberite - 200 ) / 100 then
4627: LD_EXP 11
4631: PUSH
4632: LD_EXP 17
4636: PUSH
4637: LD_INT 200
4639: MINUS
4640: PUSH
4641: LD_INT 100
4643: DIVREAL
4644: GREATEREQUAL
4645: IFFALSE 4757
// begin for i := 1 to ( siberite - 200 ) / 100 do
4647: LD_ADDR_VAR 0 2
4651: PUSH
4652: DOUBLE
4653: LD_INT 1
4655: DEC
4656: ST_TO_ADDR
4657: LD_EXP 17
4661: PUSH
4662: LD_INT 200
4664: MINUS
4665: PUSH
4666: LD_INT 100
4668: DIVREAL
4669: PUSH
4670: FOR_TO
4671: IFFALSE 4753
// begin PlaceUnitArea ( others08 [ 1 ] , addHeroes , false ) ;
4673: LD_EXP 11
4677: PUSH
4678: LD_INT 1
4680: ARRAY
4681: PPUSH
4682: LD_INT 11
4684: PPUSH
4685: LD_INT 0
4687: PPUSH
4688: CALL_OW 49
// ComTurnXY ( others08 [ 1 ] , 42 , 35 ) ;
4692: LD_EXP 11
4696: PUSH
4697: LD_INT 1
4699: ARRAY
4700: PPUSH
4701: LD_INT 42
4703: PPUSH
4704: LD_INT 35
4706: PPUSH
4707: CALL_OW 118
// addHeroesTab = addHeroesTab ^ others08 [ i ] ;
4711: LD_ADDR_EXP 15
4715: PUSH
4716: LD_EXP 15
4720: PUSH
4721: LD_EXP 11
4725: PUSH
4726: LD_VAR 0 2
4730: ARRAY
4731: ADD
4732: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
4733: LD_ADDR_EXP 11
4737: PUSH
4738: LD_EXP 11
4742: PPUSH
4743: LD_INT 1
4745: PPUSH
4746: CALL_OW 3
4750: ST_TO_ADDR
// end ;
4751: GO 4670
4753: POP
4754: POP
// end else
4755: GO 5013
// begin for i := 1 to others08 do
4757: LD_ADDR_VAR 0 2
4761: PUSH
4762: DOUBLE
4763: LD_INT 1
4765: DEC
4766: ST_TO_ADDR
4767: LD_EXP 11
4771: PUSH
4772: FOR_TO
4773: IFFALSE 4855
// begin PlaceUnitArea ( others08 [ 1 ] , addHeroes , false ) ;
4775: LD_EXP 11
4779: PUSH
4780: LD_INT 1
4782: ARRAY
4783: PPUSH
4784: LD_INT 11
4786: PPUSH
4787: LD_INT 0
4789: PPUSH
4790: CALL_OW 49
// ComTurnXY ( others08 [ 1 ] , 42 , 35 ) ;
4794: LD_EXP 11
4798: PUSH
4799: LD_INT 1
4801: ARRAY
4802: PPUSH
4803: LD_INT 42
4805: PPUSH
4806: LD_INT 35
4808: PPUSH
4809: CALL_OW 118
// addHeroesTab = addHeroesTab ^ others08 [ i ] ;
4813: LD_ADDR_EXP 15
4817: PUSH
4818: LD_EXP 15
4822: PUSH
4823: LD_EXP 11
4827: PUSH
4828: LD_VAR 0 2
4832: ARRAY
4833: ADD
4834: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
4835: LD_ADDR_EXP 11
4839: PUSH
4840: LD_EXP 11
4844: PPUSH
4845: LD_INT 1
4847: PPUSH
4848: CALL_OW 3
4852: ST_TO_ADDR
// end ;
4853: GO 4772
4855: POP
4856: POP
// for i = 1 to ( siberite - 200 ) / 100 - others08 do
4857: LD_ADDR_VAR 0 2
4861: PUSH
4862: DOUBLE
4863: LD_INT 1
4865: DEC
4866: ST_TO_ADDR
4867: LD_EXP 17
4871: PUSH
4872: LD_INT 200
4874: MINUS
4875: PUSH
4876: LD_INT 100
4878: DIVREAL
4879: PUSH
4880: LD_EXP 11
4884: MINUS
4885: PUSH
4886: FOR_TO
4887: IFFALSE 5011
// begin hc_gallery =  ;
4889: LD_ADDR_OWVAR 33
4893: PUSH
4894: LD_STRING 
4896: ST_TO_ADDR
// hc_name =  ;
4897: LD_ADDR_OWVAR 26
4901: PUSH
4902: LD_STRING 
4904: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
4905: LD_INT 0
4907: PPUSH
4908: LD_INT 1
4910: PUSH
4911: LD_INT 2
4913: PUSH
4914: LD_INT 3
4916: PUSH
4917: LD_INT 4
4919: PUSH
4920: EMPTY
4921: LIST
4922: LIST
4923: LIST
4924: LIST
4925: PUSH
4926: LD_INT 1
4928: PPUSH
4929: LD_INT 4
4931: PPUSH
4932: CALL_OW 12
4936: ARRAY
4937: PPUSH
4938: LD_INT 4
4940: PPUSH
4941: LD_INT 6
4943: PPUSH
4944: CALL_OW 12
4948: PPUSH
4949: CALL_OW 380
// un = CreateHuman ;
4953: LD_ADDR_VAR 0 3
4957: PUSH
4958: CALL_OW 44
4962: ST_TO_ADDR
// addHeroesTab = addHeroesTab ^ un ;
4963: LD_ADDR_EXP 15
4967: PUSH
4968: LD_EXP 15
4972: PUSH
4973: LD_VAR 0 3
4977: ADD
4978: ST_TO_ADDR
// PlaceUnitArea ( un , addHeroes , false ) ;
4979: LD_VAR 0 3
4983: PPUSH
4984: LD_INT 11
4986: PPUSH
4987: LD_INT 0
4989: PPUSH
4990: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
4994: LD_VAR 0 3
4998: PPUSH
4999: LD_INT 42
5001: PPUSH
5002: LD_INT 35
5004: PPUSH
5005: CALL_OW 118
// end ;
5009: GO 4886
5011: POP
5012: POP
// end ; end else
5013: GO 5171
// begin for i = 1 to ( siberite - 200 ) / 100 - others08 do
5015: LD_ADDR_VAR 0 2
5019: PUSH
5020: DOUBLE
5021: LD_INT 1
5023: DEC
5024: ST_TO_ADDR
5025: LD_EXP 17
5029: PUSH
5030: LD_INT 200
5032: MINUS
5033: PUSH
5034: LD_INT 100
5036: DIVREAL
5037: PUSH
5038: LD_EXP 11
5042: MINUS
5043: PUSH
5044: FOR_TO
5045: IFFALSE 5169
// begin hc_gallery =  ;
5047: LD_ADDR_OWVAR 33
5051: PUSH
5052: LD_STRING 
5054: ST_TO_ADDR
// hc_name =  ;
5055: LD_ADDR_OWVAR 26
5059: PUSH
5060: LD_STRING 
5062: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
5063: LD_INT 0
5065: PPUSH
5066: LD_INT 1
5068: PUSH
5069: LD_INT 2
5071: PUSH
5072: LD_INT 3
5074: PUSH
5075: LD_INT 4
5077: PUSH
5078: EMPTY
5079: LIST
5080: LIST
5081: LIST
5082: LIST
5083: PUSH
5084: LD_INT 1
5086: PPUSH
5087: LD_INT 4
5089: PPUSH
5090: CALL_OW 12
5094: ARRAY
5095: PPUSH
5096: LD_INT 4
5098: PPUSH
5099: LD_INT 6
5101: PPUSH
5102: CALL_OW 12
5106: PPUSH
5107: CALL_OW 380
// un = CreateHuman ;
5111: LD_ADDR_VAR 0 3
5115: PUSH
5116: CALL_OW 44
5120: ST_TO_ADDR
// addHeroesTab = addHeroesTab ^ un ;
5121: LD_ADDR_EXP 15
5125: PUSH
5126: LD_EXP 15
5130: PUSH
5131: LD_VAR 0 3
5135: ADD
5136: ST_TO_ADDR
// PlaceUnitArea ( un , addHeroes , false ) ;
5137: LD_VAR 0 3
5141: PPUSH
5142: LD_INT 11
5144: PPUSH
5145: LD_INT 0
5147: PPUSH
5148: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
5152: LD_VAR 0 3
5156: PPUSH
5157: LD_INT 42
5159: PPUSH
5160: LD_INT 35
5162: PPUSH
5163: CALL_OW 118
// end ;
5167: GO 5044
5169: POP
5170: POP
// end ; end ; PlaceHumanInUnit ( JMM , car ) ;
5171: LD_EXP 1
5175: PPUSH
5176: LD_INT 138
5178: PPUSH
5179: CALL_OW 52
// PlaceHumanInUnit ( Powell , Am_bar ) ;
5183: LD_EXP 2
5187: PPUSH
5188: LD_INT 58
5190: PPUSH
5191: CALL_OW 52
// SetClass ( JMM , 1 ) ;
5195: LD_EXP 1
5199: PPUSH
5200: LD_INT 1
5202: PPUSH
5203: CALL_OW 336
// end ;
5207: LD_VAR 0 1
5211: RET
// export function PrepareConvoy ; var i , veh , un ; begin
5212: LD_INT 0
5214: PPUSH
5215: PPUSH
5216: PPUSH
5217: PPUSH
// uc_side = 1 ;
5218: LD_ADDR_OWVAR 20
5222: PUSH
5223: LD_INT 1
5225: ST_TO_ADDR
// uc_nation = 1 ;
5226: LD_ADDR_OWVAR 21
5230: PUSH
5231: LD_INT 1
5233: ST_TO_ADDR
// for i := 1 to 2 do
5234: LD_ADDR_VAR 0 2
5238: PUSH
5239: DOUBLE
5240: LD_INT 1
5242: DEC
5243: ST_TO_ADDR
5244: LD_INT 2
5246: PUSH
5247: FOR_TO
5248: IFFALSE 5386
// begin vc_engine = 1 ;
5250: LD_ADDR_OWVAR 39
5254: PUSH
5255: LD_INT 1
5257: ST_TO_ADDR
// vc_control = 1 ;
5258: LD_ADDR_OWVAR 38
5262: PUSH
5263: LD_INT 1
5265: ST_TO_ADDR
// vc_weapon = 12 ;
5266: LD_ADDR_OWVAR 40
5270: PUSH
5271: LD_INT 12
5273: ST_TO_ADDR
// vc_chassis = 3 ;
5274: LD_ADDR_OWVAR 37
5278: PUSH
5279: LD_INT 3
5281: ST_TO_ADDR
// veh = CreateVehicle ;
5282: LD_ADDR_VAR 0 3
5286: PUSH
5287: CALL_OW 45
5291: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
5292: LD_VAR 0 3
5296: PPUSH
5297: LD_INT 1
5299: PPUSH
5300: CALL_OW 233
// PlaceUnitArea ( veh , Cargo , false ) ;
5304: LD_VAR 0 3
5308: PPUSH
5309: LD_INT 9
5311: PPUSH
5312: LD_INT 0
5314: PPUSH
5315: CALL_OW 49
// AddCargo ( veh , 1 , 100 ) ;
5319: LD_VAR 0 3
5323: PPUSH
5324: LD_INT 1
5326: PPUSH
5327: LD_INT 100
5329: PPUSH
5330: CALL_OW 291
// convoy = convoy ^ veh ;
5334: LD_ADDR_EXP 12
5338: PUSH
5339: LD_EXP 12
5343: PUSH
5344: LD_VAR 0 3
5348: ADD
5349: ST_TO_ADDR
// PrepareMechanic ( false , 10 ) ;
5350: LD_INT 0
5352: PPUSH
5353: LD_INT 10
5355: PPUSH
5356: CALL_OW 383
// un = CreateHuman ;
5360: LD_ADDR_VAR 0 4
5364: PUSH
5365: CALL_OW 44
5369: ST_TO_ADDR
// PlaceHumanInUnit ( un , veh ) ;
5370: LD_VAR 0 4
5374: PPUSH
5375: LD_VAR 0 3
5379: PPUSH
5380: CALL_OW 52
// end ;
5384: GO 5247
5386: POP
5387: POP
// AddComMoveXY ( convoy [ 1 ] , 45 , 43 ) ;
5388: LD_EXP 12
5392: PUSH
5393: LD_INT 1
5395: ARRAY
5396: PPUSH
5397: LD_INT 45
5399: PPUSH
5400: LD_INT 43
5402: PPUSH
5403: CALL_OW 171
// AddComMoveXY ( convoy [ 2 ] , 40 , 40 ) ;
5407: LD_EXP 12
5411: PUSH
5412: LD_INT 2
5414: ARRAY
5415: PPUSH
5416: LD_INT 40
5418: PPUSH
5419: LD_INT 40
5421: PPUSH
5422: CALL_OW 171
// end ; end_of_file
5426: LD_VAR 0 1
5430: RET
// export function PrepareUnit ( ident , exist_mode ) ; var unit ; begin
5431: LD_INT 0
5433: PPUSH
5434: PPUSH
// if exist_mode then
5435: LD_VAR 0 2
5439: IFFALSE 5458
// unit := CreateCharacter ( ident ) else
5441: LD_ADDR_VAR 0 4
5445: PUSH
5446: LD_VAR 0 1
5450: PPUSH
5451: CALL_OW 34
5455: ST_TO_ADDR
5456: GO 5473
// unit := NewCharacter ( ident ) ;
5458: LD_ADDR_VAR 0 4
5462: PUSH
5463: LD_VAR 0 1
5467: PPUSH
5468: CALL_OW 25
5472: ST_TO_ADDR
// result := unit ;
5473: LD_ADDR_VAR 0 3
5477: PUSH
5478: LD_VAR 0 4
5482: ST_TO_ADDR
// end ;
5483: LD_VAR 0 3
5487: RET
// export function Video ( mode ) ; begin
5488: LD_INT 0
5490: PPUSH
// ingame_video = mode ;
5491: LD_ADDR_OWVAR 52
5495: PUSH
5496: LD_VAR 0 1
5500: ST_TO_ADDR
// interface_hidden = mode ;
5501: LD_ADDR_OWVAR 54
5505: PUSH
5506: LD_VAR 0 1
5510: ST_TO_ADDR
// end ; end_of_file
5511: LD_VAR 0 2
5515: RET
// on VehicleConstructed ( veh , fac ) do begin AddComMoveXY ( veh , 82 , 77 ) ;
5516: LD_VAR 0 1
5520: PPUSH
5521: LD_INT 82
5523: PPUSH
5524: LD_INT 77
5526: PPUSH
5527: CALL_OW 171
// end ;
5531: PPOPN 2
5533: END
