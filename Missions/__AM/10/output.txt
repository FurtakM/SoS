// export JMM , Powell ; export Brown , Donaldson , Bobby , Cyrus , Lisa , Frank , Houten , Gary ; export others08 ; export convoy , prepConv ; export coreHeroesTab , addHeroesTab ; export selectedToMission ; export siberite ; starting begin Resetfog ;
   0: CALL_OW 335
// SetBName ( Am_dep , alpha ) ;
   4: LD_INT 5
   6: PPUSH
   7: LD_STRING alpha
   9: PPUSH
  10: CALL_OW 500
// convoy = [ ] ;
  14: LD_ADDR_EXP 12
  18: PUSH
  19: EMPTY
  20: ST_TO_ADDR
// coreHeroesTab = [ ] ;
  21: LD_ADDR_EXP 14
  25: PUSH
  26: EMPTY
  27: ST_TO_ADDR
// addHeroesTab = [ ] ;
  28: LD_ADDR_EXP 15
  32: PUSH
  33: EMPTY
  34: ST_TO_ADDR
// selectedToMission = [ ] ;
  35: LD_ADDR_EXP 16
  39: PUSH
  40: EMPTY
  41: ST_TO_ADDR
// PrepareHeroes ;
  42: CALL 711 0 0
// end ; end_of_file
  46: END
// every 1 do
  47: GO 49
  49: DISABLE
// begin InGameOn ;
  50: CALL_OW 8
// AddComConstruct ( Am_tov1 , 2 , 1 , 1 , 4 ) ;
  54: LD_INT 60
  56: PPUSH
  57: LD_INT 2
  59: PPUSH
  60: LD_INT 1
  62: PPUSH
  63: LD_INT 1
  65: PPUSH
  66: LD_INT 4
  68: PPUSH
  69: CALL_OW 185
// AddComConstruct ( Am_tov2 , 4 , 1 , 1 , 6 ) ;
  73: LD_INT 6
  75: PPUSH
  76: LD_INT 4
  78: PPUSH
  79: LD_INT 1
  81: PPUSH
  82: LD_INT 1
  84: PPUSH
  85: LD_INT 6
  87: PPUSH
  88: CALL_OW 185
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap1 ) ;
  92: LD_INT 47
  94: PUSH
  95: LD_INT 4
  97: PUSH
  98: EMPTY
  99: LIST
 100: LIST
 101: PPUSH
 102: LD_INT 51
 104: PPUSH
 105: CALL_OW 184
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap2 ) ;
 109: LD_INT 47
 111: PUSH
 112: LD_INT 4
 114: PUSH
 115: EMPTY
 116: LIST
 117: LIST
 118: PPUSH
 119: LD_INT 52
 121: PPUSH
 122: CALL_OW 184
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap3 ) ;
 126: LD_INT 47
 128: PUSH
 129: LD_INT 4
 131: PUSH
 132: EMPTY
 133: LIST
 134: LIST
 135: PPUSH
 136: LD_INT 53
 138: PPUSH
 139: CALL_OW 184
// CenterNowOnUnits ( car ) ;
 143: LD_INT 138
 145: PPUSH
 146: CALL_OW 87
// ComMoveXY ( car , 69 , 36 ) ;
 150: LD_INT 138
 152: PPUSH
 153: LD_INT 69
 155: PPUSH
 156: LD_INT 36
 158: PPUSH
 159: CALL_OW 111
// AddComMoveXY ( car , 65 , 43 ) ;
 163: LD_INT 138
 165: PPUSH
 166: LD_INT 65
 168: PPUSH
 169: LD_INT 43
 171: PPUSH
 172: CALL_OW 171
// AddComMoveXY ( car , 63 , 48 ) ;
 176: LD_INT 138
 178: PPUSH
 179: LD_INT 63
 181: PPUSH
 182: LD_INT 48
 184: PPUSH
 185: CALL_OW 171
// AddComMoveXY ( car , 60 , 50 ) ;
 189: LD_INT 138
 191: PPUSH
 192: LD_INT 60
 194: PPUSH
 195: LD_INT 50
 197: PPUSH
 198: CALL_OW 171
// AddComMoveXY ( car , 54 , 47 ) ;
 202: LD_INT 138
 204: PPUSH
 205: LD_INT 54
 207: PPUSH
 208: LD_INT 47
 210: PPUSH
 211: CALL_OW 171
// AddComMoveXY ( car , 51 , 40 ) ;
 215: LD_INT 138
 217: PPUSH
 218: LD_INT 51
 220: PPUSH
 221: LD_INT 40
 223: PPUSH
 224: CALL_OW 171
// repeat wait ( 0 0$1 ) ;
 228: LD_INT 35
 230: PPUSH
 231: CALL_OW 67
// CenterNowOnUnits ( car ) ;
 235: LD_INT 138
 237: PPUSH
 238: CALL_OW 87
// until IsInArea ( car , stop ) ;
 242: LD_INT 138
 244: PPUSH
 245: LD_INT 7
 247: PPUSH
 248: CALL_OW 308
 252: IFFALSE 228
// ComExitVehicle ( JMM ) ;
 254: LD_EXP 1
 258: PPUSH
 259: CALL_OW 121
// wait ( 0 0$01 ) ;
 263: LD_INT 35
 265: PPUSH
 266: CALL_OW 67
// ComMoveXY ( JMM , 42 , 37 ) ;
 270: LD_EXP 1
 274: PPUSH
 275: LD_INT 42
 277: PPUSH
 278: LD_INT 37
 280: PPUSH
 281: CALL_OW 111
// wait ( 0 0$5 ) ;
 285: LD_INT 175
 287: PPUSH
 288: CALL_OW 67
// ComExitBuilding ( Powell ) ;
 292: LD_EXP 2
 296: PPUSH
 297: CALL_OW 122
// wait ( 0 0$01 ) ;
 301: LD_INT 35
 303: PPUSH
 304: CALL_OW 67
// ComTurnUnit ( Powell , JMM ) ;
 308: LD_EXP 2
 312: PPUSH
 313: LD_EXP 1
 317: PPUSH
 318: CALL_OW 119
// ComTurnUnit ( JMM , Powell ) ;
 322: LD_EXP 1
 326: PPUSH
 327: LD_EXP 2
 331: PPUSH
 332: CALL_OW 119
// Say ( JMM , D1-JMM-1 ) ;
 336: LD_EXP 1
 340: PPUSH
 341: LD_STRING D1-JMM-1
 343: PPUSH
 344: CALL_OW 88
// Say ( Powell , D1-Pow-1 ) ;
 348: LD_EXP 2
 352: PPUSH
 353: LD_STRING D1-Pow-1
 355: PPUSH
 356: CALL_OW 88
// Say ( JMM , D1-JMM-2 ) ;
 360: LD_EXP 1
 364: PPUSH
 365: LD_STRING D1-JMM-2
 367: PPUSH
 368: CALL_OW 88
// Say ( Powell , D1-Pow-2 ) ;
 372: LD_EXP 2
 376: PPUSH
 377: LD_STRING D1-Pow-2
 379: PPUSH
 380: CALL_OW 88
// Say ( JMM , D1-JMM-3 ) ;
 384: LD_EXP 1
 388: PPUSH
 389: LD_STRING D1-JMM-3
 391: PPUSH
 392: CALL_OW 88
// Say ( Powell , D1-Pow-3 ) ;
 396: LD_EXP 2
 400: PPUSH
 401: LD_STRING D1-Pow-3
 403: PPUSH
 404: CALL_OW 88
// Say ( JMM , D1-JMM-4 ) ;
 408: LD_EXP 1
 412: PPUSH
 413: LD_STRING D1-JMM-4
 415: PPUSH
 416: CALL_OW 88
// PrepareConvoy ;
 420: CALL 4232 0 0
// Say ( Powell , D1-Pow-4 ) ;
 424: LD_EXP 2
 428: PPUSH
 429: LD_STRING D1-Pow-4
 431: PPUSH
 432: CALL_OW 88
// Say ( Powell , D1-Pow-4a ) ;
 436: LD_EXP 2
 440: PPUSH
 441: LD_STRING D1-Pow-4a
 443: PPUSH
 444: CALL_OW 88
// Say ( Powell , D1-Pow-4b ) ;
 448: LD_EXP 2
 452: PPUSH
 453: LD_STRING D1-Pow-4b
 455: PPUSH
 456: CALL_OW 88
// ComMoveXY ( convoy , 61 , 50 ) ;
 460: LD_EXP 12
 464: PPUSH
 465: LD_INT 61
 467: PPUSH
 468: LD_INT 50
 470: PPUSH
 471: CALL_OW 111
// AddComMoveXY ( convoy , 77 , 69 ) ;
 475: LD_EXP 12
 479: PPUSH
 480: LD_INT 77
 482: PPUSH
 483: LD_INT 69
 485: PPUSH
 486: CALL_OW 171
// Say ( JMM , D1-JMM-5 ) ;
 490: LD_EXP 1
 494: PPUSH
 495: LD_STRING D1-JMM-5
 497: PPUSH
 498: CALL_OW 88
// Say ( Powell , D1-Pow-5 ) ;
 502: LD_EXP 2
 506: PPUSH
 507: LD_STRING D1-Pow-5
 509: PPUSH
 510: CALL_OW 88
// Say ( JMM , D1-JMM-6 ) ;
 514: LD_EXP 1
 518: PPUSH
 519: LD_STRING D1-JMM-6
 521: PPUSH
 522: CALL_OW 88
// Say ( Powell , D1-Pow-6 ) ;
 526: LD_EXP 2
 530: PPUSH
 531: LD_STRING D1-Pow-6
 533: PPUSH
 534: CALL_OW 88
// Say ( JMM , D1-JMM-7 ) ;
 538: LD_EXP 1
 542: PPUSH
 543: LD_STRING D1-JMM-7
 545: PPUSH
 546: CALL_OW 88
// Say ( Powell , D1-Pow-7 ) ;
 550: LD_EXP 2
 554: PPUSH
 555: LD_STRING D1-Pow-7
 557: PPUSH
 558: CALL_OW 88
// Say ( JMM , D1-JMM-8 ) ;
 562: LD_EXP 1
 566: PPUSH
 567: LD_STRING D1-JMM-8
 569: PPUSH
 570: CALL_OW 88
// SaveCharacters ( JMM , 10_JMM ) ;
 574: LD_EXP 1
 578: PPUSH
 579: LD_STRING 10_JMM
 581: PPUSH
 582: CALL_OW 38
// SaveCharacters ( FilterUnitsInArea ( AddHeroes , [ [ f_side , 1 ] , [ f_type , unit_human ] ] ) diff [ JMM , Powell , Brown , Donaldson , Bobby , Cyrus , Lisa , Frank , Houten , Gary ] , OthersIn10 ) ;
 586: LD_INT 11
 588: PPUSH
 589: LD_INT 22
 591: PUSH
 592: LD_INT 1
 594: PUSH
 595: EMPTY
 596: LIST
 597: LIST
 598: PUSH
 599: LD_INT 21
 601: PUSH
 602: LD_INT 1
 604: PUSH
 605: EMPTY
 606: LIST
 607: LIST
 608: PUSH
 609: EMPTY
 610: LIST
 611: LIST
 612: PPUSH
 613: CALL_OW 70
 617: PUSH
 618: LD_EXP 1
 622: PUSH
 623: LD_EXP 2
 627: PUSH
 628: LD_EXP 3
 632: PUSH
 633: LD_EXP 4
 637: PUSH
 638: LD_EXP 5
 642: PUSH
 643: LD_EXP 6
 647: PUSH
 648: LD_EXP 7
 652: PUSH
 653: LD_EXP 8
 657: PUSH
 658: LD_EXP 9
 662: PUSH
 663: LD_EXP 10
 667: PUSH
 668: EMPTY
 669: LIST
 670: LIST
 671: LIST
 672: LIST
 673: LIST
 674: LIST
 675: LIST
 676: LIST
 677: LIST
 678: LIST
 679: DIFF
 680: PPUSH
 681: LD_STRING OthersIn10
 683: PPUSH
 684: CALL_OW 38
// SaveCharacters ( others08 , 10_lock ) ;
 688: LD_EXP 11
 692: PPUSH
 693: LD_STRING 10_lock
 695: PPUSH
 696: CALL_OW 38
// ChangeMap ( 10 , %_cont ) ;
 700: LD_INT 10
 702: PPUSH
 703: LD_STRING %_cont
 705: PPUSH
 706: CALL_OW 340
// end ; end_of_file
 710: END
// export function PrepareHeroes ; var i ; begin
 711: LD_INT 0
 713: PPUSH
 714: PPUSH
// uc_side = 1 ;
 715: LD_ADDR_OWVAR 20
 719: PUSH
 720: LD_INT 1
 722: ST_TO_ADDR
// uc_nation = 1 ;
 723: LD_ADDR_OWVAR 21
 727: PUSH
 728: LD_INT 1
 730: ST_TO_ADDR
// JMM = PrepareUnit ( 09_JMM , true ) ;
 731: LD_ADDR_EXP 1
 735: PUSH
 736: LD_STRING 09_JMM
 738: PPUSH
 739: LD_INT 1
 741: PPUSH
 742: CALL 4753 0 2
 746: ST_TO_ADDR
// Powell = PrepareUnit ( Powell , false ) ;
 747: LD_ADDR_EXP 2
 751: PUSH
 752: LD_STRING Powell
 754: PPUSH
 755: LD_INT 0
 757: PPUSH
 758: CALL 4753 0 2
 762: ST_TO_ADDR
// Bobby = PrepareUnit ( 09_Bobby , true ) ;
 763: LD_ADDR_EXP 5
 767: PUSH
 768: LD_STRING 09_Bobby
 770: PPUSH
 771: LD_INT 1
 773: PPUSH
 774: CALL 4753 0 2
 778: ST_TO_ADDR
// PlaceUnitArea ( Bobby , CoreHeroes , false ) ;
 779: LD_EXP 5
 783: PPUSH
 784: LD_INT 10
 786: PPUSH
 787: LD_INT 0
 789: PPUSH
 790: CALL_OW 49
// ComTurnXY ( Bobby , 42 , 35 ) ;
 794: LD_EXP 5
 798: PPUSH
 799: LD_INT 42
 801: PPUSH
 802: LD_INT 35
 804: PPUSH
 805: CALL_OW 118
// if IsPlaced ( Bobby ) then
 809: LD_EXP 5
 813: PPUSH
 814: CALL_OW 305
 818: IFFALSE 848
// begin coreHeroesTab = coreHeroesTab ^ Bobby ;
 820: LD_ADDR_EXP 14
 824: PUSH
 825: LD_EXP 14
 829: PUSH
 830: LD_EXP 5
 834: ADD
 835: ST_TO_ADDR
// SaveCharacters ( Bobby , 10_Bobby ) ;
 836: LD_EXP 5
 840: PPUSH
 841: LD_STRING 10_Bobby
 843: PPUSH
 844: CALL_OW 38
// end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) then
 848: LD_EXP 5
 852: PPUSH
 853: CALL_OW 305
 857: NOT
 858: PUSH
 859: LD_EXP 3
 863: PPUSH
 864: CALL_OW 305
 868: NOT
 869: AND
 870: IFFALSE 957
// begin Brown = PrepareUnit ( 08_Brown , true ) ;
 872: LD_ADDR_EXP 3
 876: PUSH
 877: LD_STRING 08_Brown
 879: PPUSH
 880: LD_INT 1
 882: PPUSH
 883: CALL 4753 0 2
 887: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
 888: LD_EXP 3
 892: PPUSH
 893: LD_INT 10
 895: PPUSH
 896: LD_INT 0
 898: PPUSH
 899: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
 903: LD_EXP 3
 907: PPUSH
 908: LD_INT 42
 910: PPUSH
 911: LD_INT 35
 913: PPUSH
 914: CALL_OW 118
// if IsPlaced ( Brown ) then
 918: LD_EXP 3
 922: PPUSH
 923: CALL_OW 305
 927: IFFALSE 957
// begin coreHeroesTab = coreHeroesTab ^ Brown ;
 929: LD_ADDR_EXP 14
 933: PUSH
 934: LD_EXP 14
 938: PUSH
 939: LD_EXP 3
 943: ADD
 944: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
 945: LD_EXP 3
 949: PPUSH
 950: LD_STRING 10_Brown
 952: PPUSH
 953: CALL_OW 38
// end ; end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
 957: LD_EXP 5
 961: PPUSH
 962: CALL_OW 305
 966: NOT
 967: PUSH
 968: LD_EXP 3
 972: PPUSH
 973: CALL_OW 305
 977: NOT
 978: AND
 979: PUSH
 980: LD_EXP 4
 984: PPUSH
 985: CALL_OW 305
 989: NOT
 990: AND
 991: IFFALSE 1078
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
 993: LD_ADDR_EXP 4
 997: PUSH
 998: LD_STRING 08_Donaldson
1000: PPUSH
1001: LD_INT 1
1003: PPUSH
1004: CALL 4753 0 2
1008: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
1009: LD_EXP 4
1013: PPUSH
1014: LD_INT 10
1016: PPUSH
1017: LD_INT 0
1019: PPUSH
1020: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
1024: LD_EXP 4
1028: PPUSH
1029: LD_INT 42
1031: PPUSH
1032: LD_INT 35
1034: PPUSH
1035: CALL_OW 118
// if IsPlaced ( Donaldson ) then
1039: LD_EXP 4
1043: PPUSH
1044: CALL_OW 305
1048: IFFALSE 1078
// begin coreHeroesTab = coreHeroesTab ^ Donaldson ;
1050: LD_ADDR_EXP 14
1054: PUSH
1055: LD_EXP 14
1059: PUSH
1060: LD_EXP 4
1064: ADD
1065: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
1066: LD_EXP 4
1070: PPUSH
1071: LD_STRING 10_Donaldson
1073: PPUSH
1074: CALL_OW 38
// end ; end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
1078: LD_EXP 5
1082: PPUSH
1083: CALL_OW 305
1087: NOT
1088: PUSH
1089: LD_EXP 3
1093: PPUSH
1094: CALL_OW 305
1098: NOT
1099: AND
1100: PUSH
1101: LD_EXP 4
1105: PPUSH
1106: CALL_OW 305
1110: NOT
1111: AND
1112: PUSH
1113: LD_EXP 8
1117: PPUSH
1118: CALL_OW 305
1122: NOT
1123: AND
1124: IFFALSE 1211
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
1126: LD_ADDR_EXP 8
1130: PUSH
1131: LD_STRING 08_Frank
1133: PPUSH
1134: LD_INT 1
1136: PPUSH
1137: CALL 4753 0 2
1141: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
1142: LD_EXP 8
1146: PPUSH
1147: LD_INT 10
1149: PPUSH
1150: LD_INT 0
1152: PPUSH
1153: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
1157: LD_EXP 8
1161: PPUSH
1162: LD_INT 42
1164: PPUSH
1165: LD_INT 35
1167: PPUSH
1168: CALL_OW 118
// if IsPlaced ( Frank ) then
1172: LD_EXP 8
1176: PPUSH
1177: CALL_OW 305
1181: IFFALSE 1211
// begin coreHeroesTab = coreHeroesTab ^ Frank ;
1183: LD_ADDR_EXP 14
1187: PUSH
1188: LD_EXP 14
1192: PUSH
1193: LD_EXP 8
1197: ADD
1198: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
1199: LD_EXP 8
1203: PPUSH
1204: LD_STRING 10_Frank
1206: PPUSH
1207: CALL_OW 38
// end ; end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
1211: LD_EXP 5
1215: PPUSH
1216: CALL_OW 305
1220: NOT
1221: PUSH
1222: LD_EXP 3
1226: PPUSH
1227: CALL_OW 305
1231: NOT
1232: AND
1233: PUSH
1234: LD_EXP 4
1238: PPUSH
1239: CALL_OW 305
1243: NOT
1244: AND
1245: PUSH
1246: LD_EXP 8
1250: PPUSH
1251: CALL_OW 305
1255: NOT
1256: AND
1257: PUSH
1258: LD_EXP 9
1262: PPUSH
1263: CALL_OW 305
1267: NOT
1268: AND
1269: IFFALSE 1356
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
1271: LD_ADDR_EXP 9
1275: PUSH
1276: LD_STRING 09_Houten
1278: PPUSH
1279: LD_INT 1
1281: PPUSH
1282: CALL 4753 0 2
1286: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
1287: LD_EXP 9
1291: PPUSH
1292: LD_INT 10
1294: PPUSH
1295: LD_INT 0
1297: PPUSH
1298: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
1302: LD_EXP 9
1306: PPUSH
1307: LD_INT 42
1309: PPUSH
1310: LD_INT 35
1312: PPUSH
1313: CALL_OW 118
// if IsPlaced ( Houten ) then
1317: LD_EXP 9
1321: PPUSH
1322: CALL_OW 305
1326: IFFALSE 1356
// begin coreHeroesTab = coreHeroesTab ^ Houten ;
1328: LD_ADDR_EXP 14
1332: PUSH
1333: LD_EXP 14
1337: PUSH
1338: LD_EXP 9
1342: ADD
1343: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
1344: LD_EXP 9
1348: PPUSH
1349: LD_STRING 10_Houten
1351: PPUSH
1352: CALL_OW 38
// ; end ; end ; Cyrus = PrepareUnit ( 09_Cyrus , true ) ;
1356: LD_ADDR_EXP 6
1360: PUSH
1361: LD_STRING 09_Cyrus
1363: PPUSH
1364: LD_INT 1
1366: PPUSH
1367: CALL 4753 0 2
1371: ST_TO_ADDR
// PlaceUnitArea ( Cyrus , CoreHeroes , false ) ;
1372: LD_EXP 6
1376: PPUSH
1377: LD_INT 10
1379: PPUSH
1380: LD_INT 0
1382: PPUSH
1383: CALL_OW 49
// ComTurnXY ( Cyrus , 42 , 35 ) ;
1387: LD_EXP 6
1391: PPUSH
1392: LD_INT 42
1394: PPUSH
1395: LD_INT 35
1397: PPUSH
1398: CALL_OW 118
// if IsPlaced ( Cyrus ) then
1402: LD_EXP 6
1406: PPUSH
1407: CALL_OW 305
1411: IFFALSE 1441
// begin coreHeroesTab = coreHeroesTab ^ Cyrus ;
1413: LD_ADDR_EXP 14
1417: PUSH
1418: LD_EXP 14
1422: PUSH
1423: LD_EXP 6
1427: ADD
1428: ST_TO_ADDR
// SaveCharacters ( Cyrus , 10_Cyrus ) ;
1429: LD_EXP 6
1433: PPUSH
1434: LD_STRING 10_Cyrus
1436: PPUSH
1437: CALL_OW 38
// end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) then
1441: LD_EXP 6
1445: PPUSH
1446: CALL_OW 305
1450: NOT
1451: PUSH
1452: LD_EXP 3
1456: PPUSH
1457: CALL_OW 305
1461: NOT
1462: AND
1463: IFFALSE 1550
// begin Brown = PrepareUnit ( 08_Brown , true ) ;
1465: LD_ADDR_EXP 3
1469: PUSH
1470: LD_STRING 08_Brown
1472: PPUSH
1473: LD_INT 1
1475: PPUSH
1476: CALL 4753 0 2
1480: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
1481: LD_EXP 3
1485: PPUSH
1486: LD_INT 10
1488: PPUSH
1489: LD_INT 0
1491: PPUSH
1492: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
1496: LD_EXP 3
1500: PPUSH
1501: LD_INT 42
1503: PPUSH
1504: LD_INT 35
1506: PPUSH
1507: CALL_OW 118
// if IsPlaced ( Brown ) then
1511: LD_EXP 3
1515: PPUSH
1516: CALL_OW 305
1520: IFFALSE 1550
// begin coreHeroesTab = coreHeroesTab ^ Brown ;
1522: LD_ADDR_EXP 14
1526: PUSH
1527: LD_EXP 14
1531: PUSH
1532: LD_EXP 3
1536: ADD
1537: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
1538: LD_EXP 3
1542: PPUSH
1543: LD_STRING 10_Brown
1545: PPUSH
1546: CALL_OW 38
// end ; end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
1550: LD_EXP 6
1554: PPUSH
1555: CALL_OW 305
1559: NOT
1560: PUSH
1561: LD_EXP 3
1565: PPUSH
1566: CALL_OW 305
1570: NOT
1571: AND
1572: PUSH
1573: LD_EXP 4
1577: PPUSH
1578: CALL_OW 305
1582: NOT
1583: AND
1584: IFFALSE 1671
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
1586: LD_ADDR_EXP 4
1590: PUSH
1591: LD_STRING 08_Donaldson
1593: PPUSH
1594: LD_INT 1
1596: PPUSH
1597: CALL 4753 0 2
1601: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
1602: LD_EXP 4
1606: PPUSH
1607: LD_INT 10
1609: PPUSH
1610: LD_INT 0
1612: PPUSH
1613: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
1617: LD_EXP 4
1621: PPUSH
1622: LD_INT 42
1624: PPUSH
1625: LD_INT 35
1627: PPUSH
1628: CALL_OW 118
// if IsPlaced ( Donaldson ) then
1632: LD_EXP 4
1636: PPUSH
1637: CALL_OW 305
1641: IFFALSE 1671
// begin coreHeroesTab = coreHeroesTab ^ Donaldson ;
1643: LD_ADDR_EXP 14
1647: PUSH
1648: LD_EXP 14
1652: PUSH
1653: LD_EXP 4
1657: ADD
1658: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
1659: LD_EXP 4
1663: PPUSH
1664: LD_STRING 10_Donaldson
1666: PPUSH
1667: CALL_OW 38
// end ; end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
1671: LD_EXP 6
1675: PPUSH
1676: CALL_OW 305
1680: NOT
1681: PUSH
1682: LD_EXP 3
1686: PPUSH
1687: CALL_OW 305
1691: NOT
1692: AND
1693: PUSH
1694: LD_EXP 4
1698: PPUSH
1699: CALL_OW 305
1703: NOT
1704: AND
1705: PUSH
1706: LD_EXP 8
1710: PPUSH
1711: CALL_OW 305
1715: NOT
1716: AND
1717: IFFALSE 1804
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
1719: LD_ADDR_EXP 8
1723: PUSH
1724: LD_STRING 08_Frank
1726: PPUSH
1727: LD_INT 1
1729: PPUSH
1730: CALL 4753 0 2
1734: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
1735: LD_EXP 8
1739: PPUSH
1740: LD_INT 10
1742: PPUSH
1743: LD_INT 0
1745: PPUSH
1746: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
1750: LD_EXP 8
1754: PPUSH
1755: LD_INT 42
1757: PPUSH
1758: LD_INT 35
1760: PPUSH
1761: CALL_OW 118
// if IsPlaced ( Frank ) then
1765: LD_EXP 8
1769: PPUSH
1770: CALL_OW 305
1774: IFFALSE 1804
// begin coreHeroesTab = coreHeroesTab ^ Frank ;
1776: LD_ADDR_EXP 14
1780: PUSH
1781: LD_EXP 14
1785: PUSH
1786: LD_EXP 8
1790: ADD
1791: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
1792: LD_EXP 8
1796: PPUSH
1797: LD_STRING 10_Frank
1799: PPUSH
1800: CALL_OW 38
// end ; end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
1804: LD_EXP 6
1808: PPUSH
1809: CALL_OW 305
1813: NOT
1814: PUSH
1815: LD_EXP 3
1819: PPUSH
1820: CALL_OW 305
1824: NOT
1825: AND
1826: PUSH
1827: LD_EXP 4
1831: PPUSH
1832: CALL_OW 305
1836: NOT
1837: AND
1838: PUSH
1839: LD_EXP 8
1843: PPUSH
1844: CALL_OW 305
1848: NOT
1849: AND
1850: PUSH
1851: LD_EXP 9
1855: PPUSH
1856: CALL_OW 305
1860: NOT
1861: AND
1862: IFFALSE 1949
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
1864: LD_ADDR_EXP 9
1868: PUSH
1869: LD_STRING 09_Houten
1871: PPUSH
1872: LD_INT 1
1874: PPUSH
1875: CALL 4753 0 2
1879: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
1880: LD_EXP 9
1884: PPUSH
1885: LD_INT 10
1887: PPUSH
1888: LD_INT 0
1890: PPUSH
1891: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
1895: LD_EXP 9
1899: PPUSH
1900: LD_INT 42
1902: PPUSH
1903: LD_INT 35
1905: PPUSH
1906: CALL_OW 118
// if IsPlaced ( Houten ) then
1910: LD_EXP 9
1914: PPUSH
1915: CALL_OW 305
1919: IFFALSE 1949
// begin coreHeroesTab = coreHeroesTab ^ Houten ;
1921: LD_ADDR_EXP 14
1925: PUSH
1926: LD_EXP 14
1930: PUSH
1931: LD_EXP 9
1935: ADD
1936: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
1937: LD_EXP 9
1941: PPUSH
1942: LD_STRING 10_Houten
1944: PPUSH
1945: CALL_OW 38
// end ; end ; Lisa = PrepareUnit ( 08_Lisa , true ) ;
1949: LD_ADDR_EXP 7
1953: PUSH
1954: LD_STRING 08_Lisa
1956: PPUSH
1957: LD_INT 1
1959: PPUSH
1960: CALL 4753 0 2
1964: ST_TO_ADDR
// PlaceUnitArea ( Lisa , CoreHeroes , false ) ;
1965: LD_EXP 7
1969: PPUSH
1970: LD_INT 10
1972: PPUSH
1973: LD_INT 0
1975: PPUSH
1976: CALL_OW 49
// ComTurnXY ( Lisa , 42 , 35 ) ;
1980: LD_EXP 7
1984: PPUSH
1985: LD_INT 42
1987: PPUSH
1988: LD_INT 35
1990: PPUSH
1991: CALL_OW 118
// if IsPlaced ( Lisa ) then
1995: LD_EXP 7
1999: PPUSH
2000: CALL_OW 305
2004: IFFALSE 2034
// begin coreHeroesTab = coreHeroesTab ^ Lisa ;
2006: LD_ADDR_EXP 14
2010: PUSH
2011: LD_EXP 14
2015: PUSH
2016: LD_EXP 7
2020: ADD
2021: ST_TO_ADDR
// SaveCharacters ( Lisa , 10_Lisa ) ;
2022: LD_EXP 7
2026: PPUSH
2027: LD_STRING 10_Lisa
2029: PPUSH
2030: CALL_OW 38
// end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) then
2034: LD_EXP 7
2038: PPUSH
2039: CALL_OW 305
2043: NOT
2044: PUSH
2045: LD_EXP 3
2049: PPUSH
2050: CALL_OW 305
2054: NOT
2055: AND
2056: IFFALSE 2143
// begin Brown = PrepareUnit ( 08_Brown , true ) ;
2058: LD_ADDR_EXP 3
2062: PUSH
2063: LD_STRING 08_Brown
2065: PPUSH
2066: LD_INT 1
2068: PPUSH
2069: CALL 4753 0 2
2073: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
2074: LD_EXP 3
2078: PPUSH
2079: LD_INT 10
2081: PPUSH
2082: LD_INT 0
2084: PPUSH
2085: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
2089: LD_EXP 3
2093: PPUSH
2094: LD_INT 42
2096: PPUSH
2097: LD_INT 35
2099: PPUSH
2100: CALL_OW 118
// if IsPlaced ( Brown ) then
2104: LD_EXP 3
2108: PPUSH
2109: CALL_OW 305
2113: IFFALSE 2143
// begin coreHeroesTab = coreHeroesTab ^ Brown ;
2115: LD_ADDR_EXP 14
2119: PUSH
2120: LD_EXP 14
2124: PUSH
2125: LD_EXP 3
2129: ADD
2130: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
2131: LD_EXP 3
2135: PPUSH
2136: LD_STRING 10_Brown
2138: PPUSH
2139: CALL_OW 38
// end ; end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
2143: LD_EXP 7
2147: PPUSH
2148: CALL_OW 305
2152: NOT
2153: PUSH
2154: LD_EXP 3
2158: PPUSH
2159: CALL_OW 305
2163: NOT
2164: AND
2165: PUSH
2166: LD_EXP 4
2170: PPUSH
2171: CALL_OW 305
2175: NOT
2176: AND
2177: IFFALSE 2264
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
2179: LD_ADDR_EXP 4
2183: PUSH
2184: LD_STRING 08_Donaldson
2186: PPUSH
2187: LD_INT 1
2189: PPUSH
2190: CALL 4753 0 2
2194: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
2195: LD_EXP 4
2199: PPUSH
2200: LD_INT 10
2202: PPUSH
2203: LD_INT 0
2205: PPUSH
2206: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
2210: LD_EXP 4
2214: PPUSH
2215: LD_INT 42
2217: PPUSH
2218: LD_INT 35
2220: PPUSH
2221: CALL_OW 118
// if IsPlaced ( Donaldson ) then
2225: LD_EXP 4
2229: PPUSH
2230: CALL_OW 305
2234: IFFALSE 2264
// begin coreHeroesTab = coreHeroesTab ^ Donaldson ;
2236: LD_ADDR_EXP 14
2240: PUSH
2241: LD_EXP 14
2245: PUSH
2246: LD_EXP 4
2250: ADD
2251: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
2252: LD_EXP 4
2256: PPUSH
2257: LD_STRING 10_Donaldson
2259: PPUSH
2260: CALL_OW 38
// end ; end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
2264: LD_EXP 7
2268: PPUSH
2269: CALL_OW 305
2273: NOT
2274: PUSH
2275: LD_EXP 3
2279: PPUSH
2280: CALL_OW 305
2284: NOT
2285: AND
2286: PUSH
2287: LD_EXP 4
2291: PPUSH
2292: CALL_OW 305
2296: NOT
2297: AND
2298: PUSH
2299: LD_EXP 8
2303: PPUSH
2304: CALL_OW 305
2308: NOT
2309: AND
2310: IFFALSE 2397
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
2312: LD_ADDR_EXP 8
2316: PUSH
2317: LD_STRING 08_Frank
2319: PPUSH
2320: LD_INT 1
2322: PPUSH
2323: CALL 4753 0 2
2327: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
2328: LD_EXP 8
2332: PPUSH
2333: LD_INT 10
2335: PPUSH
2336: LD_INT 0
2338: PPUSH
2339: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
2343: LD_EXP 8
2347: PPUSH
2348: LD_INT 42
2350: PPUSH
2351: LD_INT 35
2353: PPUSH
2354: CALL_OW 118
// if IsPlaced ( Frank ) then
2358: LD_EXP 8
2362: PPUSH
2363: CALL_OW 305
2367: IFFALSE 2397
// begin coreHeroesTab = coreHeroesTab ^ Frank ;
2369: LD_ADDR_EXP 14
2373: PUSH
2374: LD_EXP 14
2378: PUSH
2379: LD_EXP 8
2383: ADD
2384: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
2385: LD_EXP 8
2389: PPUSH
2390: LD_STRING 10_Frank
2392: PPUSH
2393: CALL_OW 38
// end ; end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
2397: LD_EXP 7
2401: PPUSH
2402: CALL_OW 305
2406: NOT
2407: PUSH
2408: LD_EXP 3
2412: PPUSH
2413: CALL_OW 305
2417: NOT
2418: AND
2419: PUSH
2420: LD_EXP 4
2424: PPUSH
2425: CALL_OW 305
2429: NOT
2430: AND
2431: PUSH
2432: LD_EXP 8
2436: PPUSH
2437: CALL_OW 305
2441: NOT
2442: AND
2443: PUSH
2444: LD_EXP 9
2448: PPUSH
2449: CALL_OW 305
2453: NOT
2454: AND
2455: IFFALSE 2542
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
2457: LD_ADDR_EXP 9
2461: PUSH
2462: LD_STRING 09_Houten
2464: PPUSH
2465: LD_INT 1
2467: PPUSH
2468: CALL 4753 0 2
2472: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
2473: LD_EXP 9
2477: PPUSH
2478: LD_INT 10
2480: PPUSH
2481: LD_INT 0
2483: PPUSH
2484: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
2488: LD_EXP 9
2492: PPUSH
2493: LD_INT 42
2495: PPUSH
2496: LD_INT 35
2498: PPUSH
2499: CALL_OW 118
// if IsPlaced ( Houten ) then
2503: LD_EXP 9
2507: PPUSH
2508: CALL_OW 305
2512: IFFALSE 2542
// begin coreHeroesTab = coreHeroesTab ^ Houten ;
2514: LD_ADDR_EXP 14
2518: PUSH
2519: LD_EXP 14
2523: PUSH
2524: LD_EXP 9
2528: ADD
2529: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
2530: LD_EXP 9
2534: PPUSH
2535: LD_STRING 10_Houten
2537: PPUSH
2538: CALL_OW 38
// end ; end ; Gary = PrepareUnit ( 09_Gary , true ) ;
2542: LD_ADDR_EXP 10
2546: PUSH
2547: LD_STRING 09_Gary
2549: PPUSH
2550: LD_INT 1
2552: PPUSH
2553: CALL 4753 0 2
2557: ST_TO_ADDR
// PlaceUnitArea ( Gary , CoreHeroes , false ) ;
2558: LD_EXP 10
2562: PPUSH
2563: LD_INT 10
2565: PPUSH
2566: LD_INT 0
2568: PPUSH
2569: CALL_OW 49
// ComTurnXY ( Gary , 42 , 35 ) ;
2573: LD_EXP 10
2577: PPUSH
2578: LD_INT 42
2580: PPUSH
2581: LD_INT 35
2583: PPUSH
2584: CALL_OW 118
// if IsPlaced ( Gary ) then
2588: LD_EXP 10
2592: PPUSH
2593: CALL_OW 305
2597: IFFALSE 2627
// begin coreHeroesTab = coreHeroesTab ^ Gary ;
2599: LD_ADDR_EXP 14
2603: PUSH
2604: LD_EXP 14
2608: PUSH
2609: LD_EXP 10
2613: ADD
2614: ST_TO_ADDR
// SaveCharacters ( Gary , 10_Gary ) ;
2615: LD_EXP 10
2619: PPUSH
2620: LD_STRING 10_Gary
2622: PPUSH
2623: CALL_OW 38
// end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) then
2627: LD_EXP 10
2631: PPUSH
2632: CALL_OW 305
2636: NOT
2637: PUSH
2638: LD_EXP 3
2642: PPUSH
2643: CALL_OW 305
2647: NOT
2648: AND
2649: IFFALSE 2736
// begin Brown = PrepareUnit ( 08_Brown , true ) ;
2651: LD_ADDR_EXP 3
2655: PUSH
2656: LD_STRING 08_Brown
2658: PPUSH
2659: LD_INT 1
2661: PPUSH
2662: CALL 4753 0 2
2666: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
2667: LD_EXP 3
2671: PPUSH
2672: LD_INT 10
2674: PPUSH
2675: LD_INT 0
2677: PPUSH
2678: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
2682: LD_EXP 3
2686: PPUSH
2687: LD_INT 42
2689: PPUSH
2690: LD_INT 35
2692: PPUSH
2693: CALL_OW 118
// if IsPlaced ( Brown ) then
2697: LD_EXP 3
2701: PPUSH
2702: CALL_OW 305
2706: IFFALSE 2736
// begin coreHeroesTab = coreHeroesTab ^ Brown ;
2708: LD_ADDR_EXP 14
2712: PUSH
2713: LD_EXP 14
2717: PUSH
2718: LD_EXP 3
2722: ADD
2723: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
2724: LD_EXP 3
2728: PPUSH
2729: LD_STRING 10_Brown
2731: PPUSH
2732: CALL_OW 38
// end ; end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
2736: LD_EXP 10
2740: PPUSH
2741: CALL_OW 305
2745: NOT
2746: PUSH
2747: LD_EXP 3
2751: PPUSH
2752: CALL_OW 305
2756: NOT
2757: AND
2758: PUSH
2759: LD_EXP 4
2763: PPUSH
2764: CALL_OW 305
2768: NOT
2769: AND
2770: IFFALSE 2857
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
2772: LD_ADDR_EXP 4
2776: PUSH
2777: LD_STRING 08_Donaldson
2779: PPUSH
2780: LD_INT 1
2782: PPUSH
2783: CALL 4753 0 2
2787: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
2788: LD_EXP 4
2792: PPUSH
2793: LD_INT 10
2795: PPUSH
2796: LD_INT 0
2798: PPUSH
2799: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
2803: LD_EXP 4
2807: PPUSH
2808: LD_INT 42
2810: PPUSH
2811: LD_INT 35
2813: PPUSH
2814: CALL_OW 118
// if IsPlaced ( Donaldson ) then
2818: LD_EXP 4
2822: PPUSH
2823: CALL_OW 305
2827: IFFALSE 2857
// begin coreHeroesTab = coreHeroesTab ^ Donaldson ;
2829: LD_ADDR_EXP 14
2833: PUSH
2834: LD_EXP 14
2838: PUSH
2839: LD_EXP 4
2843: ADD
2844: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
2845: LD_EXP 4
2849: PPUSH
2850: LD_STRING 10_Donaldson
2852: PPUSH
2853: CALL_OW 38
// end ; end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
2857: LD_EXP 10
2861: PPUSH
2862: CALL_OW 305
2866: NOT
2867: PUSH
2868: LD_EXP 3
2872: PPUSH
2873: CALL_OW 305
2877: NOT
2878: AND
2879: PUSH
2880: LD_EXP 4
2884: PPUSH
2885: CALL_OW 305
2889: NOT
2890: AND
2891: PUSH
2892: LD_EXP 8
2896: PPUSH
2897: CALL_OW 305
2901: NOT
2902: AND
2903: IFFALSE 2990
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
2905: LD_ADDR_EXP 8
2909: PUSH
2910: LD_STRING 08_Frank
2912: PPUSH
2913: LD_INT 1
2915: PPUSH
2916: CALL 4753 0 2
2920: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
2921: LD_EXP 8
2925: PPUSH
2926: LD_INT 10
2928: PPUSH
2929: LD_INT 0
2931: PPUSH
2932: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
2936: LD_EXP 8
2940: PPUSH
2941: LD_INT 42
2943: PPUSH
2944: LD_INT 35
2946: PPUSH
2947: CALL_OW 118
// if IsPlaced ( Frank ) then
2951: LD_EXP 8
2955: PPUSH
2956: CALL_OW 305
2960: IFFALSE 2990
// begin coreHeroesTab = coreHeroesTab ^ Frank ;
2962: LD_ADDR_EXP 14
2966: PUSH
2967: LD_EXP 14
2971: PUSH
2972: LD_EXP 8
2976: ADD
2977: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
2978: LD_EXP 8
2982: PPUSH
2983: LD_STRING 10_Frank
2985: PPUSH
2986: CALL_OW 38
// end ; end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
2990: LD_EXP 10
2994: PPUSH
2995: CALL_OW 305
2999: NOT
3000: PUSH
3001: LD_EXP 3
3005: PPUSH
3006: CALL_OW 305
3010: NOT
3011: AND
3012: PUSH
3013: LD_EXP 4
3017: PPUSH
3018: CALL_OW 305
3022: NOT
3023: AND
3024: PUSH
3025: LD_EXP 8
3029: PPUSH
3030: CALL_OW 305
3034: NOT
3035: AND
3036: PUSH
3037: LD_EXP 9
3041: PPUSH
3042: CALL_OW 305
3046: NOT
3047: AND
3048: IFFALSE 3135
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
3050: LD_ADDR_EXP 9
3054: PUSH
3055: LD_STRING 09_Houten
3057: PPUSH
3058: LD_INT 1
3060: PPUSH
3061: CALL 4753 0 2
3065: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
3066: LD_EXP 9
3070: PPUSH
3071: LD_INT 10
3073: PPUSH
3074: LD_INT 0
3076: PPUSH
3077: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
3081: LD_EXP 9
3085: PPUSH
3086: LD_INT 42
3088: PPUSH
3089: LD_INT 35
3091: PPUSH
3092: CALL_OW 118
// if IsPlaced ( Houten ) then
3096: LD_EXP 9
3100: PPUSH
3101: CALL_OW 305
3105: IFFALSE 3135
// begin coreHeroesTab = coreHeroesTab ^ Houten ;
3107: LD_ADDR_EXP 14
3111: PUSH
3112: LD_EXP 14
3116: PUSH
3117: LD_EXP 9
3121: ADD
3122: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
3123: LD_EXP 9
3127: PPUSH
3128: LD_STRING 10_Houten
3130: PPUSH
3131: CALL_OW 38
// end ; end ; siberite = LoadVariable ( 09_SibRes , 0 ) ;
3135: LD_ADDR_EXP 17
3139: PUSH
3140: LD_STRING 09_SibRes
3142: PPUSH
3143: LD_INT 0
3145: PPUSH
3146: CALL_OW 30
3150: ST_TO_ADDR
// others08 = CreateCharacterSet ( 08_other_survivors ) ;
3151: LD_ADDR_EXP 11
3155: PUSH
3156: LD_STRING 08_other_survivors
3158: PPUSH
3159: CALL_OW 31
3163: ST_TO_ADDR
// if siberite >= 200 then
3164: LD_EXP 17
3168: PUSH
3169: LD_INT 200
3171: GREATEREQUAL
3172: IFFALSE 4069
// begin if not IsPlaced ( Brown ) then
3174: LD_EXP 3
3178: PPUSH
3179: CALL_OW 305
3183: NOT
3184: IFFALSE 3271
// begin Brown = PrepareUnit ( 08_Brown , true ) ;
3186: LD_ADDR_EXP 3
3190: PUSH
3191: LD_STRING 08_Brown
3193: PPUSH
3194: LD_INT 1
3196: PPUSH
3197: CALL 4753 0 2
3201: ST_TO_ADDR
// PlaceUnitArea ( Brown , AddHeroes , false ) ;
3202: LD_EXP 3
3206: PPUSH
3207: LD_INT 11
3209: PPUSH
3210: LD_INT 0
3212: PPUSH
3213: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
3217: LD_EXP 3
3221: PPUSH
3222: LD_INT 42
3224: PPUSH
3225: LD_INT 35
3227: PPUSH
3228: CALL_OW 118
// if IsPlaced ( Brown ) then
3232: LD_EXP 3
3236: PPUSH
3237: CALL_OW 305
3241: IFFALSE 3271
// begin addHeroesTab = addHeroesTab ^ Brown ;
3243: LD_ADDR_EXP 15
3247: PUSH
3248: LD_EXP 15
3252: PUSH
3253: LD_EXP 3
3257: ADD
3258: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
3259: LD_EXP 3
3263: PPUSH
3264: LD_STRING 10_Brown
3266: PPUSH
3267: CALL_OW 38
// end ; end ; if not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
3271: LD_EXP 3
3275: PPUSH
3276: CALL_OW 305
3280: NOT
3281: PUSH
3282: LD_EXP 4
3286: PPUSH
3287: CALL_OW 305
3291: NOT
3292: AND
3293: IFFALSE 3380
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
3295: LD_ADDR_EXP 4
3299: PUSH
3300: LD_STRING 08_Donaldson
3302: PPUSH
3303: LD_INT 1
3305: PPUSH
3306: CALL 4753 0 2
3310: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , addHeroes , false ) ;
3311: LD_EXP 4
3315: PPUSH
3316: LD_INT 11
3318: PPUSH
3319: LD_INT 0
3321: PPUSH
3322: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
3326: LD_EXP 4
3330: PPUSH
3331: LD_INT 42
3333: PPUSH
3334: LD_INT 35
3336: PPUSH
3337: CALL_OW 118
// if IsPlaced ( Donaldson ) then
3341: LD_EXP 4
3345: PPUSH
3346: CALL_OW 305
3350: IFFALSE 3380
// begin addHeroesTab = addHeroesTab ^ Donaldson ;
3352: LD_ADDR_EXP 15
3356: PUSH
3357: LD_EXP 15
3361: PUSH
3362: LD_EXP 4
3366: ADD
3367: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
3368: LD_EXP 4
3372: PPUSH
3373: LD_STRING 10_Donaldson
3375: PPUSH
3376: CALL_OW 38
// end ; end ; if not IsPlaced ( Brown ) and not IsPlaced ( Frank ) then
3380: LD_EXP 3
3384: PPUSH
3385: CALL_OW 305
3389: NOT
3390: PUSH
3391: LD_EXP 8
3395: PPUSH
3396: CALL_OW 305
3400: NOT
3401: AND
3402: IFFALSE 3489
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
3404: LD_ADDR_EXP 8
3408: PUSH
3409: LD_STRING 08_Frank
3411: PPUSH
3412: LD_INT 1
3414: PPUSH
3415: CALL 4753 0 2
3419: ST_TO_ADDR
// PlaceUnitArea ( Frank , addHeroes , false ) ;
3420: LD_EXP 8
3424: PPUSH
3425: LD_INT 11
3427: PPUSH
3428: LD_INT 0
3430: PPUSH
3431: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
3435: LD_EXP 8
3439: PPUSH
3440: LD_INT 42
3442: PPUSH
3443: LD_INT 35
3445: PPUSH
3446: CALL_OW 118
// if IsPlaced ( Frank ) then
3450: LD_EXP 8
3454: PPUSH
3455: CALL_OW 305
3459: IFFALSE 3489
// begin addHeroesTab = addHeroesTab ^ Frank ;
3461: LD_ADDR_EXP 15
3465: PUSH
3466: LD_EXP 15
3470: PUSH
3471: LD_EXP 8
3475: ADD
3476: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
3477: LD_EXP 8
3481: PPUSH
3482: LD_STRING 10_Frank
3484: PPUSH
3485: CALL_OW 38
// end ; end ; if not IsPlaced ( Brown ) and not IsPlaced ( Houten ) then
3489: LD_EXP 3
3493: PPUSH
3494: CALL_OW 305
3498: NOT
3499: PUSH
3500: LD_EXP 9
3504: PPUSH
3505: CALL_OW 305
3509: NOT
3510: AND
3511: IFFALSE 3600
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
3513: LD_ADDR_EXP 9
3517: PUSH
3518: LD_STRING 09_Houten
3520: PPUSH
3521: LD_INT 1
3523: PPUSH
3524: CALL 4753 0 2
3528: ST_TO_ADDR
// PlaceUnitArea ( Houten , addHeroes , false ) ;
3529: LD_EXP 9
3533: PPUSH
3534: LD_INT 11
3536: PPUSH
3537: LD_INT 0
3539: PPUSH
3540: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
3544: LD_EXP 9
3548: PPUSH
3549: LD_INT 42
3551: PPUSH
3552: LD_INT 35
3554: PPUSH
3555: CALL_OW 118
// if IsPlaced ( Houten ) then
3559: LD_EXP 9
3563: PPUSH
3564: CALL_OW 305
3568: IFFALSE 3598
// begin addHeroesTab = addHeroesTab ^ Houten ;
3570: LD_ADDR_EXP 15
3574: PUSH
3575: LD_EXP 15
3579: PUSH
3580: LD_EXP 9
3584: ADD
3585: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
3586: LD_EXP 9
3590: PPUSH
3591: LD_STRING 10_Houten
3593: PPUSH
3594: CALL_OW 38
// end ; end else
3598: GO 3676
// begin PlaceUnitArea ( others08 [ 1 ] , addHeroes , false ) ;
3600: LD_EXP 11
3604: PUSH
3605: LD_INT 1
3607: ARRAY
3608: PPUSH
3609: LD_INT 11
3611: PPUSH
3612: LD_INT 0
3614: PPUSH
3615: CALL_OW 49
// ComTurnXY ( others08 [ 1 ] , 42 , 35 ) ;
3619: LD_EXP 11
3623: PUSH
3624: LD_INT 1
3626: ARRAY
3627: PPUSH
3628: LD_INT 42
3630: PPUSH
3631: LD_INT 35
3633: PPUSH
3634: CALL_OW 118
// addHeroesTab = addHeroesTab ^ others08 [ 1 ] ;
3638: LD_ADDR_EXP 15
3642: PUSH
3643: LD_EXP 15
3647: PUSH
3648: LD_EXP 11
3652: PUSH
3653: LD_INT 1
3655: ARRAY
3656: ADD
3657: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
3658: LD_ADDR_EXP 11
3662: PUSH
3663: LD_EXP 11
3667: PPUSH
3668: LD_INT 1
3670: PPUSH
3671: CALL_OW 3
3675: ST_TO_ADDR
// end ; if not IsPlaced ( Donaldson ) then
3676: LD_EXP 4
3680: PPUSH
3681: CALL_OW 305
3685: NOT
3686: IFFALSE 3773
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
3688: LD_ADDR_EXP 4
3692: PUSH
3693: LD_STRING 08_Donaldson
3695: PPUSH
3696: LD_INT 1
3698: PPUSH
3699: CALL 4753 0 2
3703: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , AddHeroes , false ) ;
3704: LD_EXP 4
3708: PPUSH
3709: LD_INT 11
3711: PPUSH
3712: LD_INT 0
3714: PPUSH
3715: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
3719: LD_EXP 4
3723: PPUSH
3724: LD_INT 42
3726: PPUSH
3727: LD_INT 35
3729: PPUSH
3730: CALL_OW 118
// if IsPlaced ( Donaldson ) then
3734: LD_EXP 4
3738: PPUSH
3739: CALL_OW 305
3743: IFFALSE 3773
// begin addHeroesTab = addHeroesTab ^ Donaldson ;
3745: LD_ADDR_EXP 15
3749: PUSH
3750: LD_EXP 15
3754: PUSH
3755: LD_EXP 4
3759: ADD
3760: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
3761: LD_EXP 4
3765: PPUSH
3766: LD_STRING 10_Donaldson
3768: PPUSH
3769: CALL_OW 38
// end ; end ; if not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
3773: LD_EXP 4
3777: PPUSH
3778: CALL_OW 305
3782: NOT
3783: PUSH
3784: LD_EXP 8
3788: PPUSH
3789: CALL_OW 305
3793: NOT
3794: AND
3795: IFFALSE 3882
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
3797: LD_ADDR_EXP 8
3801: PUSH
3802: LD_STRING 08_Frank
3804: PPUSH
3805: LD_INT 1
3807: PPUSH
3808: CALL 4753 0 2
3812: ST_TO_ADDR
// PlaceUnitArea ( Frank , addHeroes , false ) ;
3813: LD_EXP 8
3817: PPUSH
3818: LD_INT 11
3820: PPUSH
3821: LD_INT 0
3823: PPUSH
3824: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
3828: LD_EXP 8
3832: PPUSH
3833: LD_INT 42
3835: PPUSH
3836: LD_INT 35
3838: PPUSH
3839: CALL_OW 118
// if IsPlaced ( Frank ) then
3843: LD_EXP 8
3847: PPUSH
3848: CALL_OW 305
3852: IFFALSE 3882
// begin addHeroesTab = addHeroesTab ^ Frank ;
3854: LD_ADDR_EXP 15
3858: PUSH
3859: LD_EXP 15
3863: PUSH
3864: LD_EXP 8
3868: ADD
3869: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
3870: LD_EXP 8
3874: PPUSH
3875: LD_STRING 10_Frank
3877: PPUSH
3878: CALL_OW 38
// end ; end ; if not IsPlaced ( Donaldson ) and not IsPlaced ( Houten ) then
3882: LD_EXP 4
3886: PPUSH
3887: CALL_OW 305
3891: NOT
3892: PUSH
3893: LD_EXP 9
3897: PPUSH
3898: CALL_OW 305
3902: NOT
3903: AND
3904: IFFALSE 3993
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
3906: LD_ADDR_EXP 9
3910: PUSH
3911: LD_STRING 09_Houten
3913: PPUSH
3914: LD_INT 1
3916: PPUSH
3917: CALL 4753 0 2
3921: ST_TO_ADDR
// PlaceUnitArea ( Houten , addHeroes , false ) ;
3922: LD_EXP 9
3926: PPUSH
3927: LD_INT 11
3929: PPUSH
3930: LD_INT 0
3932: PPUSH
3933: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
3937: LD_EXP 9
3941: PPUSH
3942: LD_INT 42
3944: PPUSH
3945: LD_INT 35
3947: PPUSH
3948: CALL_OW 118
// if IsPlaced ( Houten ) then
3952: LD_EXP 9
3956: PPUSH
3957: CALL_OW 305
3961: IFFALSE 3991
// begin addHeroesTab = addHeroesTab ^ Houten ;
3963: LD_ADDR_EXP 15
3967: PUSH
3968: LD_EXP 15
3972: PUSH
3973: LD_EXP 9
3977: ADD
3978: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
3979: LD_EXP 9
3983: PPUSH
3984: LD_STRING 10_Houten
3986: PPUSH
3987: CALL_OW 38
// end ; end else
3991: GO 4069
// begin PlaceUnitArea ( others08 [ 2 ] , addHeroes , false ) ;
3993: LD_EXP 11
3997: PUSH
3998: LD_INT 2
4000: ARRAY
4001: PPUSH
4002: LD_INT 11
4004: PPUSH
4005: LD_INT 0
4007: PPUSH
4008: CALL_OW 49
// ComTurnXY ( others08 [ 2 ] , 42 , 35 ) ;
4012: LD_EXP 11
4016: PUSH
4017: LD_INT 2
4019: ARRAY
4020: PPUSH
4021: LD_INT 42
4023: PPUSH
4024: LD_INT 35
4026: PPUSH
4027: CALL_OW 118
// addHeroesTab = addHeroesTab ^ others08 [ 1 ] ;
4031: LD_ADDR_EXP 15
4035: PUSH
4036: LD_EXP 15
4040: PUSH
4041: LD_EXP 11
4045: PUSH
4046: LD_INT 1
4048: ARRAY
4049: ADD
4050: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
4051: LD_ADDR_EXP 11
4055: PUSH
4056: LD_EXP 11
4060: PPUSH
4061: LD_INT 1
4063: PPUSH
4064: CALL_OW 3
4068: ST_TO_ADDR
// end ; end ; if siberite > 200 then
4069: LD_EXP 17
4073: PUSH
4074: LD_INT 200
4076: GREATER
4077: IFFALSE 4191
// begin for i := 1 to ( siberite - 200 ) / 100 do
4079: LD_ADDR_VAR 0 2
4083: PUSH
4084: DOUBLE
4085: LD_INT 1
4087: DEC
4088: ST_TO_ADDR
4089: LD_EXP 17
4093: PUSH
4094: LD_INT 200
4096: MINUS
4097: PUSH
4098: LD_INT 100
4100: DIVREAL
4101: PUSH
4102: FOR_TO
4103: IFFALSE 4189
// begin PlaceUnitArea ( others08 [ i ] , addHeroes , false ) ;
4105: LD_EXP 11
4109: PUSH
4110: LD_VAR 0 2
4114: ARRAY
4115: PPUSH
4116: LD_INT 11
4118: PPUSH
4119: LD_INT 0
4121: PPUSH
4122: CALL_OW 49
// ComTurnXY ( others08 [ i ] , 42 , 35 ) ;
4126: LD_EXP 11
4130: PUSH
4131: LD_VAR 0 2
4135: ARRAY
4136: PPUSH
4137: LD_INT 42
4139: PPUSH
4140: LD_INT 35
4142: PPUSH
4143: CALL_OW 118
// addHeroesTab = addHeroesTab ^ others08 [ i ] ;
4147: LD_ADDR_EXP 15
4151: PUSH
4152: LD_EXP 15
4156: PUSH
4157: LD_EXP 11
4161: PUSH
4162: LD_VAR 0 2
4166: ARRAY
4167: ADD
4168: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
4169: LD_ADDR_EXP 11
4173: PUSH
4174: LD_EXP 11
4178: PPUSH
4179: LD_INT 1
4181: PPUSH
4182: CALL_OW 3
4186: ST_TO_ADDR
// end ;
4187: GO 4102
4189: POP
4190: POP
// end ; PlaceHumanInUnit ( JMM , car ) ;
4191: LD_EXP 1
4195: PPUSH
4196: LD_INT 138
4198: PPUSH
4199: CALL_OW 52
// PlaceHumanInUnit ( Powell , Am_bar ) ;
4203: LD_EXP 2
4207: PPUSH
4208: LD_INT 58
4210: PPUSH
4211: CALL_OW 52
// SetClass ( JMM , 1 ) ;
4215: LD_EXP 1
4219: PPUSH
4220: LD_INT 1
4222: PPUSH
4223: CALL_OW 336
// end ;
4227: LD_VAR 0 1
4231: RET
// export function PrepareConvoy ; var i , veh , un ; begin
4232: LD_INT 0
4234: PPUSH
4235: PPUSH
4236: PPUSH
4237: PPUSH
// uc_side = 1 ;
4238: LD_ADDR_OWVAR 20
4242: PUSH
4243: LD_INT 1
4245: ST_TO_ADDR
// uc_nation = 1 ;
4246: LD_ADDR_OWVAR 21
4250: PUSH
4251: LD_INT 1
4253: ST_TO_ADDR
// for i := 1 to 3 do
4254: LD_ADDR_VAR 0 2
4258: PUSH
4259: DOUBLE
4260: LD_INT 1
4262: DEC
4263: ST_TO_ADDR
4264: LD_INT 3
4266: PUSH
4267: FOR_TO
4268: IFFALSE 4414
// begin vc_engine = 1 ;
4270: LD_ADDR_OWVAR 39
4274: PUSH
4275: LD_INT 1
4277: ST_TO_ADDR
// vc_control = 1 ;
4278: LD_ADDR_OWVAR 38
4282: PUSH
4283: LD_INT 1
4285: ST_TO_ADDR
// vc_weapon = [ 3 , 4 , 5 ] [ Rand ( 1 , 3 ) ] ;
4286: LD_ADDR_OWVAR 40
4290: PUSH
4291: LD_INT 3
4293: PUSH
4294: LD_INT 4
4296: PUSH
4297: LD_INT 5
4299: PUSH
4300: EMPTY
4301: LIST
4302: LIST
4303: LIST
4304: PUSH
4305: LD_INT 1
4307: PPUSH
4308: LD_INT 3
4310: PPUSH
4311: CALL_OW 12
4315: ARRAY
4316: ST_TO_ADDR
// vc_chassis = 3 ;
4317: LD_ADDR_OWVAR 37
4321: PUSH
4322: LD_INT 3
4324: ST_TO_ADDR
// veh = CreateVehicle ;
4325: LD_ADDR_VAR 0 3
4329: PUSH
4330: CALL_OW 45
4334: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
4335: LD_VAR 0 3
4339: PPUSH
4340: LD_INT 1
4342: PPUSH
4343: CALL_OW 233
// PlaceUnitArea ( veh , WeaponTanks , false ) ;
4347: LD_VAR 0 3
4351: PPUSH
4352: LD_INT 8
4354: PPUSH
4355: LD_INT 0
4357: PPUSH
4358: CALL_OW 49
// convoy = convoy ^ veh ;
4362: LD_ADDR_EXP 12
4366: PUSH
4367: LD_EXP 12
4371: PUSH
4372: LD_VAR 0 3
4376: ADD
4377: ST_TO_ADDR
// PrepareMechanic ( false , 10 ) ;
4378: LD_INT 0
4380: PPUSH
4381: LD_INT 10
4383: PPUSH
4384: CALL_OW 383
// un = CreateHuman ;
4388: LD_ADDR_VAR 0 4
4392: PUSH
4393: CALL_OW 44
4397: ST_TO_ADDR
// PlaceHumanInUnit ( un , veh ) ;
4398: LD_VAR 0 4
4402: PPUSH
4403: LD_VAR 0 3
4407: PPUSH
4408: CALL_OW 52
// end ;
4412: GO 4267
4414: POP
4415: POP
// for i := 1 to 3 do
4416: LD_ADDR_VAR 0 2
4420: PUSH
4421: DOUBLE
4422: LD_INT 1
4424: DEC
4425: ST_TO_ADDR
4426: LD_INT 3
4428: PUSH
4429: FOR_TO
4430: IFFALSE 4568
// begin vc_engine = 1 ;
4432: LD_ADDR_OWVAR 39
4436: PUSH
4437: LD_INT 1
4439: ST_TO_ADDR
// vc_control = 1 ;
4440: LD_ADDR_OWVAR 38
4444: PUSH
4445: LD_INT 1
4447: ST_TO_ADDR
// vc_weapon = 12 ;
4448: LD_ADDR_OWVAR 40
4452: PUSH
4453: LD_INT 12
4455: ST_TO_ADDR
// vc_chassis = 3 ;
4456: LD_ADDR_OWVAR 37
4460: PUSH
4461: LD_INT 3
4463: ST_TO_ADDR
// veh = CreateVehicle ;
4464: LD_ADDR_VAR 0 3
4468: PUSH
4469: CALL_OW 45
4473: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
4474: LD_VAR 0 3
4478: PPUSH
4479: LD_INT 1
4481: PPUSH
4482: CALL_OW 233
// PlaceUnitArea ( veh , Cargo , false ) ;
4486: LD_VAR 0 3
4490: PPUSH
4491: LD_INT 9
4493: PPUSH
4494: LD_INT 0
4496: PPUSH
4497: CALL_OW 49
// AddCargo ( veh , 1 , 100 ) ;
4501: LD_VAR 0 3
4505: PPUSH
4506: LD_INT 1
4508: PPUSH
4509: LD_INT 100
4511: PPUSH
4512: CALL_OW 291
// convoy = convoy ^ veh ;
4516: LD_ADDR_EXP 12
4520: PUSH
4521: LD_EXP 12
4525: PUSH
4526: LD_VAR 0 3
4530: ADD
4531: ST_TO_ADDR
// PrepareMechanic ( false , 10 ) ;
4532: LD_INT 0
4534: PPUSH
4535: LD_INT 10
4537: PPUSH
4538: CALL_OW 383
// un = CreateHuman ;
4542: LD_ADDR_VAR 0 4
4546: PUSH
4547: CALL_OW 44
4551: ST_TO_ADDR
// PlaceHumanInUnit ( un , veh ) ;
4552: LD_VAR 0 4
4556: PPUSH
4557: LD_VAR 0 3
4561: PPUSH
4562: CALL_OW 52
// end ;
4566: GO 4429
4568: POP
4569: POP
// ComMoveXY ( convoy [ 1 ] , 39 , 38 ) ;
4570: LD_EXP 12
4574: PUSH
4575: LD_INT 1
4577: ARRAY
4578: PPUSH
4579: LD_INT 39
4581: PPUSH
4582: LD_INT 38
4584: PPUSH
4585: CALL_OW 111
// AddComMoveXY ( convoy [ 1 ] , 41 , 50 ) ;
4589: LD_EXP 12
4593: PUSH
4594: LD_INT 1
4596: ARRAY
4597: PPUSH
4598: LD_INT 41
4600: PPUSH
4601: LD_INT 50
4603: PPUSH
4604: CALL_OW 171
// ComMoveXY ( convoy [ 2 ] , 39 , 38 ) ;
4608: LD_EXP 12
4612: PUSH
4613: LD_INT 2
4615: ARRAY
4616: PPUSH
4617: LD_INT 39
4619: PPUSH
4620: LD_INT 38
4622: PPUSH
4623: CALL_OW 111
// AddComMoveXY ( convoy [ 2 ] , 41 , 47 ) ;
4627: LD_EXP 12
4631: PUSH
4632: LD_INT 2
4634: ARRAY
4635: PPUSH
4636: LD_INT 41
4638: PPUSH
4639: LD_INT 47
4641: PPUSH
4642: CALL_OW 171
// ComMoveXY ( convoy [ 3 ] , 39 , 38 ) ;
4646: LD_EXP 12
4650: PUSH
4651: LD_INT 3
4653: ARRAY
4654: PPUSH
4655: LD_INT 39
4657: PPUSH
4658: LD_INT 38
4660: PPUSH
4661: CALL_OW 111
// AddComMoveXY ( convoy [ 3 ] , 41 , 44 ) ;
4665: LD_EXP 12
4669: PUSH
4670: LD_INT 3
4672: ARRAY
4673: PPUSH
4674: LD_INT 41
4676: PPUSH
4677: LD_INT 44
4679: PPUSH
4680: CALL_OW 171
// wait ( 0 0$4 ) ;
4684: LD_INT 140
4686: PPUSH
4687: CALL_OW 67
// ComMoveXY ( convoy [ 4 ] , 47 , 49 ) ;
4691: LD_EXP 12
4695: PUSH
4696: LD_INT 4
4698: ARRAY
4699: PPUSH
4700: LD_INT 47
4702: PPUSH
4703: LD_INT 49
4705: PPUSH
4706: CALL_OW 111
// ComMoveXY ( convoy [ 5 ] , 47 , 49 ) ;
4710: LD_EXP 12
4714: PUSH
4715: LD_INT 5
4717: ARRAY
4718: PPUSH
4719: LD_INT 47
4721: PPUSH
4722: LD_INT 49
4724: PPUSH
4725: CALL_OW 111
// ComMoveXY ( convoy [ 6 ] , 47 , 49 ) ;
4729: LD_EXP 12
4733: PUSH
4734: LD_INT 6
4736: ARRAY
4737: PPUSH
4738: LD_INT 47
4740: PPUSH
4741: LD_INT 49
4743: PPUSH
4744: CALL_OW 111
// end ; end_of_file
4748: LD_VAR 0 1
4752: RET
// export function PrepareUnit ( ident , exist_mode ) ; var unit ; begin
4753: LD_INT 0
4755: PPUSH
4756: PPUSH
// if exist_mode then
4757: LD_VAR 0 2
4761: IFFALSE 4780
// unit := CreateCharacter ( ident ) else
4763: LD_ADDR_VAR 0 4
4767: PUSH
4768: LD_VAR 0 1
4772: PPUSH
4773: CALL_OW 34
4777: ST_TO_ADDR
4778: GO 4795
// unit := NewCharacter ( ident ) ;
4780: LD_ADDR_VAR 0 4
4784: PUSH
4785: LD_VAR 0 1
4789: PPUSH
4790: CALL_OW 25
4794: ST_TO_ADDR
// result := unit ;
4795: LD_ADDR_VAR 0 3
4799: PUSH
4800: LD_VAR 0 4
4804: ST_TO_ADDR
// end ; end_of_file
4805: LD_VAR 0 3
4809: RET
