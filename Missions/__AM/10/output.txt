// export JMM , Powell ; export Brown , Donaldson , Bobby , Cyrus , Lisa , Frank , Houten , Gary ; export others08 ; export convoy , prepConv ; export coreHeroesTab , addHeroesTab ; export selectedToMission ; export siberite ; starting begin Resetfog ;
   0: CALL_OW 335
// SetBName ( Am_dep , alfa ) ;
   4: LD_INT 5
   6: PPUSH
   7: LD_STRING alfa
   9: PPUSH
  10: CALL_OW 500
// convoy := [ ] ;
  14: LD_ADDR_EXP 12
  18: PUSH
  19: EMPTY
  20: ST_TO_ADDR
// coreHeroesTab := [ ] ;
  21: LD_ADDR_EXP 14
  25: PUSH
  26: EMPTY
  27: ST_TO_ADDR
// addHeroesTab := [ ] ;
  28: LD_ADDR_EXP 15
  32: PUSH
  33: EMPTY
  34: ST_TO_ADDR
// selectedToMission := [ ] ;
  35: LD_ADDR_EXP 16
  39: PUSH
  40: EMPTY
  41: ST_TO_ADDR
// PrepareHeroes ;
  42: CALL 958 0 0
// Action ;
  46: CALL 51 0 0
// end ; end_of_file
  50: END
// export function Action ; begin
  51: LD_INT 0
  53: PPUSH
// Video ( true ) ;
  54: LD_INT 1
  56: PPUSH
  57: CALL 5204 0 1
// AddComConstruct ( Am_tov1 , 2 , 1 , 1 , 4 ) ;
  61: LD_INT 60
  63: PPUSH
  64: LD_INT 2
  66: PPUSH
  67: LD_INT 1
  69: PPUSH
  70: LD_INT 1
  72: PPUSH
  73: LD_INT 4
  75: PPUSH
  76: CALL_OW 185
// AddComConstruct ( Am_tov2 , 4 , 1 , 1 , 6 ) ;
  80: LD_INT 6
  82: PPUSH
  83: LD_INT 4
  85: PPUSH
  86: LD_INT 1
  88: PPUSH
  89: LD_INT 1
  91: PPUSH
  92: LD_INT 6
  94: PPUSH
  95: CALL_OW 185
// AddComConstruct ( Am_tov1 , 2 , 1 , 1 , 3 ) ;
  99: LD_INT 60
 101: PPUSH
 102: LD_INT 2
 104: PPUSH
 105: LD_INT 1
 107: PPUSH
 108: LD_INT 1
 110: PPUSH
 111: LD_INT 3
 113: PPUSH
 114: CALL_OW 185
// AddComConstruct ( Am_tov2 , 4 , 1 , 1 , 4 ) ;
 118: LD_INT 6
 120: PPUSH
 121: LD_INT 4
 123: PPUSH
 124: LD_INT 1
 126: PPUSH
 127: LD_INT 1
 129: PPUSH
 130: LD_INT 4
 132: PPUSH
 133: CALL_OW 185
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap1 ) ;
 137: LD_INT 47
 139: PUSH
 140: LD_INT 4
 142: PUSH
 143: EMPTY
 144: LIST
 145: LIST
 146: PPUSH
 147: LD_INT 51
 149: PPUSH
 150: CALL_OW 184
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap2 ) ;
 154: LD_INT 47
 156: PUSH
 157: LD_INT 4
 159: PUSH
 160: EMPTY
 161: LIST
 162: LIST
 163: PPUSH
 164: LD_INT 52
 166: PPUSH
 167: CALL_OW 184
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap3 ) ;
 171: LD_INT 47
 173: PUSH
 174: LD_INT 4
 176: PUSH
 177: EMPTY
 178: LIST
 179: LIST
 180: PPUSH
 181: LD_INT 53
 183: PPUSH
 184: CALL_OW 184
// CenterNowOnUnits ( car ) ;
 188: LD_INT 138
 190: PPUSH
 191: CALL_OW 87
// ComMoveXY ( car , 69 , 36 ) ;
 195: LD_INT 138
 197: PPUSH
 198: LD_INT 69
 200: PPUSH
 201: LD_INT 36
 203: PPUSH
 204: CALL_OW 111
// AddComMoveXY ( car , 65 , 43 ) ;
 208: LD_INT 138
 210: PPUSH
 211: LD_INT 65
 213: PPUSH
 214: LD_INT 43
 216: PPUSH
 217: CALL_OW 171
// AddComMoveXY ( car , 63 , 48 ) ;
 221: LD_INT 138
 223: PPUSH
 224: LD_INT 63
 226: PPUSH
 227: LD_INT 48
 229: PPUSH
 230: CALL_OW 171
// AddComMoveXY ( car , 60 , 50 ) ;
 234: LD_INT 138
 236: PPUSH
 237: LD_INT 60
 239: PPUSH
 240: LD_INT 50
 242: PPUSH
 243: CALL_OW 171
// AddComMoveXY ( car , 54 , 47 ) ;
 247: LD_INT 138
 249: PPUSH
 250: LD_INT 54
 252: PPUSH
 253: LD_INT 47
 255: PPUSH
 256: CALL_OW 171
// AddComMoveXY ( car , 51 , 40 ) ;
 260: LD_INT 138
 262: PPUSH
 263: LD_INT 51
 265: PPUSH
 266: LD_INT 40
 268: PPUSH
 269: CALL_OW 171
// repeat wait ( 0 0$1 ) ;
 273: LD_INT 35
 275: PPUSH
 276: CALL_OW 67
// CenterNowOnUnits ( car ) ;
 280: LD_INT 138
 282: PPUSH
 283: CALL_OW 87
// until IsInArea ( car , stop ) ;
 287: LD_INT 138
 289: PPUSH
 290: LD_INT 7
 292: PPUSH
 293: CALL_OW 308
 297: IFFALSE 273
// ComExitVehicle ( JMM ) ;
 299: LD_EXP 1
 303: PPUSH
 304: CALL_OW 121
// wait ( 0 0$01 ) ;
 308: LD_INT 35
 310: PPUSH
 311: CALL_OW 67
// ComMoveXY ( JMM , 42 , 37 ) ;
 315: LD_EXP 1
 319: PPUSH
 320: LD_INT 42
 322: PPUSH
 323: LD_INT 37
 325: PPUSH
 326: CALL_OW 111
// wait ( 0 0$5 ) ;
 330: LD_INT 175
 332: PPUSH
 333: CALL_OW 67
// ComExitBuilding ( Powell ) ;
 337: LD_EXP 2
 341: PPUSH
 342: CALL_OW 122
// wait ( 0 0$01 ) ;
 346: LD_INT 35
 348: PPUSH
 349: CALL_OW 67
// ComTurnUnit ( Powell , JMM ) ;
 353: LD_EXP 2
 357: PPUSH
 358: LD_EXP 1
 362: PPUSH
 363: CALL_OW 119
// ComTurnUnit ( JMM , Powell ) ;
 367: LD_EXP 1
 371: PPUSH
 372: LD_EXP 2
 376: PPUSH
 377: CALL_OW 119
// Say ( JMM , D1-JMM-1 ) ;
 381: LD_EXP 1
 385: PPUSH
 386: LD_STRING D1-JMM-1
 388: PPUSH
 389: CALL_OW 88
// Say ( Powell , D1-Pow-1 ) ;
 393: LD_EXP 2
 397: PPUSH
 398: LD_STRING D1-Pow-1
 400: PPUSH
 401: CALL_OW 88
// Say ( JMM , D1-JMM-2 ) ;
 405: LD_EXP 1
 409: PPUSH
 410: LD_STRING D1-JMM-2
 412: PPUSH
 413: CALL_OW 88
// Say ( Powell , D1-Pow-2 ) ;
 417: LD_EXP 2
 421: PPUSH
 422: LD_STRING D1-Pow-2
 424: PPUSH
 425: CALL_OW 88
// Say ( JMM , D1-JMM-3 ) ;
 429: LD_EXP 1
 433: PPUSH
 434: LD_STRING D1-JMM-3
 436: PPUSH
 437: CALL_OW 88
// Say ( Powell , D1-Pow-3 ) ;
 441: LD_EXP 2
 445: PPUSH
 446: LD_STRING D1-Pow-3
 448: PPUSH
 449: CALL_OW 88
// Say ( JMM , D1-JMM-4 ) ;
 453: LD_EXP 1
 457: PPUSH
 458: LD_STRING D1-JMM-4
 460: PPUSH
 461: CALL_OW 88
// PrepareConvoy ;
 465: CALL 4913 0 0
// Say ( Powell , D1-Pow-4 ) ;
 469: LD_EXP 2
 473: PPUSH
 474: LD_STRING D1-Pow-4
 476: PPUSH
 477: CALL_OW 88
// if TestCharacters ( 08_Joan ) then
 481: LD_STRING 08_Joan
 483: PPUSH
 484: CALL_OW 28
 488: IFFALSE 502
// Say ( Powell , D1-Pow-4a ) ;
 490: LD_EXP 2
 494: PPUSH
 495: LD_STRING D1-Pow-4a
 497: PPUSH
 498: CALL_OW 88
// Say ( Powell , D1-Pow-4b ) ;
 502: LD_EXP 2
 506: PPUSH
 507: LD_STRING D1-Pow-4b
 509: PPUSH
 510: CALL_OW 88
// AddComGive ( convoy , Am_dep ) ;
 514: LD_EXP 12
 518: PPUSH
 519: LD_INT 5
 521: PPUSH
 522: CALL_OW 221
// AddComMoveXY ( convoy , 81 , 77 ) ;
 526: LD_EXP 12
 530: PPUSH
 531: LD_INT 81
 533: PPUSH
 534: LD_INT 77
 536: PPUSH
 537: CALL_OW 171
// Say ( JMM , D1-JMM-5 ) ;
 541: LD_EXP 1
 545: PPUSH
 546: LD_STRING D1-JMM-5
 548: PPUSH
 549: CALL_OW 88
// Say ( Powell , D1-Pow-5 ) ;
 553: LD_EXP 2
 557: PPUSH
 558: LD_STRING D1-Pow-5
 560: PPUSH
 561: CALL_OW 88
// Say ( JMM , D1-JMM-6 ) ;
 565: LD_EXP 1
 569: PPUSH
 570: LD_STRING D1-JMM-6
 572: PPUSH
 573: CALL_OW 88
// Say ( Powell , D1-Pow-6 ) ;
 577: LD_EXP 2
 581: PPUSH
 582: LD_STRING D1-Pow-6
 584: PPUSH
 585: CALL_OW 88
// Say ( JMM , D1-JMM-7 ) ;
 589: LD_EXP 1
 593: PPUSH
 594: LD_STRING D1-JMM-7
 596: PPUSH
 597: CALL_OW 88
// Say ( Powell , D1-Pow-7 ) ;
 601: LD_EXP 2
 605: PPUSH
 606: LD_STRING D1-Pow-7
 608: PPUSH
 609: CALL_OW 88
// Say ( JMM , D1-JMM-8 ) ;
 613: LD_EXP 1
 617: PPUSH
 618: LD_STRING D1-JMM-8
 620: PPUSH
 621: CALL_OW 88
// ComMoveXY ( JMM , 47 , 48 ) ;
 625: LD_EXP 1
 629: PPUSH
 630: LD_INT 47
 632: PPUSH
 633: LD_INT 48
 635: PPUSH
 636: CALL_OW 111
// ComEnterUnit ( Powell , Am_bar ) ;
 640: LD_EXP 2
 644: PPUSH
 645: LD_INT 58
 647: PPUSH
 648: CALL_OW 120
// wait ( 0 0$3 ) ;
 652: LD_INT 105
 654: PPUSH
 655: CALL_OW 67
// EndMission ;
 659: CALL 668 0 0
// end ;
 663: LD_VAR 0 1
 667: RET
// export function EndMission ; var others ; begin
 668: LD_INT 0
 670: PPUSH
 671: PPUSH
// others := FilterUnitsInArea ( CoreHeroes , [ [ f_side , 1 ] , [ f_type , unit_human ] ] ) ;
 672: LD_ADDR_VAR 0 2
 676: PUSH
 677: LD_INT 10
 679: PPUSH
 680: LD_INT 22
 682: PUSH
 683: LD_INT 1
 685: PUSH
 686: EMPTY
 687: LIST
 688: LIST
 689: PUSH
 690: LD_INT 21
 692: PUSH
 693: LD_INT 1
 695: PUSH
 696: EMPTY
 697: LIST
 698: LIST
 699: PUSH
 700: EMPTY
 701: LIST
 702: LIST
 703: PPUSH
 704: CALL_OW 70
 708: ST_TO_ADDR
// others := others ^ FilterUnitsInArea ( AddHeroes , [ [ f_side , 1 ] , [ f_type , unit_human ] ] ) ;
 709: LD_ADDR_VAR 0 2
 713: PUSH
 714: LD_VAR 0 2
 718: PUSH
 719: LD_INT 11
 721: PPUSH
 722: LD_INT 22
 724: PUSH
 725: LD_INT 1
 727: PUSH
 728: EMPTY
 729: LIST
 730: LIST
 731: PUSH
 732: LD_INT 21
 734: PUSH
 735: LD_INT 1
 737: PUSH
 738: EMPTY
 739: LIST
 740: LIST
 741: PUSH
 742: EMPTY
 743: LIST
 744: LIST
 745: PPUSH
 746: CALL_OW 70
 750: ADD
 751: ST_TO_ADDR
// others := others diff [ JMM , Powell , Brown , Donaldson , Bobby , Cyrus , Lisa , Frank , Houten , Gary ] ;
 752: LD_ADDR_VAR 0 2
 756: PUSH
 757: LD_VAR 0 2
 761: PUSH
 762: LD_EXP 1
 766: PUSH
 767: LD_EXP 2
 771: PUSH
 772: LD_EXP 3
 776: PUSH
 777: LD_EXP 4
 781: PUSH
 782: LD_EXP 5
 786: PUSH
 787: LD_EXP 6
 791: PUSH
 792: LD_EXP 7
 796: PUSH
 797: LD_EXP 8
 801: PUSH
 802: LD_EXP 9
 806: PUSH
 807: LD_EXP 10
 811: PUSH
 812: EMPTY
 813: LIST
 814: LIST
 815: LIST
 816: LIST
 817: LIST
 818: LIST
 819: LIST
 820: LIST
 821: LIST
 822: LIST
 823: DIFF
 824: ST_TO_ADDR
// SaveCharacters ( JMM , 10_JMM ) ;
 825: LD_EXP 1
 829: PPUSH
 830: LD_STRING 10_JMM
 832: PPUSH
 833: CALL_OW 38
// SaveCharacters ( others , OthersIn10 ) ;
 837: LD_VAR 0 2
 841: PPUSH
 842: LD_STRING OthersIn10
 844: PPUSH
 845: CALL_OW 38
// SaveCharacters ( others08 , 10_lock ) ;
 849: LD_EXP 11
 853: PPUSH
 854: LD_STRING 10_lock
 856: PPUSH
 857: CALL_OW 38
// ToLua ( enableBioCharacter(BIO_POW) ) ;
 861: LD_STRING enableBioCharacter(BIO_POW)
 863: PPUSH
 864: CALL_OW 559
// ToLua ( enableBioCharacter(BIO_CATH) ) ;
 868: LD_STRING enableBioCharacter(BIO_CATH)
 870: PPUSH
 871: CALL_OW 559
// ChangeMap ( 10 , %_cont ) ;
 875: LD_INT 10
 877: PPUSH
 878: LD_STRING %_cont
 880: PPUSH
 881: CALL_OW 340
// end ;
 885: LD_VAR 0 1
 889: RET
// every 0 0$1 trigger FilterUnitsInArea ( removeCar , [ f_side , 1 ] ) do var i ;
 890: LD_INT 12
 892: PPUSH
 893: LD_INT 22
 895: PUSH
 896: LD_INT 1
 898: PUSH
 899: EMPTY
 900: LIST
 901: LIST
 902: PPUSH
 903: CALL_OW 70
 907: IFFALSE 955
 909: GO 911
 911: DISABLE
 912: LD_INT 0
 914: PPUSH
// begin enable ;
 915: ENABLE
// for i in FilterUnitsInArea ( removeCar , [ f_side , 1 ] ) do
 916: LD_ADDR_VAR 0 1
 920: PUSH
 921: LD_INT 12
 923: PPUSH
 924: LD_INT 22
 926: PUSH
 927: LD_INT 1
 929: PUSH
 930: EMPTY
 931: LIST
 932: LIST
 933: PPUSH
 934: CALL_OW 70
 938: PUSH
 939: FOR_IN
 940: IFFALSE 953
// RemoveUnit ( i ) ;
 942: LD_VAR 0 1
 946: PPUSH
 947: CALL_OW 64
 951: GO 939
 953: POP
 954: POP
// end ; end_of_file
 955: PPOPN 1
 957: END
// export function PrepareHeroes ; var i , un ; begin
 958: LD_INT 0
 960: PPUSH
 961: PPUSH
 962: PPUSH
// uc_side := 1 ;
 963: LD_ADDR_OWVAR 20
 967: PUSH
 968: LD_INT 1
 970: ST_TO_ADDR
// uc_nation := 1 ;
 971: LD_ADDR_OWVAR 21
 975: PUSH
 976: LD_INT 1
 978: ST_TO_ADDR
// JMM := PrepareUnit ( 09_JMM , true ) ;
 979: LD_ADDR_EXP 1
 983: PUSH
 984: LD_STRING 09_JMM
 986: PPUSH
 987: LD_INT 1
 989: PPUSH
 990: CALL 5132 0 2
 994: ST_TO_ADDR
// Powell := PrepareUnit ( Powell , false ) ;
 995: LD_ADDR_EXP 2
 999: PUSH
1000: LD_STRING Powell
1002: PPUSH
1003: LD_INT 0
1005: PPUSH
1006: CALL 5132 0 2
1010: ST_TO_ADDR
// Bobby := PrepareUnit ( 09_Bobby , true ) ;
1011: LD_ADDR_EXP 5
1015: PUSH
1016: LD_STRING 09_Bobby
1018: PPUSH
1019: LD_INT 1
1021: PPUSH
1022: CALL 5132 0 2
1026: ST_TO_ADDR
// if Bobby then
1027: LD_EXP 5
1031: IFFALSE 1102
// begin SaveCharacters ( Bobby , 10_Bobby ) ;
1033: LD_EXP 5
1037: PPUSH
1038: LD_STRING 10_Bobby
1040: PPUSH
1041: CALL_OW 38
// PlaceUnitArea ( Bobby , CoreHeroes , false ) ;
1045: LD_EXP 5
1049: PPUSH
1050: LD_INT 10
1052: PPUSH
1053: LD_INT 0
1055: PPUSH
1056: CALL_OW 49
// ComTurnXY ( Bobby , 42 , 35 ) ;
1060: LD_EXP 5
1064: PPUSH
1065: LD_INT 42
1067: PPUSH
1068: LD_INT 35
1070: PPUSH
1071: CALL_OW 118
// if IsPlaced ( Bobby ) then
1075: LD_EXP 5
1079: PPUSH
1080: CALL_OW 305
1084: IFFALSE 1102
// coreHeroesTab := coreHeroesTab ^ Bobby ;
1086: LD_ADDR_EXP 14
1090: PUSH
1091: LD_EXP 14
1095: PUSH
1096: LD_EXP 5
1100: ADD
1101: ST_TO_ADDR
// end ; Brown := PrepareUnit ( 08_Brown , true ) ;
1102: LD_ADDR_EXP 3
1106: PUSH
1107: LD_STRING 08_Brown
1109: PPUSH
1110: LD_INT 1
1112: PPUSH
1113: CALL 5132 0 2
1117: ST_TO_ADDR
// if Brown then
1118: LD_EXP 3
1122: IFFALSE 1207
// begin SaveCharacters ( Brown , 10_Brown ) ;
1124: LD_EXP 3
1128: PPUSH
1129: LD_STRING 10_Brown
1131: PPUSH
1132: CALL_OW 38
// if not IsPlaced ( Bobby ) and IsPlaced ( Brown ) then
1136: LD_EXP 5
1140: PPUSH
1141: CALL_OW 305
1145: NOT
1146: IFFALSE 1159
1148: PUSH
1149: LD_EXP 3
1153: PPUSH
1154: CALL_OW 305
1158: AND
1159: IFFALSE 1207
// begin PlaceUnitArea ( Brown , CoreHeroes , false ) ;
1161: LD_EXP 3
1165: PPUSH
1166: LD_INT 10
1168: PPUSH
1169: LD_INT 0
1171: PPUSH
1172: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
1176: LD_EXP 3
1180: PPUSH
1181: LD_INT 42
1183: PPUSH
1184: LD_INT 35
1186: PPUSH
1187: CALL_OW 118
// coreHeroesTab := coreHeroesTab ^ Brown ;
1191: LD_ADDR_EXP 14
1195: PUSH
1196: LD_EXP 14
1200: PUSH
1201: LD_EXP 3
1205: ADD
1206: ST_TO_ADDR
// end ; end ; Donaldson := PrepareUnit ( 08_Donaldson , true ) ;
1207: LD_ADDR_EXP 4
1211: PUSH
1212: LD_STRING 08_Donaldson
1214: PPUSH
1215: LD_INT 1
1217: PPUSH
1218: CALL 5132 0 2
1222: ST_TO_ADDR
// if Donaldson then
1223: LD_EXP 4
1227: IFFALSE 1324
// begin SaveCharacters ( Donaldson , 10_Donaldson ) ;
1229: LD_EXP 4
1233: PPUSH
1234: LD_STRING 10_Donaldson
1236: PPUSH
1237: CALL_OW 38
// if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) then
1241: LD_EXP 5
1245: PPUSH
1246: CALL_OW 305
1250: NOT
1251: IFFALSE 1265
1253: PUSH
1254: LD_EXP 3
1258: PPUSH
1259: CALL_OW 305
1263: NOT
1264: AND
1265: IFFALSE 1324
// begin PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
1267: LD_EXP 4
1271: PPUSH
1272: LD_INT 10
1274: PPUSH
1275: LD_INT 0
1277: PPUSH
1278: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
1282: LD_EXP 4
1286: PPUSH
1287: LD_INT 42
1289: PPUSH
1290: LD_INT 35
1292: PPUSH
1293: CALL_OW 118
// if IsPlaced ( Donaldson ) then
1297: LD_EXP 4
1301: PPUSH
1302: CALL_OW 305
1306: IFFALSE 1324
// coreHeroesTab := coreHeroesTab ^ Donaldson ;
1308: LD_ADDR_EXP 14
1312: PUSH
1313: LD_EXP 14
1317: PUSH
1318: LD_EXP 4
1322: ADD
1323: ST_TO_ADDR
// end ; end ; Frank := PrepareUnit ( 08_Frank , true ) ;
1324: LD_ADDR_EXP 8
1328: PUSH
1329: LD_STRING 08_Frank
1331: PPUSH
1332: LD_INT 1
1334: PPUSH
1335: CALL 5132 0 2
1339: ST_TO_ADDR
// if Frank then
1340: LD_EXP 8
1344: IFFALSE 1455
// begin SaveCharacters ( Frank , 10_Frank ) ;
1346: LD_EXP 8
1350: PPUSH
1351: LD_STRING 10_Frank
1353: PPUSH
1354: CALL_OW 38
// if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
1358: LD_EXP 5
1362: PPUSH
1363: CALL_OW 305
1367: NOT
1368: IFFALSE 1382
1370: PUSH
1371: LD_EXP 3
1375: PPUSH
1376: CALL_OW 305
1380: NOT
1381: AND
1382: IFFALSE 1396
1384: PUSH
1385: LD_EXP 4
1389: PPUSH
1390: CALL_OW 305
1394: NOT
1395: AND
1396: IFFALSE 1455
// begin PlaceUnitArea ( Frank , CoreHeroes , false ) ;
1398: LD_EXP 8
1402: PPUSH
1403: LD_INT 10
1405: PPUSH
1406: LD_INT 0
1408: PPUSH
1409: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
1413: LD_EXP 8
1417: PPUSH
1418: LD_INT 42
1420: PPUSH
1421: LD_INT 35
1423: PPUSH
1424: CALL_OW 118
// if IsPlaced ( Frank ) then
1428: LD_EXP 8
1432: PPUSH
1433: CALL_OW 305
1437: IFFALSE 1455
// coreHeroesTab := coreHeroesTab ^ Frank ;
1439: LD_ADDR_EXP 14
1443: PUSH
1444: LD_EXP 14
1448: PUSH
1449: LD_EXP 8
1453: ADD
1454: ST_TO_ADDR
// end ; end ; Houten := PrepareUnit ( 09_Houten , true ) ;
1455: LD_ADDR_EXP 9
1459: PUSH
1460: LD_STRING 09_Houten
1462: PPUSH
1463: LD_INT 1
1465: PPUSH
1466: CALL 5132 0 2
1470: ST_TO_ADDR
// if Houten then
1471: LD_EXP 9
1475: IFFALSE 1600
// begin SaveCharacters ( Houten , 10_Houten ) ;
1477: LD_EXP 9
1481: PPUSH
1482: LD_STRING 10_Houten
1484: PPUSH
1485: CALL_OW 38
// if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
1489: LD_EXP 5
1493: PPUSH
1494: CALL_OW 305
1498: NOT
1499: IFFALSE 1513
1501: PUSH
1502: LD_EXP 3
1506: PPUSH
1507: CALL_OW 305
1511: NOT
1512: AND
1513: IFFALSE 1527
1515: PUSH
1516: LD_EXP 4
1520: PPUSH
1521: CALL_OW 305
1525: NOT
1526: AND
1527: IFFALSE 1541
1529: PUSH
1530: LD_EXP 8
1534: PPUSH
1535: CALL_OW 305
1539: NOT
1540: AND
1541: IFFALSE 1600
// begin PlaceUnitArea ( Houten , CoreHeroes , false ) ;
1543: LD_EXP 9
1547: PPUSH
1548: LD_INT 10
1550: PPUSH
1551: LD_INT 0
1553: PPUSH
1554: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
1558: LD_EXP 9
1562: PPUSH
1563: LD_INT 42
1565: PPUSH
1566: LD_INT 35
1568: PPUSH
1569: CALL_OW 118
// if IsPlaced ( Houten ) then
1573: LD_EXP 9
1577: PPUSH
1578: CALL_OW 305
1582: IFFALSE 1600
// coreHeroesTab := coreHeroesTab ^ Houten ;
1584: LD_ADDR_EXP 14
1588: PUSH
1589: LD_EXP 14
1593: PUSH
1594: LD_EXP 9
1598: ADD
1599: ST_TO_ADDR
// end ; end ; Cyrus := PrepareUnit ( 09_Cyrus , true ) ;
1600: LD_ADDR_EXP 6
1604: PUSH
1605: LD_STRING 09_Cyrus
1607: PPUSH
1608: LD_INT 1
1610: PPUSH
1611: CALL 5132 0 2
1615: ST_TO_ADDR
// if Cyrus then
1616: LD_EXP 6
1620: IFFALSE 1680
// begin PlaceUnitArea ( Cyrus , CoreHeroes , false ) ;
1622: LD_EXP 6
1626: PPUSH
1627: LD_INT 10
1629: PPUSH
1630: LD_INT 0
1632: PPUSH
1633: CALL_OW 49
// ComTurnXY ( Cyrus , 42 , 35 ) ;
1637: LD_EXP 6
1641: PPUSH
1642: LD_INT 42
1644: PPUSH
1645: LD_INT 35
1647: PPUSH
1648: CALL_OW 118
// coreHeroesTab := coreHeroesTab ^ Cyrus ;
1652: LD_ADDR_EXP 14
1656: PUSH
1657: LD_EXP 14
1661: PUSH
1662: LD_EXP 6
1666: ADD
1667: ST_TO_ADDR
// SaveCharacters ( Cyrus , 10_Cyrus ) ;
1668: LD_EXP 6
1672: PPUSH
1673: LD_STRING 10_Cyrus
1675: PPUSH
1676: CALL_OW 38
// end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and Brown then
1680: LD_EXP 6
1684: PPUSH
1685: CALL_OW 305
1689: NOT
1690: IFFALSE 1704
1692: PUSH
1693: LD_EXP 3
1697: PPUSH
1698: CALL_OW 305
1702: NOT
1703: AND
1704: IFFALSE 1712
1706: PUSH
1707: LD_EXP 3
1711: AND
1712: IFFALSE 1771
// begin PlaceUnitArea ( Brown , CoreHeroes , false ) ;
1714: LD_EXP 3
1718: PPUSH
1719: LD_INT 10
1721: PPUSH
1722: LD_INT 0
1724: PPUSH
1725: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
1729: LD_EXP 3
1733: PPUSH
1734: LD_INT 42
1736: PPUSH
1737: LD_INT 35
1739: PPUSH
1740: CALL_OW 118
// if IsPlaced ( Brown ) then
1744: LD_EXP 3
1748: PPUSH
1749: CALL_OW 305
1753: IFFALSE 1771
// coreHeroesTab := coreHeroesTab ^ Brown ;
1755: LD_ADDR_EXP 14
1759: PUSH
1760: LD_EXP 14
1764: PUSH
1765: LD_EXP 3
1769: ADD
1770: ST_TO_ADDR
// end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and Donaldson then
1771: LD_EXP 6
1775: PPUSH
1776: CALL_OW 305
1780: NOT
1781: IFFALSE 1795
1783: PUSH
1784: LD_EXP 3
1788: PPUSH
1789: CALL_OW 305
1793: NOT
1794: AND
1795: IFFALSE 1809
1797: PUSH
1798: LD_EXP 4
1802: PPUSH
1803: CALL_OW 305
1807: NOT
1808: AND
1809: IFFALSE 1817
1811: PUSH
1812: LD_EXP 4
1816: AND
1817: IFFALSE 1876
// begin PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
1819: LD_EXP 4
1823: PPUSH
1824: LD_INT 10
1826: PPUSH
1827: LD_INT 0
1829: PPUSH
1830: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
1834: LD_EXP 4
1838: PPUSH
1839: LD_INT 42
1841: PPUSH
1842: LD_INT 35
1844: PPUSH
1845: CALL_OW 118
// if IsPlaced ( Donaldson ) then
1849: LD_EXP 4
1853: PPUSH
1854: CALL_OW 305
1858: IFFALSE 1876
// begin coreHeroesTab := coreHeroesTab ^ Donaldson ;
1860: LD_ADDR_EXP 14
1864: PUSH
1865: LD_EXP 14
1869: PUSH
1870: LD_EXP 4
1874: ADD
1875: ST_TO_ADDR
// end ; end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and Frank then
1876: LD_EXP 6
1880: PPUSH
1881: CALL_OW 305
1885: NOT
1886: IFFALSE 1900
1888: PUSH
1889: LD_EXP 3
1893: PPUSH
1894: CALL_OW 305
1898: NOT
1899: AND
1900: IFFALSE 1914
1902: PUSH
1903: LD_EXP 4
1907: PPUSH
1908: CALL_OW 305
1912: NOT
1913: AND
1914: IFFALSE 1928
1916: PUSH
1917: LD_EXP 8
1921: PPUSH
1922: CALL_OW 305
1926: NOT
1927: AND
1928: IFFALSE 1936
1930: PUSH
1931: LD_EXP 8
1935: AND
1936: IFFALSE 1995
// begin PlaceUnitArea ( Frank , CoreHeroes , false ) ;
1938: LD_EXP 8
1942: PPUSH
1943: LD_INT 10
1945: PPUSH
1946: LD_INT 0
1948: PPUSH
1949: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
1953: LD_EXP 8
1957: PPUSH
1958: LD_INT 42
1960: PPUSH
1961: LD_INT 35
1963: PPUSH
1964: CALL_OW 118
// if IsPlaced ( Frank ) then
1968: LD_EXP 8
1972: PPUSH
1973: CALL_OW 305
1977: IFFALSE 1995
// coreHeroesTab := coreHeroesTab ^ Frank ;
1979: LD_ADDR_EXP 14
1983: PUSH
1984: LD_EXP 14
1988: PUSH
1989: LD_EXP 8
1993: ADD
1994: ST_TO_ADDR
// end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) and Houten then
1995: LD_EXP 6
1999: PPUSH
2000: CALL_OW 305
2004: NOT
2005: IFFALSE 2019
2007: PUSH
2008: LD_EXP 3
2012: PPUSH
2013: CALL_OW 305
2017: NOT
2018: AND
2019: IFFALSE 2033
2021: PUSH
2022: LD_EXP 4
2026: PPUSH
2027: CALL_OW 305
2031: NOT
2032: AND
2033: IFFALSE 2047
2035: PUSH
2036: LD_EXP 8
2040: PPUSH
2041: CALL_OW 305
2045: NOT
2046: AND
2047: IFFALSE 2061
2049: PUSH
2050: LD_EXP 9
2054: PPUSH
2055: CALL_OW 305
2059: NOT
2060: AND
2061: IFFALSE 2069
2063: PUSH
2064: LD_EXP 9
2068: AND
2069: IFFALSE 2128
// begin PlaceUnitArea ( Houten , CoreHeroes , false ) ;
2071: LD_EXP 9
2075: PPUSH
2076: LD_INT 10
2078: PPUSH
2079: LD_INT 0
2081: PPUSH
2082: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
2086: LD_EXP 9
2090: PPUSH
2091: LD_INT 42
2093: PPUSH
2094: LD_INT 35
2096: PPUSH
2097: CALL_OW 118
// if IsPlaced ( Houten ) then
2101: LD_EXP 9
2105: PPUSH
2106: CALL_OW 305
2110: IFFALSE 2128
// coreHeroesTab := coreHeroesTab ^ Houten ;
2112: LD_ADDR_EXP 14
2116: PUSH
2117: LD_EXP 14
2121: PUSH
2122: LD_EXP 9
2126: ADD
2127: ST_TO_ADDR
// end ; Lisa := PrepareUnit ( 08_Lisa , true ) ;
2128: LD_ADDR_EXP 7
2132: PUSH
2133: LD_STRING 08_Lisa
2135: PPUSH
2136: LD_INT 1
2138: PPUSH
2139: CALL 5132 0 2
2143: ST_TO_ADDR
// if Lisa then
2144: LD_EXP 7
2148: IFFALSE 2219
// begin SaveCharacters ( Lisa , 10_Lisa ) ;
2150: LD_EXP 7
2154: PPUSH
2155: LD_STRING 10_Lisa
2157: PPUSH
2158: CALL_OW 38
// PlaceUnitArea ( Lisa , CoreHeroes , false ) ;
2162: LD_EXP 7
2166: PPUSH
2167: LD_INT 10
2169: PPUSH
2170: LD_INT 0
2172: PPUSH
2173: CALL_OW 49
// ComTurnXY ( Lisa , 42 , 35 ) ;
2177: LD_EXP 7
2181: PPUSH
2182: LD_INT 42
2184: PPUSH
2185: LD_INT 35
2187: PPUSH
2188: CALL_OW 118
// if IsPlaced ( Lisa ) then
2192: LD_EXP 7
2196: PPUSH
2197: CALL_OW 305
2201: IFFALSE 2219
// coreHeroesTab := coreHeroesTab ^ Lisa ;
2203: LD_ADDR_EXP 14
2207: PUSH
2208: LD_EXP 14
2212: PUSH
2213: LD_EXP 7
2217: ADD
2218: ST_TO_ADDR
// end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and Brown then
2219: LD_EXP 7
2223: PPUSH
2224: CALL_OW 305
2228: NOT
2229: IFFALSE 2243
2231: PUSH
2232: LD_EXP 3
2236: PPUSH
2237: CALL_OW 305
2241: NOT
2242: AND
2243: IFFALSE 2251
2245: PUSH
2246: LD_EXP 3
2250: AND
2251: IFFALSE 2310
// begin PlaceUnitArea ( Brown , CoreHeroes , false ) ;
2253: LD_EXP 3
2257: PPUSH
2258: LD_INT 10
2260: PPUSH
2261: LD_INT 0
2263: PPUSH
2264: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
2268: LD_EXP 3
2272: PPUSH
2273: LD_INT 42
2275: PPUSH
2276: LD_INT 35
2278: PPUSH
2279: CALL_OW 118
// if IsPlaced ( Brown ) then
2283: LD_EXP 3
2287: PPUSH
2288: CALL_OW 305
2292: IFFALSE 2310
// coreHeroesTab := coreHeroesTab ^ Brown ;
2294: LD_ADDR_EXP 14
2298: PUSH
2299: LD_EXP 14
2303: PUSH
2304: LD_EXP 3
2308: ADD
2309: ST_TO_ADDR
// end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and Donaldson then
2310: LD_EXP 7
2314: PPUSH
2315: CALL_OW 305
2319: NOT
2320: IFFALSE 2334
2322: PUSH
2323: LD_EXP 3
2327: PPUSH
2328: CALL_OW 305
2332: NOT
2333: AND
2334: IFFALSE 2348
2336: PUSH
2337: LD_EXP 4
2341: PPUSH
2342: CALL_OW 305
2346: NOT
2347: AND
2348: IFFALSE 2356
2350: PUSH
2351: LD_EXP 4
2355: AND
2356: IFFALSE 2415
// begin PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
2358: LD_EXP 4
2362: PPUSH
2363: LD_INT 10
2365: PPUSH
2366: LD_INT 0
2368: PPUSH
2369: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
2373: LD_EXP 4
2377: PPUSH
2378: LD_INT 42
2380: PPUSH
2381: LD_INT 35
2383: PPUSH
2384: CALL_OW 118
// if IsPlaced ( Donaldson ) then
2388: LD_EXP 4
2392: PPUSH
2393: CALL_OW 305
2397: IFFALSE 2415
// coreHeroesTab := coreHeroesTab ^ Donaldson ;
2399: LD_ADDR_EXP 14
2403: PUSH
2404: LD_EXP 14
2408: PUSH
2409: LD_EXP 4
2413: ADD
2414: ST_TO_ADDR
// end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and Frank then
2415: LD_EXP 7
2419: PPUSH
2420: CALL_OW 305
2424: NOT
2425: IFFALSE 2439
2427: PUSH
2428: LD_EXP 3
2432: PPUSH
2433: CALL_OW 305
2437: NOT
2438: AND
2439: IFFALSE 2453
2441: PUSH
2442: LD_EXP 4
2446: PPUSH
2447: CALL_OW 305
2451: NOT
2452: AND
2453: IFFALSE 2467
2455: PUSH
2456: LD_EXP 8
2460: PPUSH
2461: CALL_OW 305
2465: NOT
2466: AND
2467: IFFALSE 2475
2469: PUSH
2470: LD_EXP 8
2474: AND
2475: IFFALSE 2534
// begin PlaceUnitArea ( Frank , CoreHeroes , false ) ;
2477: LD_EXP 8
2481: PPUSH
2482: LD_INT 10
2484: PPUSH
2485: LD_INT 0
2487: PPUSH
2488: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
2492: LD_EXP 8
2496: PPUSH
2497: LD_INT 42
2499: PPUSH
2500: LD_INT 35
2502: PPUSH
2503: CALL_OW 118
// if IsPlaced ( Frank ) then
2507: LD_EXP 8
2511: PPUSH
2512: CALL_OW 305
2516: IFFALSE 2534
// coreHeroesTab := coreHeroesTab ^ Frank ;
2518: LD_ADDR_EXP 14
2522: PUSH
2523: LD_EXP 14
2527: PUSH
2528: LD_EXP 8
2532: ADD
2533: ST_TO_ADDR
// end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) and Houten then
2534: LD_EXP 7
2538: PPUSH
2539: CALL_OW 305
2543: NOT
2544: IFFALSE 2558
2546: PUSH
2547: LD_EXP 3
2551: PPUSH
2552: CALL_OW 305
2556: NOT
2557: AND
2558: IFFALSE 2572
2560: PUSH
2561: LD_EXP 4
2565: PPUSH
2566: CALL_OW 305
2570: NOT
2571: AND
2572: IFFALSE 2586
2574: PUSH
2575: LD_EXP 8
2579: PPUSH
2580: CALL_OW 305
2584: NOT
2585: AND
2586: IFFALSE 2600
2588: PUSH
2589: LD_EXP 9
2593: PPUSH
2594: CALL_OW 305
2598: NOT
2599: AND
2600: IFFALSE 2608
2602: PUSH
2603: LD_EXP 9
2607: AND
2608: IFFALSE 2667
// begin PlaceUnitArea ( Houten , CoreHeroes , false ) ;
2610: LD_EXP 9
2614: PPUSH
2615: LD_INT 10
2617: PPUSH
2618: LD_INT 0
2620: PPUSH
2621: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
2625: LD_EXP 9
2629: PPUSH
2630: LD_INT 42
2632: PPUSH
2633: LD_INT 35
2635: PPUSH
2636: CALL_OW 118
// if IsPlaced ( Houten ) then
2640: LD_EXP 9
2644: PPUSH
2645: CALL_OW 305
2649: IFFALSE 2667
// coreHeroesTab := coreHeroesTab ^ Houten ;
2651: LD_ADDR_EXP 14
2655: PUSH
2656: LD_EXP 14
2660: PUSH
2661: LD_EXP 9
2665: ADD
2666: ST_TO_ADDR
// end ; Gary := PrepareUnit ( 09_Gary , true ) ;
2667: LD_ADDR_EXP 10
2671: PUSH
2672: LD_STRING 09_Gary
2674: PPUSH
2675: LD_INT 1
2677: PPUSH
2678: CALL 5132 0 2
2682: ST_TO_ADDR
// if Gary then
2683: LD_EXP 10
2687: IFFALSE 2758
// begin SaveCharacters ( Gary , 10_Gary ) ;
2689: LD_EXP 10
2693: PPUSH
2694: LD_STRING 10_Gary
2696: PPUSH
2697: CALL_OW 38
// PlaceUnitArea ( Gary , CoreHeroes , false ) ;
2701: LD_EXP 10
2705: PPUSH
2706: LD_INT 10
2708: PPUSH
2709: LD_INT 0
2711: PPUSH
2712: CALL_OW 49
// ComTurnXY ( Gary , 42 , 35 ) ;
2716: LD_EXP 10
2720: PPUSH
2721: LD_INT 42
2723: PPUSH
2724: LD_INT 35
2726: PPUSH
2727: CALL_OW 118
// if IsPlaced ( Gary ) then
2731: LD_EXP 10
2735: PPUSH
2736: CALL_OW 305
2740: IFFALSE 2758
// coreHeroesTab := coreHeroesTab ^ Gary ;
2742: LD_ADDR_EXP 14
2746: PUSH
2747: LD_EXP 14
2751: PUSH
2752: LD_EXP 10
2756: ADD
2757: ST_TO_ADDR
// end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) and Brown then
2758: LD_EXP 10
2762: PPUSH
2763: CALL_OW 305
2767: NOT
2768: IFFALSE 2782
2770: PUSH
2771: LD_EXP 3
2775: PPUSH
2776: CALL_OW 305
2780: NOT
2781: AND
2782: IFFALSE 2790
2784: PUSH
2785: LD_EXP 3
2789: AND
2790: IFFALSE 2849
// begin PlaceUnitArea ( Brown , CoreHeroes , false ) ;
2792: LD_EXP 3
2796: PPUSH
2797: LD_INT 10
2799: PPUSH
2800: LD_INT 0
2802: PPUSH
2803: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
2807: LD_EXP 3
2811: PPUSH
2812: LD_INT 42
2814: PPUSH
2815: LD_INT 35
2817: PPUSH
2818: CALL_OW 118
// if IsPlaced ( Brown ) then
2822: LD_EXP 3
2826: PPUSH
2827: CALL_OW 305
2831: IFFALSE 2849
// coreHeroesTab := coreHeroesTab ^ Brown ;
2833: LD_ADDR_EXP 14
2837: PUSH
2838: LD_EXP 14
2842: PUSH
2843: LD_EXP 3
2847: ADD
2848: ST_TO_ADDR
// end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and Donaldson then
2849: LD_EXP 10
2853: PPUSH
2854: CALL_OW 305
2858: NOT
2859: IFFALSE 2873
2861: PUSH
2862: LD_EXP 3
2866: PPUSH
2867: CALL_OW 305
2871: NOT
2872: AND
2873: IFFALSE 2887
2875: PUSH
2876: LD_EXP 4
2880: PPUSH
2881: CALL_OW 305
2885: NOT
2886: AND
2887: IFFALSE 2895
2889: PUSH
2890: LD_EXP 4
2894: AND
2895: IFFALSE 2954
// begin PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
2897: LD_EXP 4
2901: PPUSH
2902: LD_INT 10
2904: PPUSH
2905: LD_INT 0
2907: PPUSH
2908: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
2912: LD_EXP 4
2916: PPUSH
2917: LD_INT 42
2919: PPUSH
2920: LD_INT 35
2922: PPUSH
2923: CALL_OW 118
// if IsPlaced ( Donaldson ) then
2927: LD_EXP 4
2931: PPUSH
2932: CALL_OW 305
2936: IFFALSE 2954
// coreHeroesTab := coreHeroesTab ^ Donaldson ;
2938: LD_ADDR_EXP 14
2942: PUSH
2943: LD_EXP 14
2947: PUSH
2948: LD_EXP 4
2952: ADD
2953: ST_TO_ADDR
// end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and Frank then
2954: LD_EXP 10
2958: PPUSH
2959: CALL_OW 305
2963: NOT
2964: IFFALSE 2978
2966: PUSH
2967: LD_EXP 3
2971: PPUSH
2972: CALL_OW 305
2976: NOT
2977: AND
2978: IFFALSE 2992
2980: PUSH
2981: LD_EXP 4
2985: PPUSH
2986: CALL_OW 305
2990: NOT
2991: AND
2992: IFFALSE 3006
2994: PUSH
2995: LD_EXP 8
2999: PPUSH
3000: CALL_OW 305
3004: NOT
3005: AND
3006: IFFALSE 3014
3008: PUSH
3009: LD_EXP 8
3013: AND
3014: IFFALSE 3073
// begin PlaceUnitArea ( Frank , CoreHeroes , false ) ;
3016: LD_EXP 8
3020: PPUSH
3021: LD_INT 10
3023: PPUSH
3024: LD_INT 0
3026: PPUSH
3027: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
3031: LD_EXP 8
3035: PPUSH
3036: LD_INT 42
3038: PPUSH
3039: LD_INT 35
3041: PPUSH
3042: CALL_OW 118
// if IsPlaced ( Frank ) then
3046: LD_EXP 8
3050: PPUSH
3051: CALL_OW 305
3055: IFFALSE 3073
// coreHeroesTab := coreHeroesTab ^ Frank ;
3057: LD_ADDR_EXP 14
3061: PUSH
3062: LD_EXP 14
3066: PUSH
3067: LD_EXP 8
3071: ADD
3072: ST_TO_ADDR
// end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) and Houten then
3073: LD_EXP 10
3077: PPUSH
3078: CALL_OW 305
3082: NOT
3083: IFFALSE 3097
3085: PUSH
3086: LD_EXP 3
3090: PPUSH
3091: CALL_OW 305
3095: NOT
3096: AND
3097: IFFALSE 3111
3099: PUSH
3100: LD_EXP 4
3104: PPUSH
3105: CALL_OW 305
3109: NOT
3110: AND
3111: IFFALSE 3125
3113: PUSH
3114: LD_EXP 8
3118: PPUSH
3119: CALL_OW 305
3123: NOT
3124: AND
3125: IFFALSE 3139
3127: PUSH
3128: LD_EXP 9
3132: PPUSH
3133: CALL_OW 305
3137: NOT
3138: AND
3139: IFFALSE 3147
3141: PUSH
3142: LD_EXP 9
3146: AND
3147: IFFALSE 3206
// begin PlaceUnitArea ( Houten , CoreHeroes , false ) ;
3149: LD_EXP 9
3153: PPUSH
3154: LD_INT 10
3156: PPUSH
3157: LD_INT 0
3159: PPUSH
3160: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
3164: LD_EXP 9
3168: PPUSH
3169: LD_INT 42
3171: PPUSH
3172: LD_INT 35
3174: PPUSH
3175: CALL_OW 118
// if IsPlaced ( Houten ) then
3179: LD_EXP 9
3183: PPUSH
3184: CALL_OW 305
3188: IFFALSE 3206
// coreHeroesTab := coreHeroesTab ^ Houten ;
3190: LD_ADDR_EXP 14
3194: PUSH
3195: LD_EXP 14
3199: PUSH
3200: LD_EXP 9
3204: ADD
3205: ST_TO_ADDR
// end ; for i := 1 to 5 - coreHeroesTab do
3206: LD_ADDR_VAR 0 2
3210: PUSH
3211: DOUBLE
3212: LD_INT 1
3214: DEC
3215: ST_TO_ADDR
3216: LD_INT 5
3218: PUSH
3219: LD_EXP 14
3223: MINUS
3224: PUSH
3225: FOR_TO
3226: IFFALSE 3350
// begin hc_gallery =  ;
3228: LD_ADDR_OWVAR 33
3232: PUSH
3233: LD_STRING 
3235: ST_TO_ADDR
// hc_name =  ;
3236: LD_ADDR_OWVAR 26
3240: PUSH
3241: LD_STRING 
3243: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
3244: LD_INT 0
3246: PPUSH
3247: LD_INT 1
3249: PUSH
3250: LD_INT 2
3252: PUSH
3253: LD_INT 3
3255: PUSH
3256: LD_INT 4
3258: PUSH
3259: EMPTY
3260: LIST
3261: LIST
3262: LIST
3263: LIST
3264: PUSH
3265: LD_INT 1
3267: PPUSH
3268: LD_INT 4
3270: PPUSH
3271: CALL_OW 12
3275: ARRAY
3276: PPUSH
3277: LD_INT 4
3279: PPUSH
3280: LD_INT 6
3282: PPUSH
3283: CALL_OW 12
3287: PPUSH
3288: CALL_OW 380
// un := CreateHuman ;
3292: LD_ADDR_VAR 0 3
3296: PUSH
3297: CALL_OW 44
3301: ST_TO_ADDR
// coreHeroesTab := coreHeroesTab ^ un ;
3302: LD_ADDR_EXP 14
3306: PUSH
3307: LD_EXP 14
3311: PUSH
3312: LD_VAR 0 3
3316: ADD
3317: ST_TO_ADDR
// PlaceUnitArea ( un , CoreHeroes , false ) ;
3318: LD_VAR 0 3
3322: PPUSH
3323: LD_INT 10
3325: PPUSH
3326: LD_INT 0
3328: PPUSH
3329: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
3333: LD_VAR 0 3
3337: PPUSH
3338: LD_INT 42
3340: PPUSH
3341: LD_INT 35
3343: PPUSH
3344: CALL_OW 118
// end ;
3348: GO 3225
3350: POP
3351: POP
// siberite := LoadVariable ( 09_SibRes , 0 ) ;
3352: LD_ADDR_EXP 17
3356: PUSH
3357: LD_STRING 09_SibRes
3359: PPUSH
3360: LD_INT 0
3362: PPUSH
3363: CALL_OW 30
3367: ST_TO_ADDR
// if siberite > 500 then
3368: LD_EXP 17
3372: PUSH
3373: LD_INT 500
3375: GREATER
3376: IFFALSE 3386
// siberite := 500 ;
3378: LD_ADDR_EXP 17
3382: PUSH
3383: LD_INT 500
3385: ST_TO_ADDR
// others08 := CreateCharacterSet ( 08_other_survivors ) ;
3386: LD_ADDR_EXP 11
3390: PUSH
3391: LD_STRING 08_other_survivors
3393: PPUSH
3394: CALL_OW 31
3398: ST_TO_ADDR
// if siberite >= 200 then
3399: LD_EXP 17
3403: PUSH
3404: LD_INT 200
3406: GREATEREQUAL
3407: IFFALSE 4312
// begin if not IsPlaced ( Brown ) and Brown then
3409: LD_EXP 3
3413: PPUSH
3414: CALL_OW 305
3418: NOT
3419: IFFALSE 3427
3421: PUSH
3422: LD_EXP 3
3426: AND
3427: IFFALSE 3486
// begin PlaceUnitArea ( Brown , AddHeroes , false ) ;
3429: LD_EXP 3
3433: PPUSH
3434: LD_INT 11
3436: PPUSH
3437: LD_INT 0
3439: PPUSH
3440: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
3444: LD_EXP 3
3448: PPUSH
3449: LD_INT 42
3451: PPUSH
3452: LD_INT 35
3454: PPUSH
3455: CALL_OW 118
// if IsPlaced ( Brown ) then
3459: LD_EXP 3
3463: PPUSH
3464: CALL_OW 305
3468: IFFALSE 3486
// addHeroesTab := addHeroesTab ^ Brown ;
3470: LD_ADDR_EXP 15
3474: PUSH
3475: LD_EXP 15
3479: PUSH
3480: LD_EXP 3
3484: ADD
3485: ST_TO_ADDR
// end ; if not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and Donaldson then
3486: LD_EXP 3
3490: PPUSH
3491: CALL_OW 305
3495: NOT
3496: IFFALSE 3510
3498: PUSH
3499: LD_EXP 4
3503: PPUSH
3504: CALL_OW 305
3508: NOT
3509: AND
3510: IFFALSE 3518
3512: PUSH
3513: LD_EXP 4
3517: AND
3518: IFFALSE 3577
// begin PlaceUnitArea ( Donaldson , addHeroes , false ) ;
3520: LD_EXP 4
3524: PPUSH
3525: LD_INT 11
3527: PPUSH
3528: LD_INT 0
3530: PPUSH
3531: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
3535: LD_EXP 4
3539: PPUSH
3540: LD_INT 42
3542: PPUSH
3543: LD_INT 35
3545: PPUSH
3546: CALL_OW 118
// if IsPlaced ( Donaldson ) then
3550: LD_EXP 4
3554: PPUSH
3555: CALL_OW 305
3559: IFFALSE 3577
// addHeroesTab := addHeroesTab ^ Donaldson ;
3561: LD_ADDR_EXP 15
3565: PUSH
3566: LD_EXP 15
3570: PUSH
3571: LD_EXP 4
3575: ADD
3576: ST_TO_ADDR
// end ; if not IsPlaced ( Brown ) and not IsPlaced ( Frank ) and Frank then
3577: LD_EXP 3
3581: PPUSH
3582: CALL_OW 305
3586: NOT
3587: IFFALSE 3601
3589: PUSH
3590: LD_EXP 8
3594: PPUSH
3595: CALL_OW 305
3599: NOT
3600: AND
3601: IFFALSE 3609
3603: PUSH
3604: LD_EXP 8
3608: AND
3609: IFFALSE 3668
// begin PlaceUnitArea ( Frank , addHeroes , false ) ;
3611: LD_EXP 8
3615: PPUSH
3616: LD_INT 11
3618: PPUSH
3619: LD_INT 0
3621: PPUSH
3622: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
3626: LD_EXP 8
3630: PPUSH
3631: LD_INT 42
3633: PPUSH
3634: LD_INT 35
3636: PPUSH
3637: CALL_OW 118
// if IsPlaced ( Frank ) then
3641: LD_EXP 8
3645: PPUSH
3646: CALL_OW 305
3650: IFFALSE 3668
// addHeroesTab := addHeroesTab ^ Frank ;
3652: LD_ADDR_EXP 15
3656: PUSH
3657: LD_EXP 15
3661: PUSH
3662: LD_EXP 8
3666: ADD
3667: ST_TO_ADDR
// end ; if not IsPlaced ( Brown ) and not IsPlaced ( Houten ) then
3668: LD_EXP 3
3672: PPUSH
3673: CALL_OW 305
3677: NOT
3678: IFFALSE 3692
3680: PUSH
3681: LD_EXP 9
3685: PPUSH
3686: CALL_OW 305
3690: NOT
3691: AND
3692: IFFALSE 3753
// begin PlaceUnitArea ( Houten , addHeroes , false ) ;
3694: LD_EXP 9
3698: PPUSH
3699: LD_INT 11
3701: PPUSH
3702: LD_INT 0
3704: PPUSH
3705: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
3709: LD_EXP 9
3713: PPUSH
3714: LD_INT 42
3716: PPUSH
3717: LD_INT 35
3719: PPUSH
3720: CALL_OW 118
// if IsPlaced ( Houten ) then
3724: LD_EXP 9
3728: PPUSH
3729: CALL_OW 305
3733: IFFALSE 3751
// addHeroesTab := addHeroesTab ^ Houten ;
3735: LD_ADDR_EXP 15
3739: PUSH
3740: LD_EXP 15
3744: PUSH
3745: LD_EXP 9
3749: ADD
3750: ST_TO_ADDR
// end else
3751: GO 3829
// begin PlaceUnitArea ( others08 [ 1 ] , addHeroes , false ) ;
3753: LD_EXP 11
3757: PUSH
3758: LD_INT 1
3760: ARRAY
3761: PPUSH
3762: LD_INT 11
3764: PPUSH
3765: LD_INT 0
3767: PPUSH
3768: CALL_OW 49
// ComTurnXY ( others08 [ 1 ] , 42 , 35 ) ;
3772: LD_EXP 11
3776: PUSH
3777: LD_INT 1
3779: ARRAY
3780: PPUSH
3781: LD_INT 42
3783: PPUSH
3784: LD_INT 35
3786: PPUSH
3787: CALL_OW 118
// addHeroesTab := addHeroesTab ^ others08 [ 1 ] ;
3791: LD_ADDR_EXP 15
3795: PUSH
3796: LD_EXP 15
3800: PUSH
3801: LD_EXP 11
3805: PUSH
3806: LD_INT 1
3808: ARRAY
3809: ADD
3810: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
3811: LD_ADDR_EXP 11
3815: PUSH
3816: LD_EXP 11
3820: PPUSH
3821: LD_INT 1
3823: PPUSH
3824: CALL_OW 3
3828: ST_TO_ADDR
// end ; if not IsPlaced ( Donaldson ) and Donaldson then
3829: LD_EXP 4
3833: PPUSH
3834: CALL_OW 305
3838: NOT
3839: IFFALSE 3847
3841: PUSH
3842: LD_EXP 4
3846: AND
3847: IFFALSE 3906
// begin PlaceUnitArea ( Donaldson , AddHeroes , false ) ;
3849: LD_EXP 4
3853: PPUSH
3854: LD_INT 11
3856: PPUSH
3857: LD_INT 0
3859: PPUSH
3860: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
3864: LD_EXP 4
3868: PPUSH
3869: LD_INT 42
3871: PPUSH
3872: LD_INT 35
3874: PPUSH
3875: CALL_OW 118
// if IsPlaced ( Donaldson ) then
3879: LD_EXP 4
3883: PPUSH
3884: CALL_OW 305
3888: IFFALSE 3906
// addHeroesTab := addHeroesTab ^ Donaldson ;
3890: LD_ADDR_EXP 15
3894: PUSH
3895: LD_EXP 15
3899: PUSH
3900: LD_EXP 4
3904: ADD
3905: ST_TO_ADDR
// end ; if not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and Frank then
3906: LD_EXP 4
3910: PPUSH
3911: CALL_OW 305
3915: NOT
3916: IFFALSE 3930
3918: PUSH
3919: LD_EXP 8
3923: PPUSH
3924: CALL_OW 305
3928: NOT
3929: AND
3930: IFFALSE 3938
3932: PUSH
3933: LD_EXP 8
3937: AND
3938: IFFALSE 3997
// begin PlaceUnitArea ( Frank , addHeroes , false ) ;
3940: LD_EXP 8
3944: PPUSH
3945: LD_INT 11
3947: PPUSH
3948: LD_INT 0
3950: PPUSH
3951: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
3955: LD_EXP 8
3959: PPUSH
3960: LD_INT 42
3962: PPUSH
3963: LD_INT 35
3965: PPUSH
3966: CALL_OW 118
// if IsPlaced ( Frank ) then
3970: LD_EXP 8
3974: PPUSH
3975: CALL_OW 305
3979: IFFALSE 3997
// addHeroesTab := addHeroesTab ^ Frank ;
3981: LD_ADDR_EXP 15
3985: PUSH
3986: LD_EXP 15
3990: PUSH
3991: LD_EXP 8
3995: ADD
3996: ST_TO_ADDR
// end ; if not IsPlaced ( Donaldson ) and not IsPlaced ( Houten ) and Houten then
3997: LD_EXP 4
4001: PPUSH
4002: CALL_OW 305
4006: NOT
4007: IFFALSE 4021
4009: PUSH
4010: LD_EXP 9
4014: PPUSH
4015: CALL_OW 305
4019: NOT
4020: AND
4021: IFFALSE 4029
4023: PUSH
4024: LD_EXP 9
4028: AND
4029: IFFALSE 4090
// begin PlaceUnitArea ( Houten , addHeroes , false ) ;
4031: LD_EXP 9
4035: PPUSH
4036: LD_INT 11
4038: PPUSH
4039: LD_INT 0
4041: PPUSH
4042: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
4046: LD_EXP 9
4050: PPUSH
4051: LD_INT 42
4053: PPUSH
4054: LD_INT 35
4056: PPUSH
4057: CALL_OW 118
// if IsPlaced ( Houten ) then
4061: LD_EXP 9
4065: PPUSH
4066: CALL_OW 305
4070: IFFALSE 4088
// addHeroesTab = addHeroesTab ^ Houten ;
4072: LD_ADDR_EXP 15
4076: PUSH
4077: LD_EXP 15
4081: PUSH
4082: LD_EXP 9
4086: ADD
4087: ST_TO_ADDR
// end else
4088: GO 4166
// begin PlaceUnitArea ( others08 [ 1 ] , addHeroes , false ) ;
4090: LD_EXP 11
4094: PUSH
4095: LD_INT 1
4097: ARRAY
4098: PPUSH
4099: LD_INT 11
4101: PPUSH
4102: LD_INT 0
4104: PPUSH
4105: CALL_OW 49
// ComTurnXY ( others08 [ 1 ] , 42 , 35 ) ;
4109: LD_EXP 11
4113: PUSH
4114: LD_INT 1
4116: ARRAY
4117: PPUSH
4118: LD_INT 42
4120: PPUSH
4121: LD_INT 35
4123: PPUSH
4124: CALL_OW 118
// addHeroesTab := addHeroesTab ^ others08 [ 1 ] ;
4128: LD_ADDR_EXP 15
4132: PUSH
4133: LD_EXP 15
4137: PUSH
4138: LD_EXP 11
4142: PUSH
4143: LD_INT 1
4145: ARRAY
4146: ADD
4147: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
4148: LD_ADDR_EXP 11
4152: PUSH
4153: LD_EXP 11
4157: PPUSH
4158: LD_INT 1
4160: PPUSH
4161: CALL_OW 3
4165: ST_TO_ADDR
// end ; for i := 1 to 2 - addHeroesTab do
4166: LD_ADDR_VAR 0 2
4170: PUSH
4171: DOUBLE
4172: LD_INT 1
4174: DEC
4175: ST_TO_ADDR
4176: LD_INT 2
4178: PUSH
4179: LD_EXP 15
4183: MINUS
4184: PUSH
4185: FOR_TO
4186: IFFALSE 4310
// begin hc_gallery :=  ;
4188: LD_ADDR_OWVAR 33
4192: PUSH
4193: LD_STRING 
4195: ST_TO_ADDR
// hc_name :=  ;
4196: LD_ADDR_OWVAR 26
4200: PUSH
4201: LD_STRING 
4203: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
4204: LD_INT 0
4206: PPUSH
4207: LD_INT 1
4209: PUSH
4210: LD_INT 2
4212: PUSH
4213: LD_INT 3
4215: PUSH
4216: LD_INT 4
4218: PUSH
4219: EMPTY
4220: LIST
4221: LIST
4222: LIST
4223: LIST
4224: PUSH
4225: LD_INT 1
4227: PPUSH
4228: LD_INT 4
4230: PPUSH
4231: CALL_OW 12
4235: ARRAY
4236: PPUSH
4237: LD_INT 4
4239: PPUSH
4240: LD_INT 6
4242: PPUSH
4243: CALL_OW 12
4247: PPUSH
4248: CALL_OW 380
// un = CreateHuman ;
4252: LD_ADDR_VAR 0 3
4256: PUSH
4257: CALL_OW 44
4261: ST_TO_ADDR
// addHeroesTab = addHeroesTab ^ un ;
4262: LD_ADDR_EXP 15
4266: PUSH
4267: LD_EXP 15
4271: PUSH
4272: LD_VAR 0 3
4276: ADD
4277: ST_TO_ADDR
// PlaceUnitArea ( un , addHeroes , false ) ;
4278: LD_VAR 0 3
4282: PPUSH
4283: LD_INT 11
4285: PPUSH
4286: LD_INT 0
4288: PPUSH
4289: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
4293: LD_VAR 0 3
4297: PPUSH
4298: LD_INT 42
4300: PPUSH
4301: LD_INT 35
4303: PPUSH
4304: CALL_OW 118
// end ;
4308: GO 4185
4310: POP
4311: POP
// end ; if siberite > 200 then
4312: LD_EXP 17
4316: PUSH
4317: LD_INT 200
4319: GREATER
4320: IFFALSE 4872
// begin if others08 then
4322: LD_EXP 11
4326: IFFALSE 4716
// begin if others08 >= ( siberite - 200 ) / 100 then
4328: LD_EXP 11
4332: PUSH
4333: LD_EXP 17
4337: PUSH
4338: LD_INT 200
4340: MINUS
4341: PUSH
4342: LD_INT 100
4344: DIVREAL
4345: GREATEREQUAL
4346: IFFALSE 4458
// begin for i := 1 to ( siberite - 200 ) / 100 do
4348: LD_ADDR_VAR 0 2
4352: PUSH
4353: DOUBLE
4354: LD_INT 1
4356: DEC
4357: ST_TO_ADDR
4358: LD_EXP 17
4362: PUSH
4363: LD_INT 200
4365: MINUS
4366: PUSH
4367: LD_INT 100
4369: DIVREAL
4370: PUSH
4371: FOR_TO
4372: IFFALSE 4454
// begin PlaceUnitArea ( others08 [ 1 ] , addHeroes , false ) ;
4374: LD_EXP 11
4378: PUSH
4379: LD_INT 1
4381: ARRAY
4382: PPUSH
4383: LD_INT 11
4385: PPUSH
4386: LD_INT 0
4388: PPUSH
4389: CALL_OW 49
// ComTurnXY ( others08 [ 1 ] , 42 , 35 ) ;
4393: LD_EXP 11
4397: PUSH
4398: LD_INT 1
4400: ARRAY
4401: PPUSH
4402: LD_INT 42
4404: PPUSH
4405: LD_INT 35
4407: PPUSH
4408: CALL_OW 118
// addHeroesTab := addHeroesTab ^ others08 [ i ] ;
4412: LD_ADDR_EXP 15
4416: PUSH
4417: LD_EXP 15
4421: PUSH
4422: LD_EXP 11
4426: PUSH
4427: LD_VAR 0 2
4431: ARRAY
4432: ADD
4433: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
4434: LD_ADDR_EXP 11
4438: PUSH
4439: LD_EXP 11
4443: PPUSH
4444: LD_INT 1
4446: PPUSH
4447: CALL_OW 3
4451: ST_TO_ADDR
// end ;
4452: GO 4371
4454: POP
4455: POP
// end else
4456: GO 4714
// begin for i := 1 to others08 do
4458: LD_ADDR_VAR 0 2
4462: PUSH
4463: DOUBLE
4464: LD_INT 1
4466: DEC
4467: ST_TO_ADDR
4468: LD_EXP 11
4472: PUSH
4473: FOR_TO
4474: IFFALSE 4556
// begin PlaceUnitArea ( others08 [ 1 ] , addHeroes , false ) ;
4476: LD_EXP 11
4480: PUSH
4481: LD_INT 1
4483: ARRAY
4484: PPUSH
4485: LD_INT 11
4487: PPUSH
4488: LD_INT 0
4490: PPUSH
4491: CALL_OW 49
// ComTurnXY ( others08 [ 1 ] , 42 , 35 ) ;
4495: LD_EXP 11
4499: PUSH
4500: LD_INT 1
4502: ARRAY
4503: PPUSH
4504: LD_INT 42
4506: PPUSH
4507: LD_INT 35
4509: PPUSH
4510: CALL_OW 118
// addHeroesTab := addHeroesTab ^ others08 [ i ] ;
4514: LD_ADDR_EXP 15
4518: PUSH
4519: LD_EXP 15
4523: PUSH
4524: LD_EXP 11
4528: PUSH
4529: LD_VAR 0 2
4533: ARRAY
4534: ADD
4535: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
4536: LD_ADDR_EXP 11
4540: PUSH
4541: LD_EXP 11
4545: PPUSH
4546: LD_INT 1
4548: PPUSH
4549: CALL_OW 3
4553: ST_TO_ADDR
// end ;
4554: GO 4473
4556: POP
4557: POP
// for i := 1 to ( siberite - 200 ) / 100 - others08 do
4558: LD_ADDR_VAR 0 2
4562: PUSH
4563: DOUBLE
4564: LD_INT 1
4566: DEC
4567: ST_TO_ADDR
4568: LD_EXP 17
4572: PUSH
4573: LD_INT 200
4575: MINUS
4576: PUSH
4577: LD_INT 100
4579: DIVREAL
4580: PUSH
4581: LD_EXP 11
4585: MINUS
4586: PUSH
4587: FOR_TO
4588: IFFALSE 4712
// begin hc_gallery :=  ;
4590: LD_ADDR_OWVAR 33
4594: PUSH
4595: LD_STRING 
4597: ST_TO_ADDR
// hc_name :=  ;
4598: LD_ADDR_OWVAR 26
4602: PUSH
4603: LD_STRING 
4605: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
4606: LD_INT 0
4608: PPUSH
4609: LD_INT 1
4611: PUSH
4612: LD_INT 2
4614: PUSH
4615: LD_INT 3
4617: PUSH
4618: LD_INT 4
4620: PUSH
4621: EMPTY
4622: LIST
4623: LIST
4624: LIST
4625: LIST
4626: PUSH
4627: LD_INT 1
4629: PPUSH
4630: LD_INT 4
4632: PPUSH
4633: CALL_OW 12
4637: ARRAY
4638: PPUSH
4639: LD_INT 4
4641: PPUSH
4642: LD_INT 6
4644: PPUSH
4645: CALL_OW 12
4649: PPUSH
4650: CALL_OW 380
// un := CreateHuman ;
4654: LD_ADDR_VAR 0 3
4658: PUSH
4659: CALL_OW 44
4663: ST_TO_ADDR
// addHeroesTab := addHeroesTab ^ un ;
4664: LD_ADDR_EXP 15
4668: PUSH
4669: LD_EXP 15
4673: PUSH
4674: LD_VAR 0 3
4678: ADD
4679: ST_TO_ADDR
// PlaceUnitArea ( un , addHeroes , false ) ;
4680: LD_VAR 0 3
4684: PPUSH
4685: LD_INT 11
4687: PPUSH
4688: LD_INT 0
4690: PPUSH
4691: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
4695: LD_VAR 0 3
4699: PPUSH
4700: LD_INT 42
4702: PPUSH
4703: LD_INT 35
4705: PPUSH
4706: CALL_OW 118
// end ;
4710: GO 4587
4712: POP
4713: POP
// end ; end else
4714: GO 4872
// begin for i := 1 to ( siberite - 200 ) / 100 - others08 do
4716: LD_ADDR_VAR 0 2
4720: PUSH
4721: DOUBLE
4722: LD_INT 1
4724: DEC
4725: ST_TO_ADDR
4726: LD_EXP 17
4730: PUSH
4731: LD_INT 200
4733: MINUS
4734: PUSH
4735: LD_INT 100
4737: DIVREAL
4738: PUSH
4739: LD_EXP 11
4743: MINUS
4744: PUSH
4745: FOR_TO
4746: IFFALSE 4870
// begin hc_gallery :=  ;
4748: LD_ADDR_OWVAR 33
4752: PUSH
4753: LD_STRING 
4755: ST_TO_ADDR
// hc_name :=  ;
4756: LD_ADDR_OWVAR 26
4760: PUSH
4761: LD_STRING 
4763: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
4764: LD_INT 0
4766: PPUSH
4767: LD_INT 1
4769: PUSH
4770: LD_INT 2
4772: PUSH
4773: LD_INT 3
4775: PUSH
4776: LD_INT 4
4778: PUSH
4779: EMPTY
4780: LIST
4781: LIST
4782: LIST
4783: LIST
4784: PUSH
4785: LD_INT 1
4787: PPUSH
4788: LD_INT 4
4790: PPUSH
4791: CALL_OW 12
4795: ARRAY
4796: PPUSH
4797: LD_INT 4
4799: PPUSH
4800: LD_INT 6
4802: PPUSH
4803: CALL_OW 12
4807: PPUSH
4808: CALL_OW 380
// un := CreateHuman ;
4812: LD_ADDR_VAR 0 3
4816: PUSH
4817: CALL_OW 44
4821: ST_TO_ADDR
// addHeroesTab := addHeroesTab ^ un ;
4822: LD_ADDR_EXP 15
4826: PUSH
4827: LD_EXP 15
4831: PUSH
4832: LD_VAR 0 3
4836: ADD
4837: ST_TO_ADDR
// PlaceUnitArea ( un , addHeroes , false ) ;
4838: LD_VAR 0 3
4842: PPUSH
4843: LD_INT 11
4845: PPUSH
4846: LD_INT 0
4848: PPUSH
4849: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
4853: LD_VAR 0 3
4857: PPUSH
4858: LD_INT 42
4860: PPUSH
4861: LD_INT 35
4863: PPUSH
4864: CALL_OW 118
// end ;
4868: GO 4745
4870: POP
4871: POP
// end ; end ; PlaceHumanInUnit ( JMM , car ) ;
4872: LD_EXP 1
4876: PPUSH
4877: LD_INT 138
4879: PPUSH
4880: CALL_OW 52
// PlaceHumanInUnit ( Powell , Am_bar ) ;
4884: LD_EXP 2
4888: PPUSH
4889: LD_INT 58
4891: PPUSH
4892: CALL_OW 52
// SetClass ( JMM , 1 ) ;
4896: LD_EXP 1
4900: PPUSH
4901: LD_INT 1
4903: PPUSH
4904: CALL_OW 336
// end ;
4908: LD_VAR 0 1
4912: RET
// export function PrepareConvoy ; var i , veh , un ; begin
4913: LD_INT 0
4915: PPUSH
4916: PPUSH
4917: PPUSH
4918: PPUSH
// uc_side := 1 ;
4919: LD_ADDR_OWVAR 20
4923: PUSH
4924: LD_INT 1
4926: ST_TO_ADDR
// uc_nation := 1 ;
4927: LD_ADDR_OWVAR 21
4931: PUSH
4932: LD_INT 1
4934: ST_TO_ADDR
// for i := 1 to 2 do
4935: LD_ADDR_VAR 0 2
4939: PUSH
4940: DOUBLE
4941: LD_INT 1
4943: DEC
4944: ST_TO_ADDR
4945: LD_INT 2
4947: PUSH
4948: FOR_TO
4949: IFFALSE 5087
// begin vc_engine := 1 ;
4951: LD_ADDR_OWVAR 39
4955: PUSH
4956: LD_INT 1
4958: ST_TO_ADDR
// vc_control := 1 ;
4959: LD_ADDR_OWVAR 38
4963: PUSH
4964: LD_INT 1
4966: ST_TO_ADDR
// vc_weapon := 12 ;
4967: LD_ADDR_OWVAR 40
4971: PUSH
4972: LD_INT 12
4974: ST_TO_ADDR
// vc_chassis := 3 ;
4975: LD_ADDR_OWVAR 37
4979: PUSH
4980: LD_INT 3
4982: ST_TO_ADDR
// veh := CreateVehicle ;
4983: LD_ADDR_VAR 0 3
4987: PUSH
4988: CALL_OW 45
4992: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
4993: LD_VAR 0 3
4997: PPUSH
4998: LD_INT 1
5000: PPUSH
5001: CALL_OW 233
// PlaceUnitArea ( veh , Cargo , false ) ;
5005: LD_VAR 0 3
5009: PPUSH
5010: LD_INT 9
5012: PPUSH
5013: LD_INT 0
5015: PPUSH
5016: CALL_OW 49
// AddCargo ( veh , 1 , 100 ) ;
5020: LD_VAR 0 3
5024: PPUSH
5025: LD_INT 1
5027: PPUSH
5028: LD_INT 100
5030: PPUSH
5031: CALL_OW 291
// convoy = convoy ^ veh ;
5035: LD_ADDR_EXP 12
5039: PUSH
5040: LD_EXP 12
5044: PUSH
5045: LD_VAR 0 3
5049: ADD
5050: ST_TO_ADDR
// PrepareMechanic ( false , 10 ) ;
5051: LD_INT 0
5053: PPUSH
5054: LD_INT 10
5056: PPUSH
5057: CALL_OW 383
// un := CreateHuman ;
5061: LD_ADDR_VAR 0 4
5065: PUSH
5066: CALL_OW 44
5070: ST_TO_ADDR
// PlaceHumanInUnit ( un , veh ) ;
5071: LD_VAR 0 4
5075: PPUSH
5076: LD_VAR 0 3
5080: PPUSH
5081: CALL_OW 52
// end ;
5085: GO 4948
5087: POP
5088: POP
// AddComMoveXY ( convoy [ 1 ] , 45 , 43 ) ;
5089: LD_EXP 12
5093: PUSH
5094: LD_INT 1
5096: ARRAY
5097: PPUSH
5098: LD_INT 45
5100: PPUSH
5101: LD_INT 43
5103: PPUSH
5104: CALL_OW 171
// AddComMoveXY ( convoy [ 2 ] , 40 , 40 ) ;
5108: LD_EXP 12
5112: PUSH
5113: LD_INT 2
5115: ARRAY
5116: PPUSH
5117: LD_INT 40
5119: PPUSH
5120: LD_INT 40
5122: PPUSH
5123: CALL_OW 171
// end ; end_of_file
5127: LD_VAR 0 1
5131: RET
// export function PrepareUnit ( ident , exist_mode ) ; var unit ; begin
5132: LD_INT 0
5134: PPUSH
5135: PPUSH
// if exist_mode then
5136: LD_VAR 0 2
5140: IFFALSE 5174
// begin unit := CreateCharacter ( ident ) ;
5142: LD_ADDR_VAR 0 4
5146: PUSH
5147: LD_VAR 0 1
5151: PPUSH
5152: CALL_OW 34
5156: ST_TO_ADDR
// if unit then
5157: LD_VAR 0 4
5161: IFFALSE 5172
// DeleteCharacters ( ident ) ;
5163: LD_VAR 0 1
5167: PPUSH
5168: CALL_OW 40
// end else
5172: GO 5189
// unit := NewCharacter ( ident ) ;
5174: LD_ADDR_VAR 0 4
5178: PUSH
5179: LD_VAR 0 1
5183: PPUSH
5184: CALL_OW 25
5188: ST_TO_ADDR
// result := unit ;
5189: LD_ADDR_VAR 0 3
5193: PUSH
5194: LD_VAR 0 4
5198: ST_TO_ADDR
// end ;
5199: LD_VAR 0 3
5203: RET
// export function Video ( mode ) ; begin
5204: LD_INT 0
5206: PPUSH
// ingame_video = mode ;
5207: LD_ADDR_OWVAR 52
5211: PUSH
5212: LD_VAR 0 1
5216: ST_TO_ADDR
// interface_hidden = mode ;
5217: LD_ADDR_OWVAR 54
5221: PUSH
5222: LD_VAR 0 1
5226: ST_TO_ADDR
// end ; end_of_file
5227: LD_VAR 0 2
5231: RET
// on VehicleConstructed ( veh , fac ) do begin AddComMoveXY ( veh , 82 , 77 ) ;
5232: LD_VAR 0 1
5236: PPUSH
5237: LD_INT 82
5239: PPUSH
5240: LD_INT 77
5242: PPUSH
5243: CALL_OW 171
// end ;
5247: PPOPN 2
5249: END
// on DialogueSkipped ( d ) do begin EndMission ;
5250: CALL 668 0 0
// end ;
5254: PPOPN 1
5256: END
