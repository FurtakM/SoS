// export JMM , Powell ; export Brown , Donaldson , Bobby , Cyrus , Lisa , Frank , Houten , Gary ; export others08 ; export convoy , prepConv ; export coreHeroesTab , addHeroesTab ; export selectedToMission ; export siberite ; starting begin Resetfog ;
   0: CALL_OW 335
// SetBName ( Am_dep , alfa ) ;
   4: LD_INT 5
   6: PPUSH
   7: LD_STRING alfa
   9: PPUSH
  10: CALL_OW 500
// convoy := [ ] ;
  14: LD_ADDR_EXP 12
  18: PUSH
  19: EMPTY
  20: ST_TO_ADDR
// coreHeroesTab := [ ] ;
  21: LD_ADDR_EXP 14
  25: PUSH
  26: EMPTY
  27: ST_TO_ADDR
// addHeroesTab := [ ] ;
  28: LD_ADDR_EXP 15
  32: PUSH
  33: EMPTY
  34: ST_TO_ADDR
// selectedToMission := [ ] ;
  35: LD_ADDR_EXP 16
  39: PUSH
  40: EMPTY
  41: ST_TO_ADDR
// PrepareHeroes ;
  42: CALL 961 0 0
// Action ;
  46: CALL 51 0 0
// end ; end_of_file
  50: END
// export function Action ; begin
  51: LD_INT 0
  53: PPUSH
// Video ( true ) ;
  54: LD_INT 1
  56: PPUSH
  57: CALL 5507 0 1
// AddComConstruct ( Am_tov1 , 2 , 1 , 1 , 4 ) ;
  61: LD_INT 60
  63: PPUSH
  64: LD_INT 2
  66: PPUSH
  67: LD_INT 1
  69: PPUSH
  70: LD_INT 1
  72: PPUSH
  73: LD_INT 4
  75: PPUSH
  76: CALL_OW 185
// AddComConstruct ( Am_tov2 , 4 , 1 , 1 , 6 ) ;
  80: LD_INT 6
  82: PPUSH
  83: LD_INT 4
  85: PPUSH
  86: LD_INT 1
  88: PPUSH
  89: LD_INT 1
  91: PPUSH
  92: LD_INT 6
  94: PPUSH
  95: CALL_OW 185
// AddComConstruct ( Am_tov1 , 2 , 1 , 1 , 3 ) ;
  99: LD_INT 60
 101: PPUSH
 102: LD_INT 2
 104: PPUSH
 105: LD_INT 1
 107: PPUSH
 108: LD_INT 1
 110: PPUSH
 111: LD_INT 3
 113: PPUSH
 114: CALL_OW 185
// AddComConstruct ( Am_tov2 , 4 , 1 , 1 , 4 ) ;
 118: LD_INT 6
 120: PPUSH
 121: LD_INT 4
 123: PPUSH
 124: LD_INT 1
 126: PPUSH
 127: LD_INT 1
 129: PPUSH
 130: LD_INT 4
 132: PPUSH
 133: CALL_OW 185
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap1 ) ;
 137: LD_INT 47
 139: PUSH
 140: LD_INT 4
 142: PUSH
 143: EMPTY
 144: LIST
 145: LIST
 146: PPUSH
 147: LD_INT 51
 149: PPUSH
 150: CALL_OW 184
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap2 ) ;
 154: LD_INT 47
 156: PUSH
 157: LD_INT 4
 159: PUSH
 160: EMPTY
 161: LIST
 162: LIST
 163: PPUSH
 164: LD_INT 52
 166: PPUSH
 167: CALL_OW 184
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap3 ) ;
 171: LD_INT 47
 173: PUSH
 174: LD_INT 4
 176: PUSH
 177: EMPTY
 178: LIST
 179: LIST
 180: PPUSH
 181: LD_INT 53
 183: PPUSH
 184: CALL_OW 184
// CenterNowOnUnits ( car ) ;
 188: LD_INT 138
 190: PPUSH
 191: CALL_OW 87
// ComMoveXY ( car , 69 , 36 ) ;
 195: LD_INT 138
 197: PPUSH
 198: LD_INT 69
 200: PPUSH
 201: LD_INT 36
 203: PPUSH
 204: CALL_OW 111
// AddComMoveXY ( car , 65 , 43 ) ;
 208: LD_INT 138
 210: PPUSH
 211: LD_INT 65
 213: PPUSH
 214: LD_INT 43
 216: PPUSH
 217: CALL_OW 171
// AddComMoveXY ( car , 63 , 48 ) ;
 221: LD_INT 138
 223: PPUSH
 224: LD_INT 63
 226: PPUSH
 227: LD_INT 48
 229: PPUSH
 230: CALL_OW 171
// AddComMoveXY ( car , 60 , 50 ) ;
 234: LD_INT 138
 236: PPUSH
 237: LD_INT 60
 239: PPUSH
 240: LD_INT 50
 242: PPUSH
 243: CALL_OW 171
// AddComMoveXY ( car , 54 , 47 ) ;
 247: LD_INT 138
 249: PPUSH
 250: LD_INT 54
 252: PPUSH
 253: LD_INT 47
 255: PPUSH
 256: CALL_OW 171
// AddComMoveXY ( car , 51 , 40 ) ;
 260: LD_INT 138
 262: PPUSH
 263: LD_INT 51
 265: PPUSH
 266: LD_INT 40
 268: PPUSH
 269: CALL_OW 171
// repeat wait ( 0 0$1 ) ;
 273: LD_INT 35
 275: PPUSH
 276: CALL_OW 67
// CenterNowOnUnits ( car ) ;
 280: LD_INT 138
 282: PPUSH
 283: CALL_OW 87
// until IsInArea ( car , stop ) ;
 287: LD_INT 138
 289: PPUSH
 290: LD_INT 7
 292: PPUSH
 293: CALL_OW 308
 297: IFFALSE 273
// ComExitVehicle ( JMM ) ;
 299: LD_EXP 1
 303: PPUSH
 304: CALL_OW 121
// wait ( 0 0$01 ) ;
 308: LD_INT 35
 310: PPUSH
 311: CALL_OW 67
// ComMoveXY ( JMM , 42 , 37 ) ;
 315: LD_EXP 1
 319: PPUSH
 320: LD_INT 42
 322: PPUSH
 323: LD_INT 37
 325: PPUSH
 326: CALL_OW 111
// wait ( 0 0$5 ) ;
 330: LD_INT 175
 332: PPUSH
 333: CALL_OW 67
// ComExitBuilding ( Powell ) ;
 337: LD_EXP 2
 341: PPUSH
 342: CALL_OW 122
// wait ( 0 0$01 ) ;
 346: LD_INT 35
 348: PPUSH
 349: CALL_OW 67
// ComTurnUnit ( Powell , JMM ) ;
 353: LD_EXP 2
 357: PPUSH
 358: LD_EXP 1
 362: PPUSH
 363: CALL_OW 119
// ComTurnUnit ( JMM , Powell ) ;
 367: LD_EXP 1
 371: PPUSH
 372: LD_EXP 2
 376: PPUSH
 377: CALL_OW 119
// Say ( JMM , D1-JMM-1 ) ;
 381: LD_EXP 1
 385: PPUSH
 386: LD_STRING D1-JMM-1
 388: PPUSH
 389: CALL_OW 88
// Say ( Powell , D1-Pow-1 ) ;
 393: LD_EXP 2
 397: PPUSH
 398: LD_STRING D1-Pow-1
 400: PPUSH
 401: CALL_OW 88
// Say ( JMM , D1-JMM-2 ) ;
 405: LD_EXP 1
 409: PPUSH
 410: LD_STRING D1-JMM-2
 412: PPUSH
 413: CALL_OW 88
// Say ( Powell , D1-Pow-2 ) ;
 417: LD_EXP 2
 421: PPUSH
 422: LD_STRING D1-Pow-2
 424: PPUSH
 425: CALL_OW 88
// Say ( JMM , D1-JMM-3 ) ;
 429: LD_EXP 1
 433: PPUSH
 434: LD_STRING D1-JMM-3
 436: PPUSH
 437: CALL_OW 88
// Say ( Powell , D1-Pow-3 ) ;
 441: LD_EXP 2
 445: PPUSH
 446: LD_STRING D1-Pow-3
 448: PPUSH
 449: CALL_OW 88
// Say ( JMM , D1-JMM-4 ) ;
 453: LD_EXP 1
 457: PPUSH
 458: LD_STRING D1-JMM-4
 460: PPUSH
 461: CALL_OW 88
// PrepareConvoy ;
 465: CALL 5231 0 0
// Say ( Powell , D1-Pow-4 ) ;
 469: LD_EXP 2
 473: PPUSH
 474: LD_STRING D1-Pow-4
 476: PPUSH
 477: CALL_OW 88
// if PrepareUnit ( 08_Joan , true ) then
 481: LD_STRING 08_Joan
 483: PPUSH
 484: LD_INT 1
 486: PPUSH
 487: CALL 5450 0 2
 491: IFFALSE 505
// Say ( Powell , D1-Pow-4a ) ;
 493: LD_EXP 2
 497: PPUSH
 498: LD_STRING D1-Pow-4a
 500: PPUSH
 501: CALL_OW 88
// Say ( Powell , D1-Pow-4b ) ;
 505: LD_EXP 2
 509: PPUSH
 510: LD_STRING D1-Pow-4b
 512: PPUSH
 513: CALL_OW 88
// AddComGive ( convoy , Am_dep ) ;
 517: LD_EXP 12
 521: PPUSH
 522: LD_INT 5
 524: PPUSH
 525: CALL_OW 221
// AddComMoveXY ( convoy , 81 , 77 ) ;
 529: LD_EXP 12
 533: PPUSH
 534: LD_INT 81
 536: PPUSH
 537: LD_INT 77
 539: PPUSH
 540: CALL_OW 171
// Say ( JMM , D1-JMM-5 ) ;
 544: LD_EXP 1
 548: PPUSH
 549: LD_STRING D1-JMM-5
 551: PPUSH
 552: CALL_OW 88
// Say ( Powell , D1-Pow-5 ) ;
 556: LD_EXP 2
 560: PPUSH
 561: LD_STRING D1-Pow-5
 563: PPUSH
 564: CALL_OW 88
// Say ( JMM , D1-JMM-6 ) ;
 568: LD_EXP 1
 572: PPUSH
 573: LD_STRING D1-JMM-6
 575: PPUSH
 576: CALL_OW 88
// Say ( Powell , D1-Pow-6 ) ;
 580: LD_EXP 2
 584: PPUSH
 585: LD_STRING D1-Pow-6
 587: PPUSH
 588: CALL_OW 88
// Say ( JMM , D1-JMM-7 ) ;
 592: LD_EXP 1
 596: PPUSH
 597: LD_STRING D1-JMM-7
 599: PPUSH
 600: CALL_OW 88
// Say ( Powell , D1-Pow-7 ) ;
 604: LD_EXP 2
 608: PPUSH
 609: LD_STRING D1-Pow-7
 611: PPUSH
 612: CALL_OW 88
// Say ( JMM , D1-JMM-8 ) ;
 616: LD_EXP 1
 620: PPUSH
 621: LD_STRING D1-JMM-8
 623: PPUSH
 624: CALL_OW 88
// ComMoveXY ( JMM , 47 , 48 ) ;
 628: LD_EXP 1
 632: PPUSH
 633: LD_INT 47
 635: PPUSH
 636: LD_INT 48
 638: PPUSH
 639: CALL_OW 111
// ComEnterUnit ( Powell , Am_bar ) ;
 643: LD_EXP 2
 647: PPUSH
 648: LD_INT 58
 650: PPUSH
 651: CALL_OW 120
// wait ( 0 0$3 ) ;
 655: LD_INT 105
 657: PPUSH
 658: CALL_OW 67
// EndMission ;
 662: CALL 671 0 0
// end ;
 666: LD_VAR 0 1
 670: RET
// export function EndMission ; var others ; begin
 671: LD_INT 0
 673: PPUSH
 674: PPUSH
// others := FilterUnitsInArea ( CoreHeroes , [ [ f_side , 1 ] , [ f_type , unit_human ] ] ) ;
 675: LD_ADDR_VAR 0 2
 679: PUSH
 680: LD_INT 10
 682: PPUSH
 683: LD_INT 22
 685: PUSH
 686: LD_INT 1
 688: PUSH
 689: EMPTY
 690: LIST
 691: LIST
 692: PUSH
 693: LD_INT 21
 695: PUSH
 696: LD_INT 1
 698: PUSH
 699: EMPTY
 700: LIST
 701: LIST
 702: PUSH
 703: EMPTY
 704: LIST
 705: LIST
 706: PPUSH
 707: CALL_OW 70
 711: ST_TO_ADDR
// others := others ^ FilterUnitsInArea ( AddHeroes , [ [ f_side , 1 ] , [ f_type , unit_human ] ] ) ;
 712: LD_ADDR_VAR 0 2
 716: PUSH
 717: LD_VAR 0 2
 721: PUSH
 722: LD_INT 11
 724: PPUSH
 725: LD_INT 22
 727: PUSH
 728: LD_INT 1
 730: PUSH
 731: EMPTY
 732: LIST
 733: LIST
 734: PUSH
 735: LD_INT 21
 737: PUSH
 738: LD_INT 1
 740: PUSH
 741: EMPTY
 742: LIST
 743: LIST
 744: PUSH
 745: EMPTY
 746: LIST
 747: LIST
 748: PPUSH
 749: CALL_OW 70
 753: ADD
 754: ST_TO_ADDR
// others := others diff [ JMM , Powell , Brown , Donaldson , Bobby , Cyrus , Lisa , Frank , Houten , Gary ] ;
 755: LD_ADDR_VAR 0 2
 759: PUSH
 760: LD_VAR 0 2
 764: PUSH
 765: LD_EXP 1
 769: PUSH
 770: LD_EXP 2
 774: PUSH
 775: LD_EXP 3
 779: PUSH
 780: LD_EXP 4
 784: PUSH
 785: LD_EXP 5
 789: PUSH
 790: LD_EXP 6
 794: PUSH
 795: LD_EXP 7
 799: PUSH
 800: LD_EXP 8
 804: PUSH
 805: LD_EXP 9
 809: PUSH
 810: LD_EXP 10
 814: PUSH
 815: EMPTY
 816: LIST
 817: LIST
 818: LIST
 819: LIST
 820: LIST
 821: LIST
 822: LIST
 823: LIST
 824: LIST
 825: LIST
 826: DIFF
 827: ST_TO_ADDR
// SaveCharacters ( JMM , 10_JMM ) ;
 828: LD_EXP 1
 832: PPUSH
 833: LD_STRING 10_JMM
 835: PPUSH
 836: CALL_OW 38
// SaveCharacters ( others , OthersIn10 ) ;
 840: LD_VAR 0 2
 844: PPUSH
 845: LD_STRING OthersIn10
 847: PPUSH
 848: CALL_OW 38
// SaveCharacters ( others08 , 10_lock ) ;
 852: LD_EXP 11
 856: PPUSH
 857: LD_STRING 10_lock
 859: PPUSH
 860: CALL_OW 38
// ToLua ( enableBioCharacter(BIO_POW) ) ;
 864: LD_STRING enableBioCharacter(BIO_POW)
 866: PPUSH
 867: CALL_OW 559
// ToLua ( enableBioCharacter(BIO_CATH) ) ;
 871: LD_STRING enableBioCharacter(BIO_CATH)
 873: PPUSH
 874: CALL_OW 559
// ChangeMap ( 10 , %_cont ) ;
 878: LD_INT 10
 880: PPUSH
 881: LD_STRING %_cont
 883: PPUSH
 884: CALL_OW 340
// end ;
 888: LD_VAR 0 1
 892: RET
// every 0 0$1 trigger FilterUnitsInArea ( removeCar , [ f_side , 1 ] ) do var i ;
 893: LD_INT 12
 895: PPUSH
 896: LD_INT 22
 898: PUSH
 899: LD_INT 1
 901: PUSH
 902: EMPTY
 903: LIST
 904: LIST
 905: PPUSH
 906: CALL_OW 70
 910: IFFALSE 958
 912: GO 914
 914: DISABLE
 915: LD_INT 0
 917: PPUSH
// begin enable ;
 918: ENABLE
// for i in FilterUnitsInArea ( removeCar , [ f_side , 1 ] ) do
 919: LD_ADDR_VAR 0 1
 923: PUSH
 924: LD_INT 12
 926: PPUSH
 927: LD_INT 22
 929: PUSH
 930: LD_INT 1
 932: PUSH
 933: EMPTY
 934: LIST
 935: LIST
 936: PPUSH
 937: CALL_OW 70
 941: PUSH
 942: FOR_IN
 943: IFFALSE 956
// RemoveUnit ( i ) ;
 945: LD_VAR 0 1
 949: PPUSH
 950: CALL_OW 64
 954: GO 942
 956: POP
 957: POP
// end ; end_of_file
 958: PPOPN 1
 960: END
// export function PrepareHeroes ; var i , un ; begin
 961: LD_INT 0
 963: PPUSH
 964: PPUSH
 965: PPUSH
// uc_side := 1 ;
 966: LD_ADDR_OWVAR 20
 970: PUSH
 971: LD_INT 1
 973: ST_TO_ADDR
// uc_nation := 1 ;
 974: LD_ADDR_OWVAR 21
 978: PUSH
 979: LD_INT 1
 981: ST_TO_ADDR
// JMM := PrepareUnit ( 09_JMM , true ) ;
 982: LD_ADDR_EXP 1
 986: PUSH
 987: LD_STRING 09_JMM
 989: PPUSH
 990: LD_INT 1
 992: PPUSH
 993: CALL 5450 0 2
 997: ST_TO_ADDR
// Powell := PrepareUnit ( Powell , false ) ;
 998: LD_ADDR_EXP 2
1002: PUSH
1003: LD_STRING Powell
1005: PPUSH
1006: LD_INT 0
1008: PPUSH
1009: CALL 5450 0 2
1013: ST_TO_ADDR
// Bobby := PrepareUnit ( 09_Bobby , true ) ;
1014: LD_ADDR_EXP 5
1018: PUSH
1019: LD_STRING 09_Bobby
1021: PPUSH
1022: LD_INT 1
1024: PPUSH
1025: CALL 5450 0 2
1029: ST_TO_ADDR
// PlaceUnitArea ( Bobby , CoreHeroes , false ) ;
1030: LD_EXP 5
1034: PPUSH
1035: LD_INT 10
1037: PPUSH
1038: LD_INT 0
1040: PPUSH
1041: CALL_OW 49
// ComTurnXY ( Bobby , 42 , 35 ) ;
1045: LD_EXP 5
1049: PPUSH
1050: LD_INT 42
1052: PPUSH
1053: LD_INT 35
1055: PPUSH
1056: CALL_OW 118
// if IsPlaced ( Bobby ) then
1060: LD_EXP 5
1064: PPUSH
1065: CALL_OW 305
1069: IFFALSE 1099
// begin coreHeroesTab := coreHeroesTab ^ Bobby ;
1071: LD_ADDR_EXP 14
1075: PUSH
1076: LD_EXP 14
1080: PUSH
1081: LD_EXP 5
1085: ADD
1086: ST_TO_ADDR
// SaveCharacters ( Bobby , 10_Bobby ) ;
1087: LD_EXP 5
1091: PPUSH
1092: LD_STRING 10_Bobby
1094: PPUSH
1095: CALL_OW 38
// end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) then
1099: LD_EXP 5
1103: PPUSH
1104: CALL_OW 305
1108: NOT
1109: PUSH
1110: LD_EXP 3
1114: PPUSH
1115: CALL_OW 305
1119: NOT
1120: AND
1121: IFFALSE 1208
// begin Brown := PrepareUnit ( 08_Brown , true ) ;
1123: LD_ADDR_EXP 3
1127: PUSH
1128: LD_STRING 08_Brown
1130: PPUSH
1131: LD_INT 1
1133: PPUSH
1134: CALL 5450 0 2
1138: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
1139: LD_EXP 3
1143: PPUSH
1144: LD_INT 10
1146: PPUSH
1147: LD_INT 0
1149: PPUSH
1150: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
1154: LD_EXP 3
1158: PPUSH
1159: LD_INT 42
1161: PPUSH
1162: LD_INT 35
1164: PPUSH
1165: CALL_OW 118
// if IsPlaced ( Brown ) then
1169: LD_EXP 3
1173: PPUSH
1174: CALL_OW 305
1178: IFFALSE 1208
// begin coreHeroesTab := coreHeroesTab ^ Brown ;
1180: LD_ADDR_EXP 14
1184: PUSH
1185: LD_EXP 14
1189: PUSH
1190: LD_EXP 3
1194: ADD
1195: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
1196: LD_EXP 3
1200: PPUSH
1201: LD_STRING 10_Brown
1203: PPUSH
1204: CALL_OW 38
// end ; end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
1208: LD_EXP 5
1212: PPUSH
1213: CALL_OW 305
1217: NOT
1218: PUSH
1219: LD_EXP 3
1223: PPUSH
1224: CALL_OW 305
1228: NOT
1229: AND
1230: PUSH
1231: LD_EXP 4
1235: PPUSH
1236: CALL_OW 305
1240: NOT
1241: AND
1242: IFFALSE 1329
// begin Donaldson := PrepareUnit ( 08_Donaldson , true ) ;
1244: LD_ADDR_EXP 4
1248: PUSH
1249: LD_STRING 08_Donaldson
1251: PPUSH
1252: LD_INT 1
1254: PPUSH
1255: CALL 5450 0 2
1259: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
1260: LD_EXP 4
1264: PPUSH
1265: LD_INT 10
1267: PPUSH
1268: LD_INT 0
1270: PPUSH
1271: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
1275: LD_EXP 4
1279: PPUSH
1280: LD_INT 42
1282: PPUSH
1283: LD_INT 35
1285: PPUSH
1286: CALL_OW 118
// if IsPlaced ( Donaldson ) then
1290: LD_EXP 4
1294: PPUSH
1295: CALL_OW 305
1299: IFFALSE 1329
// begin coreHeroesTab := coreHeroesTab ^ Donaldson ;
1301: LD_ADDR_EXP 14
1305: PUSH
1306: LD_EXP 14
1310: PUSH
1311: LD_EXP 4
1315: ADD
1316: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
1317: LD_EXP 4
1321: PPUSH
1322: LD_STRING 10_Donaldson
1324: PPUSH
1325: CALL_OW 38
// end ; end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
1329: LD_EXP 5
1333: PPUSH
1334: CALL_OW 305
1338: NOT
1339: PUSH
1340: LD_EXP 3
1344: PPUSH
1345: CALL_OW 305
1349: NOT
1350: AND
1351: PUSH
1352: LD_EXP 4
1356: PPUSH
1357: CALL_OW 305
1361: NOT
1362: AND
1363: PUSH
1364: LD_EXP 8
1368: PPUSH
1369: CALL_OW 305
1373: NOT
1374: AND
1375: IFFALSE 1462
// begin Frank := PrepareUnit ( 08_Frank , true ) ;
1377: LD_ADDR_EXP 8
1381: PUSH
1382: LD_STRING 08_Frank
1384: PPUSH
1385: LD_INT 1
1387: PPUSH
1388: CALL 5450 0 2
1392: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
1393: LD_EXP 8
1397: PPUSH
1398: LD_INT 10
1400: PPUSH
1401: LD_INT 0
1403: PPUSH
1404: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
1408: LD_EXP 8
1412: PPUSH
1413: LD_INT 42
1415: PPUSH
1416: LD_INT 35
1418: PPUSH
1419: CALL_OW 118
// if IsPlaced ( Frank ) then
1423: LD_EXP 8
1427: PPUSH
1428: CALL_OW 305
1432: IFFALSE 1462
// begin coreHeroesTab := coreHeroesTab ^ Frank ;
1434: LD_ADDR_EXP 14
1438: PUSH
1439: LD_EXP 14
1443: PUSH
1444: LD_EXP 8
1448: ADD
1449: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
1450: LD_EXP 8
1454: PPUSH
1455: LD_STRING 10_Frank
1457: PPUSH
1458: CALL_OW 38
// end ; end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
1462: LD_EXP 5
1466: PPUSH
1467: CALL_OW 305
1471: NOT
1472: PUSH
1473: LD_EXP 3
1477: PPUSH
1478: CALL_OW 305
1482: NOT
1483: AND
1484: PUSH
1485: LD_EXP 4
1489: PPUSH
1490: CALL_OW 305
1494: NOT
1495: AND
1496: PUSH
1497: LD_EXP 8
1501: PPUSH
1502: CALL_OW 305
1506: NOT
1507: AND
1508: PUSH
1509: LD_EXP 9
1513: PPUSH
1514: CALL_OW 305
1518: NOT
1519: AND
1520: IFFALSE 1607
// begin Houten := PrepareUnit ( 09_Houten , true ) ;
1522: LD_ADDR_EXP 9
1526: PUSH
1527: LD_STRING 09_Houten
1529: PPUSH
1530: LD_INT 1
1532: PPUSH
1533: CALL 5450 0 2
1537: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
1538: LD_EXP 9
1542: PPUSH
1543: LD_INT 10
1545: PPUSH
1546: LD_INT 0
1548: PPUSH
1549: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
1553: LD_EXP 9
1557: PPUSH
1558: LD_INT 42
1560: PPUSH
1561: LD_INT 35
1563: PPUSH
1564: CALL_OW 118
// if IsPlaced ( Houten ) then
1568: LD_EXP 9
1572: PPUSH
1573: CALL_OW 305
1577: IFFALSE 1607
// begin coreHeroesTab := coreHeroesTab ^ Houten ;
1579: LD_ADDR_EXP 14
1583: PUSH
1584: LD_EXP 14
1588: PUSH
1589: LD_EXP 9
1593: ADD
1594: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
1595: LD_EXP 9
1599: PPUSH
1600: LD_STRING 10_Houten
1602: PPUSH
1603: CALL_OW 38
// end ; end ; Cyrus := PrepareUnit ( 09_Cyrus , true ) ;
1607: LD_ADDR_EXP 6
1611: PUSH
1612: LD_STRING 09_Cyrus
1614: PPUSH
1615: LD_INT 1
1617: PPUSH
1618: CALL 5450 0 2
1622: ST_TO_ADDR
// PlaceUnitArea ( Cyrus , CoreHeroes , false ) ;
1623: LD_EXP 6
1627: PPUSH
1628: LD_INT 10
1630: PPUSH
1631: LD_INT 0
1633: PPUSH
1634: CALL_OW 49
// ComTurnXY ( Cyrus , 42 , 35 ) ;
1638: LD_EXP 6
1642: PPUSH
1643: LD_INT 42
1645: PPUSH
1646: LD_INT 35
1648: PPUSH
1649: CALL_OW 118
// if IsPlaced ( Cyrus ) then
1653: LD_EXP 6
1657: PPUSH
1658: CALL_OW 305
1662: IFFALSE 1692
// begin coreHeroesTab := coreHeroesTab ^ Cyrus ;
1664: LD_ADDR_EXP 14
1668: PUSH
1669: LD_EXP 14
1673: PUSH
1674: LD_EXP 6
1678: ADD
1679: ST_TO_ADDR
// SaveCharacters ( Cyrus , 10_Cyrus ) ;
1680: LD_EXP 6
1684: PPUSH
1685: LD_STRING 10_Cyrus
1687: PPUSH
1688: CALL_OW 38
// end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) then
1692: LD_EXP 6
1696: PPUSH
1697: CALL_OW 305
1701: NOT
1702: PUSH
1703: LD_EXP 3
1707: PPUSH
1708: CALL_OW 305
1712: NOT
1713: AND
1714: IFFALSE 1801
// begin Brown := PrepareUnit ( 08_Brown , true ) ;
1716: LD_ADDR_EXP 3
1720: PUSH
1721: LD_STRING 08_Brown
1723: PPUSH
1724: LD_INT 1
1726: PPUSH
1727: CALL 5450 0 2
1731: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
1732: LD_EXP 3
1736: PPUSH
1737: LD_INT 10
1739: PPUSH
1740: LD_INT 0
1742: PPUSH
1743: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
1747: LD_EXP 3
1751: PPUSH
1752: LD_INT 42
1754: PPUSH
1755: LD_INT 35
1757: PPUSH
1758: CALL_OW 118
// if IsPlaced ( Brown ) then
1762: LD_EXP 3
1766: PPUSH
1767: CALL_OW 305
1771: IFFALSE 1801
// begin coreHeroesTab := coreHeroesTab ^ Brown ;
1773: LD_ADDR_EXP 14
1777: PUSH
1778: LD_EXP 14
1782: PUSH
1783: LD_EXP 3
1787: ADD
1788: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
1789: LD_EXP 3
1793: PPUSH
1794: LD_STRING 10_Brown
1796: PPUSH
1797: CALL_OW 38
// end ; end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
1801: LD_EXP 6
1805: PPUSH
1806: CALL_OW 305
1810: NOT
1811: PUSH
1812: LD_EXP 3
1816: PPUSH
1817: CALL_OW 305
1821: NOT
1822: AND
1823: PUSH
1824: LD_EXP 4
1828: PPUSH
1829: CALL_OW 305
1833: NOT
1834: AND
1835: IFFALSE 1922
// begin Donaldson := PrepareUnit ( 08_Donaldson , true ) ;
1837: LD_ADDR_EXP 4
1841: PUSH
1842: LD_STRING 08_Donaldson
1844: PPUSH
1845: LD_INT 1
1847: PPUSH
1848: CALL 5450 0 2
1852: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
1853: LD_EXP 4
1857: PPUSH
1858: LD_INT 10
1860: PPUSH
1861: LD_INT 0
1863: PPUSH
1864: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
1868: LD_EXP 4
1872: PPUSH
1873: LD_INT 42
1875: PPUSH
1876: LD_INT 35
1878: PPUSH
1879: CALL_OW 118
// if IsPlaced ( Donaldson ) then
1883: LD_EXP 4
1887: PPUSH
1888: CALL_OW 305
1892: IFFALSE 1922
// begin coreHeroesTab := coreHeroesTab ^ Donaldson ;
1894: LD_ADDR_EXP 14
1898: PUSH
1899: LD_EXP 14
1903: PUSH
1904: LD_EXP 4
1908: ADD
1909: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
1910: LD_EXP 4
1914: PPUSH
1915: LD_STRING 10_Donaldson
1917: PPUSH
1918: CALL_OW 38
// end ; end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
1922: LD_EXP 6
1926: PPUSH
1927: CALL_OW 305
1931: NOT
1932: PUSH
1933: LD_EXP 3
1937: PPUSH
1938: CALL_OW 305
1942: NOT
1943: AND
1944: PUSH
1945: LD_EXP 4
1949: PPUSH
1950: CALL_OW 305
1954: NOT
1955: AND
1956: PUSH
1957: LD_EXP 8
1961: PPUSH
1962: CALL_OW 305
1966: NOT
1967: AND
1968: IFFALSE 2055
// begin Frank := PrepareUnit ( 08_Frank , true ) ;
1970: LD_ADDR_EXP 8
1974: PUSH
1975: LD_STRING 08_Frank
1977: PPUSH
1978: LD_INT 1
1980: PPUSH
1981: CALL 5450 0 2
1985: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
1986: LD_EXP 8
1990: PPUSH
1991: LD_INT 10
1993: PPUSH
1994: LD_INT 0
1996: PPUSH
1997: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
2001: LD_EXP 8
2005: PPUSH
2006: LD_INT 42
2008: PPUSH
2009: LD_INT 35
2011: PPUSH
2012: CALL_OW 118
// if IsPlaced ( Frank ) then
2016: LD_EXP 8
2020: PPUSH
2021: CALL_OW 305
2025: IFFALSE 2055
// begin coreHeroesTab := coreHeroesTab ^ Frank ;
2027: LD_ADDR_EXP 14
2031: PUSH
2032: LD_EXP 14
2036: PUSH
2037: LD_EXP 8
2041: ADD
2042: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
2043: LD_EXP 8
2047: PPUSH
2048: LD_STRING 10_Frank
2050: PPUSH
2051: CALL_OW 38
// end ; end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
2055: LD_EXP 6
2059: PPUSH
2060: CALL_OW 305
2064: NOT
2065: PUSH
2066: LD_EXP 3
2070: PPUSH
2071: CALL_OW 305
2075: NOT
2076: AND
2077: PUSH
2078: LD_EXP 4
2082: PPUSH
2083: CALL_OW 305
2087: NOT
2088: AND
2089: PUSH
2090: LD_EXP 8
2094: PPUSH
2095: CALL_OW 305
2099: NOT
2100: AND
2101: PUSH
2102: LD_EXP 9
2106: PPUSH
2107: CALL_OW 305
2111: NOT
2112: AND
2113: IFFALSE 2200
// begin Houten := PrepareUnit ( 09_Houten , true ) ;
2115: LD_ADDR_EXP 9
2119: PUSH
2120: LD_STRING 09_Houten
2122: PPUSH
2123: LD_INT 1
2125: PPUSH
2126: CALL 5450 0 2
2130: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
2131: LD_EXP 9
2135: PPUSH
2136: LD_INT 10
2138: PPUSH
2139: LD_INT 0
2141: PPUSH
2142: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
2146: LD_EXP 9
2150: PPUSH
2151: LD_INT 42
2153: PPUSH
2154: LD_INT 35
2156: PPUSH
2157: CALL_OW 118
// if IsPlaced ( Houten ) then
2161: LD_EXP 9
2165: PPUSH
2166: CALL_OW 305
2170: IFFALSE 2200
// begin coreHeroesTab := coreHeroesTab ^ Houten ;
2172: LD_ADDR_EXP 14
2176: PUSH
2177: LD_EXP 14
2181: PUSH
2182: LD_EXP 9
2186: ADD
2187: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
2188: LD_EXP 9
2192: PPUSH
2193: LD_STRING 10_Houten
2195: PPUSH
2196: CALL_OW 38
// end ; end ; Lisa := PrepareUnit ( 08_Lisa , true ) ;
2200: LD_ADDR_EXP 7
2204: PUSH
2205: LD_STRING 08_Lisa
2207: PPUSH
2208: LD_INT 1
2210: PPUSH
2211: CALL 5450 0 2
2215: ST_TO_ADDR
// PlaceUnitArea ( Lisa , CoreHeroes , false ) ;
2216: LD_EXP 7
2220: PPUSH
2221: LD_INT 10
2223: PPUSH
2224: LD_INT 0
2226: PPUSH
2227: CALL_OW 49
// ComTurnXY ( Lisa , 42 , 35 ) ;
2231: LD_EXP 7
2235: PPUSH
2236: LD_INT 42
2238: PPUSH
2239: LD_INT 35
2241: PPUSH
2242: CALL_OW 118
// if IsPlaced ( Lisa ) then
2246: LD_EXP 7
2250: PPUSH
2251: CALL_OW 305
2255: IFFALSE 2285
// begin coreHeroesTab := coreHeroesTab ^ Lisa ;
2257: LD_ADDR_EXP 14
2261: PUSH
2262: LD_EXP 14
2266: PUSH
2267: LD_EXP 7
2271: ADD
2272: ST_TO_ADDR
// SaveCharacters ( Lisa , 10_Lisa ) ;
2273: LD_EXP 7
2277: PPUSH
2278: LD_STRING 10_Lisa
2280: PPUSH
2281: CALL_OW 38
// end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) then
2285: LD_EXP 7
2289: PPUSH
2290: CALL_OW 305
2294: NOT
2295: PUSH
2296: LD_EXP 3
2300: PPUSH
2301: CALL_OW 305
2305: NOT
2306: AND
2307: IFFALSE 2394
// begin Brown := PrepareUnit ( 08_Brown , true ) ;
2309: LD_ADDR_EXP 3
2313: PUSH
2314: LD_STRING 08_Brown
2316: PPUSH
2317: LD_INT 1
2319: PPUSH
2320: CALL 5450 0 2
2324: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
2325: LD_EXP 3
2329: PPUSH
2330: LD_INT 10
2332: PPUSH
2333: LD_INT 0
2335: PPUSH
2336: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
2340: LD_EXP 3
2344: PPUSH
2345: LD_INT 42
2347: PPUSH
2348: LD_INT 35
2350: PPUSH
2351: CALL_OW 118
// if IsPlaced ( Brown ) then
2355: LD_EXP 3
2359: PPUSH
2360: CALL_OW 305
2364: IFFALSE 2394
// begin coreHeroesTab := coreHeroesTab ^ Brown ;
2366: LD_ADDR_EXP 14
2370: PUSH
2371: LD_EXP 14
2375: PUSH
2376: LD_EXP 3
2380: ADD
2381: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
2382: LD_EXP 3
2386: PPUSH
2387: LD_STRING 10_Brown
2389: PPUSH
2390: CALL_OW 38
// end ; end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
2394: LD_EXP 7
2398: PPUSH
2399: CALL_OW 305
2403: NOT
2404: PUSH
2405: LD_EXP 3
2409: PPUSH
2410: CALL_OW 305
2414: NOT
2415: AND
2416: PUSH
2417: LD_EXP 4
2421: PPUSH
2422: CALL_OW 305
2426: NOT
2427: AND
2428: IFFALSE 2515
// begin Donaldson := PrepareUnit ( 08_Donaldson , true ) ;
2430: LD_ADDR_EXP 4
2434: PUSH
2435: LD_STRING 08_Donaldson
2437: PPUSH
2438: LD_INT 1
2440: PPUSH
2441: CALL 5450 0 2
2445: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
2446: LD_EXP 4
2450: PPUSH
2451: LD_INT 10
2453: PPUSH
2454: LD_INT 0
2456: PPUSH
2457: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
2461: LD_EXP 4
2465: PPUSH
2466: LD_INT 42
2468: PPUSH
2469: LD_INT 35
2471: PPUSH
2472: CALL_OW 118
// if IsPlaced ( Donaldson ) then
2476: LD_EXP 4
2480: PPUSH
2481: CALL_OW 305
2485: IFFALSE 2515
// begin coreHeroesTab := coreHeroesTab ^ Donaldson ;
2487: LD_ADDR_EXP 14
2491: PUSH
2492: LD_EXP 14
2496: PUSH
2497: LD_EXP 4
2501: ADD
2502: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
2503: LD_EXP 4
2507: PPUSH
2508: LD_STRING 10_Donaldson
2510: PPUSH
2511: CALL_OW 38
// end ; end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
2515: LD_EXP 7
2519: PPUSH
2520: CALL_OW 305
2524: NOT
2525: PUSH
2526: LD_EXP 3
2530: PPUSH
2531: CALL_OW 305
2535: NOT
2536: AND
2537: PUSH
2538: LD_EXP 4
2542: PPUSH
2543: CALL_OW 305
2547: NOT
2548: AND
2549: PUSH
2550: LD_EXP 8
2554: PPUSH
2555: CALL_OW 305
2559: NOT
2560: AND
2561: IFFALSE 2648
// begin Frank := PrepareUnit ( 08_Frank , true ) ;
2563: LD_ADDR_EXP 8
2567: PUSH
2568: LD_STRING 08_Frank
2570: PPUSH
2571: LD_INT 1
2573: PPUSH
2574: CALL 5450 0 2
2578: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
2579: LD_EXP 8
2583: PPUSH
2584: LD_INT 10
2586: PPUSH
2587: LD_INT 0
2589: PPUSH
2590: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
2594: LD_EXP 8
2598: PPUSH
2599: LD_INT 42
2601: PPUSH
2602: LD_INT 35
2604: PPUSH
2605: CALL_OW 118
// if IsPlaced ( Frank ) then
2609: LD_EXP 8
2613: PPUSH
2614: CALL_OW 305
2618: IFFALSE 2648
// begin coreHeroesTab := coreHeroesTab ^ Frank ;
2620: LD_ADDR_EXP 14
2624: PUSH
2625: LD_EXP 14
2629: PUSH
2630: LD_EXP 8
2634: ADD
2635: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
2636: LD_EXP 8
2640: PPUSH
2641: LD_STRING 10_Frank
2643: PPUSH
2644: CALL_OW 38
// end ; end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
2648: LD_EXP 7
2652: PPUSH
2653: CALL_OW 305
2657: NOT
2658: PUSH
2659: LD_EXP 3
2663: PPUSH
2664: CALL_OW 305
2668: NOT
2669: AND
2670: PUSH
2671: LD_EXP 4
2675: PPUSH
2676: CALL_OW 305
2680: NOT
2681: AND
2682: PUSH
2683: LD_EXP 8
2687: PPUSH
2688: CALL_OW 305
2692: NOT
2693: AND
2694: PUSH
2695: LD_EXP 9
2699: PPUSH
2700: CALL_OW 305
2704: NOT
2705: AND
2706: IFFALSE 2793
// begin Houten := PrepareUnit ( 09_Houten , true ) ;
2708: LD_ADDR_EXP 9
2712: PUSH
2713: LD_STRING 09_Houten
2715: PPUSH
2716: LD_INT 1
2718: PPUSH
2719: CALL 5450 0 2
2723: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
2724: LD_EXP 9
2728: PPUSH
2729: LD_INT 10
2731: PPUSH
2732: LD_INT 0
2734: PPUSH
2735: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
2739: LD_EXP 9
2743: PPUSH
2744: LD_INT 42
2746: PPUSH
2747: LD_INT 35
2749: PPUSH
2750: CALL_OW 118
// if IsPlaced ( Houten ) then
2754: LD_EXP 9
2758: PPUSH
2759: CALL_OW 305
2763: IFFALSE 2793
// begin coreHeroesTab := coreHeroesTab ^ Houten ;
2765: LD_ADDR_EXP 14
2769: PUSH
2770: LD_EXP 14
2774: PUSH
2775: LD_EXP 9
2779: ADD
2780: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
2781: LD_EXP 9
2785: PPUSH
2786: LD_STRING 10_Houten
2788: PPUSH
2789: CALL_OW 38
// end ; end ; Gary := PrepareUnit ( 09_Gary , true ) ;
2793: LD_ADDR_EXP 10
2797: PUSH
2798: LD_STRING 09_Gary
2800: PPUSH
2801: LD_INT 1
2803: PPUSH
2804: CALL 5450 0 2
2808: ST_TO_ADDR
// PlaceUnitArea ( Gary , CoreHeroes , false ) ;
2809: LD_EXP 10
2813: PPUSH
2814: LD_INT 10
2816: PPUSH
2817: LD_INT 0
2819: PPUSH
2820: CALL_OW 49
// ComTurnXY ( Gary , 42 , 35 ) ;
2824: LD_EXP 10
2828: PPUSH
2829: LD_INT 42
2831: PPUSH
2832: LD_INT 35
2834: PPUSH
2835: CALL_OW 118
// if IsPlaced ( Gary ) then
2839: LD_EXP 10
2843: PPUSH
2844: CALL_OW 305
2848: IFFALSE 2878
// begin coreHeroesTab := coreHeroesTab ^ Gary ;
2850: LD_ADDR_EXP 14
2854: PUSH
2855: LD_EXP 14
2859: PUSH
2860: LD_EXP 10
2864: ADD
2865: ST_TO_ADDR
// SaveCharacters ( Gary , 10_Gary ) ;
2866: LD_EXP 10
2870: PPUSH
2871: LD_STRING 10_Gary
2873: PPUSH
2874: CALL_OW 38
// end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) then
2878: LD_EXP 10
2882: PPUSH
2883: CALL_OW 305
2887: NOT
2888: PUSH
2889: LD_EXP 3
2893: PPUSH
2894: CALL_OW 305
2898: NOT
2899: AND
2900: IFFALSE 2987
// begin Brown := PrepareUnit ( 08_Brown , true ) ;
2902: LD_ADDR_EXP 3
2906: PUSH
2907: LD_STRING 08_Brown
2909: PPUSH
2910: LD_INT 1
2912: PPUSH
2913: CALL 5450 0 2
2917: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
2918: LD_EXP 3
2922: PPUSH
2923: LD_INT 10
2925: PPUSH
2926: LD_INT 0
2928: PPUSH
2929: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
2933: LD_EXP 3
2937: PPUSH
2938: LD_INT 42
2940: PPUSH
2941: LD_INT 35
2943: PPUSH
2944: CALL_OW 118
// if IsPlaced ( Brown ) then
2948: LD_EXP 3
2952: PPUSH
2953: CALL_OW 305
2957: IFFALSE 2987
// begin coreHeroesTab := coreHeroesTab ^ Brown ;
2959: LD_ADDR_EXP 14
2963: PUSH
2964: LD_EXP 14
2968: PUSH
2969: LD_EXP 3
2973: ADD
2974: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
2975: LD_EXP 3
2979: PPUSH
2980: LD_STRING 10_Brown
2982: PPUSH
2983: CALL_OW 38
// end ; end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
2987: LD_EXP 10
2991: PPUSH
2992: CALL_OW 305
2996: NOT
2997: PUSH
2998: LD_EXP 3
3002: PPUSH
3003: CALL_OW 305
3007: NOT
3008: AND
3009: PUSH
3010: LD_EXP 4
3014: PPUSH
3015: CALL_OW 305
3019: NOT
3020: AND
3021: IFFALSE 3108
// begin Donaldson := PrepareUnit ( 08_Donaldson , true ) ;
3023: LD_ADDR_EXP 4
3027: PUSH
3028: LD_STRING 08_Donaldson
3030: PPUSH
3031: LD_INT 1
3033: PPUSH
3034: CALL 5450 0 2
3038: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
3039: LD_EXP 4
3043: PPUSH
3044: LD_INT 10
3046: PPUSH
3047: LD_INT 0
3049: PPUSH
3050: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
3054: LD_EXP 4
3058: PPUSH
3059: LD_INT 42
3061: PPUSH
3062: LD_INT 35
3064: PPUSH
3065: CALL_OW 118
// if IsPlaced ( Donaldson ) then
3069: LD_EXP 4
3073: PPUSH
3074: CALL_OW 305
3078: IFFALSE 3108
// begin coreHeroesTab := coreHeroesTab ^ Donaldson ;
3080: LD_ADDR_EXP 14
3084: PUSH
3085: LD_EXP 14
3089: PUSH
3090: LD_EXP 4
3094: ADD
3095: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
3096: LD_EXP 4
3100: PPUSH
3101: LD_STRING 10_Donaldson
3103: PPUSH
3104: CALL_OW 38
// end ; end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
3108: LD_EXP 10
3112: PPUSH
3113: CALL_OW 305
3117: NOT
3118: PUSH
3119: LD_EXP 3
3123: PPUSH
3124: CALL_OW 305
3128: NOT
3129: AND
3130: PUSH
3131: LD_EXP 4
3135: PPUSH
3136: CALL_OW 305
3140: NOT
3141: AND
3142: PUSH
3143: LD_EXP 8
3147: PPUSH
3148: CALL_OW 305
3152: NOT
3153: AND
3154: IFFALSE 3241
// begin Frank := PrepareUnit ( 08_Frank , true ) ;
3156: LD_ADDR_EXP 8
3160: PUSH
3161: LD_STRING 08_Frank
3163: PPUSH
3164: LD_INT 1
3166: PPUSH
3167: CALL 5450 0 2
3171: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
3172: LD_EXP 8
3176: PPUSH
3177: LD_INT 10
3179: PPUSH
3180: LD_INT 0
3182: PPUSH
3183: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
3187: LD_EXP 8
3191: PPUSH
3192: LD_INT 42
3194: PPUSH
3195: LD_INT 35
3197: PPUSH
3198: CALL_OW 118
// if IsPlaced ( Frank ) then
3202: LD_EXP 8
3206: PPUSH
3207: CALL_OW 305
3211: IFFALSE 3241
// begin coreHeroesTab := coreHeroesTab ^ Frank ;
3213: LD_ADDR_EXP 14
3217: PUSH
3218: LD_EXP 14
3222: PUSH
3223: LD_EXP 8
3227: ADD
3228: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
3229: LD_EXP 8
3233: PPUSH
3234: LD_STRING 10_Frank
3236: PPUSH
3237: CALL_OW 38
// end ; end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
3241: LD_EXP 10
3245: PPUSH
3246: CALL_OW 305
3250: NOT
3251: PUSH
3252: LD_EXP 3
3256: PPUSH
3257: CALL_OW 305
3261: NOT
3262: AND
3263: PUSH
3264: LD_EXP 4
3268: PPUSH
3269: CALL_OW 305
3273: NOT
3274: AND
3275: PUSH
3276: LD_EXP 8
3280: PPUSH
3281: CALL_OW 305
3285: NOT
3286: AND
3287: PUSH
3288: LD_EXP 9
3292: PPUSH
3293: CALL_OW 305
3297: NOT
3298: AND
3299: IFFALSE 3386
// begin Houten := PrepareUnit ( 09_Houten , true ) ;
3301: LD_ADDR_EXP 9
3305: PUSH
3306: LD_STRING 09_Houten
3308: PPUSH
3309: LD_INT 1
3311: PPUSH
3312: CALL 5450 0 2
3316: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
3317: LD_EXP 9
3321: PPUSH
3322: LD_INT 10
3324: PPUSH
3325: LD_INT 0
3327: PPUSH
3328: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
3332: LD_EXP 9
3336: PPUSH
3337: LD_INT 42
3339: PPUSH
3340: LD_INT 35
3342: PPUSH
3343: CALL_OW 118
// if IsPlaced ( Houten ) then
3347: LD_EXP 9
3351: PPUSH
3352: CALL_OW 305
3356: IFFALSE 3386
// begin coreHeroesTab := coreHeroesTab ^ Houten ;
3358: LD_ADDR_EXP 14
3362: PUSH
3363: LD_EXP 14
3367: PUSH
3368: LD_EXP 9
3372: ADD
3373: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
3374: LD_EXP 9
3378: PPUSH
3379: LD_STRING 10_Houten
3381: PPUSH
3382: CALL_OW 38
// end ; end ; for i := 1 to 5 - coreHeroesTab do
3386: LD_ADDR_VAR 0 2
3390: PUSH
3391: DOUBLE
3392: LD_INT 1
3394: DEC
3395: ST_TO_ADDR
3396: LD_INT 5
3398: PUSH
3399: LD_EXP 14
3403: MINUS
3404: PUSH
3405: FOR_TO
3406: IFFALSE 3530
// begin hc_gallery =  ;
3408: LD_ADDR_OWVAR 33
3412: PUSH
3413: LD_STRING 
3415: ST_TO_ADDR
// hc_name =  ;
3416: LD_ADDR_OWVAR 26
3420: PUSH
3421: LD_STRING 
3423: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
3424: LD_INT 0
3426: PPUSH
3427: LD_INT 1
3429: PUSH
3430: LD_INT 2
3432: PUSH
3433: LD_INT 3
3435: PUSH
3436: LD_INT 4
3438: PUSH
3439: EMPTY
3440: LIST
3441: LIST
3442: LIST
3443: LIST
3444: PUSH
3445: LD_INT 1
3447: PPUSH
3448: LD_INT 4
3450: PPUSH
3451: CALL_OW 12
3455: ARRAY
3456: PPUSH
3457: LD_INT 4
3459: PPUSH
3460: LD_INT 6
3462: PPUSH
3463: CALL_OW 12
3467: PPUSH
3468: CALL_OW 380
// un := CreateHuman ;
3472: LD_ADDR_VAR 0 3
3476: PUSH
3477: CALL_OW 44
3481: ST_TO_ADDR
// coreHeroesTab := coreHeroesTab ^ un ;
3482: LD_ADDR_EXP 14
3486: PUSH
3487: LD_EXP 14
3491: PUSH
3492: LD_VAR 0 3
3496: ADD
3497: ST_TO_ADDR
// PlaceUnitArea ( un , CoreHeroes , false ) ;
3498: LD_VAR 0 3
3502: PPUSH
3503: LD_INT 10
3505: PPUSH
3506: LD_INT 0
3508: PPUSH
3509: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
3513: LD_VAR 0 3
3517: PPUSH
3518: LD_INT 42
3520: PPUSH
3521: LD_INT 35
3523: PPUSH
3524: CALL_OW 118
// end ;
3528: GO 3405
3530: POP
3531: POP
// siberite := LoadVariable ( 09_SibRes , 0 ) ;
3532: LD_ADDR_EXP 17
3536: PUSH
3537: LD_STRING 09_SibRes
3539: PPUSH
3540: LD_INT 0
3542: PPUSH
3543: CALL_OW 30
3547: ST_TO_ADDR
// if siberite > 500 then
3548: LD_EXP 17
3552: PUSH
3553: LD_INT 500
3555: GREATER
3556: IFFALSE 3566
// siberite := 500 ;
3558: LD_ADDR_EXP 17
3562: PUSH
3563: LD_INT 500
3565: ST_TO_ADDR
// others08 := CreateCharacterSet ( 08_other_survivors ) ;
3566: LD_ADDR_EXP 11
3570: PUSH
3571: LD_STRING 08_other_survivors
3573: PPUSH
3574: CALL_OW 31
3578: ST_TO_ADDR
// if siberite >= 200 then
3579: LD_EXP 17
3583: PUSH
3584: LD_INT 200
3586: GREATEREQUAL
3587: IFFALSE 4630
// begin if not IsPlaced ( Brown ) then
3589: LD_EXP 3
3593: PPUSH
3594: CALL_OW 305
3598: NOT
3599: IFFALSE 3686
// begin Brown := PrepareUnit ( 08_Brown , true ) ;
3601: LD_ADDR_EXP 3
3605: PUSH
3606: LD_STRING 08_Brown
3608: PPUSH
3609: LD_INT 1
3611: PPUSH
3612: CALL 5450 0 2
3616: ST_TO_ADDR
// PlaceUnitArea ( Brown , AddHeroes , false ) ;
3617: LD_EXP 3
3621: PPUSH
3622: LD_INT 11
3624: PPUSH
3625: LD_INT 0
3627: PPUSH
3628: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
3632: LD_EXP 3
3636: PPUSH
3637: LD_INT 42
3639: PPUSH
3640: LD_INT 35
3642: PPUSH
3643: CALL_OW 118
// if IsPlaced ( Brown ) then
3647: LD_EXP 3
3651: PPUSH
3652: CALL_OW 305
3656: IFFALSE 3686
// begin addHeroesTab := addHeroesTab ^ Brown ;
3658: LD_ADDR_EXP 15
3662: PUSH
3663: LD_EXP 15
3667: PUSH
3668: LD_EXP 3
3672: ADD
3673: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
3674: LD_EXP 3
3678: PPUSH
3679: LD_STRING 10_Brown
3681: PPUSH
3682: CALL_OW 38
// end ; end ; if not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
3686: LD_EXP 3
3690: PPUSH
3691: CALL_OW 305
3695: NOT
3696: PUSH
3697: LD_EXP 4
3701: PPUSH
3702: CALL_OW 305
3706: NOT
3707: AND
3708: IFFALSE 3795
// begin Donaldson := PrepareUnit ( 08_Donaldson , true ) ;
3710: LD_ADDR_EXP 4
3714: PUSH
3715: LD_STRING 08_Donaldson
3717: PPUSH
3718: LD_INT 1
3720: PPUSH
3721: CALL 5450 0 2
3725: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , addHeroes , false ) ;
3726: LD_EXP 4
3730: PPUSH
3731: LD_INT 11
3733: PPUSH
3734: LD_INT 0
3736: PPUSH
3737: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
3741: LD_EXP 4
3745: PPUSH
3746: LD_INT 42
3748: PPUSH
3749: LD_INT 35
3751: PPUSH
3752: CALL_OW 118
// if IsPlaced ( Donaldson ) then
3756: LD_EXP 4
3760: PPUSH
3761: CALL_OW 305
3765: IFFALSE 3795
// begin addHeroesTab := addHeroesTab ^ Donaldson ;
3767: LD_ADDR_EXP 15
3771: PUSH
3772: LD_EXP 15
3776: PUSH
3777: LD_EXP 4
3781: ADD
3782: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
3783: LD_EXP 4
3787: PPUSH
3788: LD_STRING 10_Donaldson
3790: PPUSH
3791: CALL_OW 38
// end ; end ; if not IsPlaced ( Brown ) and not IsPlaced ( Frank ) then
3795: LD_EXP 3
3799: PPUSH
3800: CALL_OW 305
3804: NOT
3805: PUSH
3806: LD_EXP 8
3810: PPUSH
3811: CALL_OW 305
3815: NOT
3816: AND
3817: IFFALSE 3904
// begin Frank := PrepareUnit ( 08_Frank , true ) ;
3819: LD_ADDR_EXP 8
3823: PUSH
3824: LD_STRING 08_Frank
3826: PPUSH
3827: LD_INT 1
3829: PPUSH
3830: CALL 5450 0 2
3834: ST_TO_ADDR
// PlaceUnitArea ( Frank , addHeroes , false ) ;
3835: LD_EXP 8
3839: PPUSH
3840: LD_INT 11
3842: PPUSH
3843: LD_INT 0
3845: PPUSH
3846: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
3850: LD_EXP 8
3854: PPUSH
3855: LD_INT 42
3857: PPUSH
3858: LD_INT 35
3860: PPUSH
3861: CALL_OW 118
// if IsPlaced ( Frank ) then
3865: LD_EXP 8
3869: PPUSH
3870: CALL_OW 305
3874: IFFALSE 3904
// begin addHeroesTab := addHeroesTab ^ Frank ;
3876: LD_ADDR_EXP 15
3880: PUSH
3881: LD_EXP 15
3885: PUSH
3886: LD_EXP 8
3890: ADD
3891: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
3892: LD_EXP 8
3896: PPUSH
3897: LD_STRING 10_Frank
3899: PPUSH
3900: CALL_OW 38
// end ; end ; if not IsPlaced ( Brown ) and not IsPlaced ( Houten ) then
3904: LD_EXP 3
3908: PPUSH
3909: CALL_OW 305
3913: NOT
3914: PUSH
3915: LD_EXP 9
3919: PPUSH
3920: CALL_OW 305
3924: NOT
3925: AND
3926: IFFALSE 4015
// begin Houten := PrepareUnit ( 09_Houten , true ) ;
3928: LD_ADDR_EXP 9
3932: PUSH
3933: LD_STRING 09_Houten
3935: PPUSH
3936: LD_INT 1
3938: PPUSH
3939: CALL 5450 0 2
3943: ST_TO_ADDR
// PlaceUnitArea ( Houten , addHeroes , false ) ;
3944: LD_EXP 9
3948: PPUSH
3949: LD_INT 11
3951: PPUSH
3952: LD_INT 0
3954: PPUSH
3955: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
3959: LD_EXP 9
3963: PPUSH
3964: LD_INT 42
3966: PPUSH
3967: LD_INT 35
3969: PPUSH
3970: CALL_OW 118
// if IsPlaced ( Houten ) then
3974: LD_EXP 9
3978: PPUSH
3979: CALL_OW 305
3983: IFFALSE 4013
// begin addHeroesTab := addHeroesTab ^ Houten ;
3985: LD_ADDR_EXP 15
3989: PUSH
3990: LD_EXP 15
3994: PUSH
3995: LD_EXP 9
3999: ADD
4000: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
4001: LD_EXP 9
4005: PPUSH
4006: LD_STRING 10_Houten
4008: PPUSH
4009: CALL_OW 38
// end ; end else
4013: GO 4091
// begin PlaceUnitArea ( others08 [ 1 ] , addHeroes , false ) ;
4015: LD_EXP 11
4019: PUSH
4020: LD_INT 1
4022: ARRAY
4023: PPUSH
4024: LD_INT 11
4026: PPUSH
4027: LD_INT 0
4029: PPUSH
4030: CALL_OW 49
// ComTurnXY ( others08 [ 1 ] , 42 , 35 ) ;
4034: LD_EXP 11
4038: PUSH
4039: LD_INT 1
4041: ARRAY
4042: PPUSH
4043: LD_INT 42
4045: PPUSH
4046: LD_INT 35
4048: PPUSH
4049: CALL_OW 118
// addHeroesTab := addHeroesTab ^ others08 [ 1 ] ;
4053: LD_ADDR_EXP 15
4057: PUSH
4058: LD_EXP 15
4062: PUSH
4063: LD_EXP 11
4067: PUSH
4068: LD_INT 1
4070: ARRAY
4071: ADD
4072: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
4073: LD_ADDR_EXP 11
4077: PUSH
4078: LD_EXP 11
4082: PPUSH
4083: LD_INT 1
4085: PPUSH
4086: CALL_OW 3
4090: ST_TO_ADDR
// end ; if not IsPlaced ( Donaldson ) then
4091: LD_EXP 4
4095: PPUSH
4096: CALL_OW 305
4100: NOT
4101: IFFALSE 4188
// begin Donaldson := PrepareUnit ( 08_Donaldson , true ) ;
4103: LD_ADDR_EXP 4
4107: PUSH
4108: LD_STRING 08_Donaldson
4110: PPUSH
4111: LD_INT 1
4113: PPUSH
4114: CALL 5450 0 2
4118: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , AddHeroes , false ) ;
4119: LD_EXP 4
4123: PPUSH
4124: LD_INT 11
4126: PPUSH
4127: LD_INT 0
4129: PPUSH
4130: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
4134: LD_EXP 4
4138: PPUSH
4139: LD_INT 42
4141: PPUSH
4142: LD_INT 35
4144: PPUSH
4145: CALL_OW 118
// if IsPlaced ( Donaldson ) then
4149: LD_EXP 4
4153: PPUSH
4154: CALL_OW 305
4158: IFFALSE 4188
// begin addHeroesTab := addHeroesTab ^ Donaldson ;
4160: LD_ADDR_EXP 15
4164: PUSH
4165: LD_EXP 15
4169: PUSH
4170: LD_EXP 4
4174: ADD
4175: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
4176: LD_EXP 4
4180: PPUSH
4181: LD_STRING 10_Donaldson
4183: PPUSH
4184: CALL_OW 38
// end ; end ; if not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
4188: LD_EXP 4
4192: PPUSH
4193: CALL_OW 305
4197: NOT
4198: PUSH
4199: LD_EXP 8
4203: PPUSH
4204: CALL_OW 305
4208: NOT
4209: AND
4210: IFFALSE 4297
// begin Frank := PrepareUnit ( 08_Frank , true ) ;
4212: LD_ADDR_EXP 8
4216: PUSH
4217: LD_STRING 08_Frank
4219: PPUSH
4220: LD_INT 1
4222: PPUSH
4223: CALL 5450 0 2
4227: ST_TO_ADDR
// PlaceUnitArea ( Frank , addHeroes , false ) ;
4228: LD_EXP 8
4232: PPUSH
4233: LD_INT 11
4235: PPUSH
4236: LD_INT 0
4238: PPUSH
4239: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
4243: LD_EXP 8
4247: PPUSH
4248: LD_INT 42
4250: PPUSH
4251: LD_INT 35
4253: PPUSH
4254: CALL_OW 118
// if IsPlaced ( Frank ) then
4258: LD_EXP 8
4262: PPUSH
4263: CALL_OW 305
4267: IFFALSE 4297
// begin addHeroesTab := addHeroesTab ^ Frank ;
4269: LD_ADDR_EXP 15
4273: PUSH
4274: LD_EXP 15
4278: PUSH
4279: LD_EXP 8
4283: ADD
4284: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
4285: LD_EXP 8
4289: PPUSH
4290: LD_STRING 10_Frank
4292: PPUSH
4293: CALL_OW 38
// end ; end ; if not IsPlaced ( Donaldson ) and not IsPlaced ( Houten ) then
4297: LD_EXP 4
4301: PPUSH
4302: CALL_OW 305
4306: NOT
4307: PUSH
4308: LD_EXP 9
4312: PPUSH
4313: CALL_OW 305
4317: NOT
4318: AND
4319: IFFALSE 4408
// begin Houten := PrepareUnit ( 09_Houten , true ) ;
4321: LD_ADDR_EXP 9
4325: PUSH
4326: LD_STRING 09_Houten
4328: PPUSH
4329: LD_INT 1
4331: PPUSH
4332: CALL 5450 0 2
4336: ST_TO_ADDR
// PlaceUnitArea ( Houten , addHeroes , false ) ;
4337: LD_EXP 9
4341: PPUSH
4342: LD_INT 11
4344: PPUSH
4345: LD_INT 0
4347: PPUSH
4348: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
4352: LD_EXP 9
4356: PPUSH
4357: LD_INT 42
4359: PPUSH
4360: LD_INT 35
4362: PPUSH
4363: CALL_OW 118
// if IsPlaced ( Houten ) then
4367: LD_EXP 9
4371: PPUSH
4372: CALL_OW 305
4376: IFFALSE 4406
// begin addHeroesTab = addHeroesTab ^ Houten ;
4378: LD_ADDR_EXP 15
4382: PUSH
4383: LD_EXP 15
4387: PUSH
4388: LD_EXP 9
4392: ADD
4393: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
4394: LD_EXP 9
4398: PPUSH
4399: LD_STRING 10_Houten
4401: PPUSH
4402: CALL_OW 38
// end ; end else
4406: GO 4484
// begin PlaceUnitArea ( others08 [ 1 ] , addHeroes , false ) ;
4408: LD_EXP 11
4412: PUSH
4413: LD_INT 1
4415: ARRAY
4416: PPUSH
4417: LD_INT 11
4419: PPUSH
4420: LD_INT 0
4422: PPUSH
4423: CALL_OW 49
// ComTurnXY ( others08 [ 1 ] , 42 , 35 ) ;
4427: LD_EXP 11
4431: PUSH
4432: LD_INT 1
4434: ARRAY
4435: PPUSH
4436: LD_INT 42
4438: PPUSH
4439: LD_INT 35
4441: PPUSH
4442: CALL_OW 118
// addHeroesTab := addHeroesTab ^ others08 [ 1 ] ;
4446: LD_ADDR_EXP 15
4450: PUSH
4451: LD_EXP 15
4455: PUSH
4456: LD_EXP 11
4460: PUSH
4461: LD_INT 1
4463: ARRAY
4464: ADD
4465: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
4466: LD_ADDR_EXP 11
4470: PUSH
4471: LD_EXP 11
4475: PPUSH
4476: LD_INT 1
4478: PPUSH
4479: CALL_OW 3
4483: ST_TO_ADDR
// end ; for i := 1 to 2 - addHeroesTab do
4484: LD_ADDR_VAR 0 2
4488: PUSH
4489: DOUBLE
4490: LD_INT 1
4492: DEC
4493: ST_TO_ADDR
4494: LD_INT 2
4496: PUSH
4497: LD_EXP 15
4501: MINUS
4502: PUSH
4503: FOR_TO
4504: IFFALSE 4628
// begin hc_gallery :=  ;
4506: LD_ADDR_OWVAR 33
4510: PUSH
4511: LD_STRING 
4513: ST_TO_ADDR
// hc_name :=  ;
4514: LD_ADDR_OWVAR 26
4518: PUSH
4519: LD_STRING 
4521: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
4522: LD_INT 0
4524: PPUSH
4525: LD_INT 1
4527: PUSH
4528: LD_INT 2
4530: PUSH
4531: LD_INT 3
4533: PUSH
4534: LD_INT 4
4536: PUSH
4537: EMPTY
4538: LIST
4539: LIST
4540: LIST
4541: LIST
4542: PUSH
4543: LD_INT 1
4545: PPUSH
4546: LD_INT 4
4548: PPUSH
4549: CALL_OW 12
4553: ARRAY
4554: PPUSH
4555: LD_INT 4
4557: PPUSH
4558: LD_INT 6
4560: PPUSH
4561: CALL_OW 12
4565: PPUSH
4566: CALL_OW 380
// un = CreateHuman ;
4570: LD_ADDR_VAR 0 3
4574: PUSH
4575: CALL_OW 44
4579: ST_TO_ADDR
// addHeroesTab = addHeroesTab ^ un ;
4580: LD_ADDR_EXP 15
4584: PUSH
4585: LD_EXP 15
4589: PUSH
4590: LD_VAR 0 3
4594: ADD
4595: ST_TO_ADDR
// PlaceUnitArea ( un , addHeroes , false ) ;
4596: LD_VAR 0 3
4600: PPUSH
4601: LD_INT 11
4603: PPUSH
4604: LD_INT 0
4606: PPUSH
4607: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
4611: LD_VAR 0 3
4615: PPUSH
4616: LD_INT 42
4618: PPUSH
4619: LD_INT 35
4621: PPUSH
4622: CALL_OW 118
// end ;
4626: GO 4503
4628: POP
4629: POP
// end ; if siberite > 200 then
4630: LD_EXP 17
4634: PUSH
4635: LD_INT 200
4637: GREATER
4638: IFFALSE 5190
// begin if others08 then
4640: LD_EXP 11
4644: IFFALSE 5034
// begin if others08 >= ( siberite - 200 ) / 100 then
4646: LD_EXP 11
4650: PUSH
4651: LD_EXP 17
4655: PUSH
4656: LD_INT 200
4658: MINUS
4659: PUSH
4660: LD_INT 100
4662: DIVREAL
4663: GREATEREQUAL
4664: IFFALSE 4776
// begin for i := 1 to ( siberite - 200 ) / 100 do
4666: LD_ADDR_VAR 0 2
4670: PUSH
4671: DOUBLE
4672: LD_INT 1
4674: DEC
4675: ST_TO_ADDR
4676: LD_EXP 17
4680: PUSH
4681: LD_INT 200
4683: MINUS
4684: PUSH
4685: LD_INT 100
4687: DIVREAL
4688: PUSH
4689: FOR_TO
4690: IFFALSE 4772
// begin PlaceUnitArea ( others08 [ 1 ] , addHeroes , false ) ;
4692: LD_EXP 11
4696: PUSH
4697: LD_INT 1
4699: ARRAY
4700: PPUSH
4701: LD_INT 11
4703: PPUSH
4704: LD_INT 0
4706: PPUSH
4707: CALL_OW 49
// ComTurnXY ( others08 [ 1 ] , 42 , 35 ) ;
4711: LD_EXP 11
4715: PUSH
4716: LD_INT 1
4718: ARRAY
4719: PPUSH
4720: LD_INT 42
4722: PPUSH
4723: LD_INT 35
4725: PPUSH
4726: CALL_OW 118
// addHeroesTab := addHeroesTab ^ others08 [ i ] ;
4730: LD_ADDR_EXP 15
4734: PUSH
4735: LD_EXP 15
4739: PUSH
4740: LD_EXP 11
4744: PUSH
4745: LD_VAR 0 2
4749: ARRAY
4750: ADD
4751: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
4752: LD_ADDR_EXP 11
4756: PUSH
4757: LD_EXP 11
4761: PPUSH
4762: LD_INT 1
4764: PPUSH
4765: CALL_OW 3
4769: ST_TO_ADDR
// end ;
4770: GO 4689
4772: POP
4773: POP
// end else
4774: GO 5032
// begin for i := 1 to others08 do
4776: LD_ADDR_VAR 0 2
4780: PUSH
4781: DOUBLE
4782: LD_INT 1
4784: DEC
4785: ST_TO_ADDR
4786: LD_EXP 11
4790: PUSH
4791: FOR_TO
4792: IFFALSE 4874
// begin PlaceUnitArea ( others08 [ 1 ] , addHeroes , false ) ;
4794: LD_EXP 11
4798: PUSH
4799: LD_INT 1
4801: ARRAY
4802: PPUSH
4803: LD_INT 11
4805: PPUSH
4806: LD_INT 0
4808: PPUSH
4809: CALL_OW 49
// ComTurnXY ( others08 [ 1 ] , 42 , 35 ) ;
4813: LD_EXP 11
4817: PUSH
4818: LD_INT 1
4820: ARRAY
4821: PPUSH
4822: LD_INT 42
4824: PPUSH
4825: LD_INT 35
4827: PPUSH
4828: CALL_OW 118
// addHeroesTab := addHeroesTab ^ others08 [ i ] ;
4832: LD_ADDR_EXP 15
4836: PUSH
4837: LD_EXP 15
4841: PUSH
4842: LD_EXP 11
4846: PUSH
4847: LD_VAR 0 2
4851: ARRAY
4852: ADD
4853: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
4854: LD_ADDR_EXP 11
4858: PUSH
4859: LD_EXP 11
4863: PPUSH
4864: LD_INT 1
4866: PPUSH
4867: CALL_OW 3
4871: ST_TO_ADDR
// end ;
4872: GO 4791
4874: POP
4875: POP
// for i := 1 to ( siberite - 200 ) / 100 - others08 do
4876: LD_ADDR_VAR 0 2
4880: PUSH
4881: DOUBLE
4882: LD_INT 1
4884: DEC
4885: ST_TO_ADDR
4886: LD_EXP 17
4890: PUSH
4891: LD_INT 200
4893: MINUS
4894: PUSH
4895: LD_INT 100
4897: DIVREAL
4898: PUSH
4899: LD_EXP 11
4903: MINUS
4904: PUSH
4905: FOR_TO
4906: IFFALSE 5030
// begin hc_gallery :=  ;
4908: LD_ADDR_OWVAR 33
4912: PUSH
4913: LD_STRING 
4915: ST_TO_ADDR
// hc_name :=  ;
4916: LD_ADDR_OWVAR 26
4920: PUSH
4921: LD_STRING 
4923: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
4924: LD_INT 0
4926: PPUSH
4927: LD_INT 1
4929: PUSH
4930: LD_INT 2
4932: PUSH
4933: LD_INT 3
4935: PUSH
4936: LD_INT 4
4938: PUSH
4939: EMPTY
4940: LIST
4941: LIST
4942: LIST
4943: LIST
4944: PUSH
4945: LD_INT 1
4947: PPUSH
4948: LD_INT 4
4950: PPUSH
4951: CALL_OW 12
4955: ARRAY
4956: PPUSH
4957: LD_INT 4
4959: PPUSH
4960: LD_INT 6
4962: PPUSH
4963: CALL_OW 12
4967: PPUSH
4968: CALL_OW 380
// un := CreateHuman ;
4972: LD_ADDR_VAR 0 3
4976: PUSH
4977: CALL_OW 44
4981: ST_TO_ADDR
// addHeroesTab := addHeroesTab ^ un ;
4982: LD_ADDR_EXP 15
4986: PUSH
4987: LD_EXP 15
4991: PUSH
4992: LD_VAR 0 3
4996: ADD
4997: ST_TO_ADDR
// PlaceUnitArea ( un , addHeroes , false ) ;
4998: LD_VAR 0 3
5002: PPUSH
5003: LD_INT 11
5005: PPUSH
5006: LD_INT 0
5008: PPUSH
5009: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
5013: LD_VAR 0 3
5017: PPUSH
5018: LD_INT 42
5020: PPUSH
5021: LD_INT 35
5023: PPUSH
5024: CALL_OW 118
// end ;
5028: GO 4905
5030: POP
5031: POP
// end ; end else
5032: GO 5190
// begin for i := 1 to ( siberite - 200 ) / 100 - others08 do
5034: LD_ADDR_VAR 0 2
5038: PUSH
5039: DOUBLE
5040: LD_INT 1
5042: DEC
5043: ST_TO_ADDR
5044: LD_EXP 17
5048: PUSH
5049: LD_INT 200
5051: MINUS
5052: PUSH
5053: LD_INT 100
5055: DIVREAL
5056: PUSH
5057: LD_EXP 11
5061: MINUS
5062: PUSH
5063: FOR_TO
5064: IFFALSE 5188
// begin hc_gallery :=  ;
5066: LD_ADDR_OWVAR 33
5070: PUSH
5071: LD_STRING 
5073: ST_TO_ADDR
// hc_name :=  ;
5074: LD_ADDR_OWVAR 26
5078: PUSH
5079: LD_STRING 
5081: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
5082: LD_INT 0
5084: PPUSH
5085: LD_INT 1
5087: PUSH
5088: LD_INT 2
5090: PUSH
5091: LD_INT 3
5093: PUSH
5094: LD_INT 4
5096: PUSH
5097: EMPTY
5098: LIST
5099: LIST
5100: LIST
5101: LIST
5102: PUSH
5103: LD_INT 1
5105: PPUSH
5106: LD_INT 4
5108: PPUSH
5109: CALL_OW 12
5113: ARRAY
5114: PPUSH
5115: LD_INT 4
5117: PPUSH
5118: LD_INT 6
5120: PPUSH
5121: CALL_OW 12
5125: PPUSH
5126: CALL_OW 380
// un := CreateHuman ;
5130: LD_ADDR_VAR 0 3
5134: PUSH
5135: CALL_OW 44
5139: ST_TO_ADDR
// addHeroesTab := addHeroesTab ^ un ;
5140: LD_ADDR_EXP 15
5144: PUSH
5145: LD_EXP 15
5149: PUSH
5150: LD_VAR 0 3
5154: ADD
5155: ST_TO_ADDR
// PlaceUnitArea ( un , addHeroes , false ) ;
5156: LD_VAR 0 3
5160: PPUSH
5161: LD_INT 11
5163: PPUSH
5164: LD_INT 0
5166: PPUSH
5167: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
5171: LD_VAR 0 3
5175: PPUSH
5176: LD_INT 42
5178: PPUSH
5179: LD_INT 35
5181: PPUSH
5182: CALL_OW 118
// end ;
5186: GO 5063
5188: POP
5189: POP
// end ; end ; PlaceHumanInUnit ( JMM , car ) ;
5190: LD_EXP 1
5194: PPUSH
5195: LD_INT 138
5197: PPUSH
5198: CALL_OW 52
// PlaceHumanInUnit ( Powell , Am_bar ) ;
5202: LD_EXP 2
5206: PPUSH
5207: LD_INT 58
5209: PPUSH
5210: CALL_OW 52
// SetClass ( JMM , 1 ) ;
5214: LD_EXP 1
5218: PPUSH
5219: LD_INT 1
5221: PPUSH
5222: CALL_OW 336
// end ;
5226: LD_VAR 0 1
5230: RET
// export function PrepareConvoy ; var i , veh , un ; begin
5231: LD_INT 0
5233: PPUSH
5234: PPUSH
5235: PPUSH
5236: PPUSH
// uc_side := 1 ;
5237: LD_ADDR_OWVAR 20
5241: PUSH
5242: LD_INT 1
5244: ST_TO_ADDR
// uc_nation := 1 ;
5245: LD_ADDR_OWVAR 21
5249: PUSH
5250: LD_INT 1
5252: ST_TO_ADDR
// for i := 1 to 2 do
5253: LD_ADDR_VAR 0 2
5257: PUSH
5258: DOUBLE
5259: LD_INT 1
5261: DEC
5262: ST_TO_ADDR
5263: LD_INT 2
5265: PUSH
5266: FOR_TO
5267: IFFALSE 5405
// begin vc_engine := 1 ;
5269: LD_ADDR_OWVAR 39
5273: PUSH
5274: LD_INT 1
5276: ST_TO_ADDR
// vc_control := 1 ;
5277: LD_ADDR_OWVAR 38
5281: PUSH
5282: LD_INT 1
5284: ST_TO_ADDR
// vc_weapon := 12 ;
5285: LD_ADDR_OWVAR 40
5289: PUSH
5290: LD_INT 12
5292: ST_TO_ADDR
// vc_chassis := 3 ;
5293: LD_ADDR_OWVAR 37
5297: PUSH
5298: LD_INT 3
5300: ST_TO_ADDR
// veh := CreateVehicle ;
5301: LD_ADDR_VAR 0 3
5305: PUSH
5306: CALL_OW 45
5310: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
5311: LD_VAR 0 3
5315: PPUSH
5316: LD_INT 1
5318: PPUSH
5319: CALL_OW 233
// PlaceUnitArea ( veh , Cargo , false ) ;
5323: LD_VAR 0 3
5327: PPUSH
5328: LD_INT 9
5330: PPUSH
5331: LD_INT 0
5333: PPUSH
5334: CALL_OW 49
// AddCargo ( veh , 1 , 100 ) ;
5338: LD_VAR 0 3
5342: PPUSH
5343: LD_INT 1
5345: PPUSH
5346: LD_INT 100
5348: PPUSH
5349: CALL_OW 291
// convoy = convoy ^ veh ;
5353: LD_ADDR_EXP 12
5357: PUSH
5358: LD_EXP 12
5362: PUSH
5363: LD_VAR 0 3
5367: ADD
5368: ST_TO_ADDR
// PrepareMechanic ( false , 10 ) ;
5369: LD_INT 0
5371: PPUSH
5372: LD_INT 10
5374: PPUSH
5375: CALL_OW 383
// un := CreateHuman ;
5379: LD_ADDR_VAR 0 4
5383: PUSH
5384: CALL_OW 44
5388: ST_TO_ADDR
// PlaceHumanInUnit ( un , veh ) ;
5389: LD_VAR 0 4
5393: PPUSH
5394: LD_VAR 0 3
5398: PPUSH
5399: CALL_OW 52
// end ;
5403: GO 5266
5405: POP
5406: POP
// AddComMoveXY ( convoy [ 1 ] , 45 , 43 ) ;
5407: LD_EXP 12
5411: PUSH
5412: LD_INT 1
5414: ARRAY
5415: PPUSH
5416: LD_INT 45
5418: PPUSH
5419: LD_INT 43
5421: PPUSH
5422: CALL_OW 171
// AddComMoveXY ( convoy [ 2 ] , 40 , 40 ) ;
5426: LD_EXP 12
5430: PUSH
5431: LD_INT 2
5433: ARRAY
5434: PPUSH
5435: LD_INT 40
5437: PPUSH
5438: LD_INT 40
5440: PPUSH
5441: CALL_OW 171
// end ; end_of_file
5445: LD_VAR 0 1
5449: RET
// export function PrepareUnit ( ident , exist_mode ) ; var unit ; begin
5450: LD_INT 0
5452: PPUSH
5453: PPUSH
// if exist_mode then
5454: LD_VAR 0 2
5458: IFFALSE 5477
// unit := CreateCharacter ( ident ) else
5460: LD_ADDR_VAR 0 4
5464: PUSH
5465: LD_VAR 0 1
5469: PPUSH
5470: CALL_OW 34
5474: ST_TO_ADDR
5475: GO 5492
// unit := NewCharacter ( ident ) ;
5477: LD_ADDR_VAR 0 4
5481: PUSH
5482: LD_VAR 0 1
5486: PPUSH
5487: CALL_OW 25
5491: ST_TO_ADDR
// result := unit ;
5492: LD_ADDR_VAR 0 3
5496: PUSH
5497: LD_VAR 0 4
5501: ST_TO_ADDR
// end ;
5502: LD_VAR 0 3
5506: RET
// export function Video ( mode ) ; begin
5507: LD_INT 0
5509: PPUSH
// ingame_video = mode ;
5510: LD_ADDR_OWVAR 52
5514: PUSH
5515: LD_VAR 0 1
5519: ST_TO_ADDR
// interface_hidden = mode ;
5520: LD_ADDR_OWVAR 54
5524: PUSH
5525: LD_VAR 0 1
5529: ST_TO_ADDR
// end ; end_of_file
5530: LD_VAR 0 2
5534: RET
// on VehicleConstructed ( veh , fac ) do begin AddComMoveXY ( veh , 82 , 77 ) ;
5535: LD_VAR 0 1
5539: PPUSH
5540: LD_INT 82
5542: PPUSH
5543: LD_INT 77
5545: PPUSH
5546: CALL_OW 171
// end ;
5550: PPOPN 2
5552: END
// on DialogueSkipped ( d ) do begin EndMission ;
5553: CALL 671 0 0
// end ;
5557: PPOPN 1
5559: END
