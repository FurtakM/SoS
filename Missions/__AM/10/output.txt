// export JMM , Powell ; export Brown , Donaldson , Bobby , Cyrus , Lisa , Frank , Houten , Gary ; export others08 ; export convoy , prepConv ; export coreHeroesTab , addHeroesTab ; export selectedToMission ; export siberite ; starting begin Resetfog ;
   0: CALL_OW 335
// SetBName ( Am_dep , alpha ) ;
   4: LD_INT 5
   6: PPUSH
   7: LD_STRING alpha
   9: PPUSH
  10: CALL_OW 500
// convoy := [ ] ;
  14: LD_ADDR_EXP 12
  18: PUSH
  19: EMPTY
  20: ST_TO_ADDR
// coreHeroesTab := [ ] ;
  21: LD_ADDR_EXP 14
  25: PUSH
  26: EMPTY
  27: ST_TO_ADDR
// addHeroesTab := [ ] ;
  28: LD_ADDR_EXP 15
  32: PUSH
  33: EMPTY
  34: ST_TO_ADDR
// selectedToMission := [ ] ;
  35: LD_ADDR_EXP 16
  39: PUSH
  40: EMPTY
  41: ST_TO_ADDR
// PrepareHeroes ;
  42: CALL 968 0 0
// Action ;
  46: CALL 51 0 0
// end ; end_of_file
  50: END
// export function Action ; var others ; begin
  51: LD_INT 0
  53: PPUSH
  54: PPUSH
// Video ( true ) ;
  55: LD_INT 1
  57: PPUSH
  58: CALL 5514 0 1
// AddComConstruct ( Am_tov1 , 2 , 1 , 1 , 4 ) ;
  62: LD_INT 60
  64: PPUSH
  65: LD_INT 2
  67: PPUSH
  68: LD_INT 1
  70: PPUSH
  71: LD_INT 1
  73: PPUSH
  74: LD_INT 4
  76: PPUSH
  77: CALL_OW 185
// AddComConstruct ( Am_tov2 , 4 , 1 , 1 , 6 ) ;
  81: LD_INT 6
  83: PPUSH
  84: LD_INT 4
  86: PPUSH
  87: LD_INT 1
  89: PPUSH
  90: LD_INT 1
  92: PPUSH
  93: LD_INT 6
  95: PPUSH
  96: CALL_OW 185
// AddComConstruct ( Am_tov1 , 2 , 1 , 1 , 3 ) ;
 100: LD_INT 60
 102: PPUSH
 103: LD_INT 2
 105: PPUSH
 106: LD_INT 1
 108: PPUSH
 109: LD_INT 1
 111: PPUSH
 112: LD_INT 3
 114: PPUSH
 115: CALL_OW 185
// AddComConstruct ( Am_tov2 , 4 , 1 , 1 , 4 ) ;
 119: LD_INT 6
 121: PPUSH
 122: LD_INT 4
 124: PPUSH
 125: LD_INT 1
 127: PPUSH
 128: LD_INT 1
 130: PPUSH
 131: LD_INT 4
 133: PPUSH
 134: CALL_OW 185
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap1 ) ;
 138: LD_INT 47
 140: PUSH
 141: LD_INT 4
 143: PUSH
 144: EMPTY
 145: LIST
 146: LIST
 147: PPUSH
 148: LD_INT 51
 150: PPUSH
 151: CALL_OW 184
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap2 ) ;
 155: LD_INT 47
 157: PUSH
 158: LD_INT 4
 160: PUSH
 161: EMPTY
 162: LIST
 163: LIST
 164: PPUSH
 165: LD_INT 52
 167: PPUSH
 168: CALL_OW 184
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap3 ) ;
 172: LD_INT 47
 174: PUSH
 175: LD_INT 4
 177: PUSH
 178: EMPTY
 179: LIST
 180: LIST
 181: PPUSH
 182: LD_INT 53
 184: PPUSH
 185: CALL_OW 184
// CenterNowOnUnits ( car ) ;
 189: LD_INT 138
 191: PPUSH
 192: CALL_OW 87
// ComMoveXY ( car , 69 , 36 ) ;
 196: LD_INT 138
 198: PPUSH
 199: LD_INT 69
 201: PPUSH
 202: LD_INT 36
 204: PPUSH
 205: CALL_OW 111
// AddComMoveXY ( car , 65 , 43 ) ;
 209: LD_INT 138
 211: PPUSH
 212: LD_INT 65
 214: PPUSH
 215: LD_INT 43
 217: PPUSH
 218: CALL_OW 171
// AddComMoveXY ( car , 63 , 48 ) ;
 222: LD_INT 138
 224: PPUSH
 225: LD_INT 63
 227: PPUSH
 228: LD_INT 48
 230: PPUSH
 231: CALL_OW 171
// AddComMoveXY ( car , 60 , 50 ) ;
 235: LD_INT 138
 237: PPUSH
 238: LD_INT 60
 240: PPUSH
 241: LD_INT 50
 243: PPUSH
 244: CALL_OW 171
// AddComMoveXY ( car , 54 , 47 ) ;
 248: LD_INT 138
 250: PPUSH
 251: LD_INT 54
 253: PPUSH
 254: LD_INT 47
 256: PPUSH
 257: CALL_OW 171
// AddComMoveXY ( car , 51 , 40 ) ;
 261: LD_INT 138
 263: PPUSH
 264: LD_INT 51
 266: PPUSH
 267: LD_INT 40
 269: PPUSH
 270: CALL_OW 171
// repeat wait ( 0 0$1 ) ;
 274: LD_INT 35
 276: PPUSH
 277: CALL_OW 67
// CenterNowOnUnits ( car ) ;
 281: LD_INT 138
 283: PPUSH
 284: CALL_OW 87
// until IsInArea ( car , stop ) ;
 288: LD_INT 138
 290: PPUSH
 291: LD_INT 7
 293: PPUSH
 294: CALL_OW 308
 298: IFFALSE 274
// ComExitVehicle ( JMM ) ;
 300: LD_EXP 1
 304: PPUSH
 305: CALL_OW 121
// wait ( 0 0$01 ) ;
 309: LD_INT 35
 311: PPUSH
 312: CALL_OW 67
// ComMoveXY ( JMM , 42 , 37 ) ;
 316: LD_EXP 1
 320: PPUSH
 321: LD_INT 42
 323: PPUSH
 324: LD_INT 37
 326: PPUSH
 327: CALL_OW 111
// wait ( 0 0$5 ) ;
 331: LD_INT 175
 333: PPUSH
 334: CALL_OW 67
// ComExitBuilding ( Powell ) ;
 338: LD_EXP 2
 342: PPUSH
 343: CALL_OW 122
// wait ( 0 0$01 ) ;
 347: LD_INT 35
 349: PPUSH
 350: CALL_OW 67
// ComTurnUnit ( Powell , JMM ) ;
 354: LD_EXP 2
 358: PPUSH
 359: LD_EXP 1
 363: PPUSH
 364: CALL_OW 119
// ComTurnUnit ( JMM , Powell ) ;
 368: LD_EXP 1
 372: PPUSH
 373: LD_EXP 2
 377: PPUSH
 378: CALL_OW 119
// Say ( JMM , D1-JMM-1 ) ;
 382: LD_EXP 1
 386: PPUSH
 387: LD_STRING D1-JMM-1
 389: PPUSH
 390: CALL_OW 88
// Say ( Powell , D1-Pow-1 ) ;
 394: LD_EXP 2
 398: PPUSH
 399: LD_STRING D1-Pow-1
 401: PPUSH
 402: CALL_OW 88
// Say ( JMM , D1-JMM-2 ) ;
 406: LD_EXP 1
 410: PPUSH
 411: LD_STRING D1-JMM-2
 413: PPUSH
 414: CALL_OW 88
// Say ( Powell , D1-Pow-2 ) ;
 418: LD_EXP 2
 422: PPUSH
 423: LD_STRING D1-Pow-2
 425: PPUSH
 426: CALL_OW 88
// Say ( JMM , D1-JMM-3 ) ;
 430: LD_EXP 1
 434: PPUSH
 435: LD_STRING D1-JMM-3
 437: PPUSH
 438: CALL_OW 88
// Say ( Powell , D1-Pow-3 ) ;
 442: LD_EXP 2
 446: PPUSH
 447: LD_STRING D1-Pow-3
 449: PPUSH
 450: CALL_OW 88
// Say ( JMM , D1-JMM-4 ) ;
 454: LD_EXP 1
 458: PPUSH
 459: LD_STRING D1-JMM-4
 461: PPUSH
 462: CALL_OW 88
// PrepareConvoy ;
 466: CALL 5238 0 0
// Say ( Powell , D1-Pow-4 ) ;
 470: LD_EXP 2
 474: PPUSH
 475: LD_STRING D1-Pow-4
 477: PPUSH
 478: CALL_OW 88
// if PrepareUnit ( 08_Joan , true ) then
 482: LD_STRING 08_Joan
 484: PPUSH
 485: LD_INT 1
 487: PPUSH
 488: CALL 5457 0 2
 492: IFFALSE 506
// Say ( Powell , D1-Pow-4a ) ;
 494: LD_EXP 2
 498: PPUSH
 499: LD_STRING D1-Pow-4a
 501: PPUSH
 502: CALL_OW 88
// Say ( Powell , D1-Pow-4b ) ;
 506: LD_EXP 2
 510: PPUSH
 511: LD_STRING D1-Pow-4b
 513: PPUSH
 514: CALL_OW 88
// AddComGive ( convoy , Am_dep ) ;
 518: LD_EXP 12
 522: PPUSH
 523: LD_INT 5
 525: PPUSH
 526: CALL_OW 221
// AddComMoveXY ( convoy , 81 , 77 ) ;
 530: LD_EXP 12
 534: PPUSH
 535: LD_INT 81
 537: PPUSH
 538: LD_INT 77
 540: PPUSH
 541: CALL_OW 171
// Say ( JMM , D1-JMM-5 ) ;
 545: LD_EXP 1
 549: PPUSH
 550: LD_STRING D1-JMM-5
 552: PPUSH
 553: CALL_OW 88
// Say ( Powell , D1-Pow-5 ) ;
 557: LD_EXP 2
 561: PPUSH
 562: LD_STRING D1-Pow-5
 564: PPUSH
 565: CALL_OW 88
// Say ( JMM , D1-JMM-6 ) ;
 569: LD_EXP 1
 573: PPUSH
 574: LD_STRING D1-JMM-6
 576: PPUSH
 577: CALL_OW 88
// Say ( Powell , D1-Pow-6 ) ;
 581: LD_EXP 2
 585: PPUSH
 586: LD_STRING D1-Pow-6
 588: PPUSH
 589: CALL_OW 88
// Say ( JMM , D1-JMM-7 ) ;
 593: LD_EXP 1
 597: PPUSH
 598: LD_STRING D1-JMM-7
 600: PPUSH
 601: CALL_OW 88
// Say ( Powell , D1-Pow-7 ) ;
 605: LD_EXP 2
 609: PPUSH
 610: LD_STRING D1-Pow-7
 612: PPUSH
 613: CALL_OW 88
// Say ( JMM , D1-JMM-8 ) ;
 617: LD_EXP 1
 621: PPUSH
 622: LD_STRING D1-JMM-8
 624: PPUSH
 625: CALL_OW 88
// ComMoveXY ( JMM , 47 , 48 ) ;
 629: LD_EXP 1
 633: PPUSH
 634: LD_INT 47
 636: PPUSH
 637: LD_INT 48
 639: PPUSH
 640: CALL_OW 111
// ComEnterUnit ( Powell , Am_bar ) ;
 644: LD_EXP 2
 648: PPUSH
 649: LD_INT 58
 651: PPUSH
 652: CALL_OW 120
// wait ( 0 0$3 ) ;
 656: LD_INT 105
 658: PPUSH
 659: CALL_OW 67
// others := FilterUnitsInArea ( CoreHeroes , [ [ f_side , 1 ] , [ f_type , unit_human ] ] ) ;
 663: LD_ADDR_VAR 0 2
 667: PUSH
 668: LD_INT 10
 670: PPUSH
 671: LD_INT 22
 673: PUSH
 674: LD_INT 1
 676: PUSH
 677: EMPTY
 678: LIST
 679: LIST
 680: PUSH
 681: LD_INT 21
 683: PUSH
 684: LD_INT 1
 686: PUSH
 687: EMPTY
 688: LIST
 689: LIST
 690: PUSH
 691: EMPTY
 692: LIST
 693: LIST
 694: PPUSH
 695: CALL_OW 70
 699: ST_TO_ADDR
// others := others ^ FilterUnitsInArea ( AddHeroes , [ [ f_side , 1 ] , [ f_type , unit_human ] ] ) ;
 700: LD_ADDR_VAR 0 2
 704: PUSH
 705: LD_VAR 0 2
 709: PUSH
 710: LD_INT 11
 712: PPUSH
 713: LD_INT 22
 715: PUSH
 716: LD_INT 1
 718: PUSH
 719: EMPTY
 720: LIST
 721: LIST
 722: PUSH
 723: LD_INT 21
 725: PUSH
 726: LD_INT 1
 728: PUSH
 729: EMPTY
 730: LIST
 731: LIST
 732: PUSH
 733: EMPTY
 734: LIST
 735: LIST
 736: PPUSH
 737: CALL_OW 70
 741: ADD
 742: ST_TO_ADDR
// others := others diff [ JMM , Powell , Brown , Donaldson , Bobby , Cyrus , Lisa , Frank , Houten , Gary ] ;
 743: LD_ADDR_VAR 0 2
 747: PUSH
 748: LD_VAR 0 2
 752: PUSH
 753: LD_EXP 1
 757: PUSH
 758: LD_EXP 2
 762: PUSH
 763: LD_EXP 3
 767: PUSH
 768: LD_EXP 4
 772: PUSH
 773: LD_EXP 5
 777: PUSH
 778: LD_EXP 6
 782: PUSH
 783: LD_EXP 7
 787: PUSH
 788: LD_EXP 8
 792: PUSH
 793: LD_EXP 9
 797: PUSH
 798: LD_EXP 10
 802: PUSH
 803: EMPTY
 804: LIST
 805: LIST
 806: LIST
 807: LIST
 808: LIST
 809: LIST
 810: LIST
 811: LIST
 812: LIST
 813: LIST
 814: DIFF
 815: ST_TO_ADDR
// SaveCharacters ( JMM , 10_JMM ) ;
 816: LD_EXP 1
 820: PPUSH
 821: LD_STRING 10_JMM
 823: PPUSH
 824: CALL_OW 38
// SaveCharacters ( others , OthersIn10 ) ;
 828: LD_VAR 0 2
 832: PPUSH
 833: LD_STRING OthersIn10
 835: PPUSH
 836: CALL_OW 38
// SaveCharacters ( others08 , 10_lock ) ;
 840: LD_EXP 11
 844: PPUSH
 845: LD_STRING 10_lock
 847: PPUSH
 848: CALL_OW 38
// DeleteCharacters ( 08_others ) ;
 852: LD_STRING 08_others
 854: PPUSH
 855: CALL_OW 40
// SaveCharacters ( others , 08_others ) ;
 859: LD_VAR 0 2
 863: PPUSH
 864: LD_STRING 08_others
 866: PPUSH
 867: CALL_OW 38
// ToLua ( enableBioCharacter(BIO_POW) ) ;
 871: LD_STRING enableBioCharacter(BIO_POW)
 873: PPUSH
 874: CALL_OW 559
// ToLua ( enableBioCharacter(BIO_CATH) ) ;
 878: LD_STRING enableBioCharacter(BIO_CATH)
 880: PPUSH
 881: CALL_OW 559
// ChangeMap ( 10 , %_cont ) ;
 885: LD_INT 10
 887: PPUSH
 888: LD_STRING %_cont
 890: PPUSH
 891: CALL_OW 340
// end ;
 895: LD_VAR 0 1
 899: RET
// every 0 0$1 trigger FilterUnitsInArea ( removeCar , [ f_side , 1 ] ) do var i ;
 900: LD_INT 12
 902: PPUSH
 903: LD_INT 22
 905: PUSH
 906: LD_INT 1
 908: PUSH
 909: EMPTY
 910: LIST
 911: LIST
 912: PPUSH
 913: CALL_OW 70
 917: IFFALSE 965
 919: GO 921
 921: DISABLE
 922: LD_INT 0
 924: PPUSH
// begin enable ;
 925: ENABLE
// for i in FilterUnitsInArea ( removeCar , [ f_side , 1 ] ) do
 926: LD_ADDR_VAR 0 1
 930: PUSH
 931: LD_INT 12
 933: PPUSH
 934: LD_INT 22
 936: PUSH
 937: LD_INT 1
 939: PUSH
 940: EMPTY
 941: LIST
 942: LIST
 943: PPUSH
 944: CALL_OW 70
 948: PUSH
 949: FOR_IN
 950: IFFALSE 963
// RemoveUnit ( i ) ;
 952: LD_VAR 0 1
 956: PPUSH
 957: CALL_OW 64
 961: GO 949
 963: POP
 964: POP
// end ; end_of_file
 965: PPOPN 1
 967: END
// export function PrepareHeroes ; var i , un ; begin
 968: LD_INT 0
 970: PPUSH
 971: PPUSH
 972: PPUSH
// uc_side := 1 ;
 973: LD_ADDR_OWVAR 20
 977: PUSH
 978: LD_INT 1
 980: ST_TO_ADDR
// uc_nation := 1 ;
 981: LD_ADDR_OWVAR 21
 985: PUSH
 986: LD_INT 1
 988: ST_TO_ADDR
// JMM := PrepareUnit ( 09_JMM , true ) ;
 989: LD_ADDR_EXP 1
 993: PUSH
 994: LD_STRING 09_JMM
 996: PPUSH
 997: LD_INT 1
 999: PPUSH
1000: CALL 5457 0 2
1004: ST_TO_ADDR
// Powell := PrepareUnit ( Powell , false ) ;
1005: LD_ADDR_EXP 2
1009: PUSH
1010: LD_STRING Powell
1012: PPUSH
1013: LD_INT 0
1015: PPUSH
1016: CALL 5457 0 2
1020: ST_TO_ADDR
// Bobby := PrepareUnit ( 09_Bobby , true ) ;
1021: LD_ADDR_EXP 5
1025: PUSH
1026: LD_STRING 09_Bobby
1028: PPUSH
1029: LD_INT 1
1031: PPUSH
1032: CALL 5457 0 2
1036: ST_TO_ADDR
// PlaceUnitArea ( Bobby , CoreHeroes , false ) ;
1037: LD_EXP 5
1041: PPUSH
1042: LD_INT 10
1044: PPUSH
1045: LD_INT 0
1047: PPUSH
1048: CALL_OW 49
// ComTurnXY ( Bobby , 42 , 35 ) ;
1052: LD_EXP 5
1056: PPUSH
1057: LD_INT 42
1059: PPUSH
1060: LD_INT 35
1062: PPUSH
1063: CALL_OW 118
// if IsPlaced ( Bobby ) then
1067: LD_EXP 5
1071: PPUSH
1072: CALL_OW 305
1076: IFFALSE 1106
// begin coreHeroesTab := coreHeroesTab ^ Bobby ;
1078: LD_ADDR_EXP 14
1082: PUSH
1083: LD_EXP 14
1087: PUSH
1088: LD_EXP 5
1092: ADD
1093: ST_TO_ADDR
// SaveCharacters ( Bobby , 10_Bobby ) ;
1094: LD_EXP 5
1098: PPUSH
1099: LD_STRING 10_Bobby
1101: PPUSH
1102: CALL_OW 38
// end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) then
1106: LD_EXP 5
1110: PPUSH
1111: CALL_OW 305
1115: NOT
1116: PUSH
1117: LD_EXP 3
1121: PPUSH
1122: CALL_OW 305
1126: NOT
1127: AND
1128: IFFALSE 1215
// begin Brown := PrepareUnit ( 08_Brown , true ) ;
1130: LD_ADDR_EXP 3
1134: PUSH
1135: LD_STRING 08_Brown
1137: PPUSH
1138: LD_INT 1
1140: PPUSH
1141: CALL 5457 0 2
1145: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
1146: LD_EXP 3
1150: PPUSH
1151: LD_INT 10
1153: PPUSH
1154: LD_INT 0
1156: PPUSH
1157: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
1161: LD_EXP 3
1165: PPUSH
1166: LD_INT 42
1168: PPUSH
1169: LD_INT 35
1171: PPUSH
1172: CALL_OW 118
// if IsPlaced ( Brown ) then
1176: LD_EXP 3
1180: PPUSH
1181: CALL_OW 305
1185: IFFALSE 1215
// begin coreHeroesTab := coreHeroesTab ^ Brown ;
1187: LD_ADDR_EXP 14
1191: PUSH
1192: LD_EXP 14
1196: PUSH
1197: LD_EXP 3
1201: ADD
1202: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
1203: LD_EXP 3
1207: PPUSH
1208: LD_STRING 10_Brown
1210: PPUSH
1211: CALL_OW 38
// end ; end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
1215: LD_EXP 5
1219: PPUSH
1220: CALL_OW 305
1224: NOT
1225: PUSH
1226: LD_EXP 3
1230: PPUSH
1231: CALL_OW 305
1235: NOT
1236: AND
1237: PUSH
1238: LD_EXP 4
1242: PPUSH
1243: CALL_OW 305
1247: NOT
1248: AND
1249: IFFALSE 1336
// begin Donaldson := PrepareUnit ( 08_Donaldson , true ) ;
1251: LD_ADDR_EXP 4
1255: PUSH
1256: LD_STRING 08_Donaldson
1258: PPUSH
1259: LD_INT 1
1261: PPUSH
1262: CALL 5457 0 2
1266: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
1267: LD_EXP 4
1271: PPUSH
1272: LD_INT 10
1274: PPUSH
1275: LD_INT 0
1277: PPUSH
1278: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
1282: LD_EXP 4
1286: PPUSH
1287: LD_INT 42
1289: PPUSH
1290: LD_INT 35
1292: PPUSH
1293: CALL_OW 118
// if IsPlaced ( Donaldson ) then
1297: LD_EXP 4
1301: PPUSH
1302: CALL_OW 305
1306: IFFALSE 1336
// begin coreHeroesTab := coreHeroesTab ^ Donaldson ;
1308: LD_ADDR_EXP 14
1312: PUSH
1313: LD_EXP 14
1317: PUSH
1318: LD_EXP 4
1322: ADD
1323: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
1324: LD_EXP 4
1328: PPUSH
1329: LD_STRING 10_Donaldson
1331: PPUSH
1332: CALL_OW 38
// end ; end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
1336: LD_EXP 5
1340: PPUSH
1341: CALL_OW 305
1345: NOT
1346: PUSH
1347: LD_EXP 3
1351: PPUSH
1352: CALL_OW 305
1356: NOT
1357: AND
1358: PUSH
1359: LD_EXP 4
1363: PPUSH
1364: CALL_OW 305
1368: NOT
1369: AND
1370: PUSH
1371: LD_EXP 8
1375: PPUSH
1376: CALL_OW 305
1380: NOT
1381: AND
1382: IFFALSE 1469
// begin Frank := PrepareUnit ( 08_Frank , true ) ;
1384: LD_ADDR_EXP 8
1388: PUSH
1389: LD_STRING 08_Frank
1391: PPUSH
1392: LD_INT 1
1394: PPUSH
1395: CALL 5457 0 2
1399: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
1400: LD_EXP 8
1404: PPUSH
1405: LD_INT 10
1407: PPUSH
1408: LD_INT 0
1410: PPUSH
1411: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
1415: LD_EXP 8
1419: PPUSH
1420: LD_INT 42
1422: PPUSH
1423: LD_INT 35
1425: PPUSH
1426: CALL_OW 118
// if IsPlaced ( Frank ) then
1430: LD_EXP 8
1434: PPUSH
1435: CALL_OW 305
1439: IFFALSE 1469
// begin coreHeroesTab := coreHeroesTab ^ Frank ;
1441: LD_ADDR_EXP 14
1445: PUSH
1446: LD_EXP 14
1450: PUSH
1451: LD_EXP 8
1455: ADD
1456: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
1457: LD_EXP 8
1461: PPUSH
1462: LD_STRING 10_Frank
1464: PPUSH
1465: CALL_OW 38
// end ; end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
1469: LD_EXP 5
1473: PPUSH
1474: CALL_OW 305
1478: NOT
1479: PUSH
1480: LD_EXP 3
1484: PPUSH
1485: CALL_OW 305
1489: NOT
1490: AND
1491: PUSH
1492: LD_EXP 4
1496: PPUSH
1497: CALL_OW 305
1501: NOT
1502: AND
1503: PUSH
1504: LD_EXP 8
1508: PPUSH
1509: CALL_OW 305
1513: NOT
1514: AND
1515: PUSH
1516: LD_EXP 9
1520: PPUSH
1521: CALL_OW 305
1525: NOT
1526: AND
1527: IFFALSE 1614
// begin Houten := PrepareUnit ( 09_Houten , true ) ;
1529: LD_ADDR_EXP 9
1533: PUSH
1534: LD_STRING 09_Houten
1536: PPUSH
1537: LD_INT 1
1539: PPUSH
1540: CALL 5457 0 2
1544: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
1545: LD_EXP 9
1549: PPUSH
1550: LD_INT 10
1552: PPUSH
1553: LD_INT 0
1555: PPUSH
1556: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
1560: LD_EXP 9
1564: PPUSH
1565: LD_INT 42
1567: PPUSH
1568: LD_INT 35
1570: PPUSH
1571: CALL_OW 118
// if IsPlaced ( Houten ) then
1575: LD_EXP 9
1579: PPUSH
1580: CALL_OW 305
1584: IFFALSE 1614
// begin coreHeroesTab := coreHeroesTab ^ Houten ;
1586: LD_ADDR_EXP 14
1590: PUSH
1591: LD_EXP 14
1595: PUSH
1596: LD_EXP 9
1600: ADD
1601: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
1602: LD_EXP 9
1606: PPUSH
1607: LD_STRING 10_Houten
1609: PPUSH
1610: CALL_OW 38
// end ; end ; Cyrus := PrepareUnit ( 09_Cyrus , true ) ;
1614: LD_ADDR_EXP 6
1618: PUSH
1619: LD_STRING 09_Cyrus
1621: PPUSH
1622: LD_INT 1
1624: PPUSH
1625: CALL 5457 0 2
1629: ST_TO_ADDR
// PlaceUnitArea ( Cyrus , CoreHeroes , false ) ;
1630: LD_EXP 6
1634: PPUSH
1635: LD_INT 10
1637: PPUSH
1638: LD_INT 0
1640: PPUSH
1641: CALL_OW 49
// ComTurnXY ( Cyrus , 42 , 35 ) ;
1645: LD_EXP 6
1649: PPUSH
1650: LD_INT 42
1652: PPUSH
1653: LD_INT 35
1655: PPUSH
1656: CALL_OW 118
// if IsPlaced ( Cyrus ) then
1660: LD_EXP 6
1664: PPUSH
1665: CALL_OW 305
1669: IFFALSE 1699
// begin coreHeroesTab := coreHeroesTab ^ Cyrus ;
1671: LD_ADDR_EXP 14
1675: PUSH
1676: LD_EXP 14
1680: PUSH
1681: LD_EXP 6
1685: ADD
1686: ST_TO_ADDR
// SaveCharacters ( Cyrus , 10_Cyrus ) ;
1687: LD_EXP 6
1691: PPUSH
1692: LD_STRING 10_Cyrus
1694: PPUSH
1695: CALL_OW 38
// end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) then
1699: LD_EXP 6
1703: PPUSH
1704: CALL_OW 305
1708: NOT
1709: PUSH
1710: LD_EXP 3
1714: PPUSH
1715: CALL_OW 305
1719: NOT
1720: AND
1721: IFFALSE 1808
// begin Brown := PrepareUnit ( 08_Brown , true ) ;
1723: LD_ADDR_EXP 3
1727: PUSH
1728: LD_STRING 08_Brown
1730: PPUSH
1731: LD_INT 1
1733: PPUSH
1734: CALL 5457 0 2
1738: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
1739: LD_EXP 3
1743: PPUSH
1744: LD_INT 10
1746: PPUSH
1747: LD_INT 0
1749: PPUSH
1750: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
1754: LD_EXP 3
1758: PPUSH
1759: LD_INT 42
1761: PPUSH
1762: LD_INT 35
1764: PPUSH
1765: CALL_OW 118
// if IsPlaced ( Brown ) then
1769: LD_EXP 3
1773: PPUSH
1774: CALL_OW 305
1778: IFFALSE 1808
// begin coreHeroesTab := coreHeroesTab ^ Brown ;
1780: LD_ADDR_EXP 14
1784: PUSH
1785: LD_EXP 14
1789: PUSH
1790: LD_EXP 3
1794: ADD
1795: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
1796: LD_EXP 3
1800: PPUSH
1801: LD_STRING 10_Brown
1803: PPUSH
1804: CALL_OW 38
// end ; end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
1808: LD_EXP 6
1812: PPUSH
1813: CALL_OW 305
1817: NOT
1818: PUSH
1819: LD_EXP 3
1823: PPUSH
1824: CALL_OW 305
1828: NOT
1829: AND
1830: PUSH
1831: LD_EXP 4
1835: PPUSH
1836: CALL_OW 305
1840: NOT
1841: AND
1842: IFFALSE 1929
// begin Donaldson := PrepareUnit ( 08_Donaldson , true ) ;
1844: LD_ADDR_EXP 4
1848: PUSH
1849: LD_STRING 08_Donaldson
1851: PPUSH
1852: LD_INT 1
1854: PPUSH
1855: CALL 5457 0 2
1859: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
1860: LD_EXP 4
1864: PPUSH
1865: LD_INT 10
1867: PPUSH
1868: LD_INT 0
1870: PPUSH
1871: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
1875: LD_EXP 4
1879: PPUSH
1880: LD_INT 42
1882: PPUSH
1883: LD_INT 35
1885: PPUSH
1886: CALL_OW 118
// if IsPlaced ( Donaldson ) then
1890: LD_EXP 4
1894: PPUSH
1895: CALL_OW 305
1899: IFFALSE 1929
// begin coreHeroesTab := coreHeroesTab ^ Donaldson ;
1901: LD_ADDR_EXP 14
1905: PUSH
1906: LD_EXP 14
1910: PUSH
1911: LD_EXP 4
1915: ADD
1916: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
1917: LD_EXP 4
1921: PPUSH
1922: LD_STRING 10_Donaldson
1924: PPUSH
1925: CALL_OW 38
// end ; end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
1929: LD_EXP 6
1933: PPUSH
1934: CALL_OW 305
1938: NOT
1939: PUSH
1940: LD_EXP 3
1944: PPUSH
1945: CALL_OW 305
1949: NOT
1950: AND
1951: PUSH
1952: LD_EXP 4
1956: PPUSH
1957: CALL_OW 305
1961: NOT
1962: AND
1963: PUSH
1964: LD_EXP 8
1968: PPUSH
1969: CALL_OW 305
1973: NOT
1974: AND
1975: IFFALSE 2062
// begin Frank := PrepareUnit ( 08_Frank , true ) ;
1977: LD_ADDR_EXP 8
1981: PUSH
1982: LD_STRING 08_Frank
1984: PPUSH
1985: LD_INT 1
1987: PPUSH
1988: CALL 5457 0 2
1992: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
1993: LD_EXP 8
1997: PPUSH
1998: LD_INT 10
2000: PPUSH
2001: LD_INT 0
2003: PPUSH
2004: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
2008: LD_EXP 8
2012: PPUSH
2013: LD_INT 42
2015: PPUSH
2016: LD_INT 35
2018: PPUSH
2019: CALL_OW 118
// if IsPlaced ( Frank ) then
2023: LD_EXP 8
2027: PPUSH
2028: CALL_OW 305
2032: IFFALSE 2062
// begin coreHeroesTab := coreHeroesTab ^ Frank ;
2034: LD_ADDR_EXP 14
2038: PUSH
2039: LD_EXP 14
2043: PUSH
2044: LD_EXP 8
2048: ADD
2049: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
2050: LD_EXP 8
2054: PPUSH
2055: LD_STRING 10_Frank
2057: PPUSH
2058: CALL_OW 38
// end ; end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
2062: LD_EXP 6
2066: PPUSH
2067: CALL_OW 305
2071: NOT
2072: PUSH
2073: LD_EXP 3
2077: PPUSH
2078: CALL_OW 305
2082: NOT
2083: AND
2084: PUSH
2085: LD_EXP 4
2089: PPUSH
2090: CALL_OW 305
2094: NOT
2095: AND
2096: PUSH
2097: LD_EXP 8
2101: PPUSH
2102: CALL_OW 305
2106: NOT
2107: AND
2108: PUSH
2109: LD_EXP 9
2113: PPUSH
2114: CALL_OW 305
2118: NOT
2119: AND
2120: IFFALSE 2207
// begin Houten := PrepareUnit ( 09_Houten , true ) ;
2122: LD_ADDR_EXP 9
2126: PUSH
2127: LD_STRING 09_Houten
2129: PPUSH
2130: LD_INT 1
2132: PPUSH
2133: CALL 5457 0 2
2137: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
2138: LD_EXP 9
2142: PPUSH
2143: LD_INT 10
2145: PPUSH
2146: LD_INT 0
2148: PPUSH
2149: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
2153: LD_EXP 9
2157: PPUSH
2158: LD_INT 42
2160: PPUSH
2161: LD_INT 35
2163: PPUSH
2164: CALL_OW 118
// if IsPlaced ( Houten ) then
2168: LD_EXP 9
2172: PPUSH
2173: CALL_OW 305
2177: IFFALSE 2207
// begin coreHeroesTab := coreHeroesTab ^ Houten ;
2179: LD_ADDR_EXP 14
2183: PUSH
2184: LD_EXP 14
2188: PUSH
2189: LD_EXP 9
2193: ADD
2194: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
2195: LD_EXP 9
2199: PPUSH
2200: LD_STRING 10_Houten
2202: PPUSH
2203: CALL_OW 38
// end ; end ; Lisa := PrepareUnit ( 08_Lisa , true ) ;
2207: LD_ADDR_EXP 7
2211: PUSH
2212: LD_STRING 08_Lisa
2214: PPUSH
2215: LD_INT 1
2217: PPUSH
2218: CALL 5457 0 2
2222: ST_TO_ADDR
// PlaceUnitArea ( Lisa , CoreHeroes , false ) ;
2223: LD_EXP 7
2227: PPUSH
2228: LD_INT 10
2230: PPUSH
2231: LD_INT 0
2233: PPUSH
2234: CALL_OW 49
// ComTurnXY ( Lisa , 42 , 35 ) ;
2238: LD_EXP 7
2242: PPUSH
2243: LD_INT 42
2245: PPUSH
2246: LD_INT 35
2248: PPUSH
2249: CALL_OW 118
// if IsPlaced ( Lisa ) then
2253: LD_EXP 7
2257: PPUSH
2258: CALL_OW 305
2262: IFFALSE 2292
// begin coreHeroesTab := coreHeroesTab ^ Lisa ;
2264: LD_ADDR_EXP 14
2268: PUSH
2269: LD_EXP 14
2273: PUSH
2274: LD_EXP 7
2278: ADD
2279: ST_TO_ADDR
// SaveCharacters ( Lisa , 10_Lisa ) ;
2280: LD_EXP 7
2284: PPUSH
2285: LD_STRING 10_Lisa
2287: PPUSH
2288: CALL_OW 38
// end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) then
2292: LD_EXP 7
2296: PPUSH
2297: CALL_OW 305
2301: NOT
2302: PUSH
2303: LD_EXP 3
2307: PPUSH
2308: CALL_OW 305
2312: NOT
2313: AND
2314: IFFALSE 2401
// begin Brown := PrepareUnit ( 08_Brown , true ) ;
2316: LD_ADDR_EXP 3
2320: PUSH
2321: LD_STRING 08_Brown
2323: PPUSH
2324: LD_INT 1
2326: PPUSH
2327: CALL 5457 0 2
2331: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
2332: LD_EXP 3
2336: PPUSH
2337: LD_INT 10
2339: PPUSH
2340: LD_INT 0
2342: PPUSH
2343: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
2347: LD_EXP 3
2351: PPUSH
2352: LD_INT 42
2354: PPUSH
2355: LD_INT 35
2357: PPUSH
2358: CALL_OW 118
// if IsPlaced ( Brown ) then
2362: LD_EXP 3
2366: PPUSH
2367: CALL_OW 305
2371: IFFALSE 2401
// begin coreHeroesTab := coreHeroesTab ^ Brown ;
2373: LD_ADDR_EXP 14
2377: PUSH
2378: LD_EXP 14
2382: PUSH
2383: LD_EXP 3
2387: ADD
2388: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
2389: LD_EXP 3
2393: PPUSH
2394: LD_STRING 10_Brown
2396: PPUSH
2397: CALL_OW 38
// end ; end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
2401: LD_EXP 7
2405: PPUSH
2406: CALL_OW 305
2410: NOT
2411: PUSH
2412: LD_EXP 3
2416: PPUSH
2417: CALL_OW 305
2421: NOT
2422: AND
2423: PUSH
2424: LD_EXP 4
2428: PPUSH
2429: CALL_OW 305
2433: NOT
2434: AND
2435: IFFALSE 2522
// begin Donaldson := PrepareUnit ( 08_Donaldson , true ) ;
2437: LD_ADDR_EXP 4
2441: PUSH
2442: LD_STRING 08_Donaldson
2444: PPUSH
2445: LD_INT 1
2447: PPUSH
2448: CALL 5457 0 2
2452: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
2453: LD_EXP 4
2457: PPUSH
2458: LD_INT 10
2460: PPUSH
2461: LD_INT 0
2463: PPUSH
2464: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
2468: LD_EXP 4
2472: PPUSH
2473: LD_INT 42
2475: PPUSH
2476: LD_INT 35
2478: PPUSH
2479: CALL_OW 118
// if IsPlaced ( Donaldson ) then
2483: LD_EXP 4
2487: PPUSH
2488: CALL_OW 305
2492: IFFALSE 2522
// begin coreHeroesTab := coreHeroesTab ^ Donaldson ;
2494: LD_ADDR_EXP 14
2498: PUSH
2499: LD_EXP 14
2503: PUSH
2504: LD_EXP 4
2508: ADD
2509: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
2510: LD_EXP 4
2514: PPUSH
2515: LD_STRING 10_Donaldson
2517: PPUSH
2518: CALL_OW 38
// end ; end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
2522: LD_EXP 7
2526: PPUSH
2527: CALL_OW 305
2531: NOT
2532: PUSH
2533: LD_EXP 3
2537: PPUSH
2538: CALL_OW 305
2542: NOT
2543: AND
2544: PUSH
2545: LD_EXP 4
2549: PPUSH
2550: CALL_OW 305
2554: NOT
2555: AND
2556: PUSH
2557: LD_EXP 8
2561: PPUSH
2562: CALL_OW 305
2566: NOT
2567: AND
2568: IFFALSE 2655
// begin Frank := PrepareUnit ( 08_Frank , true ) ;
2570: LD_ADDR_EXP 8
2574: PUSH
2575: LD_STRING 08_Frank
2577: PPUSH
2578: LD_INT 1
2580: PPUSH
2581: CALL 5457 0 2
2585: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
2586: LD_EXP 8
2590: PPUSH
2591: LD_INT 10
2593: PPUSH
2594: LD_INT 0
2596: PPUSH
2597: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
2601: LD_EXP 8
2605: PPUSH
2606: LD_INT 42
2608: PPUSH
2609: LD_INT 35
2611: PPUSH
2612: CALL_OW 118
// if IsPlaced ( Frank ) then
2616: LD_EXP 8
2620: PPUSH
2621: CALL_OW 305
2625: IFFALSE 2655
// begin coreHeroesTab := coreHeroesTab ^ Frank ;
2627: LD_ADDR_EXP 14
2631: PUSH
2632: LD_EXP 14
2636: PUSH
2637: LD_EXP 8
2641: ADD
2642: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
2643: LD_EXP 8
2647: PPUSH
2648: LD_STRING 10_Frank
2650: PPUSH
2651: CALL_OW 38
// end ; end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
2655: LD_EXP 7
2659: PPUSH
2660: CALL_OW 305
2664: NOT
2665: PUSH
2666: LD_EXP 3
2670: PPUSH
2671: CALL_OW 305
2675: NOT
2676: AND
2677: PUSH
2678: LD_EXP 4
2682: PPUSH
2683: CALL_OW 305
2687: NOT
2688: AND
2689: PUSH
2690: LD_EXP 8
2694: PPUSH
2695: CALL_OW 305
2699: NOT
2700: AND
2701: PUSH
2702: LD_EXP 9
2706: PPUSH
2707: CALL_OW 305
2711: NOT
2712: AND
2713: IFFALSE 2800
// begin Houten := PrepareUnit ( 09_Houten , true ) ;
2715: LD_ADDR_EXP 9
2719: PUSH
2720: LD_STRING 09_Houten
2722: PPUSH
2723: LD_INT 1
2725: PPUSH
2726: CALL 5457 0 2
2730: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
2731: LD_EXP 9
2735: PPUSH
2736: LD_INT 10
2738: PPUSH
2739: LD_INT 0
2741: PPUSH
2742: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
2746: LD_EXP 9
2750: PPUSH
2751: LD_INT 42
2753: PPUSH
2754: LD_INT 35
2756: PPUSH
2757: CALL_OW 118
// if IsPlaced ( Houten ) then
2761: LD_EXP 9
2765: PPUSH
2766: CALL_OW 305
2770: IFFALSE 2800
// begin coreHeroesTab := coreHeroesTab ^ Houten ;
2772: LD_ADDR_EXP 14
2776: PUSH
2777: LD_EXP 14
2781: PUSH
2782: LD_EXP 9
2786: ADD
2787: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
2788: LD_EXP 9
2792: PPUSH
2793: LD_STRING 10_Houten
2795: PPUSH
2796: CALL_OW 38
// end ; end ; Gary := PrepareUnit ( 09_Gary , true ) ;
2800: LD_ADDR_EXP 10
2804: PUSH
2805: LD_STRING 09_Gary
2807: PPUSH
2808: LD_INT 1
2810: PPUSH
2811: CALL 5457 0 2
2815: ST_TO_ADDR
// PlaceUnitArea ( Gary , CoreHeroes , false ) ;
2816: LD_EXP 10
2820: PPUSH
2821: LD_INT 10
2823: PPUSH
2824: LD_INT 0
2826: PPUSH
2827: CALL_OW 49
// ComTurnXY ( Gary , 42 , 35 ) ;
2831: LD_EXP 10
2835: PPUSH
2836: LD_INT 42
2838: PPUSH
2839: LD_INT 35
2841: PPUSH
2842: CALL_OW 118
// if IsPlaced ( Gary ) then
2846: LD_EXP 10
2850: PPUSH
2851: CALL_OW 305
2855: IFFALSE 2885
// begin coreHeroesTab := coreHeroesTab ^ Gary ;
2857: LD_ADDR_EXP 14
2861: PUSH
2862: LD_EXP 14
2866: PUSH
2867: LD_EXP 10
2871: ADD
2872: ST_TO_ADDR
// SaveCharacters ( Gary , 10_Gary ) ;
2873: LD_EXP 10
2877: PPUSH
2878: LD_STRING 10_Gary
2880: PPUSH
2881: CALL_OW 38
// end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) then
2885: LD_EXP 10
2889: PPUSH
2890: CALL_OW 305
2894: NOT
2895: PUSH
2896: LD_EXP 3
2900: PPUSH
2901: CALL_OW 305
2905: NOT
2906: AND
2907: IFFALSE 2994
// begin Brown := PrepareUnit ( 08_Brown , true ) ;
2909: LD_ADDR_EXP 3
2913: PUSH
2914: LD_STRING 08_Brown
2916: PPUSH
2917: LD_INT 1
2919: PPUSH
2920: CALL 5457 0 2
2924: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
2925: LD_EXP 3
2929: PPUSH
2930: LD_INT 10
2932: PPUSH
2933: LD_INT 0
2935: PPUSH
2936: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
2940: LD_EXP 3
2944: PPUSH
2945: LD_INT 42
2947: PPUSH
2948: LD_INT 35
2950: PPUSH
2951: CALL_OW 118
// if IsPlaced ( Brown ) then
2955: LD_EXP 3
2959: PPUSH
2960: CALL_OW 305
2964: IFFALSE 2994
// begin coreHeroesTab := coreHeroesTab ^ Brown ;
2966: LD_ADDR_EXP 14
2970: PUSH
2971: LD_EXP 14
2975: PUSH
2976: LD_EXP 3
2980: ADD
2981: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
2982: LD_EXP 3
2986: PPUSH
2987: LD_STRING 10_Brown
2989: PPUSH
2990: CALL_OW 38
// end ; end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
2994: LD_EXP 10
2998: PPUSH
2999: CALL_OW 305
3003: NOT
3004: PUSH
3005: LD_EXP 3
3009: PPUSH
3010: CALL_OW 305
3014: NOT
3015: AND
3016: PUSH
3017: LD_EXP 4
3021: PPUSH
3022: CALL_OW 305
3026: NOT
3027: AND
3028: IFFALSE 3115
// begin Donaldson := PrepareUnit ( 08_Donaldson , true ) ;
3030: LD_ADDR_EXP 4
3034: PUSH
3035: LD_STRING 08_Donaldson
3037: PPUSH
3038: LD_INT 1
3040: PPUSH
3041: CALL 5457 0 2
3045: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
3046: LD_EXP 4
3050: PPUSH
3051: LD_INT 10
3053: PPUSH
3054: LD_INT 0
3056: PPUSH
3057: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
3061: LD_EXP 4
3065: PPUSH
3066: LD_INT 42
3068: PPUSH
3069: LD_INT 35
3071: PPUSH
3072: CALL_OW 118
// if IsPlaced ( Donaldson ) then
3076: LD_EXP 4
3080: PPUSH
3081: CALL_OW 305
3085: IFFALSE 3115
// begin coreHeroesTab := coreHeroesTab ^ Donaldson ;
3087: LD_ADDR_EXP 14
3091: PUSH
3092: LD_EXP 14
3096: PUSH
3097: LD_EXP 4
3101: ADD
3102: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
3103: LD_EXP 4
3107: PPUSH
3108: LD_STRING 10_Donaldson
3110: PPUSH
3111: CALL_OW 38
// end ; end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
3115: LD_EXP 10
3119: PPUSH
3120: CALL_OW 305
3124: NOT
3125: PUSH
3126: LD_EXP 3
3130: PPUSH
3131: CALL_OW 305
3135: NOT
3136: AND
3137: PUSH
3138: LD_EXP 4
3142: PPUSH
3143: CALL_OW 305
3147: NOT
3148: AND
3149: PUSH
3150: LD_EXP 8
3154: PPUSH
3155: CALL_OW 305
3159: NOT
3160: AND
3161: IFFALSE 3248
// begin Frank := PrepareUnit ( 08_Frank , true ) ;
3163: LD_ADDR_EXP 8
3167: PUSH
3168: LD_STRING 08_Frank
3170: PPUSH
3171: LD_INT 1
3173: PPUSH
3174: CALL 5457 0 2
3178: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
3179: LD_EXP 8
3183: PPUSH
3184: LD_INT 10
3186: PPUSH
3187: LD_INT 0
3189: PPUSH
3190: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
3194: LD_EXP 8
3198: PPUSH
3199: LD_INT 42
3201: PPUSH
3202: LD_INT 35
3204: PPUSH
3205: CALL_OW 118
// if IsPlaced ( Frank ) then
3209: LD_EXP 8
3213: PPUSH
3214: CALL_OW 305
3218: IFFALSE 3248
// begin coreHeroesTab := coreHeroesTab ^ Frank ;
3220: LD_ADDR_EXP 14
3224: PUSH
3225: LD_EXP 14
3229: PUSH
3230: LD_EXP 8
3234: ADD
3235: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
3236: LD_EXP 8
3240: PPUSH
3241: LD_STRING 10_Frank
3243: PPUSH
3244: CALL_OW 38
// end ; end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
3248: LD_EXP 10
3252: PPUSH
3253: CALL_OW 305
3257: NOT
3258: PUSH
3259: LD_EXP 3
3263: PPUSH
3264: CALL_OW 305
3268: NOT
3269: AND
3270: PUSH
3271: LD_EXP 4
3275: PPUSH
3276: CALL_OW 305
3280: NOT
3281: AND
3282: PUSH
3283: LD_EXP 8
3287: PPUSH
3288: CALL_OW 305
3292: NOT
3293: AND
3294: PUSH
3295: LD_EXP 9
3299: PPUSH
3300: CALL_OW 305
3304: NOT
3305: AND
3306: IFFALSE 3393
// begin Houten := PrepareUnit ( 09_Houten , true ) ;
3308: LD_ADDR_EXP 9
3312: PUSH
3313: LD_STRING 09_Houten
3315: PPUSH
3316: LD_INT 1
3318: PPUSH
3319: CALL 5457 0 2
3323: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
3324: LD_EXP 9
3328: PPUSH
3329: LD_INT 10
3331: PPUSH
3332: LD_INT 0
3334: PPUSH
3335: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
3339: LD_EXP 9
3343: PPUSH
3344: LD_INT 42
3346: PPUSH
3347: LD_INT 35
3349: PPUSH
3350: CALL_OW 118
// if IsPlaced ( Houten ) then
3354: LD_EXP 9
3358: PPUSH
3359: CALL_OW 305
3363: IFFALSE 3393
// begin coreHeroesTab := coreHeroesTab ^ Houten ;
3365: LD_ADDR_EXP 14
3369: PUSH
3370: LD_EXP 14
3374: PUSH
3375: LD_EXP 9
3379: ADD
3380: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
3381: LD_EXP 9
3385: PPUSH
3386: LD_STRING 10_Houten
3388: PPUSH
3389: CALL_OW 38
// end ; end ; for i := 1 to 5 - coreHeroesTab do
3393: LD_ADDR_VAR 0 2
3397: PUSH
3398: DOUBLE
3399: LD_INT 1
3401: DEC
3402: ST_TO_ADDR
3403: LD_INT 5
3405: PUSH
3406: LD_EXP 14
3410: MINUS
3411: PUSH
3412: FOR_TO
3413: IFFALSE 3537
// begin hc_gallery =  ;
3415: LD_ADDR_OWVAR 33
3419: PUSH
3420: LD_STRING 
3422: ST_TO_ADDR
// hc_name =  ;
3423: LD_ADDR_OWVAR 26
3427: PUSH
3428: LD_STRING 
3430: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
3431: LD_INT 0
3433: PPUSH
3434: LD_INT 1
3436: PUSH
3437: LD_INT 2
3439: PUSH
3440: LD_INT 3
3442: PUSH
3443: LD_INT 4
3445: PUSH
3446: EMPTY
3447: LIST
3448: LIST
3449: LIST
3450: LIST
3451: PUSH
3452: LD_INT 1
3454: PPUSH
3455: LD_INT 4
3457: PPUSH
3458: CALL_OW 12
3462: ARRAY
3463: PPUSH
3464: LD_INT 4
3466: PPUSH
3467: LD_INT 6
3469: PPUSH
3470: CALL_OW 12
3474: PPUSH
3475: CALL_OW 380
// un := CreateHuman ;
3479: LD_ADDR_VAR 0 3
3483: PUSH
3484: CALL_OW 44
3488: ST_TO_ADDR
// coreHeroesTab := coreHeroesTab ^ un ;
3489: LD_ADDR_EXP 14
3493: PUSH
3494: LD_EXP 14
3498: PUSH
3499: LD_VAR 0 3
3503: ADD
3504: ST_TO_ADDR
// PlaceUnitArea ( un , CoreHeroes , false ) ;
3505: LD_VAR 0 3
3509: PPUSH
3510: LD_INT 10
3512: PPUSH
3513: LD_INT 0
3515: PPUSH
3516: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
3520: LD_VAR 0 3
3524: PPUSH
3525: LD_INT 42
3527: PPUSH
3528: LD_INT 35
3530: PPUSH
3531: CALL_OW 118
// end ;
3535: GO 3412
3537: POP
3538: POP
// siberite := LoadVariable ( 09_SibRes , 0 ) ;
3539: LD_ADDR_EXP 17
3543: PUSH
3544: LD_STRING 09_SibRes
3546: PPUSH
3547: LD_INT 0
3549: PPUSH
3550: CALL_OW 30
3554: ST_TO_ADDR
// if siberite > 500 then
3555: LD_EXP 17
3559: PUSH
3560: LD_INT 500
3562: GREATER
3563: IFFALSE 3573
// siberite := 500 ;
3565: LD_ADDR_EXP 17
3569: PUSH
3570: LD_INT 500
3572: ST_TO_ADDR
// others08 := CreateCharacterSet ( 08_other_survivors ) ;
3573: LD_ADDR_EXP 11
3577: PUSH
3578: LD_STRING 08_other_survivors
3580: PPUSH
3581: CALL_OW 31
3585: ST_TO_ADDR
// if siberite >= 200 then
3586: LD_EXP 17
3590: PUSH
3591: LD_INT 200
3593: GREATEREQUAL
3594: IFFALSE 4637
// begin if not IsPlaced ( Brown ) then
3596: LD_EXP 3
3600: PPUSH
3601: CALL_OW 305
3605: NOT
3606: IFFALSE 3693
// begin Brown := PrepareUnit ( 08_Brown , true ) ;
3608: LD_ADDR_EXP 3
3612: PUSH
3613: LD_STRING 08_Brown
3615: PPUSH
3616: LD_INT 1
3618: PPUSH
3619: CALL 5457 0 2
3623: ST_TO_ADDR
// PlaceUnitArea ( Brown , AddHeroes , false ) ;
3624: LD_EXP 3
3628: PPUSH
3629: LD_INT 11
3631: PPUSH
3632: LD_INT 0
3634: PPUSH
3635: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
3639: LD_EXP 3
3643: PPUSH
3644: LD_INT 42
3646: PPUSH
3647: LD_INT 35
3649: PPUSH
3650: CALL_OW 118
// if IsPlaced ( Brown ) then
3654: LD_EXP 3
3658: PPUSH
3659: CALL_OW 305
3663: IFFALSE 3693
// begin addHeroesTab := addHeroesTab ^ Brown ;
3665: LD_ADDR_EXP 15
3669: PUSH
3670: LD_EXP 15
3674: PUSH
3675: LD_EXP 3
3679: ADD
3680: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
3681: LD_EXP 3
3685: PPUSH
3686: LD_STRING 10_Brown
3688: PPUSH
3689: CALL_OW 38
// end ; end ; if not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
3693: LD_EXP 3
3697: PPUSH
3698: CALL_OW 305
3702: NOT
3703: PUSH
3704: LD_EXP 4
3708: PPUSH
3709: CALL_OW 305
3713: NOT
3714: AND
3715: IFFALSE 3802
// begin Donaldson := PrepareUnit ( 08_Donaldson , true ) ;
3717: LD_ADDR_EXP 4
3721: PUSH
3722: LD_STRING 08_Donaldson
3724: PPUSH
3725: LD_INT 1
3727: PPUSH
3728: CALL 5457 0 2
3732: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , addHeroes , false ) ;
3733: LD_EXP 4
3737: PPUSH
3738: LD_INT 11
3740: PPUSH
3741: LD_INT 0
3743: PPUSH
3744: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
3748: LD_EXP 4
3752: PPUSH
3753: LD_INT 42
3755: PPUSH
3756: LD_INT 35
3758: PPUSH
3759: CALL_OW 118
// if IsPlaced ( Donaldson ) then
3763: LD_EXP 4
3767: PPUSH
3768: CALL_OW 305
3772: IFFALSE 3802
// begin addHeroesTab := addHeroesTab ^ Donaldson ;
3774: LD_ADDR_EXP 15
3778: PUSH
3779: LD_EXP 15
3783: PUSH
3784: LD_EXP 4
3788: ADD
3789: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
3790: LD_EXP 4
3794: PPUSH
3795: LD_STRING 10_Donaldson
3797: PPUSH
3798: CALL_OW 38
// end ; end ; if not IsPlaced ( Brown ) and not IsPlaced ( Frank ) then
3802: LD_EXP 3
3806: PPUSH
3807: CALL_OW 305
3811: NOT
3812: PUSH
3813: LD_EXP 8
3817: PPUSH
3818: CALL_OW 305
3822: NOT
3823: AND
3824: IFFALSE 3911
// begin Frank := PrepareUnit ( 08_Frank , true ) ;
3826: LD_ADDR_EXP 8
3830: PUSH
3831: LD_STRING 08_Frank
3833: PPUSH
3834: LD_INT 1
3836: PPUSH
3837: CALL 5457 0 2
3841: ST_TO_ADDR
// PlaceUnitArea ( Frank , addHeroes , false ) ;
3842: LD_EXP 8
3846: PPUSH
3847: LD_INT 11
3849: PPUSH
3850: LD_INT 0
3852: PPUSH
3853: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
3857: LD_EXP 8
3861: PPUSH
3862: LD_INT 42
3864: PPUSH
3865: LD_INT 35
3867: PPUSH
3868: CALL_OW 118
// if IsPlaced ( Frank ) then
3872: LD_EXP 8
3876: PPUSH
3877: CALL_OW 305
3881: IFFALSE 3911
// begin addHeroesTab := addHeroesTab ^ Frank ;
3883: LD_ADDR_EXP 15
3887: PUSH
3888: LD_EXP 15
3892: PUSH
3893: LD_EXP 8
3897: ADD
3898: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
3899: LD_EXP 8
3903: PPUSH
3904: LD_STRING 10_Frank
3906: PPUSH
3907: CALL_OW 38
// end ; end ; if not IsPlaced ( Brown ) and not IsPlaced ( Houten ) then
3911: LD_EXP 3
3915: PPUSH
3916: CALL_OW 305
3920: NOT
3921: PUSH
3922: LD_EXP 9
3926: PPUSH
3927: CALL_OW 305
3931: NOT
3932: AND
3933: IFFALSE 4022
// begin Houten := PrepareUnit ( 09_Houten , true ) ;
3935: LD_ADDR_EXP 9
3939: PUSH
3940: LD_STRING 09_Houten
3942: PPUSH
3943: LD_INT 1
3945: PPUSH
3946: CALL 5457 0 2
3950: ST_TO_ADDR
// PlaceUnitArea ( Houten , addHeroes , false ) ;
3951: LD_EXP 9
3955: PPUSH
3956: LD_INT 11
3958: PPUSH
3959: LD_INT 0
3961: PPUSH
3962: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
3966: LD_EXP 9
3970: PPUSH
3971: LD_INT 42
3973: PPUSH
3974: LD_INT 35
3976: PPUSH
3977: CALL_OW 118
// if IsPlaced ( Houten ) then
3981: LD_EXP 9
3985: PPUSH
3986: CALL_OW 305
3990: IFFALSE 4020
// begin addHeroesTab := addHeroesTab ^ Houten ;
3992: LD_ADDR_EXP 15
3996: PUSH
3997: LD_EXP 15
4001: PUSH
4002: LD_EXP 9
4006: ADD
4007: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
4008: LD_EXP 9
4012: PPUSH
4013: LD_STRING 10_Houten
4015: PPUSH
4016: CALL_OW 38
// end ; end else
4020: GO 4098
// begin PlaceUnitArea ( others08 [ 1 ] , addHeroes , false ) ;
4022: LD_EXP 11
4026: PUSH
4027: LD_INT 1
4029: ARRAY
4030: PPUSH
4031: LD_INT 11
4033: PPUSH
4034: LD_INT 0
4036: PPUSH
4037: CALL_OW 49
// ComTurnXY ( others08 [ 1 ] , 42 , 35 ) ;
4041: LD_EXP 11
4045: PUSH
4046: LD_INT 1
4048: ARRAY
4049: PPUSH
4050: LD_INT 42
4052: PPUSH
4053: LD_INT 35
4055: PPUSH
4056: CALL_OW 118
// addHeroesTab := addHeroesTab ^ others08 [ 1 ] ;
4060: LD_ADDR_EXP 15
4064: PUSH
4065: LD_EXP 15
4069: PUSH
4070: LD_EXP 11
4074: PUSH
4075: LD_INT 1
4077: ARRAY
4078: ADD
4079: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
4080: LD_ADDR_EXP 11
4084: PUSH
4085: LD_EXP 11
4089: PPUSH
4090: LD_INT 1
4092: PPUSH
4093: CALL_OW 3
4097: ST_TO_ADDR
// end ; if not IsPlaced ( Donaldson ) then
4098: LD_EXP 4
4102: PPUSH
4103: CALL_OW 305
4107: NOT
4108: IFFALSE 4195
// begin Donaldson := PrepareUnit ( 08_Donaldson , true ) ;
4110: LD_ADDR_EXP 4
4114: PUSH
4115: LD_STRING 08_Donaldson
4117: PPUSH
4118: LD_INT 1
4120: PPUSH
4121: CALL 5457 0 2
4125: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , AddHeroes , false ) ;
4126: LD_EXP 4
4130: PPUSH
4131: LD_INT 11
4133: PPUSH
4134: LD_INT 0
4136: PPUSH
4137: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
4141: LD_EXP 4
4145: PPUSH
4146: LD_INT 42
4148: PPUSH
4149: LD_INT 35
4151: PPUSH
4152: CALL_OW 118
// if IsPlaced ( Donaldson ) then
4156: LD_EXP 4
4160: PPUSH
4161: CALL_OW 305
4165: IFFALSE 4195
// begin addHeroesTab := addHeroesTab ^ Donaldson ;
4167: LD_ADDR_EXP 15
4171: PUSH
4172: LD_EXP 15
4176: PUSH
4177: LD_EXP 4
4181: ADD
4182: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
4183: LD_EXP 4
4187: PPUSH
4188: LD_STRING 10_Donaldson
4190: PPUSH
4191: CALL_OW 38
// end ; end ; if not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
4195: LD_EXP 4
4199: PPUSH
4200: CALL_OW 305
4204: NOT
4205: PUSH
4206: LD_EXP 8
4210: PPUSH
4211: CALL_OW 305
4215: NOT
4216: AND
4217: IFFALSE 4304
// begin Frank := PrepareUnit ( 08_Frank , true ) ;
4219: LD_ADDR_EXP 8
4223: PUSH
4224: LD_STRING 08_Frank
4226: PPUSH
4227: LD_INT 1
4229: PPUSH
4230: CALL 5457 0 2
4234: ST_TO_ADDR
// PlaceUnitArea ( Frank , addHeroes , false ) ;
4235: LD_EXP 8
4239: PPUSH
4240: LD_INT 11
4242: PPUSH
4243: LD_INT 0
4245: PPUSH
4246: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
4250: LD_EXP 8
4254: PPUSH
4255: LD_INT 42
4257: PPUSH
4258: LD_INT 35
4260: PPUSH
4261: CALL_OW 118
// if IsPlaced ( Frank ) then
4265: LD_EXP 8
4269: PPUSH
4270: CALL_OW 305
4274: IFFALSE 4304
// begin addHeroesTab := addHeroesTab ^ Frank ;
4276: LD_ADDR_EXP 15
4280: PUSH
4281: LD_EXP 15
4285: PUSH
4286: LD_EXP 8
4290: ADD
4291: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
4292: LD_EXP 8
4296: PPUSH
4297: LD_STRING 10_Frank
4299: PPUSH
4300: CALL_OW 38
// end ; end ; if not IsPlaced ( Donaldson ) and not IsPlaced ( Houten ) then
4304: LD_EXP 4
4308: PPUSH
4309: CALL_OW 305
4313: NOT
4314: PUSH
4315: LD_EXP 9
4319: PPUSH
4320: CALL_OW 305
4324: NOT
4325: AND
4326: IFFALSE 4415
// begin Houten := PrepareUnit ( 09_Houten , true ) ;
4328: LD_ADDR_EXP 9
4332: PUSH
4333: LD_STRING 09_Houten
4335: PPUSH
4336: LD_INT 1
4338: PPUSH
4339: CALL 5457 0 2
4343: ST_TO_ADDR
// PlaceUnitArea ( Houten , addHeroes , false ) ;
4344: LD_EXP 9
4348: PPUSH
4349: LD_INT 11
4351: PPUSH
4352: LD_INT 0
4354: PPUSH
4355: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
4359: LD_EXP 9
4363: PPUSH
4364: LD_INT 42
4366: PPUSH
4367: LD_INT 35
4369: PPUSH
4370: CALL_OW 118
// if IsPlaced ( Houten ) then
4374: LD_EXP 9
4378: PPUSH
4379: CALL_OW 305
4383: IFFALSE 4413
// begin addHeroesTab = addHeroesTab ^ Houten ;
4385: LD_ADDR_EXP 15
4389: PUSH
4390: LD_EXP 15
4394: PUSH
4395: LD_EXP 9
4399: ADD
4400: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
4401: LD_EXP 9
4405: PPUSH
4406: LD_STRING 10_Houten
4408: PPUSH
4409: CALL_OW 38
// end ; end else
4413: GO 4491
// begin PlaceUnitArea ( others08 [ 1 ] , addHeroes , false ) ;
4415: LD_EXP 11
4419: PUSH
4420: LD_INT 1
4422: ARRAY
4423: PPUSH
4424: LD_INT 11
4426: PPUSH
4427: LD_INT 0
4429: PPUSH
4430: CALL_OW 49
// ComTurnXY ( others08 [ 1 ] , 42 , 35 ) ;
4434: LD_EXP 11
4438: PUSH
4439: LD_INT 1
4441: ARRAY
4442: PPUSH
4443: LD_INT 42
4445: PPUSH
4446: LD_INT 35
4448: PPUSH
4449: CALL_OW 118
// addHeroesTab := addHeroesTab ^ others08 [ 1 ] ;
4453: LD_ADDR_EXP 15
4457: PUSH
4458: LD_EXP 15
4462: PUSH
4463: LD_EXP 11
4467: PUSH
4468: LD_INT 1
4470: ARRAY
4471: ADD
4472: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
4473: LD_ADDR_EXP 11
4477: PUSH
4478: LD_EXP 11
4482: PPUSH
4483: LD_INT 1
4485: PPUSH
4486: CALL_OW 3
4490: ST_TO_ADDR
// end ; for i := 1 to 2 - addHeroesTab do
4491: LD_ADDR_VAR 0 2
4495: PUSH
4496: DOUBLE
4497: LD_INT 1
4499: DEC
4500: ST_TO_ADDR
4501: LD_INT 2
4503: PUSH
4504: LD_EXP 15
4508: MINUS
4509: PUSH
4510: FOR_TO
4511: IFFALSE 4635
// begin hc_gallery :=  ;
4513: LD_ADDR_OWVAR 33
4517: PUSH
4518: LD_STRING 
4520: ST_TO_ADDR
// hc_name :=  ;
4521: LD_ADDR_OWVAR 26
4525: PUSH
4526: LD_STRING 
4528: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
4529: LD_INT 0
4531: PPUSH
4532: LD_INT 1
4534: PUSH
4535: LD_INT 2
4537: PUSH
4538: LD_INT 3
4540: PUSH
4541: LD_INT 4
4543: PUSH
4544: EMPTY
4545: LIST
4546: LIST
4547: LIST
4548: LIST
4549: PUSH
4550: LD_INT 1
4552: PPUSH
4553: LD_INT 4
4555: PPUSH
4556: CALL_OW 12
4560: ARRAY
4561: PPUSH
4562: LD_INT 4
4564: PPUSH
4565: LD_INT 6
4567: PPUSH
4568: CALL_OW 12
4572: PPUSH
4573: CALL_OW 380
// un = CreateHuman ;
4577: LD_ADDR_VAR 0 3
4581: PUSH
4582: CALL_OW 44
4586: ST_TO_ADDR
// addHeroesTab = addHeroesTab ^ un ;
4587: LD_ADDR_EXP 15
4591: PUSH
4592: LD_EXP 15
4596: PUSH
4597: LD_VAR 0 3
4601: ADD
4602: ST_TO_ADDR
// PlaceUnitArea ( un , addHeroes , false ) ;
4603: LD_VAR 0 3
4607: PPUSH
4608: LD_INT 11
4610: PPUSH
4611: LD_INT 0
4613: PPUSH
4614: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
4618: LD_VAR 0 3
4622: PPUSH
4623: LD_INT 42
4625: PPUSH
4626: LD_INT 35
4628: PPUSH
4629: CALL_OW 118
// end ;
4633: GO 4510
4635: POP
4636: POP
// end ; if siberite > 200 then
4637: LD_EXP 17
4641: PUSH
4642: LD_INT 200
4644: GREATER
4645: IFFALSE 5197
// begin if others08 then
4647: LD_EXP 11
4651: IFFALSE 5041
// begin if others08 >= ( siberite - 200 ) / 100 then
4653: LD_EXP 11
4657: PUSH
4658: LD_EXP 17
4662: PUSH
4663: LD_INT 200
4665: MINUS
4666: PUSH
4667: LD_INT 100
4669: DIVREAL
4670: GREATEREQUAL
4671: IFFALSE 4783
// begin for i := 1 to ( siberite - 200 ) / 100 do
4673: LD_ADDR_VAR 0 2
4677: PUSH
4678: DOUBLE
4679: LD_INT 1
4681: DEC
4682: ST_TO_ADDR
4683: LD_EXP 17
4687: PUSH
4688: LD_INT 200
4690: MINUS
4691: PUSH
4692: LD_INT 100
4694: DIVREAL
4695: PUSH
4696: FOR_TO
4697: IFFALSE 4779
// begin PlaceUnitArea ( others08 [ 1 ] , addHeroes , false ) ;
4699: LD_EXP 11
4703: PUSH
4704: LD_INT 1
4706: ARRAY
4707: PPUSH
4708: LD_INT 11
4710: PPUSH
4711: LD_INT 0
4713: PPUSH
4714: CALL_OW 49
// ComTurnXY ( others08 [ 1 ] , 42 , 35 ) ;
4718: LD_EXP 11
4722: PUSH
4723: LD_INT 1
4725: ARRAY
4726: PPUSH
4727: LD_INT 42
4729: PPUSH
4730: LD_INT 35
4732: PPUSH
4733: CALL_OW 118
// addHeroesTab := addHeroesTab ^ others08 [ i ] ;
4737: LD_ADDR_EXP 15
4741: PUSH
4742: LD_EXP 15
4746: PUSH
4747: LD_EXP 11
4751: PUSH
4752: LD_VAR 0 2
4756: ARRAY
4757: ADD
4758: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
4759: LD_ADDR_EXP 11
4763: PUSH
4764: LD_EXP 11
4768: PPUSH
4769: LD_INT 1
4771: PPUSH
4772: CALL_OW 3
4776: ST_TO_ADDR
// end ;
4777: GO 4696
4779: POP
4780: POP
// end else
4781: GO 5039
// begin for i := 1 to others08 do
4783: LD_ADDR_VAR 0 2
4787: PUSH
4788: DOUBLE
4789: LD_INT 1
4791: DEC
4792: ST_TO_ADDR
4793: LD_EXP 11
4797: PUSH
4798: FOR_TO
4799: IFFALSE 4881
// begin PlaceUnitArea ( others08 [ 1 ] , addHeroes , false ) ;
4801: LD_EXP 11
4805: PUSH
4806: LD_INT 1
4808: ARRAY
4809: PPUSH
4810: LD_INT 11
4812: PPUSH
4813: LD_INT 0
4815: PPUSH
4816: CALL_OW 49
// ComTurnXY ( others08 [ 1 ] , 42 , 35 ) ;
4820: LD_EXP 11
4824: PUSH
4825: LD_INT 1
4827: ARRAY
4828: PPUSH
4829: LD_INT 42
4831: PPUSH
4832: LD_INT 35
4834: PPUSH
4835: CALL_OW 118
// addHeroesTab := addHeroesTab ^ others08 [ i ] ;
4839: LD_ADDR_EXP 15
4843: PUSH
4844: LD_EXP 15
4848: PUSH
4849: LD_EXP 11
4853: PUSH
4854: LD_VAR 0 2
4858: ARRAY
4859: ADD
4860: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
4861: LD_ADDR_EXP 11
4865: PUSH
4866: LD_EXP 11
4870: PPUSH
4871: LD_INT 1
4873: PPUSH
4874: CALL_OW 3
4878: ST_TO_ADDR
// end ;
4879: GO 4798
4881: POP
4882: POP
// for i := 1 to ( siberite - 200 ) / 100 - others08 do
4883: LD_ADDR_VAR 0 2
4887: PUSH
4888: DOUBLE
4889: LD_INT 1
4891: DEC
4892: ST_TO_ADDR
4893: LD_EXP 17
4897: PUSH
4898: LD_INT 200
4900: MINUS
4901: PUSH
4902: LD_INT 100
4904: DIVREAL
4905: PUSH
4906: LD_EXP 11
4910: MINUS
4911: PUSH
4912: FOR_TO
4913: IFFALSE 5037
// begin hc_gallery :=  ;
4915: LD_ADDR_OWVAR 33
4919: PUSH
4920: LD_STRING 
4922: ST_TO_ADDR
// hc_name :=  ;
4923: LD_ADDR_OWVAR 26
4927: PUSH
4928: LD_STRING 
4930: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
4931: LD_INT 0
4933: PPUSH
4934: LD_INT 1
4936: PUSH
4937: LD_INT 2
4939: PUSH
4940: LD_INT 3
4942: PUSH
4943: LD_INT 4
4945: PUSH
4946: EMPTY
4947: LIST
4948: LIST
4949: LIST
4950: LIST
4951: PUSH
4952: LD_INT 1
4954: PPUSH
4955: LD_INT 4
4957: PPUSH
4958: CALL_OW 12
4962: ARRAY
4963: PPUSH
4964: LD_INT 4
4966: PPUSH
4967: LD_INT 6
4969: PPUSH
4970: CALL_OW 12
4974: PPUSH
4975: CALL_OW 380
// un := CreateHuman ;
4979: LD_ADDR_VAR 0 3
4983: PUSH
4984: CALL_OW 44
4988: ST_TO_ADDR
// addHeroesTab := addHeroesTab ^ un ;
4989: LD_ADDR_EXP 15
4993: PUSH
4994: LD_EXP 15
4998: PUSH
4999: LD_VAR 0 3
5003: ADD
5004: ST_TO_ADDR
// PlaceUnitArea ( un , addHeroes , false ) ;
5005: LD_VAR 0 3
5009: PPUSH
5010: LD_INT 11
5012: PPUSH
5013: LD_INT 0
5015: PPUSH
5016: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
5020: LD_VAR 0 3
5024: PPUSH
5025: LD_INT 42
5027: PPUSH
5028: LD_INT 35
5030: PPUSH
5031: CALL_OW 118
// end ;
5035: GO 4912
5037: POP
5038: POP
// end ; end else
5039: GO 5197
// begin for i := 1 to ( siberite - 200 ) / 100 - others08 do
5041: LD_ADDR_VAR 0 2
5045: PUSH
5046: DOUBLE
5047: LD_INT 1
5049: DEC
5050: ST_TO_ADDR
5051: LD_EXP 17
5055: PUSH
5056: LD_INT 200
5058: MINUS
5059: PUSH
5060: LD_INT 100
5062: DIVREAL
5063: PUSH
5064: LD_EXP 11
5068: MINUS
5069: PUSH
5070: FOR_TO
5071: IFFALSE 5195
// begin hc_gallery :=  ;
5073: LD_ADDR_OWVAR 33
5077: PUSH
5078: LD_STRING 
5080: ST_TO_ADDR
// hc_name :=  ;
5081: LD_ADDR_OWVAR 26
5085: PUSH
5086: LD_STRING 
5088: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
5089: LD_INT 0
5091: PPUSH
5092: LD_INT 1
5094: PUSH
5095: LD_INT 2
5097: PUSH
5098: LD_INT 3
5100: PUSH
5101: LD_INT 4
5103: PUSH
5104: EMPTY
5105: LIST
5106: LIST
5107: LIST
5108: LIST
5109: PUSH
5110: LD_INT 1
5112: PPUSH
5113: LD_INT 4
5115: PPUSH
5116: CALL_OW 12
5120: ARRAY
5121: PPUSH
5122: LD_INT 4
5124: PPUSH
5125: LD_INT 6
5127: PPUSH
5128: CALL_OW 12
5132: PPUSH
5133: CALL_OW 380
// un := CreateHuman ;
5137: LD_ADDR_VAR 0 3
5141: PUSH
5142: CALL_OW 44
5146: ST_TO_ADDR
// addHeroesTab := addHeroesTab ^ un ;
5147: LD_ADDR_EXP 15
5151: PUSH
5152: LD_EXP 15
5156: PUSH
5157: LD_VAR 0 3
5161: ADD
5162: ST_TO_ADDR
// PlaceUnitArea ( un , addHeroes , false ) ;
5163: LD_VAR 0 3
5167: PPUSH
5168: LD_INT 11
5170: PPUSH
5171: LD_INT 0
5173: PPUSH
5174: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
5178: LD_VAR 0 3
5182: PPUSH
5183: LD_INT 42
5185: PPUSH
5186: LD_INT 35
5188: PPUSH
5189: CALL_OW 118
// end ;
5193: GO 5070
5195: POP
5196: POP
// end ; end ; PlaceHumanInUnit ( JMM , car ) ;
5197: LD_EXP 1
5201: PPUSH
5202: LD_INT 138
5204: PPUSH
5205: CALL_OW 52
// PlaceHumanInUnit ( Powell , Am_bar ) ;
5209: LD_EXP 2
5213: PPUSH
5214: LD_INT 58
5216: PPUSH
5217: CALL_OW 52
// SetClass ( JMM , 1 ) ;
5221: LD_EXP 1
5225: PPUSH
5226: LD_INT 1
5228: PPUSH
5229: CALL_OW 336
// end ;
5233: LD_VAR 0 1
5237: RET
// export function PrepareConvoy ; var i , veh , un ; begin
5238: LD_INT 0
5240: PPUSH
5241: PPUSH
5242: PPUSH
5243: PPUSH
// uc_side := 1 ;
5244: LD_ADDR_OWVAR 20
5248: PUSH
5249: LD_INT 1
5251: ST_TO_ADDR
// uc_nation := 1 ;
5252: LD_ADDR_OWVAR 21
5256: PUSH
5257: LD_INT 1
5259: ST_TO_ADDR
// for i := 1 to 2 do
5260: LD_ADDR_VAR 0 2
5264: PUSH
5265: DOUBLE
5266: LD_INT 1
5268: DEC
5269: ST_TO_ADDR
5270: LD_INT 2
5272: PUSH
5273: FOR_TO
5274: IFFALSE 5412
// begin vc_engine := 1 ;
5276: LD_ADDR_OWVAR 39
5280: PUSH
5281: LD_INT 1
5283: ST_TO_ADDR
// vc_control := 1 ;
5284: LD_ADDR_OWVAR 38
5288: PUSH
5289: LD_INT 1
5291: ST_TO_ADDR
// vc_weapon := 12 ;
5292: LD_ADDR_OWVAR 40
5296: PUSH
5297: LD_INT 12
5299: ST_TO_ADDR
// vc_chassis := 3 ;
5300: LD_ADDR_OWVAR 37
5304: PUSH
5305: LD_INT 3
5307: ST_TO_ADDR
// veh := CreateVehicle ;
5308: LD_ADDR_VAR 0 3
5312: PUSH
5313: CALL_OW 45
5317: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
5318: LD_VAR 0 3
5322: PPUSH
5323: LD_INT 1
5325: PPUSH
5326: CALL_OW 233
// PlaceUnitArea ( veh , Cargo , false ) ;
5330: LD_VAR 0 3
5334: PPUSH
5335: LD_INT 9
5337: PPUSH
5338: LD_INT 0
5340: PPUSH
5341: CALL_OW 49
// AddCargo ( veh , 1 , 100 ) ;
5345: LD_VAR 0 3
5349: PPUSH
5350: LD_INT 1
5352: PPUSH
5353: LD_INT 100
5355: PPUSH
5356: CALL_OW 291
// convoy = convoy ^ veh ;
5360: LD_ADDR_EXP 12
5364: PUSH
5365: LD_EXP 12
5369: PUSH
5370: LD_VAR 0 3
5374: ADD
5375: ST_TO_ADDR
// PrepareMechanic ( false , 10 ) ;
5376: LD_INT 0
5378: PPUSH
5379: LD_INT 10
5381: PPUSH
5382: CALL_OW 383
// un := CreateHuman ;
5386: LD_ADDR_VAR 0 4
5390: PUSH
5391: CALL_OW 44
5395: ST_TO_ADDR
// PlaceHumanInUnit ( un , veh ) ;
5396: LD_VAR 0 4
5400: PPUSH
5401: LD_VAR 0 3
5405: PPUSH
5406: CALL_OW 52
// end ;
5410: GO 5273
5412: POP
5413: POP
// AddComMoveXY ( convoy [ 1 ] , 45 , 43 ) ;
5414: LD_EXP 12
5418: PUSH
5419: LD_INT 1
5421: ARRAY
5422: PPUSH
5423: LD_INT 45
5425: PPUSH
5426: LD_INT 43
5428: PPUSH
5429: CALL_OW 171
// AddComMoveXY ( convoy [ 2 ] , 40 , 40 ) ;
5433: LD_EXP 12
5437: PUSH
5438: LD_INT 2
5440: ARRAY
5441: PPUSH
5442: LD_INT 40
5444: PPUSH
5445: LD_INT 40
5447: PPUSH
5448: CALL_OW 171
// end ; end_of_file
5452: LD_VAR 0 1
5456: RET
// export function PrepareUnit ( ident , exist_mode ) ; var unit ; begin
5457: LD_INT 0
5459: PPUSH
5460: PPUSH
// if exist_mode then
5461: LD_VAR 0 2
5465: IFFALSE 5484
// unit := CreateCharacter ( ident ) else
5467: LD_ADDR_VAR 0 4
5471: PUSH
5472: LD_VAR 0 1
5476: PPUSH
5477: CALL_OW 34
5481: ST_TO_ADDR
5482: GO 5499
// unit := NewCharacter ( ident ) ;
5484: LD_ADDR_VAR 0 4
5488: PUSH
5489: LD_VAR 0 1
5493: PPUSH
5494: CALL_OW 25
5498: ST_TO_ADDR
// result := unit ;
5499: LD_ADDR_VAR 0 3
5503: PUSH
5504: LD_VAR 0 4
5508: ST_TO_ADDR
// end ;
5509: LD_VAR 0 3
5513: RET
// export function Video ( mode ) ; begin
5514: LD_INT 0
5516: PPUSH
// ingame_video = mode ;
5517: LD_ADDR_OWVAR 52
5521: PUSH
5522: LD_VAR 0 1
5526: ST_TO_ADDR
// interface_hidden = mode ;
5527: LD_ADDR_OWVAR 54
5531: PUSH
5532: LD_VAR 0 1
5536: ST_TO_ADDR
// end ; end_of_file
5537: LD_VAR 0 2
5541: RET
// on VehicleConstructed ( veh , fac ) do begin AddComMoveXY ( veh , 82 , 77 ) ;
5542: LD_VAR 0 1
5546: PPUSH
5547: LD_INT 82
5549: PPUSH
5550: LD_INT 77
5552: PPUSH
5553: CALL_OW 171
// end ;
5557: PPOPN 2
5559: END
