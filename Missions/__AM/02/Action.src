// Mission start
Every 1 do
var tmp;
begin

     CenterNowOnUnits(JMM);

     tmp = FilterAllUnits([[f_side, 4], [f_type, unit_human]]) diff [Lisa];

     IF Cyrus AND Bobby then
     begin
          ComMoveXY(Cyrus, 43, 72);
          ComMoveXY(Bobby, 44, 70);
          ComMoveXY(JMM, 46, 73);

          Say(Cyrus, 'D1a-Cyrus-1');
          Say(JMM, 'D1a-JMM-1');

          AddComMoveXY(Cyrus, 37, 66);
          AddComMoveXY(Bobby, 41, 67);
          AddComMoveXY(JMM, 38, 64);

          Say(Bobby, 'D1a-Bobby-2');

          AddComMoveXY(Cyrus, 35, 62);
          AddComMoveXY(Bobby, 32, 60);
          AddComMoveXY(JMM, 35, 60);

          Say(JMM, 'D1a-JMM-2');

          ComWalk(Lisa);
          wait(0$1);
          AddComTurnUnit(Lisa, JMM);
          ComTurnUnit([JMM, Cyrus, Bobby], Lisa);

          ComMoveXY(tmp[1], 33, 55);
          ComMoveXY(tmp[2], 30, 54);
          AddComTurnUnit(tmp[1], JMM);
          AddComTurnUnit(tmp[2], JMM);

          Say(Lisa, 'D1a-Lisa-2');

     end;

     IF Cyrus AND NOT Bobby then
     begin
          ComMoveXY(Cyrus, 43, 72);
          ComMoveXY(JMM, 46, 73);

          Say(Cyrus, 'D1a-Cyrus-1');
          Say(JMM, 'D1a-JMM-1');

          AddComMoveXY(Cyrus, 37, 66);
          AddComMoveXY(JMM, 38, 64);

          Say(Cyrus, 'D1a-Cyrus-2');

          AddComMoveXY(Cyrus, 35, 62);
          AddComMoveXY(JMM, 35, 60);

          Say(JMM, 'D1a-JMM-2');

          ComWalk(Lisa);
          wait(0$1);
          AddComTurnUnit(Lisa, JMM);

          Say(Lisa, 'D1a-Lisa-2');

          ComTurnUnit([JMM, Cyrus], Lisa);
     end;

     IF NOT Cyrus AND Bobby then
     begin

          ComMoveXY(Bobby, 44, 70);
          ComMoveXY(JMM, 46, 73);

          Say(Bobby, 'D1a-Bobby-1');
          Say(JMM, 'D1a-JMM-1');

          AddComMoveXY(Bobby, 37, 66);
          AddComMoveXY(JMM, 38, 64);

          Say(Bobby, 'D1a-Bobby-2');

          AddComMoveXY(Bobby, 35, 62);
          AddComMoveXY(JMM, 35, 60);

          Say(JMM, 'D1a-JMM-2');

          ComWalk(Lisa);
          wait(0$1);
          AddComTurnUnit(Lisa, JMM);
          ComTurnUnit([JMM, Cyrus], Lisa);

          ComMoveXY(tmp[1], 33, 55);
          ComMoveXY(tmp[2], 30, 54);
          AddComTurnUnit(tmp[1], JMM);
          AddComTurnUnit(tmp[2], JMM);

          Say(Lisa, 'D1a-Lisa-2');


     end;

     IF NOT Cyrus and NOT Bobby then
     begin
          ComMoveXY(JMM, 37, 66);

          Say(JMM, 'D1b-JMM-1');

          ComCrawl(JMM);
          AddComMoveXY(JMM, 35, 60);

          wait(0$8);

          Say(JMM, 'D1b-JMM-1a');

          ComWalk([JMM, Lisa]);
          wait(0$1);

          AddComTurnUnit(Lisa, JMM);
          AddComTurnUnit([JMM], Lisa);

          ComMoveXY(tmp[1], 33, 55);
          ComMoveXY(tmp[2], 30, 54);
          AddComTurnUnit(tmp[1], JMM);
          AddComTurnUnit(tmp[2], JMM);

          Say(Lisa, 'D1b-Lisa-1');

     end;

     Say(JMM, 'D1-JMM-1');
     Say(Lisa, 'D1-Lisa-1');
     Say(JMM, 'D1-JMM-2');
     SayRadio(Powell, 'D1-Pow-2');

     If Cyrus then
     begin
          Say(Cyrus, 'D1-Cyrus-2');
          Say(JMM, 'D1-JMM-3');
     end;

     SayRadio(Powell, 'D1-Pow-3');
     Say(JMM, 'D1-JMM-4');
     SayRadio(Powell, 'D1-Pow-4');
     SayRadio(Powell, 'D1-Pow-4a');

     If Cyrus then Say(Cyrus, 'D1-Cyrus-4');

     If Bobby then
     begin
          Say(Bobby, 'D1-Bobby-4');
          Say(Lisa, 'D1-Lisa-4');
          Say(JMM, 'D1-JMM-5');
     end;

     InGameOff;
     SetSide(FilterAllUnits([f_side, 4]) diff [Brian, Jerry], 1);
     ChangeMissionObjectives('M1');
     SaveForQuickRestart;

end;

// Meet Khatam

Every 0$1 trigger FilterUnitsInArea(PaulTriggerArea, [f_side, 1]) > 0 do
begin

     InGameOn;
     ComHold(FilterAllUnits([[f_side, 1], [f_type, unit_human]]));
     CenterOnXY(24, 32);
     PlaceUnitArea(Khatam, PaulSpawn, true);
     SetClass(Khatam, 4);

     wait(0$1);

     ComMoveXY(Khatam, 27, 38);
     AddComTurnUnit(Khatam, JMM);
     ComTurnUnit(FilterAllUnits([[f_side, 1], [f_type, unit_human]]) diff [Khatam], Khatam);

     wait(0$1);

     Say(Khatam, 'D2a-Khat-1');
     Say(JMM, 'D2a-JMM-1');
     Say(Khatam, 'D2a-Khat-2');
     Say(JMM, 'D2a-JMM-2');
     Say(Khatam, 'D2a-Khat-3');
     Say(JMM, 'D2a-JMM-3');
     Say(Khatam, 'D2a-Khat-4');
     Say(JMM, 'D2a-JMM-4');
     Say(Khatam, 'D2a-Khat-5');
     Say(JMM, 'D2a-JMM-5');

     InGameOff;

     If FilterAllUnits([[f_side, 1], [f_type, unit_human], [f_not, [f_lives, 800]]]) > 0 then
     begin
          ComHeal(Khatam, FilterAllUnits([[f_side, 1], [f_type, unit_human], [f_not, [f_lives, 1000]]])[1]);
          Say(Khatam, 'D2b-Khat-1');
     end;

end;

// Find Americans corpses
Every 0$1 trigger FilterUnitsInArea(DeadTriggerArea, [f_side, 1]) > 0 do
var i, distanceTab, min, tmp;
begin

     distanceTab = [ [999, 999] ];

     tmp = FilterAllUnits([[f_side, 1], [f_type, unit_human]]) diff [JMM, Bobby, Cyrus, Lisa, Khatam];

     PrepareDeadSoldiers;

     spotCorpses = 1;

     InGameOn;
     CenterOnXY(23, 12);

     min = distanceTab[1][2];

     for i in FilterAllUnits([[f_side, 1], [f_type, unit_human]]) diff [JMM, Khatam] do
         if IsOK(i) then distanceTab = distanceTab ^ [ [i, GetDistUnitArea(i, DeadsSpawn)] ];

     for i = 2 to distanceTab do if distanceTab[i][2] < min then min = distanceTab[i][2];

     for i in FilterAllUnits([[f_side, 1], [f_type, unit_human]]) diff [JMM] do
     begin
          ComMoveToArea(i, DeadCutscene);
          ComMoveToArea(JMM, JMMAreaCutscene);
          AddComTurnXY(i, 23, 11);
          AddComTurnXY(JMM, 23, 11);
          SetLives(DyingSold, 250);
     end;

     for i = 2 to distanceTab do
     begin
          if distanceTab[i][2] = min then
          begin
               if distanceTab[i][1] = Bobby then Say(Bobby, 'DCorpses-Bobby-1');
               if distanceTab[i][1] = Cyrus then Say(Cyrus, 'DCorpses-Cyrus-1');
               if distanceTab[i][1] = Lisa then Say(Lisa, 'DCorpses-Lisa-1');
               if distanceTab[i][1] = tmp[1] and GetSex(tmp[1]) = 1 then Say(tmp[1], 'DCorpses-Sol1-1');
               if distanceTab[i][1] = tmp[1] and GetSex(tmp[1]) = 2 then Say(tmp[1], 'DCorpses-FSol1-1');
               if distanceTab[i][1] = tmp[2] and GetSex(tmp[2]) = 1 then Say(tmp[2], 'DCorpses-Sol1-1');
               if distanceTab[i][1] = tmp[2] and GetSex(tmp[2]) = 2 then Say(tmp[2], 'DCorpses-FSol1-1');
               SetLives(DyingSold, 150);
               break;
          end;
     end; 

     repeat
       wait(0$1);
       for i in FilterAllUnits([[f_side, 1], [f_type, unit_human]]) diff [JMM] do
       begin
          ComMoveToArea(i, DeadCutscene);
          ComMoveToArea(JMM, JMMAreaCutscene);
          AddComTurnXY(i, 23, 11);
          AddComTurnXY(JMM, 23, 11);
          SetLives(DyingSold, 250);
       end;
     until IsInArea(JMM, JMMAreaCutscene);

     wait(0$3);

     Say(JMM, 'DCorpses-JMM-1');
     SetLives(DyingSold, 100);

     IF IsOK(Khatam) then
     begin
          repeat
            wait(0$1);
            ComHeal(Khatam, DyingSold);
          until GetDistUnits(Khatam, DyingSold) < 2;

          spotCorpses = 0;

          SetLives(DyingSold, 10);
          wait(0$3);
          KillUnit(DyingSold);

          wait(0$1);
          CenterNowOnUnits([JMM, Khatam]);
          ComTurnUnit(Khatam, JMM);
          wait(0$1);

          Say(Khatam, 'DCorpses-Khat-1');

     end;

     InGameOff;

     Say(JMM, 'DCorpses-JMM-2');

end;

// Corpes loop
Every 0$1 trigger spotCorpses = 1 do
begin
     enable;
     SetLives(DyingSold, 10);

end;

// Find new AM soldiers

Every 1 trigger (FilterUnitsInArea(WaterScene, [f_side, 1]) > 0 OR GetDistUnits(NearestUnitToUnit(FilterAllUnits([f_side, 1]), Jerry), Jerry) < 15) do
var i;
begin
    InGameOn;
    SetLives(Jerry, 250);
    SetAttitude(3, 4, att_enemy, true);
    CenterOnUnits([Brian, Jerry]);
    for i in FilterUnitsInArea(RussiansWaterSpawn, [f_side, 3]) do ComFree(i);
    for i in FilterAllUnits([f_side, 4]) do ComFree(i);

    wait(0$1);

    InGameOff;
    Say(Brian, 'DF-Sol1-1');
    Say(JMM, 'DF-JMM-1'); 

end;

// Kill russians near river

Every 0$1 trigger FilterUnitsInArea(WaterArea, [f_side, 3]) = 0 do
begin

    If NOT IsDead(Brian) then SetSide(Brian, 1);
    If NOT IsDead(Jerry) then SetSide(Jerry, 1);

    IF FilterAllUnits([[f_side, 1], [f_class, 4]]) > 0 then
    begin
        Say(JMM, 'DFa-JMM-1');
    end else
    begin
        Say(JMM, 'DFa-JMM-1a');
    end;

end;

// Brian dialog
Every 0$1 trigger FilterUnitsInArea(WaterArea, [f_side, 3]) = 0 AND NOT IsOk(Brian) do
begin
     repeat
     wait(0$1);
     until GetLives(Brian) > 250;

     Say(Brian, 'DFb-Sol1-1');
     ComMoveXY(Brian, 78, 74);
     IF IsDead(Jerry) then Say(Brian, 'DFb-Sol1-1a')
end;

// Contact with enemy bunker

Every 0$1 trigger FilterAllUnits([[f_side, 1], [f_type, unit_vehicle]]) = 0 do
var i;
begin

  enable;

  for i in FilterAllUnits([[f_side, 3], [f_type, unit_building], [f_btype, 31]]) do
  begin
       IF See(1, i) then
       begin
            Disable;
            Say(JMM, 'DX1-JMM-1');
       end;
  end;
end;

// Alert in south base

Every 0$1 trigger SeeArea(1, SouthBaseRussianSpawn1) do
var i, j;
begin

     DialogueOn;
     Say(FilterUnitsInArea(SouthBaseRussianSpawn1, [[f_side, 3], [f_type, unit_human]])[1], 'DX3-Rus1-1');
     Say(JMM, 'DX3-JMM-1');
     DialogueOff;

     for i in FilterUnitsInArea(SouthBaseRussianSpawn1, [[f_side, 3], [f_type, unit_human]]) do southBaseDefenders = southBaseDefenders ^ i;

     wait([0$13, 0$12, 0$9][Difficulty]);

    repeat
    wait(0$1);

    for i in FilterAllUnits([[f_side, 3], [f_type, unit_vehicle], [f_empty]]) do
    begin
        for j in FilterAllUnits([[f_side, 3], [f_type, unit_human], [f_class, 3]]) do
        begin
            ComEnterUnit(j, i);
        end;
    end;

    until FilterAllUnits([[f_side, 3], [f_type, unit_vehicle], [f_empty]]) = 0 OR FilterAllUnits([[f_side, 3], [f_type, unit_human], [f_class, 3]]) = 0;

end;

// Dialog about tanks
Every 0$1 do
var i, tmp;
begin
    enable;

    tmp = FilterAllUnits([[f_side, 1], [f_type, unit_human]]);

    for i in tmp do begin
        if GetDistUnits(i, vehicle1) < 4 or GetDistUnits(i, vehicle2) < 4  then
        begin
            Disable;
            CenterOnUnits([vehicle1, vehicle2]);

            If IsOK(Bobby) then
            begin
                DialogueOn;
                Say(Bobby, 'DX2-Bobby-1'); 
                Say(JMM, 'DX2-JMM-1a');
                DialogueOff;
                Disable;
            end else
            begin
                DialogueOn;
                Say(JMM, 'DX2-JMM-1');
                DialogueOff;
                Disable;
            end;
        end;

    end;

end;

Every 0$1 trigger FilterAllUnits([[f_side, 1],[f_nation, 3], [f_type, unit_vehicle], [f_weapon, 42]]) >= 1 do
var tmp, temp1, temp2, i;
begin
     tmp = FilterAllUnits([[f_side, 1],[f_nation, 3], [f_type, unit_vehicle], [f_weapon, 42]]);
     temp1 = FilterAllUnits([[f_side, 1], [f_type, unit_human], [f_sex, sex_male]]) diff [JMM, Cyrus, Bobby];
     temp2 = FilterAllUnits([[f_side, 1], [f_type, unit_human], [f_sex, sex_female]]) diff [Lisa];

     if NOT IsInUnit(JMM) then Say(JMM, 'DX2a-JMM-1');

     IF IsInUnit(Bobby) = tmp[1] then Say(Bobby, 'DX2a-Bobby-1');
     IF IsInUnit(Cyrus) = tmp[1] then Say(Cyrus, 'DX2a-Cyrus-1');
     IF IsInUnit(Lisa) = tmp[1] then Say(Lisa, 'DX2a-Lisa-1');

     for i in temp1 do if IsInUnit(i) = tmp[1] then Say(i, 'DX2a-Sol1-1');
     for i in temp2 do if IsInUnit(i) = tmp[1] then Say(i, 'DX2a-FSol1-1');

     IF IsInUnit(JMM) = tmp[1] then Say(JMM, 'DX2b-JMM-1');

     if NOT IsInUnit(JMM) then Say(JMM, 'DX2a-JMM-2');

end;

// Capture one of the two bases

Every 0$1 trigger GetSide(dep1) = 1 OR GetSide(dep2) = 1 do
begin
    DialogueOn;
    Say(JMM, 'D3-JMM-1');
    SayRadio(Powell, 'D3-Pow-1');
    if IsOK(Cyrus) then Say(Cyrus, 'D3-Cyrus-1');  
    DialogueOff;    
end;

// Capture all enemy bases and spawn Mikhail

Every 0$1 trigger GetSide(dep1) = 1 AND GetSide(dep2) = 1 AND FilterUnitsInArea(NorthBase, [[f_side, 3], [f_type, unit_human]]) = 0 do
var temp, i;
begin

    temp = FilterAllUnits([[f_side, 1],[f_nation, 1], [f_class, 2]]) diff [JMM];

    DialogueOn;
    Say(JMM, 'D3a-JMM-1');
    SayRadio(Powell, 'D3a-Pow-1');
    Say(JMM, 'D3a-JMM-2');
    SayRadio(Powell, 'D3a-Pow-2');
    Say(JMM, 'D3a-JMM-3');
    SayRadio(Powell, 'D3a-Pow-3');
    Say(JMM, 'D3a-JMM-4');
    DialogueOff;

    ChangeMissionObjectives('M2');
    Say(JMM, 'D3b-JMM-1');

    repeat
     wait(0$1);
    until FilterUnitsInArea(NorthBase, [[f_side, 1], [f_class, 2]]);

    wait(0$5);
    InGameOn;
    PrepareRussianHeroes;
    CenterNowOnUnits(Mikhail);
    ComTurnUnit([JMM, temp[1]], Mikhail);
    ComTurnUnit(Mikhail, temp[1]);

    Wait(0$02);

    Say(Mikhail, 'D4-Mikh-1');
    if GetSex(temp[1]) = 1 then Say(temp[1], 'D4-Sol1-1');
    if GetSex(temp[1]) = 2 then Say(temp[1], 'D4-FSol1-1');
    Say(Mikhail, 'D4-Mikh-2');
    if GetSex(temp[1]) = 1 then Say(temp[1], 'D4-Sol1-2');
    if GetSex(temp[1]) = 2 then Say(temp[1], 'D4-FSol1-2');
    Say(Mikhail, 'D4-Mikh-3');
    if GetSex(temp[1]) = 1 then Say(temp[1], 'D4-Sol1-3');
    if GetSex(temp[1]) = 2 then Say(temp[1], 'D4-FSol1-3');
    Say(Mikhail, 'D4-Mikh-4');

    case query('Qs1')  of
        1: begin
            InGameOff;
            SetAttitude(1, 6, att_enemy, true);
            ComMoveToArea(Mikhail, MikhailEscape);
        end;

        2: begin
            repeat
                wait(0$1);
                CenterNowOnUnits(temp[1]);
                ComMoveUnit(temp[1], JMM);
                ComMoveUnit(Mikhail, JMM);
            until (GetDistUnits(JMM, Mikhail) < 5);
            ComTurnUnit(Mikhail, JMM);

            Say(JMM, 'D4b-JMM-1');
            Say(Mikhail, 'D4b-Mikh-1');
            Say(JMM, 'D4b-JMM-2');
            Say(Mikhail, 'D4b-Mikh-2');
            Say(JMM, 'D4b-JMM-3');
            Say(Mikhail, 'D4b-Mikh-3');
            Say(JMM, 'D4b-JMM-4');
            Say(Mikhail, 'D4b-Mikh-4');
            Say(JMM, 'D4b-JMM-5');
            Say(Mikhail, 'D4b-Mikh-5');
            Say(JMM, 'D4b-JMM-6');
            Say(Mikhail, 'D4b-Mikh-6');
            Say(JMM, 'D4b-JMM-7');
            Say(Mikhail, 'D4b-Mikh-7');
            if GetSex(temp[1]) = 1 then Say(temp[1], 'D4b-Sol1-7');
            if GetSex(temp[1]) = 2 then Say(temp[1], 'D4b-FSol1-7');
            Say(JMM, 'D4b-JMM-8');
            if GetSex(temp[1]) = 1 then Say(temp[1], 'D4b-Sol1-8');
            if GetSex(temp[1]) = 2 then Say(temp[1], 'D4b-FSol1-8');
            Say(JMM, 'D4b-JMM-9');

            SetSide(Mikhail, 1);

            for i in FilterAllUnits([[f_side, 1]]) do ComFree(i);

            repeat
                wait(0$1);
                CenterNowOnUnits(Mikhail);
                ComEnterUnit([Mikhail, temp[1]], dep1);
            until IsInUnit(Mikhail);

            mikhailDepot = IsInUnit(Mikhail);

            InGameOff;

            ChangeMissionObjectives('M3');

        end;

        3: begin
            ComMoveToArea(Mikhail, MikhailEscape);
            wait(0$3);
            InGameOff;
        end;

    end;

    PrepareTigers;
    RussianTrap;
    tigersRespawn = 1;
end;

// Spawn enemy cargo bay
Every 0$1 trigger GetSide(dep1) = 1 AND GetSide(dep2) = 1 and GetResourceType(GetBase(dep1), 1) >= 100 do
begin

    wait(rand(1$0, 2$0) + 0$30);

    PrepareCargoBays;
    cargoRespawn = 1;
    ComMoveXY([cargo1, cargo2, driver1, driver2], 36, 13);
    AddComMoveXY([cargo1, cargo2, driver1, driver2], 40, 20);
    AddComMoveXY([cargo1, cargo2, driver1, driver2], 53, 16);

    wait(0$5);
    Say(driver1, 'D5-Rus2-1');

end;

Every 0$1 trigger cargoRespawn = 1 do
var i, j, tmp1, tmp2;
begin
    enable;
    tmp1 = FilterAllUnits([[f_side, 3], [f_type, unit_vehicle], [f_weapon, ru_cargo_bay]]);
    tmp2 = FilterAllUnits([[f_side, 1], [f_nation, 1]]);
   
    for i in tmp1 do
    begin
        for j in tmp2 do
        begin
            if GetDistUnits(i, j) < 7 then
            begin
                disable;
                ComMoveXY([cargo1, cargo2], 7, 9);

                If cargoSee = 0 then
                begin
                   cargoSee = 1;
                   cargoEscape = 1;
                   Say(driver1, 'D5-Rus2-1a');
                   exit;
                end; 
                
            end;
        end;
    end;

end;

// Escape cargo from map
Every 0$1 trigger cargoEscape > 0 do
begin
    enable;

    ComMoveToArea([cargo1, cargo2], RussianAttack);

    if IsInArea(cargo1, RussianAttack) OR IsInArea(driver1, RussianAttack) then
    begin
        RemoveUnit(cargo1);
        RemoveUnit(driver1);
        cargoEscape = cargoEscape + 1;
    end;
     
    if IsInArea(cargo2, RussianAttack) OR IsInArea(driver2, RussianAttack) then
    begin
         RemoveUnit(cargo2);
         RemoveUnit(driver2);
         cargoEscape = cargoEscape + 1;
    end;
end;

Every 0$1 trigger cargoEscape > 1 do
begin

    SetRestrict(b_armoury, 1, true);
    SetRestrict(31, 1, true);

    If IsOK(Jerry) then
    begin
         Say(Jerry, 'D5a-Sol1-1');
    end else
    begin
         Say(FilterAllUnits([[f_side, 1], [f_nation, 1], [f_sex, 1]])[rand(2, FilterAllUnits([[f_side, 1], [f_nation, 1], [f_sex, 1]]))], 'D5a-Sol1-1');
    end;
    Say(JMM, 'D5a-JMM-1');
end;

// Macmillan's alert about attack depots
Every 0$1 trigger (GetSide(dep1) = 3 and GetLives(dep1) < 1000) OR (GetSide(dep2) = 3 and GetLives(dep2) < 1000) do
begin
     Say(JMM, 'D8-JMM-1');
end;

// Mihail

// Mikhail in depot - change variable value
Every 0$1 trigger IsInUnit(Mikhail) = dep1 and not mikhailInbase = 3 do
begin
     mikhailInBase = 1;
     mikhailStatus = 1;
     enable;

end;

// Mikhail ask  > kill/patrol/free
Every 0$1 trigger IsInArea(Mikhail, MikhailEnter) AND mikhailInBase = 1 AND GetSide(Mikhail) = 1 do
begin
     enable;
     
     case query('QMikh2') of
     1: Begin
        SetAttitude(1, 6, att_enemy, true);
        SetSide(Mikhail, 6);
        ComExitBuilding(Mikhail);
        wait(0$1);
        ComMoveToArea(Mikhail, MikhailEscape);
        mikhailInbase = 0;
     end;
      
     2: Begin
        mikhailInBase = 2;
        SetSide(Mikhail, 6);
        ComExitBuilding(Mikhail);
        wait(0$1);
        AddComMoveXY(Mikhail, GetX(Mikhail) + 2, GetY(Mikhail) + 2);
        AddComMoveXY(Mikhail, GetX(Mikhail) + 1, GetY(Mikhail) + 2);
        AddComMoveXY(Mikhail, GetX(Mikhail) + 2, GetY(Mikhail));

        wait(0$5);
        ComMoveToArea(Mikhail, MikhailEnter);
        mikhailInBase = 4;
     end;

     3: Begin
        SetSide(Mikhail, 6);
        ComExitBuilding(Mikhail);
        wait(0$1);
        ComMoveToArea(Mikhail, MikhailEscape);
        mikhailInbase = 3;
     end;

  end;

end;

// Mikhail back to depot
Every 1 trigger IsInArea(Mikhail, MikhailEnter) AND mikhailInBase = 4 do
begin
     enable;

     InGameOn;
     SetSide(Mikhail, 1);

     repeat
       wait(0$1);
       IF GetDistUnits(Mikhail, dep1) < GetDistUnits(Mikhail, dep2) then
       begin
          ComEnterUnit(Mikhail, dep1);
       end else
       begin
          ComEnterUnit(Mikhail, dep2);
       end;
     until IsInUnit(Mikhail);

     InGameOff;

     mikhailInBase = 1;

end;

// Mikhail - Escape
Every 0$1 trigger IsInUnit(Mikhail) and not mikhailInBase = 3 do
begin
enable;

     IF FilterAllUnits([[f_side, 1], [f_type, unit_human], [f_dist, IsInUnit(Mikhail), 10]]) = 1 then
     begin
       SetAttitude(1, 6, att_enemy, true);
       SetSide(Mikhail, 6);
       ComExitBuilding(Mikhail);
       wait(0$1);
       ComMoveToArea(Mikhail, MikhailEscape);
       mikhailStatus = 3;
     end;
end;

// Mikhail - Macmillan dialog about Mikhail's escape
Every 0$1 trigger GetDistUnits(JMM, mikhailDepot) < 5 AND mikhailStatus = 3 AND NOT mikhailInBase = 3 do
var tmp;
begin

     tmp = FilterAllUnits([[f_side, 1], [f_type, unit_human], [f_sex, sex_male]]) diff [JMM];

     DialogueOn;
     Say(JMM, 'D7-JMM-1');
     Say(tmp[1], 'D7-Sol1-1');
     Say(JMM, 'D7-JMM-2');
     Say(tmp[1], 'D7-Sol1-2');
     Say(JMM, 'D7-JMM-3');
     Say(tmp[1], 'D7-Sol1-3');

     If IsOK(Cyrus) and IsOK(Lisa) then
     begin
          Say(Cyrus, 'D7-Cyrus-3');
          Say(tmp[1], 'D7-Sol1-4');
          Say(Lisa, 'D7-Lisa-4');
     end;

     DialogueOff;

end;

// Mikhail - shoot durring escape
Every 0$1 trigger IsDying(Mikhail) AND mikhailStatus = 3 do
begin
enable;
mikhailStatus = 2;
end;

// Mikhail - Remove from map
Every 0$1 trigger IsInArea(Mikhail, MikhailEscape) AND GetSide(Mikhail) = 6 do
begin
     if not mikhailInBase = 3 then mikhailStatus = 3;
     RemoveUnit(Mikhail);
end;

// Mikhail - Dialog random American about escape
Every 0$1 trigger mikhailStatus = 3 AND GetSide(Mikhail) = 6 do
var i, attacker;
begin
enable;
 if IsOk(Mikhail) then
   begin
    attacker= Nearest(Mikhail, FilterAllUnits([[f_side, 1], [f_type, unit_human]]));
   if GetDistUnits(attacker, Mikhail) < 8 then
   begin
    if GetSex(attacker)= sex_male then
     begin
       Disable;
       Say(attacker, 'D7a-Sol1-1'); 
       wait(0$2);
       Say(attacker, 'D7a-Sol1-1a');
     end
    else 
     begin
       Disable;
       Say(attacker, 'D7a-FSol1-1');
       wait(0$2);
       Say(attacker, 'D7a-FSol1-1a');
     end;
  end;
  end;
end;

// Capture base
Every 0$1 trigger LastBattle = 1 and FilterUnitsInArea(NorthBase, [[f_side, 3], [f_type, unit_human]]) > 2 and FilterUnitsInArea(NorthBase, [[f_side, 1], [f_or, [f_type, unit_human], [f_occupied]]]) = 0 do 
begin
    SetSide(dep1, 3);
end;

Every 0$1 trigger tigersRespawn = 1 and FilterAllUnits([[f_side, 0], [f_class, 14]]) = 0 do
var i, tmp;
begin
    tmp = FilterAllUnits([[f_side, 1], [f_type, unit_human], [f_nation, 1]]);

    for i in tmp do 
    begin
        AddExperience(i, rand(1,4), 300);
    end;
end;