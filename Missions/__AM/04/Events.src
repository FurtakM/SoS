On BuildingComplete(building) Do
var i, tmpSold, tmpEng, tmpMeh, tmpSci, tmpSoldInside, cargo;
begin               
tmpSold = FilterAllUnits([[f_side, 6], [f_type, unit_human], [f_class, 1], [f_not, [f_inside]]]);
tmpSoldInside = FilterAllUnits([[f_side, 6], [f_type, unit_human], [f_class, 1], [f_inside]]);
tmpEng = FilterAllUnits([[f_side, 6], [f_type, unit_human], [f_class, 2]]);
tmpSci = FilterAllUnits([[f_side, 6], [f_type, unit_human], [f_class, 4]]);
cargo = FilterAllUnits([[f_side, 6], [f_type, unit_vehicle], [f_weapon, 51]]);

if GetSide(building) = 6 and GetBType(building) = b_depot then
   begin
   ruPDepot = building;
   baseReadyToBuild = 1; 
   end;  

if GetBType(building) = 4 and GetSide(building) = 6 then
   for i in tmpSold do
       ComEnterUnit(i, building);

if GetBType(building) = 6 and GetSide(building) = 6 then
   begin
   for i in tmpSci do
       ComEnterUnit(i, building);

   ResAllTechs(6, building, 3);
   ruPLab = building;
   end; 

if GetBType(building) = 2 and GetSide(building) = 6 then
   begin
   tmpMeh = UnitsInside(cargo[1]);
   ComExitVehicle(tmpMeh);
   wait(0$1);
   AddComEnterUnit(tmpMeh, building);
   end;

if GetBType(building) = 32 and GetSide(building) = 6 then
   begin
   ComPlaceWeapon(building, 42);
   ComExitBuilding(tmpSoldInside[1]);
   wait(0$1);
   AddComEnterUnit(tmpSoldInside[1], building);
   end;
        
if GetBType(building) = b_breastwork and GetSide(building) = 6 then
   begin
   ComExitBuilding(tmpSoldInside[2]);
   wait(0$1);
   AddComEnterUnit(tmpSoldInside[2], building);
   ComEnterUnit(tmpEng[1], ruPDepot);
   baseReadyToBuild = 2;
   end; 

// First AM bunker
if GetBType(building) = b_bunker and GetSide(building) = 1 and bunkerDialog = 0 then
   begin
   bunkerDialog = 1;

   if IsOK(Claptopn) then
      Say(Claptopn, 'D11-Eng1-1')
   else
      begin
      if FilterAllUnits([[f_side, 1], [f_type, unit_human], [f_class, 3], [f_sex, 1]]) diff [JMM] > 0 then
         DialogRandom(FilterAllUnits([[f_side, 1], [f_type, unit_human], [f_class, 2], [f_sex, 1]]) diff [JMM], 'D11-Eng1-1', 'D11-Eng1-1')
      else
         DialogRandom(FilterAllUnits([[f_side, 1], [f_type, unit_human], [f_sex, 1]]) diff [JMM], 'D11-Eng1-1', 'D11-Eng1-1');
      end;

   if energyVDialog = 0 then
      EnergyDialog;
   end;

// Oil mine and power
if GetBType(building) = b_oil_mine and GetSide(building) = 1 then
   buildOil = 1;

if GetBType(building) = b_oil_power and GetSide(building) = 1 then
   buildPower = 1;
End;

On UpgradeComplete(building) Do
begin
// First AM factory
if GetBType(building) = b_factory and GetSide(building) = 1 and factoryDialog = 0 then
   begin
   factoryDialog = 1;

   if GetTech(47, 1) = state_enabled and GetTech(45, 1) = state_enabled then
      begin
      CenterNowOnUnits(FilterAllUnits ([[f_side, 1], [f_type, unit_building], [f_btype, b_factory], [f_lives, 1000]])[1]);

      Say(JMM, 'D9a-JMM-1');

      if IsOK(Campell) then
         Say(Campell, 'D9a-Mech1-1')
      else
         begin
         if FilterAllUnits([[f_side, 1], [f_type, unit_human], [f_class, 3], [f_sex, 1]]) diff [JMM] > 0 then
            DialogRandom(FilterAllUnits([[f_side, 1], [f_type, unit_human], [f_class, 3], [f_sex, 1]]) diff [JMM], 'D9a-Mech1-1', 'D9a-Mech1-1')
         else
             DialogRandom(FilterAllUnits([[f_side, 1], [f_type, unit_human], [f_sex, 1]]) diff [JMM], 'D9a-Mech1-1', 'D9a-Mech1-1');
         end;

      if energyVDialog = 0 then
         EnergyDialog;
      end;
   end;
End;

On UnitDestroyed(unit) do
var mech;
begin
SOS_UnitDestroyed(unit);

if unit = JMM then
   YouLost('JMM');

if unit = ambdept0 then
   YouLost('Base');

if unit in ruMobile then
   ruMobile = ruMobile diff ruMobile;

if GetType(unit) = unit_human and GetSide(unit) = 1 then
   lostCounter = lostCounter + 1;

if ruMech and UnitsInside(rubfact0) < 6 and GetClass(unit) = 3 and GetSide(unit) = 3 and IsOK(rubfact0) and GetSide(rubfact0) = 3 then
   begin
   ruMech := ruMech - 1;

   if ruMech = 0 then
      exit;

   wait(0$40);

   uc_side = 3;
   uc_nation = 3;

   hc_gallery := '';
   hc_name := '';

   PrepareMechanic(false, rand(RuSoldMinLevel, RuSoldMaxLevel));
   mech := CreateHuman;

   PlaceUnitXY(mech, 124, 97, false);
   ComEnterUnit(mech, rubfact0);
   end;
End;

On VehicleConstructed(vehicle, building) do
var driver;
begin
SOS_VehicleConstructed(vehicle, building);

if GetSide(vehicle) = 1 then
   vehicleProduceCounter := vehicleProduceCounter + 1;

if GetSide(vehicle) = 3 and GetWeapon(vehicle) in [ru_heavy_machine_gun, ru_gatling_gun, ru_gun] then
   ruMobile := ruMobile union vehicle;

if GetWeapon(vehicle) = ru_bulldozer then
   begin
   uc_side = 3;
   uc_nation = 3;

   PrepareMechanic(false, RuSoldMaxLevel);
   driver := CreateHuman;
   PlaceHumanInUnit(driver, building);

   CutTreeInArea(vehicle, TreesArea);

   repeat
    wait(0$1);
   until not HasTask(vehicle);

   driver := IsDrivenBy(vehicle);

   AddComMoveXY(driver, 104, 73);
   AddComExitVehicle(driver);
   AddComEnterUnit(driver, rubfact0);
   end;
End;

On UnitGoesToRed(unit) do
begin
if GetSide(unit) = 3 and GetType(unit) = unit_vehicle and GetWeapon(unit) in [42, 43, 44] then
   AddComConstruct(rubfact0, GetChassis(unit), GetEngine(unit), GetControl(unit), GetWeapon(unit));
End;

On LeaveVehicle(vehicle, human) do
begin
if GetSide(vehicle) = 3 and GetSide(human) = 3 and IsOK(rubfact0) and not IsOk(vehicle) then
   ComEnterUnit(human, rubfact0);
End;

On EvacuateVehicle(driver, veh, p1, p2) do
begin
if GetSide(driver) = 5 then
   begin
   repeat
    ComMoveXY(driver, 125, 97);
    wait(0$1);
   until IsDead(driver) or IsAt(driver, 125, 97);

   if IsDead(driver) then
      exit;

   RemoveUnit(driver);
   end;
End;

On EnterBuilding(b, un) do
begin
if b = rubfact0 and GetLives(un) < 1000 then
   SetLives(un, 1000);
End;

On Command(comandid) do
var i, j, tmp;
begin
SOS_Command(comandid);

if not FilterAllUnits([f_side, 4]) then
   exit;

for i in FilterAllUnits([[f_side, 1], [f_or, [f_type, unit_human], [f_type, unit_vehicle]]]) do
    begin
    if GetTaskList(i) > 0 then
       begin
       for j = 1 to GetTaskList(i) do
           begin
           tmp = GetTaskList(i)[j][4];

           if (GetSide(tmp) = 4 or GetSide(tmp) = 0) then
               ComStop(i);
           end;
       end;
    end;
End;


