Export Kurin, Grishko, Popov, Burlak;
Export kirovBaseSquad, beriaBaseSquad, grishkoSquad, russianPatrol,
       russianOmicronAttackers, russianCargo;
Export Function PrepareRussian;
var i, un, arm, bar, bun, tmp;
begin
ResetHc;

for i in FilterAllUnits([[f_type, unit_building], [f_nation, 3]]) do
    SetBLevel(i, 5);

SetBName(kirov, 'kirov');
SetBName(beria, 'beria');
SetBName(kagan, 'kagan');

uc_side := 6;
uc_nation := 3;

bar := FilterAllUnits([[f_side, 6], [f_btype, b_barracks]])[1];
arm := FilterAllUnits([[f_side, 6], [f_btype, b_armoury]])[1];

kirovBaseSquad := [];
beriaBaseSquad := [];
russianPatrol := [];

Kurin := PrepareUnit('Kurin', false, '');
PlaceHumanInUnit(Kurin, kirov);

Popov := PrepareUnit('Popov', false, '');
PlaceHumanInUnit(Popov, kirov);

Grishko := PrepareUnit('Grishko', false, '');
PlaceUnitXY(Grishko, 207, 106, false);
ComTurnXY(Grishko, 209, 106);

hc_importance := 0;

tmp := FilterAllUnits([[f_side, 6], [f_btype, b_bunker]]);

for i in tmp do
    PlaceWeaponTurret(i, [ru_gun, ru_gatling_gun][i mod 2 + 1]);

for i := 1 to Difficulty do
    begin
    PrepareHuman(false, 2, 2);
    un := CreateHuman;
    PlaceHumanInUnit(un, kirov);
    kirovBaseSquad := kirovBaseSquad union un;
    end;

for i := 1 to [5, 6, 6][Difficulty] do
    begin
    PrepareHuman(false, 1, [2, 3, 4][Difficulty]);
    un := CreateHuman;
    PlaceHumanInUnit(un, bar);
    kirovBaseSquad := kirovBaseSquad union un;
    end;

for i := 1 to 3 do
    begin
    PrepareHuman(false, 3, 3);
    un := CreateHuman;
    PlaceHumanInUnit(un, ru_fac);
    kirovBaseSquad := kirovBaseSquad union un;
    end;

for i := 1 to 2 do
    begin
    PrepareHuman(false, 4, 3);
    un := CreateHuman;
    PlaceHumanInUnit(un, ru_lab);
    kirovBaseSquad := kirovBaseSquad union un;
    end;

for i := 1 to 5 do
    begin
    PrepareHuman(false, 1, 3);
    un := CreateHuman;
    PlaceHumanInUnit(un, arm);
    grishkoSquad := grishkoSquad union un;
    end;

russianCargo := [];

for i := 1 to 2 do
    begin
    PrepareVehicle(ru_medium_wheeled, engine_combustion, control_manual, ru_cargo_bay, 100);
    un := CreateVehicle;
    russianCargo := russianCargo union un;
    SetCargo(un, mat_oil, 100);
    SetDir(un, 4);
    PlaceUnitXYR(un, 147, 103, 4, false);

    PrepareHuman(false, 1, Difficulty);
    PlaceHumanInUnit(CreateHuman, un);
    end;

// beria
uc_side := 3;

Burlak := PrepareUnit('Burlak', false, '');

ResetHc;

PrepareHuman(false, 3, 2);
PlaceHumanInUnit(CreateHuman, ruBeriaCargo);

if Difficulty > 1 then
   begin
   for i := 1 to 3 do
       begin
       PrepareHuman(false, 1, Difficulty);
       PlaceUnitXYR(CreateHuman, 86, 17, 3, false);
       end;
   end;

for i := 1 to 2 do
    begin
    PrepareHuman(false, 1, Difficulty);
    PlaceUnitXYR(CreateHuman, 108, 153, 3, false);
    end;

tmp := FilterAllUnits([[f_side, 3], [f_btype, b_bunker]]);

for i := 1 to tmp do
    begin
    PrepareHuman(false, 1, Difficulty + 1);
    un := CreateHuman;
    PlaceHumanInUnit(un, tmp[i]);
    beriaBaseSquad := beriaBaseSquad union un;
    PlaceWeaponTurret(tmp[i], [ru_gun, ru_gatling_gun][i mod 2 + 1]);
    end;

for i := 1 to Difficulty + 1 do
    begin
    PrepareHuman(false, 1, Difficulty + 1);
    un := CreateHuman;
    PlaceHumanInUnit(un, FilterAllUnits([[f_side, 3], [f_btype, b_barracks]])[1]);
    beriaBaseSquad := beriaBaseSquad union un;
    end;

for i := 1 to 2 do
    begin
    PrepareHuman(false, 4, Difficulty);
    un := CreateHuman;
    PlaceHumanInUnit(un, FilterAllUnits([[f_side, 3], [f_btype, b_lab_half]])[1]);
    beriaBaseSquad := beriaBaseSquad union un;
    end;

for i := 1 to Difficulty do
    begin
    PrepareHuman(false, 2, Difficulty);
    un := CreateHuman;
    PlaceHumanInUnit(un, beria);
    beriaBaseSquad := beriaBaseSquad union un;
    end;

// kagan
for i := 1 to 3 do
    begin
    bun := FilterAllUnits([[f_side, 3], [f_btype, b_breastwork]])[i];
    PrepareHuman(false, 1, Difficulty);
    un := CreateHuman;
    SetDir(un, GetDir(bun) + 3);
    PlaceHumanInUnit(un, bun);
    beriaBaseSquad := beriaBaseSquad union un;
    end;

// omicron attackers
russianOmicronAttackers := [];

for i := 1 to [4, 5, 6][Difficulty] do
    begin
    PrepareVehicle([ru_medium_wheeled, ru_heavy_wheeled][i mod 2 + 1], engine_combustion, control_manual, [ru_gatling_gun, ru_gun, ru_heavy_machine_gun][i mod 3 + 1], 100);
    un := CreateVehicle;
    SetDir(un, [0, 5][rand(1, 2)]);
    russianOmicronAttackers := russianOmicronAttackers union un;
    PlaceUnitXYR(un, 127, 89, 7, false);

    uc_side := 3;
    PrepareHuman(false, 3, 3);
    un := CreateHuman;
    russianOmicronAttackers := russianOmicronAttackers union un;
    PlaceHumanInUnit(un, russianOmicronAttackers[russianOmicronAttackers - 1]);
    end;

for i := 1 to 3 do
    begin
    PrepareHuman(false, 1, Difficulty);
    un := CreateHuman;
    russianOmicronAttackers := russianOmicronAttackers union un;
    PlaceUnitXYR(un, 91, 60, 3, false);
    end;
End;

Every 0$3 do
var i;
begin
for i := 1 to 4 do
    ComExitBuilding(grishkoSquad[i]);

wait(3);

AddComEnterUnit(grishkoSquad[1], NearestUnitToUnit(FilterAllUnits([[f_side, 6], [f_btype, b_breastwork]]), grishkoSquad[1]));

ComMoveXY(grishkoSquad[2], 211, 107);
AddComTurnXY(grishkoSquad[2], 209, 106);

ComMoveXY(grishkoSquad[3], 209, 103);
AddComTurnXY(grishkoSquad[3], 209, 106);

ComMoveXY(grishkoSquad[4], 227, 117);
AddComHold(grishkoSquad[4]);

repeat
 wait(0$20);

 for i := 3 downto 2 do
     begin
     AddComAgressiveMove(grishkoSquad[i], 200, 91);
     AddComWait(grishkoSquad[i], 0$6);
     AddComAgressiveMove(grishkoSquad[i], 224, 93);
     AddComWait(grishkoSquad[i], 0$6);
     AddComAgressiveMove(grishkoSquad[i], 239, 123);
     AddComWait(grishkoSquad[i], 0$6);
     AddComAgressiveMove(grishkoSquad[i], 212, 105);
     AddComWait(grishkoSquad[i], 0$20);
     wait(0$30);
     end;

until not activeGrishkoAI;

ComMoveXY(grishkoSquad, 221, 110);
AddComMoveXY(grishkoSquad, 228, 115);
AddComHold(grishkoSquad);
End;

Every 0$1 trigger allowToPatrol do
var un, i, j, patrol;
begin
uc_side := 6;
uc_nation := 3;

ResetHc;

for i := 1 to 3 do
    begin
    PrepareHuman(false, 1, [2, 3, 4][Difficulty]);
    un := CreateHuman;
    russianPatrol := russianPatrol union un;
    SetTag(un, 1);
    PlaceUnitArea(un, southRoadSpawn, false);
    ComMoveXY(un, 210, 159);
    wait(0$2);
    end;

patrol := [
  [ [172,76], [150,38], [148,9], [165,38] ],
  [ [191,77], [168,42], [166,11], [151,12] ],
  [ [221,88], [217,64], [208,42] ]
];

repeat
 wait(0$5);

 for i := 1 to patrol do
     begin
     if GetLives(russianPatrol[i]) < 990 and GetTag(russianPatrol[i]) = 1 then
        begin
        spottedByPatrol := true;
        SetTag(russianPatrol[i], 2);
        end;

     if GetTag(russianPatrol[i]) = 2 then
        begin
        ComMoveXY(russianPatrol[i], 166, 101);

        if GetDistUnits(russianPatrol[i], kirov) < 10 then
           begin
           kirovBaseSquad := kirovBaseSquad union russianPatrol[i];
           russianPatrol := Delete(russianPatrol, i);
           end;

        continue;
        end;

     if not HasTask(russianPatrol[i]) then
        for j in patrol[i] do
            begin
            AddComWait(russianPatrol[i], rand(0$1, 0$5));
            AddComAgressiveMove(russianPatrol[i], j[1], j[2]);
            end;
     end;

until not russianPatrol or russianAlert;

if russianPatrol then
   ComAgressiveMove(russianPatrol, 161, 107);
End;

Every 0$1 trigger startAttackOnOmicron and not retreatFromOmicron do
var i, filter, tmp, enemy, x;
begin
enable;

filter := UnitFilter(russianOmicronAttackers, [f_type, unit_vehicle]);
enemy := FilterAllUnits([f_side, 1]);

for i in filter do
    begin
    tmp := IsDrivenBy(i);

    if not tmp then
       continue;

    if GetFuel(i) > 90 and GetTag(i) = 2 then
       SetTag(i, 0)
    else if GetTag(i) = 2 then
       begin
       x := rand(1, 2);
       AddComMoveUnit(i, russianCargo[x]);

       if GetCargo(russianCargo[x], mat_oil) < 20 then
          SetCargo(russianCargo[x], mat_oil, 100);
       end;

    if GetLives(i) >= 600 and not GetTag(i) then
       ComAttackUnit(i, NearestUnitToUnit(enemy, i));

    if GetLives(i) < 600 and not GetTag(i) then
       begin
       SetTag(i, 1);
       ComMoveXY(i, 61, 28);
       AddComMoveXY(i, 71, 29);
       end;

    if GetTag(i) = 1 and GetDistUnitXY(i, 71, 29) < 6 and tmp then
       begin
       ComExitVehicle(tmp);
       AddComRepairVehicle(tmp, i);

       repeat
        wait(0$1);
       until GetLives(i) = 1000;

       ComEnterUnit(tmp, i);

       if GetFuel(i) <= 90 and russianCargo then
          SetTag(i, 2)
        else
          SetTag(i, 0);
       end;
    end;
End;

Every 0$30 trigger startAttackOnOmicron and not retreatFromOmicron and russianOmicronAttackers < [12, 14, 16][Difficulty] do
begin
enable;
ProduceNew(0);
End;

Export Function ProduceNew(type);
var un;
begin
uc_side := 3;
uc_nation := 3;

ResetHc;

PrepareHuman(false, 3, [3, 4, 5][Difficulty]);
un := CreateHuman;
PlaceHumanInUnit(un, ruBeriaFac);

if type = 1 then
   AddComConstruct(ruBeriaFac, ru_medium_wheeled, engine_combustion, control_manual, ru_cargo_bay)
else
   AddComConstruct(ruBeriaFac, [ru_medium_wheeled, ru_medium_tracked, ru_heavy_wheeled, ru_heavy_tracked][rand(1, Difficulty + 1)], engine_combustion, control_manual, [ru_gun, ru_gun, ru_gatling_gun, ru_heavy_machine_gun][rand(1,4)]);
End;

Every 0$2 trigger retreatFromOmicron do
var i, tmp;
begin
ComMoveXY(russianCargo, 79, 155);
AddComMoveToArea(russianCargo, westEscapeArea);

tmp := UnitFilter(russianOmicronAttackers, [f_ok]);

for i in tmp do
    begin
    ComAgressiveMove(i, 123, 60);
    AddComAgressiveMove(i, 153, 103);
    end;

repeat
 wait(0$1);
 tmp := UnitFilter(russianOmicronAttackers, [f_ok]);

 for i in tmp do
     if not HasTask(i) then
        ComAttackUnit(i, NearestUnitToUnit(FilterAllUnits([f_enemy, 3]), i))

until not tmp;
End;

Every 0$1 trigger FilterAllUnits([[f_side, 3], [f_engine, engine_combustion]]) do
var i;
begin
enable;

for i in FilterAllUnits([[f_side, 3], [f_engine, engine_combustion]]) do
    if GetFuel(i) < 1 then
       ComExitVehicle(IsDrivenBy(i));
End;

Every 0$2 trigger FilterUnitsInArea(eastKirovArea, [f_enemy, 6]) do
russianAlert := true;

Every 0$1 trigger IsOk(Beria) and GetSide(Beria) = 3 and GetResourceType(GetBase(Beria), mat_cans) < 100 do
begin
enable;
AddResourceType(GetBase(beria), mat_cans, 200);
End;

// transport
Every 0$1 do
var i, un, tmp;
begin
uc_side := 3;
uc_nation := 3;

tmp := [];

for i := 1 to 2 do
    begin
    PrepareHuman(false, 2, 2);
    un := CreateHuman;

    tmp := Replace(tmp, tmp + 1, un);

    PlaceUnitXYR(un, 74, 112, 3, false);
    end;

AddResourceType(GetBase(kagan), mat_oil, 100);

repeat
 wait(0$1);

 for i in tmp do
     begin
     if IsDead(i) then
        tmp := tmp diff i;

     if not HasTask(i) and not Carry(i) then
        begin
        ComTransport(i, kagan, mat_oil);
        AddComGive(i, beria);
        end;
     end;
until not tmp or IsDead(kagan) or IsDead(beria);
End;

Every 0$01 do
var i, j, skr, cargo, dep;
begin
enable;

cargo := FilterAllUnits([[f_side, 3], [f_weapon, ru_cargo_bay], [f_lives, 600]]);
dep := FilterAllUnits([[f_side, 3], [f_or, [f_btype, b_depot], [f_btype, b_warehouse]]]);

skr = GetListOfCratesInArea(ruCratesCollectArea);

if not cargo or not skr or not dep then
   exit;

for i in cargo do
    begin
    if not skr then
       exit;

    if not HasTask(i) then
       begin
       ComCollect(i, skr[1], skr[2]);

       for j := 1 to 2 do
           skr := Delete(skr, 1);
       end
    else
       if GetFuel(i) < 3 and GetDistUnits(i, NearestUnitToUnit(dep, i)) < 6 then
          SetFuel(i, 100);
    end;
End;

Export Function SendSupport;
var i, un;
begin
uc_nation := 3;
uc_side := 3;

ResetHc;

for i := 1 to [3, 3, 4][Difficulty] do
    begin
    PrepareHuman(false, 1, Difficulty);
    un := CreateHuman;
    PlaceUnitXYR(un, 107, 95, 4, false);

    ComAgressiveMove(un, 56, 27);
    AddComHold(un);
    end;

PrepareHuman(false, 4, Difficulty);
un := CreateHuman;
PlaceUnitXYR(un, 107, 95, 4, false);

ComMoveXY(un, 59, 25);

if Difficulty > 1 then
   begin
   for i := 1 to [2, 2, 3][Difficulty] do
       begin
       PrepareHuman(false, 1, Difficulty);
       un := CreateHuman;
       PlaceUnitXYR(un, 107, 95, 4, false);

       ComAgressiveMove(un, 45, 76);
       AddComHold(un);
       end;
   end;
End;