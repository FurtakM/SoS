On VehicleConstructed(un, fac) do
begin
if GetSide(un) = 3 and un in FilterAllUnits([[f_or, [f_weapon, ru_heavy_gun], [f_weapon, ru_rocket], [f_weapon, ru_rocket_launcher]]]) then
   ru_reserve := ru_reserve ^ un;

if un in FilterAllUnits([[f_side, 3], [f_weapon, ru_siberium_rocket]]) then
   if FilterUnitsInArea(alt_base, [f_side, 1]) then
      ComAttackPlace(un, 98, 10)
       else
        ComAttackPlace(un, 134, 99);
End;

On UnitDestroyed(un) do
begin
SOS_UnitDestroyed(un);

     if un in FilterAllUnits([[f_side, 3], [f_type, unit_building]]) and
        not GetBType(un) in [b_depot, b_oil_mine, b_siberite_mine, b_oil_power] then
        begin
        ru_blist := ru_blist ^ GetBType(un);
        ru_blist := ru_blist ^ GetX(un);
        ru_blist := ru_blist ^ GetY(un);
        ru_blist := ru_blist ^ GetDir(un);
        end;

     if un in ru_attack_list then
        ru_attack_list := ru_attack_list diff un;

     if un in ru_protector then
        ru_protector := ru_protector diff un;

     if GetBType(un) = b_siberite_mine and GetSide(un) = 1 then
        mine_ck := true;
End;

On BuildingComplete(un) do
var i;
begin

     if GetSide(un) = 1 and GetBType(un) = b_siberite_mine then
        mine_constructed := true;

     if GetSide(un) = 3 and GetBType(un) = b_depot then
        begin
        for i = 1 to 2 do
            begin
            ComExitBuilding(ru_sold[i]);
            AddComEnterUnit(ru_sold[i], un);
            end;
        end;

     if GetSide(un) = 3 and GetBType(un) in ru_blist then
        for i = 1 to 4 do
            ru_blist := Delete(ru_blist, 1);
End;

On UnitDestroyed_Extra(un, killerSide, killerUnit) do
begin
SOS_UnitExtraDestroyed(un, killerSide, killerUnit);
End;

On Command(cmd) do
begin
SOS_Command(cmd);
End;