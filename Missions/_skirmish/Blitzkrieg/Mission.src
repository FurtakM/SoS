Export Function StartGame;
var i;
begin
InGameOn;
ChangeSideFog(2, 5);
CenterNowOnXY(152, 13);

Case Query('textdiff') of
1: global_diff := 1;
2: global_diff := 2;
3: global_diff := 3;
end;


Case Query('redplan') of
1: ; end;

RusSpecForce;

game_started := true;
crates_allow := true;

PrepareHeike;
PlaceUnitXY(heike, 152, 13, false);
PlaceUnitXY(kurt, 143, 13, false);
PlaceUnitXY(olaf, 149, 10, false);

ComTurnUnit(olaf, heike);
ComTurnUnit(kurt, heike);
ComTurnUnit(heike, kurt);

Say(heike, 'DBlitz-H1');
Say(kurt, 'DBlitz-K1');
Say(olaf, 'DBlitz-O1');
Say(heike, 'DBlitz-H2');

InGameOff;

PlaceSeeing(38, 16, 2, 10);
PlaceSeeing(54, 60, 2, 10);
PlaceSeeing(117, 113, 2, 10);
PlaceSeeing(104, 55, 2, 10);

ChangeMissionObjectives('redplan1');

PrepareArabian;

for i = 1 to ar_force do
    begin
    Wait(Rand(0$03, 0$05));

    PlaceUnitXY(ar_force[i], 132, 2, false);
    
    if ar_force[i] in FilterAllUnits([f_type, unit_vehicle]) then
       begin
       PlaceHumanInUnit(ar_vehs[1], ar_force[i]);
       ar_vehs := Delete(ar_vehs, 1);
       end;

    ComMoveXY(ar_force[i], 141, 16);
    end;


Say(Heike, 'DBlitz-Heike-1');

attack_omicron := true;
End;

Every 0$01 trigger st_omar do
PrepareOmarForce;

Every 0$01 trigger IsDead(kurin) do
begin
rus_escape := true;
End;

Every 0$01 trigger rus_escape and FilterAllUnits([[f_side, 3], [f_type, unit_human]]) do
var i;
begin
enable;

for i in FilterAllUnits([[f_side, 3], [f_or, [f_class, 2], [f_class, 4]]])  do
    begin
    if IsInUnit(i) then
       ComExitBuilding(i);

    ComMoveToArea(i, west);
    end;
End;

Every 0$01 trigger IsDead(kirov) and IsDead(beria) and IsDead(kagan) do
begin
ChangeMissionObjectives('redplan2');
SetAreaMapShow(west, 1);
heike_go := true;
End;

Every 0$01 trigger IsInArea(heike, west) and heike_go do
begin
Save;
ChangeMap(1, '__am/Blitzkrieg2');
End;

Every 0$01 trigger FilterUnitsInArea(west, [f_or, [f_side, 3], [f_side, 6]]) do
var i;
begin
enable;

for i in FilterUnitsInArea(west, [f_or, [f_side, 3], [f_side, 6]]) do
    begin
    RemoveUnit(i);
    points := points - 50;
    end;

End;
