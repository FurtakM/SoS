On VehicleConstructed(veh, fac) do
var side;
begin
SOS_VehicleConstructed(veh, fac);

side := GetSide(fac);

     Case side of
     7: begin
        al_force := Replace(al_force, al_force + 1, veh);
        AddComMoveXY(veh, 112, 175);
        end;
     8: begin
        if GetWeapon(veh) = ar_control_tower then
           ComMoveXY(veh, 145, 66);
        if GetChassis(veh) = ar_hovercraft then
           legion_force := Replace(legion_force, legion_force + 1, veh);
        end;

     End;

End;

On UnitDestroyed(un) do
begin
SOS_UnitDestroyed(un);

if un in legion_force then
   legion_force := legion_force diff un;

if un in al_force then
   al_force := al_force diff un;
End;

On UnitTeleported(b, un) do
begin
if b = legion_telep and GetClass(un) = 17 then
   begin
   Wait(0$01);
   ComAttackUnit(un, NearestUnitToUnit(FilterAllUnits([f_side, 6]), un));
   end;
End;

On CrateSpawn(id, x, y, amount, mode) do
var i, apes, n;
begin
if InArea(x, y, cratesArea) and FilterUnitsInArea(islandArea, [f_enemy, 6]) = 0 then
   begin
   apes := FilterAllUnits([[f_side, 6], [f_class, 16]]);

   if apes = 0 or FilterAllUnits([[f_side, 6], [f_or, [f_btype, b_depot], [f_btype, b_warehouse]]]) = 0 then
      exit;

   if UnitFilter(apes, [f_inside]) then
      begin
      ComExitBuilding(UnitFilter(apes, [f_inside]));
      wait(3);
      end;

   AddComCollect(apes, x, y);
   end;
End;

On UnitGoesToRed(un) do
begin
if un in al_force then
   al_force := al_force diff un;

if GetControl(un) = control_remote then
   ComUnlink(un);

if un in FilterAllUnits([[f_side, 8], [f_type, unit_vehicle]]) then
   begin
   wait(0$2);
   ComAutodestruct(un);
   end;
End;

On ResearchStarted(tech, lab) do
begin
if tech = tech_sibfiss then
   player_start_res_sib_bomb := true;
if tech = tech_artifact then
   player_start_res_artifact := true;
End;

On ArtifactUnloaded(cargo, artifact_num) do
begin
if artifact_num = 6 then
   player_artifact_loaded := false;
End;

On ArtifactLoaded(cargo, artifact_num) do
begin
if artifact_num = 6 then
   player_artifact_loaded := true;
End;

On SiberiteRocketExploded(rocket, x, y) do
var i;
begin
player_used_sib_bomb := true;

for i = 1 to 3 do
    begin
    if GetDistXY(x, y, artifacts_pos[i][1], artifacts_pos[i][2]) <= sib_rocket_range then
       begin
       wait(0$5);
       artifact_destroyed := true;
       break;
       end;
    end;
End;

On UnitDestroyed_Extra(un, killerSide, killerUnit) do
begin
SOS_UnitExtraDestroyed(un, killerSide, killerUnit);
End;

On Command(cmd) do
begin
SOS_Command(cmd);
End;
