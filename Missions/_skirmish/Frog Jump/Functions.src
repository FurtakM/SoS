Export Function CreateArtifact(type, x, y);
begin
CreateResourcesXY(mat_artifact, type, x, y, false);
End;


Export Function GetSibResources(side);
var i, deps;
begin
result := 0;
deps := FilterAllUnits([[f_side, side], [f_or, [f_btype, b_depot], [f_btype, b_warehouse]]]);

if deps then
   for i in deps do
       result := result + GetResourceType(GetBase(i), mat_siberit);
End;

Export Function SetSibResources(side, val);
var i, deps, s;
begin
if val <= 0 then
   exit;

deps := FilterAllUnits([[f_side, side], [f_or, [f_btype, b_depot], [f_btype, b_warehouse]]]);

if deps then
   for i in deps do
       begin
       s := GetResourceType(GetBase(i), mat_siberit);

       if val < s then
          begin
          s := s - val;
          SetResourceType(GetBase(i), mat_siberit, s);
          exit;
          end
           else
            begin
            val := val - s;
            SetResourceType(GetBase(i), mat_siberit, 0);
            end;
       end;
End;

// Destination Reachable Function by Serpent
Export unreachableList;
On DestinationUnreachable(unit) Do
begin
if not unit in unreachableList then
   unreachableList := Replace(unreachableList, unreachableList + 1, unit);
end;

Export Function DestinationReachable(unit, x, y);
begin
if ValidHex(x, y) then
   ComAttackUnit(unit, HexInfo(x, y));

wait(0$1);

if unit in unreachableList then
   result := false
else
   result := true;

if not result then
   unreachableList := unreachableList diff unit;
End;


