Export Function dialog_Start;
Begin
  SayRadio (Platonov, 'DStart-Pla-1');
End;


Export Function dialog_StartVS;
Begin
  SayRadio (Platonov, 'DStartVS-Pla-1');
End;


Export Function dialog_StartNV;
Begin
  SayRadio (Platonov, 'DStartNV-Pla-1');
End;


Export Function dialog_Start2;
Begin
  SayRadio (Platonov, 'DStart2-Pla-1');
  Say (Burlak, 'DStart2-Bur-1');
End;


Export Function dialog_MeetVsevolodVS;
Begin
  Say (Burlak, 'DMeetVsevolodVS-Bur-1');
  Say (Vsevolod, 'DMeetVsevolodVS-Vse-1');
  Say (Burlak, 'DMeetVsevolodVS-Bur-2');
  Say (Vsevolod, 'DMeetVsevolodVS-Vse-2');
End;


Export Function dialog_StasisVS;
Begin
  If Titov and IsOK (Titov) then Say (Titov, 'DStasisVS-Tit-1')
  else Say (Yelena, 'DStasisVS-Kir-1');
  Say (Burlak, 'DStasisVS-Bur-1');
  If Titov and IsOK (Titov) then Say (Titov, 'DStasisVS-Tit-2')
  else Say (Yelena, 'DStasisVS-Kir-2');
  Say (Burlak, 'DStasisVS-Bur-2');
  wait (0$3);
  SayRadio (Popov, 'DStasisVS-Pop-2');
  If Gleb and IsOK (Gleb) then Say (Gleb, 'DStasisVS-Glb-2');
End;


Export Function dialog_SeviSaved;
Begin
  Say (Burlak, 'DSeviSaved-Bur-1');
  Say (Vsevolod, 'DSeviSaved-Vse-1');
  Say (Burlak, 'DSeviSaved-Bur-2');
  Say (Vsevolod, 'DSeviSaved-Vse-2');
End;


Export Function dialog_MeetXavier;
Begin
  Say (Xavier, 'DMeetXavier-Xav-1');
  Say (Yelena, 'DMeetXavier-Kir-1');
  Say (Xavier, 'DMeetXavier-Xav-2');
End;


Export Function query_Xavier;
Begin
  Result = Query ('QXavier');
End;


Export Function dialog_QrXavier1;
Begin
  Say (Burlak, 'DQrXavier#1-Bur-1');
  Say (Yelena, 'DQrXavier#1-Kir-1');
  Say (Xavier, 'DQrXavier#1-Xav-1');
  Say (Yelena, 'DQrXavier#1-Kir-2');
  Say (Xavier, 'DQrXavier#1-Xav-2');
  Say (Yelena, 'DQrXavier#1-Kir-3');
  Say (Xavier, 'DQrXavier#1-Xav-3');
  Say (Yelena, 'DQrXavier#1-Kir-4');
  If Gleb and IsOK (Gleb) then Say (Gleb, 'DQrXavier#1-Glb-4');
End;


Export Function dialog_QrXavier2;
Begin
  Say (Burlak, 'DQrXavier#2-Bur-1');
  Say (Yelena, 'DQrXavier#2-Kir-1');
  Say (Xavier, 'DQrXavier#2-Xav-1');
  Say (Yelena, 'DQrXavier#2-Kir-2');
  Say (Xavier, 'DQrXavier#2-Xav-2');
  Say (Yelena, 'DQrXavier#2-Kir-3');
  Say (Xavier, 'DQrXavier#2-Xav-3');
  Say (Yelena, 'DQrXavier#2-Kir-4');
  Say (Xavier, 'DQrXavier#2-Xav-4');
  Say (Yelena, 'DQrXavier#2-Kir-5');
  If Gleb and IsOK (Gleb) then Say (Gleb, 'DQrXavier#2-Glb-5');
End;


Export Function dialog_PointXavier;
Begin
  If IsOk (Yelena) then
  Begin
    Say (Xavier, 'DPointXavier-Xav-1');
    Say (Yelena, 'DPointXavier-Kir-1');
  End;
  Say (Xavier, 'DPointXavier-Xav-2');
End;


Export Function query_QActivateXavier;
Begin
  Result = Query ('QActivateXavier');
End;


Export Function dialog_QrActivateXavier1;
Begin
  Say (Burlak, 'DQrActivateXavier#1-Bur-1');
End;


Export Function dialog_QrActivateXavier2;
Begin
  Say (Burlak, 'DQrActivateXavier#2-Bur-1');
End;


Export Function dialog_YashinArrives;
Begin
  Say (Yashin, 'DYashinArrives-Yas-1');
  If VsevSaved and IsOk (Vsevolod) then Say (Vsevolod, 'DYashinArrives-Vse-1')
  else Say (Burlak, 'DYashinArrives-Bur-1');
  Say (Yashin, 'DYashinArrives-Yas-2');
  If VsevSaved and IsOk (Vsevolod) then
  Begin
    Say (Vsevolod, 'DYashinArrives-Vse-2');
    Say (Yashin, 'DYashinArrives-Yas-3');
    Say (Vsevolod, 'DYashinArrives-Vse-3');
  End else Begin
    Say (Burlak, 'DYashinArrives-Bur-3');
    Say (Yashin, 'DYashinArrives-Yas-4');
    Say (Burlak, 'DYashinArrives-Bur-4');
    Say (Yashin, 'DYashinArrives-Yas-5');
  End;
  Say (Burlak, 'DYashinArrives-Bur-5');
  Say (Yashin, 'DYashinArrives-Yas-6');
  Say (Burlak, 'DYashinArrives-Bur-6');
  Say (Yashin, 'DYashinArrives-Yas-7');
End;


Export Function query_YashinHelp;
Begin
  Result = Query ('QYashinHelp');
End;


Export Function query_YashinHelpNB;
Begin
  Result = SelectiveQuery ('QYashinHelp', [2, 3]);
End;


Export Function dialog_QrYashinHelp1;
Begin
  Say (Burlak, 'DQrYashinHelp#1-Bur-1');
  Say (Yashin, 'DQrYashinHelp#1-Yas-1');
  Say (Burlak, 'DQrYashinHelp#1-Bur-2');
  Say (Yashin, 'DQrYashinHelp#1-Yas-2');
End;


Export Function dialog_QrYashinHelp2;
Begin
  Say (Burlak, 'DQrYashinHelp#2-Bur-1');
  Say (Yashin, 'DQrYashinHelp#2-Yas-1');
End;


Export Function dialog_QrYashinHelp3;
Begin
  Say (Burlak, 'DQrYashinHelp#3-Bur-1');
  Say (Yashin, 'DQrYashinHelp#3-Yas-1');
End;


Var BylHint;

Export Function dialog_YashinLeave;
Begin
  Say (Yashin, 'DYashinLeave-Yas-1');
  Say (Burlak, 'DYashinLeave-Bur-1');
  If not BylHint then
  Begin
    Hint ('YashinVeh');
    BylHint = true;
  End;
End;


Export Function dialog_YashinAttack;
Begin
  Say (Burlak, 'DYashinAttack-Bur-1');
End;


Export Function dialog_HeikeObj;
Begin
  SayRadio (Popov, 'DHeikeObj-Pop-1');
  Say (Burlak, 'DHeikeObj-Bur-1');
  SayRadio (Popov, 'DHeikeObj-Pop-2');
  Say (Burlak, 'DHeikeObj-Bur-2');
End;


Export Function dialog_HeikeCapt;
Begin
  Say (Heike, 'DHeikeCapt-Hke-1');
  Say (Burlak, 'DHeikeCapt-Bur-1');
  Say (Heike, 'DHeikeCapt-Hke-2');
End;


