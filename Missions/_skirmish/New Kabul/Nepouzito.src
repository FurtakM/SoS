// Vrátí, zda je tøeba zbraò upgradovat.
Function je_treba_upgrade (Zbran);
Var P;
Begin
  // Zjistit pravdìpodobnost upgradu.
  Case Zbran of
  0: P = 100;
  AR_LIGHT_GUN: P = 80;
  AR_GATLING_GUN: P = 50;
  AR_GUN: P = 20;
  else P = 0; End;
  // Zjistit, zda je to fakt tøeba udìlat.
  Result = Prob (P);
End;


// Tato funkce zjistí, na co se má upgradovat daná zbraò.
Function nova_zbran (Stara);
Var Moznosti, Zkoumane, Zbran;
Begin
  // Zjistit možnosti upgradu.
  Case Stara of
  0: Moznosti = [AR_MULTIMISSILE_BALLISTA, AR_DOUBLE_MACHINE_GUN, AR_GATLING_GUN, AR_FLAME_THROWER, AR_GUN, AR_ROCKET_LAUNCHER];
  AR_LIGHT_GUN: Moznosti = [AR_MULTIMISSILE_BALLISTA, AR_DOUBLE_MACHINE_GUN, AR_GUN, AR_ROCKET_LAUNCHER];
  AR_GATLING_GUN: Moznosti = [AR_DOUBLE_MACHINE_GUN, AR_GUN, AR_ROCKET_LAUNCHER];
  AR_GUN: Moznosti = Moznosti = [AR_DOUBLE_MACHINE_GUN, AR_ROCKET_LAUNCHER];
  else Begin Result = Stara; Exit; End; End;
  // Podle toho, kolik minut už uplynulo, vyhodím nìkteré zbranì.
  If Minuty < 13 then Moznosti = Moznosti diff [AR_ROCKET_LAUNCHER];
  If Minuty < 8 then Moznosti = Moznosti diff [AR_DOUBLE_MACHINE_GUN, AR_GUN];
  // Zjistit, co je vynalezeno.
  Zkoumane = [];
  For Zbran in Moznosti do
    If je_vyzkoumana (Zbran) then Zkoumane = Zkoumane union [Zbran];
  // Náhodnì vybrat.
  If Zkoumane then Result = nahoda_seznam (Zkoumane)
  else Result = Stara;
End;


// Vrátí, zda je vyzkoumaná technologie zbranì.
Function je_vyzkoumana (Zbran);
Var Tech;
Begin
  Case Zbran of
  AR_GATLING_GUN: Tech = TECH_GATLING;
  AR_GUN: Tech = TECH_GUN;
  AR_FLAME_THROWER: Tech = TECH_FLAME;
  AR_ROCKET_LAUNCHER: Tech = TECH_ROCKET;
  else Begin Result = true; Exit; End; End;
  Result = (GetTech (Tech, side_Ar) = STATE_RESEARCHED);
End;


// Test jednoho bunkru na upgrade zbranì.
Function testuj_bunkr (Bunkr);
Var Stara, Nova, Base;
Begin
  // Zjistím aktuální zbraò.
  Stara = GetBWeapon (Bunkr);
  // Zjistím novou.
  If not je_treba_upgrade (Stara) then Exit;
  Nova = nova_zbran (Stara);
  If Nova and (Nova <> Stara) then
  Begin
    // Pokud není zbraò vyzkoumaná, tak vezmu aspoò tu nejlehèí.
    If (Stara = 0) and not je_vyzkoumana (Nova) then
      Nova = AR_LIGHT_GUN;
    // Postavím ji.
    Base = GetBase (Bunkr);
    If GetResourceType (Base, MAT_CANS) < 50 then Exit;
    ComPlaceWeapon (Bunkr, Nova);
  End;
End;


// Testování upgradu zbraní na jednotlivých bunkrech.
Function testuj_bunkry;
Var Bunkry, Budova;
Begin
  Bunkry = FilterAllUnits ([[F_SIDE, side_Ar], [F_TYPE, UNIT_BUILDING], [F_BTYPE, B_BUNKER]]);
  For Budova in Bunkry do testuj_bunkr (Budova);
End;


// Zjistí, zda je Heike obklíèena.
Function zjisti_heike_obklicena;
Var Lidi, Auta, Pocet, I;
Begin
  Lidi = FilterAllUnits ([[F_SIDE, side_Ru], [F_PLACED], [F_OK], [F_TYPE, UNIT_HUMAN]]);
  Auta = FilterAllUnits ([[F_SIDE, side_Ru], [F_PLACED], [F_OK], [F_TYPE, UNIT_VEHICLE]]);
  Pocet = 0;
  For I in (Lidi union Auta) do
    If GetDistUnits (Heike, I) <= Obkliceni_Dalka then Pocet = Pocet + 1;
  Result = (Pocet >= Obkliceni_Pocet);
End;


