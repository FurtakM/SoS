// Zdrojáky pro Rusáky.


// Seznam pøedem vytvoøených budov.
Export RuDepot, RuLab, RuOil;
// Už vidìl Arabáky?
Var VidelAraby;
// Už jsem zaèal timer pro pøíchod Yashina?
Var YashinZacal;
// Kdo šlápl na minu.
Var KdoSlaplNaMinu;


Export Function init_rusove;
Begin
  // Triggery.
  Disable (1); Disable (2); Disable (3); Disable (4);
  Disable (5);
  // Promìnné.
  RuDepot = 0; RuLab = 0; RuOil = 0;
  VidelAraby = false; YashinZacal = false;
End;


Export Function uvod;
Begin
  // Úvodní dialog.
  SetResourceVisibility (47, 75, side_Ru);
  if VsevSaved then uvod_vsevolod
  else uvod_sam;
  Hint ('NonCombat');
End;


// Pøipraví Vsevolodovu základnu.
Function priprav_zakladnu;
Var Base;
Begin
  // Spoleèné vlastnosti.
  UC_Nation = NATION_RUSSIAN; UC_side = side_Ru;
  BC_Level = 4;
  // Jednotlivé budovy.
  BC_Type = B_DEPOT; RuDepot = CreateAndPlaceBuildingXYD (35, 58, 1);
  BC_Type = B_OIL_POWER; RuOil = CreateAndPlaceBuildingXYD (31, 45, 1);
  BC_Type = B_LAB_HALF; BC_Kind1 = B_LAB_SPACETIME; BC_Kind2 = B_LAB_BASIC;
  RuLab = CreateAndPlaceBuildingXYD (37, 52, 2);
  // Suroviny.
  Base = GetBase (RuDepot);
  SetResourceType (Base, MAT_CANS, dif_Cans [Difficulty]);
  SetResourceType (Base, MAT_OIL, dif_Oil [Difficulty]);
  SetResourceType (Base, MAT_SIBERIT, dif_Siberit [Difficulty]);
End;


Export Function vytvor_rusaka;
Begin
  UC_Nation = NATION_RUSSIAN; UC_side = side_Ru;
  HC_name = '';
  HC_sex = Rand (SEX_MALE, SEX_FEMALE);
  HC_class = CLASS_SOLDIER;
  PrepareSoldierSkills (4);
  Result = CreateHuman;
End;


Function uvod_vsevolod;
Var I, Counter, X, Y, Seznam, Ridici;
Begin
  priprav_zakladnu;
  // Nemám vìdce.
  If GetClass (Yelena) = CLASS_SCIENTISTIC then SetClass (Yelena, CLASS_ENGINEER);
  If GetClass (Burlak) = CLASS_SCIENTISTIC then SetClass (Burlak, CLASS_ENGINEER);
  Seznam = UnitFilter (Rusaci union WithVsevolod, [[F_CLASS, CLASS_SCIENTISTIC]]);
  For I in Seznam do SetClass (I, CLASS_SOLDIER);
  // Vìda.
  SetTech (TECH_TAUFIELD, side_Ru, STATE_RESEARCHED);
  SetTech (TECH_TAUFIELD, side_Ru2, STATE_RESEARCHED);
  // Postavy na mapu.
  PlaceUnitArea (Vsevolod, Start1Vsevolod, false);
  X = GetX (Vsevolod); Y = GetY (Vsevolod);
  PlaceUnitXYR (Burlak, X, Y, 6, false);
  // Konvoj na mapu.
  Seznam = UnitFilter (Konvoj, [[F_CONTROL, CONTROL_MANUAL]]);
  Ridici = zjisti_ridice (Rusaci, Seznam);
  For I = 1 to Seznam do
    If Ridici >= I then
      PlaceHumanInUnit (Ridici [I], Seznam [I]);
  place_list (Konvoj, Start1);
  // Ostatní na mapu.
  place_list (Rusaci diff Ridici, Start1);
  place_list (Yelena, Start1Vsevolod);
  place_list (WithVsevolod, Start1Vsevolod);
  // Animace.
  InGameOn;
  CenterNowOnUnits (Burlak);
  // První kecání.
  AddComHold ([Burlak]);
  CenterOnUnits ([Burlak]);
  dialog_Start;
  dialog_StartVS;
  dialog_Start2;
  // Objektivy.
  ChangeMissionObjectives ('MStart');
  // Burlak jde k bráchovi.
  jdete_k_sobe (Burlak, Vsevolod);
  AddComHold ([Burlak, Vsevolod]);
  CenterOnUnits ([Burlak, Vsevolod]);
  RevealFogArea (side_Ru, RuDepotFog);
  dialog_MeetVsevolodVS;
  CenterOnUnits ([RuDepot, RuLab, RuOil]); Wait (0$2); CenterOnUnits (Burlak);
  // Pak jde Vsev[olod na sever.
  ComMoveToArea (Vsevolod, Mina);
  ComWait (WithVsevolod, 0$5);
  AddComMoveToArea (WithVsevolod, Mina);
  AddComMoveToArea (Vsevolod, RuDepotFog);
  AddComMoveToArea (WithVsevolod, RuDepotFog);
  Counter = 0;
  While not IsInArea (Vsevolod, Mina) do
  Begin
    Wait (0$0.5);
    Counter = Counter + 1;
    If Counter mod 10 = 0 then CenterOnUnits (Vsevolod);
  End;
  CenterOnUnits (Vsevolod);
  Wait (0$1);
  // Došel k minì, tak to necháme bouchnout.
  ComHold (Vsevolod);
  X = GetX (Vsevolod); Y = GetY (Vsevolod);
  MineExplosion (X, Y, false);
  // Znièíme lab a elektrárnu.
  SetLives ([RuLab, RuOil], 25);
  MineExplosion (GetX (RuLab), GetY (RuLab), true);
  MineExplosion (GetX (RuOil), GetY (RuOil), true);
  // Poèkat, aby byly exploze vidìt.
  Wait (0$0.5);
  // Nastavíme životy na 250 Vsevolodovi a všem, co jsou
  // blízko nìj.
  SetLives (Vsevolod, HRANICE_UMIRANI);
  KdoSlaplNaMinu = [Vsevolod];
  For I in FilterAllUnits ([[F_PLACED]]) do
  Begin
    If I = Vsevolod then Continue;
    If IsInUnit (I) then Continue;
    If GetDistUnits (Vsevolod, I) <= 3 then
    Begin
      SetLives (I, HRANICE_UMIRANI);
      KdoSlaplNaMinu = KdoSlaplNaMinu union [I];
    End;
  End;
  ComCancel (WithVsevolod); ComHold (WithVsevolod);
  // Poslední kecání.
  dialog_StasisVS;
  Wait (0$2);
  ChangeMissionObjectives ('MVsevolod');
  Enable (1); Enable (2);
  SetLives (KdoSlaplNaMinu, HRANICE_UMIRANI);
  SetSide (Vsevolod, side_Ru); SetSide (WithVsevolod, side_Ru);
  // Konec úvodní animace.
  ComFree ([Burlak, Vsevolod]);
  SaveForQuickRestart;
  InGameOff;
  // Enablovat pøidávání životù umírajícícím.
  Enable (5);                                 
End;


Every 0$5 Marked 5 do
Var Kolik, I;
Begin
  If Difficulty = 1 then Kolik = 20
  else If Difficulty = 2 then Kolik = 10
  else Exit;
  For I = 1 to Kolik do
  Begin
    SetLives (KdoSlaplNaMinu, HRANICE_UMIRANI);
    Wait (0$1);
  End;
End;


Function vytvor_nakladaky;
Var N1, N2;
Begin
  // Parametry.
  UC_side = side_Ru; UC_Nation = NATION_RUSSIAN;
  VC_Chassis = RU_MEDIUM_WHEELED; VC_Control = CONTROL_MANUAL;
  VC_Engine = ENGINE_COMBUSTION; VC_Weapon = RU_CARGO_BAY;
  VC_Fuel_Battery = Rand (75, 100);
  // Vytvoøit je.
  N1 = CreateVehicle;
  N2 = CreateVehicle;
  // Náklad.
  SetCargo (N1, MAT_CANS, 100);
  SetCargo (N2, MAT_SIBERIT, 100);
  // Výsledek.
  Result = [N1, N2];
End;


Function zjisti_ridice (Seznam, Pocet);
Var I, Ted;
Begin
  Result = [];
  While (Result < Pocet) and Seznam do
  Begin
    Ted = Seznam [1]; Seznam = Delete (Seznam, 1);
    If Ted then Result = Result union [Ted];
  End;
End;


Function uvod_sam;
Var I, Seznam, Ridici;
Begin
  SetSide (Rusaci, side_Ru); SetSide (Yelena, side_Ru);
  // Výbìr postav.
  While Rusaci <= 7 do Rusaci = Rusaci union [vytvor_rusaka];
  Rusaci = Rusaci union [Yelena];
  // Vìda.
  SetTech (TECH_SIBDET, side_Ru, STATE_RESEARCHED);
  // Musím mít inženýra.
  Seznam = UnitFilter (Rusaci union [Burlak], [[F_SIDE, side_Ru], [F_TYPE, UNIT_HUMAN], [F_CLASS, CLASS_ENGINEER]]);
  If not Seznam then SetClass (Burlak, CLASS_ENGINEER);
  // Vytvoøím náklaïáky
  Seznam = vytvor_nakladaky;
  Ridici = zjisti_ridice (Rusaci, 2);
  If Ridici >= 1 then PlaceHumanInUnit (Ridici [1], Seznam [1]);
  If Ridici >= 2 then PlaceHumanInUnit (Ridici [2], Seznam [2]);
  // Postavy na mapu.
  PlaceUnitArea (Burlak, Start1a, false);
  Place_list (Seznam, Start1a);
  place_list (Rusaci diff Ridici, Start1a);
  // Pøidat nìjaké bedny a další materiál.
  For I = 1 to Rand (2, 4) do CreateCratesArea (Rand (1, 5), BednyRusoveV, false);
  // Animace.
  InGameOn;
  CenterNowOnUnits (Burlak);
  // První kecání.
  AddComHold ([Burlak]);
  CenterOnUnits ([Burlak]);
  dialog_Start;
  dialog_StartNV;
  dialog_Start2;
  // Objektivy.
  ChangeMissionObjectives ('MStart');
  // Èekání na Xaviera.
  Enable (4);
  // Konec úvodní animace.
  AddComFree (Burlak);
  SaveForQuickRestart;
  InGameOff;
  // Øíct Arabùm, že mùžou zaèít s timerama pro útoky.
  arabi_muzete_utocit;
End;


// Nìkdo umøel.
Export Function rusove_UnitDestroyed (Un);
Begin
  // Burlak?
  If Un = Burlak then Begin YouLost ('Burlak'); Exit; End;
  // Vsevolod?
  If Un = Vsevolod then Begin YouLost ('Sevi'); Exit; End;
End;


// Zavolá Yashina, pokud tu ještì není.
Function mozny_prichod_yashina;
Begin
  If not YashinZacal then
  Begin
    YashinZacal = true;
    yashin_start_timer;
  End;
End;


// Budova postavena.
Export Function rusove_BuildingComplete (Un);
Begin
  If (GetSide (Un) = side_Ru) and (GetBType (Un) in [B_WORKSHOP, B_FACTORY]) then
  Begin
    mozny_prichod_yashina;
  End;
End;


// Pokud není postavena továrna do 25 minut, pøijde Yashini bez toho.
Every 25$0 do
Begin
  mozny_prichod_yashina;
End;


// Sevi je zpìt ve žluté.
Every 0$3+0$1.2 Marked 2 do
Begin
  If not IsOK (Vsevolod) then Enable
  else Begin
    // Kecání.
    DialogueOn;
    dialog_SeviSaved;
    SetSide (Vsevolod, side_Ru); SetSide (WithVsevolod, side_Ru);
    DialogueOff;
    // Pøijde Xavier.
    Enable (3);
    // Øíct Arabùm, že mùžou zaèít s timerama pro útoky.
    arabi_muzete_utocit;
  End;
End;


// Už jsem vidìl Araby?
Export Function rusove_Contact (Side1, Side2);
Begin
  If ((Side1 = side_Ru) and (Side2 = side_Ar)) or ((Side1 = side_Ar) and (Side2 = side_Ru)) then VidelAraby = true;
End;


// Kontakt bìhem pìti minut?
Every 5$0 do
Begin
  ContactIn5Min = VidelAraby;
End;


// Propásl rychlé znièení Arabù.
Every 30$0 do
Begin
  If Difficulty = 1 then wait (15$0)
  else If Difficulty = 2 then Wait (5$0);
  PropaslQuickly = true;
End;


// Èekání na pøíchod Xaviera - Vsevolod zachránìn.
Every 2$35 Marked 3 do
Begin
  Wait (Rand (0$1, 0$30));
  xavier_start;
End;


// Èekání na pøíchod Xaviera - Vsevolod tu není.
Every 4$45 Marked 4 do
Begin
  Wait (Rand (0$1, 1$0));
  xavier_start;
End;


