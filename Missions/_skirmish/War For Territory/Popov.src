Export Popov, popov_side, extraPopovForces, popovAttackGroup;
Export Function PreparePopov;
var i, un, tmp;
begin
popov_side := 3;

uc_side := popov_side;
uc_nation := 3;

tmp := PrepareBase(ru_depot, popov_base, '', [8, 7, 6][Difficulty], [11500, 1100, 60], [6, 6, 6, 6]);
mc_bases := Replace(mc_bases, 3, tmp);

extraPopovForces := [];

for i := 1 to [5, 6, 7][Difficulty] do
    begin
    PrepareHuman(false, 1, [4, 5, 6][Difficulty]);
    un := CreateHuman;
    PlaceUnitXYR(un, 131, 110, 8, false);
    ComHold(un);
    extraPopovForces := Replace(extraPopovForces, extraPopovForces + 1, un);
    end;

PrepareSoldier(false, 6);
un := CreateHuman;
SetDir(un, 1);
PlaceHumanInUnit(un, HexInfo(150, 158));

popovAttackGroup := [];
End;


Export Function InitMC_Popov();
begin
MC_SetScanArea(3, popov_base);
MC_SetParkingArea(3, popov_parking);

MC_SetDepositsXY(3, [
   [ 86,  118, 0],
   [ 123, 151, 1],
   [ 98,  121, 0]
]);

MC_SetAllowedTurretWeapons(3, [ru_heavy_gun, ru_rocket_launcher]);
MC_SetCratesArea(3, popov_crates);
MC_SetTame(3, popov_ape);
MC_SetDefenderLimit(3, 4);

MC_SetProduceList(3, [
   [ru_heavy_wheeled, engine_combustion, control_computer, ru_gun],
   [ru_heavy_wheeled, engine_combustion, control_computer, ru_rocket_launcher],
   [ru_medium_wheeled, engine_combustion, control_computer, ru_gun],
   [ru_medium_wheeled, engine_combustion, control_computer, ru_rocket_launcher]
]);

MC_SetBuildingList(3, [
   [b_lab, 76, 145, 1],
   [b_oil_power, 87, 144, 0],
   [b_oil_mine,  86, 118, 0],
   [b_oil_mine, 98, 121, 0],
   [b_oil_power, 87, 147, 1],
   [b_workshop, 94, 161, 0],
   [b_lab, 81, 155, 1],
   [b_armoury, 103, 147, 3],
   [b_oil_power, 96, 152, 0],
   [b_oil_power, 96, 149, 3],
   [b_bunker, 109, 142, 3],
   [b_bunker, 112, 148, 3],
   [b_turret, 120, 159, 4],
   [b_turret, 122, 163, 4],
   [b_turret, 123, 167, 4],
   [b_turret, 59, 111, 3],
   [b_turret, 65, 111, 3],
   [b_turret, 76, 117, 3],
   [b_turret, 80, 119, 3],
   [b_turret, 87, 125, 3],
   [b_armoury, 92, 129, 3],
   [b_siberite_power, 85, 165, 0],
   [b_siberite_power, 83, 161, 4],
   [b_siberite_power, 91, 166, 3],
   [b_siberite_power, 102,166, 2]
   // [b_teleport, 91, 147, 3]
]);

MC_SetLabKind(3, [b_lab_weapon, b_lab_computer, b_lab_spacetime, b_lab_siberium]);
MC_SetFactoryExtension(3, 94, 161, 0, [b_ext_noncombat, b_ext_gun, b_ext_rocket, b_ext_computer, b_ext_siberium]);
MC_SetUpgradeBuilding(3, b_depot);

MC_InsertProduceList(3, [[ru_medium_wheeled, engine_combustion, control_computer, ru_cargo_bay]]);
End;

Every 6$00 trigger extraPopovForces and not ruDestroyed do
begin
ComMoveXY(extraPopovForces, 106, 137);
mc_bases := Replace(mc_bases, 3, mc_bases[3] union extraPopovForces);
extraPopovForces := [];
End;

Every 8$00 + 2$00 trigger IsOk(ru_depot) and not ruDestroyed do
var i, base, tmp, attackers, amount;
begin
enable;

base := 3;
tmp := [
         [ru_medium_tracked, engine_combustion, control_computer, ru_gun],
         [ru_heavy_tracked, engine_combustion, control_computer, ru_heavy_gun],
         [ru_heavy_tracked, engine_combustion, control_computer, ru_heavy_gun],
         [ru_heavy_tracked, engine_combustion, control_computer, ru_heavy_gun]
       ];

amount := amount + tick div 10$00;

if amount > 8 then
   amount := 8;

for i = 1 to amount do
    tmp := Insert(tmp, tmp + 1, [ru_heavy_tracked, engine_combustion, control_computer, [ru_heavy_gun, ru_rocket_launcher][rand(1,2)]]);

MC_InsertProduceList(base, tmp);

repeat
 wait(0$1);
until MC_GetVehicles(base, true) >= amount;

wait(0$30);

attackers := mc_vehicles[base] diff UnitFilter(mc_vehicles[base], [f_or, [f_weapon, ru_cargo_bay], [f_weapon, ru_crane]]);

if not attackers then
   exit;

mc_vehicles := Replace(mc_vehicles, base, mc_vehicles[base] diff attackers);

ComAgressiveMove(attackers, 107, 74);

wait(0$5);

repeat
 wait(0$1);
until not UnitFilter(attackers, [f_hastask]);

if rand(0, 1) then
   ComAgressiveMove(attackers, 155, 108)
else
   ComAgressiveMove(attackers, 149, 55);

wait(0$10);

repeat
 wait(0$1);

 for i in attackers do
     if not HasTask(i) then
        ComAttackUnit(i, NearestUnitToUnit(FilterAllUnits([f_enemy, 3]), i));

until not UnitFilter(attackers, [f_ok]);
End;

Every 12$00 + 10$00 trigger not ruDestroyed do
var i, un, tmp, amount;
begin
enable;

if Difficulty = 1 and tick < 30$00 then
   exit;

tmp := [];

if tick < 45$00 then
   begin
   for i := 1 to [2, 3, 4][Difficulty] do
       begin
       uc_side := 3;
       uc_nation := 3;

       InitHC_All();

       PrepareHuman(false, 1, [5, 6, 7][Difficulty]);
       un := CreateHuman;
       PlaceUnitArea(un, popov_spawn, false);

       SetClass(un, class_bazooker);

       ComMoveXY(un, 147, 161);
       wait(0$2);
       
       tmp := Replace(tmp, tmp + 1, un);
       end;
   end;

amount := [3, 4, 5][Difficulty] + tick div 10$00;

if amount > 15 then
   amount := 15;

for i := 1 to amount do
    begin
    uc_side := 3;
    uc_nation := 3;

    PrepareVehicle(ru_heavy_tracked, engine_combustion, control_computer, [ru_heavy_gun, ru_rocket_launcher, ru_gun, ru_gatling_gun, ru_heavy_machine_gun][rand(1, 5)], 90);
    un := CreateVehicle;
    PlaceUnitArea(un, popov_spawn, false);

    ComMoveXY(un, 147, 161);
    wait(0$3);

    tmp := Replace(tmp, tmp + 1, un);
    end;

if not tmp then
   exit;

wait(0$5);

repeat
 wait(0$2);

 for i in tmp do
     begin
     if not IsOk(i) or IsDead(i) then
        tmp := tmp diff i;

     if GetClass(i) = class_bazooker then
        ComSpaceTimeShoot(i);

     ComAttackUnit(i, NearestUnitToUnit(FilterAllUnits([f_enemy, 3]), i));
     end;
until not tmp;

End;