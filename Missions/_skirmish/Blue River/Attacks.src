Every 0$01 do
begin
display_strings := ['#tick', tick];
enable;
End;


Export pom, hover, attackN;
Every 1 do
begin
pom := [];
hover := [];
attackN := 0;
End;

Every 0$01 trigger pom do
var i, f, z, target;
begin
enable;

f := FilterAllUnits([f_side, 7]);

for i = 1 to pom do
    if not HasTask(pom[i]) then
       ComAttackUnit(pom[i], NearestUnitToUnit(f, pom[i]));

if hover then
   begin
   for i = 1 to hover do
       begin
       if GetLives(hover[i]) < 250 then
          begin
          for z = 1 to 1+Difficulty do
              MineExplosion(GetX(hover[i]), GetY(hover[i]), 10);
          end;

       if UnitFilter(f, [[f_class, 2], [f_not, [f_inside]]]) > 0 then
          begin
          target := UnitFilter(f, [[f_class, 2], [f_not, [f_inside]]]);
          ComAttackUnit(hover[i], NearestUnitToUnit(target, hover[i]));
          end
           else
            begin
            target := UnitFilter(f, [[f_type, unit_human], [f_not, [f_inside]]]);
            ComAttackUnit(hover[i], NearestUnitToUnit(target, hover[i]));
            end;
       end;
   end;
End;


Every 3$10 do
var i, un;
begin
uc_side := 7;
uc_nation := 1;

for i = 1 to 2 do
    begin
    PrepareHuman(sex_male, class_sniper, [7, 6, 6][Difficulty]);

    vc_chassis := us_light_wheeled;
    vc_engine := engine_combustion;
    vc_control := control_manual;
    vc_fuel_battery := 66;
    vc_weapon := us_machine_gun;

    un := CreateVehicle;
    SetDir(un, 3);
    PlaceUnitXY(un, 48, 3, false);

    PlaceHumanInUnit(CreateHuman, un);

    ComMoveXY(un, 49, 17);
    AddComMoveXY(un, 48, 36);
    Wait(0$02);
    end;
End;

// 12 Attacks - 16 Attacks - 20 Attacks
Every 5$00+3$00 trigger attackN < [10, 12, 14][Difficulty] do
var c, l;
begin
enable;
Randomize;

       Wait(Rand(0$01, 2$59));
       if attackN < [4, 4, 5][Difficulty] then
          c := Rand(1, 2)
           else
            c := Rand(1, 3);

       if attackN = 0 then
          Say(com, 'DJackAttack')
       else
          DSay;

       case c of
       1: begin
          pom := pom ^ Attack(1);
          Wait(0$12);
          pom := pom ^ Attack(3);
          if Difficulty > 2 then
             begin
             Wait(0$46);
             pom := pom ^ Attack(4);
             end;
          if attackN > 4 then
             begin
             Wait(0$12);
             pom := pom ^ Attack(3);
             end;
          if attackN > 8 then
             begin
             Wait(0$12);
             l := Rand(0,100);
             if l < 45 then
                pom := pom ^ Attack(2);
             end;
          end;
       2: begin
          pom := pom ^ Attack(2);
          pom := pom ^ Attack(3);
          if Difficulty > 1 and GetBType(HexInfo(63, 37)) = b_siberite_mine then
             ComitSib;
          if Difficulty > 2 then
             begin
             Wait(0$25);
             pom := pom ^ Attack(4);
             end;
          if attackN > 7 then
             begin
             Wait(0$15);
             pom := pom ^ Attack(2);
             end;
          end;
       3: begin
          pom := pom ^ Attack(1);
          Wait(0$02);
          pom := pom ^ Attack(2);
          Wait(1$00);
          pom := pom ^ Attack(3);
          pom := pom ^ Attack(5);
          if attackN > 10 then
             pom := pom ^ Attack(2);
          end;
       end;

       if Difficulty > 1 and attackN mod 4 = 0 then
          begin
          Wait(1$45);
          pom := pom ^ Attack(3);
          pom := pom ^ Attack(4);
          hover := hover ^ Attack(6);
          end;                 

       attackN := attackN + 1;
       
End;


Every 0$10 trigger attackN >= [10, 12, 14][Difficulty] and FilterAllUnits([f_side, 2]) = 0 do
begin
SayRadio(doc, 'DDocEnd');

Wait(0$03);

Case Query('QWin') of
1: ;
end;

music_nat := 5;
YouWin;
End;