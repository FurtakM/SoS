Export ru_force, ru_skill, ru_cargo, ru_blist, ru_vlist, ru_amount,
       ru_time, ru_teleport_exit;
Export Function PrepareRussian;
var i, un, ru_depot, ru_factory, ru_teleport, ru_barracks, ru_bunkers, ru_buildings, ru_vehicles, ru_humans;
begin
uc_side := 3;
uc_nation := nation_russian;

ru_depot := FilterAllUnits([[f_side, 3], [f_btype, b_warehouse]])[1];
ru_factory := FilterAllUnits([[f_side, 3], [f_btype, b_factory]])[1];
ru_teleport := FilterAllUnits([[f_side, 3], [f_btype, b_teleport]])[1];
ru_bunkers := FilterAllUnits([[f_side, 3], [f_btype, b_turret]]);
ru_barracks := FilterAllUnits([[f_side, 3], [f_btype, b_barracks]])[1];


ru_blist := [];
ru_vlist := [];

// set teleport exit
ru_teleport_exit := [183, 62, 147, 44];
TeleportExit(FilterAllUnits([f_btype, b_teleport])[1], ru_teleport_exit[1], ru_teleport_exit[2]);

ru_amount := [4, 5, 6][Difficulty];

SetResourceType(GetBase(ru_depot), mat_cans, 3000);
SetResourceType(GetBase(ru_depot), mat_oil, 300);


hc_gallery := '';
hc_name := '';
hc_importance := 0;

ru_skill := [5, 6, 7][Difficulty];

for i = 1 to 6 do
    begin
    PrepareHuman(false, class_bazooker, ru_skill);
    un := CreateHuman;
    PlaceHumanInUnit(un, ru_barracks);

    PrepareHuman(false, 4, ru_skill);
    un := CreateHuman;
    PlaceHumanInUnit(un, ru_lab);

    PrepareHuman(false, 3, ru_skill);
    un := CreateHuman;
    PlaceHumanInUnit(un, ru_factory);

    PrepareHuman(false, 2, ru_skill);
    un := CreateHuman;
    PlaceHumanInUnit(un, ru_depot);
    end;

    russian_prepared := true;

    // cargo
       ComConstruct(ru_factory, ru_medium_wheeled, 3, control_computer, ru_cargo_bay);

End;



Every 0$01 trigger FilterAllUnits([f_side, 3]) > 0 and russian_prepared do
var ru_depot, ru_factory, ru_teleport, ru_bunkers, ru_buildings, ru_vehicles, ru_humans, ru_barracks,
    ru_engs, ru_mech, ru_sci, i, tmp, filter, p, cr, sib_bomb;
begin
enable;

ru_depot := FilterAllUnits([[f_side, 3], [f_btype, b_warehouse]])[1];
ru_factory := FilterAllUnits([[f_side, 3], [f_btype, b_factory]])[1];
ru_teleport := FilterAllUnits([[f_side, 3], [f_btype, b_teleport]])[1];
ru_bunkers := FilterAllUnits([[f_side, 3], [f_btype, b_turret]]);
ru_barracks := FilterAllUnits([[f_side, 3], [f_btype, b_barracks]])[1];


ru_buildings := FilterAllUnits([[f_side, 3], [f_type, unit_building]]);
ru_vehicles := FilterAllUnits([[f_side, 3], [f_type, unit_vehicle]]);
ru_humans := FilterAllUnits([[f_side, 3], [f_type, unit_human]]);

ru_engs := UnitFilter(ru_humans, [f_class, 2]);
ru_mech := UnitFilter(ru_humans, [f_class, 3]);
ru_sci  := UnitFilter(ru_humans, [f_class, 4]);

// cargo
   if FilterAllUnits([[f_side, 3], [f_weapon, ru_cargo_bay]]) > 0 and ru_cargo = false then
      ru_cargo := FilterAllUnits([[f_side, 3], [f_weapon, ru_cargo_bay]])[1];

   if ru_cargo then
      begin

      if IsInArea(ru_cargo, ru_base) then
         begin

         if GetCargo(ru_cargo, mat_cans) = 0 then
            ComEnterUnit(ru_cargo, ru_teleport)
             else
              if not HasTask(ru_cargo) then
                 ComMoveXY(ru_cargo, GetX(ru_depot), GetY(ru_depot));
         end
          else
           begin

           if not HasTask(ru_cargo) and GetCargo(ru_cargo, mat_cans) < 100 then
              begin
              cr := GetListOfCratesInArea(ru_crates);

              if cr > 0 then
                 ComCollect(ru_cargo, cr[1], cr[2])
                  else
                   ComMoveToArea(ru_cargo, ru_crates);

              end;

           if not HasTask(ru_cargo) and not IsInArea(ru_cargo, cargoa) and GetCargo(ru_cargo, mat_cans) = 100 then
              ComMoveToArea(ru_cargo, cargoa);

           if IsInArea(ru_cargo, cargoa) and ru_barracks then
              ComSpaceShift(UnitFilter(ru_humans, [f_class, class_bazooker])[1], 139, 24);
           end;

      end;

      if ru_cargo = 0 and ru_factory and BuildingStatus(ru_factory) = bs_idle then
         ComConstruct(ru_factory, ru_medium_wheeled, 3, control_computer, ru_cargo_bay);


// bazooka
   if UnitFilter(ru_humans, [f_class, class_bazooker]) then
      IntBazooka(UnitFilter(ru_humans, [f_class, class_bazooker]), FilterAllUnits([[f_side, Your_Side], [f_not, [f_type, unit_building]]]));

// factory
   if ru_factory and ru_vlist > 0 then
      begin
      if BuildingStatus(ru_factory) = bs_idle then
         begin
         ComConstruct(ru_factory, ru_vlist[1], ru_vlist[2], ru_vlist[3], ru_vlist[4]);

         for i = 1 to 4 do
             ru_vlist := Delete(ru_vlist, 1);
         end;
      end;

// sib_bomb
   if BuildingStatus(ru_lab) = bs_idle and ru_sib_bomb then
      if GetTech(tech_sibfiss, 3) = state_enabled then
         ComResearch(ru_lab, tech_sibfiss);

   if GetTech(tech_sibfiss, 3) = state_researched and tick mod 5$00 = 0 then
      if BuildingStatus(ru_factory) = bs_idle then
         ComConstruct(ru_factory, ru_heavy_wheeled, 3, control_computer, ru_siberium_rocket);

   if FilterAllUnits([[f_side, 3], [f_weapon, ru_siberium_rocket]]) > 0 then
      begin
      sib_bomb := FilterAllUnits([[f_side, 3], [f_weapon, ru_siberium_rocket]])[1];

      if IsInArea(sib_bomb, ru_base) then
         ComEnterUnit(sib_bomb, ru_teleport)
          else
           if not HasTask(sib_bomb) then
              if GetLives(FilterAllUnits([[f_side, your_side], [f_btype, b_warehouse]])[1]) > 250 then
                 ComAttackPlace(sib_bomb, GetX(FilterAllUnits([[f_side, your_side], [f_btype, b_warehouse]])[1]), GetY(FilterAllUnits([[f_side, your_side], [f_btype, b_warehouse]])[1]))
                  else
                   if FilterAllUnits([[f_side, your_side], [f_type, unit_building]]) > 0 then
                      ComAttackPlace(sib_bomb, GetX(FilterAllUnits([[f_side, your_side], [f_type, unit_building]])[1]), GetY(FilterAllUnits([[f_side, your_side], [f_type, unit_building]])[1]))
                       else
                        ComAttackPlace(sib_bomb, GetX(player_commander), GetY(player_commander));
      end;

if ru_can_attack then
// ru_time
   if ru_time > 0$00 then
      ru_time := ru_time - 0$01
       else
        begin
        ru_time := Rand(9$39, 14$39);
     // vehicle produce
        for i = 1 to ru_amount do
            begin
            ru_vlist := ru_vlist ^ ru_heavy_wheeled;
            ru_vlist := ru_vlist ^ engine_siberite;
            ru_vlist := ru_vlist ^ control_computer;
            ru_vlist := ru_vlist ^ [ru_heavy_gun, ru_rocket_launcher, ru_rocket][MultiRand(1,2,3)];
            end;
        end;

// towers weapon
   if UnitFilter(ru_bunkers, [f_bweapon, 0]) > 0 then
      if BuildingStatus(ru_factory) = bs_idle then
         ComPlaceWeapon(UnitFilter(ru_bunkers, [f_bweapon, 0])[1], ru_rocket);

// ru_force
   if ru_force = ru_amount then
      begin
      for i = 1 to ru_force do
          if IsInArea(ru_force[i], ru_base) then
             ComEnterUnit(ru_force[i], ru_teleport)
              else
               if not HasTask(ru_force[i]) then
                  ComAttackUnit(ru_force[i], NearestUnitToUnit(FilterAllUnits([f_enemy, 3]), ru_force[i]));
      end
       else
        if UnitFilter(ru_force, [f_not, [f_inarea, legion_base]]) > 0 then
           begin
           tmp := UnitFilter(ru_force, [f_not, [f_inarea, legion_base]]);

           for i = 1 to tmp do
               if not HasTask(tmp[i]) then
                  ComAttackUnit(ru_force[i], NearestUnitToUnit(FilterAllUnits([f_enemy, 3]), ru_force[i]));
           end;

// repair buildings
   if ru_engs > 0 then
      begin
      if UnitFilter(ru_buildings, [f_not, [f_lives, 1000]]) > 0 then
         begin
         filter := UnitFilter(ru_buildings, [f_not, [f_lives, 1000]]);

         for i = 1 to ru_engs do
             begin
             if IsInUnit(ru_engs[i]) then
                ComExitBuilding(ru_engs[i])
                 else
                  if not HasTask(ru_engs[i]) and GetLives(ru_engs[i]) > 600 then
                     ComRepairBuilding(ru_engs[i], filter[1]);
             end;
         end
           else
             begin
             if ru_blist = 0 then
                begin
                for i = 1 to ru_engs do
                    if not HasTask(ru_engs[i]) and not IsInUnit(ru_engs[i]) then
                       ComEnterUnit(ru_engs[i], ru_depot);
                end
                 else
                  begin
                  for i = 1 to ru_engs do
                      begin
                      if IsInUnit(ru_engs[i]) then
                         ComExitBuilding(ru_engs[i])
                          else
                           if not HasTask(ru_engs[i]) then
                              ComBuild(ru_engs[i], ru_blist[1], ru_blist[2], ru_blist[3], ru_blist[4]);
                      end;
                  end;
             end;
         
      end;
      
End;



// ru_crates
Every 2$40+0$45 trigger russian_prepared and GetListOfCratesInArea(ru_crates) < 20 do
begin
enable;

CreateCratesArea(Rand(1,5), ru_crates, true);
Wait(Rand(0$43, 1$00));
CreateCratesArea(Rand(1,5), ru_crates, true);
End;


// chance_to_bomb
Every 15$00+25$00 trigger ru_sib_bomb = false do
var i, tmp;
begin
enable;

i := Rand(0,100);

Case your_side of
1: tmp := 10;
2: tmp :=  0;
7: tmp := 15;
end;

if i < chance_to_bomb+tmp then
   ru_sib_bomb := true;
End;

Every 0$01 trigger FilterAllUnits([[f_side, your_side], [f_weapon, us_siberium_rocket]]) do
begin
ru_sib_bomb := true;
End;

// change teleport exit
Every 15$00 trigger FilterAllUnits([[f_side, 3], [f_btype, b_teleport]]) do
var i;
begin
enable;
i := [1,3][Rand(1,2)];
TeleportExit(FilterAllUnits([[f_side, 3], [f_btype, b_teleport]])[1], ru_teleport_exit[i], ru_teleport_exit[i+1]);
End;