// Two Front's
// by Serpent
// 17-08-2016
// Last update: 12-03-2018
Starting
begin
//
isTest := false; // test only!

mission_name := 'TwoFronts';
mission_number := 6;
//
RandomizeAll;
ResetFog;

FogOff(isTest);
LogInit();

InitGlobalVar;
InitAction;
InitGame;

// MC_Strategy
   // for north enemy
      MC_SetStrategy(1);
   // for south enemy
      MC_SetStrategy(4);
//

mc_game_live := 1; // <-- game start's here

Dialog;
End;



// Global Variables
Function InitGame;
begin
Resources(5, 0, 2, gaidar_base);
PrepareSquad(4, 1, houten_base, 'jakes', [4, 5, 6][Difficulty], 21);
Resources(3, 3, 0, houten_base);
PrepareSquad(1, 1, brown_base, 'sylvia', [4, 5, 6][Difficulty], 21);
Resources(3, 3, 0, brown_base);

MC_Registry();
MC_RegistryInit();

mc_crates_list := [brown_crates, houten_crates, gaidar_crates];

if Difficulty > 1 then
   SetTech(tech_comp2, 8, state_researched);
if Difficulty > 2 then
   SetTech(tech_comp3, 8, state_researched);
End;

Function MC_SetStrategy(side);
begin

     MCS_SetResourcesBonus(3500, 500, 0);

     // set spec strat for each side
     Case side of
     1: begin // north
        MCS_Collector(1, 1, [brown_crates]);
        MCN_AddApes(ape_north, 5, 1);
        MCS_SetParking(1, brown_parking);
        MCT_CutTreeArea(1, brown_tree);
        MCS_CreateDeposits(1, [22, 17, 2, 57, 8, 2]);
        MCS_ApeLimit(1, 3);
        MCS_ApeOptions(1, [0,1,0,0]);
        MCL_SetTechList(1, [tech_tech1, tech_tech2, tech_oilpow, tech_oileng, tech_solpow, tech_soleng, tech_apelang, tech_tech3, tech_apepsych, tech_weap1, tech_weap2, tech_gatling, tech_gun, tech_opto1, tech_opto2, tech_lassight, tech_radar, tech_remcont, tech_weap3, tech_rocket]);
        MCS_SetSpecClass(1, 4, 0, 0);

        MCS_Depot(1, [35, 9, 3]);
        MCS_Barracks(1, [54, 19, 4]);
        MCS_Barracks(1, [34, 20, 0]);
        MCS_Mine(1);  
        MCS_Lab(1, [29, 5, 2], [b_lab_weapon, b_lab_opto]);
        MCS_PowerPlants(1, [15, 8, 2, 14, 5, 2, 39, 12, 0], [b_solar_power, b_solar_power, b_oil_power]);
        MCS_AddFortification(1, b_bunker, [18, 13, 0, 38, 22, 5, 50, 6, 4], [us_rocket_launcher, us_double_gun, us_double_gun]);
        MCS_Factory(1, [23, 8, 2], [b_ext_gun, b_ext_noncombat, b_ext_radio, b_ext_track, b_ext_rocket]);
        MCS_ControlTower(1, 1, [40, 4, 3]);
        MCS_SetDefence(1, def_brown, def_brown_dontleave, [59, 20, 52, 5, 30, 29], [us_medium_tracked, engine_combustion, control_manual, us_gatling_gun, us_medium_tracked, engine_combustion, control_manual, us_double_gun, us_medium_tracked, engine_combustion, control_manual, us_double_gun]);
        // MCS_AddVehicle(1, [us_medium_tracked, engine_combustion, control_remote, us_cargo_bay]);
        end;
     4: begin // south
        MCS_Collector(4, 1, [houten_crates]);
        MCN_AddApes(ape_south, 5, 1);
        MCS_SetParking(4, houten_parking);
        MCS_CreateDeposits(4, [72, 136, 2, 111, 162, 2]);
        MCS_ApeLimit(4, 3);
        MCS_ApeOptions(4, [0,1,0,0]);
        MCL_SetTechList(4, [tech_tech1, tech_tech2, tech_oilpow, tech_oileng, tech_solpow, tech_soleng, tech_apelang, tech_tech3, tech_apepsych, tech_weap1, tech_weap2, tech_gatling, tech_gun, tech_opto1, tech_opto2, tech_lassight, tech_radar, tech_remcont, tech_weap3, tech_advmet]);
        MCS_SetSpecClass(4, 4, 0, 0);

        MCS_Depot(4, [86, 146, 1]);         
        MCS_Barracks(4, [106, 149, 4]);
        MCS_Barracks(4, [84, 134, 2]);
        MCS_Mine(4); 
        MCS_Lab(4, [97, 163, 0], [b_lab_weapon, b_lab_opto]);
        MCS_PowerPlants(4, [95, 166, 0, 82, 156, 2, 76, 146, 2], [b_solar_power, b_oil_power]);
        MCS_AddFortification(4, b_bunker, [109, 155, 4, 103, 143, 4, 75, 133, 2, 88, 133, 2], [us_gatling_gun, us_heavy_gun, us_double_gun, us_heavy_gun]);
        MCS_Factory(4, [87, 153, 1], [b_ext_gun, b_ext_noncombat, b_ext_radio, b_ext_track]);
        MCS_ControlTower(4, 1, [105, 160, 5]);
        MCS_SetDefence(4, def_houten, def_houten_dontleave, [69, 126, 80, 126, 108, 142, 118, 161], [us_medium_tracked, engine_combustion, control_manual, us_gatling_gun, us_medium_tracked, engine_combustion, control_manual, us_double_gun, us_medium_tracked, engine_combustion, control_manual, us_double_gun]);
        //MCS_AddVehicle(4, [us_medium_wheeled, engine_combustion, control_remote, us_cargo_bay]);
        end;
     End;
End;

Export isTest, debug_string;
Export houten, brown;
Export dialog_north, dialog_south, dialog_popov, dialog_trans, player_loss;
Export player_depot, call, pink_attack, alfa_support, alfa_north_triggered, alfa_south_triggered;
Function InitGlobalVar;
begin
dialog_north := true;
dialog_south := true;
dialog_popov := true;
dialog_trans := true;
call := true;
pink_attack := false;
alfa_support := false;
alfa_north_triggered := false;
alfa_south_triggered := false;
player_loss := 0;
End;



// ZDARZENIA
Every 0$10 trigger ListEnvironmentArea(brown_tree) = 0 do
begin
MCS_AddFortification(1, b_bunker, [50, 10, 4], [us_rocket_launcher]);
End;

Every 10$00 trigger MCF_Get(1, [f_btype, b_factory]) do
begin
MCS_PrepareAttack(1, [us_medium_tracked, engine_combustion, control_remote, us_gatling_gun,
                      us_medium_tracked, engine_combustion, control_remote, us_double_gun,
                      us_medium_tracked, engine_combustion, control_remote, us_double_gun,
                      us_medium_tracked, engine_combustion, control_remote, us_rocket_launcher,
                      us_medium_tracked, engine_combustion, control_remote, us_rocket_launcher]);
End;

Every 10$00 trigger MCF_Get(4, [f_btype, b_factory]) do
begin
MCS_PrepareAttack(4, [us_medium_tracked, engine_combustion, control_remote, us_gatling_gun,
                      us_medium_tracked, engine_combustion, control_remote, us_double_gun,
                      us_medium_tracked, engine_combustion, control_remote, us_double_gun,
                      us_heavy_tracked, engine_combustion, control_remote, us_heavy_gun,
                      us_heavy_tracked, engine_combustion, control_remote, us_heavy_gun]);
End;


Every 5$00 trigger MCF_Get(1, [f_btype, b_factory]) and MREG_ToAttack[1][1] = 0 do
begin
enable;
MCS_PrepareAttack(1, [us_medium_tracked, engine_combustion, control_remote, us_gatling_gun,
                      us_medium_tracked, engine_combustion, control_remote, us_double_gun,
                      us_medium_tracked, engine_combustion, control_remote, us_double_gun,
                      us_medium_tracked, engine_combustion, control_remote, us_rocket_launcher,
                      us_medium_tracked, engine_combustion, control_remote, us_rocket_launcher,
                      us_heavy_tracked, engine_combustion, control_remote, us_rocket_launcher]);
End;

Every 5$00 trigger MCF_Get(4, [f_btype, b_factory]) and MREG_ToAttack[4][1] = 0 do
begin
enable;
MCS_PrepareAttack(4, [us_medium_tracked, engine_combustion, control_remote, us_gatling_gun,
                      us_medium_tracked, engine_combustion, control_remote, us_double_gun,
                      us_medium_tracked, engine_combustion, control_remote, us_double_gun,
                      us_heavy_tracked, engine_combustion, control_remote, us_heavy_gun,
                      us_heavy_tracked, engine_combustion, control_remote, us_heavy_gun,
                      us_medium_tracked, engine_combustion, control_remote, us_double_gun]);
End;

Every 0$01 trigger pink_attack and FilterAllUnits([[f_side, 6], [f_type, unit_vehicle], [f_not, [f_weapon, ru_cargo_bay]]]) do
var i;
begin
enable;

for i in FilterAllUnits([[f_side, 6], [f_type, unit_vehicle], [f_not, [f_weapon, ru_cargo_bay]]]) do
    if not HasTask(i) and GetLives(i) > 250 then
       ComAttackUnit(i, NearestUnitToUnit(FilterAllUnits([f_enemy, 6]), i));
End;


Every 0$01 trigger pink_attack and FilterAllUnits([[f_side, 6], [f_type, unit_vehicle], [f_not, [f_weapon, ru_cargo_bay]]]) = 0 do
begin
enable;
pink_attack := false;
End;


Every 0$01 trigger alfa_support and FilterAllUnits([f_side, 8]) do
var i;
begin
enable;

for i in FilterAllUnits([[f_side, 8], [f_type, unit_vehicle]]) do
    if not HasTask(i) and GetLives(i) > 250 then
       ComAttackUnit(i, NearestUnitToUnit(FilterAllUnits([f_enemy, 8]), i));
End;


Every 0$01 trigger alfa_support and FilterAllUnits([f_side, 8]) = 0 do
begin
enable;
alfa_support := false;
End;


