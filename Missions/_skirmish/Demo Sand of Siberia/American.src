Export am, dow, kl;
Export am_arm, am_bun, am_tw, am_lab, am_wrk, 
       am_sol, am_eng, am_mech, am_sci,
       am_veh, am_factory, am_limit;

Export function PrepareAmerican;
var i, un, b, x1, y1, k, l;
begin

    am := 1; // strona

    am_arm  := FilterAllUnits([[f_side, am], [f_btype, b_armoury]]);
    am_bun  := FilterAllUnits([[f_side, am], [f_btype, b_breastwork]]);
    am_tw   := FilterAllUnits([[f_side, am], [f_btype, b_bunker]]);
    am_lab  := FilterAllUnits([[f_side, am], [f_btype, b_lab]]);
    am_wrk  := FilterAllUnits([[f_side, am], [f_btype, b_workshop]]);
    
    am_veh  := [];

    // Ludzie
    uc_side = am;
    uc_nation = 1;

    hc_gallery = '';
    hc_name = '';
    hc_attr = [Rand(9,11), Rand(10, 12)];

    i = 0;

    k  = 1;
    x1 = [87, 93, 108];
    y1 = [126, 122, 140];

    // zo³nierze bunkry
    for i = 1 to 3 do
    begin
    hc_attr = [Rand(9,11), Rand(10, 12)];
    hc_skills = [Rand(0, 5), Rand(0, 5), Rand(0, 5), Rand(0, 5)];
    hc_sex = Rand(sex_male, sex_female);
    hc_class = 1;

    un := CreateHuman;
    PlaceUnitXY(un, x1[k], y1[k], false);
    k := k + 1;

    ComEnterUnit(un, NearestUnitToUnit(am_bun, un));
    end;

    // zo³nierze wieze
    for i in am_tw do
    begin

        If IsInUnit(i) = 0 then
           begin
           hc_attr = [Rand(9,11), Rand(10, 12)];
           hc_skills = [Rand(0, 5), Rand(0, 5), Rand(0, 5), Rand(0, 5)];
           hc_sex = Rand(sex_male, sex_female);
           hc_class = 1;

           un := CreateHuman;
           PlaceHumanInUnit(un, i);
           end;
    end;

    // zolnierze koszary
    for i in am_arm do
    begin

    l = 0;

        If IsInUnit(i) = 0 then
           begin
           repeat begin
           hc_attr = [Rand(9,11), Rand(10, 12)];
           hc_skills = [Rand(0, 5), Rand(0, 5), Rand(0, 5), Rand(0, 5)];
           hc_sex = Rand(sex_male, sex_female);
           hc_class = 1;

           un := CreateHuman;
           PlaceHumanInUnit(un, i);
           l = l + 1;
           end
           until l = 3;
           end;
    end;

   // lab
   for i in am_lab do
   begin

       l = 0;

        If IsInUnit(i) = 0 then
           begin
            repeat
             begin
           hc_attr = [Rand(9,11), Rand(10, 12)];
           hc_skills = [Rand(0, 5), Rand(0, 5), Rand(0, 5), Rand(0, 5)];
           hc_sex = Rand(sex_male, sex_female);
           hc_class = 4;

           un := CreateHuman;
           PlaceHumanInUnit(un, i);
           l = l + 1;
           end until l = 3;
           end;
    end;

  // warsztat
  for i in am_wrk do
  begin

     l = 0;
      
        If IsInUnit(i) = 0 then
           begin
             repeat
               begin
           hc_attr = [Rand(9,11), Rand(10, 12)];
           hc_skills = [Rand(0, 5), Rand(0, 5), Rand(0, 5), Rand(0, 5)];
           hc_sex = Rand(sex_male, sex_female);
           hc_class = 3;

           un := CreateHuman;
           PlaceHumanInUnit(un, i);
           l = l + 1;
           end
           until l = 3;

           end;
    end;

  // magazyn
  for i in am_dep do
    begin

      l = 0;

        If IsInUnit(i) = 0 then
           begin
           repeat begin
           hc_attr = [Rand(9,11), Rand(10, 12)];
           hc_skills = [Rand(0, 5), Rand(0, 5), Rand(0, 5), Rand(0, 5)];
           hc_sex = Rand(sex_male, sex_female);
           hc_class = 2;

           un := CreateHuman;
           PlaceHumanInUnit(un, i);
           l = l + 1;
           end
           until l = 4;
           end;
    end;


          {=================================}

          // dowodca
           hc_name = 'John Carl Patoshik';
           hc_attr = [Rand(9,11), Rand(10, 12)];
           hc_skills = [Rand(0, 5), Rand(0, 5), Rand(0, 5), Rand(0, 5)];
           hc_sex = sex_male;
           hc_class = 1;

           dow := CreateHuman;
           PlaceUnitXY(dow, 79, 120, false);
           ComHold(un);




    am_sol  := FilterAllUnits([[f_side, am], [f_class, 1]]);
    am_eng  := FilterAllUnits([[f_side, am], [f_class, 2]]);
    am_mech := FilterAllUnits([[f_side, am], [f_class, 3]]);
    am_sci  := FilterAllUnits([[f_side, am], [f_class, 4]]);

    AmTech;
    AmFab;
    end;



{------------------------------}
Every 0$01 do
var i;
begin


for i in am_sol or i in am_eng or i in am_sci do
begin

 If GetLives(i) < 999 then
   begin
   ComExitBuilding(am_sci);
   ComHeal(am_sci, i);
   AddComEnterUnit(am_sci, am_lab);
   enable;
   end
   else
   exit;
   end;

enable;
end;


// Naprawa
Every 0$01 do
var i, am_build, b;
begin
enable;

am_build = FilterAllUnits([[f_side, am], [f_type, unit_building]]);

for b in am_build do
begin

      If GetLives(b) < 1000 then
      begin
      repeat
      begin
      ComRepairBuilding(am_eng, b);
      Wait(0$03);
      AddComMoveXY(am_eng, 80, 125);
      AddComFree(am_eng);
      end until GetLives(b) = 1000;
      end;

end;
end;

Every 0$10 trigger FilterAllUnits([[f_side, am], [f_class, 2]]) = 0 do
begin
ComExitBuilding(am_sci);
AddComEnterUnit(am_sci, am_dep);
AddComChangeProfession(am_sci, 2);
AddComExitBuilding(am_sci);
AddComWait(am_sci, 0$05);

am_eng = am_eng ^ am_sci;
am_sci = [];
end;



// Skrzynie
Every 0$05 trigger Russian_Attack = false do
var skr, p;
begin

     enable;

     skr = GetListOfCratesInArea(AmT);

     p = 1;

     while p < skr do
     begin
     AddComCollect([am_eng], skr[p], skr[p+1]);
     p = p + 2;
     end;

end;




{=================================================}
Function AmTech;
var tech, i, sci, lab;
begin

 lab := FilterAllUnits([[f_side, am], [f_btype, b_lab]]);

 ComEnterUnit(am_sci, lab[1]);

 ComExitBuilding(am_eng);
 AddComMoveXY(am_eng, GetX(lab[2]), GetY(lab[2]));

 // Lab 1
 AddComResearch(lab[1] ,tech_tech1);
 AddComResearch(lab[1], tech_tech2);
 AddComResearch(lab[1] ,tech_solPow);
 AddComResearch(lab[1] ,tech_oilPow);
 AddComResearch(lab[1] ,tech_oilEng);
 AddComResearch(lab[1] ,tech_solEng);


 Wait(0$03);

 AddComUpgradeLab(lab[1], b_lab_weapon);

 Wait(0$01);

 AddComResearch(lab[1] ,tech_weap1);
 AddComResearch(lab[1] ,tech_weap2);
 AddComResearch(lab[1] ,tech_gatling);
 AddComResearch(lab[1] ,tech_gun);


 // Lab 2
 Wait(0$30);
 ComUpgradeLab(lab[2], b_lab_opto);
 end;


{==============================================}
// Zasoby
Every 0$30 do
var base;
begin

     If IsLive(am_dep) then
     begin
     base = GetBase(am_dep);
     AddResourceType(base, mat_cans, 30);
     end;

enable;
end;


{===============================================}
// Fabryka
Function AmFab;
begin
ComUpgrade(am_wrk);
am_limit = 0;
end;

{===========EVENTY===========}

On UpgradeComplete(b) do
begin

   If GetBType(b) = b_factory and GetSide(b) = am then
   begin
   ComEnterUnit(am_mech, b);

   AddComConstruct(b, us_medium_wheeled, engine_combustion ,control_manual ,us_machine_gun);
   AddComConstruct(b, us_medium_wheeled, engine_combustion ,control_manual ,us_machine_gun);
   AddComConstruct(b, us_medium_wheeled, engine_combustion ,control_manual ,us_gatling_gun);

   am_factory := b;
   end;

end;

On VehicleConstructed(vehicle, factory) do
var driver, un;
begin

     If factory = am_factory then
     begin
     driver = IsDrivenBy(un);

     Wait(0$0.1);

     ComMoveXY(driver, 76, 120);
     AddComExitVehicle(driver);
     AddComEnterUnit(driver, am_factory);

     driver = [];
     am_veh = am_veh ^ vehicle;
     am_limit = am_limit + 1;

     If am_limit = 3 then
     begin
     ComExitBuilding(am_mech);
     AddComEnterUnit(am_mech[1], am_veh[1]);
     AddComEnterUnit(am_mech[2], am_veh[2]);
     AddComEnterUnit(am_mech[3], am_veh[3]);

     Wait(0$0.5);

     AddComMoveXY(am_mech[1], 109, 153);
     AddComMoveXY(am_mech[2], 114, 135);
     AddComMoveXY(am_mech[3], 108, 135);
     end;
     end;

end;




