// list of MC's variables used in script
Export mc_active, // bool: define if macro script is active
       mc_debug,  // bool: only for debug purpose
       mc_bases,  // array[index = base number, value = side]: contains active ai bases
       mc_tag,    // array[index = human_id, value = tag]: contains people's tag
       mc_task,   // array: contains active base tasks
       mc_people, // array: contains alive people per base
       mc_buildings, // array: contains building per base
       mc_vehicles, // array: contains vehicles per base
       mc_mines,
       mc_minefields,
       mc_build_list, // array[ [ [btype, x, y, d, allowToUpgrade] , ... ] ]: contains list of buildings which are waiting to build
       mc_produce_list,
       mc_defense_status, // array[bool]: inform if player has defense status
       mc_defender, // array: contains vehicles which are created only for defense role
       mc_defender_limit, // array[int]: contains number of vehicles which must be built
       mc_ape,
       mc_tech,
       mc_attack,
       mc_deposits_xy,
       mc_can_tame,
       mc_lab_upgrade,
       mc_crates_area,
       mc_teleport_exit,
       mc_allowed_tower_weapons,
       mc_parking,
       mc_scan_area,
       mc_danger;

Export Function MC_InitVariables();
begin
mc_bases := [];
mc_tag := [];
mc_task := [];
mc_people := [];
mc_buildings := [];
mc_vehicles := [];
mc_mines := [];
mc_minefields := [];
mc_build_list := [];
mc_produce_list := [];
mc_defense_status := [];
mc_defender := [];
mc_defender_limit := [];
mc_ape := [];
mc_tech := [];
mc_attack := [];
mc_deposits_xy := [];
mc_can_tame := [];
mc_crates_area := [];
mc_teleport_exit := [];
mc_allowed_tower_weapons := [];
mc_parking := [];
mc_scan_area := [];
mc_danger := [];
End;