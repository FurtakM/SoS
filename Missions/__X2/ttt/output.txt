// export function ComAgressiveMoveToUnit ( unit , enemy ) ; var x , y ; begin
   0: LD_INT 0
   2: PPUSH
   3: PPUSH
   4: PPUSH
// if not unit or not enemy then
   5: LD_VAR 0 1
   9: NOT
  10: PUSH
  11: LD_VAR 0 2
  15: NOT
  16: OR
  17: IFFALSE 21
// exit ;
  19: GO 138
// x := GetX ( enemy ) ;
  21: LD_ADDR_VAR 0 4
  25: PUSH
  26: LD_VAR 0 2
  30: PPUSH
  31: CALL_OW 250
  35: ST_TO_ADDR
// y := GetY ( enemy ) ;
  36: LD_ADDR_VAR 0 5
  40: PUSH
  41: LD_VAR 0 2
  45: PPUSH
  46: CALL_OW 251
  50: ST_TO_ADDR
// if ValidHex ( x , y ) then
  51: LD_VAR 0 4
  55: PPUSH
  56: LD_VAR 0 5
  60: PPUSH
  61: CALL_OW 488
  65: IFFALSE 138
// if GetType ( enemy ) = unit_building and See ( GetSide ( unit ) , enemy ) then
  67: LD_VAR 0 2
  71: PPUSH
  72: CALL_OW 247
  76: PUSH
  77: LD_INT 3
  79: EQUAL
  80: PUSH
  81: LD_VAR 0 1
  85: PPUSH
  86: CALL_OW 255
  90: PPUSH
  91: LD_VAR 0 2
  95: PPUSH
  96: CALL_OW 292
 100: AND
 101: IFFALSE 119
// ComAttackUnit ( unit , enemy ) else
 103: LD_VAR 0 1
 107: PPUSH
 108: LD_VAR 0 2
 112: PPUSH
 113: CALL_OW 115
 117: GO 138
// ComAgressiveMove ( unit , x , y ) ;
 119: LD_VAR 0 1
 123: PPUSH
 124: LD_VAR 0 4
 128: PPUSH
 129: LD_VAR 0 5
 133: PPUSH
 134: CALL_OW 114
// end ;
 138: LD_VAR 0 3
 142: RET
// export people ; every 0 0$1 do var un , i ;
 143: GO 145
 145: DISABLE
 146: LD_INT 0
 148: PPUSH
 149: PPUSH
// begin people := [ ] ;
 150: LD_ADDR_EXP 1
 154: PUSH
 155: EMPTY
 156: ST_TO_ADDR
// uc_side := 1 ;
 157: LD_ADDR_OWVAR 20
 161: PUSH
 162: LD_INT 1
 164: ST_TO_ADDR
// uc_nation := 1 ;
 165: LD_ADDR_OWVAR 21
 169: PUSH
 170: LD_INT 1
 172: ST_TO_ADDR
// for i := 1 to 6 do
 173: LD_ADDR_VAR 0 2
 177: PUSH
 178: DOUBLE
 179: LD_INT 1
 181: DEC
 182: ST_TO_ADDR
 183: LD_INT 6
 185: PUSH
 186: FOR_TO
 187: IFFALSE 258
// begin PrepareHuman ( false , 1 , 0 ) ;
 189: LD_INT 0
 191: PPUSH
 192: LD_INT 1
 194: PPUSH
 195: LD_INT 0
 197: PPUSH
 198: CALL_OW 380
// un := CreateHuman ;
 202: LD_ADDR_VAR 0 1
 206: PUSH
 207: CALL_OW 44
 211: ST_TO_ADDR
// PlaceUnitArea ( un , Area05 , false ) ;
 212: LD_VAR 0 1
 216: PPUSH
 217: LD_INT 1
 219: PPUSH
 220: LD_INT 0
 222: PPUSH
 223: CALL_OW 49
// people := Replace ( people , people + 1 , un ) ;
 227: LD_ADDR_EXP 1
 231: PUSH
 232: LD_EXP 1
 236: PPUSH
 237: LD_EXP 1
 241: PUSH
 242: LD_INT 1
 244: PLUS
 245: PPUSH
 246: LD_VAR 0 1
 250: PPUSH
 251: CALL_OW 1
 255: ST_TO_ADDR
// end ;
 256: GO 186
 258: POP
 259: POP
// end ;
 260: PPOPN 2
 262: END
// function Count ( tmp ) ; begin
 263: LD_INT 0
 265: PPUSH
// result := tmp + 0 ;
 266: LD_ADDR_VAR 0 2
 270: PUSH
 271: LD_VAR 0 1
 275: PUSH
 276: LD_INT 0
 278: PLUS
 279: ST_TO_ADDR
// end ;
 280: LD_VAR 0 2
 284: RET
// on SpontaneousTeleported ( un ) do begin display_strings := un ;
 285: LD_ADDR_OWVAR 47
 289: PUSH
 290: LD_VAR 0 1
 294: ST_TO_ADDR
// end ;
 295: PPOPN 1
 297: END
