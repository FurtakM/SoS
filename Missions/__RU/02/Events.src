On BuildingStarted(building, builder) Do
begin
    if GetBType(building) = b_lab AND FilterAllUnits([[f_side, 3], [f_btype, b_lab]]) > 1 AND NOT canBuildSameBuilding then
        Dial_StopConstructAgainSameBuilding(building);

    if GetBType(building) = b_workshop AND FilterAllUnits([[f_side, 3], [f_btype, b_workshop]]) > 1 AND NOT canBuildSameBuilding then
        Dial_StopConstructAgainSameBuilding(building);
end;

On BuildingComplete(building) Do
begin
    if GetSide(building) = 3 AND GetBType(building) = b_lab AND NOT labConstructed then
        Dial_LabConstructed;

    if GetSide(building) = 3 AND GetBType(building) = b_workshop AND NOT workshopConstructed then
        Dial_WorkshopConstructed;

    if GetSide(building) = 6 then
    begin
        if GetBType(building) = b_breastwork then
            ComEnterUnit(UnitFilter(otherKirovUnits, [[f_class, class_soldier], [f_outside]])[1], building);

        if GetBType(building) = b_lab then
        begin
            ResAllTechs(6, building, 3);
            ComEnterUnit(UnitFilter(otherKirovUnits, [f_class, class_scientistic]), building);
            ComEnterUnit(Kirilenkova, building);
        end;

        if GetBType(building) = b_workshop then
            ComEnterUnit(UnitFilter(otherKirovUnits, [f_class, class_mechanic]), building);
    end;
end;

On ResearchComplete(tech, building) Do
begin
    if tech = tech_oilEng AND GetSide(building) = 3 then
        engineResearched = true;
end;

On VehicleConstructed(vehicle, factory) Do
begin
    if GetSide(factory) = your_side AND IsOK(factory) AND NOT constructedFirstVehicle AND NOT construcMoreVehicles then
        Dial_FirstVehConstructed(factory);

    if GetSide(factory) = your_side AND IsOK(factory) AND construcMoreVehicles then
        constructedVehiclesCounter = constructedVehiclesCounter + 1;
end;

On CrateSpawn(unit, x, y, amount, mode) Do
begin
    if NOT canExitBase then
        Dial_NewCrates(x, y);
end;

On Command(com) do
var i, j, temp, order, destiny;
begin
    for i in FilterAllUnits([[f_side,3],[f_type,unit_human]]) do
        if GetTaskList(i) > 0 then
            for j = 1 to GetTaskList(i) do
            begin
                temp = GetTaskList(i)[j][4];

                if temp = kirov or (GetSide(temp) = 6 and GetTaskList(i)[j][1] = 'e' and GetType(temp) = unit_vehicle) then
                    SetTaskList(i, []);
            end;

    destiny = [];
    for i in FilterAllUnits([[f_side,3], [f_or,[f_type,unit_human], [f_type, unit_vehicle]]]) do
            if GetTaskList(i) > 0 then
                for j = 1 to GetTaskList(i) do
                begin
                    order = GetTaskList(i)[j][1];
                    destiny = destiny ^ GetTaskList(i)[j][2];
                    destiny = destiny ^ GetTaskList(i)[j][3];

                    if order = 'M' and NOT InArea(destiny[1], destiny[2], VisibleMapPartArea)then
                        SetTaskList(i, []);
                end;
end;


On UnitDestroyed(unit) Do
begin
    if GetSide(unit) = 1 AND GetType(unit) = unit_building then
    begin
        if unit in leftBunkers then
            leftBunkers = leftBunkers diff unit;

        if unit in rightBunkers then
            rightBunkers = rightBunkers diff unit;
    end;

    if GetSide(unit) = 1 AND GetType(unit) = unit_human then
        if unit in trapTeam then
            trapTeam = trapTeam diff unit;

      if GetSide(unit) = 6 AND GetType(unit) = unit_human then
        if unit in belkovTeam then
            belkovTeam = belkovTeam diff unit;      

    if GetSide(unit) = 3 AND GetType(unit) = unit_human then
        lostComradesCounter = lostComradesCounter + 1;

    if unit = Burlak then
        BurlakIsDead;
end;

On Contact(side1, side2) Do
begin
    if side1 = 3 AND side2 = 6 then
        AttackComrades;
end;
