On BuildingStarted(building, builder) Do
begin
    if GetBType(building) = b_lab AND FilterAllUnits([[f_side, 3], [f_btype, b_lab]]) > 1 AND NOT canBuildSameBuilding then
        Dial_StopConstructAgainSameBuilding(building);

    if GetBType(building) = b_workshop AND FilterAllUnits([[f_side, 3], [f_btype, b_workshop]]) > 1 AND NOT canBuildSameBuilding then
        Dial_StopConstructAgainSameBuilding(building);

    if GetSide(building) = 3 AND GetBType(building) in [b_oil_power, b_armoury, b_breastwork] AND IsInArea(building, BeriaBaseArea) then
        Dial_StopConstructAgainSameBuilding(building);
end;

On BuildingComplete(building) Do
var sold, platSold;
begin
    if GetSide(building) = 3 AND GetBType(building) = b_lab AND NOT labConstructed then
        Dial_LabConstructed;

    if GetSide(building) = 3 AND GetBType(building) = b_workshop AND NOT workshopConstructed then
        Dial_WorkshopConstructed;

    if GetSide(building) = 6 then
    begin
        if GetBType(building) = b_breastwork AND IsInArea(building, KirovBaseArea) then
        begin
            if UnitsInside(ru2_arm2) then
            begin
                sold = UnitsInside(ru2_arm2)[1];
                ComExitBuilding(sold);
                AddComEnterUnit(sold, building);            
            end;

       end;

        if GetBType(building) = b_breastwork AND IsInArea(building, BeriaBaseArea) then
        begin
            sold = NearestUnitToUnit(platSoldiers, building);

            ComEnterUnit(sold, building);
       end;

        if GetBType(building) = b_workshop then
        begin
            ComExitBuilding(UnitFilter(otherKirovUnits, [f_class, class_mechanic]));
            AddComEnterUnit(UnitFilter(otherKirovUnits, [f_class, class_mechanic]), building);
        end;
    end;
end;

On ResearchComplete(tech, building) Do
begin
    if tech = tech_oilEng AND GetSide(building) = 3 then
        engineResearched = true;

   if tech = tech_Tech1 then
   begin
      wait(0$5);
      SetSpecResearch(ru_lab, 1500, false);
   end;
end;

On VehicleConstructed(vehicle, factory) Do
begin
    if GetSide(factory) = your_side AND IsOK(factory) AND NOT constructedFirstVehicle AND NOT construcMoreVehicles then
        Dial_FirstVehConstructed(factory);

    if GetSide(factory) = your_side AND IsOK(factory) AND construcMoreVehicles then
        constructedVehiclesCounter = constructedVehiclesCounter + 1;
end;

On CrateSpawn(unit, x, y, amount, mode) Do
begin
    if NOT canExitBase AND mode = true then
        Dial_NewCrates(x, y);
end;

On Command(com) do
var i, j, temp, order, destiny;
begin

    for i in FilterAllUnits([[f_side,3],[f_type,unit_human]]) do
        if GetTaskList(i) > 0 then
            for j = 1 to GetTaskList(i) do
            begin
                temp = GetTaskList(i)[j][4];

                if temp = kirov or (GetSide(temp) = 6 and GetTaskList(i)[j][1] = 'e' and GetType(temp) = unit_vehicle) then
                    SetTaskList(i, []);

                if temp = beria and GetTaskList(i)[j][1] = 'Y' then
                    SetTaskList(i, []);
            end;

end;


On UnitDestroyed(unit) Do
begin

    if GetSide(unit) = 1 AND GetType(unit) = unit_human then
    begin
        if unit in amLeftEngs then
            amLeftEngs = amLeftEngs diff unit;

        if unit in amRightEngs then
            amRightEngs = amRightEngs diff unit;
    end;

      if GetSide(unit) = 6 AND GetType(unit) = unit_human then
        if unit in belkovTeam then
            belkovTeam = belkovTeam diff unit;      

    if GetSide(unit) = 3 AND GetType(unit) = unit_human then
        lostComradesCounter = lostComradesCounter + 1;

    if unit = Burlak then
        BurlakIsDead;

    if unit in platSoldiers then
        platSoldiers = platSoldiers diff unit;
end;

On UnitGoesToRed(unit) Do
begin
    if GetSide(unit) = 1 AND GetType(unit) = unit_building then
    begin
        if unit in leftBunkers then
            leftBunkers = leftBunkers diff unit;

        if unit in rightBunkers then
            rightBunkers = rightBunkers diff unit;
    end;

    if GetSide(unit) = 1 AND GetType(unit) = unit_human then
        if unit in trapTeam then
            trapTeam = trapTeam diff unit;

end;

On VehicleCaptured(new_vehicle, old_vehicle, original_side, human) Do
begin
    if original_side = 1 then
        captureBelkovVehicle = true;

    if original_side = 6 then
    begin
        ComMoveXY([new_vehicle, old_vehicle], 118, 25);
        ComFree([new_vehicle, old_vehicle]);
    end;
        
end;

On Contact(side1, side2) Do
begin
    if side1 = 3 AND side2 = 6 then
        AttackComrades;
end;
