// starting begin Resetfog ;
   0: CALL_OW 335
// RandomizeAll ;
   4: CALL_OW 11
// PrepareTrockyBase ;
   8: CALL 13 0 0
// end ;
  12: END
// function PrepareTrockyBase ; var i , building , trockyBase , trockyDepot ; begin
  13: LD_INT 0
  15: PPUSH
  16: PPUSH
  17: PPUSH
  18: PPUSH
  19: PPUSH
// trockyBase = LoadVariable ( 08_TrockyBase_1 , [ ] ) ;
  20: LD_ADDR_VAR 0 4
  24: PUSH
  25: LD_STRING 08_TrockyBase_1
  27: PPUSH
  28: EMPTY
  29: PPUSH
  30: CALL_OW 30
  34: ST_TO_ADDR
// SetResourceVisibility ( 134 , 43 , 3 ) ;
  35: LD_INT 134
  37: PPUSH
  38: LD_INT 43
  40: PPUSH
  41: LD_INT 3
  43: PPUSH
  44: CALL_OW 441
// SetResourceVisibility ( 114 , 24 , 3 ) ;
  48: LD_INT 114
  50: PPUSH
  51: LD_INT 24
  53: PPUSH
  54: LD_INT 3
  56: PPUSH
  57: CALL_OW 441
// SetResourceVisibility ( 123 , 60 , 3 ) ;
  61: LD_INT 123
  63: PPUSH
  64: LD_INT 60
  66: PPUSH
  67: LD_INT 3
  69: PPUSH
  70: CALL_OW 441
// SetResourceVisibility ( 47 , 46 , 3 ) ;
  74: LD_INT 47
  76: PPUSH
  77: LD_INT 46
  79: PPUSH
  80: LD_INT 3
  82: PPUSH
  83: CALL_OW 441
// SetResourceVisibility ( 54 , 76 , 3 ) ;
  87: LD_INT 54
  89: PPUSH
  90: LD_INT 76
  92: PPUSH
  93: LD_INT 3
  95: PPUSH
  96: CALL_OW 441
// uc_side = 3 ;
 100: LD_ADDR_OWVAR 20
 104: PUSH
 105: LD_INT 3
 107: ST_TO_ADDR
// for i := 1 to trockyBase do
 108: LD_ADDR_VAR 0 2
 112: PUSH
 113: DOUBLE
 114: LD_INT 1
 116: DEC
 117: ST_TO_ADDR
 118: LD_VAR 0 4
 122: PUSH
 123: FOR_TO
 124: IFFALSE 444
// begin uc_nation = trockyBase [ i ] [ 6 ] ;
 126: LD_ADDR_OWVAR 21
 130: PUSH
 131: LD_VAR 0 4
 135: PUSH
 136: LD_VAR 0 2
 140: ARRAY
 141: PUSH
 142: LD_INT 6
 144: ARRAY
 145: ST_TO_ADDR
// bc_type = trockyBase [ i ] [ 1 ] ;
 146: LD_ADDR_OWVAR 42
 150: PUSH
 151: LD_VAR 0 4
 155: PUSH
 156: LD_VAR 0 2
 160: ARRAY
 161: PUSH
 162: LD_INT 1
 164: ARRAY
 165: ST_TO_ADDR
// bc_level = trockyBase [ i ] [ 5 ] ;
 166: LD_ADDR_OWVAR 43
 170: PUSH
 171: LD_VAR 0 4
 175: PUSH
 176: LD_VAR 0 2
 180: ARRAY
 181: PUSH
 182: LD_INT 5
 184: ARRAY
 185: ST_TO_ADDR
// if bc_type = b_lab then
 186: LD_OWVAR 42
 190: PUSH
 191: LD_INT 6
 193: EQUAL
 194: IFFALSE 212
// begin bc_kind1 = b_lab_basic ;
 196: LD_ADDR_OWVAR 44
 200: PUSH
 201: LD_INT 9
 203: ST_TO_ADDR
// bc_kind2 = b_lab_basic ;
 204: LD_ADDR_OWVAR 45
 208: PUSH
 209: LD_INT 9
 211: ST_TO_ADDR
// end ; if bc_type = b_lab_half or bc_type = b_lab_full then
 212: LD_OWVAR 42
 216: PUSH
 217: LD_INT 7
 219: EQUAL
 220: PUSH
 221: LD_OWVAR 42
 225: PUSH
 226: LD_INT 8
 228: EQUAL
 229: OR
 230: IFFALSE 346
// begin if trockyBase [ i ] [ 7 ] then
 232: LD_VAR 0 4
 236: PUSH
 237: LD_VAR 0 2
 241: ARRAY
 242: PUSH
 243: LD_INT 7
 245: ARRAY
 246: IFFALSE 268
// bc_kind1 = trockyBase [ i ] [ 7 ] ;
 248: LD_ADDR_OWVAR 44
 252: PUSH
 253: LD_VAR 0 4
 257: PUSH
 258: LD_VAR 0 2
 262: ARRAY
 263: PUSH
 264: LD_INT 7
 266: ARRAY
 267: ST_TO_ADDR
// if trockyBase [ i ] [ 8 ] then
 268: LD_VAR 0 4
 272: PUSH
 273: LD_VAR 0 2
 277: ARRAY
 278: PUSH
 279: LD_INT 8
 281: ARRAY
 282: IFFALSE 304
// bc_kind2 = trockyBase [ i ] [ 8 ] ;
 284: LD_ADDR_OWVAR 45
 288: PUSH
 289: LD_VAR 0 4
 293: PUSH
 294: LD_VAR 0 2
 298: ARRAY
 299: PUSH
 300: LD_INT 8
 302: ARRAY
 303: ST_TO_ADDR
// if not trockyBase [ i ] [ 7 ] and not trockyBase [ i ] [ 8 ] then
 304: LD_VAR 0 4
 308: PUSH
 309: LD_VAR 0 2
 313: ARRAY
 314: PUSH
 315: LD_INT 7
 317: ARRAY
 318: NOT
 319: PUSH
 320: LD_VAR 0 4
 324: PUSH
 325: LD_VAR 0 2
 329: ARRAY
 330: PUSH
 331: LD_INT 8
 333: ARRAY
 334: NOT
 335: AND
 336: IFFALSE 346
// bc_type := b_lab ;
 338: LD_ADDR_OWVAR 42
 342: PUSH
 343: LD_INT 6
 345: ST_TO_ADDR
// end ; building = CreateAndPlaceBuildingXYD ( trockyBase [ i ] [ 2 ] , trockyBase [ i ] [ 3 ] , trockyBase [ i ] [ 4 ] ) ;
 346: LD_ADDR_VAR 0 3
 350: PUSH
 351: LD_VAR 0 4
 355: PUSH
 356: LD_VAR 0 2
 360: ARRAY
 361: PUSH
 362: LD_INT 2
 364: ARRAY
 365: PPUSH
 366: LD_VAR 0 4
 370: PUSH
 371: LD_VAR 0 2
 375: ARRAY
 376: PUSH
 377: LD_INT 3
 379: ARRAY
 380: PPUSH
 381: LD_VAR 0 4
 385: PUSH
 386: LD_VAR 0 2
 390: ARRAY
 391: PUSH
 392: LD_INT 4
 394: ARRAY
 395: PPUSH
 396: CALL_OW 47
 400: ST_TO_ADDR
// if bc_type in [ b_bunker , b_turret ] then
 401: LD_OWVAR 42
 405: PUSH
 406: LD_INT 32
 408: PUSH
 409: LD_INT 33
 411: PUSH
 412: EMPTY
 413: LIST
 414: LIST
 415: IN
 416: IFFALSE 442
// PlaceWeaponTurret ( building , trockyBase [ i ] [ 8 ] ) ;
 418: LD_VAR 0 3
 422: PPUSH
 423: LD_VAR 0 4
 427: PUSH
 428: LD_VAR 0 2
 432: ARRAY
 433: PUSH
 434: LD_INT 8
 436: ARRAY
 437: PPUSH
 438: CALL_OW 431
// end ;
 442: GO 123
 444: POP
 445: POP
// trockyDepot = FilterAllUnits ( [ [ f_side , 3 ] , [ f_btype , b_warehouse ] ] ) [ 1 ] ;
 446: LD_ADDR_VAR 0 5
 450: PUSH
 451: LD_INT 22
 453: PUSH
 454: LD_INT 3
 456: PUSH
 457: EMPTY
 458: LIST
 459: LIST
 460: PUSH
 461: LD_INT 30
 463: PUSH
 464: LD_INT 1
 466: PUSH
 467: EMPTY
 468: LIST
 469: LIST
 470: PUSH
 471: EMPTY
 472: LIST
 473: LIST
 474: PPUSH
 475: CALL_OW 69
 479: PUSH
 480: LD_INT 1
 482: ARRAY
 483: ST_TO_ADDR
// SetBName ( trockyDepot , trockij ) ;
 484: LD_VAR 0 5
 488: PPUSH
 489: LD_STRING trockij
 491: PPUSH
 492: CALL_OW 500
// end ;
 496: LD_VAR 0 1
 500: RET
