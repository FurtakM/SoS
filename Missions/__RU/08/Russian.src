Export Burlak, Karamazov, Petrovova, Gleb, Petrosyan, Titov, Dolgov, Lipshchin, Kirilenkova, Belkov, Belkov2, Xavier; // Heroes from 07
Export Gnyevko, Kovalyuk, Scholtze, Kuzmov; // Heroes from 04
Export Kozlov, Oblukov, Kapitsova; // New heroes
Export Popov;
Export russianEscort;

Export Function PrepareRussians;
begin
    russianEscort = [];
    Masha = [];

    PrepareHeroes;
    InitRussianRequiments;
end;

Function PrepareHeroes;
var i, un, other_survivors, yourUnits, emptyVeh;
begin
   uc_side = 3;
   uc_nation = 3;

    Burlak := PrepareUnitExt('Burlak', true, class_mechanic);

    Titov := PrepareUnitExt('Titov', true, class_soldier);
    Dolgov:= PrepareUnitExt('Dolgov', true, class_scientistic);
    Lipshchin:= PrepareUnitExt('Lipshchin', true, class_soldier);
    Karamazov:= PrepareUnitExt('Karamazov', true, class_engineer);
    Petrovova:= PrepareUnitExt('Petrovova', true, class_soldier);
    Gleb:= PrepareUnitExt('Gleb', true, class_soldier);
    Petrosyan:= PrepareUnitExt('Petrosyan', true, class_scientistic);
    Kirilenkova := PrepareUnitExt('Kirilenkova', true, class_scientistic);
    Belkov := PrepareUnitExt('Belkov', true, class_soldier);
    Belkov2 := PrepareUnitExt('Belkov2', true, class_soldier);
    Xavier := PrepareUnitExt('Xavier', true, class_soldier);

    Gnyevko := CreateCharacter('04_Gnyevko'); SetClass(Gnyevko, class_soldier);
    Kovalyuk := CreateCharacter('04_Kovalyuk'); SetClass(Kovalyuk, class_mechanic);
    Scholtze := CreateCharacter('04_Scholtze'); SetClass(Scholtze, class_scientistic);
    Kuzmov := CreateCharacter('04_Kuzmov'); SetClass(Kuzmov, class_soldier);

    Kozlov := PrepareUnitExt('Kozlov', false, class_engineer);
    Oblukov := PrepareUnitExt('Oblukov', false, class_soldier);
    Kapitsova := PrepareUnitExt('Kapitsova', false, class_scientistic);

    Popov := PrepareUnitExt('Popov', false, 0);

    PlaceUnitsArea([Burlak, Karamazov, Petrovova, Gleb, Petrosyan, Titov, Dolgov, Lipshchin, Kirilenkova, Belkov, Belkov2, Xavier, Gnyevko, Kovalyuk, Scholtze, Kuzmov, Kozlov, Oblukov, Kapitsova], RussianSpawnArea, false);

    PrepareVehicles;

    other_survivors = CreateCharacterSet('07_other_survivors');
    other_survivors = other_survivors ^ CreateCharacterSet('04_other_survivors');
    other_survivors = other_survivors ^ CreateCharacterSet('04_other_survivors_with_popov');

    for un in other_survivors do
    begin
        emptyVeh = FilterAllUnits([[f_side, 3], [f_type, unit_vehicle], [f_empty]]);

        if emptyVeh then PlaceHumanInUnit(un, emptyVeh[1])
        else PlaceUnitArea(un, RussianSpawnArea, false);    
    end;
        

    yourUnits = FilterAllUnits([[f_side, 3], [f_type, unit_human], [f_nation, nation_russian]]);

    if yourUnits < 15 then
        for i := 1 to 15 - yourUnits do
        begin
            PrepareHuman(false, rand(1, 4), rand(2, 4));

            un = CreateHuman;

            emptyVeh = FilterAllUnits([[f_side, 3], [f_type, unit_vehicle], [f_empty]]);

            if emptyVeh then PlaceHumanInUnit(un, emptyVeh[1])
            else PlaceUnitArea(un, RussianSpawnArea, false);     
        end;

    yourUnits = FilterAllUnits([[f_side, 3], [f_type, unit_human], [f_nation, nation_russian]]);

    if NOT UnitFilter(yourUnits, [f_class, class_engineer]) then SetClass(yourUnits[1], 2);
end; 

Export Function PrepareRussianEscort;
var i, unit;
begin

    uc_side = 6;
    uc_nation = 3;  

    for i := 1 to 2 do
    begin
        PrepareSoldier(false, 4);
        unit = CreateHuman;
        russianEscort = russianEscort ^ unit;
        PlaceUnitArea(unit, RussianSpawn2Area, false);
    end;
end;

Function PrepareVehicles;
var i, veh;
begin
    uc_side = 3;
    uc_nation = 3;  

    for i := 1 to 5 do
    begin
        PrepareVehicle(ru_medium_wheeled, engine_combustion, control_manual, ru_cargo_bay, rand(60, 80)); 
        veh = CreateVehicle;

        SetDir(veh, 4);
        PlaceUnitArea(veh, RussianSpawnArea, false);

        if (i <> 5) then AddCargo(veh, mat_cans, 100)
        else AddCargo(veh, mat_oil, 100);   
    end; 

    PrepareVehicle(ru_medium_wheeled, engine_combustion, control_manual, ru_crane, rand(60, 80)); 
    veh = CreateVehicle;

    SetDir(veh, 4);
    PlaceUnitArea(veh, RussianSpawnArea, false); 

    for i := 1 to 3 do
    begin
        PrepareVehicle(ru_heavy_tracked, engine_combustion, control_manual, ru_bulldozer, rand(60, 80)); 
        veh = CreateVehicle;

        SetDir(veh, 4);
        PlaceUnitArea(veh, RussianSpawnArea, false);   
    end;
end;

Function InitRussianRequiments;
var i;
begin

    availableWeapons = [ru_heavy_machine_gun, ru_gatling_gun, ru_gun, ru_heavy_gun, ru_rocket_launcher];

    for i := 1 to availableWeapons do
        weaponsData = weaponsData ^ [ [availableWeapons[i], false, false] ];

    for i := 0 to 50 do
        if GetRestrict(i, 3) = state_enabled then
            buildingsToBuild = buildingsToBuild ^ i;

    buildingsToBuild = buildingsToBuild diff [0,2,4,6,7,8,9,10,11,12,14,22,31,32,33,39,40];
    allBuildings = buildingsToBuild;

    techsToResearch = GetTechNation(3, nation_russian, state_enabled);

end;