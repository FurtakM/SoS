Export Burlak, Gnyevko, Kirilenkova, Kovalyuk, Belkov, Belkov2, Benko, Kuklajs; // Heroes with Burlak
Export otherBeriaUnits, beriaBase, beriaDepot, beriaVehs; // Beria base buildings from 02 -> Lab -> ^ [ [GetBType(i), GetX(i), GetY(i) ,GetDir(i) ,GetBLevel(i), GetNation(i), GetLabKind(i,1), GetLabKind(i,2) ] ]
                                             // Depot/warehouse - > [ [GetBType(i), GetX(i), GetY(i), GetDir(i), GetBLevel(i), GetNation(i), GetLives(i)], GetResourceType(GetBase(i), mat_cans), GetResourceType(GetBase(i), mat_oil), GetResourceType(GetBase(i), mat_siberit) ]
                                             // Others -> [ [GetBType(i), GetX(i), GetY(i), GetDir(i), GetBLevel(i), GetNation(i)] ];
Export Kurin, Popov;
Export otherKirovUnits;
Export kirovBase, kirovDepot, kirovOilDepot, kirovLab, kirovBarracks, kirovWorkshop;
                                           
Export Grishko, Gaydar, Bukov, Scholtze, Scholtze2;

Export burlakTeam, kirovEngs;

Export Function PrepareRussians;
var un;
begin
PrepareHeroes;
PrepareBeriaBase;
PrepareKirovBase;
end;

Function PrepareHeroes;
var un;
begin
uc_side := 6;
otherBeriaUnits := CreateCharacterSet('02_burlakTeam');

uc_side := 3;
Burlak := PrepareUnit('Burlak', (not debug), prevMissionPrefix);
Gnyevko := PrepareUnit('Gnyevko', (not debug), prevMissionPrefix);
Kovalyuk := PrepareUnit('Kovalyuk', (not debug), prevMissionPrefix);
Kirilenkova := PrepareUnit('Kirilenkova', (not debug), prevMissionPrefix);
Belkov := PrepareUnit('Belkov', (not debug), prevMissionPrefix);
Benko := PrepareUnit('Benko', (not debug), prevMissionPrefix);
Kuklajs := PrepareUnit('Kuklajs', (not debug), prevMissionPrefix);

uc_side := 6;
Kurin := NewCharacter('Kurin');
Popov := NewCharacter('Popov');
Grishko := NewCharacter('Grishko');
Gaydar := NewCharacter('Gaydar');
Bukov := NewCharacter('Bukov');

SetClass([Burlak, Gnyevko, Kovalyuk], 3);
SetClass(Kirilenkova, 4);

PlaceUnitXY(Kurin, 153, 103, false);
AddComHold(Kurin);
AddComTurnXY(Kurin, 155, 106);

PlaceUnitXY(Popov, 131, 49, false);
AddComHold(Popov);
AddComTurnXY(Popov, 131, 31);

PlaceUnitXY(Gaydar, 91, 15, false);
AddComHold(Gaydar);
AddComTurnXY(Gaydar, 131, 31);

PlaceUnitXY(Bukov, 86, 17, false);
AddComHold(Bukov);
AddComTurnXY(Bukov, 94, 32);

PlaceUnitXY(Belkov, 155, 106, false);
AddComHold(Belkov);
AddComTurnUnit(Belkov, Kurin);

PlaceUnitXY(Burlak, 154, 106, false);
AddComHold(Burlak);
AddComTurnUnit(Burlak, Kurin);

burlakTeam := [Gnyevko, Kovalyuk, Kirilenkova];

for un in otherBeriaUnits do
    begin
    PlaceUnitArea(un, kirovSpawn, false);
    AddComHold(un);
    AddComTurnUnit(un, Kurin);
    end;

for un in BurlakTeam do
    begin
    PlaceUnitArea(un, kirovSpawn, false);
    AddComHold(un);
    AddComTurnUnit(un, Kurin);
    end;
end;

Export Function PrepareBeriaBase;
var i, veh, bonusResources, beriaDepot;
begin
beriaBase := LoadVariable('02_Beria', []);
beriaVehs := LoadVariable('02_VehiclesCount', []);

uc_side := 3;
uc_nation := 3;

vc_chassis = ru_medium_wheeled;
vc_control = control_manual;
vc_engine = engine_combustion;
vc_weapon = ru_heavy_machine_gun;

for i := 1 to beriaBase do
    begin
    bc_type := beriaBase[i][1];
    bc_level := beriaBase[i][2];

    if bc_type = b_lab then
       begin
       bc_kind1 := b_lab_basic;
       bc_kind2 := b_lab_basic;
       end;

    CreateAndPlaceBuildingXYD(beriaBase[i][3] + 46, beriaBase[i][4], beriaBase[i][5]);
    end;

for i := 1 to beriaVehs do
    begin
    vc_fuel_battery = [20, 35, 50, 80][Rand(1,4)];
    veh = CreateVehicle;
    PlaceUnitArea(veh, beriaBaseArea, false);
    end;

beriaDepot := FilterAllUnits([[f_side, 3], [f_btype, b_depot]])[1];
SetBName(beriaDepot, 'beria');
SetResourceType(GetBase(beriaDepot), 1, 100);
SetResourceType(GetBase(beriaDepot), 2, 20);
end;

Export Function PrepareKirovBase;
var i, un, tmp, buildings, x, b, bonusResources;
begin
kirovBase := LoadVariable('02_Kirov', []);

uc_side := 6;
uc_nation := 3;

otherKirovUnits := CreateCharacterSet('02_kirovTeam');

for i := 1 to kirovBase do
    begin
    bc_type := kirovBase[i][1];
    bc_level := kirovBase[i][2];

    x := kirovBase[i][3] + 46;

    if x < 140 then
       uc_side := 3
    else
       uc_side := 6;

    CreateAndPlaceBuildingXYD(kirovBase[i][3] + 46, kirovBase[i][4], kirovBase[i][5]);
    end;

kirovDepot := FilterAllUnits([[f_side, 6], [f_btype, b_depot]])[1];
SetBName(kirovDepot, 'kirov');

for i := 1 to 2 do
    SetResourceType(GetBase(kirovDepot), i, 500);

tmp := otherKirovUnits;
buildings := FilterAllUnits([[f_side, 6], [f_type, unit_building], [f_not, [f_btype, b_breastwork]]]);

repeat
    b := buildings[1];
    PlaceHumanInUnit(tmp[1], b);
    tmp := Delete(tmp, 1);

    if UnitsInside(b) = 3 then
       buildings := Delete(buildings, 1);

until not buildings or not tmp;

if tmp then
   begin
   for i in tmp do
       PlaceUnitXYR(i, 164, 109, 4, false);
   end;

End;

Export Function UpgradeKirovBase;
var i, un, kirovBuildingArray;
begin
  kirovBuildingArray := [
    [b_bunker, 146, 106, 1],
    [b_bunker, 175, 123, 5],
    [b_bunker, 170, 101, 3],
    [b_bunker, 172, 104, 4],
    [b_bunker, 179, 118, 4],
    [b_oil_power, 159, 96, 3]
  ];                          

kirovEngs := FilterAllUnits([[f_side, 6], [f_type, unit_human], [f_class, class_engineer]]);
kirovLab := FilterAllUnits([[f_side, 6], [f_type, unit_building], [f_btype, b_lab]])[1];
kirovBarracks := FilterAllUnits([[f_side, 6], [f_type, unit_building], [f_btype, b_armoury]]);
kirovWorkshop := FilterAllUnits([[f_side, 6], [f_type, unit_building], [f_btype, b_workshop]])[1];

un := FilterAllUnits([[f_side, 6], [f_type, unit_human], [f_class, class_mechanic]]);
ComExitBuilding(un);
AddComEnterUnit(un, kirovWorkshop);
wait(0$1);
un := FilterAllUnits([[f_side, 6], [f_type, unit_human], [f_class, class_scientistic]]);
AddComEnterUnit(un, kirovLab);


for i in kirovBuildingArray do
    AddComBuild(kirovEngs, i[1], i[2], i[3], i[4]);

//AddComUpgrade(kirovWorkshop);

comArray := [
kirovLab,
kirovBarracks[1],     
kirovBarracks[2],
kirovDepot,         
kirovWorkshop
];

End;

Export Function PrepareScholtze;
begin
    uc_side := 5;

    Scholtze := NewCharacter('Scholtze');
    Scholtze2 := NewCharacter('Scholtze');
                                          
    PlaceUnitArea(Scholtze, ScholtzeSpawnArea, true);
End;

Export Function KirovAttackOmicron;
begin
if KirovCurrentAttacker = Length(kirovAttackVehicles) then
   KirovCurrentAttacker = 1;
                                   
AgressiveMove(kirovAttackVehicles[KirovCurrentAttacker], [ [34, 38] ]);
End;                                           