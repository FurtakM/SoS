Export Burlak, Gnyevko, Kirilenkova, Kovalyuk, Belkov, Belkov2, Benko, Kuklajs; // Heroes with Burlak
Export Scholtze; // Other heroes
Export otherBeriaUnits, beriaBase, beriaDepot; // Beria base buildings from 02 -> Lab -> ^ [ [GetBType(i), GetX(i), GetY(i) ,GetDir(i) ,GetBLevel(i), GetNation(i), GetLabKind(i,1), GetLabKind(i,2) ] ]
                                             // Depot/warehouse - > [ [GetBType(i), GetX(i), GetY(i), GetDir(i), GetBLevel(i), GetNation(i), GetLives(i)], GetResourceType(GetBase(i), mat_cans), GetResourceType(GetBase(i), mat_oil), GetResourceType(GetBase(i), mat_siberit) ]
                                             // Others -> [ [GetBType(i), GetX(i), GetY(i), GetDir(i), GetBLevel(i), GetNation(i)] ];
Export Kurin, Popov;
Export otherKirovUnits;
Export kirovBase, kirovDepot, kirovOilDepot;

Export Grishko, Gaydar, Bukov;

Export burlakTeam, kirovBarracks;

Export Function PrepareRussians;
var un;
begin
  PrepareHeroes;
  PrepareBeriaBase;
  PrepareKirovBase;
{
  PrepareKirovBase;
  PrepareHeroes;
  PrepareKirovPersonel;
  PrepareBeriaBase;
  PrepareSecondBaseTeam;
  PrepareGrishko;
  PrepareOtherBuildings;
  PrepareVehicles;
  }
end;

Function PrepareHeroes;
var un;
begin
  uc_side := 6;
  otherBeriaUnits := CreateCharacterSet('02_burlakTeam');

  uc_side := 3;
  Burlak := PrepareUnit('Burlak', (not debug), prevMissionPrefix);
  Gnyevko := PrepareUnit('Gnyevko', (not debug), prevMissionPrefix);
  Kovalyuk := PrepareUnit('Kovalyuk', (not debug), prevMissionPrefix);
  Kirilenkova := PrepareUnit('Kirilenkova', (not debug), prevMissionPrefix);
  Belkov := PrepareUnit('Belkov', (not debug), prevMissionPrefix);
  Benko := PrepareUnit('Benko', (not debug), prevMissionPrefix);
  Kuklajs := PrepareUnit('Kuklajs', (not debug), prevMissionPrefix);

  uc_side := 6;
  Kurin := NewCharacter('Kurin');
  Popov := NewCharacter('Popov');
  Grishko := NewCharacter('Grishko');
  Gaydar := NewCharacter('Gaydar');
  Bukov := NewCharacter('SBukov');

  SetClass([Burlak, Gnyevko, Kovalyuk], 3);
  SetClass(Kirilenkova, 4);

  PlaceUnitXY(Kurin, 153, 103, false);
  AddComHold(Kurin);
  AddComTurnXY(Kurin, 155, 106);

  PlaceUnitXY(Popov, 131, 49, false);
  AddComHold(Popov);
  AddComTurnXY(Popov, 131, 31);

  PlaceUnitXY(Gaydar, 91, 15, false);
  AddComHold(Gaydar);
  AddComTurnXY(Gaydar, 131, 31);

  PlaceUnitXY(Bukov, 86, 17, false);
  AddComHold(Bukov);
  AddComTurnXY(Bukov, 94, 32);

  PlaceUnitXY(Belkov, 155, 106, false);
  AddComHold(Belkov);
  AddComTurnUnit(Belkov, Kurin);

  PlaceUnitXY(Burlak, 154, 106, false);
  AddComHold(Burlak);
  AddComTurnUnit(Burlak, Kurin);

  burlakTeam := [Gnyevko, Kovalyuk, Kirilenkova];

  for un in otherBeriaUnits do
  begin
    PlaceUnitArea(un, kirovSpawn, false);
    AddComHold(un);
    AddComTurnUnit(un, Kurin);
  end;

  for un in BurlakTeam do
  begin
    PlaceUnitArea(un, kirovSpawn, false);
    AddComHold(un);
    AddComTurnUnit(un, Kurin);
  end;
end;

Export Function PrepareBeriaBase;
var i, bonusResources, beriaDepot;
begin
  beriaBase := LoadVariable('02_Beria', []);

  uc_side := 3;
  uc_nation := 3;

  for i := 1 to beriaBase do
  begin
    bc_type := beriaBase[i][1];
    bc_level := beriaBase[i][2];

    if bc_type = b_lab then
    begin
      bc_kind1 := b_lab_basic;
      bc_kind2 := b_lab_basic;
    end;

    CreateAndPlaceBuildingXYD(beriaBase[i][3] + 46, beriaBase[i][4], beriaBase[i][5]);
  end;

  beriaDepot := FilterAllUnits([[f_side, 3], [f_btype, b_depot]])[1];
  SetBName(beriaDepot, 'beria');
End;

Export Function PrepareKirovBase;
var i, tmp, buildings, x, b, bonusResources, kirovDepot;
begin
kirovBase := LoadVariable('02_Kirov', []);

uc_side := 6;
uc_nation := 3;

otherKirovUnits := CreateCharacterSet('02_kirovTeam');

for i := 1 to kirovBase do
    begin
    bc_type := kirovBase[i][1];
    bc_level := kirovBase[i][2];

    x := kirovBase[i][3] + 46;

    if x < 140 then
      uc_side := 3
    else
      uc_side := 6;

    CreateAndPlaceBuildingXYD(kirovBase[i][3] + 46, kirovBase[i][4], kirovBase[i][5]);
    end;

kirovDepot := FilterAllUnits([[f_side, 6], [f_btype, b_depot]])[1];
SetBName(kirovDepot, 'kirov');

for i := 1 to 2 do
    SetResourceType(GetBase(kirovDepot), i, 500);

tmp := otherKirovUnits;
buildings := FilterAllUnits([[f_side, 6], [f_type, unit_building], [f_not, [f_btype, b_breastwork]]]);

repeat
    b := buildings[1];
    PlaceHumanInUnit(tmp[1], b);
    tmp := Delete(tmp, 1);

    if UnitsInside(b) = 3 then
       buildings := Delete(buildings, 1);

until not buildings or not tmp;

if tmp then
   begin
   for i in tmp do
       PlaceUnitXYR(i, 164, 109, 4, false);
   end;

End;

Export Function UpgradeKirovBase;
var i, kirovEngs, kirovBuildingArray;
begin
  kirovBuildingArray := [
    [b_bunker, 146, 106, 1],
    [b_bunker, 175, 123, 5],
    [b_bunker, 170, 101, 3],
    [b_bunker, 172, 104, 4],
    [b_bunker, 179, 118, 4],
    [b_oil_power, 159, 96, 3]
  ];

  kirovEngs := FilterAllUnits([[f_side, 6], [f_type, unit_human], [f_class, class_engineer]]);

  for i in kirovBuildingArray do
    AddComBuild(kirovEngs, i[1], i[2], i[3], i[4]);
End;