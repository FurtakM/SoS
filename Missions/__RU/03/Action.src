Export currentTeam, kirovBaseUnits, bukovMsg;
Export counterEnable, counterIndex, ticks, convoyTime, timeToPrepareAttack, timeToArabAttack;
Export Function MissionIntro;
var i, un, selectedPeople;
begin
CenterNowOnUnits([Burlak, Kurin]);

convoyTime := [0$10, 15$00, 20$00, 25$00];
bukovMsg := ['D3a-RSol1-1', 'D3b-RSol1-1'];

//BELKOV TEAM DEAD
if NOT Belkov then
   begin
   Say(Kurin, 'D1a-Kur-1');
   Say(Burlak, 'D1a-Bur-1');
   Say(Kurin, 'D1a-Kur-2');
   //ANGRY PLATO
   Say(Kurin, 'D1a-Kur-2a');
   Say(Kurin, 'D1a-Kur-2b'); 
   Say(Burlak, 'D1a-Bur-2');
   end
else
   begin
   Say(Kurin, 'D1b-Kur-1');
   Say(Belkov, 'D1b-Bel-1');
   Say(Kurin, 'D1b-Kur-2');
   end;

Say(Kurin, 'D2-Kur-1');
Say(Burlak, 'D2-Bur-1');
Say(Kurin, 'D2-Kur-2');
Say(Burlak, 'D2-Bur-2');
Say(Kurin, 'D2-Kur-3');
PrepareAmericansMissionIntro;
SetAttitude(1, 6, att_friend, true);
RevealFogArea(3, RevealMapPartArea);
CenterNowOnUnits([Popov, Gaydar]);
wait(0$3);
SayRadio(Popov, 'D2-Pop-3');
wait(0$0.3);
CenterNowOnUnits([Burlak, Kurin]);
Say(Kurin, 'D2-Kur-4');
Say(Burlak, 'D2-Bur-4');
Say(Kurin, 'D2-Kur-5');
Say(Burlak, 'D2-Bur-5');
Say(Kurin, 'D2-Kur-6');
Say(Burlak, 'D2-Bur-4');


kirovBaseUnits = otherKirovUnits;
kirovBaseUnits = kirovBaseUnits ^ otherBeriaUnits;

selectedPeople = CharacterSelection('text', 6, 6,
                                [sel_change_class, Burlak, Gnyevko, Kovalyuk, Kirilenkova, Belkov,
                                 sel_dont_change_class,
                                 sel_not_hired,sel_changeable, sel_change_class]^kirovBaseUnits^
                                [sel_dont_change_class, sel_not_changeable, Kurin, Popov],
                                [class_soldier, class_mechanic, [class_engineer, 1], [class_scientistic, 1]]);
SetSide(kirovBaseUnits, 6);
SetSide(selectedPeople, 3);

AddComMoveXY(Popov, 135, 67);
AddComMoveXY(Gaydar, 209, 164);

kirovBarracks := FilterAllUnits([[f_side, 6], [f_btype, b_armoury]]);
kirovBaseUnits := kirovBaseUnits diff selectedPeople;
SetClass(kirovBaseUnits[1], 2);
for i:=2 to 3 do
SetClass(kirovBaseUnits[i], 3);

for un in selectedPeople do
    ComExitBuilding(un);

currentTeam := selectedPeople union [Burlak, Gnyevko, Kovalyuk, Belkov, Kirilenkova];
AddComMoveXY(currentTeam, 113, 97);

for un in kirovBaseUnits do
    begin
    if IsInUnit(un) = 0 then
       ComEnterUnit(un, kirovBarracks[1]);
    end;

ChangeMissionObjectives('M1');

Query('QReadyInfo');
counterEnable := true;
SaveForQuickRestart;
wait(0$5);

for un in kirovBaseUnits do
    begin
    if IsInUnit(un) = 0 AND NOT GetClass(un) = 2 then
       ComEnterUnit(un, kirovBarracks[2]);
    end;

UpgradeKirovBase;

End;

//COUNTER
every 0$1 trigger counterEnable do
var veh, hum, i;
begin

enable;

veh = FilterAllUnits([[f_side, 3], [f_type, unit_vehicle], [f_not, [f_weapon, ru_cargo_bay]]]);
hum = FilterAllUnits([[f_side, 3], [f_type, unit_human]]) + kurinVehNeeded;

ticks = ticks + 0$01;

VehNeeded = hum - veh;

timeToArabAttack = timeToArabAttack  - 0$01;

//if(timeToArabAttack) = 0 then
//OmiRunB = true;

case counterIndex of
1:begin

if VehNeeded <= 0 then
   display_strings = ['#Ru03-5a'] ^ ['#Ru03-4', timeToPrepareAttack]
else
   display_strings = ['#Ru03-5', VehNeeded] ^ ['#Ru03-4', timeToPrepareAttack];  //#Ru03-5'

timeToPrepareAttack = timeToPrepareAttack - 0$01;

end;

2:begin
display_strings=['#Ru03-1', timeToArrive];
timeToArrive = timeToArrive - 0$01;
end;

3:begin
display_strings=['#Ru03-2', timeToArrive];
timeToArrive = timeToArrive - 0$01;
end;

4:begin
display_strings=['#Ru03-3', extraTime];
extraTime = extraTime - 0$01;
end;

End;

//CONVOYS
if ticks = convoyTime[1] then
   begin
   SayRadio(Bukov, bukovMsg[1]);
   if bukovMsg[1] = 'D3a-RSol1-1' then
   begin
      SayRadio(Burlak, 'D3a-Bur-1');
      if IsOk(Gnyevko) then
         Say(Gnyevko, 'D3b-Gny-1');
         Say(Burlak, 'D3b-Bur-1');
      if IsOK(Kovalyuk) then
         Say(Kovalyuk, 'D3b-Kov-1');
         SayRadio(Bukov, 'D3b-Rsol1-2');
   bukovMsg := bukovMsg diff bukovMsg[1];
   end;
                                     
   PrepareAmericanConvoy(amConvoyGroups[1][1], amConvoyGroups[1][2], amConvoyGroups[1][3], amConvoyGroups[1][4], amConvoyGroups[1][5], AmTroopsSpawn);
   //ATTACKS ON BERIA/KAGAN
   PrepareAttackOnRus();
   wait(0$1);
   //Delete(amConvoyGroups, 1);
   amConvoyGroups := amConvoyGroups diff amConvoyGroups[1];
   convoyTime := convoyTime diff convoyTime[1];
   //Delete(convoyTime, 1);
   end;
End;

//AM ATTACK RETREAT
Every 0$1 trigger UnitFilter(amVehs, [f_not,  [f_lives, 700]]) or UnitFilter(amIntroUnits, [f_not,  [f_lives, 700]])  do
var i;
begin
enable;

for i := 1 to amVehs do
    begin
    if GetLives(amVehs[i]) <= 700 then
       ComMoveToArea(amVehs[i], amRetreatArea);
    end;

for i := 1 to amIntroUnits do
    begin
    if GetLives(amIntroUnits[i]) <= 700 then
       ComMoveToArea(amIntroUnits[i], amRetreatArea);
    end;
end;

// Dialog track
every 0$1 trigger NOT dialog_track do
var vehicle;
begin
enable;

for vehicle in FilterAllUnits([[f_side, 3], [f_type, unit_vehicle], [f_nation, nation_russian], [f_or, [f_chassis, ru_medium_wheeled], [f_chassis, ru_heavy_wheeled]]]) do
    if GetDistUnitXY(vehicle, 48, 81) < 7 then
    begin
    dialog_track = true;

    CenterNowOnXY(48, 81);

    DialogueOn;
    Say(Burlak, 'D5a-Bur-1');
    DialogueOff;

    // 82 - basic tools
    if GetTech(82, 3) = state_disabled then
       SetTech(82, 3, state_enabled);

    // 84 - track
    SetTech(84, 3, state_enabled);

    SetRestrict(b_ext_track, 3, state_enabled);

    exit;
    end;
end;

// Spawn Scholtze
every 5$30 do
begin
PrepareScholtze;

wait(0$2);

DialogueOn;
SayNoFaceRadio(Scholtze2, 'D4-Sch-1');
SayRadio(Burlak, 'D4-Bur-1');
DialogueOff;

ChangeMissionObjectives('M4');

ComHold(Scholtze);

scholtzeSpawned = true;
end;

// Contact with Scholtze
every 0$1 trigger See(3, Scholtze) AND scholtzeSpawned AND NOT scholtzeSaved do
begin
scholtzeSaved = true;

CenterNowOnUnits(Scholtze);

SetSide(Scholtze, 3);

DialogueOn;

Say(Scholtze, 'D4a-Sch-1');
Say(Burlak, 'D4a-Bur-1');
Say(Scholtze, 'D4a-Sch-2');

DialogueOff;

ChangeMissionObjectives('MScholtzeOut');

SetTech(tech_Tech2, 3, state_enabled);
SetTech(tech_Weap1, 3, state_enabled);

// 82 - basic tools
if GetTech(82, 3) = state_disabled then
   SetTech(82, 3, state_enabled);

// 83 - cargo
SetTech(83, 3, state_enabled);

SetRestrict(b_ext_noncombat, 3, state_enabled);
end;

//CRATES
every 0$30 do
begin
enable;
    CreateCratesAnywhere(rand(3, 5), true);
end;


// Stop move near Omicron base
every 1 trigger NOT meetNearOmicronBase do
var i, unit, randDialog, currentDist, tmpDist, nearUnit, index;
begin
    enable;
    for unit in FilterUnitsInArea(areaOmicron, [[f_side, 1], [f_or, [f_type, unit_human], [f_type, unit_vehicle], [f_type, unit_building]]]) do
        if GetDistUnits(unit, NearestUnitToUnit(FilterAllUnits([[f_side, 3], [f_or, [f_type, unit_human], [f_type, unit_vehicle]]]), unit)) < 17 then
        begin
            ComMoveXY(NearestUnitToUnit(FilterAllUnits([[f_side, 3], [f_or, [f_type, unit_human], [f_type, unit_vehicle]]]), unit), 114, 98);
            if NOT dialog_stop then
            begin

                if NOT IsOK(Gnyevko) then
                    SayRadio(Kurin, 'D11-Kur-1')
                else
                    Say(Gnyevko, 'D11-Gny-1');
            end;
        end;
end;

// CANT ENTER TO KIROV BASE
every 1 trigger SeeArea(3, areaKirov) >= 6 and counterEnable do
var unit;
begin
    enable;

    for unit in FilterAllUnits([[f_side, 3], [f_or, [f_type, unit_human], [f_type, unit_vehicle]]]) do
        if IsInArea(unit, areaKirov) AND (UnitFilter(unit, [f_type, unit_human]) OR UnitsInside(unit)) then
        begin
            ComMoveXY(unit, 120, 98);

            if NOT dialog_stop then
            begin
                dialog_stop = true;
                Say(Kurin, 'D12-Kur-1');
                wait(0$5);
                dialog_stop = false;
            end;
        end;
end;

//KURIN QUERY
every 0$1 trigger IsSelected(Kurin) do
begin

If true then
   begin
   case Query('QReadyToAttack') of
   1:begin

   DeselectUnits(Kurin);
   SelectUnits(Burlak);
   Say(Burlak, 'D6a-Bur-1');
   SayRadio(Kurin, 'D6a-Kur-1');

   meetNearOmicronBase = true;
   kurinCheckVehicles = true;

   disable;


   end;

   2:begin

   DeselectUnits(Kurin);
   SelectUnits(Burlak);
   Say(Burlak,'D6b-Bur-1');
   Say(Kurin,'D6b-Kur-1');
   Say(Burlak,'D6b-Bur-2');

   meetNearOmicronBase = true;

   disable;
   end;

   3:begin
   // continue;
   DeselectUnits(Kurin);
   SelectUnits(Burlak);
      end;
   end;
end;
enable;
end;

