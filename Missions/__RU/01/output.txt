// var ru ; function seradit ( l , x , y ) ; begin
   0: LD_INT 0
   2: PPUSH
// commovexy ( l [ 1 ] , x + 0 , y + 0 ) ;
   3: LD_VAR 0 1
   7: PUSH
   8: LD_INT 1
  10: ARRAY
  11: PPUSH
  12: LD_VAR 0 2
  16: PUSH
  17: LD_INT 0
  19: PLUS
  20: PPUSH
  21: LD_VAR 0 3
  25: PUSH
  26: LD_INT 0
  28: PLUS
  29: PPUSH
  30: CALL_OW 111
// addcomturnxy ( l [ 1 ] , 76 , 39 ) ;
  34: LD_VAR 0 1
  38: PUSH
  39: LD_INT 1
  41: ARRAY
  42: PPUSH
  43: LD_INT 76
  45: PPUSH
  46: LD_INT 39
  48: PPUSH
  49: CALL_OW 178
// commovexy ( l [ 2 ] , x + 1 , y + 1 ) ;
  53: LD_VAR 0 1
  57: PUSH
  58: LD_INT 2
  60: ARRAY
  61: PPUSH
  62: LD_VAR 0 2
  66: PUSH
  67: LD_INT 1
  69: PLUS
  70: PPUSH
  71: LD_VAR 0 3
  75: PUSH
  76: LD_INT 1
  78: PLUS
  79: PPUSH
  80: CALL_OW 111
// addcomturnxy ( l [ 2 ] , 76 , 39 ) ;
  84: LD_VAR 0 1
  88: PUSH
  89: LD_INT 2
  91: ARRAY
  92: PPUSH
  93: LD_INT 76
  95: PPUSH
  96: LD_INT 39
  98: PPUSH
  99: CALL_OW 178
// commovexy ( l [ 3 ] , x + 0 , y + 1 ) ;
 103: LD_VAR 0 1
 107: PUSH
 108: LD_INT 3
 110: ARRAY
 111: PPUSH
 112: LD_VAR 0 2
 116: PUSH
 117: LD_INT 0
 119: PLUS
 120: PPUSH
 121: LD_VAR 0 3
 125: PUSH
 126: LD_INT 1
 128: PLUS
 129: PPUSH
 130: CALL_OW 111
// addcomturnxy ( l [ 3 ] , 76 , 39 ) ;
 134: LD_VAR 0 1
 138: PUSH
 139: LD_INT 3
 141: ARRAY
 142: PPUSH
 143: LD_INT 76
 145: PPUSH
 146: LD_INT 39
 148: PPUSH
 149: CALL_OW 178
// commovexy ( l [ 4 ] , x + 1 , y + 2 ) ;
 153: LD_VAR 0 1
 157: PUSH
 158: LD_INT 4
 160: ARRAY
 161: PPUSH
 162: LD_VAR 0 2
 166: PUSH
 167: LD_INT 1
 169: PLUS
 170: PPUSH
 171: LD_VAR 0 3
 175: PUSH
 176: LD_INT 2
 178: PLUS
 179: PPUSH
 180: CALL_OW 111
// addcomturnxy ( l [ 4 ] , 76 , 39 ) ;
 184: LD_VAR 0 1
 188: PUSH
 189: LD_INT 4
 191: ARRAY
 192: PPUSH
 193: LD_INT 76
 195: PPUSH
 196: LD_INT 39
 198: PPUSH
 199: CALL_OW 178
// commovexy ( l [ 5 ] , x + 0 , y + 2 ) ;
 203: LD_VAR 0 1
 207: PUSH
 208: LD_INT 5
 210: ARRAY
 211: PPUSH
 212: LD_VAR 0 2
 216: PUSH
 217: LD_INT 0
 219: PLUS
 220: PPUSH
 221: LD_VAR 0 3
 225: PUSH
 226: LD_INT 2
 228: PLUS
 229: PPUSH
 230: CALL_OW 111
// addcomturnxy ( l [ 5 ] , 76 , 39 ) ;
 234: LD_VAR 0 1
 238: PUSH
 239: LD_INT 5
 241: ARRAY
 242: PPUSH
 243: LD_INT 76
 245: PPUSH
 246: LD_INT 39
 248: PPUSH
 249: CALL_OW 178
// commovexy ( l [ 6 ] , x + 1 , y + 3 ) ;
 253: LD_VAR 0 1
 257: PUSH
 258: LD_INT 6
 260: ARRAY
 261: PPUSH
 262: LD_VAR 0 2
 266: PUSH
 267: LD_INT 1
 269: PLUS
 270: PPUSH
 271: LD_VAR 0 3
 275: PUSH
 276: LD_INT 3
 278: PLUS
 279: PPUSH
 280: CALL_OW 111
// addcomturnxy ( l [ 6 ] , 76 , 39 ) ;
 284: LD_VAR 0 1
 288: PUSH
 289: LD_INT 6
 291: ARRAY
 292: PPUSH
 293: LD_INT 76
 295: PPUSH
 296: LD_INT 39
 298: PPUSH
 299: CALL_OW 178
// commovexy ( l [ 7 ] , x + 1 , y + 4 ) ;
 303: LD_VAR 0 1
 307: PUSH
 308: LD_INT 7
 310: ARRAY
 311: PPUSH
 312: LD_VAR 0 2
 316: PUSH
 317: LD_INT 1
 319: PLUS
 320: PPUSH
 321: LD_VAR 0 3
 325: PUSH
 326: LD_INT 4
 328: PLUS
 329: PPUSH
 330: CALL_OW 111
// addcomturnxy ( l [ 7 ] , 76 , 39 ) ;
 334: LD_VAR 0 1
 338: PUSH
 339: LD_INT 7
 341: ARRAY
 342: PPUSH
 343: LD_INT 76
 345: PPUSH
 346: LD_INT 39
 348: PPUSH
 349: CALL_OW 178
// end ;
 353: LD_VAR 0 4
 357: RET
// var g1 , g2 , g3 , g4 ; starting begin game_speed := 5 ;
 358: LD_ADDR_OWVAR 65
 362: PUSH
 363: LD_INT 5
 365: ST_TO_ADDR
// music_class = 5 ;
 366: LD_ADDR_OWVAR 72
 370: PUSH
 371: LD_INT 5
 373: ST_TO_ADDR
// ru = 3 ;
 374: LD_ADDR_LOC 1
 378: PUSH
 379: LD_INT 3
 381: ST_TO_ADDR
// g1 = [ s01 , s02 , s14 , s15 , m01 , m02 , c04 ] ;
 382: LD_ADDR_LOC 2
 386: PUSH
 387: LD_INT 33
 389: PUSH
 390: LD_INT 32
 392: PUSH
 393: LD_INT 20
 395: PUSH
 396: LD_INT 19
 398: PUSH
 399: LD_INT 17
 401: PUSH
 402: LD_INT 16
 404: PUSH
 405: LD_INT 6
 407: PUSH
 408: EMPTY
 409: LIST
 410: LIST
 411: LIST
 412: LIST
 413: LIST
 414: LIST
 415: LIST
 416: ST_TO_ADDR
// g2 = [ s13 , s03 , s16 , s12 , m03 , m08 , c03 ] ;
 417: LD_ADDR_LOC 3
 421: PUSH
 422: LD_INT 21
 424: PUSH
 425: LD_INT 31
 427: PUSH
 428: LD_INT 18
 430: PUSH
 431: LD_INT 22
 433: PUSH
 434: LD_INT 15
 436: PUSH
 437: LD_INT 10
 439: PUSH
 440: LD_INT 7
 442: PUSH
 443: EMPTY
 444: LIST
 445: LIST
 446: LIST
 447: LIST
 448: LIST
 449: LIST
 450: LIST
 451: ST_TO_ADDR
// g3 = [ s04 , s05 , s11 , s10 , m04 , m07 , c02 ] ;
 452: LD_ADDR_LOC 4
 456: PUSH
 457: LD_INT 30
 459: PUSH
 460: LD_INT 29
 462: PUSH
 463: LD_INT 23
 465: PUSH
 466: LD_INT 24
 468: PUSH
 469: LD_INT 14
 471: PUSH
 472: LD_INT 11
 474: PUSH
 475: LD_INT 8
 477: PUSH
 478: EMPTY
 479: LIST
 480: LIST
 481: LIST
 482: LIST
 483: LIST
 484: LIST
 485: LIST
 486: ST_TO_ADDR
// g4 = [ s06 , s07 , s09 , s08 , m05 , m06 , c01 ] ;
 487: LD_ADDR_LOC 5
 491: PUSH
 492: LD_INT 28
 494: PUSH
 495: LD_INT 27
 497: PUSH
 498: LD_INT 25
 500: PUSH
 501: LD_INT 26
 503: PUSH
 504: LD_INT 13
 506: PUSH
 507: LD_INT 12
 509: PUSH
 510: LD_INT 9
 512: PUSH
 513: EMPTY
 514: LIST
 515: LIST
 516: LIST
 517: LIST
 518: LIST
 519: LIST
 520: LIST
 521: ST_TO_ADDR
// ingameon ;
 522: CALL_OW 8
// comhold ( [ s01 , s02 , s03 , s04 , s05 , s06 , s07 , s08 , s09 , s10 , s11 , s12 , s13 , s14 , s15 , s16 , m01 , m02 , m03 , m04 , m05 , m06 , m07 , m08 , c01 , c02 , c03 , c04 ] ) ;
 526: LD_INT 33
 528: PUSH
 529: LD_INT 32
 531: PUSH
 532: LD_INT 31
 534: PUSH
 535: LD_INT 30
 537: PUSH
 538: LD_INT 29
 540: PUSH
 541: LD_INT 28
 543: PUSH
 544: LD_INT 27
 546: PUSH
 547: LD_INT 26
 549: PUSH
 550: LD_INT 25
 552: PUSH
 553: LD_INT 24
 555: PUSH
 556: LD_INT 23
 558: PUSH
 559: LD_INT 22
 561: PUSH
 562: LD_INT 21
 564: PUSH
 565: LD_INT 20
 567: PUSH
 568: LD_INT 19
 570: PUSH
 571: LD_INT 18
 573: PUSH
 574: LD_INT 17
 576: PUSH
 577: LD_INT 16
 579: PUSH
 580: LD_INT 15
 582: PUSH
 583: LD_INT 14
 585: PUSH
 586: LD_INT 13
 588: PUSH
 589: LD_INT 12
 591: PUSH
 592: LD_INT 11
 594: PUSH
 595: LD_INT 10
 597: PUSH
 598: LD_INT 9
 600: PUSH
 601: LD_INT 8
 603: PUSH
 604: LD_INT 7
 606: PUSH
 607: LD_INT 6
 609: PUSH
 610: EMPTY
 611: LIST
 612: LIST
 613: LIST
 614: LIST
 615: LIST
 616: LIST
 617: LIST
 618: LIST
 619: LIST
 620: LIST
 621: LIST
 622: LIST
 623: LIST
 624: LIST
 625: LIST
 626: LIST
 627: LIST
 628: LIST
 629: LIST
 630: LIST
 631: LIST
 632: LIST
 633: LIST
 634: LIST
 635: LIST
 636: LIST
 637: LIST
 638: LIST
 639: PPUSH
 640: CALL_OW 140
// comhold ( [ off1 , off2 ] ) ;
 644: LD_INT 35
 646: PUSH
 647: LD_INT 38
 649: PUSH
 650: EMPTY
 651: LIST
 652: LIST
 653: PPUSH
 654: CALL_OW 140
// comturnxy ( [ s01 , s02 , s03 , s04 , s05 , s06 , s07 , s08 , s09 , s10 , s11 , s12 , s13 , s14 , s15 , s16 , m01 , m02 , m03 , m04 , m05 , m06 , m07 , m08 , c01 , c02 , c03 , c04 ] , 76 , 39 ) ;
 658: LD_INT 33
 660: PUSH
 661: LD_INT 32
 663: PUSH
 664: LD_INT 31
 666: PUSH
 667: LD_INT 30
 669: PUSH
 670: LD_INT 29
 672: PUSH
 673: LD_INT 28
 675: PUSH
 676: LD_INT 27
 678: PUSH
 679: LD_INT 26
 681: PUSH
 682: LD_INT 25
 684: PUSH
 685: LD_INT 24
 687: PUSH
 688: LD_INT 23
 690: PUSH
 691: LD_INT 22
 693: PUSH
 694: LD_INT 21
 696: PUSH
 697: LD_INT 20
 699: PUSH
 700: LD_INT 19
 702: PUSH
 703: LD_INT 18
 705: PUSH
 706: LD_INT 17
 708: PUSH
 709: LD_INT 16
 711: PUSH
 712: LD_INT 15
 714: PUSH
 715: LD_INT 14
 717: PUSH
 718: LD_INT 13
 720: PUSH
 721: LD_INT 12
 723: PUSH
 724: LD_INT 11
 726: PUSH
 727: LD_INT 10
 729: PUSH
 730: LD_INT 9
 732: PUSH
 733: LD_INT 8
 735: PUSH
 736: LD_INT 7
 738: PUSH
 739: LD_INT 6
 741: PUSH
 742: EMPTY
 743: LIST
 744: LIST
 745: LIST
 746: LIST
 747: LIST
 748: LIST
 749: LIST
 750: LIST
 751: LIST
 752: LIST
 753: LIST
 754: LIST
 755: LIST
 756: LIST
 757: LIST
 758: LIST
 759: LIST
 760: LIST
 761: LIST
 762: LIST
 763: LIST
 764: LIST
 765: LIST
 766: LIST
 767: LIST
 768: LIST
 769: LIST
 770: LIST
 771: PPUSH
 772: LD_INT 76
 774: PPUSH
 775: LD_INT 39
 777: PPUSH
 778: CALL_OW 118
// comturnxy ( [ off1 , off2 ] , 66 , 39 ) ;
 782: LD_INT 35
 784: PUSH
 785: LD_INT 38
 787: PUSH
 788: EMPTY
 789: LIST
 790: LIST
 791: PPUSH
 792: LD_INT 66
 794: PPUSH
 795: LD_INT 39
 797: PPUSH
 798: CALL_OW 118
// centernowonxy ( 27 , 43 ) ;
 802: LD_INT 27
 804: PPUSH
 805: LD_INT 43
 807: PPUSH
 808: CALL_OW 86
// wait ( 0 0$0.5 ) ;
 812: LD_INT 18
 814: PPUSH
 815: CALL_OW 67
// centeronxy ( 28 , 32 ) ;
 819: LD_INT 28
 821: PPUSH
 822: LD_INT 32
 824: PPUSH
 825: CALL_OW 84
// wait ( 0 0$0.7 ) ;
 829: LD_INT 24
 831: PPUSH
 832: CALL_OW 67
// centeronxy ( 30 , 23 ) ;
 836: LD_INT 30
 838: PPUSH
 839: LD_INT 23
 841: PPUSH
 842: CALL_OW 84
// wait ( 0 0$0.7 ) ;
 846: LD_INT 24
 848: PPUSH
 849: CALL_OW 67
// centeronxy ( 37 , 19 ) ;
 853: LD_INT 37
 855: PPUSH
 856: LD_INT 19
 858: PPUSH
 859: CALL_OW 84
// wait ( 0 0$0.7 ) ;
 863: LD_INT 24
 865: PPUSH
 866: CALL_OW 67
// centeronxy ( 43 , 20 ) ;
 870: LD_INT 43
 872: PPUSH
 873: LD_INT 20
 875: PPUSH
 876: CALL_OW 84
// wait ( 0 0$1.5 ) ;
 880: LD_INT 52
 882: PPUSH
 883: CALL_OW 67
// centeronxy ( 54 , 25 ) ;
 887: LD_INT 54
 889: PPUSH
 890: LD_INT 25
 892: PPUSH
 893: CALL_OW 84
// wait ( 0 0$0.7 ) ;
 897: LD_INT 24
 899: PPUSH
 900: CALL_OW 67
// centeronxy ( 62 , 32 ) ;
 904: LD_INT 62
 906: PPUSH
 907: LD_INT 32
 909: PPUSH
 910: CALL_OW 84
// wait ( 0 0$0.7 ) ;
 914: LD_INT 24
 916: PPUSH
 917: CALL_OW 67
// centeronxy ( 69 , 41 ) ;
 921: LD_INT 69
 923: PPUSH
 924: LD_INT 41
 926: PPUSH
 927: CALL_OW 84
// say ( off1 , D1i-Off1-1 ) ;
 931: LD_INT 35
 933: PPUSH
 934: LD_STRING D1i-Off1-1
 936: PPUSH
 937: CALL_OW 88
// say ( off2 , D1i-Off2-1 ) ;
 941: LD_INT 38
 943: PPUSH
 944: LD_STRING D1i-Off2-1
 946: PPUSH
 947: CALL_OW 88
// say ( off1 , D1i-Off1-2 ) ;
 951: LD_INT 35
 953: PPUSH
 954: LD_STRING D1i-Off1-2
 956: PPUSH
 957: CALL_OW 88
// wait ( 2 ) ;
 961: LD_INT 2
 963: PPUSH
 964: CALL_OW 67
// seradit ( g1 , 65 , 36 ) ;
 968: LD_LOC 2
 972: PPUSH
 973: LD_INT 65
 975: PPUSH
 976: LD_INT 36
 978: PPUSH
 979: CALL 0 0 3
// wait ( 0 0$2 ) ;
 983: LD_INT 70
 985: PPUSH
 986: CALL_OW 67
// seradit ( g2 , 68 , 39 ) ;
 990: LD_LOC 3
 994: PPUSH
 995: LD_INT 68
 997: PPUSH
 998: LD_INT 39
1000: PPUSH
1001: CALL 0 0 3
// wait ( 0 0$3 ) ;
1005: LD_INT 105
1007: PPUSH
1008: CALL_OW 67
// seradit ( g3 , 71 , 42 ) ;
1012: LD_LOC 4
1016: PPUSH
1017: LD_INT 71
1019: PPUSH
1020: LD_INT 42
1022: PPUSH
1023: CALL 0 0 3
// wait ( 0 0$4 ) ;
1027: LD_INT 140
1029: PPUSH
1030: CALL_OW 67
// seradit ( g4 , 74 , 45 ) ;
1034: LD_LOC 5
1038: PPUSH
1039: LD_INT 74
1041: PPUSH
1042: LD_INT 45
1044: PPUSH
1045: CALL 0 0 3
// wait ( 0 0$11 ) ;
1049: LD_INT 385
1051: PPUSH
1052: CALL_OW 67
// say ( off2 , D1i-Off2-2 ) ;
1056: LD_INT 38
1058: PPUSH
1059: LD_STRING D1i-Off2-2
1061: PPUSH
1062: CALL_OW 88
// say ( off1 , D1i-Off1-3 ) ;
1066: LD_INT 35
1068: PPUSH
1069: LD_STRING D1i-Off1-3
1071: PPUSH
1072: CALL_OW 88
// commoveunit ( g1 , eon ) ;
1076: LD_LOC 2
1080: PPUSH
1081: LD_INT 34
1083: PPUSH
1084: CALL_OW 112
// wait ( 0 0$7 ) ;
1088: LD_INT 245
1090: PPUSH
1091: CALL_OW 67
// commoveunit ( g2 , eon ) ;
1095: LD_LOC 3
1099: PPUSH
1100: LD_INT 34
1102: PPUSH
1103: CALL_OW 112
// end ;
1107: END
// on enterbuilding ( b , un ) do if b = eon then
1108: LD_VAR 0 1
1112: PUSH
1113: LD_INT 34
1115: EQUAL
1116: IFFALSE 1139
// begin wait ( 0 0$9 ) ;
1118: LD_INT 315
1120: PPUSH
1121: CALL_OW 67
// ingameoff ;
1125: CALL_OW 9
// changemap ( 1 , %_cont ) ;
1129: LD_STRING 1
1131: PPUSH
1132: LD_STRING %_cont
1134: PPUSH
1135: CALL_OW 340
// end ;
1139: PPOPN 2
1141: END
