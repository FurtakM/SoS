// BUILDING
On BuildingComplete(b) do
var i, side, un;
begin


     If GetSide(b) = 2 then
        begin

        if GetBType(b) = b_lab then
           begin
           pl_lab := true;
           pl_opto := true;
           end;

        if GetBType(b) in [b_solar_power, b_oil_power] then
           pl_el := pl_el + 1;

        end;


     // spec event for ar(8) player
     If GetSide(b) = 8 then
        begin

        for i = 1 to 4 do
            ar_build_list := Delete(ar_build_list, 1);

        // lab
        if GetBType(b) = b_lab then
           begin
           ComUpgradeLab(b, b_lab_weapon);
           AddComUpgradeLab(b, b_lab_opto);
           end;
             
        // workshop
        if GetBType(b) = b_workshop then
           ComUpgrade(b);

        end;

End;


On UpgradeComplete(b) do
var i, un;
begin


     If GetSide(b) = 2 then
        begin

        if GetBType(b) = b_factory then
           pl_fac := true;

        if GetBType(b) in [b_lab, b_lab_full, b_lab_opto] then
           pl_opto := true;

        end;



     If GetSide(b) = 8 then
        begin

        // facotry
        if GetBType(b) = b_factory then
           begin
           // enter in
           for i = 1 to ar_mechs do
               ComEnterUnit(ar_mechs[i], b);

           ar_build_list := ar_build_list ^ [b_ext_stitch] ^ [100] ^ [117] ^ [0];
           ar_build_list := ar_build_list ^ [b_ext_track] ^ [104] ^ [113] ^ [4];

           ar_produce := true; // can produce new vehicle
           end;

        if GetBType(b) in [b_lab, b_lab_full, b_lab_weapon, b_lab_opto] then
           begin
           ar_lab := b;

           for i = 1 to 3 do
               begin
               uc_nation := 2;
               uc_side := 8;

               un := CreateHumanWithClass(4, skill_level);
               PlaceUnitArea(un, ar8_spawn, false);
               ComEnterUnit(un, b);
               end;

           ar_res := true; // start res
           end;

        end;

End;


On ResearchComplete(tech, lab) do
var i, filter, un;
begin

     if tech in ar_tech_list then
        ar_tech_list := Delete(ar_tech_list, 1);


     if GetSide(lab) = 8 and tech = tech_gun then
        ar_build_list := ar_build_list ^ [b_ext_gun] ^ [100] ^ [110] ^ [3];

     if GetSide(lab) = 8 and tech = tech_radar then
        ar_build_list := ar_build_list ^ [b_ext_radar] ^ [97] ^ [113] ^ [1];

     if GetSide(lab) = 8 and tech = tech_tech2 then
        begin

        filter := FilterAllUnits([[f_side, 8], [f_btype, b_armoury]]);

        for i = 1 to filter do
            ComUpgrade(filter[i]);
        end;


    if GetSide(lab) = 2 and tech = tech_remcont then
       begin

       if IsLive(Martin) then
          begin
          Say(Martin, 'DM-ct1');
          Say(Louis, 'DLM-ct1');
          Say(Martin, 'DM-ct2');
          Say(Martin, 'DM-ct3');
          Say(Louis, 'DLM-ct2');
          end else
          begin
          un := FilterAllUnits([[f_side, 2], [f_class, 4]]);

          Say(un[1], 'DA-ct1');
          Say(Louis, 'DLA-ct1');
          Say(un[1], 'DA-ct2');
          Say(Louis, 'DLA-ct2');
          end;

      end;

End;


On UnitDestroyed(un) do
var filter;
begin

     if GetSide(un) = 6 then
        begin

        if un in FilterAllUnits([[f_type, unit_vehicle]]) then
           begin
           dip_count := dip_count + 2;
           end;

        if un in FilterAllUnits([f_class, class_bazooker]) then
           act_baz := true;

        end;


     if GetSide(un) = 8 and un in FilterAllUnits([f_type, unit_building]) then
        begin
        ar_build_list := ar_build_list ^ GetBType(un);
        ar_build_list := ar_build_list ^ GetX(un);
        ar_build_list := ar_build_list ^ GetY(un);
        ar_build_list := ar_build_list ^ GetDir(un);
        end;

     if un in ar_mechs then
        ar_mechs := Delete(ar_mechs, un);

     if un in FilterAllUnits([[f_side, 8], [f_type, unit_vehicle]]) then
        begin
        // add weapon to produce
           if GetWeapon(un) <> ar_rocket_launcher then
           ar_produce_list := ar_produce_list ^ [GetWeapon(un)]
            else
           ar_produce_list := ar_produce_list ^ [ar_gun];
       
        // find free mechanic
           filter := FilterAllUnits([[[f_side, 8], [f_class, 3], [f_not, [f_inside]], [f_not, [f_driving]]]]);

           if filter = 0 then
              // create new mechanic
              PlaceUnitArea(CreateHumanWithClass(3, skill_level), ar8_spawn, false);

        end;


End;


// HEAL
On EnterBuilding(b, un) do
var deps;
begin

     if un in FilterAllUnits([f_side, 8]) and b = ar_lab and GetLives(un) < 1000 then
        SetLives(un, 1000);


     deps := FilterAllUnits([[f_side, 2], [f_or, [f_btype, b_depot], [f_btype, b_warehouse]]]);

     If un in FilterAllUnits([[f_side, 2],[f_class, class_apeman]]) or un in FilterAllUnits([[f_side, 2],[f_class, class_apeman_soldier]]) then
        If b in deps then
        begin
        Wait(0$0.3);
        SetClass(un, 16);
        end;

End;


