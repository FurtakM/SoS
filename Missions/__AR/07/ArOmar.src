// Omar Ali Force's
Export Omar;
Export Function PrepareOmarAli;
var un;
begin

     uc_side := 5;
     uc_nation := 2;


     hc_gallery := 'sandar';
     hc_face_number := 6;
     hc_class := 11;
     hc_skills := [7, 5, 3, 6];
     hc_attr := [12, 11];
     hc_sex := sex_male;
     hc_name := 'Omar Ali';

     Omar := CreateHuman;

     uc_nation := 0;

     vc_chassis := 15;
     vc_control := control_rider;
     
     un := CreateVehicle;
     SetDir(un, 5);
     PlaceUnitXY(un, 216, 167, false);
     PlaceHumanInUnit(Omar, un);

End;

Export Ar5_Force;
Export Function PrepareSouthArForces;
var area, list, i, p;
begin
uc_side := 5;
uc_nation := 2;


    Ar5_Force := [];

    PrepareOmarAli;

    // Area
    list := AreaToList(ar_south_spawn, 0);
    // display_strings := list;
    p := 1;

    Case Difficulty of
    1,2: begin
       // 3x Zdalne Rakiety, 2x Wieze, 1x Radar
       // 2x Dziala, 1x Miotacz;

       for i = 1 to 2 do
           begin
           CreateRocketXY(5, 2, list[1][p], list[2][p], 5);
           p = p + 1;
           end;
       for i = 1 to 2 do
           begin
           CreateGunXY(5, 1, list[1][p], list[2][p], 5);
           p = p + 1;
           end;
       for i = 1 to 2 do
           begin
           CreateRemTowerXY(5, list[1][p], list[2][p], 5);
           p = p + 1;
           end;

           CreateRadarXY(5, 2, list[1][p], list[2][p], 5);
           p := p + 1;

           CreateFlameXY(5, 1, list[1][p], list[2][p], 5);
           p := p + 1;


           PlaceUnitXY(CreateHumanWithClass(class_mortar, [7,6,5][Difficulty]), list[1][p], list[2][p], false);
           p := p + 1;
           PlaceUnitXY(CreateHumanWithClass(class_scientistic, [7,6,5][Difficulty]), list[1][p], list[2][p], false);
           p := p + 1;
           PlaceUnitXY(CreateHumanWithClass(class_mechanic, [7,6,5][Difficulty]), list[1][p], list[2][p], false);
           p := p + 1;
        


       end;

      3: begin
       // 2x Zdalne Rakiety, 1x Wieze, 1x Radar
       // 2x Dziala, 1x Miotacz;

       for i = 1 to 2 do
           begin
           CreateRocketXY(5, 2, list[1][p], list[2][p], 5);
           p = p + 1;
           end;
       for i = 1 to 2 do
           begin
           CreateGunXY(5, 1, list[1][p], list[2][p], 5);
           p = p + 1;
           end;

           CreateRemTowerXY(5, list[p], list[p+1], 5);
           p = p + 1;
           

           CreateRadarXY(5, 2, list[1][p], list[2][p], 5);
           p := p + 1;

           CreateFlameXY(5, 1, list[1][p], list[2][p], 5);
           p := p + 1;

           PlaceUnitXY(CreateHumanWithClass(class_mortar, [7,6,5][Difficulty]), list[1][p], list[2][p], false);
           p := p + 1;
           PlaceUnitXY(CreateHumanWithClass(class_scientistic, [7,6,5][Difficulty]), list[1][p], list[2][p], false);
           p := p + 1;
           PlaceUnitXY(CreateHumanWithClass(class_mechanic, [7,6,5][Difficulty]), list[1][p], list[2][p], false);
           p := p + 1;
          


       end;

    End;

End;



Every 0$01 trigger FilterAllUnits([f_side, 5]) > 0 and omar_return = false do
var i, x, enemy, sci, radar, un, units, vehs, free_mechanic;
begin
enable;

       enemy := FilterAllUnits([f_enemy, 5]);

       if ar5_force > 0 and enemy > 0 then
          for i = 1 to ar5_force do
              begin

              if not HasTask(ar5_force[i]) and GetLives(ar5_force[i]) = 1000 then
                 ComAttackUnit(ar5_force[i], NearestUnitToUnit(enemy, ar5_force[i]));
              

              if UnitFilter(ar5_force, [f_weapon, ar_radar]) > 0 then
                 begin
                 radar := UnitFilter(ar5_force, [f_weapon, ar_radar])[1];


                 if FilterAllUnits([[f_side, 5], [f_weapon, ar_rocket_launcher]]) > 0 then
                 if GetDistUnits(radar, NearestUnitToUnit(UnitFilter(ar5_force, [f_weapon, ar_rocket_launcher]), radar)) <= 3 then
                    ComHold(radar)
                     else
                      ComMoveXY(radar, GetX(UnitFilter(ar5_force, [f_weapon, ar_rocket_launcher])[1]), GetY(UnitFilter(ar5_force, [f_weapon, ar_rocket_launcher])[1]));
                 end;


              end;


       for un in FilterAllUnits([[[f_side, 5], [f_class, class_mortar], [f_lives, 1000]]]) ^ FilterAllUnits([[[f_side, 5], [f_type, unit_vehicle], [f_lives, 1000]]]) diff FilterAllUnits([f_control, control_rider]) do
           begin

           if not un in ar5_force then
              ar5_force := ar5_force ^ un;

           if GetLives(un) <= 700 then
              ar5_force := Delete(ar5_force, un);

           end;

       vehs := FilterAllUnits([[[f_side, 5], [f_type, unit_vehicle], [f_not, [f_lives, 700]]]]);
       free_mechanic := FilterAllUnits([[[f_side, 5], [f_class, 3], [f_outside]]]);

       if vehs > 0 then
          begin

          for i = 1 to vehs do
              begin

              if GetDistUnitXY(vehs[i], 211, 161) > 8 then
                 ComMoveXY(vehs[i], 211, 161)
                  else
                   for x = 1 to free_mechanic do
                       ComRepairVehicle(free_mechanic[x], vehs[i]);

              end;

          end
           else
            begin
             if free_mechanic > 0 then
                for x = 1 to free_mechanic do
                    if GetDistUnitXY(free_mechanic[x], 214, 166) > 8 then
                       ComMoveXY(free_mechanic[x], 214, 166);
            end;


       units := FilterAllUnits([[[f_side, 5], [f_type, unit_human], [f_not, [f_lives, 700]]]]);
       sci   := FilterAllUnits([[[f_side, 5], [f_class, 4], [f_lives, 700]]]);
       
       if units = 0 and sci > 0 then
          for x = 1 to sci do
              if GetDistUnitXY(sci[x], 221, 159) > 6 then
                 ComMoveXY(sci[x], 221, 159);


       if units > 0 and sci > 0 then
          begin

          for i = 1 to units do
              begin

              if GetDistUnits(units[i], sci[1]) > 4 then
                 ComMoveXY(units[i], GetX(sci[1]), GetY(sci[1]))
                  else
                   for x = 1 to sci do
                       ComHeal(sci[x], units[i]);


              end;

          end;

End;


// Zdalne Sterowanie (5)
Every 0$01 trigger FilterAllUnits([f_side, 5]) > 0 do
var filter, cont, i;
begin
enable;

     filter := FilterAllUnits([[f_side, 5], [f_control, control_remote]]);
     cont := FilterAllUnits([[f_side, 5], [f_weapon, ar_control_tower]]);

     if filter > 0 and cont > 0 then
        begin

        for i = 1 to filter do
            begin
            if not IsControledBy(filter[i]) and IsOk(filter[i]) then
               if i <= 2 then
                  ComLinkTo(filter[i], cont[1])
                   else
                     ComLinkTo(filter[i], cont[2]);

            if GetLives(filter[i]) < 250 and IsControledBy(filter[i]) then
               ComUnLink(filter[i]);

            end;

        end;

End;




Every 0$01 trigger omar_return do
var i, c;
begin
enable;

if filterallunits([f_side, 5]) > 0 then
   for c in filterallunits([f_side, 5]) do
       ComMoveXY(c, 205, 168);

for i in FilterUnitsInArea(escape_area, [f_side, 5]) do
    RemoveUnit(i);

End;