// Events
On UnitDestroyed(un) do
begin

     if un = Louis then
        YouLost('lostl');

     if un = heike or un = omar then
        YouLost('lostho');

     if un in FilterAllUnits([[f_side, 2], [f_not, [f_type, unit_building]]]) then
        player_count := player_count + 1;

     if un in FilterAllUnits([f_side, 5]) then
        omar_count := omar_count + 1;

     if un in FilterAllUnits([f_side, 8]) then
        heike_count := heike_count + 1;

     if un in FilterAllUnits([f_side, 3]) then
        jaszyn_count := jaszyn_count + 1;

     if un = ru_main_dep then
        lenin_des := true;

     if un in FilterAllUnits([[f_side, 6], [f_type, unit_building]]) then
        begin

        if un in FilterAllUnits([f_btype, b_barracks]) then
           ru6_blist := ru6_blist ^ b_armoury
            else
             if un in FilterAllUnits([f_or, [f_btype, b_lab_full], [f_btype, b_lab_half]]) then
                ru6_blist := ru6_blist ^ b_lab
                 else
                  ru6_blist := ru6_blist ^ GetBType(un);

        ru6_blist := ru6_blist ^ GetX(un);
        ru6_blist := ru6_blist ^ GetY(un);
        ru6_blist := ru6_blist ^ GetDir(un);

        if un in FilterAllUnits([[f_or, [f_btype, b_bunker], [f_btype, b_turret]]]) then
           ru6_bweap := ru6_bweap ^ GetBWeapon(un);

        end;

     if un in FilterAllUnits([[f_side, 7], [f_type, unit_building]]) then
        begin

        if un in FilterAllUnits([f_btype, b_barracks]) then
           ru7_blist := ru7_blist ^ b_armoury
            else
             if un in FilterAllUnits([f_or, [f_btype, b_lab_full], [f_btype, b_lab_half]]) then
                ru7_blist := ru7_blist ^ b_lab
                 else
                  ru7_blist := ru7_blist ^ GetBType(un);

        ru7_blist := ru7_blist ^ GetX(un);
        ru7_blist := ru7_blist ^ GetY(un);
        ru7_blist := ru7_blist ^ GetDir(un);

        if un in FilterAllUnits([[f_or, [f_btype, b_bunker], [f_btype, b_turret]]]) then
           ru7_bweap := ru7_bweap ^ GetBWeapon(un);

        end;

     if un in FilterAllUnits([[f_side, 1], [f_type, unit_building]]) then
        begin

        if un in FilterAllUnits([f_btype, b_barracks]) then
           ru1_blist := ru1_blist ^ b_armoury
            else
             if un in FilterAllUnits([f_or, [f_btype, b_lab_full], [f_btype, b_lab_half]]) then
                ru1_blist := ru1_blist ^ b_lab
                 else
                  ru1_blist := ru1_blist ^ GetBType(un);

        ru1_blist := ru1_blist ^ GetX(un);
        ru1_blist := ru1_blist ^ GetY(un);
        ru1_blist := ru1_blist ^ GetDir(un);

        if un in FilterAllUnits([[f_or, [f_btype, b_bunker], [f_btype, b_turret]]]) then
           ru1_bweap := ru1_bweap ^ GetBWeapon(un);

        end;


     if un in FilterAllUnits([[f_side, 3], [f_type, unit_building]]) then
        begin

        if un in FilterAllUnits([f_btype, b_barracks]) then
           ru3_blist := ru3_blist ^ b_armoury
            else
             if un in FilterAllUnits([f_or, [f_btype, b_lab_full], [f_btype, b_lab_half]]) then
                ru3_blist := ru3_blist ^ b_lab
                 else
                  ru3_blist := ru3_blist ^ GetBType(un);

        ru3_blist := ru3_blist ^ GetX(un);
        ru3_blist := ru3_blist ^ GetY(un);
        ru3_blist := ru3_blist ^ GetDir(un);

        if un in FilterAllUnits([[f_or, [f_btype, b_bunker], [f_btype, b_turret]]]) then
           ru3_bweap := ru3_bweap ^ GetBWeapon(un);

        end;

End;


On WeaponPlaced(b, fac) do
begin

     if fac in ru6_fac then
        ru6_bweap := Delete(ru6_bweap, 1);

     if fac in ru7_fac then
        ru7_bweap := Delete(ru7_bweap, 1);

     if fac in ru1_fac then
        ru1_bweap := Delete(ru1_bweap, 1);

     if fac in ru3_fac then
        ru3_bweap := Delete(ru3_bweap, 1);

End;


On BuildingComplete(b) do
var i;
begin

     if GetSide(b) = 6 then
        for i = 1 to 4 do
            ru6_blist := Delete(ru6_blist, 1);

     if GetSide(b) = 7 then
        for i = 1 to 4 do
            ru7_blist := Delete(ru7_blist, 1);

     if GetSide(b) = 1 then
        for i = 1 to 4 do
            ru1_blist := Delete(ru1_blist, 1);

     if GetSide(b) = 3 then
        for i = 1 to 4 do
            ru3_blist := Delete(ru3_blist, 1);

     if GetSide(b) <> 2 and GetBType(b) in [b_armoury, b_depot] then
        ComUpgrade(b);

End;
