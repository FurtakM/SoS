// global function
// by SerpentSierp
Export Function CreateHumanWithClass(clas, lvl);
var skill_com, skill_eng, skill_mech, skill_sci, bonus;
begin

     hc_class := clas;

     // randomize lvl
        skill_com  := (lvl + Rand(-1, 1));
        skill_eng  := (lvl + Rand(-1, 1));
        skill_mech := (lvl + Rand(-1, 1));
        skill_sci  := (lvl + Rand(-1, 1));

     // add bonus level for class
        If clas = 1 or clas = 5 or clas = 8 or clas = 9 then
        bonus := [2,0,0,0];
        If clas = 2 then
        bonus := [0,2,0,0];
        If clas = 3 then
        bonus := [0,0,2,0];
        If clas = 4 then
        bonus := [0,0,0,2];
        If clas > 4 and not clas = 5 and not clas = 8 and not clas = 9 then
        bonus := [0,0,0,0];

     // set main skills
        hc_basic_skills := [Rand(0,2), Rand(0,2), Rand(0,2), Rand(0,2)];
        hc_skills := [skill_com + bonus[1], skill_eng + bonus[2], skill_mech + bonus[3], skill_sci + bonus[4] ];

     // other hc_
        hc_sex     := Rand(sex_male, sex_female); // random
        hc_gallery := ''; // random gall
        hc_attr    := [Rand(8,12), Rand(9,11)];
        hc_name    := '';
        { place for rest hc_'s }

     // final result
        result := CreateHuman;

End;


Export function PrepareNature(area, num1,num2,num3,num4);
var l,                     apeman, tiger, bird, horse;
begin


          uc_nation = nation_nature;
          uc_side = 0;

          l = 0;

          // Ma³py
          repeat
          begin
          uc_direction = Rand(0,5);
          hc_agressivity = Rand(-5, 0);
          hc_gallery = '';
          hc_class = class_apeman;
          hc_attr = [Rand(11,13),Rand(10,11)];
          hc_sex = sex_male;
          hc_skills = [Rand(0,2),0,0,0];

          apeman = CreateHuman;
          PlaceUnitArea(apeman, area, false);

          l = l + 1;
          end until l = num1;

          l = 0;

          // Tygrysy
          repeat
          begin
          hc_agressivity = Rand(0, 25);
          hc_class = class_tiger;
          hc_sex = sex_male;
          hc_gallery = 'sandnature';
          hc_face_number = 3;

          tiger = CreateHuman;
          PlaceUnitArea(tiger, area, false);

          l = l + 1;
          end until l = num2;

          l = 0;

          // Ptaki
          repeat
          begin
          hc_class = class_phororhacos;
          hc_gallery = 'sandnature';
          hc_face_number = 1;

          bird = CreateHuman;
          PlaceUnitAnywhere(bird, false);

          l = l + 1;
          end until l = num3;

          l = 0;

          // Konie
          repeat
          begin
          hc_class = 21;
          hc_gallery = 'sandnature';
          hc_face_number = 5;

          horse := CreateHuman;
          PlaceUnitArea(horse, area, false);

          l = l + 1;
          end until l = num4;


end;

// Weapon on towers
Export Function PlaceWeaponOnTowers(base, list);
var i, filter;
begin

     filter := FilterAllUnits([[[f_side, GetSide(base)], [f_or, [f_btype, b_bunker], [f_btype, b_turret]]]]);

     if filter > 0 then
        begin
        for i = 1 to filter do
            if GetBase(base) = GetBase(filter[i]) and GetBWeapon(filter[i]) = 0 then
               PlaceWeaponTurret(filter[i], list[Rand(1, list)]);
        end
         else
          result := false;

// Example: (depot ident, list of weapons)
// PlaceWeaponOnTowers(ru_east_dep, [ru_gatling_gun, ru_gun]);
End;



Export Function RandX(min_val, max_val, x);
var i;
begin

     for i = 1 to x do
         result := Rand(min_val, max_val);

End;


Export Function IsDriver(un);
begin

     if un in FilterAllUnits([f_driving]) then
        result := true
         else
          result := false;

End;


Export Function SayMen;
var filter;
begin
filter := FilterAllUnits([[f_side, 2], [f_sex, sex_male]]) diff Louis;
result := filter[1];
End;

Export Function SaySci;
var filter;
begin
filter := FilterAllUnits([[f_side, 2], [f_class, 4]]) diff Louis;
result := filter[1];
End;