Export f_baz, f_eng, f_sold, f_mech, f_sci, skills;
Export Function PrepareRussian;
var mis_level, depots, towers, factors, labs, barr,
    towers_emp, sources,
    time_add, time,
    i, j, b, un, veh, filter, x_y;
begin

     mis_level := [1,2,3][Difficulty]; // difficulty level

     // main
     skills  := [4,5,6][Difficulty]; // combat skills
     sources := [1000, 2000, 3000][Difficulty]; // russian crates

     // filter's
     depots := FilterAllUnits([[f_side, 3], [f_btype, b_depot], [f_or, [f_btype, b_warehouse]]]);


     // towers!!!
     Case Difficulty of
     1:  RemoveSide(1);
     2,3:SetSide(FilterAllUnits([f_side, 1]), 3);
     end;


     towers := FilterAllUnits([[f_side, 3], [f_btype, b_bunker]]); // tower filter
     factors:= FilterAllUnits([[f_side, 3], [f_btype, b_factory]]); // russian factor's
     labs   := FilterAllUnits([[f_side, 3], [f_btype, b_lab], [f_or, [f_btype, b_lab_full]]]); // russian lab's
     barr   := FilterAllUnits([[f_side, 3], [f_btype, b_barracks]]);

     // time
     time     := [12$30, 11$10, 10$25][Difficulty];
     time_add := [-0$30, -0$50, -1$05][Difficulty];

     // rest filter
     f_sold := [];
     f_baz  := [];
     f_eng  := [];
     f_mech := [];
     f_sci  := [];


     // set base name's
        SetBName(ru_base, 'molotov');


     // empty towers 
        towers_emp := FilterAllUnits([[f_side, 8], [f_btype, b_bunker]]);

        For i = 1 to towers_emp do
            begin
            SetSide(towers_emp[i], 3);
            end;
     // <----- end empty towers

     // place units
        uc_side := 3;
        uc_nation = nation_russian;

        // in towers
           For i in towers do
               begin

                    If IsInUnit(i) = 0 then
                       begin
                       PlaceHumanInUnit(CreateHumanWithClass(class_soldier, skills), i);
                       end;

               end;
        // <--- end towers

        // in barracks (bazzokers)
           For i in barr do
               begin

                    For j = 1 to (2*mis_level)+Rand(-1,0) do
                        begin
                        PlaceHumanInUnit(CreateHumanWithClass(class_bazooker, skills), i);
                        end;

               end;
        

        // breastwork
           x_y := [170, 81,  159, 67];

           For i = 1 to FilterAllUnits([[f_side, 3], [f_btype, b_breastwork]]) do
               begin            
               un := CreateHumanWithClass(class_bazooker, skills);
               PlaceUnitXY(un, x_y[i], x_y[i+1], false);                  
               ComEnterUnit(un, NearestUnitToUnit(FilterAllUnits([f_btype, b_breastwork]), un));
               end;

        // <--- end bazzokers

        for i = 1 to 2 do
            begin
            PlaceUnitArea(CreateHumanWithClass(4, skills), ru_scia, false);
            PlaceUnitArea(CreateHumanWithClass(1, skills), ru_scia, false);
            end;

        // engs
           For i = 1 to 6 + (mis_level - 1) do
               begin
               PlaceUnitArea(CreateHumanWithClass(class_engineer, skills), ru_spawn, false);
            // add to filter
               f_eng := FilterAllUnits([[f_side, 3], [f_class, 2]]);
            // enter depot
               ComEnterUnit(f_eng[i], NearestUnitToUnit(depots, f_eng[i]));
               end;

       filter := FilterAllUnits([[[f_side, 3], [f_type, unit_vehicle], [f_weapon, ru_rocket_launcher]]]);

       for i = 1 to filter do
           PlaceHumanInUnit(CreateHumanWithClass(3, skills), filter[i]);

End;



// Repair
Every 0$01 do
var un, filter, buildings, depots, i;
begin
Enable;

        filter := FilterAllUnits([[f_side, 3], [f_class, 2]]);
     buildings := FilterAllUnits([[[f_side, 3], [f_type, unit_building], [f_not, [f_lives, 1000]]]]);
        depots := [ru_base, ru_base2];


     If buildings > 0 then
        begin

        For i = 1 to filter do
            begin

            if GetLives(filter[i]) > 990 then
            begin

            if IsInUnit(filter[i]) then
            ComExitBuilding(filter[i])
             else
               if not HasTask(filter[i]) then
                  ComRepairBuilding(filter[i], buildings[1]);
             end else
             if GetLives(filter[i]) <= 750 then
                ComEnterUnit(filter[i], ru_base);
            end;


        end;

     If buildings = 0 then
        begin

        For i = 1 to filter do
        begin
        if not HasTask(filter[i]) and not IsInUnit(filter[i]) then
           ComEnterUnit(filter[i], depots[Rand(1,2)]);
        end;

        end;

End;


// soldier
Every 0$01 do
var un, filter, towers, barracks;
begin
enable;

       filter := FilterAllUnits([[f_side, 3], [f_class, 1], [f_not, [f_inside]]]);
       towers := FilterAllUnits([[f_side, 3], [f_btype, b_bunker], [f_not, [f_occupied]]]);
       barracks := FilterAllUnits([[f_side, 3], [f_btype, b_barracks]]);

       if filter > 0 then
          begin
          if towers > 0 then
             ComEnterUnit(filter[1], towers[1])
              else
              if not HasTask(filter[1]) then
                 ComEnterUnit(filter[1], barracks[Rand(1, barracks)]);
          end;
End;



// FOREST ====================> <========================
Export Function TrapInForest;
var un, ape, filter, enemy, i;
begin



     // ape's
        For i = 1 to 4 + [1,4,6][Difficulty] do
            begin
             CreateApemanSoldierArea(7, forest_trap);
            end;

         uc_side   := 7;
         uc_nation := nation_russian;


     // sci
        For i = 1 to 2 do
            begin
             hc_class = 4;
             hc_skills = [Rand(0,3), Rand(0,3), Rand(0,3), Rand(3,6)];
             hc_sex = Rand(sex_male, sex_female);
             hc_gallery = '';

             un = CreateHuman;
             PlaceUnitArea(un, forest_trap, false);
            end;

     // attack
        filter := FilterAllUnits([[f_side, 7], [f_class, class_apeman_soldier]]);
         enemy := FilterAllUnits([f_side, 2]);

        For un in filter do
            begin
             ComAttackUnit(un, NearestUnitToUnit(enemy, un));
            end;

End;



// <=========Attack=========>
Export Function SpawnVehs(side, x, area);
var i, veh;
begin

     uc_side := side;
     uc_nation := nation_russian;

     For i = 1 to x do
         begin
         vc_chassis := [ru_medium_tracked, ru_heavy_wheeled][Rand(1,2)];
         vc_engine := engine_combustion;
         vc_control := control_manual;
         vc_weapon := [ru_gun, ru_gatling_gun, ru_rocket_launcher][Rand(1,3)];

         veh := CreateVehicle;
         PlaceUnitArea(veh, area, false);

         PlaceHumanInUnit(CreateHumanWithClass(3, skills), veh);

         result := veh;
         end;

End;


// patrol
Every 1$03+0$2 trigger spoted = false do
var veh;
begin
enable;

       veh := SpawnVehs(3, 1, Rand(at2_area, at3_area));
       
       AddComMoveToArea(veh, p1);
       AddComMoveToArea(veh, p2);
       AddComMoveToArea(veh, p3);
       AddComMoveToArea(veh, p4);
       AddComMoveToArea(veh, p6);

       Repeat
        Wait(0$01);
       Until IsInArea(veh, p5);

       RemoveUnit(veh);

End;



Every 0$01 trigger clock >= time_limit do
var i, veh;
begin

     for i = 1 to [Difficulty] do
     begin
     veh := SpawnVehs(3, 1, start_area);
     ComAttackUnit(veh, NearestUnitToUnit(filterallunits([f_side, 2]), veh));
     end;

End;


