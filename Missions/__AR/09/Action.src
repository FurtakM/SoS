Export Point;
Export Function Action;
var p, i;
begin
InGameOn;

      p := LoadVariable('var_rus', 0);
      Point := p;

      // poscig
         if p = 0 then
            begin
            Cont := 1;
            InGameOn;
            CenterNowOnUnits(Louis);
            Wait(0$02);
            Say(UnitFilter(ar_pep, [f_sex, sex_male])[2], 'DRu');
            SayNoName(Louis, 'DLRu1');
            Say(Louis, 'DLRu2');
            Send_Cargo;
            Wait(0$01);
            InGameOff;
            SaveForQuickRestart;
            ChangeMissionObjectives('DEF');
            Wait(0$57);
            Send_Attack;
            end
             else
              begin
              InGameOn;
              CenterNowOnUnits(Louis);
              Wait(0$02);
              Say(UnitFilter(ar_pep, [f_sex, sex_male])[2], 'DNonRu');
              Say(Louis, 'DLNonRu');  

              for i = 1 to ar_pep do
                  ComMoveXY(ar_pep[i], 89, 2);

              Wait(0$03.7);
              ChangeMap(1, '%_cont');
              end;

End;


Every 0$01 trigger GetDistUnits(Louis, FilterAllUnits([f_type, unit_building])[1]) <= 13 do
begin
Say(Louis, 'DL-build');
CenterNowOnXY(84, 15);
SetSide(FilterAllUnits([f_type, unit_building]), 2);
End;


// single dialogs
Every 0$01 trigger counter >= 3 do
Say(Rolf, 'DR-1');

Every 0$01 trigger counter >= 7 do
Say(Mike, 'DR-2');

Every 0$01 trigger counter >= 11 do
Say(Nicolas, 'DR-3');

Every 0$01 do
begin
enable;

     if FilterUnitsInArea(exit_area, [f_side, 5]) then
        RemoveUnit(FilterUnitsInArea(exit_area, [f_side, 5])[1]);

     if FilterUnitsInArea(exit_area, [f_side, 3]) then
        YouLost('enemy_area');

     if IsDead(Louis) then
        YouLost('LouisDead');

     if FilterAllUnits([[f_side, 3], [f_class, class_bazooker]]) then
        IntBazooka(FilterAllUnits([[f_side, 3], [f_class, class_bazooker]]), FilterAllUnits([f_side, 2]));

     if FilterAllUnits([f_side, 3]) > 0 then
        if music_nat <> 3 then
           music_nat := 3;
end;


Export Function Send_Cargo;
var i, cargo, cargos, chassis, names, p, k;
begin
cargo := FilterAllUnits([f_or, [f_weapon, ru_cargo_bay], [f_weapon, ar_cargo_bay]]);
cargos := ['car_1', 'car_2', 'car_3', 'car_4'];
chassis := [];
names  := ['Rolf', 'Jenna', 'Nicolas', 'Rick', 'Mike', 'Gali', 'a_08', 'b_08', 'c_08', 'd_08', 'e_08', 'f_08', 'g_08', 'h_08', 'i_08', 'j_08', 'k_08', 'l_08', 'm_08', 'n_08', 'o_08', 'p_08'];
p = 1;
                
for i = 1 to cargo do
    begin
    SetSide(cargo[i], 5);
    SetSide(IsDrivenBy(cargo[i]), 5);
    ComMoveXY(IsDrivenBy(cargo[i]), 89, 2);
    SaveCharacters(IsDrivenBy(cargo[i]), cargos[i]);
    SaveVariable(GetTag(IsDrivenBy(cargo[i])), 'host' & p);
    // display_strings := GetTag(IsDrivenBy(cargo[i]));
    p = p + 1;

    chassis := chassis ^ GetChassis(cargo[i]);
    end;

    SaveVariable(chassis, 'cargo_chassis');

End;


Every 0$03 trigger Point = 0 and FilterAllUnits([f_side, 3]) = 0 and Cont <= 0 do
var names, filter, i, tab;
begin
DialogueOn;

if IsLive(Rolf) then
   Say(Rolf, 'DNonRu')
    else
     Say(FilterAllUnits([[f_side, 2], [f_type, unit_human]])[1] diff Louis, 'DNonRu');

Say(Louis, 'DLNonRu');
DialogueOff;

filter := FilterAllUnits([[f_side, 2], [f_type, unit_vehicle], [f_not, [f_empty]]]);
tab := [];

        for i = 1 to filter do
            begin
            tab := tab ^ [GetChassis(filter[i]), GetEngine(filter[i]), GetControl(filter[i]), GetWeapon(filter[i])];
            end;


     // delete old variable
        DeleteVariable('unit_vehs');

        SaveVariable(tab, 'unit_vehs');

        SaveCharacters(Louis, 'Louis');

        if IsLive(Rolf) then
           begin
           //for i = 1 to 4 do
               //AddExperience(Rolf, i, 60000);

           SaveCharacters(Rolf, 'Rolf_09');
           end;

        if IsLive(Jenna) then
           begin
           //for i = 1 to 4 do
               //AddExperience(Jenna, i, 15000);

           SaveCharacters(Jenna, 'Jenna_09');
           end;

        if IsLive(Rick) then
           begin
           //for i = 1 to 4 do
               //AddExperience(Rick, i, 15000);

           SaveCharacters(Rick, 'Rick_09');
           end;

        if IsLive(Mike) then
           begin
           //for i = 1 to 4 do
               //AddExperience(Mike, i, 60000);

           SaveCharacters(Mike, 'Mike_09');
           end;

        if IsLive(Nicolas) then
           begin
           //for i = 1 to 4 do
               //AddExperience(Nicolas, i, 60000);

           SaveCharacters(Nicolas, 'Nicolas_09');
           end;

        if IsLive(Gali) then
           begin
           //for i = 1 to 4 do
               //AddExperience(Gali, i, 60000);

           SaveCharacters(Gali, 'Gali_09');
           end;

        SetSide([Louis, Rolf, Gali, Nicolas, Jenna, Rick, Mike], 5);

        filter := FilterAllUnits([[f_side, 2], [f_type, unit_human]]);
        names  := ['a_09', 'b_09', 'c_09', 'd_09', 'e_09', 'f_09', 'g_09', 'h_09', 'i_09', 'j_09', 'k_09', 'l_09', 'm_09', 'n_09', 'o_09', 'p_09'];

        for i = 1 to filter do
            if IsLive(filter[i]) and GetClass(filter[i]) < 11 then
               SaveCharacters(filter[i], names[i]);

        ChangeMap(1, '%_cont');
End;