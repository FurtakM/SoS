// END_MISSION
Export Function END_MISSION;
var names, filter, i, tab, name;
begin

         tab := [];

         filter := FilterAllUnits([[f_side, 2], [f_type, unit_vehicle], [f_not, [f_empty]]]);

         {
         for i = 1 to filter do
         begin
         tab := tab ^ [GetChassis(filter[i]), GetEngine(filter[i]), GetControl(filter[i]), GetWeapon(filter[i])];
         end;

         SaveVariable(tab, 'unit_vehs'); }

     // MEDALS
        if FilterAllUnits([[f_side, 2], [f_weapon, ar_cargo_bay]]) >= 2 then
           AddMedal('med1', 1)
            else AddMedal('med1', -1);
        if dday_event then
           AddMedal('med2', 1)
            else AddMedal('med2', -1);
        if prison_event then
           AddMedal('med3', 1)
            else AddMedal('med3', -1);

        GiveMedals('MAIN');

     // save
        RewardPeople(FilterAllUnits([[f_side, 2], [f_type, unit_human]]));
        SaveCharacters(Louis, 'Louis');

        if Rolf then
           begin
           SaveCharacters(Rolf, 'Rolf_09c');
           end;

        if Jenna then
           begin
           SaveCharacters(Jenna, 'Jenna_09c');
           end;

        if Rick then
           begin
           SaveCharacters(Rick, 'Rick_09c');
           end;

        if Mike then
           begin
           SaveCharacters(Mike, 'Mike_09c');
           end;

        if IsLive(Nicolas) then
           begin
           SaveCharacters(Nicolas, 'Nicolas_09c');
           end;

        if Gali then
           begin
           SaveCharacters(Gali, 'Gali_09c');
           end;

        for i = 1 to 2 do
            begin
              case GetTag(ar_pep2[i]) of
                  1000     : SaveCharacters(ar_pep2[i], 'Rolf_09c');
                  1004     : SaveCharacters(ar_pep2[i], 'Jenna_09c');
                  1002     : SaveCharacters(ar_pep2[i], 'Mike_09c');
                  1001     : SaveCharacters(ar_pep2[i], 'Gali_09c');
                  1005     : SaveCharacters(ar_pep2[i], 'Rick_09c');
                  1003     : SaveCharacters(ar_pep2[i], 'Nicolas_09c');
              end;
            end;

        SetSide([Louis, Rolf, Gali, Nicolas, Jenna, Rick, Mike], 5);

        RemoveUnit(ar_pep2[1]);
        RemoveUnit(ar_pep2[2]);

        filter := FilterAllUnits([[f_side, 2], [f_type, unit_human]]) diff ar_pep2;
        names  := ['a_09c', 'b_09c', 'c_09c', 'd_09c', 'e_09c', 'f_09c', 'g_09c', 'h_09c', 'i_09c', 'j_09c', 'k_09c', 'l_09c', 'm_09c', 'n_09c', 'o_09c', 'p_09c'];

        for i = 1 to filter do
            if IsLive(filter[i]) and GetClass(filter[i]) < 11 then
               SaveCharacters(filter[i], names[i]);


        YouWin;
        SetNextMission(1);

End;