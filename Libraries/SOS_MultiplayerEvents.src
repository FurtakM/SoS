Export function Multiplayer_UnitDestroyed(un);
var i, ape, tag, class, area, nation, side, tmp;
begin
if GetType(un) = unit_vehicle then
   exit;

side := GetSide(un);

if mpGameType = GameTypeSurvival then
   if GetBType(un) in [b_depot, b_warehouse] then
      begin
      for i in FilterAllUnits([[f_side, side], [f_or, [f_type, unit_human], [f_control, control_computer]]]) do
          KillUnit(i);
      end;

if GetClass(un) in [class_apeman, class_apeman_kamikaze, class_apeman_soldier, class_apeman_engineer] or GetControl(un) = control_apeman then
   begin
   tag := 0;

   for i := 1 to 8 do
       if un in mpApePosIndex[i] then
          begin
          tag := i;
          break;
          end;

   if not tag then
      exit;

   area := mpApemansArea[mpSidePositions[tag]];

   if not area then
      exit;

   wait(7$00 + (((un mod 5) + 1) * 0$20));

   repeat
    wait(10);
   until not mpBlockRespThread;

   mpBlockRespThread := true;

   PrepareApeman(0);
   ape := CreateHuman;
   mpApePosIndex := Replace(mpApePosIndex, tag, Join(mpApePosIndex[tag], ape));
   PlaceUnitArea(ape, area, false);

   wait(10);

   mpBlockRespThread := false;
   end;

if GetType(un) = unit_human and GetNation(un) > nation_nature then
   begin
   if not mpRespawn then
      exit;

   if not MultiplayerSideAlive(side) and not HasPowerByGameType(mpGameType, side) then
      exit;

   side := GetSide(un);
   nation := GetNation(un);
   class := GetClass(un);

   if class > 4 then
      class := 1;   
   
   repeat
    wait(10);
   until not mpBlockRespThread;

   mpBlockRespThread := true;

   uc_side := side;
   uc_nation := nation;

   PrepareHuman(false, class, 2);

   un := CreateHuman;       

   mpRespawnPull := Replace(mpRespawnPull, side, Replace(mpRespawnPull[side], mpRespawnPull[side] + 1, un));

   wait(10);

   mpBlockRespThread := false;
   end;
End;

Export function Multiplayer_BuildingComplete(building);
begin
if GetBType(building) in [b_depot, b_warehouse] then
   SetBName(building, '@' & GetSide(building));
End;

Export function Multiplayer_BuildingCaptured(building, oldSide, unit);
var i;
begin
if mpGameType = GameTypeSurvival and GetBType(building) in [b_depot, b_warehouse] then
   begin
   SetSide(building, oldSide);
   KillUnit(building);

   for i in FilterAllUnits([[f_side, oldSide], [f_type, unit_human]]) do
       KillUnit(i);

   exit;
   end;

if GetBType(building) in [b_depot, b_warehouse] then
   SetBName(building, '@' & GetSide(building));
End;

Export function Multiplayer_OilExtracted(building, side, base, amount);
var i, value;
begin
if mpGameType <> GameTypeFamine then
   exit;

for i := 1 to mpGlobalOilDeposits do
    begin
    if HexInfo(mpGlobalOilDeposits[i][1], mpGlobalOilDeposits[i][2]) = building then
       begin
       value := mpGlobalOilDeposits[i][3]; 
       value := Dec(value);

       mpGlobalOilDeposits := Replace(mpGlobalOilDeposits, i, Replace(mpGlobalOilDeposits[i], 3, value));
       SetUnitDisplayNumber(building, value);

       if value = 0 then
          begin
          RemoveDepositXY(mpGlobalOilDeposits[i][1], mpGlobalOilDeposits[i][2]);
          KillUnit(building);
          exit;
          end;
       end;
    end;
End;

Export function Multiplayer_SibExtracted(building, side, base, amount);
var i, value;
begin
if mpGameType <> GameTypeFamine then
   exit;

for i := 1 to mpGlobalSibDeposits do
    begin
    if HexInfo(mpGlobalSibDeposits[i][1], mpGlobalSibDeposits[i][2]) = building then
       begin
       value := mpGlobalSibDeposits[i][3];
       value := Dec(value);

       mpGlobalSibDeposits := Replace(mpGlobalSibDeposits, i, Replace(mpGlobalSibDeposits[i], 3, value));
       SetUnitDisplayNumber(building, value);

       if value = 0 then
          begin
          RemoveDepositXY(mpGlobalSibDeposits[i][1], mpGlobalSibDeposits[i][2]);
          KillUnit(building);
          exit;
          end;
       end;
    end;
End;


