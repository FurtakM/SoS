// Global module for EcoWar mode
Export ecoSide, ecoNation, ecoPeopleAmount, ecoStartPoint, ecoCratesDrop,
       ecoCratesDropXY, ecoCratesDropAllow, ecoAttacksAllow, ecoEventsAllow,
       ecoAttacksArea, ecoEventsList;
Export Function InitEcoMode(startPoint, cratesDropXY, attacksArea);
var i, tmp, side, nation, peopleAmount, resourcesAmount;
begin
ecoStartPoint := startPoint;
CenterNowOnXY(ecoStartPoint[1], ecoStartPoint[2]);

ecoCratesDropXY := cratesDropXY;
ecoAttacksArea := attacksArea;

if debug then
   begin
   side := 1;
   nation := 1;
   peopleAmount := 15;
   resourcesAmount := 2;
   ecoCratesDrop := 3;
   end
else
   begin
   side := GetMultiplayerSetting(0);
   nation := GetMultiplayerSetting(1);
   peopleAmount := [6, 9, 12, 15, 18, 21, 24][GetMultiplayerSetting(2)];
   resourcesAmount := GetMultiplayerSetting(3);
   ecoCratesDrop := GetMultiplayerSetting(4);
   end;

ecoCratesDropAllow := true;
ecoEventsAllow := false;
ecoAttacksAllow := false;

ecoSide := side;
your_side := side;
ChangeSideFog(1, side);

PlaceSeeing(1, 1, side, -32793);
RemoveSeeing(1, 1, side);

ecoNation := nation;
ecoPeopleAmount := peopleAmount;

for i = 1 to resourcesAmount * 5 do
    CreateResourcesXYR(mat_cans, 5, ecoStartPoint[1], ecoStartPoint[2], 6, false);

uc_side := side;
uc_nation := nation;

hc_importance := 100;
PrepareHuman(false, 1, 4);

if side = 1 and nation = 1 then
   begin
   hc_name := 'John Macmilan';
   hc_gallery := 'us';
   hc_face_number := 5;
   hc_sex := sex_male;
   end;

if side = 2 and nation = 2 then
   begin
   hc_name := 'Heike Steyer';
   hc_gallery := 'sandar';
   hc_face_number := 14;
   hc_sex := sex_female;
   end;

if side = 6 and nation = 3 then
   begin
   PrepareHuman(false, 3, 4);
   hc_name := 'Yuri I. Burlak';
   hc_gallery := 'ru';
   hc_face_number := 1;
   hc_sex := sex_male;     
   end;

if side = 4 and nation = 1 then
   begin
   hc_name := 'Arthur Powell';
   hc_gallery := 'us';
   hc_face_number := 7;
   hc_sex := sex_male;
   end;

if side = 3 and nation = 3 then
   begin
   hc_name := 'Mjr. Platonov';
   hc_gallery := 'ru';
   hc_face_number := 60;
   hc_sex := sex_male;
   end;

if side = 7 and nation = 1 then
   begin
   PrepareHuman(false, 4, 4);
   hc_name := 'Peter Roth';
   hc_gallery := 'us';
   hc_face_number := 22;
   hc_sex := sex_male;
   end;

if side = 7 and nation = 3 then
   begin
   PrepareHuman(false, 4, 4);
   hc_name := 'Prof. Gossudarov';
   hc_gallery := 'ru';
   hc_face_number := 61;
   hc_sex := sex_male;
   end;

if side = 8 and nation = 1 then
   begin
   hc_name := 'Ron Harisson';
   hc_gallery := 'us';
   hc_face_number := 6;
   hc_sex := sex_male;
   end;

if side = 8 and nation = 2 then
   begin
   hc_name := 'Louis Schulz';
   hc_gallery := 'sandar';
   hc_face_number := 1;
   hc_sex := sex_male;
   end;

PlaceUnitXYR(CreateHuman, ecoStartPoint[1], ecoStartPoint[2], 12, false);

InitHc_All();

for i = 1 to peopleAmount - 1 do
    begin
    PrepareHuman(false, i mod 4 + 1, 3);
    tmp := Replace(tmp, tmp + 1, CreateHuman);
    PlaceUnitXYR(tmp[tmp], ecoStartPoint[1], ecoStartPoint[2], 12, false);
    end;
End;

Every 0$1 trigger ecoCratesDrop and ecoCratesDropXY do
var time, xy;
begin
time := [0$20, 0$10, 0$05][ecoCratesDrop];

while true do
      begin
      wait(time);

      if not ecoCratesDropAllow then
         continue;

      time := time + 0$2;

      if time > 0$40 then
         time := [0$20, 0$10, 0$05][ecoCratesDrop];

      xy := ecoCratesDropXY[rand(1, ecoCratesDropXY)];
      CreateCratesXYR(rand(1, 5), xy[1], xy[2], 14, true);
      end;
End;

Every 0$1 trigger ecoAttacksArea and ecoAttacksAllow do
var time, area, tmp, i, xy, veh, dir, enemySide, waveBonus;
begin
time := 3$00;
enemySide := [3, 9][rand(1, 2)];
waveBonus := 0;

if ecoSide = enemySide then
   enemySide := 1;

while true do
      begin
      wait(time);

      if not ecoAttacksAllow then
         continue;

      waveBonus := waveBonus + 2;

      if waveBonus > 20 then
         waveBonus := 20;

      area := ecoAttacksArea[rand(1, ecoAttacksArea)];
      tmp := AreaToList(area, 0);  
      dir := GetDirFromHex(tmp[1][1], tmp[2][1], ecoStartPoint[1], ecoStartPoint[2]);
      xy := PointBetweenXY(tmp[1][1], tmp[2][1], ecoStartPoint[1], ecoStartPoint[2]);

      tmp := [];

      for i := 1 to 6 + waveBonus do
          begin
          uc_side := enemySide;
          uc_nation := rand(1, 3);

          case uc_nation of
               1: PrepareVehicle(us_morphling, engine_siberite, control_computer, [us_heavy_gun, us_rocket_launcher][rand(1, 2)], 100);
               2: PrepareVehicle(ar_half_tracked, engine_siberite, control_apeman, [ar_gun, ar_rocket_launcher, ar_selfpropelled_bomb][rand(1, 3)], 100);
               3: PrepareVehicle(ru_heavy_tracked, engine_siberite, control_computer, [ru_heavy_gun, ru_rocket][rand(1, 2)], 100);
               end;

          veh := CreateVehicle;
          SetDir(veh, dir);
          PlaceUnitArea(veh, area, false);

          tmp := Replace(tmp, tmp + 1, veh);

          if HexInfo(xy[1], xy[2]) = 0 then
             ComMoveXY(veh, xy[1], xy[2]);

          wait(0$0.5);
          end;

      if tmp then
         begin
         repeat
          wait(0$2);

          for i in tmp do
              begin
              if IsDead(i) or not IsPlaced(i) or GetSide(i) <> enemySide then
                 tmp := tmp diff i
              else
                 ComAttackUnit(i, NearestUnitToUnit(FilterAllUnits([f_side, ecoSide]), i));
              end;
         until not tmp;
         end;
      end;
End;

Every 0$1 trigger ecoEventsAllow do
var time, xy;
begin
time := rand(1$00, 10$00);

while true do
      begin
      wait(time);

      if not ecoEventsAllow then
         continue;

      EcoEvent();
      end;
End;

Export Function EcoEvent();
var event, tmp, i;
begin
event := rand(1, 5);

case event of
     1: begin
        tmp := FilterAllUnits([f_type, unit_building]) diff FilterAllUnits([f_or, [f_btype, b_depot], [f_btype, b_warehouse]]);

        if tmp then
           DestroyUnit(tmp[rand(1, tmp)]);
        end;
     2: begin
        uc_side := ecoSide;
        uc_nation := ecoNation;

        PrepareHuman(false, rand(1, 4), 8);
        PlaceUnitAnyWhere(CreateHuman, true);
        end;
     3: begin
        tmp := FilterAllUnits([f_type, unit_vehicle]);

        if tmp then
           DestroyUnit(tmp[rand(1, tmp)]);
        end;
     4: begin
        tmp := FilterAllUnits([f_type, unit_human]);

        if tmp then
           SetLives(tmp[rand(1, tmp)], 190);
        end;
     5: begin

        end;
     end;
End;

Export Function EcoEnableAllTechs();
var i;
begin
for i := 1 to 100 do
    SetTech(i, ecoSide, state_researched);
End;

On CustomCommand(p1, p2, p3, p4, p5, p6) do
begin
if p2 = 102 then
   begin
   case p3 of
        1: ecoEventsAllow := Negate(ecoEventsAllow);
        2: ecoAttacksAllow := Negate(ecoAttacksAllow);
        3: ecoCratesDropAllow := Negate(ecoCratesDropAllow);
        4: EcoEnableAllTechs();
        5..8: begin
              uc_side := ecoSide;
              uc_nation := ecoNation;

              PrepareHuman(false, p3 - 4, 4);
              PlaceUnitXYR(CreateHuman, ecoStartPoint[1], ecoStartPoint[2], 12, true);
              end;
        end;
   end
else
   SOS_CustomCommand(p1, p2, p3, p4, p5, p6);
End;

On MapStart(p) do
begin
if gameType = 1 then
   ToLua('SKIRMISH_GAME_TYPE = 1')
else
   ToLua('SKIRMISH_GAME_TYPE = 0');

SOS_MapStart();
End;